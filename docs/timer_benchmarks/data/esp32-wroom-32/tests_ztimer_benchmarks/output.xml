<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 15:54:28.531" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.108" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:54:29.116" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:54:30.166" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:54:29.107" endtime="20201030 15:54:30.168"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.173" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201030 15:54:30.170" endtime="20201030 15:54:31.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.106" endtime="20201030 15:54:31.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:31.180" endtime="20201030 15:54:31.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.177" endtime="20201030 15:54:31.402"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.415" endtime="20201030 15:54:31.435"></status>
</kw>
<msg timestamp="20201030 15:54:31.436" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.414" endtime="20201030 15:54:31.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.438" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.437" endtime="20201030 15:54:31.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.441" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:31.439" endtime="20201030 15:54:31.442"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:31.411" endtime="20201030 15:54:31.442"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:31.409" endtime="20201030 15:54:31.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.408" endtime="20201030 15:54:31.443"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:31.448" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:31.447" endtime="20201030 15:54:31.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.444" endtime="20201030 15:54:31.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.407" endtime="20201030 15:54:31.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.406" endtime="20201030 15:54:31.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.450" endtime="20201030 15:54:31.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.405" endtime="20201030 15:54:31.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.452" endtime="20201030 15:54:31.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.403" endtime="20201030 15:54:31.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.104" endtime="20201030 15:54:31.455"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:31.469" endtime="20201030 15:54:31.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.467" endtime="20201030 15:54:31.489"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.502" endtime="20201030 15:54:31.521"></status>
</kw>
<msg timestamp="20201030 15:54:31.521" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.501" endtime="20201030 15:54:31.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.524" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.522" endtime="20201030 15:54:31.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.527" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:31.525" endtime="20201030 15:54:31.527"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:31.498" endtime="20201030 15:54:31.528"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:31.496" endtime="20201030 15:54:31.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.494" endtime="20201030 15:54:31.529"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:31.532" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:31.532" endtime="20201030 15:54:31.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.529" endtime="20201030 15:54:31.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.493" endtime="20201030 15:54:31.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.493" endtime="20201030 15:54:31.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.534" endtime="20201030 15:54:31.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.491" endtime="20201030 15:54:31.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.490" endtime="20201030 15:54:31.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.466" endtime="20201030 15:54:31.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.544" endtime="20201030 15:54:31.556"></status>
</kw>
<msg timestamp="20201030 15:54:31.557" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.542" endtime="20201030 15:54:31.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.559" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.558" endtime="20201030 15:54:31.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.560" endtime="20201030 15:54:31.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.539" endtime="20201030 15:54:31.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.537" endtime="20201030 15:54:31.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.567" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 15:54:31.566" endtime="20201030 15:54:31.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.569" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201030 15:54:31.568" endtime="20201030 15:54:31.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.563" endtime="20201030 15:54:31.570"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:31.455" endtime="20201030 15:54:31.570" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:54:28.646" endtime="20201030 15:54:31.572"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.624" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:54:31.634" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:54:32.634" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:54:31.623" endtime="20201030 15:54:32.635"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.637" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201030 15:54:32.636" endtime="20201030 15:54:33.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.621" endtime="20201030 15:54:33.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:33.641" endtime="20201030 15:54:33.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.639" endtime="20201030 15:54:33.864"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.876" endtime="20201030 15:54:33.896"></status>
</kw>
<msg timestamp="20201030 15:54:33.897" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.875" endtime="20201030 15:54:33.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.899" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.898" endtime="20201030 15:54:33.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.902" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:33.900" endtime="20201030 15:54:33.903"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:33.872" endtime="20201030 15:54:33.903"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:33.870" endtime="20201030 15:54:33.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.869" endtime="20201030 15:54:33.904"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:33.908" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:33.907" endtime="20201030 15:54:33.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.905" endtime="20201030 15:54:33.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.868" endtime="20201030 15:54:33.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.867" endtime="20201030 15:54:33.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.910" endtime="20201030 15:54:33.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.866" endtime="20201030 15:54:33.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.912" endtime="20201030 15:54:33.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.865" endtime="20201030 15:54:33.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.620" endtime="20201030 15:54:33.915"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:33.921" endtime="20201030 15:54:33.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.919" endtime="20201030 15:54:33.941"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.954" endtime="20201030 15:54:33.971"></status>
</kw>
<msg timestamp="20201030 15:54:33.971" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.953" endtime="20201030 15:54:33.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.974" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.973" endtime="20201030 15:54:33.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.977" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:33.975" endtime="20201030 15:54:33.978"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:33.950" endtime="20201030 15:54:33.978"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:33.948" endtime="20201030 15:54:33.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.946" endtime="20201030 15:54:33.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:33.983" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:33.982" endtime="20201030 15:54:33.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.980" endtime="20201030 15:54:33.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.946" endtime="20201030 15:54:33.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.945" endtime="20201030 15:54:33.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.985" endtime="20201030 15:54:33.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.944" endtime="20201030 15:54:33.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.942" endtime="20201030 15:54:33.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.918" endtime="20201030 15:54:33.987"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.996" endtime="20201030 15:54:34.012"></status>
</kw>
<msg timestamp="20201030 15:54:34.012" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.994" endtime="20201030 15:54:34.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.015" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.013" endtime="20201030 15:54:34.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.016" endtime="20201030 15:54:34.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.992" endtime="20201030 15:54:34.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.990" endtime="20201030 15:54:34.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.025" endtime="20201030 15:54:34.314"></status>
</kw>
<msg timestamp="20201030 15:54:34.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064528153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064536931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.023" endtime="20201030 15:54:34.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064528153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064536931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.317" endtime="20201030 15:54:34.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.322" endtime="20201030 15:54:34.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.021" endtime="20201030 15:54:34.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.019" endtime="20201030 15:54:34.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:34.328" level="INFO">${RESULT} = [{'diff': 8.778000000000952e-06}, {'diff': 8.52800000000764e-06}, {'diff': 1.0319999999994223e-05}, {'diff': 6.388999999995537e-06}, {'diff': 5.277999999997451e-06}, {'diff': 6.582999999990569e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:34.325" endtime="20201030 15:54:34.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:34.332" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.778000000000952e-06, 8.52800000000764e-06, 1.0319999999994223e-05, 6.388999999995537e-06, 5.277999999997451e-06, 6.582999999990569e-06, 4.596999999995077e-06, 1.0916999999999177e-05, 7.707...</msg>
<status status="PASS" starttime="20201030 15:54:34.329" endtime="20201030 15:54:34.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.336" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:34.335" endtime="20201030 15:54:34.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.338" level="INFO">VALUE: [8.778000000000952e-06, 8.52800000000764e-06, 1.0319999999994223e-05, 6.388999999995537e-06, 5.277999999997451e-06, 6.582999999990569e-06, 4.596999999995077e-06, 1.0916999999999177e-05, 7.707999999995163e-06, 8.722000000002672e-06, 6.749999999999812e-06, 9.833000000000758e-06, 9.958000000004352e-06, 7.332999999998258e-06, 6.08400000000342e-06, 7.0280000000061404e-06, 7.957999999988474e-06, 7.2230000000006456e-06, 7.6109999999907085e-06, 4.569999999995411e-06, 8.596999999999078e-06, 7.708000000009041e-06, 1.0346999999993889e-05, 9.291999999994083e-06, 8.23600000000868e-06]</msg>
<status status="PASS" starttime="20201030 15:54:34.337" endtime="20201030 15:54:34.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.332" endtime="20201030 15:54:34.339"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:34.342" endtime="20201030 15:54:34.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.341" endtime="20201030 15:54:34.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.340" endtime="20201030 15:54:34.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.989" endtime="20201030 15:54:34.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.988" endtime="20201030 15:54:34.363"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.372" endtime="20201030 15:54:34.387"></status>
</kw>
<msg timestamp="20201030 15:54:34.388" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.369" endtime="20201030 15:54:34.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.391" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.389" endtime="20201030 15:54:34.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.394" endtime="20201030 15:54:34.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.367" endtime="20201030 15:54:34.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.365" endtime="20201030 15:54:34.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.407" endtime="20201030 15:54:34.676"></status>
</kw>
<msg timestamp="20201030 15:54:34.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018520653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018529083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.405" endtime="20201030 15:54:34.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018520653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018529083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.679" endtime="20201030 15:54:34.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.685" endtime="20201030 15:54:34.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.401" endtime="20201030 15:54:34.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.398" endtime="20201030 15:54:34.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:34.691" level="INFO">${RESULT} = [{'diff': 8.429999999996773e-06}, {'diff': 8.347000000002297e-06}, {'diff': 8.708999999999106e-06}, {'diff': 6.763999999999382e-06}, {'diff': 7.2219999999977025e-06}, {'diff': 8.653000000000827e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:54:34.688" endtime="20201030 15:54:34.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:34.694" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.429999999996773e-06, 8.347000000002297e-06, 8.708999999999106e-06, 6.763999999999382e-06, 7.2219999999977025e-06, 8.653000000000827e-06, 9.903000000002077e-06, 7.806000000002561e-06, 4.361...</msg>
<status status="PASS" starttime="20201030 15:54:34.692" endtime="20201030 15:54:34.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.699" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:34.698" endtime="20201030 15:54:34.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.702" level="INFO">VALUE: [8.429999999996773e-06, 8.347000000002297e-06, 8.708999999999106e-06, 6.763999999999382e-06, 7.2219999999977025e-06, 8.653000000000827e-06, 9.903000000002077e-06, 7.806000000002561e-06, 4.361000000001336e-06, 1.0972000000001453e-05, 8.318999999999688e-06, 6.041999999997771e-06, 8.486000000001992e-06, 9.012999999998689e-06, 9.902999999998607e-06, 8.457999999999383e-06, 7.319999999998161e-06, 7.250000000000312e-06, 1.0667000000002397e-05, 5.833000000000227e-06, 1.0402999999999107e-05, 8.153000000000327e-06, 7.263999999999882e-06, 6.485999999999992e-06, 9.443999999997343e-06]</msg>
<status status="PASS" starttime="20201030 15:54:34.700" endtime="20201030 15:54:34.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.696" endtime="20201030 15:54:34.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:34.706" endtime="20201030 15:54:34.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.705" endtime="20201030 15:54:34.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.704" endtime="20201030 15:54:34.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.364" endtime="20201030 15:54:34.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.363" endtime="20201030 15:54:34.729"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.747" endtime="20201030 15:54:34.763"></status>
</kw>
<msg timestamp="20201030 15:54:34.763" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.742" endtime="20201030 15:54:34.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.766" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.764" endtime="20201030 15:54:34.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.767" endtime="20201030 15:54:34.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.737" endtime="20201030 15:54:34.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.733" endtime="20201030 15:54:34.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.776" endtime="20201030 15:54:35.069"></status>
</kw>
<msg timestamp="20201030 15:54:35.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030614597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030621333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.775" endtime="20201030 15:54:35.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030614597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030621333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.072" endtime="20201030 15:54:35.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.078" endtime="20201030 15:54:35.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.772" endtime="20201030 15:54:35.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.770" endtime="20201030 15:54:35.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:35.084" level="INFO">${RESULT} = [{'diff': 6.736000000000242e-06}, {'diff': 1.0222000000000703e-05}, {'diff': 7.584000000001451e-06}, {'diff': 8.541999999996802e-06}, {'diff': 8.583999999998981e-06}, {'diff': 7.708000000002102e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:54:35.081" endtime="20201030 15:54:35.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:35.087" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.736000000000242e-06, 1.0222000000000703e-05, 7.584000000001451e-06, 8.541999999996802e-06, 8.583999999998981e-06, 7.708000000002102e-06, 7.514000000000132e-06, 8.097000000002047e-06, 7.527...</msg>
<status status="PASS" starttime="20201030 15:54:35.085" endtime="20201030 15:54:35.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.092" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:35.091" endtime="20201030 15:54:35.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.094" level="INFO">VALUE: [6.736000000000242e-06, 1.0222000000000703e-05, 7.584000000001451e-06, 8.541999999996802e-06, 8.583999999998981e-06, 7.708000000002102e-06, 7.514000000000132e-06, 8.097000000002047e-06, 7.527999999999702e-06, 7.708999999998106e-06, 6.5279999999987015e-06, 1.0083000000001008e-05, 7.165999999999423e-06, 6.833000000001227e-06, 4.832999999999227e-06, 6.153000000001796e-06, 8.014000000000632e-06, 6.360999999999867e-06, 1.1513999999997193e-05, 8.971999999999453e-06, 8.778000000000952e-06, 6.5279999999987015e-06, 8.776999999998009e-06, 6.208000000000602e-06, 6.833000000001227e-06]</msg>
<status status="PASS" starttime="20201030 15:54:35.093" endtime="20201030 15:54:35.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.088" endtime="20201030 15:54:35.095"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:35.099" endtime="20201030 15:54:35.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.097" endtime="20201030 15:54:35.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.096" endtime="20201030 15:54:35.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.732" endtime="20201030 15:54:35.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.730" endtime="20201030 15:54:35.122"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.139" endtime="20201030 15:54:35.156"></status>
</kw>
<msg timestamp="20201030 15:54:35.157" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.135" endtime="20201030 15:54:35.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.159" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.158" endtime="20201030 15:54:35.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.160" endtime="20201030 15:54:35.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.130" endtime="20201030 15:54:35.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.126" endtime="20201030 15:54:35.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.170" endtime="20201030 15:54:35.436"></status>
</kw>
<msg timestamp="20201030 15:54:35.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030735569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030745264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.168" endtime="20201030 15:54:35.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030735569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030745264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.439" endtime="20201030 15:54:35.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.445" endtime="20201030 15:54:35.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.165" endtime="20201030 15:54:35.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.164" endtime="20201030 15:54:35.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:35.451" level="INFO">${RESULT} = [{'diff': 9.695000000000537e-06}, {'diff': 7.097000000001047e-06}, {'diff': 7.527999999999702e-06}, {'diff': 7.472000000001422e-06}, {'diff': 9.972000000000453e-06}, {'diff': 1.0014000000002632e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:54:35.448" endtime="20201030 15:54:35.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:35.454" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.695000000000537e-06, 7.097000000001047e-06, 7.527999999999702e-06, 7.472000000001422e-06, 9.972000000000453e-06, 1.0014000000002632e-05, 1.0276999999999509e-05, 6.542000000001741e-06, 4.20...</msg>
<status status="PASS" starttime="20201030 15:54:35.452" endtime="20201030 15:54:35.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.459" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:35.458" endtime="20201030 15:54:35.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.461" level="INFO">VALUE: [9.695000000000537e-06, 7.097000000001047e-06, 7.527999999999702e-06, 7.472000000001422e-06, 9.972000000000453e-06, 1.0014000000002632e-05, 1.0276999999999509e-05, 6.542000000001741e-06, 4.208000000002071e-06, 7.250000000000312e-06, 8.778000000000952e-06, 6.194999999997036e-06, 9.208000000000133e-06, 9.458000000000383e-06, 1.0333000000001258e-05, 8.223000000001646e-06, 4.971999999998922e-06, 6.972000000000922e-06, 9.208000000000133e-06, 5.542000000000741e-06, 7.430999999998716e-06, 9.902999999998607e-06, 1.0972000000001453e-05, 6.944999999997786e-06, 6.901999999999603e-06]</msg>
<status status="PASS" starttime="20201030 15:54:35.460" endtime="20201030 15:54:35.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.455" endtime="20201030 15:54:35.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:35.466" endtime="20201030 15:54:35.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.464" endtime="20201030 15:54:35.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.463" endtime="20201030 15:54:35.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.123" endtime="20201030 15:54:35.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.123" endtime="20201030 15:54:35.487"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.496" endtime="20201030 15:54:35.511"></status>
</kw>
<msg timestamp="20201030 15:54:35.511" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.494" endtime="20201030 15:54:35.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.514" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.512" endtime="20201030 15:54:35.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.515" endtime="20201030 15:54:35.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.491" endtime="20201030 15:54:35.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.489" endtime="20201030 15:54:35.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.524" endtime="20201030 15:54:35.790"></status>
</kw>
<msg timestamp="20201030 15:54:35.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019094222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019102222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.523" endtime="20201030 15:54:35.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019094222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019102222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.793" endtime="20201030 15:54:35.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.798" endtime="20201030 15:54:35.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.520" endtime="20201030 15:54:35.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.518" endtime="20201030 15:54:35.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:35.804" level="INFO">${RESULT} = [{'diff': 7.999999999997592e-06}, {'diff': 7.930999999999216e-06}, {'diff': 8.013000000001158e-06}, {'diff': 7.639000000000257e-06}, {'diff': 7.222000000001172e-06}, {'diff': 5.153000000000796e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:35.801" endtime="20201030 15:54:35.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:35.807" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.999999999997592e-06, 7.930999999999216e-06, 8.013000000001158e-06, 7.639000000000257e-06, 7.222000000001172e-06, 5.153000000000796e-06, 6.638999999999257e-06, 8.096999999998578e-06, 1.1166...</msg>
<status status="PASS" starttime="20201030 15:54:35.805" endtime="20201030 15:54:35.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.812" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:35.811" endtime="20201030 15:54:35.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.814" level="INFO">VALUE: [7.999999999997592e-06, 7.930999999999216e-06, 8.013000000001158e-06, 7.639000000000257e-06, 7.222000000001172e-06, 5.153000000000796e-06, 6.638999999999257e-06, 8.096999999998578e-06, 1.1166999999999427e-05, 6.778000000002421e-06, 9.458999999999856e-06, 7.125000000000187e-06, 8.083000000002477e-06, 7.208000000001602e-06, 7.347000000001297e-06, 6.722000000000672e-06, 5.277999999997451e-06, 8.916000000001173e-06, 9.834000000000231e-06, 5.749999999998812e-06, 8.819000000000188e-06, 8.332999999999258e-06, 1.1125000000000718e-05, 6.736000000000242e-06, 7.415999999999673e-06]</msg>
<status status="PASS" starttime="20201030 15:54:35.813" endtime="20201030 15:54:35.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.808" endtime="20201030 15:54:35.815"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:35.819" endtime="20201030 15:54:35.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.817" endtime="20201030 15:54:35.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.816" endtime="20201030 15:54:35.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.488" endtime="20201030 15:54:35.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.487" endtime="20201030 15:54:35.839"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.848" endtime="20201030 15:54:35.863"></status>
</kw>
<msg timestamp="20201030 15:54:35.864" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.846" endtime="20201030 15:54:35.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.866" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.865" endtime="20201030 15:54:35.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.867" endtime="20201030 15:54:35.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.843" endtime="20201030 15:54:35.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.841" endtime="20201030 15:54:35.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.876" endtime="20201030 15:54:36.146"></status>
</kw>
<msg timestamp="20201030 15:54:36.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018644028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018653986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.875" endtime="20201030 15:54:36.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018644028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018653986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.150" endtime="20201030 15:54:36.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.156" endtime="20201030 15:54:36.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.872" endtime="20201030 15:54:36.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.870" endtime="20201030 15:54:36.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:36.164" level="INFO">${RESULT} = [{'diff': 9.958000000000883e-06}, {'diff': 6.834000000000701e-06}, {'diff': 5.820000000000131e-06}, {'diff': 5.569999999999881e-06}, {'diff': 1.0193999999998093e-05}, {'diff': 5.971999999999922e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:54:36.161" endtime="20201030 15:54:36.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:36.168" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.958000000000883e-06, 6.834000000000701e-06, 5.820000000000131e-06, 5.569999999999881e-06, 1.0193999999998093e-05, 5.971999999999922e-06, 9.028000000001202e-06, 8.972999999998926e-06, 5.402...</msg>
<status status="PASS" starttime="20201030 15:54:36.165" endtime="20201030 15:54:36.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.173" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:36.172" endtime="20201030 15:54:36.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.176" level="INFO">VALUE: [9.958000000000883e-06, 6.834000000000701e-06, 5.820000000000131e-06, 5.569999999999881e-06, 1.0193999999998093e-05, 5.971999999999922e-06, 9.028000000001202e-06, 8.972999999998926e-06, 5.402999999997576e-06, 9.972000000000453e-06, 9.832999999997288e-06, 1.0443999999998343e-05, 7.2779999999994516e-06, 9.847999999999801e-06, 7.041000000002767e-06, 7.333000000001727e-06, 8.487000000001466e-06, 6.097000000000047e-06, 7.818999999999188e-06, 7.527999999999702e-06, 6.6669999999983964e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.028000000001202e-06, 6.804999999998618e-06]</msg>
<status status="PASS" starttime="20201030 15:54:36.175" endtime="20201030 15:54:36.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.169" endtime="20201030 15:54:36.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:36.183" endtime="20201030 15:54:36.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.181" endtime="20201030 15:54:36.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.179" endtime="20201030 15:54:36.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.840" endtime="20201030 15:54:36.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.840" endtime="20201030 15:54:36.203"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.212" endtime="20201030 15:54:36.227"></status>
</kw>
<msg timestamp="20201030 15:54:36.228" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.210" endtime="20201030 15:54:36.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.230" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.229" endtime="20201030 15:54:36.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.231" endtime="20201030 15:54:36.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.207" endtime="20201030 15:54:36.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.205" endtime="20201030 15:54:36.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.240" endtime="20201030 15:54:36.510"></status>
</kw>
<msg timestamp="20201030 15:54:36.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018680736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018687347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.239" endtime="20201030 15:54:36.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018680736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018687347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.513" endtime="20201030 15:54:36.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.518" endtime="20201030 15:54:36.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.236" endtime="20201030 15:54:36.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.234" endtime="20201030 15:54:36.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:36.524" level="INFO">${RESULT} = [{'diff': 6.611000000000117e-06}, {'diff': 9.124999999998717e-06}, {'diff': 7.916999999999647e-06}, {'diff': 7.083999999997481e-06}, {'diff': 1.0513999999999663e-05}, {'diff': 7.3469999999978275e-06},...</msg>
<status status="PASS" starttime="20201030 15:54:36.521" endtime="20201030 15:54:36.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:36.527" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.611000000000117e-06, 9.124999999998717e-06, 7.916999999999647e-06, 7.083999999997481e-06, 1.0513999999999663e-05, 7.3469999999978275e-06, 6.472000000000422e-06, 6.526999999999228e-06, 8.77...</msg>
<status status="PASS" starttime="20201030 15:54:36.525" endtime="20201030 15:54:36.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.532" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:36.531" endtime="20201030 15:54:36.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.534" level="INFO">VALUE: [6.611000000000117e-06, 9.124999999998717e-06, 7.916999999999647e-06, 7.083999999997481e-06, 1.0513999999999663e-05, 7.3469999999978275e-06, 6.472000000000422e-06, 6.526999999999228e-06, 8.778000000000952e-06, 9.833999999996762e-06, 9.097999999999051e-06, 7.639000000000257e-06, 8.526999999997759e-06, 7.402999999999577e-06, 7.569000000002407e-06, 5.278000000000921e-06, 1.2014000000001163e-05, 1.1402000000000634e-05, 5.153000000000796e-06, 8.833999999999231e-06, 7.264000000003351e-06, 8.32000000000263e-06, 8.193999999999563e-06, 7.125000000000187e-06, 6.903000000002546e-06]</msg>
<status status="PASS" starttime="20201030 15:54:36.533" endtime="20201030 15:54:36.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.528" endtime="20201030 15:54:36.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:36.539" endtime="20201030 15:54:36.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.537" endtime="20201030 15:54:36.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.536" endtime="20201030 15:54:36.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.204" endtime="20201030 15:54:36.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.204" endtime="20201030 15:54:36.559"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.569" endtime="20201030 15:54:36.583"></status>
</kw>
<msg timestamp="20201030 15:54:36.584" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.566" endtime="20201030 15:54:36.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.586" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.585" endtime="20201030 15:54:36.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.587" endtime="20201030 15:54:36.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.563" endtime="20201030 15:54:36.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.561" endtime="20201030 15:54:36.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.597" endtime="20201030 15:54:36.869"></status>
</kw>
<msg timestamp="20201030 15:54:36.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019908736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019916347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.595" endtime="20201030 15:54:36.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019908736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019916347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.871" endtime="20201030 15:54:36.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.877" endtime="20201030 15:54:36.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.593" endtime="20201030 15:54:36.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.591" endtime="20201030 15:54:36.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:36.883" level="INFO">${RESULT} = [{'diff': 7.611000000001117e-06}, {'diff': 6.0829999999970075e-06}, {'diff': 8.639000000001257e-06}, {'diff': 8.59800000000202e-06}, {'diff': 1.0333000000001258e-05}, {'diff': 6.056000000000811e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:54:36.880" endtime="20201030 15:54:36.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:36.886" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.611000000001117e-06, 6.0829999999970075e-06, 8.639000000001257e-06, 8.59800000000202e-06, 1.0333000000001258e-05, 6.056000000000811e-06, 9.458000000000383e-06, 8.652000000001353e-06, 1.133...</msg>
<status status="PASS" starttime="20201030 15:54:36.884" endtime="20201030 15:54:36.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.890" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:36.889" endtime="20201030 15:54:36.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.893" level="INFO">VALUE: [7.611000000001117e-06, 6.0829999999970075e-06, 8.639000000001257e-06, 8.59800000000202e-06, 1.0333000000001258e-05, 6.056000000000811e-06, 9.458000000000383e-06, 8.652000000001353e-06, 1.1333000000002258e-05, 7.957999999998883e-06, 1.1388999999997068e-05, 8.985999999999023e-06, 1.0402999999999107e-05, 1.0374999999999968e-05, 8.653000000000827e-06, 6.709000000000576e-06, 4.721999999998672e-06, 6.972000000000922e-06, 7.916999999999647e-06, 9.652999999998357e-06, 8.096999999998578e-06, 8.222999999998176e-06, 8.208999999998606e-06, 8.514000000001132e-06, 7.0279999999992016e-06]</msg>
<status status="PASS" starttime="20201030 15:54:36.891" endtime="20201030 15:54:36.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.887" endtime="20201030 15:54:36.894"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:36.897" endtime="20201030 15:54:36.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.896" endtime="20201030 15:54:36.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.894" endtime="20201030 15:54:36.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.560" endtime="20201030 15:54:36.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.560" endtime="20201030 15:54:36.918"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.926" endtime="20201030 15:54:36.940"></status>
</kw>
<msg timestamp="20201030 15:54:36.940" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.924" endtime="20201030 15:54:36.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.943" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.941" endtime="20201030 15:54:36.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.944" endtime="20201030 15:54:36.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.921" endtime="20201030 15:54:36.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.920" endtime="20201030 15:54:36.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.953" endtime="20201030 15:54:37.234"></status>
</kw>
<msg timestamp="20201030 15:54:37.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018413167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018422764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.951" endtime="20201030 15:54:37.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018413167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018422764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.237" endtime="20201030 15:54:37.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.242" endtime="20201030 15:54:37.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.949" endtime="20201030 15:54:37.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.947" endtime="20201030 15:54:37.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:37.248" level="INFO">${RESULT} = [{'diff': 9.597000000000078e-06}, {'diff': 7.791999999999522e-06}, {'diff': 6.097000000000047e-06}, {'diff': 7.222000000001172e-06}, {'diff': 9.625000000002687e-06}, {'diff': 8.097000000002047e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:37.245" endtime="20201030 15:54:37.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:37.251" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.597000000000078e-06, 7.791999999999522e-06, 6.097000000000047e-06, 7.222000000001172e-06, 9.625000000002687e-06, 8.097000000002047e-06, 5.264000000001351e-06, 8.417000000000147e-06, 5.4589...</msg>
<status status="PASS" starttime="20201030 15:54:37.249" endtime="20201030 15:54:37.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.255" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:37.254" endtime="20201030 15:54:37.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.258" level="INFO">VALUE: [9.597000000000078e-06, 7.791999999999522e-06, 6.097000000000047e-06, 7.222000000001172e-06, 9.625000000002687e-06, 8.097000000002047e-06, 5.264000000001351e-06, 8.417000000000147e-06, 5.4589999999993255e-06, 8.971999999999453e-06, 7.319999999998161e-06, 5.902000000002072e-06, 6.570000000000881e-06, 9.124999999998717e-06, 6.763999999999382e-06, 6.9169999999986465e-06, 6.708000000001102e-06, 9.888999999999037e-06, 6.917000000002116e-06, 8.402999999997107e-06, 8.985999999999023e-06, 6.194999999997036e-06, 5.346999999999297e-06, 9.096999999999578e-06, 7.889000000000507e-06]</msg>
<status status="PASS" starttime="20201030 15:54:37.257" endtime="20201030 15:54:37.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.252" endtime="20201030 15:54:37.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:37.262" endtime="20201030 15:54:37.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.261" endtime="20201030 15:54:37.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.260" endtime="20201030 15:54:37.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.919" endtime="20201030 15:54:37.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.918" endtime="20201030 15:54:37.283"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.292" endtime="20201030 15:54:37.305"></status>
</kw>
<msg timestamp="20201030 15:54:37.306" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.289" endtime="20201030 15:54:37.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.308" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.307" endtime="20201030 15:54:37.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.309" endtime="20201030 15:54:37.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.287" endtime="20201030 15:54:37.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.285" endtime="20201030 15:54:37.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.318" endtime="20201030 15:54:37.584"></status>
</kw>
<msg timestamp="20201030 15:54:37.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018339236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018349889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.317" endtime="20201030 15:54:37.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018339236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018349889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.587" endtime="20201030 15:54:37.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.593" endtime="20201030 15:54:37.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.314" endtime="20201030 15:54:37.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.312" endtime="20201030 15:54:37.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:37.601" level="INFO">${RESULT} = [{'diff': 1.0653000000002827e-05}, {'diff': 9.833000000000758e-06}, {'diff': 6.0979999999995205e-06}, {'diff': 9.888999999999037e-06}, {'diff': 9.096999999999578e-06}, {'diff': 1.1207999999998663e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:37.598" endtime="20201030 15:54:37.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:37.605" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0653000000002827e-05, 9.833000000000758e-06, 6.0979999999995205e-06, 9.888999999999037e-06, 9.096999999999578e-06, 1.1207999999998663e-05, 1.0528000000002702e-05, 7.527999999999702e-06, 8....</msg>
<status status="PASS" starttime="20201030 15:54:37.602" endtime="20201030 15:54:37.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.611" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:37.609" endtime="20201030 15:54:37.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.614" level="INFO">VALUE: [1.0653000000002827e-05, 9.833000000000758e-06, 6.0979999999995205e-06, 9.888999999999037e-06, 9.096999999999578e-06, 1.1207999999998663e-05, 1.0528000000002702e-05, 7.527999999999702e-06, 8.097999999998051e-06, 5.028000000000671e-06, 7.527999999999702e-06, 7.665999999999923e-06, 9.276999999998509e-06, 8.791000000001048e-06, 8.707999999999633e-06, 8.847000000002797e-06, 5.736000000002711e-06, 7.193999999998563e-06, 6.651999999999353e-06, 7.805999999999091e-06, 6.278000000001921e-06, 7.652999999999827e-06, 8.721999999999203e-06, 6.776999999999478e-06, 8.653000000000827e-06]</msg>
<status status="PASS" starttime="20201030 15:54:37.612" endtime="20201030 15:54:37.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.606" endtime="20201030 15:54:37.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:37.620" endtime="20201030 15:54:37.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.618" endtime="20201030 15:54:37.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.617" endtime="20201030 15:54:37.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.284" endtime="20201030 15:54:37.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.283" endtime="20201030 15:54:37.641"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.650" endtime="20201030 15:54:37.664"></status>
</kw>
<msg timestamp="20201030 15:54:37.665" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.648" endtime="20201030 15:54:37.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.667" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.666" endtime="20201030 15:54:37.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.668" endtime="20201030 15:54:37.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.645" endtime="20201030 15:54:37.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.643" endtime="20201030 15:54:37.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.677" endtime="20201030 15:54:37.968"></status>
</kw>
<msg timestamp="20201030 15:54:37.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018612111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018617, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:54:37.676" endtime="20201030 15:54:37.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018612111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018617, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:54:37.971" endtime="20201030 15:54:37.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.976" endtime="20201030 15:54:37.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.673" endtime="20201030 15:54:37.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.672" endtime="20201030 15:54:37.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:37.983" level="INFO">${RESULT} = [{'diff': 4.889000000000976e-06}, {'diff': 6.444000000001282e-06}, {'diff': 1.0236000000000273e-05}, {'diff': 6.320000000000631e-06}, {'diff': 7.0969999999975775e-06}, {'diff': 8.152000000000853e-06},...</msg>
<status status="PASS" starttime="20201030 15:54:37.980" endtime="20201030 15:54:37.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:37.986" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.889000000000976e-06, 6.444000000001282e-06, 1.0236000000000273e-05, 6.320000000000631e-06, 7.0969999999975775e-06, 8.152000000000853e-06, 7.930999999999216e-06, 9.458999999999856e-06, 7.50...</msg>
<status status="PASS" starttime="20201030 15:54:37.984" endtime="20201030 15:54:37.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.990" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:37.989" endtime="20201030 15:54:37.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.993" level="INFO">VALUE: [4.889000000000976e-06, 6.444000000001282e-06, 1.0236000000000273e-05, 6.320000000000631e-06, 7.0969999999975775e-06, 8.152000000000853e-06, 7.930999999999216e-06, 9.458999999999856e-06, 7.500000000000562e-06, 8.250000000001312e-06, 1.1222000000001703e-05, 1.0333000000001258e-05, 7.903000000000077e-06, 7.097000000001047e-06, 7.069000000001907e-06, 8.292000000000022e-06, 9.276999999998509e-06, 7.957999999998883e-06, 8.332999999999258e-06, 5.721999999999672e-06, 6.736000000000242e-06, 8.401999999997634e-06, 7.138999999999757e-06, 7.958999999998356e-06, 7.013999999999632e-06]</msg>
<status status="PASS" starttime="20201030 15:54:37.992" endtime="20201030 15:54:37.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.987" endtime="20201030 15:54:37.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:37.998" endtime="20201030 15:54:38.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.996" endtime="20201030 15:54:38.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.995" endtime="20201030 15:54:38.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.642" endtime="20201030 15:54:38.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.642" endtime="20201030 15:54:38.019"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.028" endtime="20201030 15:54:38.042"></status>
</kw>
<msg timestamp="20201030 15:54:38.042" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.025" endtime="20201030 15:54:38.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.045" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.044" endtime="20201030 15:54:38.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.046" endtime="20201030 15:54:38.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.023" endtime="20201030 15:54:38.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.021" endtime="20201030 15:54:38.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.056" endtime="20201030 15:54:38.321"></status>
</kw>
<msg timestamp="20201030 15:54:38.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019160972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019172639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.054" endtime="20201030 15:54:38.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019160972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019172639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.324" endtime="20201030 15:54:38.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.330" endtime="20201030 15:54:38.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.051" endtime="20201030 15:54:38.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.050" endtime="20201030 15:54:38.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:38.336" level="INFO">${RESULT} = [{'diff': 1.1666999999999927e-05}, {'diff': 7.611000000001117e-06}, {'diff': 6.36199999999934e-06}, {'diff': 8.514000000001132e-06}, {'diff': 7.194999999998036e-06}, {'diff': 6.347000000000297e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:38.333" endtime="20201030 15:54:38.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:38.339" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1666999999999927e-05, 7.611000000001117e-06, 6.36199999999934e-06, 8.514000000001132e-06, 7.194999999998036e-06, 6.347000000000297e-06, 5.0139999999976315e-06, 1.0417000000002147e-05, 9.74...</msg>
<status status="PASS" starttime="20201030 15:54:38.337" endtime="20201030 15:54:38.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.344" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:38.343" endtime="20201030 15:54:38.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.346" level="INFO">VALUE: [1.1666999999999927e-05, 7.611000000001117e-06, 6.36199999999934e-06, 8.514000000001132e-06, 7.194999999998036e-06, 6.347000000000297e-06, 5.0139999999976315e-06, 1.0417000000002147e-05, 9.749999999999343e-06, 7.777000000000478e-06, 8.346999999998828e-06, 6.0279999999982015e-06, 8.097999999998051e-06, 8.403000000000577e-06, 9.292000000001022e-06, 8.542000000000272e-06, 7.611000000001117e-06, 8.096999999998578e-06, 7.84800000000127e-06, 8.028000000000202e-06, 6.278000000001921e-06, 1.1847000000002328e-05, 6.833000000001227e-06, 8.333999999998731e-06, 7.208999999997606e-06]</msg>
<status status="PASS" starttime="20201030 15:54:38.345" endtime="20201030 15:54:38.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.340" endtime="20201030 15:54:38.347"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:38.351" endtime="20201030 15:54:38.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.350" endtime="20201030 15:54:38.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.348" endtime="20201030 15:54:38.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.020" endtime="20201030 15:54:38.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.019" endtime="20201030 15:54:38.372"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.381" endtime="20201030 15:54:38.396"></status>
</kw>
<msg timestamp="20201030 15:54:38.397" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.379" endtime="20201030 15:54:38.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.399" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.398" endtime="20201030 15:54:38.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.401" endtime="20201030 15:54:38.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.376" endtime="20201030 15:54:38.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.374" endtime="20201030 15:54:38.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.410" endtime="20201030 15:54:38.680"></status>
</kw>
<msg timestamp="20201030 15:54:38.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019047111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019056278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.408" endtime="20201030 15:54:38.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019047111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019056278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.687" endtime="20201030 15:54:38.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.698" endtime="20201030 15:54:38.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.406" endtime="20201030 15:54:38.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.404" endtime="20201030 15:54:38.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:38.711" level="INFO">${RESULT} = [{'diff': 9.167000000000897e-06}, {'diff': 9.110999999999148e-06}, {'diff': 1.0055000000001868e-05}, {'diff': 6.722000000000672e-06}, {'diff': 6.736000000000242e-06}, {'diff': 8.582999999999508e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:54:38.705" endtime="20201030 15:54:38.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:38.718" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.167000000000897e-06, 9.110999999999148e-06, 1.0055000000001868e-05, 6.722000000000672e-06, 6.736000000000242e-06, 8.582999999999508e-06, 9.444000000000813e-06, 1.0388999999999537e-05, 1.04...</msg>
<status status="PASS" starttime="20201030 15:54:38.713" endtime="20201030 15:54:38.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.726" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:38.724" endtime="20201030 15:54:38.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.732" level="INFO">VALUE: [9.167000000000897e-06, 9.110999999999148e-06, 1.0055000000001868e-05, 6.722000000000672e-06, 6.736000000000242e-06, 8.582999999999508e-06, 9.444000000000813e-06, 1.0388999999999537e-05, 1.0457999999997913e-05, 7.389000000000007e-06, 5.820000000000131e-06, 7.764000000000382e-06, 6.347000000000297e-06, 6.9029999999990765e-06, 1.0042000000001772e-05, 1.0291000000002548e-05, 6.291999999998021e-06, 1.1346999999998358e-05, 8.832999999999758e-06, 6.208000000000602e-06, 9.763999999998912e-06, 7.625000000000687e-06, 9.527999999998232e-06, 6.389000000002476e-06, 6.1939999999975626e-06]</msg>
<status status="PASS" starttime="20201030 15:54:38.729" endtime="20201030 15:54:38.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.720" endtime="20201030 15:54:38.734"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:38.742" endtime="20201030 15:54:38.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.739" endtime="20201030 15:54:38.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.736" endtime="20201030 15:54:38.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.373" endtime="20201030 15:54:38.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.372" endtime="20201030 15:54:38.767"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.778" endtime="20201030 15:54:38.793"></status>
</kw>
<msg timestamp="20201030 15:54:38.793" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.775" endtime="20201030 15:54:38.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.796" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.794" endtime="20201030 15:54:38.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.797" endtime="20201030 15:54:38.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.773" endtime="20201030 15:54:38.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.771" endtime="20201030 15:54:38.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.806" endtime="20201030 15:54:39.070"></status>
</kw>
<msg timestamp="20201030 15:54:39.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023635583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023643639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.804" endtime="20201030 15:54:39.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023635583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023643639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.073" endtime="20201030 15:54:39.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.078" endtime="20201030 15:54:39.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.802" endtime="20201030 15:54:39.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.800" endtime="20201030 15:54:39.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:39.084" level="INFO">${RESULT} = [{'diff': 8.055999999999341e-06}, {'diff': 8.763000000001908e-06}, {'diff': 1.1527000000000759e-05}, {'diff': 4.416999999999616e-06}, {'diff': 8.139000000000757e-06}, {'diff': 9.153000000001327e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:54:39.082" endtime="20201030 15:54:39.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:39.087" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.055999999999341e-06, 8.763000000001908e-06, 1.1527000000000759e-05, 4.416999999999616e-06, 8.139000000000757e-06, 9.153000000001327e-06, 8.278000000000452e-06, 9.151999999998384e-06, 9.278...</msg>
<status status="PASS" starttime="20201030 15:54:39.085" endtime="20201030 15:54:39.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.092" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:39.090" endtime="20201030 15:54:39.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.094" level="INFO">VALUE: [8.055999999999341e-06, 8.763000000001908e-06, 1.1527000000000759e-05, 4.416999999999616e-06, 8.139000000000757e-06, 9.153000000001327e-06, 8.278000000000452e-06, 9.151999999998384e-06, 9.278000000001452e-06, 7.958000000002352e-06, 9.417000000001147e-06, 5.778000000001421e-06, 1.1027000000000259e-05, 1.0833000000001758e-05, 6.791000000002517e-06, 5.7229999999991454e-06, 9.499999999999093e-06, 7.026999999999728e-06, 5.833000000000227e-06, 8.583999999998981e-06, 1.1027999999999732e-05, 5.0699999999993806e-06, 9.388999999998537e-06, 8.457999999999383e-06, 1.0402999999999107e-05]</msg>
<status status="PASS" starttime="20201030 15:54:39.093" endtime="20201030 15:54:39.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.088" endtime="20201030 15:54:39.095"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:39.099" endtime="20201030 15:54:39.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.097" endtime="20201030 15:54:39.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.096" endtime="20201030 15:54:39.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.769" endtime="20201030 15:54:39.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.768" endtime="20201030 15:54:39.120"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.128" endtime="20201030 15:54:39.143"></status>
</kw>
<msg timestamp="20201030 15:54:39.143" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.126" endtime="20201030 15:54:39.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.146" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.144" endtime="20201030 15:54:39.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.147" endtime="20201030 15:54:39.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.123" endtime="20201030 15:54:39.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.122" endtime="20201030 15:54:39.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.156" endtime="20201030 15:54:39.425"></status>
</kw>
<msg timestamp="20201030 15:54:39.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018631333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018638042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.154" endtime="20201030 15:54:39.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018631333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018638042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.428" endtime="20201030 15:54:39.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.433" endtime="20201030 15:54:39.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.152" endtime="20201030 15:54:39.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.150" endtime="20201030 15:54:39.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:39.439" level="INFO">${RESULT} = [{'diff': 6.709000000000576e-06}, {'diff': 6.693999999998063e-06}, {'diff': 8.276999999997509e-06}, {'diff': 6.972000000000922e-06}, {'diff': 6.0279999999982015e-06}, {'diff': 6.6529999999988265e-06},...</msg>
<status status="PASS" starttime="20201030 15:54:39.436" endtime="20201030 15:54:39.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:39.442" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.709000000000576e-06, 6.693999999998063e-06, 8.276999999997509e-06, 6.972000000000922e-06, 6.0279999999982015e-06, 6.6529999999988265e-06, 6.8329999999977575e-06, 5.582999999999977e-06, 1.0...</msg>
<status status="PASS" starttime="20201030 15:54:39.440" endtime="20201030 15:54:39.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.446" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:39.445" endtime="20201030 15:54:39.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.449" level="INFO">VALUE: [6.709000000000576e-06, 6.693999999998063e-06, 8.276999999997509e-06, 6.972000000000922e-06, 6.0279999999982015e-06, 6.6529999999988265e-06, 6.8329999999977575e-06, 5.582999999999977e-06, 1.0151999999999384e-05, 9.777999999998482e-06, 5.429999999997243e-06, 6.888999999999507e-06, 8.222000000002172e-06, 6.5829999999975075e-06, 5.277000000001447e-06, 9.526999999998759e-06, 9.027999999997732e-06, 6.694000000001532e-06, 6.9029999999990765e-06, 9.651999999998884e-06, 5.846999999999797e-06, 9.638999999998787e-06, 5.09799999999852e-06, 7.473000000000896e-06, 6.415999999998673e-06]</msg>
<status status="PASS" starttime="20201030 15:54:39.447" endtime="20201030 15:54:39.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.443" endtime="20201030 15:54:39.450"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:39.454" endtime="20201030 15:54:39.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.452" endtime="20201030 15:54:39.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.451" endtime="20201030 15:54:39.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.120" endtime="20201030 15:54:39.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.120" endtime="20201030 15:54:39.474"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.483" endtime="20201030 15:54:39.498"></status>
</kw>
<msg timestamp="20201030 15:54:39.499" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.481" endtime="20201030 15:54:39.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.501" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.500" endtime="20201030 15:54:39.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.502" endtime="20201030 15:54:39.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.478" endtime="20201030 15:54:39.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.476" endtime="20201030 15:54:39.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.511" endtime="20201030 15:54:39.788"></status>
</kw>
<msg timestamp="20201030 15:54:39.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019267083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019276111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.510" endtime="20201030 15:54:39.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019267083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019276111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.793" endtime="20201030 15:54:39.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.801" endtime="20201030 15:54:39.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.507" endtime="20201030 15:54:39.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.505" endtime="20201030 15:54:39.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:39.812" level="INFO">${RESULT} = [{'diff': 9.027999999997732e-06}, {'diff': 5.9029999999980765e-06}, {'diff': 7.722000000001672e-06}, {'diff': 9.778000000001952e-06}, {'diff': 6.222000000000172e-06}, {'diff': 1.1139000000000288e-05},...</msg>
<status status="PASS" starttime="20201030 15:54:39.807" endtime="20201030 15:54:39.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:39.817" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.027999999997732e-06, 5.9029999999980765e-06, 7.722000000001672e-06, 9.778000000001952e-06, 6.222000000000172e-06, 1.1139000000000288e-05, 6.5279999999987015e-06, 1.0222000000000703e-05, 7....</msg>
<status status="PASS" starttime="20201030 15:54:39.813" endtime="20201030 15:54:39.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.824" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:39.822" endtime="20201030 15:54:39.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.828" level="INFO">VALUE: [9.027999999997732e-06, 5.9029999999980765e-06, 7.722000000001672e-06, 9.778000000001952e-06, 6.222000000000172e-06, 1.1139000000000288e-05, 6.5279999999987015e-06, 1.0222000000000703e-05, 7.791000000000048e-06, 7.151999999999853e-06, 4.721999999998672e-06, 8.943999999996843e-06, 1.0889000000000038e-05, 8.819999999999661e-06, 8.889000000001507e-06, 7.903000000000077e-06, 8.222000000002172e-06, 9.333999999999731e-06, 7.929999999999743e-06, 6.7079999999976325e-06, 9.542000000001272e-06, 1.1833000000002758e-05, 5.207999999999602e-06, 5.6389999999982565e-06, 9.540999999998329e-06]</msg>
<status status="PASS" starttime="20201030 15:54:39.826" endtime="20201030 15:54:39.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.819" endtime="20201030 15:54:39.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:39.837" endtime="20201030 15:54:39.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.835" endtime="20201030 15:54:39.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.832" endtime="20201030 15:54:39.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.475" endtime="20201030 15:54:39.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.475" endtime="20201030 15:54:39.858"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.868" endtime="20201030 15:54:39.882"></status>
</kw>
<msg timestamp="20201030 15:54:39.882" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.866" endtime="20201030 15:54:39.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.885" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.883" endtime="20201030 15:54:39.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.886" endtime="20201030 15:54:39.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.863" endtime="20201030 15:54:39.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.861" endtime="20201030 15:54:39.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.895" endtime="20201030 15:54:40.161"></status>
</kw>
<msg timestamp="20201030 15:54:40.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019810903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019817236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.893" endtime="20201030 15:54:40.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019810903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019817236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:40.164" endtime="20201030 15:54:40.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.170" endtime="20201030 15:54:40.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.891" endtime="20201030 15:54:40.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.889" endtime="20201030 15:54:40.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:40.175" level="INFO">${RESULT} = [{'diff': 6.3329999999972575e-06}, {'diff': 6.458000000000852e-06}, {'diff': 7.0419999999987715e-06}, {'diff': 9.957999999997413e-06}, {'diff': 5.846999999999797e-06}, {'diff': 7.846999999998328e-06},...</msg>
<status status="PASS" starttime="20201030 15:54:40.173" endtime="20201030 15:54:40.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:40.179" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.3329999999972575e-06, 6.458000000000852e-06, 7.0419999999987715e-06, 9.957999999997413e-06, 5.846999999999797e-06, 7.846999999998328e-06, 9.458000000000383e-06, 8.264000000000882e-06, 7.33...</msg>
<status status="PASS" starttime="20201030 15:54:40.176" endtime="20201030 15:54:40.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.183" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:40.182" endtime="20201030 15:54:40.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.185" level="INFO">VALUE: [6.3329999999972575e-06, 6.458000000000852e-06, 7.0419999999987715e-06, 9.957999999997413e-06, 5.846999999999797e-06, 7.846999999998328e-06, 9.458000000000383e-06, 8.264000000000882e-06, 7.332999999998258e-06, 8.832999999999758e-06, 8.457999999999383e-06, 9.111999999998621e-06, 1.1597000000002078e-05, 1.0973000000000926e-05, 5.833000000000227e-06, 9.916000000002173e-06, 1.0541999999998802e-05, 7.972999999997926e-06, 7.582999999998508e-06, 8.110999999998147e-06, 9.333000000000258e-06, 7.833000000002227e-06, 9.096999999999578e-06, 7.527999999999702e-06, 9.208000000000133e-06]</msg>
<status status="PASS" starttime="20201030 15:54:40.184" endtime="20201030 15:54:40.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.179" endtime="20201030 15:54:40.186"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:40.194" endtime="20201030 15:54:40.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.191" endtime="20201030 15:54:40.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.188" endtime="20201030 15:54:40.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.859" endtime="20201030 15:54:40.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.859" endtime="20201030 15:54:40.218"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.236" endtime="20201030 15:54:40.255"></status>
</kw>
<msg timestamp="20201030 15:54:40.256" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.231" endtime="20201030 15:54:40.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.261" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.258" endtime="20201030 15:54:40.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.263" endtime="20201030 15:54:40.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.226" endtime="20201030 15:54:40.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.223" endtime="20201030 15:54:40.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.282" endtime="20201030 15:54:40.550"></status>
</kw>
<msg timestamp="20201030 15:54:40.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032110486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032118458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:40.279" endtime="20201030 15:54:40.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032110486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032118458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:40.553" endtime="20201030 15:54:40.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.559" endtime="20201030 15:54:40.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.273" endtime="20201030 15:54:40.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.270" endtime="20201030 15:54:40.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:40.564" level="INFO">${RESULT} = [{'diff': 7.972000000001922e-06}, {'diff': 8.082999999999008e-06}, {'diff': 1.0278000000002452e-05}, {'diff': 1.0277999999995513e-05}, {'diff': 5.999999999999062e-06}, {'diff': 8.208000000002602e-06},...</msg>
<status status="PASS" starttime="20201030 15:54:40.562" endtime="20201030 15:54:40.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:40.568" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.972000000001922e-06, 8.082999999999008e-06, 1.0278000000002452e-05, 1.0277999999995513e-05, 5.999999999999062e-06, 8.208000000002602e-06, 1.0763999999996443e-05, 6.458000000000852e-06, 7.5...</msg>
<status status="PASS" starttime="20201030 15:54:40.565" endtime="20201030 15:54:40.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.572" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:40.571" endtime="20201030 15:54:40.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.574" level="INFO">VALUE: [7.972000000001922e-06, 8.082999999999008e-06, 1.0278000000002452e-05, 1.0277999999995513e-05, 5.999999999999062e-06, 8.208000000002602e-06, 1.0763999999996443e-05, 6.458000000000852e-06, 7.5830000000054465e-06, 6.389000000002476e-06, 7.29200000000596e-06, 4.875000000001406e-06, 7.208000000001602e-06, 4.58400000000192e-06, 9.457999999996913e-06, 7.958000000002352e-06, 8.347000000005766e-06, 8.443999999996343e-06, 9.278000000001452e-06, 1.0665999999999454e-05, 6.959000000000826e-06, 6.874999999996467e-06, 7.040999999999298e-06, 6.625000000003156e-06, 6.568999999997938e-06]</msg>
<status status="PASS" starttime="20201030 15:54:40.573" endtime="20201030 15:54:40.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.568" endtime="20201030 15:54:40.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:40.579" endtime="20201030 15:54:40.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.577" endtime="20201030 15:54:40.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.576" endtime="20201030 15:54:40.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.220" endtime="20201030 15:54:40.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.219" endtime="20201030 15:54:40.600"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.608" endtime="20201030 15:54:40.623"></status>
</kw>
<msg timestamp="20201030 15:54:40.623" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.606" endtime="20201030 15:54:40.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.626" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.624" endtime="20201030 15:54:40.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.627" endtime="20201030 15:54:40.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.603" endtime="20201030 15:54:40.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.602" endtime="20201030 15:54:40.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.636" endtime="20201030 15:54:40.904"></status>
</kw>
<msg timestamp="20201030 15:54:40.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018600931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018606375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:40.634" endtime="20201030 15:54:40.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018600931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018606375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:40.907" endtime="20201030 15:54:40.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.913" endtime="20201030 15:54:40.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.632" endtime="20201030 15:54:40.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.630" endtime="20201030 15:54:40.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:40.919" level="INFO">${RESULT} = [{'diff': 5.444000000000282e-06}, {'diff': 9.708000000000633e-06}, {'diff': 1.0847000000001328e-05}, {'diff': 7.777999999999952e-06}, {'diff': 6.972000000000922e-06}, {'diff': 9.818999999997718e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:54:40.917" endtime="20201030 15:54:40.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:40.923" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.444000000000282e-06, 9.708000000000633e-06, 1.0847000000001328e-05, 7.777999999999952e-06, 6.972000000000922e-06, 9.818999999997718e-06, 5.110999999998617e-06, 6.805999999998091e-06, 7.957...</msg>
<status status="PASS" starttime="20201030 15:54:40.920" endtime="20201030 15:54:40.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.927" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:40.926" endtime="20201030 15:54:40.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.929" level="INFO">VALUE: [5.444000000000282e-06, 9.708000000000633e-06, 1.0847000000001328e-05, 7.777999999999952e-06, 6.972000000000922e-06, 9.818999999997718e-06, 5.110999999998617e-06, 6.805999999998091e-06, 7.957999999998883e-06, 7.777999999999952e-06, 8.721999999999203e-06, 1.0193999999998093e-05, 8.832999999999758e-06, 8.665999999997454e-06, 7.916999999999647e-06, 8.540999999997329e-06, 1.0014000000002632e-05, 5.471999999999422e-06, 9.833000000000758e-06, 8.153000000000327e-06, 9.195000000000036e-06, 7.332999999998258e-06, 5.9029999999980765e-06, 9.832999999997288e-06, 6.069000000000907e-06]</msg>
<status status="PASS" starttime="20201030 15:54:40.928" endtime="20201030 15:54:40.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.923" endtime="20201030 15:54:40.930"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:40.934" endtime="20201030 15:54:40.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.933" endtime="20201030 15:54:40.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.931" endtime="20201030 15:54:40.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.600" endtime="20201030 15:54:40.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.600" endtime="20201030 15:54:40.955"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.970" endtime="20201030 15:54:40.986"></status>
</kw>
<msg timestamp="20201030 15:54:40.986" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.966" endtime="20201030 15:54:40.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.989" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.987" endtime="20201030 15:54:40.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.990" endtime="20201030 15:54:40.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.960" endtime="20201030 15:54:40.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.957" endtime="20201030 15:54:40.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.010" endtime="20201030 15:54:41.283"></status>
</kw>
<msg timestamp="20201030 15:54:41.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025256306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025262833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:41.006" endtime="20201030 15:54:41.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025256306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025262833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:41.286" endtime="20201030 15:54:41.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.291" endtime="20201030 15:54:41.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.000" endtime="20201030 15:54:41.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.995" endtime="20201030 15:54:41.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:41.297" level="INFO">${RESULT} = [{'diff': 6.526999999999228e-06}, {'diff': 9.610999999999648e-06}, {'diff': 6.401999999999103e-06}, {'diff': 7.568999999998938e-06}, {'diff': 8.346999999998828e-06}, {'diff': 7.263999999999882e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:41.295" endtime="20201030 15:54:41.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:41.300" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.526999999999228e-06, 9.610999999999648e-06, 6.401999999999103e-06, 7.568999999998938e-06, 8.346999999998828e-06, 7.263999999999882e-06, 1.1000000000000593e-05, 1.0124999999999718e-05, 5.44...</msg>
<status status="PASS" starttime="20201030 15:54:41.298" endtime="20201030 15:54:41.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.305" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:41.304" endtime="20201030 15:54:41.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.307" level="INFO">VALUE: [6.526999999999228e-06, 9.610999999999648e-06, 6.401999999999103e-06, 7.568999999998938e-06, 8.346999999998828e-06, 7.263999999999882e-06, 1.1000000000000593e-05, 1.0124999999999718e-05, 5.444999999999756e-06, 6.693999999998063e-06, 1.0041999999998302e-05, 1.0388999999999537e-05, 6.347000000000297e-06, 8.082999999999008e-06, 5.346999999999297e-06, 8.3340000000022e-06, 8.653000000000827e-06, 7.582999999998508e-06, 7.903000000000077e-06, 1.0151999999999384e-05, 7.083000000001477e-06, 1.0722000000001203e-05, 7.598000000001021e-06, 1.0971999999997983e-05, 7.333000000001727e-06]</msg>
<status status="PASS" starttime="20201030 15:54:41.306" endtime="20201030 15:54:41.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.301" endtime="20201030 15:54:41.308"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:41.312" endtime="20201030 15:54:41.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.310" endtime="20201030 15:54:41.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.309" endtime="20201030 15:54:41.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.956" endtime="20201030 15:54:41.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.956" endtime="20201030 15:54:41.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.988" endtime="20201030 15:54:41.333"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:33.915" endtime="20201030 15:54:41.333" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:41.340" endtime="20201030 15:54:41.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.339" endtime="20201030 15:54:41.360"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.374" endtime="20201030 15:54:41.392"></status>
</kw>
<msg timestamp="20201030 15:54:41.393" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.373" endtime="20201030 15:54:41.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.395" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.394" endtime="20201030 15:54:41.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.398" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:41.396" endtime="20201030 15:54:41.399"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:41.370" endtime="20201030 15:54:41.399"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:41.367" endtime="20201030 15:54:41.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.366" endtime="20201030 15:54:41.400"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:41.404" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:41.403" endtime="20201030 15:54:41.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.401" endtime="20201030 15:54:41.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.365" endtime="20201030 15:54:41.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.364" endtime="20201030 15:54:41.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.406" endtime="20201030 15:54:41.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.362" endtime="20201030 15:54:41.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.361" endtime="20201030 15:54:41.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.337" endtime="20201030 15:54:41.408"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.417" endtime="20201030 15:54:41.433"></status>
</kw>
<msg timestamp="20201030 15:54:41.433" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.415" endtime="20201030 15:54:41.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.435" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.434" endtime="20201030 15:54:41.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.437" endtime="20201030 15:54:41.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.413" endtime="20201030 15:54:41.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.411" endtime="20201030 15:54:41.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.447" endtime="20201030 15:54:41.729"></status>
</kw>
<msg timestamp="20201030 15:54:41.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066341333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066355597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:41.445" endtime="20201030 15:54:41.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066341333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066355597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:41.733" endtime="20201030 15:54:41.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.742" endtime="20201030 15:54:41.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.442" endtime="20201030 15:54:41.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.440" endtime="20201030 15:54:41.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:41.748" level="INFO">${RESULT} = [{'diff': 1.4263999999999943e-05}, {'diff': 1.1390000000111034e-06}, {'diff': 1.1669999999963654e-06}, {'diff': 1.1390000000111034e-06}, {'diff': 1.1660000000107695e-06}, {'diff': 1.096999999991577e-0...</msg>
<status status="PASS" starttime="20201030 15:54:41.745" endtime="20201030 15:54:41.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:41.753" level="INFO">${OVERHEAD} = {'diff': [1.4263999999999943e-05, 1.1390000000111034e-06, 1.1669999999963654e-06, 1.1390000000111034e-06, 1.1660000000107695e-06, 1.096999999991577e-06, 1.1530000000037344e-06, 1.1669999999963654e-06,...</msg>
<status status="PASS" starttime="20201030 15:54:41.749" endtime="20201030 15:54:41.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.757" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:41.756" endtime="20201030 15:54:41.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.759" level="INFO">VALUE: [1.4263999999999943e-05, 1.1390000000111034e-06, 1.1669999999963654e-06, 1.1390000000111034e-06, 1.1660000000107695e-06, 1.096999999991577e-06, 1.1530000000037344e-06, 1.1669999999963654e-06, 1.1520000000042607e-06, 1.1669999999963654e-06, 1.1530000000037344e-06, 1.1669999999963654e-06, 1.1669999999963654e-06, 1.1670000000102432e-06, 1.1670000000102432e-06, 1.1799999999895228e-06, 1.1529999999898566e-06, 1.1530000000037344e-06, 1.1809999999889964e-06, 1.1669999999963654e-06, 1.1530000000037344e-06, 1.1529999999898566e-06, 1.1530000000037344e-06, 1.1670000000102432e-06, 1.1660000000107695e-06, 1.1659999999968917e-06, 1.1520000000042607e-06, 1.1529999999898566e-06, 1.1659999999968917e-06, 1.1669999999963654e-06, 1.1800000000034006e-06, 1.1810000000028742e-06, 1.1669999999963654e-06, 1.1659999999968917e-06, 1.1810000000028742e-06, 1.1529999999898566e-06, 1.1800000000034006e-06, 1.1669999999963654e-06, 1.1520000000042607e-06, 1.1799999999895228e-06, 1.1670000000102432e-06, 1.1520000000042607e-06, 1.1670000000102432e-06, 1.1800000000034006e-06, 1.1660000000107695e-06, 1.1669999999963654e-06, 1.1530000000037344e-06, 1.1939999999960316e-06, 1.1809999999889964e-06, 1.1800000000034006e-06]</msg>
<status status="PASS" starttime="20201030 15:54:41.758" endtime="20201030 15:54:41.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.753" endtime="20201030 15:54:41.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:41.764" endtime="20201030 15:54:41.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.762" endtime="20201030 15:54:41.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.761" endtime="20201030 15:54:41.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.410" endtime="20201030 15:54:41.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.409" endtime="20201030 15:54:41.784"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.793" endtime="20201030 15:54:41.809"></status>
</kw>
<msg timestamp="20201030 15:54:41.810" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.792" endtime="20201030 15:54:41.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.816" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.811" endtime="20201030 15:54:41.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.818" endtime="20201030 15:54:41.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.788" endtime="20201030 15:54:41.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.786" endtime="20201030 15:54:41.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.827" endtime="20201030 15:54:42.106"></status>
</kw>
<msg timestamp="20201030 15:54:42.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019114528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019115694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:41.825" endtime="20201030 15:54:42.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019114528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019115694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:42.111" endtime="20201030 15:54:42.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.119" endtime="20201030 15:54:42.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.823" endtime="20201030 15:54:42.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.821" endtime="20201030 15:54:42.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:42.126" level="INFO">${RESULT} = [{'diff': 1.1660000000003612e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1520000000007913e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.1810000000028742e-06}, {'diff': 1.153000000000265e-06...</msg>
<status status="PASS" starttime="20201030 15:54:42.122" endtime="20201030 15:54:42.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:42.130" level="INFO">${OVERHEAD} = {'diff': [1.1660000000003612e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.179999999999931e-06, 1.1810000000028742e-06, 1.153000000000265e-06, 1.207999999999071e-06, 1.1520000000007913e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:54:42.127" endtime="20201030 15:54:42.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.135" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:42.133" endtime="20201030 15:54:42.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.137" level="INFO">VALUE: [1.1660000000003612e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.179999999999931e-06, 1.1810000000028742e-06, 1.153000000000265e-06, 1.207999999999071e-06, 1.1520000000007913e-06, 1.1119999999975594e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.1810000000028742e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1659999999968917e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1519999999973218e-06, 1.1809999999994047e-06, 1.1810000000028742e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1800000000034006e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1660000000003612e-06, 1.2219999999986408e-06, 1.1520000000007913e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.153000000000265e-06]</msg>
<status status="PASS" starttime="20201030 15:54:42.136" endtime="20201030 15:54:42.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.131" endtime="20201030 15:54:42.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:42.142" endtime="20201030 15:54:42.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.140" endtime="20201030 15:54:42.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.139" endtime="20201030 15:54:42.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.785" endtime="20201030 15:54:42.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.785" endtime="20201030 15:54:42.163"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.171" endtime="20201030 15:54:42.186"></status>
</kw>
<msg timestamp="20201030 15:54:42.186" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.169" endtime="20201030 15:54:42.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.189" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.187" endtime="20201030 15:54:42.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.190" endtime="20201030 15:54:42.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.166" endtime="20201030 15:54:42.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.165" endtime="20201030 15:54:42.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.199" endtime="20201030 15:54:42.485"></status>
</kw>
<msg timestamp="20201030 15:54:42.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018461222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018462389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:42.197" endtime="20201030 15:54:42.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018461222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018462389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:42.490" endtime="20201030 15:54:42.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.499" endtime="20201030 15:54:42.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.195" endtime="20201030 15:54:42.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.193" endtime="20201030 15:54:42.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:42.506" level="INFO">${RESULT} = [{'diff': 1.1669999999998348e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.1810000000028742e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.1669999999998348e-06}...</msg>
<status status="PASS" starttime="20201030 15:54:42.502" endtime="20201030 15:54:42.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:42.511" level="INFO">${OVERHEAD} = {'diff': [1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1810000000028742e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1....</msg>
<status status="PASS" starttime="20201030 15:54:42.506" endtime="20201030 15:54:42.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.515" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:42.514" endtime="20201030 15:54:42.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.517" level="INFO">VALUE: [1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1810000000028742e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.1660000000003612e-06, 1.1660000000003612e-06, 1.0839999999984196e-06, 1.137999999997752e-06, 1.1809999999994047e-06, 1.1520000000007913e-06, 1.1529999999967955e-06, 1.1660000000003612e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.209000000002014e-06, 1.0969999999985158e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1529999999967955e-06, 1.1669999999998348e-06, 1.1669999999998348e-06]</msg>
<status status="PASS" starttime="20201030 15:54:42.516" endtime="20201030 15:54:42.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.511" endtime="20201030 15:54:42.518"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:42.522" endtime="20201030 15:54:42.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.520" endtime="20201030 15:54:42.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.519" endtime="20201030 15:54:42.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.163" endtime="20201030 15:54:42.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.163" endtime="20201030 15:54:42.543"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.551" endtime="20201030 15:54:42.566"></status>
</kw>
<msg timestamp="20201030 15:54:42.566" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.549" endtime="20201030 15:54:42.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.569" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.567" endtime="20201030 15:54:42.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.570" endtime="20201030 15:54:42.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.546" endtime="20201030 15:54:42.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.545" endtime="20201030 15:54:42.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.579" endtime="20201030 15:54:42.869"></status>
</kw>
<msg timestamp="20201030 15:54:42.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018529597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01853075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:42.577" endtime="20201030 15:54:42.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018529597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01853075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:42.873" endtime="20201030 15:54:42.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.882" endtime="20201030 15:54:42.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.575" endtime="20201030 15:54:42.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.573" endtime="20201030 15:54:42.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:42.889" level="INFO">${RESULT} = [{'diff': 1.153000000000265e-06}, {'diff': 1.1529999999967955e-06}, {'diff': 1.1520000000007913e-06}, {'diff': 1.1940000000029705e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.139000000000695e-06...</msg>
<status status="PASS" starttime="20201030 15:54:42.886" endtime="20201030 15:54:42.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:42.895" level="INFO">${OVERHEAD} = {'diff': [1.153000000000265e-06, 1.1529999999967955e-06, 1.1520000000007913e-06, 1.1940000000029705e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.137999999997752e-06, 1....</msg>
<status status="PASS" starttime="20201030 15:54:42.891" endtime="20201030 15:54:42.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.899" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:42.898" endtime="20201030 15:54:42.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.903" level="INFO">VALUE: [1.153000000000265e-06, 1.1529999999967955e-06, 1.1520000000007913e-06, 1.1940000000029705e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.137999999997752e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.2220000000021103e-06, 1.2219999999986408e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.139000000000695e-06, 1.1660000000003612e-06, 1.1660000000003612e-06, 1.1660000000003612e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1520000000007913e-06, 1.1950000000024441e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1800000000034006e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.125000000001125e-06]</msg>
<status status="PASS" starttime="20201030 15:54:42.901" endtime="20201030 15:54:42.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.896" endtime="20201030 15:54:42.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:42.909" endtime="20201030 15:54:42.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.907" endtime="20201030 15:54:42.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.906" endtime="20201030 15:54:42.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.543" endtime="20201030 15:54:42.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.543" endtime="20201030 15:54:42.930"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.938" endtime="20201030 15:54:42.954"></status>
</kw>
<msg timestamp="20201030 15:54:42.954" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.936" endtime="20201030 15:54:42.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.956" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.955" endtime="20201030 15:54:42.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.958" endtime="20201030 15:54:42.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.934" endtime="20201030 15:54:42.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.932" endtime="20201030 15:54:42.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.968" endtime="20201030 15:54:43.258"></status>
</kw>
<msg timestamp="20201030 15:54:43.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018844736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018845875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:42.966" endtime="20201030 15:54:43.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018844736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018845875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:43.262" endtime="20201030 15:54:43.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.272" endtime="20201030 15:54:43.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.964" endtime="20201030 15:54:43.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.962" endtime="20201030 15:54:43.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:43.278" level="INFO">${RESULT} = [{'diff': 1.139000000000695e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.082999999998946e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1949999999989747e-06}...</msg>
<status status="PASS" starttime="20201030 15:54:43.275" endtime="20201030 15:54:43.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:43.282" level="INFO">${OVERHEAD} = {'diff': [1.139000000000695e-06, 1.153000000000265e-06, 1.082999999998946e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1949999999989747e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1....</msg>
<status status="PASS" starttime="20201030 15:54:43.279" endtime="20201030 15:54:43.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.286" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:43.285" endtime="20201030 15:54:43.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.289" level="INFO">VALUE: [1.139000000000695e-06, 1.153000000000265e-06, 1.082999999998946e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1949999999989747e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.1660000000003612e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1940000000029705e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1940000000029705e-06, 1.1669999999998348e-06, 1.153000000000265e-06]</msg>
<status status="PASS" starttime="20201030 15:54:43.288" endtime="20201030 15:54:43.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.283" endtime="20201030 15:54:43.291"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:43.295" endtime="20201030 15:54:43.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.293" endtime="20201030 15:54:43.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.292" endtime="20201030 15:54:43.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.931" endtime="20201030 15:54:43.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.930" endtime="20201030 15:54:43.316"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.324" endtime="20201030 15:54:43.339"></status>
</kw>
<msg timestamp="20201030 15:54:43.339" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.322" endtime="20201030 15:54:43.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.342" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.340" endtime="20201030 15:54:43.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.343" endtime="20201030 15:54:43.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.320" endtime="20201030 15:54:43.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.318" endtime="20201030 15:54:43.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.352" endtime="20201030 15:54:43.631"></status>
</kw>
<msg timestamp="20201030 15:54:43.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018214708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018215861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:43.350" endtime="20201030 15:54:43.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018214708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018215861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:43.636" endtime="20201030 15:54:43.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.645" endtime="20201030 15:54:43.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.348" endtime="20201030 15:54:43.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.346" endtime="20201030 15:54:43.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:43.652" level="INFO">${RESULT} = [{'diff': 1.153000000000265e-06}, {'diff': 1.193999999999501e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.153000000000265e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:43.648" endtime="20201030 15:54:43.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:43.657" level="INFO">${OVERHEAD} = {'diff': [1.153000000000265e-06, 1.193999999999501e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1670000000033043e-06, 1.1669999999998348e-06, 1.16...</msg>
<status status="PASS" starttime="20201030 15:54:43.653" endtime="20201030 15:54:43.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.663" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:43.661" endtime="20201030 15:54:43.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.665" level="INFO">VALUE: [1.153000000000265e-06, 1.193999999999501e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1670000000033043e-06, 1.1669999999998348e-06, 1.1670000000033043e-06, 1.082999999998946e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.1529999999967955e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.1810000000028742e-06, 1.1660000000003612e-06, 1.223000000001584e-06, 1.1660000000003612e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1520000000007913e-06, 1.1809999999994047e-06, 1.1519999999973218e-06, 1.1520000000007913e-06, 1.125000000001125e-06, 1.1520000000007913e-06, 1.179999999999931e-06, 1.1520000000007913e-06, 1.1659999999968917e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.1659999999968917e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.1669999999998348e-06, 1.125000000001125e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.1529999999967955e-06, 1.1669999999998348e-06]</msg>
<status status="PASS" starttime="20201030 15:54:43.664" endtime="20201030 15:54:43.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.658" endtime="20201030 15:54:43.667"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:43.671" endtime="20201030 15:54:43.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.669" endtime="20201030 15:54:43.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.668" endtime="20201030 15:54:43.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.316" endtime="20201030 15:54:43.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.316" endtime="20201030 15:54:43.692"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.700" endtime="20201030 15:54:43.715"></status>
</kw>
<msg timestamp="20201030 15:54:43.716" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.698" endtime="20201030 15:54:43.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.718" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.717" endtime="20201030 15:54:43.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.719" endtime="20201030 15:54:43.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.695" endtime="20201030 15:54:43.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.694" endtime="20201030 15:54:43.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.729" endtime="20201030 15:54:44.012"></status>
</kw>
<msg timestamp="20201030 15:54:44.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018124208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018125389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:43.727" endtime="20201030 15:54:44.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018124208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018125389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.016" endtime="20201030 15:54:44.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.024" endtime="20201030 15:54:44.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.724" endtime="20201030 15:54:44.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.723" endtime="20201030 15:54:44.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:44.032" level="INFO">${RESULT} = [{'diff': 1.1809999999994047e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.1520000000007913e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.1809999999994047e-06}...</msg>
<status status="PASS" starttime="20201030 15:54:44.029" endtime="20201030 15:54:44.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:44.036" level="INFO">${OVERHEAD} = {'diff': [1.1809999999994047e-06, 1.179999999999931e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.1520000000007913e-06, 1.1809999999994047e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:54:44.033" endtime="20201030 15:54:44.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.040" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:44.039" endtime="20201030 15:54:44.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.043" level="INFO">VALUE: [1.1809999999994047e-06, 1.179999999999931e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.1520000000007913e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1670000000033043e-06, 1.139000000000695e-06, 1.1670000000033043e-06, 1.1659999999968917e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1659999999968917e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.2219999999986408e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.082999999998946e-06, 1.1669999999998348e-06, 1.1519999999973218e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1809999999994047e-06]</msg>
<status status="PASS" starttime="20201030 15:54:44.041" endtime="20201030 15:54:44.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.037" endtime="20201030 15:54:44.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:44.048" endtime="20201030 15:54:44.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.046" endtime="20201030 15:54:44.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.045" endtime="20201030 15:54:44.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.692" endtime="20201030 15:54:44.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.692" endtime="20201030 15:54:44.069"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.077" endtime="20201030 15:54:44.092"></status>
</kw>
<msg timestamp="20201030 15:54:44.092" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.075" endtime="20201030 15:54:44.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.095" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.094" endtime="20201030 15:54:44.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.096" endtime="20201030 15:54:44.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.072" endtime="20201030 15:54:44.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.071" endtime="20201030 15:54:44.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.106" endtime="20201030 15:54:44.387"></status>
</kw>
<msg timestamp="20201030 15:54:44.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018151444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018152611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.104" endtime="20201030 15:54:44.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018151444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018152611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.391" endtime="20201030 15:54:44.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.400" endtime="20201030 15:54:44.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.102" endtime="20201030 15:54:44.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.100" endtime="20201030 15:54:44.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:44.406" level="INFO">${RESULT} = [{'diff': 1.1669999999998348e-06}, {'diff': 1.125000000001125e-06}, {'diff': 1.1520000000007913e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.1669999999998348e-0...</msg>
<status status="PASS" starttime="20201030 15:54:44.403" endtime="20201030 15:54:44.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:44.411" level="INFO">${OVERHEAD} = {'diff': [1.1669999999998348e-06, 1.125000000001125e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, ...</msg>
<status status="PASS" starttime="20201030 15:54:44.407" endtime="20201030 15:54:44.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.415" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:44.414" endtime="20201030 15:54:44.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.417" level="INFO">VALUE: [1.1669999999998348e-06, 1.125000000001125e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1120000000010288e-06, 1.1809999999994047e-06, 1.1529999999967955e-06, 1.1809999999994047e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.137999999997752e-06, 1.2219999999986408e-06, 1.1520000000007913e-06, 1.1519999999973218e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.2089999999985446e-06, 1.1659999999968917e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1109999999980857e-06, 1.1659999999968917e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06]</msg>
<status status="PASS" starttime="20201030 15:54:44.416" endtime="20201030 15:54:44.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.411" endtime="20201030 15:54:44.421"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:44.425" endtime="20201030 15:54:44.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.424" endtime="20201030 15:54:44.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.422" endtime="20201030 15:54:44.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.069" endtime="20201030 15:54:44.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.069" endtime="20201030 15:54:44.446"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.454" endtime="20201030 15:54:44.470"></status>
</kw>
<msg timestamp="20201030 15:54:44.470" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.452" endtime="20201030 15:54:44.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.472" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.471" endtime="20201030 15:54:44.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.474" endtime="20201030 15:54:44.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.450" endtime="20201030 15:54:44.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.448" endtime="20201030 15:54:44.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.483" endtime="20201030 15:54:44.771"></status>
</kw>
<msg timestamp="20201030 15:54:44.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017981694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017982875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.481" endtime="20201030 15:54:44.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017981694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017982875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.775" endtime="20201030 15:54:44.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.783" endtime="20201030 15:54:44.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.478" endtime="20201030 15:54:44.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.477" endtime="20201030 15:54:44.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:44.790" level="INFO">${RESULT} = [{'diff': 1.1809999999994047e-06}, {'diff': 1.1520000000007913e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.1660000000003612e-06}, {'diff': 1.1669999999998348e-0...</msg>
<status status="PASS" starttime="20201030 15:54:44.787" endtime="20201030 15:54:44.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:44.795" level="INFO">${OVERHEAD} = {'diff': [1.1809999999994047e-06, 1.1520000000007913e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1949999999989747e-06, 1.1520000000007913e-06,...</msg>
<status status="PASS" starttime="20201030 15:54:44.791" endtime="20201030 15:54:44.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.799" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:44.798" endtime="20201030 15:54:44.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.802" level="INFO">VALUE: [1.1809999999994047e-06, 1.1520000000007913e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1949999999989747e-06, 1.1520000000007913e-06, 1.1389999999972256e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.193999999999501e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.1389999999972256e-06, 1.207999999999071e-06, 1.2369999999976844e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1670000000033043e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.179999999999931e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.207999999999071e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1810000000028742e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.153000000000265e-06]</msg>
<status status="PASS" starttime="20201030 15:54:44.800" endtime="20201030 15:54:44.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.796" endtime="20201030 15:54:44.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:44.807" endtime="20201030 15:54:44.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.805" endtime="20201030 15:54:44.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.804" endtime="20201030 15:54:44.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.447" endtime="20201030 15:54:44.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.446" endtime="20201030 15:54:44.827"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.836" endtime="20201030 15:54:44.852"></status>
</kw>
<msg timestamp="20201030 15:54:44.852" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.834" endtime="20201030 15:54:44.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.854" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.853" endtime="20201030 15:54:44.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.856" endtime="20201030 15:54:44.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.831" endtime="20201030 15:54:44.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.830" endtime="20201030 15:54:44.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.865" endtime="20201030 15:54:45.146"></status>
</kw>
<msg timestamp="20201030 15:54:45.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018344972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018346125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.863" endtime="20201030 15:54:45.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018344972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018346125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.150" endtime="20201030 15:54:45.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.159" endtime="20201030 15:54:45.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.861" endtime="20201030 15:54:45.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.859" endtime="20201030 15:54:45.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:45.166" level="INFO">${RESULT} = [{'diff': 1.153000000000265e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.1660000000003612e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.1660000000003612e-06}...</msg>
<status status="PASS" starttime="20201030 15:54:45.163" endtime="20201030 15:54:45.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:45.170" level="INFO">${OVERHEAD} = {'diff': [1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:54:45.167" endtime="20201030 15:54:45.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.175" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:45.173" endtime="20201030 15:54:45.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.177" level="INFO">VALUE: [1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1659999999968917e-06, 1.068999999999376e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.179999999999931e-06, 1.125000000001125e-06, 1.0969999999985158e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1810000000028742e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.1949999999989747e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.179999999999931e-06]</msg>
<status status="PASS" starttime="20201030 15:54:45.176" endtime="20201030 15:54:45.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.171" endtime="20201030 15:54:45.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:45.182" endtime="20201030 15:54:45.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.181" endtime="20201030 15:54:45.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.179" endtime="20201030 15:54:45.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.828" endtime="20201030 15:54:45.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.828" endtime="20201030 15:54:45.203"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.211" endtime="20201030 15:54:45.227"></status>
</kw>
<msg timestamp="20201030 15:54:45.227" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.209" endtime="20201030 15:54:45.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.230" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.228" endtime="20201030 15:54:45.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.231" endtime="20201030 15:54:45.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.206" endtime="20201030 15:54:45.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.205" endtime="20201030 15:54:45.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.241" endtime="20201030 15:54:45.522"></status>
</kw>
<msg timestamp="20201030 15:54:45.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018143681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018144861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.239" endtime="20201030 15:54:45.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018143681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018144861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.526" endtime="20201030 15:54:45.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.535" endtime="20201030 15:54:45.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.236" endtime="20201030 15:54:45.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.235" endtime="20201030 15:54:45.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:45.541" level="INFO">${RESULT} = [{'diff': 1.1800000000034006e-06}, {'diff': 1.0969999999985158e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.1520000000007913e-06}, {'diff': 1.1519999999973218e-06}, {'diff': 1.1669999999998348e-0...</msg>
<status status="PASS" starttime="20201030 15:54:45.538" endtime="20201030 15:54:45.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:45.545" level="INFO">${OVERHEAD} = {'diff': [1.1800000000034006e-06, 1.0969999999985158e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.1519999999973218e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1809999999994047e-06,...</msg>
<status status="PASS" starttime="20201030 15:54:45.542" endtime="20201030 15:54:45.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.550" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:45.549" endtime="20201030 15:54:45.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.552" level="INFO">VALUE: [1.1800000000034006e-06, 1.0969999999985158e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.1519999999973218e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1110000000015552e-06, 1.179999999999931e-06, 1.1670000000033043e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1810000000028742e-06, 1.1110000000015552e-06, 1.1389999999972256e-06, 1.209000000002014e-06, 1.139000000000695e-06, 1.1810000000028742e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.2219999999986408e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1810000000028742e-06, 1.179999999999931e-06, 1.2220000000021103e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.2360000000016802e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.1520000000007913e-06]</msg>
<status status="PASS" starttime="20201030 15:54:45.551" endtime="20201030 15:54:45.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.546" endtime="20201030 15:54:45.554"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:45.558" endtime="20201030 15:54:45.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.556" endtime="20201030 15:54:45.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.555" endtime="20201030 15:54:45.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.203" endtime="20201030 15:54:45.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.203" endtime="20201030 15:54:45.579"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.586" endtime="20201030 15:54:45.602"></status>
</kw>
<msg timestamp="20201030 15:54:45.602" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.585" endtime="20201030 15:54:45.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.605" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.603" endtime="20201030 15:54:45.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.606" endtime="20201030 15:54:45.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.582" endtime="20201030 15:54:45.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.581" endtime="20201030 15:54:45.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.615" endtime="20201030 15:54:45.901"></status>
</kw>
<msg timestamp="20201030 15:54:45.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017997319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017998472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.613" endtime="20201030 15:54:45.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017997319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017998472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.905" endtime="20201030 15:54:45.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.913" endtime="20201030 15:54:45.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.611" endtime="20201030 15:54:45.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.609" endtime="20201030 15:54:45.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:45.920" level="INFO">${RESULT} = [{'diff': 1.153000000000265e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.125000000001125e-06}, {'diff': 1.1660000000003612e-06}, {'diff': 1.153000000000265e-06},...</msg>
<status status="PASS" starttime="20201030 15:54:45.917" endtime="20201030 15:54:45.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:45.925" level="INFO">${OVERHEAD} = {'diff': [1.153000000000265e-06, 1.1109999999980857e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1109999999980857e-06, 1.1809999999994047e-06, 1....</msg>
<status status="PASS" starttime="20201030 15:54:45.921" endtime="20201030 15:54:45.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.929" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:45.928" endtime="20201030 15:54:45.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.932" level="INFO">VALUE: [1.153000000000265e-06, 1.1109999999980857e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1109999999980857e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.2219999999986408e-06, 1.2220000000021103e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1660000000003612e-06, 1.1810000000028742e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1389999999972256e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1520000000007913e-06]</msg>
<status status="PASS" starttime="20201030 15:54:45.930" endtime="20201030 15:54:45.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.926" endtime="20201030 15:54:45.933"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:45.937" endtime="20201030 15:54:45.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.935" endtime="20201030 15:54:45.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.934" endtime="20201030 15:54:45.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.579" endtime="20201030 15:54:45.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.579" endtime="20201030 15:54:45.957"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.965" endtime="20201030 15:54:45.981"></status>
</kw>
<msg timestamp="20201030 15:54:45.981" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.964" endtime="20201030 15:54:45.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.984" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.982" endtime="20201030 15:54:45.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.985" endtime="20201030 15:54:45.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.961" endtime="20201030 15:54:45.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.959" endtime="20201030 15:54:45.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.994" endtime="20201030 15:54:46.279"></status>
</kw>
<msg timestamp="20201030 15:54:46.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018055583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018056736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.992" endtime="20201030 15:54:46.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018055583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018056736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.284" endtime="20201030 15:54:46.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.293" endtime="20201030 15:54:46.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.990" endtime="20201030 15:54:46.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.988" endtime="20201030 15:54:46.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:46.301" level="INFO">${RESULT} = [{'diff': 1.153000000000265e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.1660000000003612e-06}, {'diff': 1.1249999999976557e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.1669999999998348e-06}...</msg>
<status status="PASS" starttime="20201030 15:54:46.298" endtime="20201030 15:54:46.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:46.306" level="INFO">${OVERHEAD} = {'diff': [1.153000000000265e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1249999999976557e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1670000000033043e-06, 1.139000000000695e-06, 1....</msg>
<status status="PASS" starttime="20201030 15:54:46.302" endtime="20201030 15:54:46.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.310" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:46.309" endtime="20201030 15:54:46.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.313" level="INFO">VALUE: [1.153000000000265e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1249999999976557e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1670000000033043e-06, 1.139000000000695e-06, 1.179999999999931e-06, 1.2080000000025404e-06, 1.098000000001459e-06, 1.1660000000003612e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1810000000028742e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1950000000024441e-06, 1.1120000000010288e-06, 1.2219999999986408e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.1520000000007913e-06, 1.0969999999985158e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1809999999994047e-06]</msg>
<status status="PASS" starttime="20201030 15:54:46.312" endtime="20201030 15:54:46.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.307" endtime="20201030 15:54:46.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:46.318" endtime="20201030 15:54:46.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.317" endtime="20201030 15:54:46.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.315" endtime="20201030 15:54:46.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.958" endtime="20201030 15:54:46.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.958" endtime="20201030 15:54:46.339"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.347" endtime="20201030 15:54:46.362"></status>
</kw>
<msg timestamp="20201030 15:54:46.363" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.346" endtime="20201030 15:54:46.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.365" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.364" endtime="20201030 15:54:46.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.366" endtime="20201030 15:54:46.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.343" endtime="20201030 15:54:46.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.341" endtime="20201030 15:54:46.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.377" endtime="20201030 15:54:46.667"></status>
</kw>
<msg timestamp="20201030 15:54:46.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018569625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018570806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.375" endtime="20201030 15:54:46.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018569625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018570806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.672" endtime="20201030 15:54:46.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.681" endtime="20201030 15:54:46.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.373" endtime="20201030 15:54:46.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.371" endtime="20201030 15:54:46.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:46.687" level="INFO">${RESULT} = [{'diff': 1.1809999999994047e-06}, {'diff': 1.179999999999931e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.2220000000021103e-0...</msg>
<status status="PASS" starttime="20201030 15:54:46.684" endtime="20201030 15:54:46.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:46.692" level="INFO">${OVERHEAD} = {'diff': [1.1809999999994047e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.2220000000021103e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:54:46.689" endtime="20201030 15:54:46.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.696" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:46.695" endtime="20201030 15:54:46.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.699" level="INFO">VALUE: [1.1809999999994047e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.2220000000021103e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1519999999973218e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.125000000001125e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1529999999967955e-06, 1.1660000000003612e-06, 1.2219999999986408e-06, 1.1660000000003612e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.193999999999501e-06, 1.125000000001125e-06, 1.1809999999994047e-06, 1.1519999999973218e-06, 1.1520000000007913e-06]</msg>
<status status="PASS" starttime="20201030 15:54:46.697" endtime="20201030 15:54:46.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.693" endtime="20201030 15:54:46.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:46.705" endtime="20201030 15:54:46.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.703" endtime="20201030 15:54:46.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.702" endtime="20201030 15:54:46.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.340" endtime="20201030 15:54:46.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.340" endtime="20201030 15:54:46.726"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.734" endtime="20201030 15:54:46.752"></status>
</kw>
<msg timestamp="20201030 15:54:46.753" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.732" endtime="20201030 15:54:46.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.759" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.755" endtime="20201030 15:54:46.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.761" endtime="20201030 15:54:46.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.730" endtime="20201030 15:54:46.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.728" endtime="20201030 15:54:46.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.782" endtime="20201030 15:54:47.086"></status>
</kw>
<msg timestamp="20201030 15:54:47.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018602625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018603778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.778" endtime="20201030 15:54:47.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018602625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018603778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.091" endtime="20201030 15:54:47.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.101" endtime="20201030 15:54:47.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.772" endtime="20201030 15:54:47.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.768" endtime="20201030 15:54:47.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:47.111" level="INFO">${RESULT} = [{'diff': 1.153000000000265e-06}, {'diff': 1.1800000000034006e-06}, {'diff': 1.1949999999989747e-06}, {'diff': 1.1519999999973218e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1110000000015552e-0...</msg>
<status status="PASS" starttime="20201030 15:54:47.106" endtime="20201030 15:54:47.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:47.118" level="INFO">${OVERHEAD} = {'diff': [1.153000000000265e-06, 1.1800000000034006e-06, 1.1949999999989747e-06, 1.1519999999973218e-06, 1.1669999999998348e-06, 1.1110000000015552e-06, 1.1669999999998348e-06, 1.153000000000265e-06, ...</msg>
<status status="PASS" starttime="20201030 15:54:47.112" endtime="20201030 15:54:47.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.124" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:47.122" endtime="20201030 15:54:47.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.126" level="INFO">VALUE: [1.153000000000265e-06, 1.1800000000034006e-06, 1.1949999999989747e-06, 1.1519999999973218e-06, 1.1669999999998348e-06, 1.1110000000015552e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.125000000001125e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1810000000028742e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.1810000000028742e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.179999999999931e-06, 1.0839999999984196e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.1660000000003612e-06]</msg>
<status status="PASS" starttime="20201030 15:54:47.125" endtime="20201030 15:54:47.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.119" endtime="20201030 15:54:47.132"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:47.136" endtime="20201030 15:54:47.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.135" endtime="20201030 15:54:47.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.133" endtime="20201030 15:54:47.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.727" endtime="20201030 15:54:47.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.726" endtime="20201030 15:54:47.157"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.165" endtime="20201030 15:54:47.180"></status>
</kw>
<msg timestamp="20201030 15:54:47.181" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.164" endtime="20201030 15:54:47.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.183" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.182" endtime="20201030 15:54:47.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.184" endtime="20201030 15:54:47.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.161" endtime="20201030 15:54:47.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.159" endtime="20201030 15:54:47.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.194" endtime="20201030 15:54:47.484"></status>
</kw>
<msg timestamp="20201030 15:54:47.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018625014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018626139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.192" endtime="20201030 15:54:47.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018625014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018626139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.488" endtime="20201030 15:54:47.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.496" endtime="20201030 15:54:47.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.190" endtime="20201030 15:54:47.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.188" endtime="20201030 15:54:47.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:47.504" level="INFO">${RESULT} = [{'diff': 1.125000000001125e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.1950000000024441e-06}, {'diff': 1.179999999999931e-06...</msg>
<status status="PASS" starttime="20201030 15:54:47.501" endtime="20201030 15:54:47.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:47.508" level="INFO">${OVERHEAD} = {'diff': [1.125000000001125e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1950000000024441e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, ...</msg>
<status status="PASS" starttime="20201030 15:54:47.505" endtime="20201030 15:54:47.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.513" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:47.512" endtime="20201030 15:54:47.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.515" level="INFO">VALUE: [1.125000000001125e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1950000000024441e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.125000000001125e-06, 1.1389999999972256e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.2360000000016802e-06, 1.1520000000007913e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1670000000033043e-06, 1.125000000001125e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1249999999976557e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.179999999999931e-06]</msg>
<status status="PASS" starttime="20201030 15:54:47.514" endtime="20201030 15:54:47.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.509" endtime="20201030 15:54:47.517"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:47.521" endtime="20201030 15:54:47.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.519" endtime="20201030 15:54:47.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.518" endtime="20201030 15:54:47.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.158" endtime="20201030 15:54:47.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.157" endtime="20201030 15:54:47.541"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.550" endtime="20201030 15:54:47.565"></status>
</kw>
<msg timestamp="20201030 15:54:47.566" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.548" endtime="20201030 15:54:47.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.568" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.567" endtime="20201030 15:54:47.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.570" endtime="20201030 15:54:47.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.545" endtime="20201030 15:54:47.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.544" endtime="20201030 15:54:47.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.580" endtime="20201030 15:54:47.869"></status>
</kw>
<msg timestamp="20201030 15:54:47.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018596875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018598042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.579" endtime="20201030 15:54:47.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018596875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018598042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.873" endtime="20201030 15:54:47.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.882" endtime="20201030 15:54:47.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.576" endtime="20201030 15:54:47.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.574" endtime="20201030 15:54:47.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:47.890" level="INFO">${RESULT} = [{'diff': 1.1669999999998348e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.139000000000695e-06}, {'diff': 1.1660000000003612e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.1659999999968917e-06...</msg>
<status status="PASS" starttime="20201030 15:54:47.886" endtime="20201030 15:54:47.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:47.894" level="INFO">${OVERHEAD} = {'diff': [1.1669999999998348e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1659999999968917e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, ...</msg>
<status status="PASS" starttime="20201030 15:54:47.891" endtime="20201030 15:54:47.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.899" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:47.898" endtime="20201030 15:54:47.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.901" level="INFO">VALUE: [1.1669999999998348e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1659999999968917e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.2359999999982108e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1950000000024441e-06, 1.2089999999985446e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.1519999999973218e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.179999999999931e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1950000000024441e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1809999999994047e-06]</msg>
<status status="PASS" starttime="20201030 15:54:47.900" endtime="20201030 15:54:47.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.895" endtime="20201030 15:54:47.906"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:47.910" endtime="20201030 15:54:47.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.908" endtime="20201030 15:54:47.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.907" endtime="20201030 15:54:47.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.542" endtime="20201030 15:54:47.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.542" endtime="20201030 15:54:47.930"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.939" endtime="20201030 15:54:47.954"></status>
</kw>
<msg timestamp="20201030 15:54:47.955" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.937" endtime="20201030 15:54:47.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.957" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.956" endtime="20201030 15:54:47.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.959" endtime="20201030 15:54:47.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.934" endtime="20201030 15:54:47.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.933" endtime="20201030 15:54:47.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.968" endtime="20201030 15:54:48.260"></status>
</kw>
<msg timestamp="20201030 15:54:48.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018602306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018603444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.966" endtime="20201030 15:54:48.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018602306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018603444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.264" endtime="20201030 15:54:48.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.272" endtime="20201030 15:54:48.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.964" endtime="20201030 15:54:48.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.962" endtime="20201030 15:54:48.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:48.279" level="INFO">${RESULT} = [{'diff': 1.1380000000012214e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.139000000000695e-06}, {'diff': 1.1249999999976557e-06}, {'diff': 1.1660000000003612e-06...</msg>
<status status="PASS" starttime="20201030 15:54:48.276" endtime="20201030 15:54:48.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:48.285" level="INFO">${OVERHEAD} = {'diff': [1.1380000000012214e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.1660000000003612e-06, 1.1249999999976557e-06, 1.1660000000003612e-06, ...</msg>
<status status="PASS" starttime="20201030 15:54:48.281" endtime="20201030 15:54:48.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.289" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:48.288" endtime="20201030 15:54:48.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.292" level="INFO">VALUE: [1.1380000000012214e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.1660000000003612e-06, 1.1249999999976557e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.082999999998946e-06, 1.1660000000003612e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1810000000028742e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1519999999973218e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1529999999967955e-06, 1.1660000000003612e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.1800000000034006e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1659999999968917e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1670000000033043e-06]</msg>
<status status="PASS" starttime="20201030 15:54:48.290" endtime="20201030 15:54:48.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.286" endtime="20201030 15:54:48.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:48.297" endtime="20201030 15:54:48.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.295" endtime="20201030 15:54:48.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.294" endtime="20201030 15:54:48.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.931" endtime="20201030 15:54:48.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.931" endtime="20201030 15:54:48.318"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.326" endtime="20201030 15:54:48.341"></status>
</kw>
<msg timestamp="20201030 15:54:48.341" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.324" endtime="20201030 15:54:48.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.344" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.342" endtime="20201030 15:54:48.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.345" endtime="20201030 15:54:48.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.321" endtime="20201030 15:54:48.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.320" endtime="20201030 15:54:48.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.355" endtime="20201030 15:54:48.642"></status>
</kw>
<msg timestamp="20201030 15:54:48.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018496222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018497389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.353" endtime="20201030 15:54:48.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018496222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018497389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.646" endtime="20201030 15:54:48.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.655" endtime="20201030 15:54:48.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.350" endtime="20201030 15:54:48.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.348" endtime="20201030 15:54:48.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:48.663" level="INFO">${RESULT} = [{'diff': 1.1669999999998348e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1109999999980857e-06}, {'diff': 1.1389999999972256e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.1670000000033043e-...</msg>
<status status="PASS" starttime="20201030 15:54:48.659" endtime="20201030 15:54:48.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:48.667" level="INFO">${OVERHEAD} = {'diff': [1.1669999999998348e-06, 1.1669999999998348e-06, 1.1109999999980857e-06, 1.1389999999972256e-06, 1.1669999999998348e-06, 1.1670000000033043e-06, 1.179999999999931e-06, 1.1249999999976557e-06,...</msg>
<status status="PASS" starttime="20201030 15:54:48.664" endtime="20201030 15:54:48.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.671" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:48.670" endtime="20201030 15:54:48.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.674" level="INFO">VALUE: [1.1669999999998348e-06, 1.1669999999998348e-06, 1.1109999999980857e-06, 1.1389999999972256e-06, 1.1669999999998348e-06, 1.1670000000033043e-06, 1.179999999999931e-06, 1.1249999999976557e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.1389999999972256e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1810000000028742e-06, 1.1109999999980857e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1529999999967955e-06, 1.153000000000265e-06, 1.153000000000265e-06, 1.1519999999973218e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1810000000028742e-06, 1.1520000000007913e-06, 1.0839999999984196e-06, 1.1110000000015552e-06, 1.207999999999071e-06, 1.1520000000007913e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1249999999976557e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.153000000000265e-06]</msg>
<status status="PASS" starttime="20201030 15:54:48.672" endtime="20201030 15:54:48.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.668" endtime="20201030 15:54:48.675"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:48.679" endtime="20201030 15:54:48.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.677" endtime="20201030 15:54:48.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.676" endtime="20201030 15:54:48.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.318" endtime="20201030 15:54:48.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.318" endtime="20201030 15:54:48.700"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.708" endtime="20201030 15:54:48.724"></status>
</kw>
<msg timestamp="20201030 15:54:48.724" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.706" endtime="20201030 15:54:48.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.727" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.725" endtime="20201030 15:54:48.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.728" endtime="20201030 15:54:48.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.704" endtime="20201030 15:54:48.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.702" endtime="20201030 15:54:48.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.738" endtime="20201030 15:54:49.026"></status>
</kw>
<msg timestamp="20201030 15:54:49.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018491958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018493111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.737" endtime="20201030 15:54:49.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018491958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018493111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:49.030" endtime="20201030 15:54:49.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.039" endtime="20201030 15:54:49.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.734" endtime="20201030 15:54:49.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.732" endtime="20201030 15:54:49.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:49.046" level="INFO">${RESULT} = [{'diff': 1.153000000000265e-06}, {'diff': 1.1669999999998348e-06}, {'diff': 1.153000000000265e-06}, {'diff': 1.1389999999972256e-06}, {'diff': 1.1809999999994047e-06}, {'diff': 1.153000000000265e-06}...</msg>
<status status="PASS" starttime="20201030 15:54:49.042" endtime="20201030 15:54:49.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:49.050" level="INFO">${OVERHEAD} = {'diff': [1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.1670000000033043e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:54:49.047" endtime="20201030 15:54:49.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.054" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:49.053" endtime="20201030 15:54:49.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.057" level="INFO">VALUE: [1.153000000000265e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.1809999999994047e-06, 1.153000000000265e-06, 1.1520000000007913e-06, 1.1670000000033043e-06, 1.0969999999985158e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1660000000003612e-06, 1.1669999999998348e-06, 1.1249999999976557e-06, 1.1660000000003612e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.2220000000021103e-06, 1.1660000000003612e-06, 1.1659999999968917e-06, 1.1809999999994047e-06, 1.1660000000003612e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1669999999998348e-06, 1.153000000000265e-06, 1.1669999999998348e-06, 1.1380000000012214e-06, 1.1669999999998348e-06, 1.1520000000007913e-06, 1.2219999999986408e-06, 1.1529999999967955e-06, 1.179999999999931e-06, 1.179999999999931e-06, 1.1660000000003612e-06, 1.125000000001125e-06, 1.209000000002014e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.1660000000003612e-06]</msg>
<status status="PASS" starttime="20201030 15:54:49.055" endtime="20201030 15:54:49.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.051" endtime="20201030 15:54:49.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:49.063" endtime="20201030 15:54:49.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.061" endtime="20201030 15:54:49.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.060" endtime="20201030 15:54:49.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.701" endtime="20201030 15:54:49.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.700" endtime="20201030 15:54:49.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.409" endtime="20201030 15:54:49.084"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:41.335" endtime="20201030 15:54:49.084" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:49.091" endtime="20201030 15:54:49.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.090" endtime="20201030 15:54:49.111"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.125" endtime="20201030 15:54:49.143"></status>
</kw>
<msg timestamp="20201030 15:54:49.143" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.123" endtime="20201030 15:54:49.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.146" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.145" endtime="20201030 15:54:49.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.149" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:49.147" endtime="20201030 15:54:49.150"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:49.121" endtime="20201030 15:54:49.150"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:49.118" endtime="20201030 15:54:49.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.117" endtime="20201030 15:54:49.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:49.155" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:49.154" endtime="20201030 15:54:49.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.152" endtime="20201030 15:54:49.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.116" endtime="20201030 15:54:49.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.115" endtime="20201030 15:54:49.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.157" endtime="20201030 15:54:49.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.114" endtime="20201030 15:54:49.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.112" endtime="20201030 15:54:49.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.089" endtime="20201030 15:54:49.160"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.170" endtime="20201030 15:54:49.191"></status>
</kw>
<msg timestamp="20201030 15:54:49.192" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.168" endtime="20201030 15:54:49.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.194" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.193" endtime="20201030 15:54:49.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.196" endtime="20201030 15:54:49.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.164" endtime="20201030 15:54:49.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.162" endtime="20201030 15:54:49.199"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.201" endtime="20201030 15:54:49.202"></status>
</kw>
<msg timestamp="20201030 15:54:49.203" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:54:49.199" endtime="20201030 15:54:49.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.207" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:49.206" endtime="20201030 15:54:49.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.209" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:49.208" endtime="20201030 15:54:49.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.204" endtime="20201030 15:54:49.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.214" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:49.213" endtime="20201030 15:54:49.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.216" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:49.215" endtime="20201030 15:54:49.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.211" endtime="20201030 15:54:49.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.224" endtime="20201030 15:54:49.512"></status>
</kw>
<msg timestamp="20201030 15:54:49.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068493806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068499847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:49.222" endtime="20201030 15:54:49.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068493806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068499847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:49.516" endtime="20201030 15:54:49.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.525" endtime="20201030 15:54:49.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.220" endtime="20201030 15:54:49.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.218" endtime="20201030 15:54:49.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:49.531" level="INFO">${RESULT} = [{'diff': 6.040999999998298e-06}, {'diff': 6.999999999993123e-06}, {'diff': 7.013999999999632e-06}, {'diff': 7.0419999999987715e-06}, {'diff': 7.013999999999632e-06}, {'diff': 6.999999999993123e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:54:49.528" endtime="20201030 15:54:49.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:49.539" level="INFO">${OVERHEAD} = {'diff': [6.040999999998298e-06, 6.999999999993123e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 7.013999999999632e-06, 6.999999999993123e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.013...</msg>
<status status="PASS" starttime="20201030 15:54:49.533" endtime="20201030 15:54:49.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.546" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 15:54:49.544" endtime="20201030 15:54:49.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.550" level="INFO">VALUE: [6.040999999998298e-06, 6.999999999993123e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 7.013999999999632e-06, 6.999999999993123e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.013999999999632e-06, 6.930999999987808e-06, 6.972999999993457e-06, 7.013000000000158e-06, 7.068999999998438e-06, 7.027000000006667e-06, 7.013999999999632e-06, 7.0280000000061404e-06, 7.000000000007001e-06, 6.986000000000492e-06, 6.999999999993123e-06, 7.013999999999632e-06, 7.069999999997911e-06, 6.986000000000492e-06, 7.013999999999632e-06, 7.0280000000061404e-06, 7.013999999999632e-06, 6.999999999993123e-06, 6.999999999993123e-06, 7.000000000007001e-06, 7.013000000000158e-06, 6.999999999993123e-06, 7.013999999999632e-06, 6.999999999993123e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.000000000007001e-06, 7.013000000000158e-06, 7.013999999999632e-06, 7.000000000007001e-06, 7.0280000000061404e-06, 6.959000000000826e-06, 7.013999999999632e-06, 6.999999999993123e-06, 7.013999999999632e-06, 6.986000000000492e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.0280000000061404e-06, 7.026999999992789e-06, 7.013999999999632e-06, 7.013000000000158e-06]</msg>
<status status="PASS" starttime="20201030 15:54:49.548" endtime="20201030 15:54:49.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.540" endtime="20201030 15:54:49.551"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:49.559" endtime="20201030 15:54:49.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.555" endtime="20201030 15:54:49.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.554" endtime="20201030 15:54:49.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.160" endtime="20201030 15:54:49.580"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:49.086" endtime="20201030 15:54:49.580" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:49.587" endtime="20201030 15:54:49.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.586" endtime="20201030 15:54:49.607"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.622" endtime="20201030 15:54:49.640"></status>
</kw>
<msg timestamp="20201030 15:54:49.641" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.620" endtime="20201030 15:54:49.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.643" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.642" endtime="20201030 15:54:49.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.647" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:49.645" endtime="20201030 15:54:49.648"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:49.617" endtime="20201030 15:54:49.649"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:49.614" endtime="20201030 15:54:49.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.613" endtime="20201030 15:54:49.650"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:49.653" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:49.653" endtime="20201030 15:54:49.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.650" endtime="20201030 15:54:49.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.612" endtime="20201030 15:54:49.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.611" endtime="20201030 15:54:49.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.655" endtime="20201030 15:54:49.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.610" endtime="20201030 15:54:49.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.608" endtime="20201030 15:54:49.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.585" endtime="20201030 15:54:49.658"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.667" endtime="20201030 15:54:49.720"></status>
</kw>
<msg timestamp="20201030 15:54:49.720" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.665" endtime="20201030 15:54:49.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.723" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.721" endtime="20201030 15:54:49.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.724" endtime="20201030 15:54:49.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.662" endtime="20201030 15:54:49.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.660" endtime="20201030 15:54:49.727"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.729" endtime="20201030 15:54:49.731"></status>
</kw>
<msg timestamp="20201030 15:54:49.732" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:54:49.728" endtime="20201030 15:54:49.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.736" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:49.735" endtime="20201030 15:54:49.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.738" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:49.737" endtime="20201030 15:54:49.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.732" endtime="20201030 15:54:49.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.743" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:49.742" endtime="20201030 15:54:49.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.745" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:49.744" endtime="20201030 15:54:49.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.740" endtime="20201030 15:54:49.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.753" endtime="20201030 15:54:50.047"></status>
</kw>
<msg timestamp="20201030 15:54:50.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06999625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070009972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:49.751" endtime="20201030 15:54:50.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06999625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070009972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:50.053" endtime="20201030 15:54:50.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.066" endtime="20201030 15:54:50.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.749" endtime="20201030 15:54:50.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.747" endtime="20201030 15:54:50.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:50.078" level="INFO">${RESULT} = [{'diff': 1.3722000000007673e-05}, {'diff': 2.2374999999991152e-05}, {'diff': 2.2401999999990818e-05}, {'diff': 2.237500000000503e-05}, {'diff': 2.240300000000417e-05}, {'diff': 2.2387999999998187e-05...</msg>
<status status="PASS" starttime="20201030 15:54:50.072" endtime="20201030 15:54:50.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:50.085" level="INFO">${OVERHEAD} = {'diff': [1.3722000000007673e-05, 2.2374999999991152e-05, 2.2401999999990818e-05, 2.237500000000503e-05, 2.240300000000417e-05, 2.2387999999998187e-05, 2.237500000000503e-05, 2.236099999999852e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:54:50.080" endtime="20201030 15:54:50.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.093" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 15:54:50.091" endtime="20201030 15:54:50.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.098" level="INFO">VALUE: [1.3722000000007673e-05, 2.2374999999991152e-05, 2.2401999999990818e-05, 2.237500000000503e-05, 2.240300000000417e-05, 2.2387999999998187e-05, 2.237500000000503e-05, 2.236099999999852e-05, 2.238899999999766e-05, 2.236099999999852e-05, 2.236099999999852e-05, 2.238899999999766e-05, 2.237500000000503e-05, 2.237500000000503e-05, 2.2443999999996467e-05, 2.238900000001154e-05, 2.24169999999968e-05, 2.2402999999990292e-05, 2.2387999999998187e-05, 2.2374999999991152e-05, 2.2416000000011205e-05, 2.2458000000002976e-05, 2.238899999999766e-05, 2.240300000000417e-05, 2.2402999999990292e-05, 2.238899999999766e-05, 2.2387999999998187e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.24169999999968e-05, 2.2374999999991152e-05, 2.2361999999997995e-05, 2.238899999999766e-05, 2.237500000000503e-05, 2.2458000000002976e-05, 2.243100000000331e-05, 2.2402999999990292e-05, 2.2374999999991152e-05, 2.2443999999996467e-05, 2.2401999999990818e-05, 2.2401999999990818e-05, 2.237500000000503e-05, 2.238899999999766e-05, 2.2387999999998187e-05, 2.240300000000417e-05, 2.244499999999594e-05, 2.238900000001154e-05, 2.2387999999998187e-05, 2.243100000000331e-05, 2.233299999999938e-05]</msg>
<status status="PASS" starttime="20201030 15:54:50.095" endtime="20201030 15:54:50.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.087" endtime="20201030 15:54:50.101"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:50.108" endtime="20201030 15:54:50.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.105" endtime="20201030 15:54:50.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.103" endtime="20201030 15:54:50.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.659" endtime="20201030 15:54:50.131"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:49.582" endtime="20201030 15:54:50.133" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:50.146" endtime="20201030 15:54:50.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.144" endtime="20201030 15:54:50.168"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.193" endtime="20201030 15:54:50.210"></status>
</kw>
<msg timestamp="20201030 15:54:50.210" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.191" endtime="20201030 15:54:50.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.213" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.212" endtime="20201030 15:54:50.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.216" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:50.214" endtime="20201030 15:54:50.217"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:50.184" endtime="20201030 15:54:50.217"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:50.181" endtime="20201030 15:54:50.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.179" endtime="20201030 15:54:50.218"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:50.222" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:50.221" endtime="20201030 15:54:50.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.219" endtime="20201030 15:54:50.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.178" endtime="20201030 15:54:50.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.175" endtime="20201030 15:54:50.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.224" endtime="20201030 15:54:50.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.173" endtime="20201030 15:54:50.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.169" endtime="20201030 15:54:50.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.141" endtime="20201030 15:54:50.226"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.235" endtime="20201030 15:54:50.368"></status>
</kw>
<msg timestamp="20201030 15:54:50.368" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.233" endtime="20201030 15:54:50.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.371" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.370" endtime="20201030 15:54:50.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.373" endtime="20201030 15:54:50.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.231" endtime="20201030 15:54:50.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.229" endtime="20201030 15:54:50.375"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.377" endtime="20201030 15:54:50.379"></status>
</kw>
<msg timestamp="20201030 15:54:50.380" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:54:50.376" endtime="20201030 15:54:50.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.389" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:50.387" endtime="20201030 15:54:50.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.393" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:50.391" endtime="20201030 15:54:50.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.382" endtime="20201030 15:54:50.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.405" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:50.403" endtime="20201030 15:54:50.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.410" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:50.408" endtime="20201030 15:54:50.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.399" endtime="20201030 15:54:50.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.425" endtime="20201030 15:54:50.726"></status>
</kw>
<msg timestamp="20201030 15:54:50.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079222264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079247194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:50.422" endtime="20201030 15:54:50.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079222264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079247194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:50.730" endtime="20201030 15:54:50.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.738" endtime="20201030 15:54:50.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.416" endtime="20201030 15:54:50.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.413" endtime="20201030 15:54:50.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:50.744" level="INFO">${RESULT} = [{'diff': 2.4930000000006336e-05}, {'diff': 4.1402999999995416e-05}, {'diff': 4.140199999999594e-05}, {'diff': 4.1402999999995416e-05}, {'diff': 4.1402999999995416e-05}, {'diff': 4.1473000000000204e-0...</msg>
<status status="PASS" starttime="20201030 15:54:50.741" endtime="20201030 15:54:50.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:50.748" level="INFO">${OVERHEAD} = {'diff': [2.4930000000006336e-05, 4.1402999999995416e-05, 4.140199999999594e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.1473000000000204e-05, 4.1389000000002785e-05, 4.1389000000002785e-05,...</msg>
<status status="PASS" starttime="20201030 15:54:50.745" endtime="20201030 15:54:50.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.754" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 15:54:50.753" endtime="20201030 15:54:50.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.756" level="INFO">VALUE: [2.4930000000006336e-05, 4.1402999999995416e-05, 4.140199999999594e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.1473000000000204e-05, 4.1389000000002785e-05, 4.1389000000002785e-05, 4.1417000000001924e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.1430999999994556e-05, 4.1430999999994556e-05, 4.1389000000002785e-05, 4.1374999999996276e-05, 4.1417000000001924e-05, 4.1445000000001064e-05, 4.1389000000002785e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.1389000000002785e-05, 4.141699999998805e-05, 4.141599999998857e-05, 4.1389000000002785e-05, 4.1402999999995416e-05, 4.1389000000002785e-05, 4.143099999998068e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.141599999998857e-05, 4.1389000000002785e-05, 4.140199999999594e-05, 4.136100000001752e-05, 4.1389000000002785e-05, 4.1402999999995416e-05, 4.1389000000002785e-05, 4.1389000000002785e-05, 4.141699999998805e-05, 4.140199999999594e-05, 4.136099999998977e-05, 4.1402999999995416e-05, 4.141699999998805e-05, 4.140199999999594e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.141599999998857e-05, 4.144400000000159e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.141699999998805e-05]</msg>
<status status="PASS" starttime="20201030 15:54:50.755" endtime="20201030 15:54:50.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.749" endtime="20201030 15:54:50.757"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:50.761" endtime="20201030 15:54:50.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.760" endtime="20201030 15:54:50.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.758" endtime="20201030 15:54:50.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.227" endtime="20201030 15:54:50.782"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:50.137" endtime="20201030 15:54:50.782" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:50.789" endtime="20201030 15:54:50.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.788" endtime="20201030 15:54:50.809"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.828" endtime="20201030 15:54:50.846"></status>
</kw>
<msg timestamp="20201030 15:54:50.846" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.826" endtime="20201030 15:54:50.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.850" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.848" endtime="20201030 15:54:50.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.853" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:50.851" endtime="20201030 15:54:50.854"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:50.823" endtime="20201030 15:54:50.854"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:50.819" endtime="20201030 15:54:50.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.817" endtime="20201030 15:54:50.855"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:50.859" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:50.858" endtime="20201030 15:54:50.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.856" endtime="20201030 15:54:50.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.816" endtime="20201030 15:54:50.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.815" endtime="20201030 15:54:50.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.861" endtime="20201030 15:54:50.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.813" endtime="20201030 15:54:50.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.810" endtime="20201030 15:54:50.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.786" endtime="20201030 15:54:50.864"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.876" endtime="20201030 15:54:50.898"></status>
</kw>
<msg timestamp="20201030 15:54:50.898" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.874" endtime="20201030 15:54:50.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.901" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.899" endtime="20201030 15:54:50.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.902" endtime="20201030 15:54:50.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.868" endtime="20201030 15:54:50.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.866" endtime="20201030 15:54:50.905"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.907" endtime="20201030 15:54:50.909"></status>
</kw>
<msg timestamp="20201030 15:54:50.909" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:54:50.906" endtime="20201030 15:54:50.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.913" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:50.912" endtime="20201030 15:54:50.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.915" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:50.914" endtime="20201030 15:54:50.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.910" endtime="20201030 15:54:50.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.920" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:50.919" endtime="20201030 15:54:50.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.922" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:50.921" endtime="20201030 15:54:50.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.917" endtime="20201030 15:54:50.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.930" endtime="20201030 15:54:51.217"></status>
</kw>
<msg timestamp="20201030 15:54:51.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076544903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076549472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:50.928" endtime="20201030 15:54:51.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076544903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076549472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.221" endtime="20201030 15:54:51.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.230" endtime="20201030 15:54:51.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.926" endtime="20201030 15:54:51.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.924" endtime="20201030 15:54:51.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:51.236" level="INFO">${RESULT} = [{'diff': 4.568999999995937e-06}, {'diff': 4.624999999994217e-06}, {'diff': 4.58400000000192e-06}, {'diff': 4.583000000002446e-06}, {'diff': 4.569000000009815e-06}, {'diff': 4.55600000000278e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:51.233" endtime="20201030 15:54:51.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:51.241" level="INFO">${OVERHEAD} = {'diff': [4.568999999995937e-06, 4.624999999994217e-06, 4.58400000000192e-06, 4.583000000002446e-06, 4.569000000009815e-06, 4.55600000000278e-06, 4.58400000000192e-06, 4.5829999999885684e-06, 4.568999...</msg>
<status status="PASS" starttime="20201030 15:54:51.237" endtime="20201030 15:54:51.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.246" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 15:54:51.245" endtime="20201030 15:54:51.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.248" level="INFO">VALUE: [4.568999999995937e-06, 4.624999999994217e-06, 4.58400000000192e-06, 4.583000000002446e-06, 4.569000000009815e-06, 4.55600000000278e-06, 4.58400000000192e-06, 4.5829999999885684e-06, 4.568999999995937e-06, 4.596999999995077e-06, 4.58400000000192e-06, 4.58400000000192e-06, 4.596999999995077e-06, 4.583000000002446e-06, 4.569999999995411e-06, 4.5829999999885684e-06, 4.583999999988042e-06, 4.583000000002446e-06, 4.568999999995937e-06, 4.568999999995937e-06, 4.58400000000192e-06, 4.52800000000364e-06, 4.5829999999885684e-06, 4.570000000009289e-06, 4.541999999996271e-06, 4.583000000002446e-06, 4.568999999995937e-06, 4.570000000009289e-06, 4.583000000002446e-06, 4.485999999997992e-06, 4.568999999995937e-06, 4.583000000002446e-06, 4.5829999999885684e-06, 4.5829999999885684e-06, 4.555999999988902e-06, 4.55600000000278e-06, 4.555000000003306e-06, 4.58400000000192e-06, 4.583999999988042e-06, 4.569999999995411e-06, 4.527000000004167e-06, 4.570000000009289e-06, 4.55600000000278e-06, 4.596999999995077e-06, 4.570000000009289e-06, 4.583000000002446e-06, 4.569000000009815e-06, 4.58400000000192e-06, 4.568999999995937e-06, 4.554999999989429e-06]</msg>
<status status="PASS" starttime="20201030 15:54:51.247" endtime="20201030 15:54:51.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.242" endtime="20201030 15:54:51.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:51.253" endtime="20201030 15:54:51.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.252" endtime="20201030 15:54:51.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.251" endtime="20201030 15:54:51.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.864" endtime="20201030 15:54:51.274"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:50.784" endtime="20201030 15:54:51.274" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:51.281" endtime="20201030 15:54:51.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.280" endtime="20201030 15:54:51.301"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.314" endtime="20201030 15:54:51.333"></status>
</kw>
<msg timestamp="20201030 15:54:51.333" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.313" endtime="20201030 15:54:51.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.336" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.334" endtime="20201030 15:54:51.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.339" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:51.337" endtime="20201030 15:54:51.339"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:51.310" endtime="20201030 15:54:51.340"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:51.308" endtime="20201030 15:54:51.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.306" endtime="20201030 15:54:51.341"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:51.345" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:51.344" endtime="20201030 15:54:51.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.342" endtime="20201030 15:54:51.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.306" endtime="20201030 15:54:51.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.305" endtime="20201030 15:54:51.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.346" endtime="20201030 15:54:51.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.304" endtime="20201030 15:54:51.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.302" endtime="20201030 15:54:51.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.279" endtime="20201030 15:54:51.349"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.357" endtime="20201030 15:54:51.411"></status>
</kw>
<msg timestamp="20201030 15:54:51.412" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.356" endtime="20201030 15:54:51.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.414" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.413" endtime="20201030 15:54:51.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.416" endtime="20201030 15:54:51.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.353" endtime="20201030 15:54:51.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.351" endtime="20201030 15:54:51.418"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.420" endtime="20201030 15:54:51.422"></status>
</kw>
<msg timestamp="20201030 15:54:51.422" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:54:51.419" endtime="20201030 15:54:51.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.427" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:51.426" endtime="20201030 15:54:51.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.429" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:51.428" endtime="20201030 15:54:51.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.423" endtime="20201030 15:54:51.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.433" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:51.432" endtime="20201030 15:54:51.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.435" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:51.434" endtime="20201030 15:54:51.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.430" endtime="20201030 15:54:51.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.446" endtime="20201030 15:54:51.739"></status>
</kw>
<msg timestamp="20201030 15:54:51.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067014819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067029444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.444" endtime="20201030 15:54:51.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067014819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067029444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.746" endtime="20201030 15:54:51.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.756" endtime="20201030 15:54:51.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.439" endtime="20201030 15:54:51.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.437" endtime="20201030 15:54:51.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:51.763" level="INFO">${RESULT} = [{'diff': 1.462499999999034e-05}, {'diff': 1.45969999999912e-05}, {'diff': 1.4570000000005412e-05}, {'diff': 1.4583999999998043e-05}, {'diff': 1.4569000000005938e-05}, {'diff': 1.4569999999991534e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:51.760" endtime="20201030 15:54:51.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:51.767" level="INFO">${OVERHEAD} = {'diff': [1.462499999999034e-05, 1.45969999999912e-05, 1.4570000000005412e-05, 1.4583999999998043e-05, 1.4569000000005938e-05, 1.4569999999991534e-05, 1.4570000000005412e-05, 1.4570000000005412e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:54:51.764" endtime="20201030 15:54:51.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.772" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 15:54:51.771" endtime="20201030 15:54:51.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.775" level="INFO">VALUE: [1.462499999999034e-05, 1.45969999999912e-05, 1.4570000000005412e-05, 1.4583999999998043e-05, 1.4569000000005938e-05, 1.4569999999991534e-05, 1.4570000000005412e-05, 1.4570000000005412e-05, 1.4583999999998043e-05, 1.4597000000005078e-05, 1.45969999999912e-05, 1.4611999999997183e-05, 1.458400000001192e-05, 1.4583000000012447e-05, 1.4611000000011587e-05, 1.461099999999771e-05, 1.4569999999991534e-05, 1.4569000000005938e-05, 1.458299999999857e-05, 1.458299999999857e-05, 1.4638999999996849e-05, 1.4597000000005078e-05, 1.4598000000004552e-05, 1.4570000000005412e-05, 1.458299999999857e-05, 1.4598000000004552e-05, 1.45969999999912e-05, 1.4597999999990674e-05, 1.461099999999771e-05, 1.455499999999943e-05, 1.465299999998948e-05, 1.461099999999771e-05, 1.452700000000029e-05, 1.4598000000004552e-05, 1.465299999998948e-05, 1.4597000000005078e-05, 1.4569999999991534e-05, 1.4597000000005078e-05, 1.4597000000005078e-05, 1.4569999999991534e-05, 1.455499999999943e-05, 1.4569000000005938e-05, 1.4541999999992394e-05, 1.4570000000005412e-05, 1.4625000000004218e-05, 1.4555999999998903e-05, 1.4597000000005078e-05, 1.4583999999998043e-05, 1.455499999999943e-05, 1.45969999999912e-05]</msg>
<status status="PASS" starttime="20201030 15:54:51.773" endtime="20201030 15:54:51.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.768" endtime="20201030 15:54:51.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:51.780" endtime="20201030 15:54:51.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.779" endtime="20201030 15:54:51.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.777" endtime="20201030 15:54:51.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.350" endtime="20201030 15:54:51.801"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:51.276" endtime="20201030 15:54:51.801" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:51.809" endtime="20201030 15:54:51.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.807" endtime="20201030 15:54:51.829"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.843" endtime="20201030 15:54:51.859"></status>
</kw>
<msg timestamp="20201030 15:54:51.860" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.842" endtime="20201030 15:54:51.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.863" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.861" endtime="20201030 15:54:51.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.866" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:51.864" endtime="20201030 15:54:51.866"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:51.839" endtime="20201030 15:54:51.867"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:51.836" endtime="20201030 15:54:51.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.835" endtime="20201030 15:54:51.867"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:51.871" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:51.871" endtime="20201030 15:54:51.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.868" endtime="20201030 15:54:51.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.833" endtime="20201030 15:54:51.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.833" endtime="20201030 15:54:51.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.873" endtime="20201030 15:54:51.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.831" endtime="20201030 15:54:51.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.829" endtime="20201030 15:54:51.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.806" endtime="20201030 15:54:51.876"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.885" endtime="20201030 15:54:52.023"></status>
</kw>
<msg timestamp="20201030 15:54:52.024" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.883" endtime="20201030 15:54:52.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.030" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.026" endtime="20201030 15:54:52.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.033" endtime="20201030 15:54:52.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.881" endtime="20201030 15:54:52.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.878" endtime="20201030 15:54:52.039"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.044" endtime="20201030 15:54:52.047"></status>
</kw>
<msg timestamp="20201030 15:54:52.048" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:54:52.041" endtime="20201030 15:54:52.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.057" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:52.055" endtime="20201030 15:54:52.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.063" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:52.060" endtime="20201030 15:54:52.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.050" endtime="20201030 15:54:52.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.080" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:52.075" endtime="20201030 15:54:52.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.087" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:52.084" endtime="20201030 15:54:52.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.068" endtime="20201030 15:54:52.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.101" endtime="20201030 15:54:52.394"></status>
</kw>
<msg timestamp="20201030 15:54:52.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067849403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067872097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:52.098" endtime="20201030 15:54:52.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067849403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067872097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:52.398" endtime="20201030 15:54:52.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.406" endtime="20201030 15:54:52.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.095" endtime="20201030 15:54:52.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.092" endtime="20201030 15:54:52.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:52.413" level="INFO">${RESULT} = [{'diff': 2.2694000000003656e-05}, {'diff': 2.2707999999996287e-05}, {'diff': 2.269500000000313e-05}, {'diff': 2.2708000000010164e-05}, {'diff': 2.2679999999997147e-05}, {'diff': 2.2722000000002796e-0...</msg>
<status status="PASS" starttime="20201030 15:54:52.410" endtime="20201030 15:54:52.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:52.417" level="INFO">${OVERHEAD} = {'diff': [2.2694000000003656e-05, 2.2707999999996287e-05, 2.269500000000313e-05, 2.2708000000010164e-05, 2.2679999999997147e-05, 2.2722000000002796e-05, 2.2722000000002796e-05, 2.272299999998839e-05, ...</msg>
<status status="PASS" starttime="20201030 15:54:52.414" endtime="20201030 15:54:52.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.422" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 15:54:52.421" endtime="20201030 15:54:52.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.425" level="INFO">VALUE: [2.2694000000003656e-05, 2.2707999999996287e-05, 2.269500000000313e-05, 2.2708000000010164e-05, 2.2679999999997147e-05, 2.2722000000002796e-05, 2.2722000000002796e-05, 2.272299999998839e-05, 2.270899999999576e-05, 2.2764000000008444e-05, 2.2722000000002796e-05, 2.269500000000313e-05, 2.2722000000002796e-05, 2.2707999999996287e-05, 2.2707999999996287e-05, 2.2707999999996287e-05, 2.2707999999996287e-05, 2.2764000000008444e-05, 2.2707999999996287e-05, 2.270899999999576e-05, 2.2721999999988918e-05, 2.2694000000003656e-05, 2.2708000000010164e-05, 2.2736000000009304e-05, 2.2778000000001075e-05, 2.2708000000010164e-05, 2.2709000000009638e-05, 2.270799999998241e-05, 2.272300000000227e-05, 2.2694000000017533e-05, 2.272199999997504e-05, 2.269499999998925e-05, 2.2722000000002796e-05, 2.2708000000010164e-05, 2.270799999998241e-05, 2.268099999999662e-05, 2.270799999998241e-05, 2.2708000000010164e-05, 2.2695000000017007e-05, 2.272300000000227e-05, 2.2708000000010164e-05, 2.2693999999989778e-05, 2.269499999998925e-05, 2.2708000000010164e-05, 2.2695000000017007e-05, 2.270799999998241e-05, 2.2708999999981883e-05, 2.2735999999995427e-05, 2.2735999999995427e-05, 2.2735999999995427e-05]</msg>
<status status="PASS" starttime="20201030 15:54:52.423" endtime="20201030 15:54:52.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.418" endtime="20201030 15:54:52.542"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:52.546" endtime="20201030 15:54:52.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.544" endtime="20201030 15:54:52.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.543" endtime="20201030 15:54:52.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.877" endtime="20201030 15:54:52.567"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:51.803" endtime="20201030 15:54:52.567" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:52.574" endtime="20201030 15:54:52.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.573" endtime="20201030 15:54:52.594"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.608" endtime="20201030 15:54:52.626"></status>
</kw>
<msg timestamp="20201030 15:54:52.627" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.606" endtime="20201030 15:54:52.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.629" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.628" endtime="20201030 15:54:52.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.632" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:52.630" endtime="20201030 15:54:52.633"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:52.603" endtime="20201030 15:54:52.633"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:52.601" endtime="20201030 15:54:52.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.600" endtime="20201030 15:54:52.634"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:52.638" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:52.637" endtime="20201030 15:54:52.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.635" endtime="20201030 15:54:52.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.599" endtime="20201030 15:54:52.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.598" endtime="20201030 15:54:52.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.640" endtime="20201030 15:54:52.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.597" endtime="20201030 15:54:52.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.595" endtime="20201030 15:54:52.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.571" endtime="20201030 15:54:52.643"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.647" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:54:52.655" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:54:53.812" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:54:52.646" endtime="20201030 15:54:53.813"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.816" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201030 15:54:53.814" endtime="20201030 15:54:54.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.644" endtime="20201030 15:54:54.819"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.844" endtime="20201030 15:54:54.859"></status>
</kw>
<msg timestamp="20201030 15:54:54.860" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.839" endtime="20201030 15:54:54.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.865" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.862" endtime="20201030 15:54:54.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.868" endtime="20201030 15:54:54.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.833" endtime="20201030 15:54:54.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.829" endtime="20201030 15:54:54.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.888" endtime="20201030 15:54:55.194"></status>
</kw>
<msg timestamp="20201030 15:54:55.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.798812486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.118811389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:54.885" endtime="20201030 15:54:55.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.798812486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.118811389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.198" endtime="20201030 15:54:55.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.207" endtime="20201030 15:54:55.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.879" endtime="20201030 15:54:55.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.875" endtime="20201030 15:54:55.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:55.214" level="INFO">${PHILIP_RES} = [{'diff': 0.319998903}, {'diff': 1.9041999999913628e-05}, {'diff': 6.179999999744723e-06}, {'diff': 6.180999999827463e-06}, {'diff': 6.2080000002850966e-06}, {'diff': 6.167000000001366e-06}, {'diff': ...</msg>
<status status="PASS" starttime="20201030 15:54:55.210" endtime="20201030 15:54:55.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:55.219" level="INFO">${RESULT} = {'diff': [0.319998903, 1.9041999999913628e-05, 6.179999999744723e-06, 6.180999999827463e-06, 6.2080000002850966e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.180000000188812e-06, 6.236000000381...</msg>
<status status="PASS" starttime="20201030 15:54:55.215" endtime="20201030 15:54:55.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.224" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:55.223" endtime="20201030 15:54:55.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.226" level="INFO">VALUE: [0.319998903, 1.9041999999913628e-05, 6.179999999744723e-06, 6.180999999827463e-06, 6.2080000002850966e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.180000000188812e-06, 6.236000000381381e-06, 6.19400000001491e-06, 6.180000000188812e-06, 6.167000000001366e-06, 6.153000000175268e-06, 6.167000000001366e-06, 6.179999999744723e-06, 6.152000000092528e-06, 6.19500000009765e-06, 6.1659999999186255e-06, 6.167000000001366e-06, 6.181000000271553e-06, 6.180000000188812e-06, 6.167000000001366e-06, 6.180999999827463e-06, 6.180999999827463e-06, 6.180999999827463e-06, 6.180000000188812e-06, 6.19500000009765e-06, 6.222000000111194e-06, 6.167000000001366e-06, 6.167000000001366e-06, 6.180000000188812e-06, 6.181000000271553e-06, 6.167000000001366e-06, 6.180999999827463e-06, 6.208999999923748e-06, 6.179999999744723e-06, 6.167000000001366e-06, 6.193999999570821e-06, 6.167000000001366e-06, 6.181000000271553e-06, 6.125000000078984e-06, 6.180000000188812e-06, 6.222999999749845e-06, 6.19400000001491e-06, 6.167000000001366e-06, 6.179999999744723e-06, 6.181000000271553e-06, 6.180999999827463e-06, 6.1659999999186255e-06, 6.181000000271553e-06, 6.180000000188812e-06]</msg>
<status status="PASS" starttime="20201030 15:54:55.225" endtime="20201030 15:54:55.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.220" endtime="20201030 15:54:55.227"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:55.231" endtime="20201030 15:54:55.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.229" endtime="20201030 15:54:55.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.228" endtime="20201030 15:54:55.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.823" endtime="20201030 15:54:55.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.821" endtime="20201030 15:54:55.253"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.262" endtime="20201030 15:54:55.273"></status>
</kw>
<msg timestamp="20201030 15:54:55.274" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.260" endtime="20201030 15:54:55.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.276" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.275" endtime="20201030 15:54:55.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.277" endtime="20201030 15:54:55.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.258" endtime="20201030 15:54:55.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.255" endtime="20201030 15:54:55.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.287" endtime="20201030 15:54:55.573"></status>
</kw>
<msg timestamp="20201030 15:54:55.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019909444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019918611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.285" endtime="20201030 15:54:55.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019909444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019918611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.577" endtime="20201030 15:54:55.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.585" endtime="20201030 15:54:55.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.283" endtime="20201030 15:54:55.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.281" endtime="20201030 15:54:55.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:55.594" level="INFO">${PHILIP_RES} = [{'diff': 9.167000000000897e-06}, {'diff': 8.917000000000647e-06}, {'diff': 8.888999999998037e-06}, {'diff': 8.917000000000647e-06}, {'diff': 8.861000000002367e-06}, {'diff': 8.903000000001077e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:55.589" endtime="20201030 15:54:55.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:55.601" level="INFO">${RESULT} = {'diff': [9.167000000000897e-06, 8.917000000000647e-06, 8.888999999998037e-06, 8.917000000000647e-06, 8.861000000002367e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.917000000000647e-06, 8.8890...</msg>
<status status="PASS" starttime="20201030 15:54:55.595" endtime="20201030 15:54:55.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.607" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:55.605" endtime="20201030 15:54:55.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.611" level="INFO">VALUE: [9.167000000000897e-06, 8.917000000000647e-06, 8.888999999998037e-06, 8.917000000000647e-06, 8.861000000002367e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.917000000000647e-06, 8.889000000001507e-06, 8.930000000000743e-06, 8.889000000001507e-06, 8.874999999998467e-06, 8.874999999998467e-06, 8.903000000001077e-06, 8.916999999997177e-06, 8.888999999998037e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.902000000001603e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.902999999997607e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.971999999999453e-06, 8.903000000001077e-06, 8.917000000000647e-06, 8.901999999998134e-06, 8.917000000000647e-06, 8.874999999998467e-06, 8.944000000000313e-06, 8.903000000001077e-06, 8.944000000000313e-06, 8.888000000002033e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.915999999997704e-06, 8.944999999999786e-06, 8.875000000001937e-06, 8.888999999998037e-06, 8.875000000001937e-06, 8.916999999997177e-06, 8.889000000001507e-06, 8.901999999998134e-06, 8.889000000001507e-06, 8.917000000000647e-06, 8.805000000000618e-06, 8.889000000001507e-06, 8.902999999997607e-06]</msg>
<status status="PASS" starttime="20201030 15:54:55.608" endtime="20201030 15:54:55.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.602" endtime="20201030 15:54:55.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:55.617" endtime="20201030 15:54:55.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.615" endtime="20201030 15:54:55.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.614" endtime="20201030 15:54:55.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.254" endtime="20201030 15:54:55.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.253" endtime="20201030 15:54:55.641"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.659" endtime="20201030 15:54:55.674"></status>
</kw>
<msg timestamp="20201030 15:54:55.675" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.656" endtime="20201030 15:54:55.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.681" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.678" endtime="20201030 15:54:55.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.683" endtime="20201030 15:54:55.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.650" endtime="20201030 15:54:55.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.646" endtime="20201030 15:54:55.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.702" endtime="20201030 15:54:55.993"></status>
</kw>
<msg timestamp="20201030 15:54:55.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032597111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032609208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.699" endtime="20201030 15:54:55.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032597111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032609208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.998" endtime="20201030 15:54:56.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.006" endtime="20201030 15:54:56.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.693" endtime="20201030 15:54:56.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.689" endtime="20201030 15:54:56.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:56.013" level="INFO">${PHILIP_RES} = [{'diff': 1.2097000000002578e-05}, {'diff': 1.1792000000003522e-05}, {'diff': 1.1833999999995293e-05}, {'diff': 1.1847000000002328e-05}, {'diff': 1.1861000000001898e-05}, {'diff': 1.1860999999994959e-...</msg>
<status status="PASS" starttime="20201030 15:54:56.009" endtime="20201030 15:54:56.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:56.017" level="INFO">${RESULT} = {'diff': [1.2097000000002578e-05, 1.1792000000003522e-05, 1.1833999999995293e-05, 1.1847000000002328e-05, 1.1861000000001898e-05, 1.1860999999994959e-05, 1.1889000000001038e-05, 1.1834000000002232e-05...</msg>
<status status="PASS" starttime="20201030 15:54:56.014" endtime="20201030 15:54:56.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.022" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:56.021" endtime="20201030 15:54:56.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.025" level="INFO">VALUE: [1.2097000000002578e-05, 1.1792000000003522e-05, 1.1833999999995293e-05, 1.1847000000002328e-05, 1.1861000000001898e-05, 1.1860999999994959e-05, 1.1889000000001038e-05, 1.1834000000002232e-05, 1.1861000000001898e-05, 1.1874999999994529e-05, 1.1847000000002328e-05, 1.1791000000004048e-05, 1.1846999999995389e-05, 1.1861000000001898e-05, 1.1875000000001468e-05, 1.1860999999994959e-05, 1.1889000000001038e-05, 1.1847000000002328e-05, 1.1848000000001802e-05, 1.1861999999994433e-05, 1.1861000000001898e-05, 1.1847000000002328e-05, 1.1832999999995819e-05, 1.1861000000001898e-05, 1.1875000000001468e-05, 1.1819999999995723e-05, 1.1847000000002328e-05, 1.1861000000001898e-05, 1.1930999999999747e-05, 1.181899999999625e-05, 1.1875000000001468e-05, 1.1847000000002328e-05, 1.1889000000001038e-05, 1.1861000000001898e-05, 1.1861000000001898e-05, 1.1847999999994863e-05, 1.1847000000002328e-05, 1.1861000000001898e-05, 1.1846999999995389e-05, 1.1832999999995819e-05, 1.1847000000002328e-05, 1.1889000000001038e-05, 1.1846999999995389e-05, 1.1847000000002328e-05, 1.1819000000003188e-05, 1.1860999999994959e-05, 1.1861000000001898e-05, 1.1875000000001468e-05, 1.1846999999995389e-05, 1.1847000000002328e-05]</msg>
<status status="PASS" starttime="20201030 15:54:56.023" endtime="20201030 15:54:56.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.018" endtime="20201030 15:54:56.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:56.030" endtime="20201030 15:54:56.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.029" endtime="20201030 15:54:56.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.027" endtime="20201030 15:54:56.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.643" endtime="20201030 15:54:56.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.642" endtime="20201030 15:54:56.051"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.061" endtime="20201030 15:54:56.072"></status>
</kw>
<msg timestamp="20201030 15:54:56.072" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.058" endtime="20201030 15:54:56.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.074" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.073" endtime="20201030 15:54:56.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.075" endtime="20201030 15:54:56.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.055" endtime="20201030 15:54:56.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.054" endtime="20201030 15:54:56.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.085" endtime="20201030 15:54:56.371"></status>
</kw>
<msg timestamp="20201030 15:54:56.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018886569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018901875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.083" endtime="20201030 15:54:56.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018886569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018901875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.375" endtime="20201030 15:54:56.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.385" endtime="20201030 15:54:56.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.081" endtime="20201030 15:54:56.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.079" endtime="20201030 15:54:56.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:56.393" level="INFO">${PHILIP_RES} = [{'diff': 1.5305999999999653e-05}, {'diff': 1.5041999999999833e-05}, {'diff': 1.5028000000000263e-05}, {'diff': 1.5014000000000693e-05}, {'diff': 1.5028000000000263e-05}, {'diff': 1.502700000000079e-0...</msg>
<status status="PASS" starttime="20201030 15:54:56.389" endtime="20201030 15:54:56.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:56.398" level="INFO">${RESULT} = {'diff': [1.5305999999999653e-05, 1.5041999999999833e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.502700000000079e-05, 1.502700000000079e-05, 1.5028000000000263e-05, ...</msg>
<status status="PASS" starttime="20201030 15:54:56.395" endtime="20201030 15:54:56.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.407" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:56.403" endtime="20201030 15:54:56.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.410" level="INFO">VALUE: [1.5305999999999653e-05, 1.5041999999999833e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.502700000000079e-05, 1.502700000000079e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5069999999998973e-05, 1.502700000000079e-05, 1.505499999999993e-05, 1.5028000000000263e-05, 1.502700000000079e-05, 1.504100000000036e-05, 1.5028000000000263e-05, 1.4986000000001554e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5027999999996794e-05, 1.5027999999996794e-05, 1.501299999999775e-05, 1.4943999999999374e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.4943999999999374e-05, 1.5028000000000263e-05, 1.5098000000001582e-05, 1.5000000000001124e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5069999999998973e-05, 1.5041999999999833e-05, 1.5097999999998113e-05, 1.5027999999996794e-05, 1.5041999999999833e-05, 1.5013999999997224e-05, 1.5041999999999833e-05, 1.4971999999998514e-05, 1.504100000000036e-05, 1.4999999999997654e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.5028000000000263e-05]</msg>
<status status="PASS" starttime="20201030 15:54:56.409" endtime="20201030 15:54:56.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.399" endtime="20201030 15:54:56.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:56.415" endtime="20201030 15:54:56.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.413" endtime="20201030 15:54:56.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.412" endtime="20201030 15:54:56.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.052" endtime="20201030 15:54:56.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.052" endtime="20201030 15:54:56.436"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.444" endtime="20201030 15:54:56.458"></status>
</kw>
<msg timestamp="20201030 15:54:56.459" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.443" endtime="20201030 15:54:56.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.461" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.460" endtime="20201030 15:54:56.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.462" endtime="20201030 15:54:56.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.440" endtime="20201030 15:54:56.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.438" endtime="20201030 15:54:56.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.471" endtime="20201030 15:54:56.757"></status>
</kw>
<msg timestamp="20201030 15:54:56.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017905833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017924528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.470" endtime="20201030 15:54:56.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017905833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017924528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.761" endtime="20201030 15:54:56.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.770" endtime="20201030 15:54:56.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.467" endtime="20201030 15:54:56.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.465" endtime="20201030 15:54:56.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:56.776" level="INFO">${PHILIP_RES} = [{'diff': 1.869499999999913e-05}, {'diff': 1.843100000000278e-05}, {'diff': 1.837500000000103e-05}, {'diff': 1.834699999999842e-05}, {'diff': 1.841699999999974e-05}, {'diff': 1.843099999999931e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:56.773" endtime="20201030 15:54:56.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:56.781" level="INFO">${RESULT} = {'diff': [1.869499999999913e-05, 1.843100000000278e-05, 1.837500000000103e-05, 1.834699999999842e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.837500000000103e-05, 1.844...</msg>
<status status="PASS" starttime="20201030 15:54:56.777" endtime="20201030 15:54:56.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.785" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:56.784" endtime="20201030 15:54:56.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.788" level="INFO">VALUE: [1.869499999999913e-05, 1.843100000000278e-05, 1.837500000000103e-05, 1.834699999999842e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.837500000000103e-05, 1.844499999999888e-05, 1.843100000000278e-05, 1.8416000000000265e-05, 1.8443999999999405e-05, 1.841699999999974e-05, 1.844500000000235e-05, 1.8416000000000265e-05, 1.8416000000000265e-05, 1.843099999999931e-05, 1.837500000000103e-05, 1.840300000000017e-05, 1.8416000000000265e-05, 1.845900000000192e-05, 1.843100000000278e-05, 1.8443999999999405e-05, 1.8429999999999835e-05, 1.8443999999999405e-05, 1.841700000000321e-05, 1.843099999999931e-05, 1.8416000000000265e-05, 1.8458000000002445e-05, 1.84029999999967e-05, 1.843099999999931e-05, 1.8416000000000265e-05, 1.8443999999999405e-05, 1.841700000000321e-05, 1.844499999999888e-05, 1.840300000000017e-05, 1.8429999999999835e-05, 1.841700000000321e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.8443999999999405e-05, 1.8444000000002875e-05, 1.843099999999931e-05, 1.841699999999974e-05, 1.8429999999999835e-05, 1.8430000000003305e-05, 1.843099999999931e-05, 1.8457999999998975e-05, 1.8429999999999835e-05, 1.8444000000002875e-05]</msg>
<status status="PASS" starttime="20201030 15:54:56.787" endtime="20201030 15:54:56.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.782" endtime="20201030 15:54:56.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:56.793" endtime="20201030 15:54:56.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.791" endtime="20201030 15:54:56.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.790" endtime="20201030 15:54:56.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.436" endtime="20201030 15:54:56.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.436" endtime="20201030 15:54:56.814"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.822" endtime="20201030 15:54:56.836"></status>
</kw>
<msg timestamp="20201030 15:54:56.836" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.821" endtime="20201030 15:54:56.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.839" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.837" endtime="20201030 15:54:56.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.840" endtime="20201030 15:54:56.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.818" endtime="20201030 15:54:56.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.816" endtime="20201030 15:54:56.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.849" endtime="20201030 15:54:57.135"></status>
</kw>
<msg timestamp="20201030 15:54:57.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017766181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017788417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.847" endtime="20201030 15:54:57.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017766181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017788417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:57.139" endtime="20201030 15:54:57.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.148" endtime="20201030 15:54:57.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.845" endtime="20201030 15:54:57.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.843" endtime="20201030 15:54:57.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:57.155" level="INFO">${PHILIP_RES} = [{'diff': 2.2236000000001865e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.206899999999956e-05}, {'diff': 2.208299999999913e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.2028000000000325e-05},...</msg>
<status status="PASS" starttime="20201030 15:54:57.152" endtime="20201030 15:54:57.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:57.160" level="INFO">${RESULT} = {'diff': [2.2236000000001865e-05, 2.205499999999999e-05, 2.206899999999956e-05, 2.208299999999913e-05, 2.205499999999999e-05, 2.2028000000000325e-05, 2.2041999999999895e-05, 2.2069999999999035e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:54:57.156" endtime="20201030 15:54:57.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.164" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:57.163" endtime="20201030 15:54:57.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.166" level="INFO">VALUE: [2.2236000000001865e-05, 2.205499999999999e-05, 2.206899999999956e-05, 2.208299999999913e-05, 2.205499999999999e-05, 2.2028000000000325e-05, 2.2041999999999895e-05, 2.2069999999999035e-05, 2.2014000000000755e-05, 2.209700000000217e-05, 2.2040999999996952e-05, 2.2014000000000755e-05, 2.1986000000001615e-05, 2.2055999999999465e-05, 2.209700000000217e-05, 2.2028000000000325e-05, 2.205499999999999e-05, 2.204100000000042e-05, 2.2137999999997937e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.197300000000152e-05, 2.2041999999999895e-05, 2.205499999999999e-05, 2.205499999999999e-05, 2.2028000000000325e-05, 2.2000000000001185e-05, 2.2055999999999465e-05, 2.2070000000002504e-05, 2.208299999999913e-05, 2.205499999999999e-05, 2.205499999999999e-05, 2.2055999999999465e-05, 2.2055999999999465e-05, 2.208299999999913e-05, 2.2055999999999465e-05, 2.2041999999999895e-05, 2.205499999999999e-05, 2.1985999999998146e-05, 2.205499999999999e-05, 2.2028000000000325e-05, 2.2069999999999035e-05, 2.2069999999999035e-05, 2.205499999999999e-05, 2.208299999999913e-05, 2.205499999999999e-05, 2.1985999999998146e-05, 2.2083999999998605e-05, 2.2069999999999035e-05, 2.2041999999999895e-05]</msg>
<status status="PASS" starttime="20201030 15:54:57.165" endtime="20201030 15:54:57.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.161" endtime="20201030 15:54:57.168"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:57.172" endtime="20201030 15:54:57.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.170" endtime="20201030 15:54:57.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.169" endtime="20201030 15:54:57.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.814" endtime="20201030 15:54:57.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.814" endtime="20201030 15:54:57.192"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.201" endtime="20201030 15:54:57.215"></status>
</kw>
<msg timestamp="20201030 15:54:57.215" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.199" endtime="20201030 15:54:57.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.218" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.216" endtime="20201030 15:54:57.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.219" endtime="20201030 15:54:57.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.196" endtime="20201030 15:54:57.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.195" endtime="20201030 15:54:57.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.228" endtime="20201030 15:54:57.515"></status>
</kw>
<msg timestamp="20201030 15:54:57.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018533736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018559889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:57.226" endtime="20201030 15:54:57.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018533736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018559889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:57.520" endtime="20201030 15:54:57.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.529" endtime="20201030 15:54:57.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.224" endtime="20201030 15:54:57.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.222" endtime="20201030 15:54:57.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:57.536" level="INFO">${PHILIP_RES} = [{'diff': 2.615300000000098e-05}, {'diff': 2.590299999999726e-05}, {'diff': 2.590300000000073e-05}, {'diff': 2.588899999999769e-05}, {'diff': 2.588899999999769e-05}, {'diff': 2.590299999999726e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:57.533" endtime="20201030 15:54:57.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:57.540" level="INFO">${RESULT} = {'diff': [2.615300000000098e-05, 2.590299999999726e-05, 2.590300000000073e-05, 2.588899999999769e-05, 2.588899999999769e-05, 2.590299999999726e-05, 2.588899999999769e-05, 2.588899999999769e-05, 2.5902...</msg>
<status status="PASS" starttime="20201030 15:54:57.537" endtime="20201030 15:54:57.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.544" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:57.543" endtime="20201030 15:54:57.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.547" level="INFO">VALUE: [2.615300000000098e-05, 2.590299999999726e-05, 2.590300000000073e-05, 2.588899999999769e-05, 2.588899999999769e-05, 2.590299999999726e-05, 2.588899999999769e-05, 2.588899999999769e-05, 2.590299999999726e-05, 2.590300000000073e-05, 2.5901999999997788e-05, 2.5902000000001257e-05, 2.588900000000116e-05, 2.588900000000116e-05, 2.588900000000116e-05, 2.588900000000116e-05, 2.590300000000073e-05, 2.5902000000001257e-05, 2.588900000000116e-05, 2.588900000000116e-05, 2.59170000000003e-05, 2.588900000000116e-05, 2.588900000000116e-05, 2.590300000000073e-05, 2.5888000000001687e-05, 2.59170000000003e-05, 2.5846999999998982e-05, 2.590299999999726e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.5901999999997788e-05, 2.588899999999769e-05, 2.590299999999726e-05, 2.590299999999726e-05, 2.590300000000073e-05, 2.590299999999726e-05, 2.588900000000116e-05, 2.5916000000000827e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.5832999999999412e-05, 2.590300000000073e-05, 2.5902000000001257e-05, 2.588900000000116e-05, 2.5930000000000397e-05, 2.588900000000116e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.595899999999901e-05]</msg>
<status status="PASS" starttime="20201030 15:54:57.545" endtime="20201030 15:54:57.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.541" endtime="20201030 15:54:57.549"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:57.553" endtime="20201030 15:54:57.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.551" endtime="20201030 15:54:57.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.550" endtime="20201030 15:54:57.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.193" endtime="20201030 15:54:57.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.193" endtime="20201030 15:54:57.573"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.582" endtime="20201030 15:54:57.595"></status>
</kw>
<msg timestamp="20201030 15:54:57.596" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.580" endtime="20201030 15:54:57.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.598" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.597" endtime="20201030 15:54:57.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.599" endtime="20201030 15:54:57.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.577" endtime="20201030 15:54:57.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.576" endtime="20201030 15:54:57.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.608" endtime="20201030 15:54:57.894"></status>
</kw>
<msg timestamp="20201030 15:54:57.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017749833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017780069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:57.607" endtime="20201030 15:54:57.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017749833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017780069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:57.899" endtime="20201030 15:54:57.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.907" endtime="20201030 15:54:57.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.604" endtime="20201030 15:54:57.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.603" endtime="20201030 15:54:57.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:57.913" level="INFO">${PHILIP_RES} = [{'diff': 3.0235999999999458e-05}, {'diff': 2.9985999999999208e-05}, {'diff': 2.9971999999999638e-05}, {'diff': 2.9971999999999638e-05}, {'diff': 3.0000000000002247e-05}, {'diff': 2.998699999999868e-0...</msg>
<status status="PASS" starttime="20201030 15:54:57.910" endtime="20201030 15:54:57.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:57.918" level="INFO">${RESULT} = {'diff': [3.0235999999999458e-05, 2.9985999999999208e-05, 2.9971999999999638e-05, 2.9971999999999638e-05, 3.0000000000002247e-05, 2.998699999999868e-05, 2.9986000000002677e-05, 2.9971999999999638e-05,...</msg>
<status status="PASS" starttime="20201030 15:54:57.914" endtime="20201030 15:54:57.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.923" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:57.922" endtime="20201030 15:54:57.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.925" level="INFO">VALUE: [3.0235999999999458e-05, 2.9985999999999208e-05, 2.9971999999999638e-05, 2.9971999999999638e-05, 3.0000000000002247e-05, 2.998699999999868e-05, 2.9986000000002677e-05, 2.9971999999999638e-05, 2.9917000000000832e-05, 2.9985999999999208e-05, 2.9971999999999638e-05, 2.997299999999911e-05, 2.9971999999999638e-05, 2.995899999999954e-05, 2.9971999999999638e-05, 2.9985999999999208e-05, 2.9971999999999638e-05, 2.9958000000000068e-05, 2.9985999999999208e-05, 2.995899999999954e-05, 3.0027999999997917e-05, 2.9972000000003107e-05, 2.998699999999868e-05, 2.9971999999999638e-05, 2.9971999999999638e-05, 2.997299999999911e-05, 2.9999999999998778e-05, 2.995899999999954e-05, 2.992999999999746e-05, 2.9958000000000068e-05, 2.9986000000002677e-05, 2.9999999999998778e-05, 2.9972000000003107e-05, 2.9917000000000832e-05, 2.9971999999999638e-05, 2.9985999999999208e-05, 2.9971999999999638e-05, 2.9888999999998223e-05, 2.9971999999999638e-05, 2.9985999999999208e-05, 2.9985999999999208e-05, 2.9971999999999638e-05, 2.9971999999999638e-05, 2.9902999999997792e-05, 2.9931000000000402e-05, 2.9971999999999638e-05, 2.9971999999999638e-05, 2.995900000000301e-05, 2.991599999999789e-05, 3.0040999999998014e-05]</msg>
<status status="PASS" starttime="20201030 15:54:57.924" endtime="20201030 15:54:57.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.919" endtime="20201030 15:54:57.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:57.930" endtime="20201030 15:54:57.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.929" endtime="20201030 15:54:57.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.927" endtime="20201030 15:54:57.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.574" endtime="20201030 15:54:57.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.574" endtime="20201030 15:54:57.951"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.959" endtime="20201030 15:54:57.972"></status>
</kw>
<msg timestamp="20201030 15:54:57.972" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.958" endtime="20201030 15:54:57.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.975" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.973" endtime="20201030 15:54:57.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.976" endtime="20201030 15:54:57.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.955" endtime="20201030 15:54:57.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.953" endtime="20201030 15:54:57.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.985" endtime="20201030 15:54:58.271"></status>
</kw>
<msg timestamp="20201030 15:54:58.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017710236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017744736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:57.983" endtime="20201030 15:54:58.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017710236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017744736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.275" endtime="20201030 15:54:58.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.283" endtime="20201030 15:54:58.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.981" endtime="20201030 15:54:58.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.979" endtime="20201030 15:54:58.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:58.291" level="INFO">${PHILIP_RES} = [{'diff': 3.449999999999981e-05}, {'diff': 3.422299999999989e-05}, {'diff': 3.42779999999987e-05}, {'diff': 3.42779999999987e-05}, {'diff': 3.426399999999913e-05}, {'diff': 3.427800000000217e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:58.287" endtime="20201030 15:54:58.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:58.295" level="INFO">${RESULT} = {'diff': [3.449999999999981e-05, 3.422299999999989e-05, 3.42779999999987e-05, 3.42779999999987e-05, 3.426399999999913e-05, 3.427800000000217e-05, 3.419399999999781e-05, 3.426399999999913e-05, 3.426399...</msg>
<status status="PASS" starttime="20201030 15:54:58.292" endtime="20201030 15:54:58.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.299" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:58.298" endtime="20201030 15:54:58.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.302" level="INFO">VALUE: [3.449999999999981e-05, 3.422299999999989e-05, 3.42779999999987e-05, 3.42779999999987e-05, 3.426399999999913e-05, 3.427800000000217e-05, 3.419399999999781e-05, 3.426399999999913e-05, 3.426399999999913e-05, 3.42640000000026e-05, 3.4277000000002694e-05, 3.424999999999956e-05, 3.42779999999987e-05, 3.4276999999999225e-05, 3.42640000000026e-05, 3.423599999999999e-05, 3.4318999999997934e-05, 3.423599999999999e-05, 3.42640000000026e-05, 3.42779999999987e-05, 3.42779999999987e-05, 3.426399999999913e-05, 3.426399999999913e-05, 3.42640000000026e-05, 3.420800000000085e-05, 3.426399999999913e-05, 3.429200000000174e-05, 3.420800000000085e-05, 3.4305000000001834e-05, 3.426399999999913e-05, 3.423599999999999e-05, 3.42640000000026e-05, 3.430600000000131e-05, 3.424999999999956e-05, 3.42779999999987e-05, 3.429200000000174e-05, 3.42640000000026e-05, 3.4347000000000544e-05, 3.42779999999987e-05, 3.426399999999913e-05, 3.422200000000042e-05, 3.42640000000026e-05, 3.42779999999987e-05, 3.42779999999987e-05, 3.429200000000174e-05, 3.429200000000174e-05, 3.4347000000000544e-05, 3.423599999999999e-05, 3.433400000000045e-05, 3.4319000000001404e-05]</msg>
<status status="PASS" starttime="20201030 15:54:58.300" endtime="20201030 15:54:58.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.296" endtime="20201030 15:54:58.303"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:58.306" endtime="20201030 15:54:58.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.305" endtime="20201030 15:54:58.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.304" endtime="20201030 15:54:58.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.952" endtime="20201030 15:54:58.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.951" endtime="20201030 15:54:58.327"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.335" endtime="20201030 15:54:58.350"></status>
</kw>
<msg timestamp="20201030 15:54:58.350" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.334" endtime="20201030 15:54:58.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.353" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.351" endtime="20201030 15:54:58.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.354" endtime="20201030 15:54:58.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.331" endtime="20201030 15:54:58.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.330" endtime="20201030 15:54:58.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.363" endtime="20201030 15:54:58.648"></status>
</kw>
<msg timestamp="20201030 15:54:58.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018633611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018672653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.361" endtime="20201030 15:54:58.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018633611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018672653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.653" endtime="20201030 15:54:58.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.661" endtime="20201030 15:54:58.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.359" endtime="20201030 15:54:58.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.357" endtime="20201030 15:54:58.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:58.668" level="INFO">${PHILIP_RES} = [{'diff': 3.904199999999955e-05}, {'diff': 3.87919999999993e-05}, {'diff': 3.8790999999999826e-05}, {'diff': 3.8818999999998965e-05}, {'diff': 3.882000000000191e-05}, {'diff': 3.880599999999887e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:54:58.664" endtime="20201030 15:54:58.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:58.672" level="INFO">${RESULT} = {'diff': [3.904199999999955e-05, 3.87919999999993e-05, 3.8790999999999826e-05, 3.8818999999998965e-05, 3.882000000000191e-05, 3.880599999999887e-05, 3.8804999999999396e-05, 3.8804999999999396e-05, 3.8...</msg>
<status status="PASS" starttime="20201030 15:54:58.669" endtime="20201030 15:54:58.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.676" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:58.675" endtime="20201030 15:54:58.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.679" level="INFO">VALUE: [3.904199999999955e-05, 3.87919999999993e-05, 3.8790999999999826e-05, 3.8818999999998965e-05, 3.882000000000191e-05, 3.880599999999887e-05, 3.8804999999999396e-05, 3.8804999999999396e-05, 3.877799999999973e-05, 3.880600000000234e-05, 3.87919999999993e-05, 3.8790999999999826e-05, 3.8819000000002435e-05, 3.880599999999887e-05, 3.880599999999887e-05, 3.8804999999999396e-05, 3.8805000000002865e-05, 3.8818999999998965e-05, 3.87919999999993e-05, 3.880599999999887e-05, 3.8804999999999396e-05, 3.8833000000002005e-05, 3.880599999999887e-05, 3.8874999999997245e-05, 3.8847000000001575e-05, 3.8804999999999396e-05, 3.880599999999887e-05, 3.87919999999993e-05, 3.879200000000277e-05, 3.8790999999999826e-05, 3.877799999999973e-05, 3.87919999999993e-05, 3.879200000000277e-05, 3.8804999999999396e-05, 3.8804999999999396e-05, 3.880600000000234e-05, 3.877799999999973e-05, 3.8818999999998965e-05, 3.8790999999999826e-05, 3.880600000000234e-05, 3.87919999999993e-05, 3.881999999999844e-05, 3.8804999999999396e-05, 3.8805000000002865e-05, 3.880599999999887e-05, 3.877799999999973e-05, 3.8804999999999396e-05, 3.8777000000000256e-05, 3.880599999999887e-05, 3.877799999999973e-05]</msg>
<status status="PASS" starttime="20201030 15:54:58.677" endtime="20201030 15:54:58.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.673" endtime="20201030 15:54:58.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:58.685" endtime="20201030 15:54:58.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.683" endtime="20201030 15:54:58.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.682" endtime="20201030 15:54:58.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.328" endtime="20201030 15:54:58.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.327" endtime="20201030 15:54:58.705"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.714" endtime="20201030 15:54:58.728"></status>
</kw>
<msg timestamp="20201030 15:54:58.728" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.712" endtime="20201030 15:54:58.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.731" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.729" endtime="20201030 15:54:58.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.732" endtime="20201030 15:54:58.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.709" endtime="20201030 15:54:58.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.708" endtime="20201030 15:54:58.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.741" endtime="20201030 15:54:59.026"></status>
</kw>
<msg timestamp="20201030 15:54:59.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017761528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017805347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.739" endtime="20201030 15:54:59.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017761528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017805347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.030" endtime="20201030 15:54:59.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.039" endtime="20201030 15:54:59.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.737" endtime="20201030 15:54:59.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.735" endtime="20201030 15:54:59.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:59.045" level="INFO">${PHILIP_RES} = [{'diff': 4.3819000000000496e-05}, {'diff': 4.354200000000058e-05}, {'diff': 4.352800000000101e-05}, {'diff': 4.3555000000000677e-05}, {'diff': 4.3555000000000677e-05}, {'diff': 4.356999999999972e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:59.042" endtime="20201030 15:54:59.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:59.050" level="INFO">${RESULT} = {'diff': [4.3819000000000496e-05, 4.354200000000058e-05, 4.352800000000101e-05, 4.3555000000000677e-05, 4.3555000000000677e-05, 4.356999999999972e-05, 4.354200000000058e-05, 4.355499999999721e-05, 4.3...</msg>
<status status="PASS" starttime="20201030 15:54:59.046" endtime="20201030 15:54:59.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.055" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:59.054" endtime="20201030 15:54:59.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.057" level="INFO">VALUE: [4.3819000000000496e-05, 4.354200000000058e-05, 4.352800000000101e-05, 4.3555000000000677e-05, 4.3555000000000677e-05, 4.356999999999972e-05, 4.354200000000058e-05, 4.355499999999721e-05, 4.354200000000058e-05, 4.3597000000002856e-05, 4.3541000000001107e-05, 4.356999999999972e-05, 4.351400000000144e-05, 4.3555000000000677e-05, 4.3582999999999816e-05, 4.355600000000015e-05, 4.3596999999999386e-05, 4.354200000000058e-05, 4.355599999999668e-05, 4.3569000000000246e-05, 4.3569000000000246e-05, 4.350000000000187e-05, 4.3555000000000677e-05, 4.355600000000015e-05, 4.352800000000101e-05, 4.3624999999998526e-05, 4.3555000000000677e-05, 4.354199999999711e-05, 4.3555000000000677e-05, 4.3596999999999386e-05, 4.354200000000058e-05, 4.3625000000001996e-05, 4.3541000000001107e-05, 4.355600000000015e-05, 4.354199999999711e-05, 4.3555000000000677e-05, 4.355599999999668e-05, 4.355600000000015e-05, 4.3555000000000677e-05, 4.355600000000015e-05, 4.355600000000015e-05, 4.3555000000000677e-05, 4.355600000000015e-05, 4.357000000000319e-05, 4.3555000000000677e-05, 4.354099999999764e-05, 4.3596999999999386e-05, 4.3555000000000677e-05, 4.3555000000000677e-05, 4.355600000000015e-05]</msg>
<status status="PASS" starttime="20201030 15:54:59.056" endtime="20201030 15:54:59.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.051" endtime="20201030 15:54:59.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:59.063" endtime="20201030 15:54:59.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.061" endtime="20201030 15:54:59.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.060" endtime="20201030 15:54:59.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.706" endtime="20201030 15:54:59.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.706" endtime="20201030 15:54:59.084"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.092" endtime="20201030 15:54:59.107"></status>
</kw>
<msg timestamp="20201030 15:54:59.107" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.091" endtime="20201030 15:54:59.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.110" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.108" endtime="20201030 15:54:59.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.111" endtime="20201030 15:54:59.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.088" endtime="20201030 15:54:59.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.086" endtime="20201030 15:54:59.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.120" endtime="20201030 15:54:59.406"></status>
</kw>
<msg timestamp="20201030 15:54:59.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018049153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018097958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.118" endtime="20201030 15:54:59.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018049153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018097958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.410" endtime="20201030 15:54:59.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.418" endtime="20201030 15:54:59.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.116" endtime="20201030 15:54:59.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.114" endtime="20201030 15:54:59.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:59.426" level="INFO">${PHILIP_RES} = [{'diff': 4.880500000000246e-05}, {'diff': 4.851400000000297e-05}, {'diff': 4.852800000000254e-05}, {'diff': 4.85139999999995e-05}, {'diff': 4.859700000000092e-05}, {'diff': 4.852799999999907e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:59.423" endtime="20201030 15:54:59.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:59.430" level="INFO">${RESULT} = {'diff': [4.880500000000246e-05, 4.851400000000297e-05, 4.852800000000254e-05, 4.85139999999995e-05, 4.859700000000092e-05, 4.852799999999907e-05, 4.854199999999864e-05, 4.852799999999907e-05, 4.85269...</msg>
<status status="PASS" starttime="20201030 15:54:59.427" endtime="20201030 15:54:59.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.434" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:59.433" endtime="20201030 15:54:59.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.437" level="INFO">VALUE: [4.880500000000246e-05, 4.851400000000297e-05, 4.852800000000254e-05, 4.85139999999995e-05, 4.859700000000092e-05, 4.852799999999907e-05, 4.854199999999864e-05, 4.852799999999907e-05, 4.85269999999996e-05, 4.854200000000211e-05, 4.8486999999999836e-05, 4.852799999999907e-05, 4.858300000000135e-05, 4.851300000000003e-05, 4.849999999999993e-05, 4.852799999999907e-05, 4.852799999999907e-05, 4.859700000000092e-05, 4.852700000000307e-05, 4.852799999999907e-05, 4.854200000000211e-05, 4.856900000000178e-05, 4.852799999999907e-05, 4.8486999999999836e-05, 4.854199999999864e-05, 4.856899999999831e-05, 4.858299999999788e-05, 4.847200000000079e-05, 4.852800000000254e-05, 4.85139999999995e-05, 4.854199999999864e-05, 4.85269999999996e-05, 4.845800000000122e-05, 4.852799999999907e-05, 4.854200000000211e-05, 4.85139999999995e-05, 4.859700000000092e-05, 4.852800000000254e-05, 4.85139999999995e-05, 4.848600000000036e-05, 4.849999999999993e-05, 4.85269999999996e-05, 4.858399999999735e-05, 4.852799999999907e-05, 4.854100000000264e-05, 4.852800000000254e-05, 4.8473000000000266e-05, 4.861100000000049e-05, 4.852799999999907e-05, 4.849999999999993e-05]</msg>
<status status="PASS" starttime="20201030 15:54:59.436" endtime="20201030 15:54:59.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.431" endtime="20201030 15:54:59.438"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:59.442" endtime="20201030 15:54:59.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.440" endtime="20201030 15:54:59.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.439" endtime="20201030 15:54:59.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.084" endtime="20201030 15:54:59.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.084" endtime="20201030 15:54:59.463"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.471" endtime="20201030 15:54:59.487"></status>
</kw>
<msg timestamp="20201030 15:54:59.488" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.470" endtime="20201030 15:54:59.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.490" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.489" endtime="20201030 15:54:59.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.491" endtime="20201030 15:54:59.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.467" endtime="20201030 15:54:59.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.465" endtime="20201030 15:54:59.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.500" endtime="20201030 15:54:59.787"></status>
</kw>
<msg timestamp="20201030 15:54:59.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018736431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018790431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.499" endtime="20201030 15:54:59.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018736431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018790431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.791" endtime="20201030 15:54:59.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.799" endtime="20201030 15:54:59.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.496" endtime="20201030 15:54:59.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.494" endtime="20201030 15:54:59.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:59.806" level="INFO">${PHILIP_RES} = [{'diff': 5.3999999999998494e-05}, {'diff': 5.3721999999999104e-05}, {'diff': 5.380500000000052e-05}, {'diff': 5.3721999999999104e-05}, {'diff': 5.3721999999999104e-05}, {'diff': 5.3707999999999534e-0...</msg>
<status status="PASS" starttime="20201030 15:54:59.803" endtime="20201030 15:54:59.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:59.810" level="INFO">${RESULT} = {'diff': [5.3999999999998494e-05, 5.3721999999999104e-05, 5.380500000000052e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.3721999999999104e-05,...</msg>
<status status="PASS" starttime="20201030 15:54:59.807" endtime="20201030 15:54:59.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.815" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:59.814" endtime="20201030 15:54:59.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.817" level="INFO">VALUE: [5.3999999999998494e-05, 5.3721999999999104e-05, 5.380500000000052e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.379200000000042e-05, 5.372300000000205e-05, 5.372300000000205e-05, 5.370899999999901e-05, 5.372200000000257e-05, 5.3707999999999534e-05, 5.3707999999999534e-05, 5.3707999999999534e-05, 5.372200000000257e-05, 5.3749999999998244e-05, 5.3749999999998244e-05, 5.3749999999998244e-05, 5.3735999999998674e-05, 5.3749999999998244e-05, 5.377700000000138e-05, 5.3707999999999534e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.376400000000128e-05, 5.3679999999996925e-05, 5.373600000000214e-05, 5.372300000000205e-05, 5.373600000000214e-05, 5.3721999999999104e-05, 5.373600000000214e-05, 5.3721999999999104e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.3735999999998674e-05, 5.379200000000042e-05, 5.3721999999999104e-05, 5.3749999999998244e-05, 5.376400000000128e-05, 5.370900000000248e-05, 5.373600000000214e-05, 5.3721999999999104e-05, 5.372200000000257e-05, 5.376400000000128e-05, 5.372200000000257e-05, 5.372200000000257e-05, 5.3721999999999104e-05, 5.370899999999901e-05]</msg>
<status status="PASS" starttime="20201030 15:54:59.816" endtime="20201030 15:54:59.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.811" endtime="20201030 15:54:59.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:59.825" endtime="20201030 15:54:59.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.824" endtime="20201030 15:54:59.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.823" endtime="20201030 15:54:59.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.463" endtime="20201030 15:54:59.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.463" endtime="20201030 15:54:59.846"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.855" endtime="20201030 15:54:59.871"></status>
</kw>
<msg timestamp="20201030 15:54:59.872" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.853" endtime="20201030 15:54:59.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.874" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.873" endtime="20201030 15:54:59.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.875" endtime="20201030 15:54:59.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.850" endtime="20201030 15:54:59.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.848" endtime="20201030 15:54:59.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.884" endtime="20201030 15:55:00.170"></status>
</kw>
<msg timestamp="20201030 15:55:00.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018092264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018151694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.883" endtime="20201030 15:55:00.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018092264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018151694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.174" endtime="20201030 15:55:00.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.183" endtime="20201030 15:55:00.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.880" endtime="20201030 15:55:00.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.878" endtime="20201030 15:55:00.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:00.189" level="INFO">${PHILIP_RES} = [{'diff': 5.9429999999999206e-05}, {'diff': 5.9207999999998095e-05}, {'diff': 5.913899999999972e-05}, {'diff': 5.913899999999972e-05}, {'diff': 5.912500000000015e-05}, {'diff': 5.9165999999999386e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:00.186" endtime="20201030 15:55:00.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:00.194" level="INFO">${RESULT} = {'diff': [5.9429999999999206e-05, 5.9207999999998095e-05, 5.913899999999972e-05, 5.913899999999972e-05, 5.912500000000015e-05, 5.9165999999999386e-05, 5.912500000000015e-05, 5.915299999999929e-05, 5.9...</msg>
<status status="PASS" starttime="20201030 15:55:00.190" endtime="20201030 15:55:00.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.199" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:00.198" endtime="20201030 15:55:00.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.201" level="INFO">VALUE: [5.9429999999999206e-05, 5.9207999999998095e-05, 5.913899999999972e-05, 5.913899999999972e-05, 5.912500000000015e-05, 5.9165999999999386e-05, 5.912500000000015e-05, 5.915299999999929e-05, 5.915299999999929e-05, 5.915299999999929e-05, 5.913899999999972e-05, 5.9165999999999386e-05, 5.913900000000319e-05, 5.915300000000276e-05, 5.915300000000276e-05, 5.9166000000002855e-05, 5.908300000000144e-05, 5.915300000000276e-05, 5.920900000000104e-05, 5.915300000000276e-05, 5.9165999999999386e-05, 5.9151999999999816e-05, 5.916699999999886e-05, 5.915299999999929e-05, 5.913899999999972e-05, 5.909699999999754e-05, 5.9208000000001565e-05, 5.913899999999972e-05, 5.915299999999929e-05, 5.915299999999929e-05, 5.9138000000000246e-05, 5.915299999999929e-05, 5.915299999999929e-05, 5.918099999999843e-05, 5.9222000000001135e-05, 5.9165999999999386e-05, 5.908300000000144e-05, 5.915299999999929e-05, 5.912500000000015e-05, 5.915299999999929e-05, 5.9151999999999816e-05, 5.916700000000233e-05, 5.916699999999886e-05, 5.916699999999886e-05, 5.9165999999999386e-05, 5.915299999999929e-05, 5.916700000000233e-05, 5.916700000000233e-05, 5.915300000000276e-05, 5.913899999999972e-05]</msg>
<status status="PASS" starttime="20201030 15:55:00.200" endtime="20201030 15:55:00.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.195" endtime="20201030 15:55:00.202"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:00.206" endtime="20201030 15:55:00.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.205" endtime="20201030 15:55:00.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.203" endtime="20201030 15:55:00.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.847" endtime="20201030 15:55:00.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.846" endtime="20201030 15:55:00.227"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.235" endtime="20201030 15:55:00.252"></status>
</kw>
<msg timestamp="20201030 15:55:00.252" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.234" endtime="20201030 15:55:00.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.255" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.253" endtime="20201030 15:55:00.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.256" endtime="20201030 15:55:00.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.231" endtime="20201030 15:55:00.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.229" endtime="20201030 15:55:00.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.265" endtime="20201030 15:55:00.550"></status>
</kw>
<msg timestamp="20201030 15:55:00.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017811042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017876111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.263" endtime="20201030 15:55:00.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017811042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017876111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.554" endtime="20201030 15:55:00.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.562" endtime="20201030 15:55:00.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.261" endtime="20201030 15:55:00.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.259" endtime="20201030 15:55:00.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:00.570" level="INFO">${PHILIP_RES} = [{'diff': 6.506900000000093e-05}, {'diff': 6.480600000000059e-05}, {'diff': 6.480499999999764e-05}, {'diff': 6.480500000000111e-05}, {'diff': 6.480600000000059e-05}, {'diff': 6.480600000000059e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:00.567" endtime="20201030 15:55:00.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:00.574" level="INFO">${RESULT} = {'diff': [6.506900000000093e-05, 6.480600000000059e-05, 6.480499999999764e-05, 6.480500000000111e-05, 6.480600000000059e-05, 6.480600000000059e-05, 6.481900000000068e-05, 6.480599999999712e-05, 6.4749...</msg>
<status status="PASS" starttime="20201030 15:55:00.571" endtime="20201030 15:55:00.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.579" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:00.577" endtime="20201030 15:55:00.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.581" level="INFO">VALUE: [6.506900000000093e-05, 6.480600000000059e-05, 6.480499999999764e-05, 6.480500000000111e-05, 6.480600000000059e-05, 6.480600000000059e-05, 6.481900000000068e-05, 6.480599999999712e-05, 6.474999999999884e-05, 6.480500000000111e-05, 6.480600000000059e-05, 6.486099999999939e-05, 6.481899999999721e-05, 6.479200000000102e-05, 6.480600000000059e-05, 6.47769999999985e-05, 6.482000000000016e-05, 6.480600000000059e-05, 6.481899999999721e-05, 6.479200000000102e-05, 6.483399999999973e-05, 6.479100000000154e-05, 6.476400000000188e-05, 6.479199999999755e-05, 6.477700000000197e-05, 6.483300000000025e-05, 6.480600000000059e-05, 6.481900000000068e-05, 6.480499999999764e-05, 6.479200000000102e-05, 6.477800000000145e-05, 6.479099999999807e-05, 6.482000000000016e-05, 6.480599999999712e-05, 6.480500000000111e-05, 6.480600000000059e-05, 6.473699999999874e-05, 6.480500000000111e-05, 6.486199999999887e-05, 6.482000000000016e-05, 6.480500000000111e-05, 6.479200000000102e-05, 6.480600000000059e-05, 6.479099999999807e-05, 6.480599999999712e-05, 6.480600000000059e-05, 6.480499999999764e-05, 6.481900000000068e-05, 6.480600000000059e-05, 6.481900000000068e-05]</msg>
<status status="PASS" starttime="20201030 15:55:00.580" endtime="20201030 15:55:00.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.575" endtime="20201030 15:55:00.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:00.586" endtime="20201030 15:55:00.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.585" endtime="20201030 15:55:00.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.583" endtime="20201030 15:55:00.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.228" endtime="20201030 15:55:00.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.227" endtime="20201030 15:55:00.607"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.615" endtime="20201030 15:55:00.633"></status>
</kw>
<msg timestamp="20201030 15:55:00.634" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.614" endtime="20201030 15:55:00.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.636" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.635" endtime="20201030 15:55:00.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.637" endtime="20201030 15:55:00.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.611" endtime="20201030 15:55:00.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.609" endtime="20201030 15:55:00.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.646" endtime="20201030 15:55:00.931"></status>
</kw>
<msg timestamp="20201030 15:55:00.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018663056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018733958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.645" endtime="20201030 15:55:00.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018663056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018733958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.935" endtime="20201030 15:55:00.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.943" endtime="20201030 15:55:00.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.642" endtime="20201030 15:55:00.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.641" endtime="20201030 15:55:00.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:00.950" level="INFO">${PHILIP_RES} = [{'diff': 7.090199999999769e-05}, {'diff': 7.068000000000005e-05}, {'diff': 7.068100000000299e-05}, {'diff': 7.068099999999952e-05}, {'diff': 7.068000000000005e-05}, {'diff': 7.065299999999691e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:00.947" endtime="20201030 15:55:00.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:00.954" level="INFO">${RESULT} = {'diff': [7.090199999999769e-05, 7.068000000000005e-05, 7.068100000000299e-05, 7.068099999999952e-05, 7.068000000000005e-05, 7.065299999999691e-05, 7.066699999999995e-05, 7.068100000000299e-05, 7.0666...</msg>
<status status="PASS" starttime="20201030 15:55:00.951" endtime="20201030 15:55:00.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.958" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:00.957" endtime="20201030 15:55:00.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.961" level="INFO">VALUE: [7.090199999999769e-05, 7.068000000000005e-05, 7.068100000000299e-05, 7.068099999999952e-05, 7.068000000000005e-05, 7.065299999999691e-05, 7.066699999999995e-05, 7.068100000000299e-05, 7.066699999999995e-05, 7.068000000000005e-05, 7.068000000000005e-05, 7.063899999999734e-05, 7.069500000000256e-05, 7.069399999999962e-05, 7.068000000000005e-05, 7.068100000000299e-05, 7.068100000000299e-05, 7.069400000000309e-05, 7.068000000000005e-05, 7.066699999999995e-05, 7.068100000000299e-05, 7.068100000000299e-05, 7.070799999999919e-05, 7.068000000000005e-05, 7.07360000000018e-05, 7.068100000000299e-05, 7.069400000000309e-05, 7.069400000000309e-05, 7.068099999999952e-05, 7.068099999999952e-05, 7.066700000000342e-05, 7.068000000000005e-05, 7.068100000000299e-05, 7.068099999999952e-05, 7.068099999999952e-05, 7.068000000000005e-05, 7.068000000000005e-05, 7.066699999999995e-05, 7.076400000000094e-05, 7.068099999999952e-05, 7.068000000000005e-05, 7.069399999999962e-05, 7.066700000000342e-05, 7.068099999999952e-05, 7.068000000000005e-05, 7.068000000000005e-05, 7.068099999999952e-05, 7.068100000000299e-05, 7.069399999999962e-05, 7.075000000000137e-05]</msg>
<status status="PASS" starttime="20201030 15:55:00.959" endtime="20201030 15:55:00.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.955" endtime="20201030 15:55:00.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:00.966" endtime="20201030 15:55:00.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.965" endtime="20201030 15:55:00.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.964" endtime="20201030 15:55:00.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.608" endtime="20201030 15:55:00.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.607" endtime="20201030 15:55:00.987"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.996" endtime="20201030 15:55:01.014"></status>
</kw>
<msg timestamp="20201030 15:55:01.014" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.994" endtime="20201030 15:55:01.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.017" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.015" endtime="20201030 15:55:01.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.018" endtime="20201030 15:55:01.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.991" endtime="20201030 15:55:01.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.990" endtime="20201030 15:55:01.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.027" endtime="20201030 15:55:01.313"></status>
</kw>
<msg timestamp="20201030 15:55:01.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017779389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017856431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.025" endtime="20201030 15:55:01.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017779389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017856431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.317" endtime="20201030 15:55:01.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.326" endtime="20201030 15:55:01.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.023" endtime="20201030 15:55:01.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.021" endtime="20201030 15:55:01.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:01.334" level="INFO">${PHILIP_RES} = [{'diff': 7.704199999999939e-05}, {'diff': 7.6764e-05}, {'diff': 7.680600000000218e-05}, {'diff': 7.677800000000304e-05}, {'diff': 7.677799999999957e-05}, {'diff': 7.677799999999957e-05}, {'diff': 7.6...</msg>
<status status="PASS" starttime="20201030 15:55:01.331" endtime="20201030 15:55:01.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:01.340" level="INFO">${RESULT} = {'diff': [7.704199999999939e-05, 7.6764e-05, 7.680600000000218e-05, 7.677800000000304e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.684699999999794e-05, 7.6764e-05, 7.686200000000046e-05, 7.679...</msg>
<status status="PASS" starttime="20201030 15:55:01.336" endtime="20201030 15:55:01.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.346" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:01.345" endtime="20201030 15:55:01.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.349" level="INFO">VALUE: [7.704199999999939e-05, 7.6764e-05, 7.680600000000218e-05, 7.677800000000304e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.684699999999794e-05, 7.6764e-05, 7.686200000000046e-05, 7.679199999999914e-05, 7.677799999999957e-05, 7.681900000000227e-05, 7.679100000000313e-05, 7.67770000000001e-05, 7.677799999999957e-05, 7.679199999999914e-05, 7.675000000000043e-05, 7.679199999999914e-05, 7.670899999999772e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.679200000000261e-05, 7.677799999999957e-05, 7.679199999999914e-05, 7.679199999999914e-05, 7.677799999999957e-05, 7.67770000000001e-05, 7.679099999999967e-05, 7.67770000000001e-05, 7.677799999999957e-05, 7.679099999999967e-05, 7.6764e-05, 7.670900000000119e-05, 7.669500000000162e-05, 7.672200000000129e-05, 7.6764e-05, 7.677799999999957e-05, 7.674999999999696e-05, 7.677800000000304e-05, 7.682000000000175e-05, 7.677799999999957e-05, 7.67770000000001e-05, 7.672200000000129e-05, 7.68189999999988e-05, 7.686100000000098e-05, 7.6764e-05, 7.679200000000261e-05, 7.679099999999967e-05, 7.677799999999957e-05, 7.675000000000043e-05]</msg>
<status status="PASS" starttime="20201030 15:55:01.347" endtime="20201030 15:55:01.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.341" endtime="20201030 15:55:01.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:01.355" endtime="20201030 15:55:01.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.354" endtime="20201030 15:55:01.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.352" endtime="20201030 15:55:01.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.988" endtime="20201030 15:55:01.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.987" endtime="20201030 15:55:01.376"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.385" endtime="20201030 15:55:01.403"></status>
</kw>
<msg timestamp="20201030 15:55:01.403" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.383" endtime="20201030 15:55:01.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.406" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.404" endtime="20201030 15:55:01.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.407" endtime="20201030 15:55:01.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.381" endtime="20201030 15:55:01.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.379" endtime="20201030 15:55:01.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.416" endtime="20201030 15:55:01.702"></status>
</kw>
<msg timestamp="20201030 15:55:01.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017986361, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:01.414" endtime="20201030 15:55:01.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017986361, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:01.706" endtime="20201030 15:55:01.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.714" endtime="20201030 15:55:01.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.412" endtime="20201030 15:55:01.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.410" endtime="20201030 15:55:01.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:01.722" level="INFO">${PHILIP_RES} = [{'diff': 8.336100000000055e-05}, {'diff': 8.308400000000063e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.305599999999802e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.313899999999944e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:01.719" endtime="20201030 15:55:01.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:01.726" level="INFO">${RESULT} = {'diff': [8.336100000000055e-05, 8.308400000000063e-05, 8.31110000000003e-05, 8.305599999999802e-05, 8.31110000000003e-05, 8.313899999999944e-05, 8.31110000000003e-05, 8.3152999999999e-05, 8.312499999...</msg>
<status status="PASS" starttime="20201030 15:55:01.723" endtime="20201030 15:55:01.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.730" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:01.729" endtime="20201030 15:55:01.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.733" level="INFO">VALUE: [8.336100000000055e-05, 8.308400000000063e-05, 8.31110000000003e-05, 8.305599999999802e-05, 8.31110000000003e-05, 8.313899999999944e-05, 8.31110000000003e-05, 8.3152999999999e-05, 8.312499999999987e-05, 8.308300000000116e-05, 8.31110000000003e-05, 8.313899999999944e-05, 8.31110000000003e-05, 8.318099999999815e-05, 8.312499999999987e-05, 8.309700000000073e-05, 8.31110000000003e-05, 8.302800000000235e-05, 8.308300000000116e-05, 8.311199999999977e-05, 8.304100000000245e-05, 8.31110000000003e-05, 8.311099999999683e-05, 8.308299999999769e-05, 8.309700000000073e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.312499999999987e-05, 8.31110000000003e-05, 8.309700000000073e-05, 8.31110000000003e-05, 8.316699999999858e-05, 8.31390000000029e-05, 8.312499999999987e-05, 8.31110000000003e-05, 8.313899999999944e-05, 8.31110000000003e-05, 8.317999999999867e-05, 8.309700000000073e-05, 8.309700000000073e-05, 8.312499999999987e-05, 8.3152999999999e-05, 8.30980000000002e-05, 8.312499999999987e-05, 8.312499999999987e-05, 8.309700000000073e-05]</msg>
<status status="PASS" starttime="20201030 15:55:01.731" endtime="20201030 15:55:01.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.727" endtime="20201030 15:55:01.734"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:01.738" endtime="20201030 15:55:01.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.736" endtime="20201030 15:55:01.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.735" endtime="20201030 15:55:01.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.377" endtime="20201030 15:55:01.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.376" endtime="20201030 15:55:01.758"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.767" endtime="20201030 15:55:01.787"></status>
</kw>
<msg timestamp="20201030 15:55:01.787" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.765" endtime="20201030 15:55:01.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.790" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.788" endtime="20201030 15:55:01.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.791" endtime="20201030 15:55:01.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.763" endtime="20201030 15:55:01.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.761" endtime="20201030 15:55:01.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.800" endtime="20201030 15:55:02.086"></status>
</kw>
<msg timestamp="20201030 15:55:02.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018833903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018923833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.798" endtime="20201030 15:55:02.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018833903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018923833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.091" endtime="20201030 15:55:02.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.099" endtime="20201030 15:55:02.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.796" endtime="20201030 15:55:02.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.794" endtime="20201030 15:55:02.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:02.106" level="INFO">${PHILIP_RES} = [{'diff': 8.993000000000195e-05}, {'diff': 8.966699999999814e-05}, {'diff': 8.965300000000204e-05}, {'diff': 8.965299999999857e-05}, {'diff': 8.963799999999952e-05}, {'diff': 8.96670000000016e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:02.103" endtime="20201030 15:55:02.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:02.111" level="INFO">${RESULT} = {'diff': [8.993000000000195e-05, 8.966699999999814e-05, 8.965300000000204e-05, 8.965299999999857e-05, 8.963799999999952e-05, 8.96670000000016e-05, 8.968100000000118e-05, 8.9638999999999e-05, 8.9679999...</msg>
<status status="PASS" starttime="20201030 15:55:02.107" endtime="20201030 15:55:02.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.115" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:02.114" endtime="20201030 15:55:02.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.118" level="INFO">VALUE: [8.993000000000195e-05, 8.966699999999814e-05, 8.965300000000204e-05, 8.965299999999857e-05, 8.963799999999952e-05, 8.96670000000016e-05, 8.968100000000118e-05, 8.9638999999999e-05, 8.967999999999823e-05, 8.963900000000247e-05, 8.966699999999814e-05, 8.968100000000118e-05, 8.96519999999991e-05, 8.965300000000204e-05, 8.968100000000118e-05, 8.962499999999943e-05, 8.965200000000256e-05, 8.967999999999823e-05, 8.959700000000029e-05, 8.966699999999814e-05, 8.962499999999943e-05, 8.965299999999857e-05, 8.965300000000204e-05, 8.9638999999999e-05, 8.966599999999866e-05, 8.96670000000016e-05, 8.969499999999728e-05, 8.965300000000204e-05, 8.962499999999943e-05, 8.96670000000016e-05, 8.966699999999814e-05, 8.965300000000204e-05, 8.9638999999999e-05, 8.962499999999943e-05, 8.965299999999857e-05, 8.965299999999857e-05, 8.962499999999943e-05, 8.967999999999823e-05, 8.96670000000016e-05, 8.966699999999814e-05, 8.966600000000213e-05, 8.969400000000127e-05, 8.966699999999814e-05, 8.968100000000118e-05, 8.966599999999866e-05, 8.966600000000213e-05, 8.961099999999986e-05, 8.96670000000016e-05, 8.96519999999991e-05, 8.965300000000204e-05]</msg>
<status status="PASS" starttime="20201030 15:55:02.116" endtime="20201030 15:55:02.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.111" endtime="20201030 15:55:02.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:02.124" endtime="20201030 15:55:02.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.122" endtime="20201030 15:55:02.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.121" endtime="20201030 15:55:02.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.759" endtime="20201030 15:55:02.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.759" endtime="20201030 15:55:02.144"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.153" endtime="20201030 15:55:02.172"></status>
</kw>
<msg timestamp="20201030 15:55:02.173" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.151" endtime="20201030 15:55:02.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.175" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.174" endtime="20201030 15:55:02.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.176" endtime="20201030 15:55:02.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.149" endtime="20201030 15:55:02.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.147" endtime="20201030 15:55:02.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.185" endtime="20201030 15:55:02.471"></status>
</kw>
<msg timestamp="20201030 15:55:02.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017952556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018049236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.184" endtime="20201030 15:55:02.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017952556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018049236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.475" endtime="20201030 15:55:02.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.483" endtime="20201030 15:55:02.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.181" endtime="20201030 15:55:02.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.179" endtime="20201030 15:55:02.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:02.490" level="INFO">${PHILIP_RES} = [{'diff': 9.66799999999983e-05}, {'diff': 9.644400000000108e-05}, {'diff': 9.637500000000271e-05}, {'diff': 9.644500000000056e-05}, {'diff': 9.643100000000099e-05}, {'diff': 9.643099999999752e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:02.487" endtime="20201030 15:55:02.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:02.495" level="INFO">${RESULT} = {'diff': [9.66799999999983e-05, 9.644400000000108e-05, 9.637500000000271e-05, 9.644500000000056e-05, 9.643100000000099e-05, 9.643099999999752e-05, 9.649999999999936e-05, 9.641599999999848e-05, 9.64300...</msg>
<status status="PASS" starttime="20201030 15:55:02.491" endtime="20201030 15:55:02.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.499" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:02.498" endtime="20201030 15:55:02.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.502" level="INFO">VALUE: [9.66799999999983e-05, 9.644400000000108e-05, 9.637500000000271e-05, 9.644500000000056e-05, 9.643100000000099e-05, 9.643099999999752e-05, 9.649999999999936e-05, 9.641599999999848e-05, 9.643000000000151e-05, 9.643000000000151e-05, 9.641700000000142e-05, 9.644500000000056e-05, 9.64859999999998e-05, 9.641699999999795e-05, 9.642999999999805e-05, 9.644400000000108e-05, 9.641600000000194e-05, 9.644400000000108e-05, 9.643100000000099e-05, 9.644500000000056e-05, 9.641699999999795e-05, 9.63470000000001e-05, 9.642999999999805e-05, 9.642999999999805e-05, 9.643000000000151e-05, 9.643100000000099e-05, 9.644500000000056e-05, 9.643100000000099e-05, 9.645800000000065e-05, 9.641599999999848e-05, 9.647200000000022e-05, 9.644399999999761e-05, 9.641699999999795e-05, 9.643100000000099e-05, 9.643100000000099e-05, 9.64729999999997e-05, 9.641700000000142e-05, 9.64859999999998e-05, 9.641599999999848e-05, 9.644400000000108e-05, 9.644500000000056e-05, 9.644500000000056e-05, 9.648699999999927e-05, 9.63470000000001e-05, 9.640300000000185e-05, 9.647200000000022e-05, 9.638899999999881e-05, 9.645800000000065e-05, 9.644500000000056e-05, 9.644500000000056e-05]</msg>
<status status="PASS" starttime="20201030 15:55:02.500" endtime="20201030 15:55:02.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.496" endtime="20201030 15:55:02.503"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:02.507" endtime="20201030 15:55:02.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.505" endtime="20201030 15:55:02.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.504" endtime="20201030 15:55:02.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.145" endtime="20201030 15:55:02.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.145" endtime="20201030 15:55:02.527"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.536" endtime="20201030 15:55:02.556"></status>
</kw>
<msg timestamp="20201030 15:55:02.557" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.534" endtime="20201030 15:55:02.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.559" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.558" endtime="20201030 15:55:02.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.560" endtime="20201030 15:55:02.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.532" endtime="20201030 15:55:02.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.530" endtime="20201030 15:55:02.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.569" endtime="20201030 15:55:02.855"></status>
</kw>
<msg timestamp="20201030 15:55:02.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017836819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017940514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.568" endtime="20201030 15:55:02.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017836819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017940514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.859" endtime="20201030 15:55:02.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.867" endtime="20201030 15:55:02.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.565" endtime="20201030 15:55:02.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.564" endtime="20201030 15:55:02.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:02.874" level="INFO">${PHILIP_RES} = [{'diff': 0.00010369500000000087}, {'diff': 0.00010341700000000148}, {'diff': 0.00010342999999999811}, {'diff': 0.00010343100000000105}, {'diff': 0.00010344500000000062}, {'diff': 0.000103430999999997...</msg>
<status status="PASS" starttime="20201030 15:55:02.871" endtime="20201030 15:55:02.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:02.878" level="INFO">${RESULT} = {'diff': [0.00010369500000000087, 0.00010341700000000148, 0.00010342999999999811, 0.00010343100000000105, 0.00010344500000000062, 0.00010343099999999758, 0.00010342999999999811, 0.00010342999999999811...</msg>
<status status="PASS" starttime="20201030 15:55:02.875" endtime="20201030 15:55:02.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.883" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:02.882" endtime="20201030 15:55:02.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.885" level="INFO">VALUE: [0.00010369500000000087, 0.00010341700000000148, 0.00010342999999999811, 0.00010343100000000105, 0.00010344500000000062, 0.00010343099999999758, 0.00010342999999999811, 0.00010342999999999811, 0.00010343099999999758, 0.00010343100000000105, 0.00010343000000000158, 0.00010344400000000115, 0.00010349999999999943, 0.00010338899999999887, 0.00010343100000000105, 0.00010340300000000191, 0.00010343100000000105, 0.00010341700000000148, 0.00010340299999999844, 0.00010342999999999811, 0.00010341599999999854, 0.00010344499999999715, 0.00010343100000000105, 0.00010341699999999801, 0.00010344400000000115, 0.00010343100000000105, 0.00010344500000000062, 0.00010341700000000148, 0.00010343000000000158, 0.00010343000000000158, 0.00010341700000000148, 0.00010343100000000105, 0.00010343000000000158, 0.00010342999999999811, 0.00010341599999999854, 0.00010343099999999758, 0.00010343099999999758, 0.00010344399999999768, 0.00010348599999999986, 0.00010344500000000062, 0.00010343100000000105, 0.00010343000000000158, 0.00010336099999999973, 0.00010343100000000105, 0.00010343100000000105, 0.00010340300000000191, 0.00010340200000000244, 0.00010343000000000158, 0.00010343100000000105, 0.00010341699999999801]</msg>
<status status="PASS" starttime="20201030 15:55:02.884" endtime="20201030 15:55:02.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.879" endtime="20201030 15:55:02.894"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:02.897" endtime="20201030 15:55:02.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.896" endtime="20201030 15:55:02.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.895" endtime="20201030 15:55:02.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.528" endtime="20201030 15:55:02.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.528" endtime="20201030 15:55:02.918"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.926" endtime="20201030 15:55:02.948"></status>
</kw>
<msg timestamp="20201030 15:55:02.949" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.925" endtime="20201030 15:55:02.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.951" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.950" endtime="20201030 15:55:02.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.952" endtime="20201030 15:55:02.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.922" endtime="20201030 15:55:02.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.920" endtime="20201030 15:55:02.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.961" endtime="20201030 15:55:03.247"></status>
</kw>
<msg timestamp="20201030 15:55:03.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018748222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018859139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.960" endtime="20201030 15:55:03.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018748222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018859139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.251" endtime="20201030 15:55:03.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.259" endtime="20201030 15:55:03.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.957" endtime="20201030 15:55:03.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.955" endtime="20201030 15:55:03.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:03.265" level="INFO">${PHILIP_RES} = [{'diff': 0.00011091700000000204}, {'diff': 0.00011063799999999971}, {'diff': 0.00011062499999999961}, {'diff': 0.00011069399999999799}, {'diff': 0.00011069500000000093}, {'diff': 0.000110680000000001...</msg>
<status status="PASS" starttime="20201030 15:55:03.262" endtime="20201030 15:55:03.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:03.269" level="INFO">${RESULT} = {'diff': [0.00011091700000000204, 0.00011063799999999971, 0.00011062499999999961, 0.00011069399999999799, 0.00011069500000000093, 0.00011068000000000189, 0.00011066699999999832, 0.00011065199999999928...</msg>
<status status="PASS" starttime="20201030 15:55:03.266" endtime="20201030 15:55:03.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.274" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:03.273" endtime="20201030 15:55:03.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.276" level="INFO">VALUE: [0.00011091700000000204, 0.00011063799999999971, 0.00011062499999999961, 0.00011069399999999799, 0.00011069500000000093, 0.00011068000000000189, 0.00011066699999999832, 0.00011065199999999928, 0.00011065300000000222, 0.00011059799999999995, 0.00011063899999999918, 0.00011066700000000179, 0.00011065300000000222, 0.00011063899999999918, 0.00011068099999999789, 0.00011065300000000222, 0.00011066699999999832, 0.00011066699999999832, 0.00011063899999999918, 0.00011066700000000179, 0.00011067999999999842, 0.00011065299999999875, 0.00011070800000000103, 0.0001107220000000006, 0.00011067999999999842, 0.00011065299999999875, 0.00011066600000000232, 0.0001107220000000006, 0.00011065199999999928, 0.00011068100000000136, 0.00011063800000000318, 0.00011068100000000136, 0.00011065199999999928, 0.00011063899999999918, 0.00011065199999999928, 0.00011066699999999832, 0.00011065199999999928, 0.00011068100000000136, 0.00011068000000000189, 0.00011065299999999875, 0.00011066599999999885, 0.00011065300000000222, 0.00011065299999999875, 0.00011065299999999875, 0.00011066700000000179, 0.00011066700000000179, 0.00011066699999999832, 0.00011063899999999918, 0.00011066700000000179, 0.00011068100000000136]</msg>
<status status="PASS" starttime="20201030 15:55:03.275" endtime="20201030 15:55:03.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.270" endtime="20201030 15:55:03.281"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:03.284" endtime="20201030 15:55:03.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.283" endtime="20201030 15:55:03.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.282" endtime="20201030 15:55:03.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.919" endtime="20201030 15:55:03.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.918" endtime="20201030 15:55:03.305"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.313" endtime="20201030 15:55:03.335"></status>
</kw>
<msg timestamp="20201030 15:55:03.335" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.312" endtime="20201030 15:55:03.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.338" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.336" endtime="20201030 15:55:03.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.339" endtime="20201030 15:55:03.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.309" endtime="20201030 15:55:03.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.307" endtime="20201030 15:55:03.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.348" endtime="20201030 15:55:03.633"></status>
</kw>
<msg timestamp="20201030 15:55:03.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017792139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017910514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.346" endtime="20201030 15:55:03.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017792139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017910514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.637" endtime="20201030 15:55:03.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.645" endtime="20201030 15:55:03.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.344" endtime="20201030 15:55:03.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.342" endtime="20201030 15:55:03.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:03.651" level="INFO">${PHILIP_RES} = [{'diff': 0.00011837500000000042}, {'diff': 0.00011812500000000017}, {'diff': 0.0001181110000000006}, {'diff': 0.00011809699999999757}, {'diff': 0.00011811099999999713}, {'diff': 0.0001180280000000026...</msg>
<status status="PASS" starttime="20201030 15:55:03.648" endtime="20201030 15:55:03.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:03.656" level="INFO">${RESULT} = {'diff': [0.00011837500000000042, 0.00011812500000000017, 0.0001181110000000006, 0.00011809699999999757, 0.00011811099999999713, 0.00011802800000000266, 0.0001181110000000006, 0.00011809700000000103, ...</msg>
<status status="PASS" starttime="20201030 15:55:03.652" endtime="20201030 15:55:03.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.660" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:03.659" endtime="20201030 15:55:03.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.663" level="INFO">VALUE: [0.00011837500000000042, 0.00011812500000000017, 0.0001181110000000006, 0.00011809699999999757, 0.00011811099999999713, 0.00011802800000000266, 0.0001181110000000006, 0.00011809700000000103, 0.00011812500000000017, 0.0001180690000000019, 0.0001181110000000006, 0.00011809700000000103, 0.0001181110000000006, 0.0001181110000000006, 0.00011816599999999941, 0.0001181110000000006, 0.00011809699999999757, 0.0001181110000000006, 0.00011812500000000017, 0.0001181110000000006, 0.00011813899999999974, 0.00011804200000000223, 0.00011812500000000017, 0.0001181110000000006, 0.0001181110000000006, 0.0001181110000000006, 0.0001181110000000006, 0.00011809700000000103, 0.0001181249999999967, 0.0001181110000000006, 0.0001181110000000006, 0.00011809700000000103, 0.00011808300000000146, 0.0001181110000000006, 0.0001181110000000006, 0.0001181110000000006, 0.00011815299999999931, 0.0001181110000000006, 0.0001181110000000006, 0.00011812500000000017, 0.00011811099999999713, 0.00011808300000000146, 0.0001181110000000006, 0.000118082999999998, 0.0001181110000000006, 0.00011812500000000017, 0.0001181110000000006, 0.00011809700000000103, 0.00011806899999999843, 0.00011809700000000103]</msg>
<status status="PASS" starttime="20201030 15:55:03.662" endtime="20201030 15:55:03.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.657" endtime="20201030 15:55:03.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:03.668" endtime="20201030 15:55:03.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.666" endtime="20201030 15:55:03.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.665" endtime="20201030 15:55:03.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.306" endtime="20201030 15:55:03.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.305" endtime="20201030 15:55:03.689"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.697" endtime="20201030 15:55:03.720"></status>
</kw>
<msg timestamp="20201030 15:55:03.721" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.695" endtime="20201030 15:55:03.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.723" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.722" endtime="20201030 15:55:03.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.724" endtime="20201030 15:55:03.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.693" endtime="20201030 15:55:03.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.691" endtime="20201030 15:55:03.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.733" endtime="20201030 15:55:04.020"></status>
</kw>
<msg timestamp="20201030 15:55:04.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017809472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0179355, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:03.732" endtime="20201030 15:55:04.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017809472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0179355, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:04.024" endtime="20201030 15:55:04.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.032" endtime="20201030 15:55:04.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.729" endtime="20201030 15:55:04.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.727" endtime="20201030 15:55:04.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:04.038" level="INFO">${PHILIP_RES} = [{'diff': 0.00012602800000000025}, {'diff': 0.00012579200000000304}, {'diff': 0.000125778}, {'diff': 0.00012572200000000172}, {'diff': 0.000125778}, {'diff': 0.00012586099999999795}, {'diff': 0.000125...</msg>
<status status="PASS" starttime="20201030 15:55:04.035" endtime="20201030 15:55:04.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:04.042" level="INFO">${RESULT} = {'diff': [0.00012602800000000025, 0.00012579200000000304, 0.000125778, 0.00012572200000000172, 0.000125778, 0.00012586099999999795, 0.00012579199999999957, 0.000125778, 0.0001257910000000001, 0.000125...</msg>
<status status="PASS" starttime="20201030 15:55:04.039" endtime="20201030 15:55:04.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.046" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:04.045" endtime="20201030 15:55:04.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.049" level="INFO">VALUE: [0.00012602800000000025, 0.00012579200000000304, 0.000125778, 0.00012572200000000172, 0.000125778, 0.00012586099999999795, 0.00012579199999999957, 0.000125778, 0.0001257910000000001, 0.0001257910000000001, 0.00012579199999999957, 0.0001257910000000001, 0.00012584700000000185, 0.0001258199999999987, 0.00012572199999999825, 0.00012576300000000096, 0.00012573599999999782, 0.0001258199999999987, 0.000125778, 0.00012579199999999957, 0.00012579199999999957, 0.0001257910000000001, 0.0001257910000000001, 0.00012584799999999785, 0.00012579199999999957, 0.00012576300000000096, 0.0001258060000000026, 0.000125778, 0.0001257910000000001, 0.00012576400000000043, 0.000125778, 0.0001258329999999988, 0.00012576400000000043, 0.00012576400000000043, 0.00012576400000000043, 0.00012572199999999825, 0.000125778, 0.00012576400000000043, 0.00012575000000000086, 0.00012579199999999957, 0.000125778, 0.000125778, 0.00012580499999999967, 0.00012579199999999957, 0.000125778, 0.00012577700000000053, 0.00012580599999999914, 0.00012580500000000314, 0.00012575000000000086, 0.00012579199999999957]</msg>
<status status="PASS" starttime="20201030 15:55:04.047" endtime="20201030 15:55:04.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.043" endtime="20201030 15:55:04.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:04.054" endtime="20201030 15:55:04.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.052" endtime="20201030 15:55:04.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.051" endtime="20201030 15:55:04.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.690" endtime="20201030 15:55:04.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.689" endtime="20201030 15:55:04.074"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.083" endtime="20201030 15:55:04.107"></status>
</kw>
<msg timestamp="20201030 15:55:04.107" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.081" endtime="20201030 15:55:04.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.110" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.108" endtime="20201030 15:55:04.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.111" endtime="20201030 15:55:04.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.079" endtime="20201030 15:55:04.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.077" endtime="20201030 15:55:04.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.120" endtime="20201030 15:55:04.406"></status>
</kw>
<msg timestamp="20201030 15:55:04.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018793181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018927111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.118" endtime="20201030 15:55:04.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018793181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018927111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.410" endtime="20201030 15:55:04.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.418" endtime="20201030 15:55:04.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.116" endtime="20201030 15:55:04.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.114" endtime="20201030 15:55:04.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:04.424" level="INFO">${PHILIP_RES} = [{'diff': 0.00013393000000000085}, {'diff': 0.00013370899999999922}, {'diff': 0.00013365300000000094}, {'diff': 0.00013368100000000008}, {'diff': 0.0001336800000000006}, {'diff': 0.0001336800000000006...</msg>
<status status="PASS" starttime="20201030 15:55:04.421" endtime="20201030 15:55:04.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:04.429" level="INFO">${RESULT} = {'diff': [0.00013393000000000085, 0.00013370899999999922, 0.00013365300000000094, 0.00013368100000000008, 0.0001336800000000006, 0.0001336800000000006, 0.00013368100000000008, 0.0001336800000000006, 0...</msg>
<status status="PASS" starttime="20201030 15:55:04.425" endtime="20201030 15:55:04.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.433" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:04.432" endtime="20201030 15:55:04.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.435" level="INFO">VALUE: [0.00013393000000000085, 0.00013370899999999922, 0.00013365300000000094, 0.00013368100000000008, 0.0001336800000000006, 0.0001336800000000006, 0.00013368100000000008, 0.0001336800000000006, 0.00013369499999999965, 0.00013365200000000146, 0.00013373700000000183, 0.00013369499999999965, 0.00013370799999999974, 0.00013370899999999922, 0.00013369400000000017, 0.00013369499999999965, 0.00013368100000000008, 0.00013369499999999965, 0.00013363799999999842, 0.0001336800000000006, 0.00013362499999999833, 0.00013369400000000017, 0.00013369400000000017, 0.00013369499999999965, 0.00013366599999999756, 0.00013369499999999965, 0.00013369400000000017, 0.00013369499999999965, 0.00013368100000000008, 0.00013369400000000017, 0.00013370899999999922, 0.0001336800000000006, 0.00013368100000000008, 0.00013366600000000103, 0.00013368100000000008, 0.0001336670000000005, 0.00013368100000000008, 0.00013369499999999965, 0.0001336800000000006, 0.00013368100000000008, 0.00013374999999999845, 0.0001336800000000006, 0.00013373599999999888, 0.00013368000000000407, 0.00013369500000000312, 0.00013367999999999713, 0.00013367999999999713, 0.00013369500000000312, 0.0001337080000000032, 0.0001336809999999966]</msg>
<status status="PASS" starttime="20201030 15:55:04.434" endtime="20201030 15:55:04.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.429" endtime="20201030 15:55:04.437"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:04.441" endtime="20201030 15:55:04.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.440" endtime="20201030 15:55:04.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.439" endtime="20201030 15:55:04.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.075" endtime="20201030 15:55:04.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.075" endtime="20201030 15:55:04.462"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.470" endtime="20201030 15:55:04.495"></status>
</kw>
<msg timestamp="20201030 15:55:04.495" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.469" endtime="20201030 15:55:04.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.497" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.496" endtime="20201030 15:55:04.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.499" endtime="20201030 15:55:04.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.466" endtime="20201030 15:55:04.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.464" endtime="20201030 15:55:04.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.508" endtime="20201030 15:55:04.794"></status>
</kw>
<msg timestamp="20201030 15:55:04.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017805514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017947597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.506" endtime="20201030 15:55:04.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017805514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017947597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.797" endtime="20201030 15:55:04.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.805" endtime="20201030 15:55:04.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.504" endtime="20201030 15:55:04.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.502" endtime="20201030 15:55:04.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:04.812" level="INFO">${PHILIP_RES} = [{'diff': 0.0001420829999999977}, {'diff': 0.00014182000000000083}, {'diff': 0.00014182000000000083}, {'diff': 0.0001418050000000018}, {'diff': 0.00014181999999999736}, {'diff': 0.0001418340000000004}...</msg>
<status status="PASS" starttime="20201030 15:55:04.809" endtime="20201030 15:55:04.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:04.817" level="INFO">${RESULT} = {'diff': [0.0001420829999999977, 0.00014182000000000083, 0.00014182000000000083, 0.0001418050000000018, 0.00014181999999999736, 0.0001418340000000004, 0.00014181900000000136, 0.00014181900000000136, 0...</msg>
<status status="PASS" starttime="20201030 15:55:04.813" endtime="20201030 15:55:04.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.821" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:04.820" endtime="20201030 15:55:04.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.823" level="INFO">VALUE: [0.0001420829999999977, 0.00014182000000000083, 0.00014182000000000083, 0.0001418050000000018, 0.00014181999999999736, 0.0001418340000000004, 0.00014181900000000136, 0.00014181900000000136, 0.00014181999999999736, 0.00014179099999999875, 0.0001418050000000018, 0.00014180600000000126, 0.00014180499999999832, 0.00014179199999999823, 0.00014180600000000126, 0.00014181900000000136, 0.00014184699999999703, 0.0001418059999999978, 0.00014181900000000136, 0.00014182000000000083, 0.00014181999999999736, 0.0001418059999999978, 0.00014183300000000093, 0.00014180600000000126, 0.0001418189999999979, 0.00014181900000000136, 0.00014180600000000126, 0.00014179199999999823, 0.0001418189999999979, 0.00014190299999999878, 0.00014180600000000126, 0.00014181900000000136, 0.00014181999999999736, 0.0001418470000000005, 0.0001418050000000018, 0.00014180600000000126, 0.00014183299999999746, 0.00014177699999999918, 0.00014180600000000126, 0.00014180600000000126, 0.00014190299999999878, 0.0001418189999999979, 0.00014182000000000083, 0.00014181900000000136, 0.0001418189999999979, 0.00014179199999999476, 0.00014184699999999356, 0.00014180499999999485, 0.00014176400000000255, 0.00014177700000000265]</msg>
<status status="PASS" starttime="20201030 15:55:04.822" endtime="20201030 15:55:04.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.817" endtime="20201030 15:55:04.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:04.828" endtime="20201030 15:55:04.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.827" endtime="20201030 15:55:04.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.826" endtime="20201030 15:55:04.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.463" endtime="20201030 15:55:04.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.462" endtime="20201030 15:55:04.849"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.858" endtime="20201030 15:55:04.882"></status>
</kw>
<msg timestamp="20201030 15:55:04.883" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.856" endtime="20201030 15:55:04.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.885" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.884" endtime="20201030 15:55:04.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.886" endtime="20201030 15:55:04.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.854" endtime="20201030 15:55:04.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.852" endtime="20201030 15:55:04.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.896" endtime="20201030 15:55:05.182"></status>
</kw>
<msg timestamp="20201030 15:55:05.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018001514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018151931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.894" endtime="20201030 15:55:05.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018001514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018151931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.186" endtime="20201030 15:55:05.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.193" endtime="20201030 15:55:05.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.891" endtime="20201030 15:55:05.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.890" endtime="20201030 15:55:05.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:05.200" level="INFO">${PHILIP_RES} = [{'diff': 0.0001504169999999999}, {'diff': 0.00015018099999999923}, {'diff': 0.00015013899999999705}, {'diff': 0.00015017999999999976}, {'diff': 0.00015017999999999976}, {'diff': 0.0001501390000000005...</msg>
<status status="PASS" starttime="20201030 15:55:05.197" endtime="20201030 15:55:05.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:05.204" level="INFO">${RESULT} = {'diff': [0.0001504169999999999, 0.00015018099999999923, 0.00015013899999999705, 0.00015017999999999976, 0.00015017999999999976, 0.00015013900000000052, 0.00015015200000000062, 0.00015009699999999834,...</msg>
<status status="PASS" starttime="20201030 15:55:05.201" endtime="20201030 15:55:05.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.208" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:05.207" endtime="20201030 15:55:05.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.211" level="INFO">VALUE: [0.0001504169999999999, 0.00015018099999999923, 0.00015013899999999705, 0.00015017999999999976, 0.00015017999999999976, 0.00015013900000000052, 0.00015015200000000062, 0.00015009699999999834, 0.00015013900000000052, 0.0001501530000000001, 0.0001501660000000002, 0.00015016699999999966, 0.00015018099999999923, 0.00015016699999999966, 0.0001501530000000001, 0.0001501530000000001, 0.0001501810000000027, 0.00015016699999999966, 0.0001501530000000001, 0.00015016699999999966, 0.00015013899999999705, 0.00015018099999999923, 0.0001501530000000001, 0.0001502079999999989, 0.0001501530000000001, 0.00015011100000000138, 0.00015018099999999923, 0.00015013899999999705, 0.00015017999999999976, 0.00015016699999999966, 0.0001501660000000002, 0.00015017999999999976, 0.00015015200000000062, 0.00015015200000000062, 0.00015016599999999672, 0.0001501940000000028, 0.0001501660000000002, 0.00015013900000000052, 0.00015016699999999966, 0.0001501530000000001, 0.00015016699999999966, 0.00015016699999999966, 0.00015016699999999966, 0.00015013900000000052, 0.00015016699999999966, 0.00015011100000000138, 0.00015013900000000052, 0.00015016699999999966, 0.0001501530000000001, 0.00015018099999999923]</msg>
<status status="PASS" starttime="20201030 15:55:05.209" endtime="20201030 15:55:05.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.205" endtime="20201030 15:55:05.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:05.216" endtime="20201030 15:55:05.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.214" endtime="20201030 15:55:05.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.213" endtime="20201030 15:55:05.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.850" endtime="20201030 15:55:05.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.850" endtime="20201030 15:55:05.236"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.245" endtime="20201030 15:55:05.272"></status>
</kw>
<msg timestamp="20201030 15:55:05.272" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.243" endtime="20201030 15:55:05.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.275" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.273" endtime="20201030 15:55:05.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.276" endtime="20201030 15:55:05.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.241" endtime="20201030 15:55:05.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.239" endtime="20201030 15:55:05.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.285" endtime="20201030 15:55:05.571"></status>
</kw>
<msg timestamp="20201030 15:55:05.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018768458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018927417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.283" endtime="20201030 15:55:05.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018768458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018927417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.575" endtime="20201030 15:55:05.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.583" endtime="20201030 15:55:05.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.281" endtime="20201030 15:55:05.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.279" endtime="20201030 15:55:05.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:05.590" level="INFO">${PHILIP_RES} = [{'diff': 0.00015895900000000018}, {'diff': 0.0001587359999999996}, {'diff': 0.00015873699999999907}, {'diff': 0.00015874999999999917}, {'diff': 0.0001587359999999996}, {'diff': 0.0001587359999999996}...</msg>
<status status="PASS" starttime="20201030 15:55:05.586" endtime="20201030 15:55:05.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:05.594" level="INFO">${RESULT} = {'diff': [0.00015895900000000018, 0.0001587359999999996, 0.00015873699999999907, 0.00015874999999999917, 0.0001587359999999996, 0.0001587359999999996, 0.00015872200000000003, 0.00015874999999999917, 0...</msg>
<status status="PASS" starttime="20201030 15:55:05.591" endtime="20201030 15:55:05.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.598" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:05.597" endtime="20201030 15:55:05.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.600" level="INFO">VALUE: [0.00015895900000000018, 0.0001587359999999996, 0.00015873699999999907, 0.00015874999999999917, 0.0001587359999999996, 0.0001587359999999996, 0.00015872200000000003, 0.00015874999999999917, 0.00015874999999999917, 0.00015874999999999917, 0.00015874999999999917, 0.00015875000000000264, 0.00015872200000000003, 0.0001587229999999995, 0.00015872200000000003, 0.00015874999999999917, 0.0001587359999999996, 0.00015874999999999917, 0.00015870899999999993, 0.0001587359999999996, 0.00015873699999999907, 0.00015868000000000132, 0.00015874999999999917, 0.0001587359999999996, 0.0001587359999999996, 0.00015870800000000046, 0.00015875000000000264, 0.0001587359999999996, 0.00015874999999999917, 0.00015872200000000003, 0.00015870800000000046, 0.00015873699999999907, 0.0001587359999999996, 0.00015873699999999907, 0.00015874999999999917, 0.00015873699999999907, 0.0001587359999999996, 0.00015873600000000307, 0.0001587359999999996, 0.0001587359999999996, 0.0001587359999999996, 0.00015872200000000003, 0.0001587229999999995, 0.00015872200000000003, 0.0001587229999999995, 0.00015876400000000568, 0.00015880599999999745, 0.00015872200000000003, 0.00015872200000000003, 0.00015872200000000003]</msg>
<status status="PASS" starttime="20201030 15:55:05.599" endtime="20201030 15:55:05.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.594" endtime="20201030 15:55:05.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:05.606" endtime="20201030 15:55:05.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.605" endtime="20201030 15:55:05.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.603" endtime="20201030 15:55:05.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.237" endtime="20201030 15:55:05.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.237" endtime="20201030 15:55:05.627"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.635" endtime="20201030 15:55:05.662"></status>
</kw>
<msg timestamp="20201030 15:55:05.662" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.634" endtime="20201030 15:55:05.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.665" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.663" endtime="20201030 15:55:05.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.666" endtime="20201030 15:55:05.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.631" endtime="20201030 15:55:05.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.629" endtime="20201030 15:55:05.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.675" endtime="20201030 15:55:05.961"></status>
</kw>
<msg timestamp="20201030 15:55:05.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018040986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018208792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.674" endtime="20201030 15:55:05.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018040986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018208792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.964" endtime="20201030 15:55:05.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.972" endtime="20201030 15:55:05.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.671" endtime="20201030 15:55:05.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.669" endtime="20201030 15:55:05.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:05.979" level="INFO">${PHILIP_RES} = [{'diff': 0.00016780600000000298}, {'diff': 0.0001674999999999975}, {'diff': 0.0001675419999999997}, {'diff': 0.0001675419999999997}, {'diff': 0.00016754100000000022}, {'diff': 0.00016751300000000108}...</msg>
<status status="PASS" starttime="20201030 15:55:05.975" endtime="20201030 15:55:05.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:05.983" level="INFO">${RESULT} = {'diff': [0.00016780600000000298, 0.0001674999999999975, 0.0001675419999999997, 0.0001675419999999997, 0.00016754100000000022, 0.00016751300000000108, 0.0001675549999999998, 0.0001675419999999997, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:05.980" endtime="20201030 15:55:05.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.988" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:05.987" endtime="20201030 15:55:05.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.990" level="INFO">VALUE: [0.00016780600000000298, 0.0001674999999999975, 0.0001675419999999997, 0.0001675419999999997, 0.00016754100000000022, 0.00016751300000000108, 0.0001675549999999998, 0.0001675419999999997, 0.00016747200000000184, 0.0001675419999999997, 0.0001675419999999997, 0.00016752800000000012, 0.00016752700000000065, 0.00016756899999999936, 0.00016756899999999936, 0.00016752800000000012, 0.00016755599999999926, 0.00016750000000000098, 0.0001675549999999998, 0.00016754100000000022, 0.00016758299999999893, 0.00016752800000000012, 0.0001675419999999997, 0.00016755600000000273, 0.00016752800000000012, 0.0001675419999999997, 0.00016752800000000012, 0.00016750000000000098, 0.0001675419999999997, 0.00016756999999999883, 0.0001675700000000023, 0.0001675419999999997, 0.00016754100000000022, 0.00016754100000000022, 0.00016758299999999893, 0.0001675419999999997, 0.00016755599999999926, 0.00016752799999999665, 0.0001675419999999997, 0.00016754100000000022, 0.00016752700000000065, 0.0001675419999999997, 0.00016755599999999926, 0.00016752800000000012, 0.00016751400000000055, 0.0001675419999999997, 0.00016756999999999883, 0.00016754100000000022, 0.00016754200000000663, 0.00016752800000000012]</msg>
<status status="PASS" starttime="20201030 15:55:05.989" endtime="20201030 15:55:05.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.984" endtime="20201030 15:55:05.992"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:05.995" endtime="20201030 15:55:06.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.994" endtime="20201030 15:55:06.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.993" endtime="20201030 15:55:06.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.628" endtime="20201030 15:55:06.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.627" endtime="20201030 15:55:06.016"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.024" endtime="20201030 15:55:06.051"></status>
</kw>
<msg timestamp="20201030 15:55:06.052" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.023" endtime="20201030 15:55:06.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.054" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.053" endtime="20201030 15:55:06.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.055" endtime="20201030 15:55:06.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.020" endtime="20201030 15:55:06.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.018" endtime="20201030 15:55:06.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.064" endtime="20201030 15:55:06.355"></status>
</kw>
<msg timestamp="20201030 15:55:06.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017988556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018165375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.063" endtime="20201030 15:55:06.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017988556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018165375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.364" endtime="20201030 15:55:06.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.381" endtime="20201030 15:55:06.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.060" endtime="20201030 15:55:06.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.058" endtime="20201030 15:55:06.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:06.395" level="INFO">${PHILIP_RES} = [{'diff': 0.00017681900000000167}, {'diff': 0.00017661100000000013}, {'diff': 0.00017655600000000132}, {'diff': 0.00017654199999999828}, {'diff': 0.00017656900000000142}, {'diff': 0.000176568999999997...</msg>
<status status="PASS" starttime="20201030 15:55:06.388" endtime="20201030 15:55:06.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:06.404" level="INFO">${RESULT} = {'diff': [0.00017681900000000167, 0.00017661100000000013, 0.00017655600000000132, 0.00017654199999999828, 0.00017656900000000142, 0.00017656899999999795, 0.00017656900000000142, 0.00017655499999999838...</msg>
<status status="PASS" starttime="20201030 15:55:06.397" endtime="20201030 15:55:06.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.413" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:06.411" endtime="20201030 15:55:06.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.418" level="INFO">VALUE: [0.00017681900000000167, 0.00017661100000000013, 0.00017655600000000132, 0.00017654199999999828, 0.00017656900000000142, 0.00017656899999999795, 0.00017656900000000142, 0.00017655499999999838, 0.00017656900000000142, 0.00017655500000000185, 0.00017656899999999795, 0.00017655500000000185, 0.0001766249999999997, 0.00017654199999999828, 0.00017656899999999795, 0.00017656900000000142, 0.00017656899999999795, 0.000176583000000001, 0.00017654200000000175, 0.0001765700000000009, 0.00017655600000000132, 0.0001765700000000009, 0.0001765700000000009, 0.00017656999999999742, 0.000176583000000001, 0.00017655599999999785, 0.000176486, 0.00017656999999999742, 0.0001765700000000009, 0.00017654199999999828, 0.0001765700000000009, 0.00017655600000000132, 0.00017655600000000132, 0.00017655600000000132, 0.0001766249999999997, 0.00017652800000000218, 0.00017656899999999795, 0.0001765549999999949, 0.00017656900000000142, 0.0001765140000000026, 0.0001765700000000009, 0.00017656899999999448, 0.00017656900000000142, 0.00017656900000000142, 0.0001765549999999949, 0.000176583000000001, 0.00017655500000000185, 0.00017654100000000228, 0.00017651399999999567, 0.00017656900000000142]</msg>
<status status="PASS" starttime="20201030 15:55:06.415" endtime="20201030 15:55:06.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.406" endtime="20201030 15:55:06.421"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:06.428" endtime="20201030 15:55:06.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.425" endtime="20201030 15:55:06.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.423" endtime="20201030 15:55:06.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.017" endtime="20201030 15:55:06.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.016" endtime="20201030 15:55:06.450"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.458" endtime="20201030 15:55:06.486"></status>
</kw>
<msg timestamp="20201030 15:55:06.487" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.457" endtime="20201030 15:55:06.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.490" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.488" endtime="20201030 15:55:06.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.491" endtime="20201030 15:55:06.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.454" endtime="20201030 15:55:06.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.452" endtime="20201030 15:55:06.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.500" endtime="20201030 15:55:06.785"></status>
</kw>
<msg timestamp="20201030 15:55:06.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018970292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019156389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.498" endtime="20201030 15:55:06.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018970292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019156389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.789" endtime="20201030 15:55:06.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.797" endtime="20201030 15:55:06.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.495" endtime="20201030 15:55:06.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.494" endtime="20201030 15:55:06.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:06.803" level="INFO">${PHILIP_RES} = [{'diff': 0.00018609699999999965}, {'diff': 0.00018583299999999983}, {'diff': 0.00018581900000000026}, {'diff': 0.00018583299999999983}, {'diff': 0.00018581900000000026}, {'diff': 0.000185806000000000...</msg>
<status status="PASS" starttime="20201030 15:55:06.800" endtime="20201030 15:55:06.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:06.807" level="INFO">${RESULT} = {'diff': [0.00018609699999999965, 0.00018583299999999983, 0.00018581900000000026, 0.00018583299999999983, 0.00018581900000000026, 0.00018580600000000017, 0.00018580600000000017, 0.00018575000000000189...</msg>
<status status="PASS" starttime="20201030 15:55:06.804" endtime="20201030 15:55:06.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.812" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:06.811" endtime="20201030 15:55:06.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.814" level="INFO">VALUE: [0.00018609699999999965, 0.00018583299999999983, 0.00018581900000000026, 0.00018583299999999983, 0.00018581900000000026, 0.00018580600000000017, 0.00018580600000000017, 0.00018575000000000189, 0.00018581900000000026, 0.00018581900000000026, 0.00018581900000000026, 0.0001858189999999968, 0.0001858469999999994, 0.00018581999999999974, 0.00018583400000000277, 0.00018580600000000017, 0.00018581999999999974, 0.00018581900000000026, 0.00018581900000000026, 0.00018576399999999799, 0.0001858050000000007, 0.00018581900000000026, 0.00018581999999999974, 0.00018581999999999974, 0.00018587499999999854, 0.00018583299999999983, 0.00018586099999999897, 0.0001858050000000007, 0.00018581900000000026, 0.00018581900000000026, 0.00018581999999999974, 0.00018580600000000017, 0.0001858200000000032, 0.00018579199999999713, 0.00018581900000000373, 0.0001858189999999968, 0.00018580500000000416, 0.00018583299999999636, 0.00018580600000000363, 0.00018581999999999627, 0.0001858200000000032, 0.00018581999999999627, 0.00018580600000000363, 0.0001858189999999968, 0.00018586100000000244, 0.00018581900000000373, 0.00018580499999999722, 0.00018579200000000407, 0.0001858059999999967, 0.00018580600000000363]</msg>
<status status="PASS" starttime="20201030 15:55:06.813" endtime="20201030 15:55:06.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.808" endtime="20201030 15:55:06.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:06.822" endtime="20201030 15:55:06.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.821" endtime="20201030 15:55:06.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.820" endtime="20201030 15:55:06.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.451" endtime="20201030 15:55:06.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.450" endtime="20201030 15:55:06.843"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.852" endtime="20201030 15:55:06.881"></status>
</kw>
<msg timestamp="20201030 15:55:06.881" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.850" endtime="20201030 15:55:06.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:06.883" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:06.882" endtime="20201030 15:55:06.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.885" endtime="20201030 15:55:06.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.847" endtime="20201030 15:55:06.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.845" endtime="20201030 15:55:06.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:06.894" endtime="20201030 15:55:07.188"></status>
</kw>
<msg timestamp="20201030 15:55:07.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017988736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018184347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:06.892" endtime="20201030 15:55:07.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017988736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018184347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.197" endtime="20201030 15:55:07.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.215" endtime="20201030 15:55:07.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.890" endtime="20201030 15:55:07.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.888" endtime="20201030 15:55:07.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:07.229" level="INFO">${PHILIP_RES} = [{'diff': 0.00019561099999999831}, {'diff': 0.0001952919999999997}, {'diff': 0.0001953469999999985}, {'diff': 0.0001952919999999997}, {'diff': 0.00019533299999999892}, {'diff': 0.0001952919999999997},...</msg>
<status status="PASS" starttime="20201030 15:55:07.222" endtime="20201030 15:55:07.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:07.239" level="INFO">${RESULT} = {'diff': [0.00019561099999999831, 0.0001952919999999997, 0.0001953469999999985, 0.0001952919999999997, 0.00019533299999999892, 0.0001952919999999997, 0.00019522199999999837, 0.0001952919999999997, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:07.231" endtime="20201030 15:55:07.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.246" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:07.245" endtime="20201030 15:55:07.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.248" level="INFO">VALUE: [0.00019561099999999831, 0.0001952919999999997, 0.0001953469999999985, 0.0001952919999999997, 0.00019533299999999892, 0.0001952919999999997, 0.00019522199999999837, 0.0001952919999999997, 0.0001953200000000023, 0.00019529100000000021, 0.00019529100000000021, 0.0001952919999999997, 0.00019530499999999978, 0.0001953339999999984, 0.00019527800000000012, 0.0001952919999999997, 0.00019530499999999978, 0.00019527800000000012, 0.00019527800000000012, 0.00019529100000000021, 0.0001953200000000023, 0.00019529100000000021, 0.0001952919999999997, 0.0001952919999999997, 0.00019529100000000021, 0.0001953469999999985, 0.00019530499999999978, 0.00019526400000000055, 0.00019534800000000144, 0.00019530499999999978, 0.00019530599999999926, 0.00019525000000000098, 0.00019527800000000012, 0.00019534800000000144, 0.00019527800000000012, 0.000195361000000005, 0.00019529100000000021, 0.0001952919999999997, 0.00019527800000000012, 0.00019527700000000064, 0.00019526400000000055, 0.00019531899999999935, 0.0001952919999999997, 0.00019529100000000021, 0.00019523599999999447, 0.0001952919999999997, 0.0001952769999999937, 0.0001952919999999997, 0.00019527800000000012, 0.00019530599999999926]</msg>
<status status="PASS" starttime="20201030 15:55:07.247" endtime="20201030 15:55:07.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.241" endtime="20201030 15:55:07.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:07.253" endtime="20201030 15:55:07.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.252" endtime="20201030 15:55:07.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.251" endtime="20201030 15:55:07.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.844" endtime="20201030 15:55:07.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:06.844" endtime="20201030 15:55:07.274"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.283" endtime="20201030 15:55:07.312"></status>
</kw>
<msg timestamp="20201030 15:55:07.313" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.281" endtime="20201030 15:55:07.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.315" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.314" endtime="20201030 15:55:07.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.316" endtime="20201030 15:55:07.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.279" endtime="20201030 15:55:07.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.277" endtime="20201030 15:55:07.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.325" endtime="20201030 15:55:07.611"></status>
</kw>
<msg timestamp="20201030 15:55:07.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017974514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018179764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.324" endtime="20201030 15:55:07.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017974514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018179764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.615" endtime="20201030 15:55:07.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.623" endtime="20201030 15:55:07.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.321" endtime="20201030 15:55:07.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.319" endtime="20201030 15:55:07.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:07.629" level="INFO">${PHILIP_RES} = [{'diff': 0.00020525000000000057}, {'diff': 0.00020498600000000075}, {'diff': 0.00020498700000000022}, {'diff': 0.00020501300000000042}, {'diff': 0.00020498600000000075}, {'diff': 0.000205000000000000...</msg>
<status status="PASS" starttime="20201030 15:55:07.626" endtime="20201030 15:55:07.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:07.633" level="INFO">${RESULT} = {'diff': [0.00020525000000000057, 0.00020498600000000075, 0.00020498700000000022, 0.00020501300000000042, 0.00020498600000000075, 0.00020500000000000032, 0.0002050139999999999, 0.00020498600000000075,...</msg>
<status status="PASS" starttime="20201030 15:55:07.630" endtime="20201030 15:55:07.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.638" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:07.637" endtime="20201030 15:55:07.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.640" level="INFO">VALUE: [0.00020525000000000057, 0.00020498600000000075, 0.00020498700000000022, 0.00020501300000000042, 0.00020498600000000075, 0.00020500000000000032, 0.0002050139999999999, 0.00020498600000000075, 0.00020500000000000032, 0.00020500000000000032, 0.00020495799999999814, 0.00020498599999999728, 0.00020498599999999728, 0.00020495899999999762, 0.00020499999999999685, 0.00020498599999999728, 0.00020499999999999685, 0.00020498599999999728, 0.00020498599999999728, 0.0002050139999999999, 0.00020500000000000032, 0.00020497299999999719, 0.00020498700000000022, 0.00020500000000000032, 0.0002050139999999999, 0.0002050139999999999, 0.00020498600000000075, 0.00020495799999999814, 0.00020495799999999814, 0.00020497200000000118, 0.0002049169999999989, 0.00020497300000000065, 0.00020497300000000412, 0.00020498599999999728, 0.00020501400000000336, 0.0002050699999999947, 0.00020495799999999814, 0.00020499999999999685, 0.00020499999999999685, 0.00020498599999999728, 0.0002050000000000038, 0.00020499999999999685, 0.00020495899999999762, 0.00020495799999999814, 0.0002049719999999977, 0.00020498600000000422, 0.0002049719999999977, 0.00020495799999999814, 0.00020498599999999728, 0.0002050000000000038]</msg>
<status status="PASS" starttime="20201030 15:55:07.639" endtime="20201030 15:55:07.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.634" endtime="20201030 15:55:07.642"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:07.645" endtime="20201030 15:55:07.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.644" endtime="20201030 15:55:07.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.643" endtime="20201030 15:55:07.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.275" endtime="20201030 15:55:07.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.275" endtime="20201030 15:55:07.666"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.674" endtime="20201030 15:55:07.705"></status>
</kw>
<msg timestamp="20201030 15:55:07.706" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.673" endtime="20201030 15:55:07.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.708" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.707" endtime="20201030 15:55:07.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.709" endtime="20201030 15:55:07.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.670" endtime="20201030 15:55:07.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.668" endtime="20201030 15:55:07.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.718" endtime="20201030 15:55:08.015"></status>
</kw>
<msg timestamp="20201030 15:55:08.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018769819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018985014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.717" endtime="20201030 15:55:08.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018769819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018985014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.024" endtime="20201030 15:55:08.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.041" endtime="20201030 15:55:08.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.714" endtime="20201030 15:55:08.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.712" endtime="20201030 15:55:08.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:08.054" level="INFO">${PHILIP_RES} = [{'diff': 0.00021519500000000136}, {'diff': 0.00021490299999999893}, {'diff': 0.0002149580000000012}, {'diff': 0.00021493099999999807}, {'diff': 0.00021490199999999945}, {'diff': 0.0002149310000000015...</msg>
<status status="PASS" starttime="20201030 15:55:08.048" endtime="20201030 15:55:08.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:08.058" level="INFO">${RESULT} = {'diff': [0.00021519500000000136, 0.00021490299999999893, 0.0002149580000000012, 0.00021493099999999807, 0.00021490199999999945, 0.00021493100000000154, 0.0002149169999999985, 0.0002149030000000024, 0...</msg>
<status status="PASS" starttime="20201030 15:55:08.055" endtime="20201030 15:55:08.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.062" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:08.061" endtime="20201030 15:55:08.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.064" level="INFO">VALUE: [0.00021519500000000136, 0.00021490299999999893, 0.0002149580000000012, 0.00021493099999999807, 0.00021490199999999945, 0.00021493100000000154, 0.0002149169999999985, 0.0002149030000000024, 0.0002149169999999985, 0.0002148749999999998, 0.0002149169999999985, 0.0002148749999999998, 0.00021493100000000154, 0.0002149299999999986, 0.00021493000000000206, 0.00021493100000000154, 0.00021494399999999816, 0.00021493100000000154, 0.00021490299999999893, 0.00021495900000000068, 0.0002149169999999985, 0.0002149299999999986, 0.00021491700000000197, 0.00021491599999999902, 0.0002149030000000024, 0.0002148619999999997, 0.00021491599999999902, 0.0002149450000000011, 0.00021490199999999945, 0.00021493099999999807, 0.0002149030000000024, 0.00021493100000000154, 0.00021491699999999503, 0.0002148610000000037, 0.00021491700000000197, 0.00021493000000000206, 0.00021491699999999503, 0.0002149030000000024, 0.00021491700000000197, 0.0002149309999999946, 0.0002149160000000025, 0.00021493100000000154, 0.00021490299999999546, 0.0002149030000000024, 0.00021488900000000283, 0.00021493000000000206, 0.00021491699999999503, 0.0002149160000000025, 0.0002149450000000011, 0.00021491699999999503]</msg>
<status status="PASS" starttime="20201030 15:55:08.063" endtime="20201030 15:55:08.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.059" endtime="20201030 15:55:08.067"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:08.070" endtime="20201030 15:55:08.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.069" endtime="20201030 15:55:08.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.068" endtime="20201030 15:55:08.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.667" endtime="20201030 15:55:08.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.666" endtime="20201030 15:55:08.091"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.100" endtime="20201030 15:55:08.130"></status>
</kw>
<msg timestamp="20201030 15:55:08.131" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.098" endtime="20201030 15:55:08.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.133" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.132" endtime="20201030 15:55:08.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.134" endtime="20201030 15:55:08.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.095" endtime="20201030 15:55:08.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.094" endtime="20201030 15:55:08.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.144" endtime="20201030 15:55:08.432"></status>
</kw>
<msg timestamp="20201030 15:55:08.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017951514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018176806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.142" endtime="20201030 15:55:08.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017951514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018176806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.436" endtime="20201030 15:55:08.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.444" endtime="20201030 15:55:08.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.139" endtime="20201030 15:55:08.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.138" endtime="20201030 15:55:08.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:08.450" level="INFO">${PHILIP_RES} = [{'diff': 0.00022529200000000194}, {'diff': 0.00022506900000000135}, {'diff': 0.00022508300000000092}, {'diff': 0.00022507000000000082}, {'diff': 0.00022506900000000135}, {'diff': 0.000225070000000000...</msg>
<status status="PASS" starttime="20201030 15:55:08.447" endtime="20201030 15:55:08.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:08.455" level="INFO">${RESULT} = {'diff': [0.00022529200000000194, 0.00022506900000000135, 0.00022508300000000092, 0.00022507000000000082, 0.00022506900000000135, 0.00022507000000000082, 0.00022506900000000135, 0.00022507000000000082...</msg>
<status status="PASS" starttime="20201030 15:55:08.451" endtime="20201030 15:55:08.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.460" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:08.459" endtime="20201030 15:55:08.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.462" level="INFO">VALUE: [0.00022529200000000194, 0.00022506900000000135, 0.00022508300000000092, 0.00022507000000000082, 0.00022506900000000135, 0.00022507000000000082, 0.00022506900000000135, 0.00022507000000000082, 0.00022506899999999788, 0.00022506999999999736, 0.0002250549999999983, 0.00022498599999999994, 0.00022509699999999702, 0.0002250840000000004, 0.00022505599999999779, 0.00022506899999999788, 0.00022508300000000092, 0.00022506900000000135, 0.00022504200000000169, 0.00022511100000000006, 0.00022507000000000082, 0.0002249999999999995, 0.0002250840000000004, 0.00022505500000000178, 0.00022512499999999963, 0.00022506900000000135, 0.00022507000000000082, 0.00022506899999999788, 0.00022504200000000169, 0.00022512499999999963, 0.0002250840000000004, 0.00022506900000000135, 0.0002250840000000004, 0.00022506900000000135, 0.00022507000000000082, 0.00022506900000000135, 0.0002250689999999944, 0.0002250139999999956, 0.00022505499999999484, 0.0002250840000000004, 0.0002250689999999944, 0.00022505599999999432, 0.00022507000000000082, 0.00022505599999999432, 0.00022506900000000135, 0.00022512499999999963, 0.00022506900000000135, 0.00022507000000000082, 0.00022506900000000135, 0.00022507000000000082]</msg>
<status status="PASS" starttime="20201030 15:55:08.461" endtime="20201030 15:55:08.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.456" endtime="20201030 15:55:08.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:08.467" endtime="20201030 15:55:08.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.466" endtime="20201030 15:55:08.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.464" endtime="20201030 15:55:08.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.092" endtime="20201030 15:55:08.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.092" endtime="20201030 15:55:08.488"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.496" endtime="20201030 15:55:08.528"></status>
</kw>
<msg timestamp="20201030 15:55:08.529" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.495" endtime="20201030 15:55:08.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.531" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.530" endtime="20201030 15:55:08.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.532" endtime="20201030 15:55:08.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.492" endtime="20201030 15:55:08.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.490" endtime="20201030 15:55:08.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.542" endtime="20201030 15:55:08.828"></status>
</kw>
<msg timestamp="20201030 15:55:08.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017901361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018137097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.540" endtime="20201030 15:55:08.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017901361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018137097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.832" endtime="20201030 15:55:08.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.840" endtime="20201030 15:55:08.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.537" endtime="20201030 15:55:08.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.536" endtime="20201030 15:55:08.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:08.846" level="INFO">${PHILIP_RES} = [{'diff': 0.00023573600000000028}, {'diff': 0.00023543099999999775}, {'diff': 0.0002354450000000008}, {'diff': 0.00023540300000000208}, {'diff': 0.0002354450000000008}, {'diff': 0.00023543000000000175...</msg>
<status status="PASS" starttime="20201030 15:55:08.843" endtime="20201030 15:55:08.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:08.850" level="INFO">${RESULT} = {'diff': [0.00023573600000000028, 0.00023543099999999775, 0.0002354450000000008, 0.00023540300000000208, 0.0002354450000000008, 0.00023543000000000175, 0.00023545900000000036, 0.00023544400000000132, ...</msg>
<status status="PASS" starttime="20201030 15:55:08.847" endtime="20201030 15:55:08.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.855" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:08.854" endtime="20201030 15:55:08.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.857" level="INFO">VALUE: [0.00023573600000000028, 0.00023543099999999775, 0.0002354450000000008, 0.00023540300000000208, 0.0002354450000000008, 0.00023543000000000175, 0.00023545900000000036, 0.00023544400000000132, 0.00023537499999999947, 0.00023543000000000175, 0.0002354580000000009, 0.0002354029999999986, 0.00023543100000000122, 0.00023543100000000122, 0.00023544400000000132, 0.00023537499999999947, 0.00023544400000000132, 0.0002354450000000008, 0.00023544400000000132, 0.0002354999999999996, 0.0002354580000000009, 0.00023542999999999828, 0.0002354589999999969, 0.00023545799999999742, 0.00023544499999999732, 0.00023542999999999828, 0.00023547200000000046, 0.00023544399999999785, 0.00023547200000000046, 0.00023550000000000654, 0.00023543000000000175, 0.0002354450000000008, 0.0002354580000000009, 0.00023547299999999993, 0.0002354580000000009, 0.00023543099999999428, 0.0002354450000000008, 0.00023544399999999438, 0.00023543100000000122, 0.00023544399999999438, 0.0002354450000000008, 0.00023545799999999395, 0.00023543100000000122, 0.00023544399999999438, 0.0002353890000000025, 0.0002354580000000009, 0.00023544400000000132, 0.0002354450000000008, 0.0002354580000000009, 0.0002354450000000008]</msg>
<status status="PASS" starttime="20201030 15:55:08.856" endtime="20201030 15:55:08.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.851" endtime="20201030 15:55:08.858"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:08.862" endtime="20201030 15:55:08.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.861" endtime="20201030 15:55:08.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.859" endtime="20201030 15:55:08.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.489" endtime="20201030 15:55:08.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.488" endtime="20201030 15:55:08.883"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.891" endtime="20201030 15:55:08.925"></status>
</kw>
<msg timestamp="20201030 15:55:08.925" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.890" endtime="20201030 15:55:08.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.928" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.926" endtime="20201030 15:55:08.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.929" endtime="20201030 15:55:08.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.887" endtime="20201030 15:55:08.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.885" endtime="20201030 15:55:08.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.938" endtime="20201030 15:55:09.224"></status>
</kw>
<msg timestamp="20201030 15:55:09.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018832222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019078528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.937" endtime="20201030 15:55:09.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018832222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019078528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.229" endtime="20201030 15:55:09.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.237" endtime="20201030 15:55:09.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.934" endtime="20201030 15:55:09.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.932" endtime="20201030 15:55:09.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:09.243" level="INFO">${PHILIP_RES} = [{'diff': 0.0002463060000000017}, {'diff': 0.00024605600000000144}, {'diff': 0.00024611100000000025}, {'diff': 0.0002460549999999985}, {'diff': 0.0002460549999999985}, {'diff': 0.000246070000000001}, ...</msg>
<status status="PASS" starttime="20201030 15:55:09.240" endtime="20201030 15:55:09.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:09.247" level="INFO">${RESULT} = {'diff': [0.0002463060000000017, 0.00024605600000000144, 0.00024611100000000025, 0.0002460549999999985, 0.0002460549999999985, 0.000246070000000001, 0.00024604200000000187, 0.0002460280000000023, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:09.244" endtime="20201030 15:55:09.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.252" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:09.251" endtime="20201030 15:55:09.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.254" level="INFO">VALUE: [0.0002463060000000017, 0.00024605600000000144, 0.00024611100000000025, 0.0002460549999999985, 0.0002460549999999985, 0.000246070000000001, 0.00024604200000000187, 0.0002460280000000023, 0.00024605600000000144, 0.00024606900000000154, 0.00024604099999999893, 0.0002461379999999999, 0.00024602799999999883, 0.00024605600000000144, 0.00024604200000000187, 0.00024598700000000306, 0.00024611100000000025, 0.00024604099999999893, 0.00024609800000000015, 0.000246070000000001, 0.00024604200000000187, 0.00024605500000000197, 0.00024604099999999893, 0.0002460549999999985, 0.00024606899999999807, 0.00024602799999999883, 0.0002460970000000007, 0.00024604200000000187, 0.00024604199999999493, 0.0002459999999999962, 0.00024604099999999546, 0.00024604200000000187, 0.00024611100000000025, 0.000245958999999997, 0.00024606900000000154, 0.0002460270000000028, 0.00024605500000000197, 0.00024604200000000187, 0.00024600000000000316, 0.00024605600000000144, 0.000246070000000001, 0.00024605499999999503, 0.0002460280000000023, 0.0002460559999999945, 0.0002460280000000023, 0.00024604200000000187, 0.00024605600000000144, 0.0002460280000000023, 0.0002460410000000024, 0.00024605500000000197]</msg>
<status status="PASS" starttime="20201030 15:55:09.253" endtime="20201030 15:55:09.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.248" endtime="20201030 15:55:09.256"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:09.260" endtime="20201030 15:55:09.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.258" endtime="20201030 15:55:09.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.257" endtime="20201030 15:55:09.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.884" endtime="20201030 15:55:09.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.883" endtime="20201030 15:55:09.281"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.289" endtime="20201030 15:55:09.323"></status>
</kw>
<msg timestamp="20201030 15:55:09.323" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.288" endtime="20201030 15:55:09.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.326" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.324" endtime="20201030 15:55:09.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.327" endtime="20201030 15:55:09.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.285" endtime="20201030 15:55:09.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.283" endtime="20201030 15:55:09.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.336" endtime="20201030 15:55:09.623"></status>
</kw>
<msg timestamp="20201030 15:55:09.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017918528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018175667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.334" endtime="20201030 15:55:09.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017918528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018175667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.626" endtime="20201030 15:55:09.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.634" endtime="20201030 15:55:09.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.332" endtime="20201030 15:55:09.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.330" endtime="20201030 15:55:09.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:09.641" level="INFO">${PHILIP_RES} = [{'diff': 0.000257139}, {'diff': 0.0002568610000000006}, {'diff': 0.0002568610000000006}, {'diff': 0.00025693000000000243}, {'diff': 0.00025688899999999973}, {'diff': 0.0002568189999999984}, {'diff': ...</msg>
<status status="PASS" starttime="20201030 15:55:09.638" endtime="20201030 15:55:09.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:09.646" level="INFO">${RESULT} = {'diff': [0.000257139, 0.0002568610000000006, 0.0002568610000000006, 0.00025693000000000243, 0.00025688899999999973, 0.0002568189999999984, 0.00025687500000000016, 0.00025688899999999973, 0.0002568750...</msg>
<status status="PASS" starttime="20201030 15:55:09.642" endtime="20201030 15:55:09.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.650" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:09.649" endtime="20201030 15:55:09.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.653" level="INFO">VALUE: [0.000257139, 0.0002568610000000006, 0.0002568610000000006, 0.00025693000000000243, 0.00025688899999999973, 0.0002568189999999984, 0.00025687500000000016, 0.00025688899999999973, 0.00025687500000000016, 0.00025687500000000016, 0.00025687500000000016, 0.00025687500000000016, 0.00025687500000000016, 0.00025694399999999853, 0.0002568610000000006, 0.000256847999999997, 0.0002569029999999993, 0.00025687500000000016, 0.0002569019999999998, 0.00025688899999999973, 0.00025680499999999884, 0.0002568610000000006, 0.0002568610000000006, 0.00025688899999999973, 0.00025687500000000016, 0.0002568609999999971, 0.00025687500000000016, 0.0002568200000000048, 0.00025687500000000363, 0.0002568749999999967, 0.0002568749999999967, 0.0002568749999999967, 0.00025687500000000363, 0.00025686200000000353, 0.0002568749999999967, 0.00025688899999999626, 0.00025687500000000363, 0.00025691700000000234, 0.00025687500000000363, 0.00025688899999999626, 0.00025688899999999626, 0.00025686100000000406, 0.00025687500000000363, 0.00025687500000000363, 0.0002568609999999971, 0.0002568749999999967, 0.00025686100000000406, 0.00025690300000000277, 0.00025688899999999626, 0.0002568609999999971]</msg>
<status status="PASS" starttime="20201030 15:55:09.651" endtime="20201030 15:55:09.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.647" endtime="20201030 15:55:09.654"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:09.658" endtime="20201030 15:55:09.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.656" endtime="20201030 15:55:09.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.655" endtime="20201030 15:55:09.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.282" endtime="20201030 15:55:09.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.281" endtime="20201030 15:55:09.678"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.687" endtime="20201030 15:55:09.721"></status>
</kw>
<msg timestamp="20201030 15:55:09.721" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.685" endtime="20201030 15:55:09.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.723" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.722" endtime="20201030 15:55:09.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.725" endtime="20201030 15:55:09.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.683" endtime="20201030 15:55:09.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.681" endtime="20201030 15:55:09.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.734" endtime="20201030 15:55:10.020"></status>
</kw>
<msg timestamp="20201030 15:55:10.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017891139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018159333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.732" endtime="20201030 15:55:10.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017891139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018159333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:10.024" endtime="20201030 15:55:10.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.032" endtime="20201030 15:55:10.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.730" endtime="20201030 15:55:10.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.728" endtime="20201030 15:55:10.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:10.038" level="INFO">${PHILIP_RES} = [{'diff': 0.0002681939999999994}, {'diff': 0.000267916}, {'diff': 0.000267930000000003}, {'diff': 0.00026792999999999956}, {'diff': 0.00026792999999999956}, {'diff': 0.000267916}, {'diff': 0.000267889...</msg>
<status status="PASS" starttime="20201030 15:55:10.035" endtime="20201030 15:55:10.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:10.043" level="INFO">${RESULT} = {'diff': [0.0002681939999999994, 0.000267916, 0.000267930000000003, 0.00026792999999999956, 0.00026792999999999956, 0.000267916, 0.0002678890000000003, 0.00026792999999999956, 0.00026793099999999903, ...</msg>
<status status="PASS" starttime="20201030 15:55:10.039" endtime="20201030 15:55:10.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.047" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:10.046" endtime="20201030 15:55:10.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.049" level="INFO">VALUE: [0.0002681939999999994, 0.000267916, 0.000267930000000003, 0.00026792999999999956, 0.00026792999999999956, 0.000267916, 0.0002678890000000003, 0.00026792999999999956, 0.00026793099999999903, 0.0002679440000000026, 0.0002678479999999976, 0.00026793099999999903, 0.00026791700000000293, 0.0002679449999999986, 0.00026793099999999903, 0.00026793099999999903, 0.00026791699999999946, 0.00026793099999999903, 0.0002678890000000003, 0.00026791700000000293, 0.00026791699999999946, 0.00026791699999999946, 0.0002678610000000012, 0.00026795800000000217, 0.00026784699999999814, 0.00026791699999999946, 0.0002678890000000003, 0.00026791699999999946, 0.0002678890000000003, 0.00026793099999999903, 0.0002679029999999999, 0.00026791699999999946, 0.0002678749999999938, 0.0002679449999999986, 0.00026792999999999956, 0.0002678749999999938, 0.0002678890000000003, 0.0002679029999999999, 0.0002679300000000065, 0.00026794399999999913, 0.0002679029999999999, 0.00026787500000000075, 0.00026797199999999827, 0.000267916, 0.0002679999999999974, 0.00026798599999999784, 0.000267916, 0.000267916, 0.0002679020000000004, 0.00026794399999999913]</msg>
<status status="PASS" starttime="20201030 15:55:10.048" endtime="20201030 15:55:10.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.043" endtime="20201030 15:55:10.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:10.054" endtime="20201030 15:55:10.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.053" endtime="20201030 15:55:10.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.052" endtime="20201030 15:55:10.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.679" endtime="20201030 15:55:10.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.679" endtime="20201030 15:55:10.075"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.084" endtime="20201030 15:55:10.120"></status>
</kw>
<msg timestamp="20201030 15:55:10.120" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.082" endtime="20201030 15:55:10.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.123" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.121" endtime="20201030 15:55:10.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.124" endtime="20201030 15:55:10.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.079" endtime="20201030 15:55:10.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.077" endtime="20201030 15:55:10.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.133" endtime="20201030 15:55:10.433"></status>
</kw>
<msg timestamp="20201030 15:55:10.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018749569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019029014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:10.131" endtime="20201030 15:55:10.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018749569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019029014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:10.437" endtime="20201030 15:55:10.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.445" endtime="20201030 15:55:10.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.129" endtime="20201030 15:55:10.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.127" endtime="20201030 15:55:10.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:10.451" level="INFO">${PHILIP_RES} = [{'diff': 0.0002794449999999997}, {'diff': 0.0002792090000000025}, {'diff': 0.00027922300000000205}, {'diff': 0.00027919499999999944}, {'diff': 0.0002792219999999991}, {'diff': 0.00027924999999999825}...</msg>
<status status="PASS" starttime="20201030 15:55:10.448" endtime="20201030 15:55:10.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:10.455" level="INFO">${RESULT} = {'diff': [0.0002794449999999997, 0.0002792090000000025, 0.00027922300000000205, 0.00027919499999999944, 0.0002792219999999991, 0.00027924999999999825, 0.0002792219999999991, 0.00027913900000000116, 0....</msg>
<status status="PASS" starttime="20201030 15:55:10.452" endtime="20201030 15:55:10.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.460" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:10.459" endtime="20201030 15:55:10.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.462" level="INFO">VALUE: [0.0002794449999999997, 0.0002792090000000025, 0.00027922300000000205, 0.00027919499999999944, 0.0002792219999999991, 0.00027924999999999825, 0.0002792219999999991, 0.00027913900000000116, 0.00027920799999999954, 0.00027919399999999997, 0.00027919399999999997, 0.00027919499999999944, 0.0002792090000000025, 0.0002791670000000003, 0.00027919499999999944, 0.00027919499999999944, 0.00027920799999999954, 0.00027920799999999954, 0.00027920799999999954, 0.00027919399999999997, 0.0002792219999999991, 0.0002791809999999999, 0.0002791389999999977, 0.00027919499999999944, 0.00027915299999999726, 0.0002791950000000029, 0.0002791939999999965, 0.0002792500000000017, 0.000279208000000003, 0.00027926399999999435, 0.0002791939999999965, 0.00027919400000000344, 0.0002791939999999965, 0.0002791950000000029, 0.0002792090000000025, 0.00027920899999999554, 0.0002791950000000029, 0.0002791939999999965, 0.00027917999999999693, 0.00027919400000000344, 0.00027920799999999607, 0.000279208000000003, 0.00027923600000000215, 0.0002791809999999964, 0.0002791950000000029, 0.0002792090000000025, 0.000279194999999996, 0.0002791950000000029, 0.0002792359999999952, 0.00027917999999999693]</msg>
<status status="PASS" starttime="20201030 15:55:10.461" endtime="20201030 15:55:10.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.456" endtime="20201030 15:55:10.467"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:10.470" endtime="20201030 15:55:10.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.469" endtime="20201030 15:55:10.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.468" endtime="20201030 15:55:10.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.076" endtime="20201030 15:55:10.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.075" endtime="20201030 15:55:10.491"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.500" endtime="20201030 15:55:10.536"></status>
</kw>
<msg timestamp="20201030 15:55:10.537" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.498" endtime="20201030 15:55:10.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.539" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.538" endtime="20201030 15:55:10.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.540" endtime="20201030 15:55:10.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.495" endtime="20201030 15:55:10.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.493" endtime="20201030 15:55:10.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.549" endtime="20201030 15:55:10.835"></status>
</kw>
<msg timestamp="20201030 15:55:10.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018071472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018362486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:10.548" endtime="20201030 15:55:10.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018071472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018362486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:10.839" endtime="20201030 15:55:10.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.847" endtime="20201030 15:55:10.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.545" endtime="20201030 15:55:10.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.544" endtime="20201030 15:55:10.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:10.854" level="INFO">${PHILIP_RES} = [{'diff': 0.00029101399999999916}, {'diff': 0.00029073599999999977}, {'diff': 0.0002907220000000002}, {'diff': 0.0002907090000000001}, {'diff': 0.00029070799999999716}, {'diff': 0.0002907639999999989}...</msg>
<status status="PASS" starttime="20201030 15:55:10.850" endtime="20201030 15:55:10.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:10.858" level="INFO">${RESULT} = {'diff': [0.00029101399999999916, 0.00029073599999999977, 0.0002907220000000002, 0.0002907090000000001, 0.00029070799999999716, 0.0002907639999999989, 0.00029069499999999707, 0.00029070800000000063, 0...</msg>
<status status="PASS" starttime="20201030 15:55:10.855" endtime="20201030 15:55:10.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.863" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:10.862" endtime="20201030 15:55:10.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.865" level="INFO">VALUE: [0.00029101399999999916, 0.00029073599999999977, 0.0002907220000000002, 0.0002907090000000001, 0.00029070799999999716, 0.0002907639999999989, 0.00029069499999999707, 0.00029070800000000063, 0.00029073599999999977, 0.00029069400000000106, 0.0002907220000000002, 0.0002907220000000002, 0.00029069499999999707, 0.00029070800000000063, 0.0002906519999999989, 0.0002906660000000019, 0.00029070799999999716, 0.00029069500000000054, 0.0002906809999999975, 0.0002906249999999992, 0.00029070800000000063, 0.00029069400000000106, 0.00029070800000000063, 0.00029069500000000054, 0.00029069500000000054, 0.0002907220000000002, 0.0002907220000000002, 0.0002907220000000002, 0.00029070800000000063, 0.0002907079999999937, 0.0002907220000000002, 0.0002907220000000002, 0.0002907220000000002, 0.0002907220000000002, 0.00029070800000000063, 0.00029069400000000106, 0.0002907220000000002, 0.00029073599999999977, 0.00029069400000000106, 0.00029070800000000063, 0.0002906800000000015, 0.0002906519999999954, 0.00029069400000000106, 0.00029069400000000106, 0.00029068100000000097, 0.0002906939999999941, 0.00029069400000000106, 0.00029069400000000106, 0.0002906800000000015, 0.00029063799999999584]</msg>
<status status="PASS" starttime="20201030 15:55:10.864" endtime="20201030 15:55:10.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.859" endtime="20201030 15:55:10.866"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:10.870" endtime="20201030 15:55:10.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.869" endtime="20201030 15:55:10.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.867" endtime="20201030 15:55:10.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.492" endtime="20201030 15:55:10.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.491" endtime="20201030 15:55:10.891"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.899" endtime="20201030 15:55:10.937"></status>
</kw>
<msg timestamp="20201030 15:55:10.937" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.898" endtime="20201030 15:55:10.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.940" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.938" endtime="20201030 15:55:10.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.941" endtime="20201030 15:55:10.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.895" endtime="20201030 15:55:10.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.893" endtime="20201030 15:55:10.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.950" endtime="20201030 15:55:11.253"></status>
</kw>
<msg timestamp="20201030 15:55:11.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017966486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018269181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:10.948" endtime="20201030 15:55:11.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017966486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018269181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.257" endtime="20201030 15:55:11.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.265" endtime="20201030 15:55:11.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.946" endtime="20201030 15:55:11.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.944" endtime="20201030 15:55:11.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:11.272" level="INFO">${PHILIP_RES} = [{'diff': 0.00030269499999999866}, {'diff': 0.00030241699999999927}, {'diff': 0.00030244399999999894}, {'diff': 0.00030244399999999894}, {'diff': 0.00030247200000000155}, {'diff': 0.000302473000000001...</msg>
<status status="PASS" starttime="20201030 15:55:11.269" endtime="20201030 15:55:11.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:11.276" level="INFO">${RESULT} = {'diff': [0.00030269499999999866, 0.00030241699999999927, 0.00030244399999999894, 0.00030244399999999894, 0.00030247200000000155, 0.000302473000000001, 0.0003024159999999998, 0.00030242999999999937, 0...</msg>
<status status="PASS" starttime="20201030 15:55:11.273" endtime="20201030 15:55:11.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.281" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:11.280" endtime="20201030 15:55:11.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.283" level="INFO">VALUE: [0.00030269499999999866, 0.00030241699999999927, 0.00030244399999999894, 0.00030244399999999894, 0.00030247200000000155, 0.000302473000000001, 0.0003024159999999998, 0.00030242999999999937, 0.00030243099999999884, 0.00030234699999999795, 0.0003024579999999985, 0.0003024579999999985, 0.00030245900000000145, 0.00030244399999999894, 0.0003024159999999998, 0.0003024450000000019, 0.00030241699999999927, 0.00030242999999999937, 0.00030243099999999884, 0.00030243099999999884, 0.0003023329999999984, 0.00030244399999999894, 0.0003024029999999997, 0.0003024029999999997, 0.0003024860000000046, 0.00030241699999999927, 0.00030237500000000056, 0.00030241699999999927, 0.00030244399999999894, 0.00030238900000000013, 0.0003024310000000058, 0.0003024159999999998, 0.0003024310000000058, 0.00030241699999999927, 0.0003024579999999985, 0.0003024579999999985, 0.00030241699999999927, 0.0003024310000000058, 0.00030242999999999937, 0.0003024310000000058, 0.00030244500000000535, 0.0003024590000000049, 0.0003024020000000002, 0.0003024999999999972, 0.0003024170000000062, 0.0003024300000000063, 0.00030236200000000046, 0.0003024310000000058, 0.0003024300000000063, 0.0003024020000000002]</msg>
<status status="PASS" starttime="20201030 15:55:11.282" endtime="20201030 15:55:11.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.277" endtime="20201030 15:55:11.285"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:11.288" endtime="20201030 15:55:11.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.287" endtime="20201030 15:55:11.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.285" endtime="20201030 15:55:11.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.892" endtime="20201030 15:55:11.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.891" endtime="20201030 15:55:11.309"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.317" endtime="20201030 15:55:11.356"></status>
</kw>
<msg timestamp="20201030 15:55:11.356" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.316" endtime="20201030 15:55:11.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.359" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.357" endtime="20201030 15:55:11.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.360" endtime="20201030 15:55:11.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.313" endtime="20201030 15:55:11.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.311" endtime="20201030 15:55:11.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.369" endtime="20201030 15:55:11.658"></status>
</kw>
<msg timestamp="20201030 15:55:11.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018763667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019078319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.367" endtime="20201030 15:55:11.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018763667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019078319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.662" endtime="20201030 15:55:11.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.673" endtime="20201030 15:55:11.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.365" endtime="20201030 15:55:11.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.363" endtime="20201030 15:55:11.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:11.686" level="INFO">${PHILIP_RES} = [{'diff': 0.0003146519999999986}, {'diff': 0.0003143190000000004}, {'diff': 0.0003143890000000017}, {'diff': 0.00031437500000000215}, {'diff': 0.0003143060000000003}, {'diff': 0.0003144029999999978}, ...</msg>
<status status="PASS" starttime="20201030 15:55:11.682" endtime="20201030 15:55:11.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:11.691" level="INFO">${RESULT} = {'diff': [0.0003146519999999986, 0.0003143190000000004, 0.0003143890000000017, 0.00031437500000000215, 0.0003143060000000003, 0.0003144029999999978, 0.000314347000000003, 0.0003144030000000013, 0.0003...</msg>
<status status="PASS" starttime="20201030 15:55:11.687" endtime="20201030 15:55:11.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.697" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:11.696" endtime="20201030 15:55:11.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.699" level="INFO">VALUE: [0.0003146519999999986, 0.0003143190000000004, 0.0003143890000000017, 0.00031437500000000215, 0.0003143060000000003, 0.0003144029999999978, 0.000314347000000003, 0.0003144030000000013, 0.0003144030000000013, 0.00031434699999999954, 0.0003143749999999987, 0.0003143890000000017, 0.00031437500000000215, 0.000314347999999999, 0.0003143609999999991, 0.0003143749999999987, 0.00031437500000000215, 0.0003143749999999987, 0.00031438899999999825, 0.00031438899999999825, 0.0003144030000000013, 0.00031440300000000476, 0.0003143609999999991, 0.0003143750000000056, 0.000314333, 0.0003143749999999987, 0.0003143880000000057, 0.0003143749999999987, 0.0003144029999999978, 0.0003143749999999987, 0.0003143749999999987, 0.000314333, 0.00031438899999999825, 0.00031438899999999825, 0.00031441600000000486, 0.0003143609999999991, 0.00031430500000000083, 0.0003143749999999987, 0.0003143749999999987, 0.0003144310000000039, 0.00031443099999999696, 0.0003143609999999991, 0.00031438899999999825, 0.000314347999999999, 0.0003143890000000052, 0.00031438899999999825, 0.0003143609999999991, 0.0003143750000000056, 0.00031438899999999825, 0.00031443099999999696]</msg>
<status status="PASS" starttime="20201030 15:55:11.698" endtime="20201030 15:55:11.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.693" endtime="20201030 15:55:11.702"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:11.705" endtime="20201030 15:55:11.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.704" endtime="20201030 15:55:11.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.703" endtime="20201030 15:55:11.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.310" endtime="20201030 15:55:11.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.309" endtime="20201030 15:55:11.726"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.734" endtime="20201030 15:55:11.772"></status>
</kw>
<msg timestamp="20201030 15:55:11.773" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.733" endtime="20201030 15:55:11.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.775" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.774" endtime="20201030 15:55:11.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.776" endtime="20201030 15:55:11.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.730" endtime="20201030 15:55:11.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.728" endtime="20201030 15:55:11.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.785" endtime="20201030 15:55:12.101"></status>
</kw>
<msg timestamp="20201030 15:55:12.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017804722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018131542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.784" endtime="20201030 15:55:12.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017804722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018131542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.105" endtime="20201030 15:55:12.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.113" endtime="20201030 15:55:12.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.781" endtime="20201030 15:55:12.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.780" endtime="20201030 15:55:12.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:12.119" level="INFO">${PHILIP_RES} = [{'diff': 0.00032682000000000197}, {'diff': 0.0003265549999999992}, {'diff': 0.00032652799999999954}, {'diff': 0.0003265419999999991}, {'diff': 0.00032656900000000225}, {'diff': 0.0003265700000000017}...</msg>
<status status="PASS" starttime="20201030 15:55:12.116" endtime="20201030 15:55:12.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:12.124" level="INFO">${RESULT} = {'diff': [0.00032682000000000197, 0.0003265549999999992, 0.00032652799999999954, 0.0003265419999999991, 0.00032656900000000225, 0.0003265700000000017, 0.00032654099999999964, 0.0003265839999999978, 0....</msg>
<status status="PASS" starttime="20201030 15:55:12.120" endtime="20201030 15:55:12.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.129" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:12.127" endtime="20201030 15:55:12.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.131" level="INFO">VALUE: [0.00032682000000000197, 0.0003265549999999992, 0.00032652799999999954, 0.0003265419999999991, 0.00032656900000000225, 0.0003265700000000017, 0.00032654099999999964, 0.0003265839999999978, 0.00032654099999999964, 0.0003265700000000017, 0.0003265830000000018, 0.0003265000000000004, 0.0003265689999999988, 0.0003265559999999987, 0.0003265550000000027, 0.0003265000000000004, 0.0003265419999999991, 0.0003265549999999992, 0.0003265700000000017, 0.00032654099999999964, 0.0003265559999999987, 0.00032658299999999835, 0.0003265559999999987, 0.00032658299999999835, 0.0003265559999999987, 0.0003265549999999992, 0.0003265690000000057, 0.0003265560000000056, 0.0003266109999999975, 0.00032647200000000126, 0.0003265549999999992, 0.0003265839999999978, 0.0003265549999999992, 0.0003265559999999987, 0.00032656999999999825, 0.0003265559999999987, 0.00032655500000000615, 0.0003265000000000004, 0.0003265559999999987, 0.0003265549999999992, 0.00032656999999999825, 0.0003266109999999975, 0.00032652799999999954, 0.0003265549999999992, 0.0003265419999999991, 0.0003265830000000053, 0.00032663900000000357, 0.0003265549999999992, 0.00032652799999999954, 0.0003265979999999974]</msg>
<status status="PASS" starttime="20201030 15:55:12.130" endtime="20201030 15:55:12.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.125" endtime="20201030 15:55:12.132"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:12.136" endtime="20201030 15:55:12.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.134" endtime="20201030 15:55:12.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.133" endtime="20201030 15:55:12.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.727" endtime="20201030 15:55:12.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.726" endtime="20201030 15:55:12.156"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.165" endtime="20201030 15:55:12.204"></status>
</kw>
<msg timestamp="20201030 15:55:12.205" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.163" endtime="20201030 15:55:12.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.207" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.206" endtime="20201030 15:55:12.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.208" endtime="20201030 15:55:12.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.161" endtime="20201030 15:55:12.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.159" endtime="20201030 15:55:12.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.217" endtime="20201030 15:55:12.504"></status>
</kw>
<msg timestamp="20201030 15:55:12.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017697264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0180365, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:12.215" endtime="20201030 15:55:12.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017697264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0180365, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:12.508" endtime="20201030 15:55:12.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.516" endtime="20201030 15:55:12.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.213" endtime="20201030 15:55:12.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.211" endtime="20201030 15:55:12.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:12.523" level="INFO">${PHILIP_RES} = [{'diff': 0.0003392359999999997}, {'diff': 0.00033902799999999816}, {'diff': 0.0003389450000000002}, {'diff': 0.00033895799999999685}, {'diff': 0.00033890199999999857}, {'diff': 0.00033897299999999936...</msg>
<status status="PASS" starttime="20201030 15:55:12.520" endtime="20201030 15:55:12.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:12.527" level="INFO">${RESULT} = {'diff': [0.0003392359999999997, 0.00033902799999999816, 0.0003389450000000002, 0.00033895799999999685, 0.00033890199999999857, 0.00033897299999999936, 0.0003389169999999976, 0.00033898599999999945, 0...</msg>
<status status="PASS" starttime="20201030 15:55:12.524" endtime="20201030 15:55:12.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.531" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:12.530" endtime="20201030 15:55:12.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.534" level="INFO">VALUE: [0.0003392359999999997, 0.00033902799999999816, 0.0003389450000000002, 0.00033895799999999685, 0.00033890199999999857, 0.00033897299999999936, 0.0003389169999999976, 0.00033898599999999945, 0.00033893100000000065, 0.0003389300000000012, 0.0003389580000000003, 0.0003389719999999999, 0.0003389580000000003, 0.0003389580000000003, 0.0003389719999999999, 0.0003389299999999977, 0.0003389169999999976, 0.0003389450000000002, 0.0003389299999999977, 0.0003390139999999986, 0.0003389719999999999, 0.0003389580000000003, 0.0003389860000000064, 0.00033894400000000074, 0.0003389580000000003, 0.0003389589999999998, 0.0003389719999999999, 0.0003389580000000003, 0.0003389450000000002, 0.0003389580000000003, 0.0003389580000000003, 0.0003389730000000063, 0.0003389580000000003, 0.0003389719999999999, 0.0003389170000000011, 0.00033902700000000563, 0.00033894400000000074, 0.0003389450000000002, 0.0003389300000000012, 0.00033894400000000074, 0.0003389589999999998, 0.0003389580000000003, 0.000338999999999999, 0.0003389589999999998, 0.0003389719999999999, 0.00033888800000000247, 0.0003390139999999986, 0.00033894400000000074, 0.0003389580000000003, 0.0003389589999999998]</msg>
<status status="PASS" starttime="20201030 15:55:12.532" endtime="20201030 15:55:12.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.528" endtime="20201030 15:55:12.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:12.539" endtime="20201030 15:55:12.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.537" endtime="20201030 15:55:12.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.536" endtime="20201030 15:55:12.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.157" endtime="20201030 15:55:12.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.157" endtime="20201030 15:55:12.560"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.569" endtime="20201030 15:55:12.612"></status>
</kw>
<msg timestamp="20201030 15:55:12.614" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.567" endtime="20201030 15:55:12.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.619" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.616" endtime="20201030 15:55:12.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.621" endtime="20201030 15:55:12.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.565" endtime="20201030 15:55:12.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.563" endtime="20201030 15:55:12.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.642" endtime="20201030 15:55:12.938"></status>
</kw>
<msg timestamp="20201030 15:55:12.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019500958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.638" endtime="20201030 15:55:12.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019500958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.943" endtime="20201030 15:55:12.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.951" endtime="20201030 15:55:12.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.632" endtime="20201030 15:55:12.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.629" endtime="20201030 15:55:12.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:12.957" level="INFO">${PHILIP_RES} = [{'diff': 0.00035180599999999965}, {'diff': 0.0003515689999999995}, {'diff': 0.0003515979999999981}, {'diff': 0.00035156900000000296}, {'diff': 0.00035158399999999854}, {'diff': 0.00035158299999999906...</msg>
<status status="PASS" starttime="20201030 15:55:12.954" endtime="20201030 15:55:12.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:12.962" level="INFO">${RESULT} = {'diff': [0.00035180599999999965, 0.0003515689999999995, 0.0003515979999999981, 0.00035156900000000296, 0.00035158399999999854, 0.00035158299999999906, 0.00035158299999999906, 0.0003515979999999981, 0...</msg>
<status status="PASS" starttime="20201030 15:55:12.958" endtime="20201030 15:55:12.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.966" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:12.965" endtime="20201030 15:55:12.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.969" level="INFO">VALUE: [0.00035180599999999965, 0.0003515689999999995, 0.0003515979999999981, 0.00035156900000000296, 0.00035158399999999854, 0.00035158299999999906, 0.00035158299999999906, 0.0003515979999999981, 0.00035159699999999863, 0.0003515140000000007, 0.00035158299999999906, 0.00035158399999999854, 0.00035158300000000253, 0.00035154100000000035, 0.00035158399999999854, 0.00035158300000000253, 0.00035158399999999854, 0.0003515970000000021, 0.0003515970000000021, 0.00035158300000000253, 0.0003515829999999956, 0.000351584000000002, 0.00035158300000000253, 0.00035158399999999507, 0.00035156900000000296, 0.0003515280000000037, 0.00035159699999999516, 0.00035158300000000253, 0.000351584000000002, 0.000351568999999996, 0.00035157000000000244, 0.00035156900000000296, 0.00035155599999999593, 0.00035156900000000296, 0.00035156900000000296, 0.00035154199999999636, 0.00035161100000000167, 0.00035161100000000167, 0.0003515829999999956, 0.00035166699999999995, 0.00035156900000000296, 0.000351568999999996, 0.00035157000000000244, 0.00035158300000000253, 0.00035158399999999507, 0.00035158300000000253, 0.00035161100000000167, 0.00035159699999999516, 0.00035156900000000296, 0.0003515980000000016]</msg>
<status status="PASS" starttime="20201030 15:55:12.967" endtime="20201030 15:55:12.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.962" endtime="20201030 15:55:12.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:12.975" endtime="20201030 15:55:12.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.973" endtime="20201030 15:55:12.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.972" endtime="20201030 15:55:12.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.561" endtime="20201030 15:55:12.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.560" endtime="20201030 15:55:12.995"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.005" endtime="20201030 15:55:13.046"></status>
</kw>
<msg timestamp="20201030 15:55:13.046" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.003" endtime="20201030 15:55:13.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.049" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.048" endtime="20201030 15:55:13.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.050" endtime="20201030 15:55:13.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.000" endtime="20201030 15:55:13.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.998" endtime="20201030 15:55:13.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.060" endtime="20201030 15:55:13.347"></status>
</kw>
<msg timestamp="20201030 15:55:13.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018693111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019057806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.058" endtime="20201030 15:55:13.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018693111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019057806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.351" endtime="20201030 15:55:13.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.359" endtime="20201030 15:55:13.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.055" endtime="20201030 15:55:13.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.054" endtime="20201030 15:55:13.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:13.366" level="INFO">${PHILIP_RES} = [{'diff': 0.0003646950000000017}, {'diff': 0.0003644170000000023}, {'diff': 0.0003644309999999984}, {'diff': 0.00036444500000000143}, {'diff': 0.0003644439999999985}, {'diff': 0.0003644300000000024}, ...</msg>
<status status="PASS" starttime="20201030 15:55:13.362" endtime="20201030 15:55:13.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:13.371" level="INFO">${RESULT} = {'diff': [0.0003646950000000017, 0.0003644170000000023, 0.0003644309999999984, 0.00036444500000000143, 0.0003644439999999985, 0.0003644300000000024, 0.0003644169999999988, 0.0003644300000000024, 0.000...</msg>
<status status="PASS" starttime="20201030 15:55:13.367" endtime="20201030 15:55:13.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.375" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:13.374" endtime="20201030 15:55:13.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.378" level="INFO">VALUE: [0.0003646950000000017, 0.0003644170000000023, 0.0003644309999999984, 0.00036444500000000143, 0.0003644439999999985, 0.0003644300000000024, 0.0003644169999999988, 0.0003644300000000024, 0.0003644299999999989, 0.00036443100000000186, 0.0003644309999999984, 0.00036444400000000196, 0.0003644169999999988, 0.00036443100000000186, 0.00036441599999999935, 0.0003644300000000024, 0.000364459000000001, 0.00036443100000000186, 0.0003644299999999989, 0.0003643750000000001, 0.00036443100000000533, 0.00036444400000000543, 0.0003644299999999989, 0.00036451399999999634, 0.0003644309999999984, 0.0003644299999999989, 0.0003644439999999985, 0.0003643750000000001, 0.0003644299999999989, 0.00036443000000000586, 0.0003644309999999984, 0.0003644169999999988, 0.00036441599999999935, 0.00036444400000000543, 0.00036444499999999797, 0.0003644299999999989, 0.0003644439999999985, 0.00036443100000000533, 0.00036447200000000457, 0.00036447199999999763, 0.0003644309999999984, 0.0003644309999999984, 0.00036441599999999935, 0.0003644299999999989, 0.00036444499999999797, 0.00036444499999999797, 0.0003645000000000037, 0.0003644309999999984, 0.0003644169999999988, 0.0003644299999999989]</msg>
<status status="PASS" starttime="20201030 15:55:13.376" endtime="20201030 15:55:13.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.372" endtime="20201030 15:55:13.383"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:13.387" endtime="20201030 15:55:13.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.385" endtime="20201030 15:55:13.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.384" endtime="20201030 15:55:13.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.996" endtime="20201030 15:55:13.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.996" endtime="20201030 15:55:13.408"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.416" endtime="20201030 15:55:13.459"></status>
</kw>
<msg timestamp="20201030 15:55:13.459" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.415" endtime="20201030 15:55:13.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.462" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.460" endtime="20201030 15:55:13.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.463" endtime="20201030 15:55:13.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.412" endtime="20201030 15:55:13.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.410" endtime="20201030 15:55:13.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.472" endtime="20201030 15:55:13.760"></status>
</kw>
<msg timestamp="20201030 15:55:13.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018314597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018692375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.471" endtime="20201030 15:55:13.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018314597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018692375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.764" endtime="20201030 15:55:13.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.772" endtime="20201030 15:55:13.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.468" endtime="20201030 15:55:13.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.466" endtime="20201030 15:55:13.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:13.779" level="INFO">${PHILIP_RES} = [{'diff': 0.0003777780000000022}, {'diff': 0.0003774859999999998}, {'diff': 0.00037750000000000283}, {'diff': 0.00037751399999999893}, {'diff': 0.00037749999999999936}, {'diff': 0.0003775279999999985}...</msg>
<status status="PASS" starttime="20201030 15:55:13.775" endtime="20201030 15:55:13.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:13.783" level="INFO">${RESULT} = {'diff': [0.0003777780000000022, 0.0003774859999999998, 0.00037750000000000283, 0.00037751399999999893, 0.00037749999999999936, 0.0003775279999999985, 0.0003775279999999985, 0.00037752699999999903, 0....</msg>
<status status="PASS" starttime="20201030 15:55:13.780" endtime="20201030 15:55:13.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.787" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:13.786" endtime="20201030 15:55:13.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.790" level="INFO">VALUE: [0.0003777780000000022, 0.0003774859999999998, 0.00037750000000000283, 0.00037751399999999893, 0.00037749999999999936, 0.0003775279999999985, 0.0003775279999999985, 0.00037752699999999903, 0.0003774859999999998, 0.00037749999999999936, 0.00037749999999999936, 0.00037750000000000283, 0.00037752699999999903, 0.0003775270000000025, 0.00037744500000000056, 0.00037754200000000154, 0.0003775140000000024, 0.00037751299999999946, 0.0003774859999999998, 0.000377528000000002, 0.000377528000000002, 0.00037751399999999546, 0.0003774999999999959, 0.00037750000000000283, 0.0003775140000000024, 0.00037752799999999503, 0.0003775140000000024, 0.0003775140000000024, 0.0003775270000000025, 0.0003774999999999959, 0.00037750000000000283, 0.0003775140000000024, 0.0003774859999999963, 0.00037750000000000283, 0.00037754200000000154, 0.00037751399999999546, 0.00037751399999999546, 0.0003775140000000024, 0.0003775140000000024, 0.00037751399999999546, 0.000377528000000002, 0.0003775560000000011, 0.00037750000000000283, 0.00037752699999999556, 0.0003775140000000024, 0.0003774580000000041, 0.0003774439999999976, 0.00037750000000000283, 0.00037750000000000283, 0.0003775140000000024]</msg>
<status status="PASS" starttime="20201030 15:55:13.789" endtime="20201030 15:55:13.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.784" endtime="20201030 15:55:13.791"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:13.795" endtime="20201030 15:55:13.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.794" endtime="20201030 15:55:13.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.792" endtime="20201030 15:55:13.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.409" endtime="20201030 15:55:13.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.408" endtime="20201030 15:55:13.816"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.825" endtime="20201030 15:55:13.869"></status>
</kw>
<msg timestamp="20201030 15:55:13.870" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.823" endtime="20201030 15:55:13.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.872" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.871" endtime="20201030 15:55:13.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.873" endtime="20201030 15:55:13.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.821" endtime="20201030 15:55:13.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.819" endtime="20201030 15:55:13.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.883" endtime="20201030 15:55:14.168"></status>
</kw>
<msg timestamp="20201030 15:55:14.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019218264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019609319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.881" endtime="20201030 15:55:14.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019218264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019609319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.172" endtime="20201030 15:55:14.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.180" endtime="20201030 15:55:14.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.878" endtime="20201030 15:55:14.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.877" endtime="20201030 15:55:14.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:14.187" level="INFO">${PHILIP_RES} = [{'diff': 0.00039105500000000126}, {'diff': 0.00039079100000000144}, {'diff': 0.00039074999999999874}, {'diff': 0.000390805999999997}, {'diff': 0.00039079199999999745}, {'diff': 0.00039082000000000006...</msg>
<status status="PASS" starttime="20201030 15:55:14.184" endtime="20201030 15:55:14.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:14.191" level="INFO">${RESULT} = {'diff': [0.00039105500000000126, 0.00039079100000000144, 0.00039074999999999874, 0.000390805999999997, 0.00039079199999999745, 0.00039082000000000006, 0.00039082000000000006, 0.0003908609999999993, 0...</msg>
<status status="PASS" starttime="20201030 15:55:14.188" endtime="20201030 15:55:14.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.195" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:14.194" endtime="20201030 15:55:14.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.198" level="INFO">VALUE: [0.00039105500000000126, 0.00039079100000000144, 0.00039074999999999874, 0.000390805999999997, 0.00039079199999999745, 0.00039082000000000006, 0.00039082000000000006, 0.0003908609999999993, 0.00039083300000000015, 0.0003908190000000006, 0.00039079100000000144, 0.0003908190000000006, 0.0003907920000000009, 0.00039082000000000006, 0.0003908479999999992, 0.0003908060000000005, 0.000390805999999997, 0.00039080499999999754, 0.0003908190000000006, 0.000390805000000001, 0.00039077800000000135, 0.0003908060000000005, 0.0003908060000000005, 0.00039082000000000006, 0.00039083300000000015, 0.0003907370000000021, 0.000390805000000001, 0.0003908190000000006, 0.0003908190000000006, 0.0003907920000000009, 0.0003908479999999992, 0.00039073600000000264, 0.0003908060000000005, 0.0003908060000000005, 0.0003908190000000006, 0.0003908190000000006, 0.00039081899999999364, 0.00039083300000000015, 0.0003908469999999997, 0.00039082000000000006, 0.0003908060000000005, 0.0003908060000000005, 0.0003908060000000005, 0.0003908190000000006, 0.00039079100000000144, 0.00039074999999999527, 0.00039077800000000135, 0.00039082000000000006, 0.0003908060000000005, 0.0003908060000000005]</msg>
<status status="PASS" starttime="20201030 15:55:14.197" endtime="20201030 15:55:14.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.192" endtime="20201030 15:55:14.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:14.207" endtime="20201030 15:55:14.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.205" endtime="20201030 15:55:14.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.204" endtime="20201030 15:55:14.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.817" endtime="20201030 15:55:14.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.816" endtime="20201030 15:55:14.227"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.236" endtime="20201030 15:55:14.281"></status>
</kw>
<msg timestamp="20201030 15:55:14.281" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.235" endtime="20201030 15:55:14.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.284" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.282" endtime="20201030 15:55:14.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.285" endtime="20201030 15:55:14.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.232" endtime="20201030 15:55:14.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.230" endtime="20201030 15:55:14.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.294" endtime="20201030 15:55:14.580"></status>
</kw>
<msg timestamp="20201030 15:55:14.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018252819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018657486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.293" endtime="20201030 15:55:14.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018252819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018657486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.584" endtime="20201030 15:55:14.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.592" endtime="20201030 15:55:14.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.290" endtime="20201030 15:55:14.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.288" endtime="20201030 15:55:14.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:14.599" level="INFO">${PHILIP_RES} = [{'diff': 0.0004046670000000009}, {'diff': 0.0004043610000000024}, {'diff': 0.00040434699999999935}, {'diff': 0.00040440199999999815}, {'diff': 0.0004043199999999997}, {'diff': 0.0004043340000000027},...</msg>
<status status="PASS" starttime="20201030 15:55:14.596" endtime="20201030 15:55:14.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:14.604" level="INFO">${RESULT} = {'diff': [0.0004046670000000009, 0.0004043610000000024, 0.00040434699999999935, 0.00040440199999999815, 0.0004043199999999997, 0.0004043340000000027, 0.0004043609999999989, 0.0004043470000000028, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:14.600" endtime="20201030 15:55:14.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.609" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:14.608" endtime="20201030 15:55:14.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.611" level="INFO">VALUE: [0.0004046670000000009, 0.0004043610000000024, 0.00040434699999999935, 0.00040440199999999815, 0.0004043199999999997, 0.0004043340000000027, 0.0004043609999999989, 0.0004043470000000028, 0.0004043329999999998, 0.00040430599999999664, 0.00040434699999999935, 0.0004043329999999998, 0.0004043609999999989, 0.0004043479999999988, 0.0004043470000000028, 0.00040430500000000064, 0.0004043329999999998, 0.0004043479999999988, 0.0004043340000000027, 0.0004043609999999989, 0.000404389000000005, 0.0004043199999999997, 0.00040433399999999925, 0.0004043329999999998, 0.00040430500000000064, 0.0004043329999999998, 0.0004043199999999997, 0.0004042770000000015, 0.00040434699999999935, 0.0004043190000000002, 0.0004042640000000014, 0.00040427800000000097, 0.00040430500000000064, 0.0004043329999999998, 0.00040436200000000533, 0.0004043479999999988, 0.0004043190000000002, 0.0004043329999999998, 0.00040434699999999935, 0.0004043199999999997, 0.0004043199999999997, 0.00040434699999999935, 0.00040434699999999935, 0.0004043340000000062, 0.00040434699999999935, 0.00040434699999999935, 0.0004043190000000002, 0.0004043329999999998, 0.00040433399999999925, 0.00040434699999999935]</msg>
<status status="PASS" starttime="20201030 15:55:14.610" endtime="20201030 15:55:14.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.605" endtime="20201030 15:55:14.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:14.616" endtime="20201030 15:55:14.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.615" endtime="20201030 15:55:14.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.614" endtime="20201030 15:55:14.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.228" endtime="20201030 15:55:14.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.228" endtime="20201030 15:55:14.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.820" endtime="20201030 15:55:14.637"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:52.569" endtime="20201030 15:55:14.638" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:54:31.578" endtime="20201030 15:55:14.647"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.718" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:55:14.726" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:55:15.731" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:55:14.717" endtime="20201030 15:55:15.732"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.735" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201030 15:55:15.733" endtime="20201030 15:55:16.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.715" endtime="20201030 15:55:16.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:16.743" endtime="20201030 15:55:16.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.739" endtime="20201030 15:55:16.963"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.975" endtime="20201030 15:55:16.995"></status>
</kw>
<msg timestamp="20201030 15:55:16.996" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.974" endtime="20201030 15:55:16.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.999" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.997" endtime="20201030 15:55:16.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.002" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:17.000" endtime="20201030 15:55:17.002"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:16.971" endtime="20201030 15:55:17.003"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:16.969" endtime="20201030 15:55:17.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.968" endtime="20201030 15:55:17.004"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:17.008" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:17.007" endtime="20201030 15:55:17.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.005" endtime="20201030 15:55:17.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.967" endtime="20201030 15:55:17.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.966" endtime="20201030 15:55:17.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.011" endtime="20201030 15:55:17.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.965" endtime="20201030 15:55:17.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.014" endtime="20201030 15:55:17.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.964" endtime="20201030 15:55:17.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.714" endtime="20201030 15:55:17.016"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:17.023" endtime="20201030 15:55:17.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.021" endtime="20201030 15:55:17.043"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.061" endtime="20201030 15:55:17.078"></status>
</kw>
<msg timestamp="20201030 15:55:17.080" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.058" endtime="20201030 15:55:17.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.084" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.082" endtime="20201030 15:55:17.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.089" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:17.086" endtime="20201030 15:55:17.090"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:17.054" endtime="20201030 15:55:17.091"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:17.049" endtime="20201030 15:55:17.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.048" endtime="20201030 15:55:17.092"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:17.095" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:17.095" endtime="20201030 15:55:17.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.093" endtime="20201030 15:55:17.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.047" endtime="20201030 15:55:17.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.047" endtime="20201030 15:55:17.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.097" endtime="20201030 15:55:17.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.045" endtime="20201030 15:55:17.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.043" endtime="20201030 15:55:17.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.020" endtime="20201030 15:55:17.100"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.112" endtime="20201030 15:55:17.129"></status>
</kw>
<msg timestamp="20201030 15:55:17.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.110" endtime="20201030 15:55:17.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.131" endtime="20201030 15:55:17.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.133" endtime="20201030 15:55:17.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.106" endtime="20201030 15:55:17.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.104" endtime="20201030 15:55:17.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.144" endtime="20201030 15:55:17.435"></status>
</kw>
<msg timestamp="20201030 15:55:17.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079316583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079334736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.142" endtime="20201030 15:55:17.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.079316583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.079334736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.440" endtime="20201030 15:55:17.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.448" endtime="20201030 15:55:17.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.139" endtime="20201030 15:55:17.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.137" endtime="20201030 15:55:17.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:17.455" level="INFO">${RESULT} = [{'diff': 1.8153000000006858e-05}, {'diff': 1.4375000000010907e-05}, {'diff': 1.4193999999995155e-05}, {'diff': 1.4097000000004578e-05}, {'diff': 1.3625000000003218e-05}, {'diff': 1.3916000000002704e-...</msg>
<status status="PASS" starttime="20201030 15:55:17.452" endtime="20201030 15:55:17.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:17.459" level="INFO">${ACCURACY} = {'diff': [1.8153000000006858e-05, 1.4375000000010907e-05, 1.4193999999995155e-05, 1.4097000000004578e-05, 1.3625000000003218e-05, 1.3916000000002704e-05, 1.405499999999893e-05, 1.3972000000000984e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:17.456" endtime="20201030 15:55:17.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.464" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 15:55:17.463" endtime="20201030 15:55:17.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.467" level="INFO">VALUE: [1.8153000000006858e-05, 1.4375000000010907e-05, 1.4193999999995155e-05, 1.4097000000004578e-05, 1.3625000000003218e-05, 1.3916000000002704e-05, 1.405499999999893e-05, 1.3972000000000984e-05, 1.3680000000002024e-05, 1.3916000000002704e-05, 1.4403000000010047e-05, 1.4111000000011087e-05, 1.4193999999995155e-05, 1.3916000000002704e-05, 1.4208000000001664e-05, 1.4013999999992754e-05, 1.4403000000010047e-05, 1.4485999999994115e-05, 1.3874999999996529e-05, 1.4237000000000277e-05, 1.3972000000000984e-05, 1.434699999999789e-05, 1.3722000000007673e-05, 1.4055999999998403e-05, 1.4374999999997029e-05, 1.4361000000004398e-05, 1.3708000000001164e-05, 1.4125000000003718e-05, 1.3833000000004758e-05, 1.3805999999991214e-05, 1.3930999999994809e-05, 1.42769999999931e-05, 1.4236000000000804e-05, 1.3610999999996709e-05, 1.4208000000001664e-05, 1.376299999999997e-05, 1.4027999999999263e-05, 1.3542000000005272e-05, 1.4333000000005258e-05, 1.4111000000011087e-05, 1.3736000000000304e-05, 1.4153000000002858e-05, 1.3666999999994989e-05, 1.4237000000000277e-05, 1.3987000000006966e-05, 1.44169999999888e-05, 1.4375000000010907e-05, 1.4250000000007312e-05, 1.4125000000003718e-05, 1.380499999999174e-05]</msg>
<status status="PASS" starttime="20201030 15:55:17.466" endtime="20201030 15:55:17.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.460" endtime="20201030 15:55:17.468"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:17.472" endtime="20201030 15:55:17.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.470" endtime="20201030 15:55:17.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.469" endtime="20201030 15:55:17.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.102" endtime="20201030 15:55:17.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.101" endtime="20201030 15:55:17.492"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.501" endtime="20201030 15:55:17.518"></status>
</kw>
<msg timestamp="20201030 15:55:17.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.499" endtime="20201030 15:55:17.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.520" endtime="20201030 15:55:17.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.522" endtime="20201030 15:55:17.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.497" endtime="20201030 15:55:17.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.495" endtime="20201030 15:55:17.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.532" endtime="20201030 15:55:17.835"></status>
</kw>
<msg timestamp="20201030 15:55:17.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019454264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019468486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.530" endtime="20201030 15:55:17.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019454264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019468486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.839" endtime="20201030 15:55:17.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.847" endtime="20201030 15:55:17.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.527" endtime="20201030 15:55:17.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.526" endtime="20201030 15:55:17.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:17.854" level="INFO">${RESULT} = [{'diff': 1.4222000000001234e-05}, {'diff': 1.3930999999998278e-05}, {'diff': 1.4291999999999083e-05}, {'diff': 1.3638999999999318e-05}, {'diff': 1.3666999999998458e-05}, {'diff': 1.3972000000000984e-...</msg>
<status status="PASS" starttime="20201030 15:55:17.851" endtime="20201030 15:55:17.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:17.859" level="INFO">${ACCURACY} = {'diff': [1.4222000000001234e-05, 1.3930999999998278e-05, 1.4291999999999083e-05, 1.3638999999999318e-05, 1.3666999999998458e-05, 1.3972000000000984e-05, 1.3736000000000304e-05, 1.4013999999999693e-05...</msg>
<status status="PASS" starttime="20201030 15:55:17.855" endtime="20201030 15:55:17.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.864" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 15:55:17.863" endtime="20201030 15:55:17.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.866" level="INFO">VALUE: [1.4222000000001234e-05, 1.3930999999998278e-05, 1.4291999999999083e-05, 1.3638999999999318e-05, 1.3666999999998458e-05, 1.3972000000000984e-05, 1.3736000000000304e-05, 1.4013999999999693e-05, 1.4402999999999638e-05, 1.4389000000000068e-05, 1.3930999999998278e-05, 1.4041999999998833e-05, 1.4457999999998444e-05, 1.3819999999997723e-05, 1.4263999999999943e-05, 1.3625000000003218e-05, 1.4042000000002303e-05, 1.3834000000000762e-05, 1.4375000000000498e-05, 1.3916999999998708e-05, 1.4445000000001817e-05, 1.3749999999999873e-05, 1.4402999999999638e-05, 1.4348000000000832e-05, 1.3680999999998028e-05, 1.3861000000000429e-05, 1.3848000000000332e-05, 1.3611000000000179e-05, 1.4319000000002219e-05, 1.3916999999998708e-05, 1.4458000000001914e-05, 1.3583000000001039e-05, 1.4374999999997029e-05, 1.3541000000002329e-05, 1.3722000000000734e-05, 1.3681000000001498e-05, 1.4221999999997764e-05, 1.3986000000000554e-05, 1.3971999999997514e-05, 1.402699999999979e-05, 1.4179999999999054e-05, 1.4221999999997764e-05, 1.4402999999999638e-05, 1.402699999999979e-05, 1.4250000000000373e-05, 1.379099999999911e-05, 1.4402999999999638e-05, 1.4041999999998833e-05, 1.4291999999999083e-05, 1.4179999999999054e-05]</msg>
<status status="PASS" starttime="20201030 15:55:17.865" endtime="20201030 15:55:17.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.860" endtime="20201030 15:55:17.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:17.871" endtime="20201030 15:55:17.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.869" endtime="20201030 15:55:17.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.868" endtime="20201030 15:55:17.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.493" endtime="20201030 15:55:17.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.493" endtime="20201030 15:55:17.892"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.900" endtime="20201030 15:55:17.917"></status>
</kw>
<msg timestamp="20201030 15:55:17.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.899" endtime="20201030 15:55:17.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.919" endtime="20201030 15:55:17.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.921" endtime="20201030 15:55:17.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.896" endtime="20201030 15:55:17.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.894" endtime="20201030 15:55:17.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.931" endtime="20201030 15:55:18.218"></status>
</kw>
<msg timestamp="20201030 15:55:18.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019430333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019444847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.929" endtime="20201030 15:55:18.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019430333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019444847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.223" endtime="20201030 15:55:18.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.231" endtime="20201030 15:55:18.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.926" endtime="20201030 15:55:18.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.925" endtime="20201030 15:55:18.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:18.237" level="INFO">${RESULT} = [{'diff': 1.4514000000000193e-05}, {'diff': 1.404099999999936e-05}, {'diff': 1.4097000000001109e-05}, {'diff': 1.3820000000001192e-05}, {'diff': 1.4415999999999735e-05}, {'diff': 1.3597000000000609e-0...</msg>
<status status="PASS" starttime="20201030 15:55:18.234" endtime="20201030 15:55:18.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:18.242" level="INFO">${ACCURACY} = {'diff': [1.4514000000000193e-05, 1.404099999999936e-05, 1.4097000000001109e-05, 1.3820000000001192e-05, 1.4415999999999735e-05, 1.3597000000000609e-05, 1.3583000000001039e-05, 1.3721999999997264e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:18.239" endtime="20201030 15:55:18.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.246" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 15:55:18.245" endtime="20201030 15:55:18.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.249" level="INFO">VALUE: [1.4514000000000193e-05, 1.404099999999936e-05, 1.4097000000001109e-05, 1.3820000000001192e-05, 1.4415999999999735e-05, 1.3597000000000609e-05, 1.3583000000001039e-05, 1.3721999999997264e-05, 1.3722000000000734e-05, 1.3861000000000429e-05, 1.3972000000000984e-05, 1.4111000000000679e-05, 1.4222000000001234e-05, 1.4027999999999263e-05, 1.3930999999998278e-05, 1.3680999999998028e-05, 1.3971999999997514e-05, 1.4125000000000248e-05, 1.4292000000002553e-05, 1.4041999999998833e-05, 1.3902999999999138e-05, 1.4111000000000679e-05, 1.3805999999998153e-05, 1.3916999999998708e-05, 1.4402999999999638e-05, 1.4027999999999263e-05, 1.3527999999998763e-05, 1.4111000000000679e-05, 1.4361000000000929e-05, 1.4402999999999638e-05, 1.4334000000001262e-05, 1.4166999999998958e-05, 1.4472000000001484e-05, 1.3624999999999748e-05, 1.3666999999998458e-05, 1.3681000000001498e-05, 1.4458999999997918e-05, 1.3957999999997944e-05, 1.3709000000000637e-05, 1.3987000000000027e-05, 1.4458000000001914e-05, 1.4333000000001789e-05, 1.4000000000000123e-05, 1.4291999999999083e-05, 1.3888999999999568e-05, 1.3986000000000554e-05, 1.3665999999998985e-05, 1.4485999999997584e-05, 1.4000000000000123e-05, 1.4125000000000248e-05]</msg>
<status status="PASS" starttime="20201030 15:55:18.247" endtime="20201030 15:55:18.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.243" endtime="20201030 15:55:18.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:18.253" endtime="20201030 15:55:18.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.252" endtime="20201030 15:55:18.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.251" endtime="20201030 15:55:18.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.892" endtime="20201030 15:55:18.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.892" endtime="20201030 15:55:18.274"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.283" endtime="20201030 15:55:18.301"></status>
</kw>
<msg timestamp="20201030 15:55:18.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.281" endtime="20201030 15:55:18.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.303" endtime="20201030 15:55:18.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.305" endtime="20201030 15:55:18.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.279" endtime="20201030 15:55:18.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.276" endtime="20201030 15:55:18.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.314" endtime="20201030 15:55:18.601"></status>
</kw>
<msg timestamp="20201030 15:55:18.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020879278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020893556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.313" endtime="20201030 15:55:18.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020879278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020893556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.605" endtime="20201030 15:55:18.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.613" endtime="20201030 15:55:18.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.310" endtime="20201030 15:55:18.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.308" endtime="20201030 15:55:18.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:18.620" level="INFO">${RESULT} = [{'diff': 1.4277999999999513e-05}, {'diff': 1.377699999999954e-05}, {'diff': 1.3861000000000429e-05}, {'diff': 1.3931000000001748e-05}, {'diff': 1.3598000000000082e-05}, {'diff': 1.3542000000001803e-0...</msg>
<status status="PASS" starttime="20201030 15:55:18.617" endtime="20201030 15:55:18.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:18.624" level="INFO">${ACCURACY} = {'diff': [1.4277999999999513e-05, 1.377699999999954e-05, 1.3861000000000429e-05, 1.3931000000001748e-05, 1.3598000000000082e-05, 1.3542000000001803e-05, 1.4112000000000152e-05, 1.3834000000000762e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:18.621" endtime="20201030 15:55:18.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.628" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 15:55:18.627" endtime="20201030 15:55:18.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.631" level="INFO">VALUE: [1.4277999999999513e-05, 1.377699999999954e-05, 1.3861000000000429e-05, 1.3931000000001748e-05, 1.3598000000000082e-05, 1.3542000000001803e-05, 1.4112000000000152e-05, 1.3834000000000762e-05, 1.3888999999999568e-05, 1.3874999999999998e-05, 1.3638999999999318e-05, 1.4361000000000929e-05, 1.3874999999999998e-05, 1.4402999999999638e-05, 1.4222999999997238e-05, 1.4027999999999263e-05, 1.4236000000000804e-05, 1.3819000000001719e-05, 1.3902999999999138e-05, 1.4277999999999513e-05, 1.4013999999999693e-05, 1.4097000000001109e-05, 1.4194000000002094e-05, 1.4236000000000804e-05, 1.3708000000001164e-05, 1.3915999999999235e-05, 1.4360999999997459e-05, 1.3679999999998554e-05, 1.4179999999999054e-05, 1.4542000000002803e-05, 1.3624999999999748e-05, 1.3929999999998804e-05, 1.4236000000000804e-05, 1.3653000000002358e-05, 1.4097000000001109e-05, 1.4000000000000123e-05, 1.4486000000001054e-05, 1.4235999999997334e-05, 1.3820000000001192e-05, 1.4250000000000373e-05, 1.4069000000001969e-05, 1.4486000000001054e-05, 1.3597000000000609e-05, 1.4097000000001109e-05, 1.4056000000001873e-05, 1.3528000000002233e-05, 1.4194999999998098e-05, 1.3653000000002358e-05, 1.3570000000000942e-05, 1.3611000000000179e-05]</msg>
<status status="PASS" starttime="20201030 15:55:18.630" endtime="20201030 15:55:18.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.625" endtime="20201030 15:55:18.633"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:18.636" endtime="20201030 15:55:18.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.635" endtime="20201030 15:55:18.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.634" endtime="20201030 15:55:18.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.275" endtime="20201030 15:55:18.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.274" endtime="20201030 15:55:18.657"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.666" endtime="20201030 15:55:18.682"></status>
</kw>
<msg timestamp="20201030 15:55:18.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.665" endtime="20201030 15:55:18.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.683" endtime="20201030 15:55:18.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.686" endtime="20201030 15:55:18.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.662" endtime="20201030 15:55:18.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.660" endtime="20201030 15:55:18.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.694" endtime="20201030 15:55:18.979"></status>
</kw>
<msg timestamp="20201030 15:55:18.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020003458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.693" endtime="20201030 15:55:18.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020003458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.983" endtime="20201030 15:55:18.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.992" endtime="20201030 15:55:18.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.690" endtime="20201030 15:55:18.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.689" endtime="20201030 15:55:18.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:18.998" level="INFO">${RESULT} = [{'diff': 1.4111000000000679e-05}, {'diff': 1.3722000000000734e-05}, {'diff': 1.3958000000001414e-05}, {'diff': 1.4097000000001109e-05}, {'diff': 1.4069000000001969e-05}, {'diff': 1.4179999999999054e-...</msg>
<status status="PASS" starttime="20201030 15:55:18.995" endtime="20201030 15:55:18.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:19.003" level="INFO">${ACCURACY} = {'diff': [1.4111000000000679e-05, 1.3722000000000734e-05, 1.3958000000001414e-05, 1.4097000000001109e-05, 1.4069000000001969e-05, 1.4179999999999054e-05, 1.427700000000004e-05, 1.4111000000000679e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:18.999" endtime="20201030 15:55:19.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.008" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 15:55:19.007" endtime="20201030 15:55:19.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.010" level="INFO">VALUE: [1.4111000000000679e-05, 1.3722000000000734e-05, 1.3958000000001414e-05, 1.4097000000001109e-05, 1.4069000000001969e-05, 1.4179999999999054e-05, 1.427700000000004e-05, 1.4111000000000679e-05, 1.3665999999998985e-05, 1.3693999999998124e-05, 1.4415999999999735e-05, 1.3693999999998124e-05, 1.4166999999998958e-05, 1.3708000000001164e-05, 1.4277999999999513e-05, 1.4458999999997918e-05, 1.3528000000002233e-05, 1.431899999999875e-05, 1.3611000000000179e-05, 1.4389000000000068e-05, 1.4097000000001109e-05, 1.4000000000000123e-05, 1.3902999999999138e-05, 1.4361000000000929e-05, 1.3722000000000734e-05, 1.4416999999999208e-05, 1.3527999999998763e-05, 1.3763999999999443e-05, 1.3986000000000554e-05, 1.3708999999997168e-05, 1.3917000000002178e-05, 1.434699999999789e-05, 1.3722000000000734e-05, 1.3763999999999443e-05, 1.4277999999999513e-05, 1.4499999999997154e-05, 1.3874999999999998e-05, 1.3542000000001803e-05, 1.4222000000001234e-05, 1.4486000000001054e-05, 1.4180999999998528e-05, 1.4083000000001539e-05, 1.4138000000000345e-05, 1.4445000000001817e-05, 1.4402999999999638e-05, 1.4375000000000498e-05, 1.4209000000001137e-05, 1.4457999999998444e-05, 1.3666999999998458e-05, 1.4430999999998778e-05]</msg>
<status status="PASS" starttime="20201030 15:55:19.009" endtime="20201030 15:55:19.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.004" endtime="20201030 15:55:19.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:19.015" endtime="20201030 15:55:19.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.013" endtime="20201030 15:55:19.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.012" endtime="20201030 15:55:19.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.658" endtime="20201030 15:55:19.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.657" endtime="20201030 15:55:19.036"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.044" endtime="20201030 15:55:19.062"></status>
</kw>
<msg timestamp="20201030 15:55:19.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.043" endtime="20201030 15:55:19.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.063" endtime="20201030 15:55:19.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.066" endtime="20201030 15:55:19.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.040" endtime="20201030 15:55:19.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.038" endtime="20201030 15:55:19.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.075" endtime="20201030 15:55:19.383"></status>
</kw>
<msg timestamp="20201030 15:55:19.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019787861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019802097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.073" endtime="20201030 15:55:19.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019787861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019802097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.387" endtime="20201030 15:55:19.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.399" endtime="20201030 15:55:19.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.071" endtime="20201030 15:55:19.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.069" endtime="20201030 15:55:19.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:19.406" level="INFO">${RESULT} = [{'diff': 1.4236000000000804e-05}, {'diff': 1.4222000000001234e-05}, {'diff': 1.3611000000000179e-05}, {'diff': 1.4430999999998778e-05}, {'diff': 1.4375000000000498e-05}, {'diff': 1.4360999999997459e-...</msg>
<status status="PASS" starttime="20201030 15:55:19.403" endtime="20201030 15:55:19.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:19.410" level="INFO">${ACCURACY} = {'diff': [1.4236000000000804e-05, 1.4222000000001234e-05, 1.3611000000000179e-05, 1.4430999999998778e-05, 1.4375000000000498e-05, 1.4360999999997459e-05, 1.4193999999998624e-05, 1.3639000000002788e-05...</msg>
<status status="PASS" starttime="20201030 15:55:19.407" endtime="20201030 15:55:19.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.415" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 15:55:19.414" endtime="20201030 15:55:19.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.417" level="INFO">VALUE: [1.4236000000000804e-05, 1.4222000000001234e-05, 1.3611000000000179e-05, 1.4430999999998778e-05, 1.4375000000000498e-05, 1.4360999999997459e-05, 1.4193999999998624e-05, 1.3639000000002788e-05, 1.4138999999999818e-05, 1.3917000000002178e-05, 1.4194000000002094e-05, 1.355499999999843e-05, 1.4000000000000123e-05, 1.4027999999999263e-05, 1.3986000000000554e-05, 1.4472000000001484e-05, 1.4180999999998528e-05, 1.3749999999999873e-05, 1.4193999999998624e-05, 1.3556000000001373e-05, 1.3666000000002454e-05, 1.4431000000002248e-05, 1.4097000000001109e-05, 1.4209000000001137e-05, 1.3916999999998708e-05, 1.4027999999999263e-05, 1.4222000000001234e-05, 1.3833000000001289e-05, 1.3736000000000304e-05, 1.3611000000000179e-05, 1.3777999999999013e-05, 1.4055999999998403e-05, 1.3861000000000429e-05, 1.3986000000000554e-05, 1.3806000000001623e-05, 1.3930999999998278e-05, 1.4167000000002428e-05, 1.4152999999999388e-05, 1.3624999999999748e-05, 1.3625000000003218e-05, 1.4291999999999083e-05, 1.3694000000001594e-05, 1.3596999999997139e-05, 1.3777999999999013e-05, 1.3611000000000179e-05, 1.429099999999961e-05, 1.3666999999998458e-05, 1.4429999999999304e-05, 1.4333999999997793e-05, 1.3722000000000734e-05]</msg>
<status status="PASS" starttime="20201030 15:55:19.416" endtime="20201030 15:55:19.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.411" endtime="20201030 15:55:19.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:19.422" endtime="20201030 15:55:19.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.421" endtime="20201030 15:55:19.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.420" endtime="20201030 15:55:19.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.037" endtime="20201030 15:55:19.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.036" endtime="20201030 15:55:19.443"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.452" endtime="20201030 15:55:19.469"></status>
</kw>
<msg timestamp="20201030 15:55:19.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.450" endtime="20201030 15:55:19.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.471" endtime="20201030 15:55:19.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.473" endtime="20201030 15:55:19.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.447" endtime="20201030 15:55:19.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.445" endtime="20201030 15:55:19.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.482" endtime="20201030 15:55:19.768"></status>
</kw>
<msg timestamp="20201030 15:55:19.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020263778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020278014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.481" endtime="20201030 15:55:19.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020263778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020278014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.772" endtime="20201030 15:55:19.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.780" endtime="20201030 15:55:19.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.478" endtime="20201030 15:55:19.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.476" endtime="20201030 15:55:19.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:19.789" level="INFO">${RESULT} = [{'diff': 1.4236000000000804e-05}, {'diff': 1.3889000000003038e-05}, {'diff': 1.4165999999999485e-05}, {'diff': 1.3611000000000179e-05}, {'diff': 1.3902999999999138e-05}, {'diff': 1.3624999999999748e-...</msg>
<status status="PASS" starttime="20201030 15:55:19.784" endtime="20201030 15:55:19.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:19.794" level="INFO">${ACCURACY} = {'diff': [1.4236000000000804e-05, 1.3889000000003038e-05, 1.4165999999999485e-05, 1.3611000000000179e-05, 1.3902999999999138e-05, 1.3624999999999748e-05, 1.3834000000000762e-05, 1.3556000000001373e-05...</msg>
<status status="PASS" starttime="20201030 15:55:19.790" endtime="20201030 15:55:19.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.801" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 15:55:19.799" endtime="20201030 15:55:19.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.805" level="INFO">VALUE: [1.4236000000000804e-05, 1.3889000000003038e-05, 1.4165999999999485e-05, 1.3611000000000179e-05, 1.3902999999999138e-05, 1.3624999999999748e-05, 1.3834000000000762e-05, 1.3556000000001373e-05, 1.3986000000000554e-05, 1.3527999999998763e-05, 1.3528000000002233e-05, 1.3569999999997473e-05, 1.3930000000002274e-05, 1.430499999999918e-05, 1.3848000000000332e-05, 1.452700000000029e-05, 1.4430999999998778e-05, 1.380499999999868e-05, 1.3791000000002579e-05, 1.3874999999999998e-05, 1.3972000000000984e-05, 1.4165999999999485e-05, 1.4402999999999638e-05, 1.4415999999999735e-05, 1.4485999999997584e-05, 1.4250000000000373e-05, 1.409699999999764e-05, 1.3916000000002704e-05, 1.351299999999972e-05, 1.4125000000000248e-05, 1.3915999999999235e-05, 1.3638999999999318e-05, 1.3874999999999998e-05, 1.3652999999998888e-05, 1.3805000000002149e-05, 1.3611000000000179e-05, 1.4263999999999943e-05, 1.4222000000001234e-05, 1.4097000000001109e-05, 1.3986000000000554e-05, 1.3874999999999998e-05, 1.4042000000002303e-05, 1.3806000000001623e-05, 1.3805999999998153e-05, 1.3556000000001373e-05, 1.3624999999999748e-05, 1.3722000000000734e-05, 1.3957999999997944e-05, 1.3709000000000637e-05, 1.3722000000000734e-05]</msg>
<status status="PASS" starttime="20201030 15:55:19.803" endtime="20201030 15:55:19.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.796" endtime="20201030 15:55:19.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:19.814" endtime="20201030 15:55:19.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.812" endtime="20201030 15:55:19.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.809" endtime="20201030 15:55:19.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.444" endtime="20201030 15:55:19.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.443" endtime="20201030 15:55:19.835"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.844" endtime="20201030 15:55:19.861"></status>
</kw>
<msg timestamp="20201030 15:55:19.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.842" endtime="20201030 15:55:19.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.862" endtime="20201030 15:55:19.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.865" endtime="20201030 15:55:19.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.840" endtime="20201030 15:55:19.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.838" endtime="20201030 15:55:19.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.874" endtime="20201030 15:55:20.172"></status>
</kw>
<msg timestamp="20201030 15:55:20.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019385361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019399306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.872" endtime="20201030 15:55:20.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019385361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019399306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.177" endtime="20201030 15:55:20.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.185" endtime="20201030 15:55:20.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.870" endtime="20201030 15:55:20.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.868" endtime="20201030 15:55:20.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:20.191" level="INFO">${RESULT} = [{'diff': 1.3945000000001317e-05}, {'diff': 1.4319000000002219e-05}, {'diff': 1.3930000000002274e-05}, {'diff': 1.380499999999868e-05}, {'diff': 1.434699999999789e-05}, {'diff': 1.430499999999918e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:20.188" endtime="20201030 15:55:20.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:20.196" level="INFO">${ACCURACY} = {'diff': [1.3945000000001317e-05, 1.4319000000002219e-05, 1.3930000000002274e-05, 1.380499999999868e-05, 1.434699999999789e-05, 1.430499999999918e-05, 1.3597000000000609e-05, 1.4360999999997459e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:55:20.192" endtime="20201030 15:55:20.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.201" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 15:55:20.200" endtime="20201030 15:55:20.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.203" level="INFO">VALUE: [1.3945000000001317e-05, 1.4319000000002219e-05, 1.3930000000002274e-05, 1.380499999999868e-05, 1.434699999999789e-05, 1.430499999999918e-05, 1.3597000000000609e-05, 1.4360999999997459e-05, 1.3986000000000554e-05, 1.405499999999893e-05, 1.3901999999999665e-05, 1.3847000000000859e-05, 1.4500000000000624e-05, 1.3930000000002274e-05, 1.3986000000000554e-05, 1.4444000000002344e-05, 1.4236000000000804e-05, 1.402699999999979e-05, 1.3736000000000304e-05, 1.3624999999999748e-05, 1.4027999999999263e-05, 1.4166999999998958e-05, 1.3611000000000179e-05, 1.408299999999807e-05, 1.430499999999918e-05, 1.4070000000001442e-05, 1.3792000000002053e-05, 1.3542000000001803e-05, 1.3542000000001803e-05, 1.4000000000000123e-05, 1.4167000000002428e-05, 1.4486000000001054e-05, 1.3736000000000304e-05, 1.409699999999764e-05, 1.4236000000000804e-05, 1.4459000000001387e-05, 1.4236000000000804e-05, 1.4236000000000804e-05, 1.3694999999997598e-05, 1.4195000000001567e-05, 1.3556000000001373e-05, 1.4471999999998014e-05, 1.3986000000000554e-05, 1.3931000000001748e-05, 1.3653000000002358e-05, 1.4000000000000123e-05, 1.4221999999997764e-05, 1.4152999999999388e-05, 1.3569000000001469e-05, 1.4027999999999263e-05]</msg>
<status status="PASS" starttime="20201030 15:55:20.202" endtime="20201030 15:55:20.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.197" endtime="20201030 15:55:20.205"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:20.208" endtime="20201030 15:55:20.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.207" endtime="20201030 15:55:20.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.205" endtime="20201030 15:55:20.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.836" endtime="20201030 15:55:20.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.835" endtime="20201030 15:55:20.229"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.237" endtime="20201030 15:55:20.255"></status>
</kw>
<msg timestamp="20201030 15:55:20.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.236" endtime="20201030 15:55:20.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.256" endtime="20201030 15:55:20.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.259" endtime="20201030 15:55:20.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.233" endtime="20201030 15:55:20.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.231" endtime="20201030 15:55:20.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.268" endtime="20201030 15:55:20.553"></status>
</kw>
<msg timestamp="20201030 15:55:20.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019293486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01930775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:20.266" endtime="20201030 15:55:20.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019293486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01930775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:20.557" endtime="20201030 15:55:20.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.567" endtime="20201030 15:55:20.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.264" endtime="20201030 15:55:20.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.262" endtime="20201030 15:55:20.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:20.576" level="INFO">${RESULT} = [{'diff': 1.4263999999999943e-05}, {'diff': 1.3805999999998153e-05}, {'diff': 1.3902999999999138e-05}, {'diff': 1.3819999999997723e-05}, {'diff': 1.3902999999999138e-05}, {'diff': 1.3542000000001803e-...</msg>
<status status="PASS" starttime="20201030 15:55:20.572" endtime="20201030 15:55:20.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:20.581" level="INFO">${ACCURACY} = {'diff': [1.4263999999999943e-05, 1.3805999999998153e-05, 1.3902999999999138e-05, 1.3819999999997723e-05, 1.3902999999999138e-05, 1.3542000000001803e-05, 1.4055999999998403e-05, 1.4361000000000929e-05...</msg>
<status status="PASS" starttime="20201030 15:55:20.578" endtime="20201030 15:55:20.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.595" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 15:55:20.593" endtime="20201030 15:55:20.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.598" level="INFO">VALUE: [1.4263999999999943e-05, 1.3805999999998153e-05, 1.3902999999999138e-05, 1.3819999999997723e-05, 1.3902999999999138e-05, 1.3542000000001803e-05, 1.4055999999998403e-05, 1.4361000000000929e-05, 1.4097000000001109e-05, 1.4445000000001817e-05, 1.4222000000001234e-05, 1.3971999999997514e-05, 1.3806000000001623e-05, 1.4194999999998098e-05, 1.3861000000000429e-05, 1.3611000000000179e-05, 1.3777999999999013e-05, 1.3778000000002483e-05, 1.3737000000003247e-05, 1.4165999999999485e-05, 1.4041999999998833e-05, 1.4179999999999054e-05, 1.4263999999999943e-05, 1.4250000000000373e-05, 1.430499999999918e-05, 1.4250000000000373e-05, 1.3723000000000207e-05, 1.3723000000000207e-05, 1.3499999999999623e-05, 1.4319000000002219e-05, 1.4151999999999915e-05, 1.3568999999998e-05, 1.379099999999911e-05, 1.4472000000001484e-05, 1.405499999999893e-05, 1.426300000000047e-05, 1.4429999999999304e-05, 1.4347000000001359e-05, 1.4459000000001387e-05, 1.4415999999999735e-05, 1.3986000000000554e-05, 1.383299999999782e-05, 1.4347000000001359e-05, 1.429099999999961e-05, 1.4361000000000929e-05, 1.3915999999999235e-05, 1.3542000000001803e-05, 1.4152999999999388e-05, 1.3722000000000734e-05, 1.3541999999998333e-05]</msg>
<status status="PASS" starttime="20201030 15:55:20.596" endtime="20201030 15:55:20.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.583" endtime="20201030 15:55:20.600"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:20.610" endtime="20201030 15:55:20.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.607" endtime="20201030 15:55:20.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.601" endtime="20201030 15:55:20.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.230" endtime="20201030 15:55:20.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.229" endtime="20201030 15:55:20.631"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.642" endtime="20201030 15:55:20.660"></status>
</kw>
<msg timestamp="20201030 15:55:20.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.640" endtime="20201030 15:55:20.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.662" endtime="20201030 15:55:20.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.664" endtime="20201030 15:55:20.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.637" endtime="20201030 15:55:20.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.634" endtime="20201030 15:55:20.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.675" endtime="20201030 15:55:20.966"></status>
</kw>
<msg timestamp="20201030 15:55:20.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022908708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022923153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.673" endtime="20201030 15:55:20.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022908708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022923153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.971" endtime="20201030 15:55:20.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.979" endtime="20201030 15:55:20.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.670" endtime="20201030 15:55:20.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.668" endtime="20201030 15:55:20.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:20.985" level="INFO">${RESULT} = [{'diff': 1.4445000000001817e-05}, {'diff': 1.4166999999998958e-05}, {'diff': 1.4180999999998528e-05}, {'diff': 1.4500000000000624e-05}, {'diff': 1.3973000000000457e-05}, {'diff': 1.4361000000000929e-...</msg>
<status status="PASS" starttime="20201030 15:55:20.982" endtime="20201030 15:55:20.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:20.989" level="INFO">${ACCURACY} = {'diff': [1.4445000000001817e-05, 1.4166999999998958e-05, 1.4180999999998528e-05, 1.4500000000000624e-05, 1.3973000000000457e-05, 1.4361000000000929e-05, 1.4070000000001442e-05, 1.3652999999998888e-05...</msg>
<status status="PASS" starttime="20201030 15:55:20.986" endtime="20201030 15:55:20.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.994" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 15:55:20.993" endtime="20201030 15:55:20.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.996" level="INFO">VALUE: [1.4445000000001817e-05, 1.4166999999998958e-05, 1.4180999999998528e-05, 1.4500000000000624e-05, 1.3973000000000457e-05, 1.4361000000000929e-05, 1.4070000000001442e-05, 1.3652999999998888e-05, 1.3638999999999318e-05, 1.354099999999886e-05, 1.3874999999999998e-05, 1.4362000000000402e-05, 1.352699999999929e-05, 1.4305000000002649e-05, 1.3638999999999318e-05, 1.3749999999999873e-05, 1.354099999999886e-05, 1.3861000000000429e-05, 1.4179999999999054e-05, 1.3916999999998708e-05, 1.3833000000001289e-05, 1.4194000000002094e-05, 1.4514000000000193e-05, 1.3555000000001899e-05, 1.4375000000000498e-05, 1.3651999999999415e-05, 1.4263999999999943e-05, 1.381899999999825e-05, 1.404099999999936e-05, 1.354099999999886e-05, 1.408299999999807e-05, 1.4111000000000679e-05, 1.3624999999999748e-05, 1.3985999999997084e-05, 1.405499999999893e-05, 1.3736000000000304e-05, 1.3624999999999748e-05, 1.4305000000002649e-05, 1.3541999999998333e-05, 1.3916999999998708e-05, 1.4472000000001484e-05, 1.4166999999998958e-05, 1.3806000000001623e-05, 1.3819999999997723e-05, 1.4111000000000679e-05, 1.4306000000002123e-05, 1.4500000000000624e-05, 1.4305999999998653e-05, 1.3986000000000554e-05, 1.3611000000000179e-05]</msg>
<status status="PASS" starttime="20201030 15:55:20.995" endtime="20201030 15:55:20.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.990" endtime="20201030 15:55:20.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:21.002" endtime="20201030 15:55:21.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.001" endtime="20201030 15:55:21.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.000" endtime="20201030 15:55:21.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.632" endtime="20201030 15:55:21.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.632" endtime="20201030 15:55:21.023"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.031" endtime="20201030 15:55:21.047"></status>
</kw>
<msg timestamp="20201030 15:55:21.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.030" endtime="20201030 15:55:21.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.049" endtime="20201030 15:55:21.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.051" endtime="20201030 15:55:21.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.027" endtime="20201030 15:55:21.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.025" endtime="20201030 15:55:21.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.060" endtime="20201030 15:55:21.345"></status>
</kw>
<msg timestamp="20201030 15:55:21.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019369903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019384431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.058" endtime="20201030 15:55:21.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019369903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019384431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.350" endtime="20201030 15:55:21.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.358" endtime="20201030 15:55:21.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.056" endtime="20201030 15:55:21.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.054" endtime="20201030 15:55:21.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:21.364" level="INFO">${RESULT} = [{'diff': 1.4527999999999763e-05}, {'diff': 1.53750000000015e-05}, {'diff': 1.529100000000061e-05}, {'diff': 1.504100000000036e-05}, {'diff': 1.5139000000000818e-05}, {'diff': 1.527699999999757e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:21.361" endtime="20201030 15:55:21.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:21.369" level="INFO">${ACCURACY} = {'diff': [1.4527999999999763e-05, 1.53750000000015e-05, 1.529100000000061e-05, 1.504100000000036e-05, 1.5139000000000818e-05, 1.527699999999757e-05, 1.5485999999998584e-05, 1.534699999999889e-05, 1.52...</msg>
<status status="PASS" starttime="20201030 15:55:21.365" endtime="20201030 15:55:21.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.374" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 15:55:21.373" endtime="20201030 15:55:21.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.376" level="INFO">VALUE: [1.4527999999999763e-05, 1.53750000000015e-05, 1.529100000000061e-05, 1.504100000000036e-05, 1.5139000000000818e-05, 1.527699999999757e-05, 1.5485999999998584e-05, 1.534699999999889e-05, 1.5236000000001804e-05, 1.5236000000001804e-05, 1.5514000000001194e-05, 1.4639000000000318e-05, 1.5000000000001124e-05, 1.4569000000002469e-05, 1.4541999999999333e-05, 1.5250000000001374e-05, 1.4500000000000624e-05, 1.479100000000011e-05, 1.4652999999999888e-05, 1.4528000000003233e-05, 1.4972000000001984e-05, 1.4639000000000318e-05, 1.5028000000000263e-05, 1.5457999999999444e-05, 1.53889999999976e-05, 1.5319999999999223e-05, 1.534699999999889e-05, 1.5305999999999653e-05, 1.4778000000000013e-05, 1.531899999999975e-05, 1.5305999999999653e-05, 1.5222000000002234e-05, 1.4638999999996849e-05, 1.4749999999997404e-05, 1.552700000000129e-05, 1.5305999999999653e-05, 1.4791999999999583e-05, 1.4694999999998598e-05, 1.5055999999999403e-05, 1.5194999999999098e-05, 1.4694999999998598e-05, 1.5485999999998584e-05, 1.5319999999999223e-05, 1.4555999999998903e-05, 1.5236000000001804e-05, 1.5083999999998543e-05, 1.5027999999996794e-05, 1.4999999999997654e-05, 1.537499999999803e-05, 1.4930999999999278e-05]</msg>
<status status="PASS" starttime="20201030 15:55:21.375" endtime="20201030 15:55:21.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.370" endtime="20201030 15:55:21.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:21.381" endtime="20201030 15:55:21.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.380" endtime="20201030 15:55:21.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.378" endtime="20201030 15:55:21.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.024" endtime="20201030 15:55:21.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.023" endtime="20201030 15:55:21.402"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.410" endtime="20201030 15:55:21.427"></status>
</kw>
<msg timestamp="20201030 15:55:21.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.409" endtime="20201030 15:55:21.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.429" endtime="20201030 15:55:21.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.432" endtime="20201030 15:55:21.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.406" endtime="20201030 15:55:21.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.404" endtime="20201030 15:55:21.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.442" endtime="20201030 15:55:21.730"></status>
</kw>
<msg timestamp="20201030 15:55:21.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019454069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019469597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.440" endtime="20201030 15:55:21.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019454069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019469597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.735" endtime="20201030 15:55:21.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.743" endtime="20201030 15:55:21.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.437" endtime="20201030 15:55:21.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.435" endtime="20201030 15:55:21.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:21.749" level="INFO">${RESULT} = [{'diff': 1.5528000000000763e-05}, {'diff': 1.615300000000139e-05}, {'diff': 1.611099999999921e-05}, {'diff': 1.5791999999997114e-05}, {'diff': 1.5957999999999944e-05}, {'diff': 1.566700000000046e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:21.746" endtime="20201030 15:55:21.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:21.753" level="INFO">${ACCURACY} = {'diff': [1.5528000000000763e-05, 1.615300000000139e-05, 1.611099999999921e-05, 1.5791999999997114e-05, 1.5957999999999944e-05, 1.566700000000046e-05, 1.5791999999997114e-05, 1.5931000000000278e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:55:21.750" endtime="20201030 15:55:21.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.758" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 15:55:21.757" endtime="20201030 15:55:21.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.760" level="INFO">VALUE: [1.5528000000000763e-05, 1.615300000000139e-05, 1.611099999999921e-05, 1.5791999999997114e-05, 1.5957999999999944e-05, 1.566700000000046e-05, 1.5791999999997114e-05, 1.5931000000000278e-05, 1.561100000000218e-05, 1.5721999999999264e-05, 1.5777999999997544e-05, 1.561099999999871e-05, 1.566700000000046e-05, 1.5986000000002554e-05, 1.611100000000268e-05, 1.6445000000000348e-05, 1.561099999999871e-05, 1.5985999999999084e-05, 1.641700000000121e-05, 1.6292000000001083e-05, 1.6249999999998904e-05, 1.6042000000000833e-05, 1.609699999999964e-05, 1.6263999999998474e-05, 1.5555999999999903e-05, 1.566700000000046e-05, 1.6513999999998724e-05, 1.6249999999998904e-05, 1.5847999999998863e-05, 1.591699999999724e-05, 1.5861999999998433e-05, 1.6250000000002374e-05, 1.566699999999699e-05, 1.6291999999997614e-05, 1.562499999999828e-05, 1.604099999999789e-05, 1.605500000000093e-05, 1.563899999999785e-05, 1.631899999999728e-05, 1.6179999999997585e-05, 1.5902000000001665e-05, 1.6250000000002374e-05, 1.581900000000025e-05, 1.5721999999999264e-05, 1.584699999999939e-05, 1.590300000000114e-05, 1.63889999999986e-05, 1.604099999999789e-05, 1.5666000000000985e-05, 1.6235999999999334e-05]</msg>
<status status="PASS" starttime="20201030 15:55:21.759" endtime="20201030 15:55:21.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.754" endtime="20201030 15:55:21.762"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:21.765" endtime="20201030 15:55:21.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.764" endtime="20201030 15:55:21.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.763" endtime="20201030 15:55:21.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.403" endtime="20201030 15:55:21.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.402" endtime="20201030 15:55:21.786"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.795" endtime="20201030 15:55:21.813"></status>
</kw>
<msg timestamp="20201030 15:55:21.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.793" endtime="20201030 15:55:21.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.814" endtime="20201030 15:55:21.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.817" endtime="20201030 15:55:21.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.790" endtime="20201030 15:55:21.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.788" endtime="20201030 15:55:21.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.826" endtime="20201030 15:55:22.112"></status>
</kw>
<msg timestamp="20201030 15:55:22.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020422139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020439319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.824" endtime="20201030 15:55:22.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020422139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020439319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.117" endtime="20201030 15:55:22.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.125" endtime="20201030 15:55:22.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.822" endtime="20201030 15:55:22.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.820" endtime="20201030 15:55:22.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:22.131" level="INFO">${RESULT} = [{'diff': 1.7180000000002055e-05}, {'diff': 1.7305999999998184e-05}, {'diff': 1.6749999999999404e-05}, {'diff': 1.718100000000153e-05}, {'diff': 1.6749999999999404e-05}, {'diff': 1.7028000000002264e-0...</msg>
<status status="PASS" starttime="20201030 15:55:22.128" endtime="20201030 15:55:22.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:22.135" level="INFO">${ACCURACY} = {'diff': [1.7180000000002055e-05, 1.7305999999998184e-05, 1.6749999999999404e-05, 1.718100000000153e-05, 1.6749999999999404e-05, 1.7028000000002264e-05, 1.7361999999999933e-05, 1.7347999999996894e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:22.132" endtime="20201030 15:55:22.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.140" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 15:55:22.139" endtime="20201030 15:55:22.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.143" level="INFO">VALUE: [1.7180000000002055e-05, 1.7305999999998184e-05, 1.6749999999999404e-05, 1.718100000000153e-05, 1.6749999999999404e-05, 1.7028000000002264e-05, 1.7361999999999933e-05, 1.7347999999996894e-05, 1.7235999999996865e-05, 1.7236000000000334e-05, 1.744500000000135e-05, 1.6930000000001805e-05, 1.663899999999885e-05, 1.743100000000178e-05, 1.711099999999674e-05, 1.6709000000000168e-05, 1.677700000000254e-05, 1.7151999999999445e-05, 1.702699999999932e-05, 1.729099999999914e-05, 1.6680000000001555e-05, 1.686099999999996e-05, 1.7472000000001014e-05, 1.655500000000143e-05, 1.6958000000000945e-05, 1.65829999999971e-05, 1.6514000000002194e-05, 1.712499999999978e-05, 1.7042000000001833e-05, 1.6957999999997475e-05, 1.711100000000021e-05, 1.7208000000001195e-05, 1.6958000000000945e-05, 1.6777999999998544e-05, 1.713899999999935e-05, 1.658300000000057e-05, 1.6986000000000084e-05, 1.7236000000000334e-05, 1.6472000000000014e-05, 1.6792000000001583e-05, 1.718100000000153e-05, 1.734700000000089e-05, 1.7236000000000334e-05, 1.7263999999999474e-05, 1.6972000000000514e-05, 1.6749999999999404e-05, 1.7222000000000764e-05, 1.68889999999991e-05, 1.7249999999999904e-05, 1.7236000000000334e-05]</msg>
<status status="PASS" starttime="20201030 15:55:22.141" endtime="20201030 15:55:22.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.136" endtime="20201030 15:55:22.144"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:22.148" endtime="20201030 15:55:22.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.146" endtime="20201030 15:55:22.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.145" endtime="20201030 15:55:22.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.787" endtime="20201030 15:55:22.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.786" endtime="20201030 15:55:22.169"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.177" endtime="20201030 15:55:22.195"></status>
</kw>
<msg timestamp="20201030 15:55:22.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.176" endtime="20201030 15:55:22.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.197" endtime="20201030 15:55:22.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.199" endtime="20201030 15:55:22.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.173" endtime="20201030 15:55:22.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.171" endtime="20201030 15:55:22.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.208" endtime="20201030 15:55:22.500"></status>
</kw>
<msg timestamp="20201030 15:55:22.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019498972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019517125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.207" endtime="20201030 15:55:22.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019498972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019517125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.504" endtime="20201030 15:55:22.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.512" endtime="20201030 15:55:22.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.204" endtime="20201030 15:55:22.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.202" endtime="20201030 15:55:22.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:22.519" level="INFO">${RESULT} = [{'diff': 1.815299999999992e-05}, {'diff': 1.7679999999999085e-05}, {'diff': 1.8166000000000015e-05}, {'diff': 1.8486000000001584e-05}, {'diff': 1.779099999999964e-05}, {'diff': 1.7972000000001515e-05...</msg>
<status status="PASS" starttime="20201030 15:55:22.516" endtime="20201030 15:55:22.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:22.524" level="INFO">${ACCURACY} = {'diff': [1.815299999999992e-05, 1.7679999999999085e-05, 1.8166000000000015e-05, 1.8486000000001584e-05, 1.779099999999964e-05, 1.7972000000001515e-05, 1.813900000000035e-05, 1.7915999999999765e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:55:22.520" endtime="20201030 15:55:22.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.529" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 15:55:22.528" endtime="20201030 15:55:22.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.531" level="INFO">VALUE: [1.815299999999992e-05, 1.7679999999999085e-05, 1.8166000000000015e-05, 1.8486000000001584e-05, 1.779099999999964e-05, 1.7972000000001515e-05, 1.813900000000035e-05, 1.7915999999999765e-05, 1.809699999999817e-05, 1.7749999999996935e-05, 1.766699999999899e-05, 1.7749999999996935e-05, 1.759700000000114e-05, 1.7971999999998045e-05, 1.786099999999749e-05, 1.7791999999999114e-05, 1.787500000000053e-05, 1.8069999999998504e-05, 1.806899999999903e-05, 1.791699999999924e-05, 1.8264000000000474e-05, 1.836100000000146e-05, 1.818100000000253e-05, 1.7750000000000404e-05, 1.7722000000001265e-05, 1.8250000000000904e-05, 1.766699999999899e-05, 1.8320000000002223e-05, 1.844499999999888e-05, 1.815299999999992e-05, 1.827700000000057e-05, 1.7749999999996935e-05, 1.7556000000001903e-05, 1.8361999999997464e-05, 1.8291999999999614e-05, 1.841699999999974e-05, 1.7833999999997824e-05, 1.834700000000189e-05, 1.765300000000289e-05, 1.8179999999999585e-05, 1.8263000000001e-05, 1.756899999999853e-05, 1.7986000000001084e-05, 1.8166000000000015e-05, 1.829100000000014e-05, 1.7929999999999335e-05, 1.752699999999982e-05, 1.7721999999997795e-05, 1.7915999999999765e-05, 1.836099999999799e-05]</msg>
<status status="PASS" starttime="20201030 15:55:22.530" endtime="20201030 15:55:22.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.525" endtime="20201030 15:55:22.533"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:22.536" endtime="20201030 15:55:22.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.535" endtime="20201030 15:55:22.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.533" endtime="20201030 15:55:22.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.170" endtime="20201030 15:55:22.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.169" endtime="20201030 15:55:22.557"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.565" endtime="20201030 15:55:22.583"></status>
</kw>
<msg timestamp="20201030 15:55:22.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.564" endtime="20201030 15:55:22.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.585" endtime="20201030 15:55:22.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.587" endtime="20201030 15:55:22.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.561" endtime="20201030 15:55:22.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.559" endtime="20201030 15:55:22.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.596" endtime="20201030 15:55:22.886"></status>
</kw>
<msg timestamp="20201030 15:55:22.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019526903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019546375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.595" endtime="20201030 15:55:22.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019526903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019546375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.890" endtime="20201030 15:55:22.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.898" endtime="20201030 15:55:22.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.592" endtime="20201030 15:55:22.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.590" endtime="20201030 15:55:22.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:22.905" level="INFO">${RESULT} = [{'diff': 1.9471999999999545e-05}, {'diff': 1.8722000000002265e-05}, {'diff': 1.9264000000001474e-05}, {'diff': 1.9236000000002335e-05}, {'diff': 1.9222000000002765e-05}, {'diff': 1.915299999999745e-0...</msg>
<status status="PASS" starttime="20201030 15:55:22.902" endtime="20201030 15:55:22.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:22.909" level="INFO">${ACCURACY} = {'diff': [1.9471999999999545e-05, 1.8722000000002265e-05, 1.9264000000001474e-05, 1.9236000000002335e-05, 1.9222000000002765e-05, 1.915299999999745e-05, 1.938899999999813e-05, 1.865300000000042e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:55:22.906" endtime="20201030 15:55:22.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.913" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 15:55:22.912" endtime="20201030 15:55:22.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.916" level="INFO">VALUE: [1.9471999999999545e-05, 1.8722000000002265e-05, 1.9264000000001474e-05, 1.9236000000002335e-05, 1.9222000000002765e-05, 1.915299999999745e-05, 1.938899999999813e-05, 1.865300000000042e-05, 1.894499999999938e-05, 1.8999999999998185e-05, 1.8971999999999045e-05, 1.94029999999977e-05, 1.940300000000117e-05, 1.861099999999824e-05, 1.9457999999999975e-05, 1.9041999999996895e-05, 1.866699999999999e-05, 1.937499999999856e-05, 1.88890000000011e-05, 1.9361999999998464e-05, 1.9097999999998644e-05, 1.9084000000002543e-05, 1.943100000000031e-05, 1.8792000000000114e-05, 1.9444000000000405e-05, 1.929100000000114e-05, 1.881899999999978e-05, 1.9401999999998226e-05, 1.9235999999998865e-05, 1.854100000000039e-05, 1.9444000000000405e-05, 1.90829999999996e-05, 1.9222000000002765e-05, 1.9042000000000364e-05, 1.9278000000001044e-05, 1.8749999999997935e-05, 1.940300000000117e-05, 1.927700000000157e-05, 1.933299999999985e-05, 1.8583999999998574e-05, 1.855499999999996e-05, 1.9235999999998865e-05, 1.904100000000089e-05, 1.881899999999978e-05, 1.886099999999849e-05, 1.9277999999997575e-05, 1.9264000000001474e-05, 1.865300000000042e-05, 1.8750000000001404e-05, 1.8721999999998795e-05]</msg>
<status status="PASS" starttime="20201030 15:55:22.914" endtime="20201030 15:55:22.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.910" endtime="20201030 15:55:22.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:22.921" endtime="20201030 15:55:22.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.919" endtime="20201030 15:55:22.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.918" endtime="20201030 15:55:22.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.558" endtime="20201030 15:55:22.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.557" endtime="20201030 15:55:22.941"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.950" endtime="20201030 15:55:22.968"></status>
</kw>
<msg timestamp="20201030 15:55:22.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.948" endtime="20201030 15:55:22.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.970" endtime="20201030 15:55:22.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.972" endtime="20201030 15:55:22.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.946" endtime="20201030 15:55:22.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.944" endtime="20201030 15:55:22.975"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.982" endtime="20201030 15:55:23.267"></status>
</kw>
<msg timestamp="20201030 15:55:23.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020140667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020160806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.980" endtime="20201030 15:55:23.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020140667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020160806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.272" endtime="20201030 15:55:23.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.280" endtime="20201030 15:55:23.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.978" endtime="20201030 15:55:23.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.975" endtime="20201030 15:55:23.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:23.286" level="INFO">${RESULT} = [{'diff': 2.013899999999888e-05}, {'diff': 2.047300000000002e-05}, {'diff': 1.9735999999999365e-05}, {'diff': 2.041700000000174e-05}, {'diff': 1.9735999999999365e-05}, {'diff': 2.0056000000000934e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:23.283" endtime="20201030 15:55:23.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:23.290" level="INFO">${ACCURACY} = {'diff': [2.013899999999888e-05, 2.047300000000002e-05, 1.9735999999999365e-05, 2.041700000000174e-05, 1.9735999999999365e-05, 2.0056000000000934e-05, 2.0097999999999644e-05, 1.9750000000002405e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:55:23.287" endtime="20201030 15:55:23.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.295" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 15:55:23.294" endtime="20201030 15:55:23.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.297" level="INFO">VALUE: [2.013899999999888e-05, 2.047300000000002e-05, 1.9735999999999365e-05, 2.041700000000174e-05, 1.9735999999999365e-05, 2.0056000000000934e-05, 2.0097999999999644e-05, 1.9750000000002405e-05, 2.022299999999977e-05, 2.0000000000002655e-05, 1.9763999999998505e-05, 1.9694000000000655e-05, 2.031899999999781e-05, 1.980500000000121e-05, 1.9972000000000045e-05, 2.0249999999999435e-05, 1.9708000000000225e-05, 1.9721999999999795e-05, 2.0486000000000115e-05, 2.0457999999997506e-05, 2.0207999999997256e-05, 1.9985999999999615e-05, 1.9791999999997645e-05, 1.984699999999992e-05, 1.9735999999999365e-05, 1.954100000000139e-05, 2.009700000000017e-05, 2.0235999999999865e-05, 1.9708000000000225e-05, 2.0056000000000934e-05, 1.9597999999999144e-05, 2.0320000000000754e-05, 2.016700000000149e-05, 1.969500000000013e-05, 2.0320000000000754e-05, 1.959699999999967e-05, 1.9806000000000684e-05, 2.016699999999802e-05, 1.9999999999999185e-05, 2.0027999999998325e-05, 2.034700000000042e-05, 2.043099999999784e-05, 2.0042000000001364e-05, 1.997299999999952e-05, 2.0070000000000504e-05, 2.016700000000149e-05, 2.036099999999999e-05, 2.018100000000106e-05, 2.047300000000002e-05, 2.0070000000000504e-05]</msg>
<status status="PASS" starttime="20201030 15:55:23.296" endtime="20201030 15:55:23.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.291" endtime="20201030 15:55:23.299"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:23.303" endtime="20201030 15:55:23.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.301" endtime="20201030 15:55:23.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.300" endtime="20201030 15:55:23.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.942" endtime="20201030 15:55:23.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.942" endtime="20201030 15:55:23.323"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.332" endtime="20201030 15:55:23.350"></status>
</kw>
<msg timestamp="20201030 15:55:23.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.330" endtime="20201030 15:55:23.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.351" endtime="20201030 15:55:23.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.354" endtime="20201030 15:55:23.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.328" endtime="20201030 15:55:23.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.326" endtime="20201030 15:55:23.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.363" endtime="20201030 15:55:23.649"></status>
</kw>
<msg timestamp="20201030 15:55:23.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019323847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019345056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.361" endtime="20201030 15:55:23.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019323847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019345056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.653" endtime="20201030 15:55:23.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.661" endtime="20201030 15:55:23.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.359" endtime="20201030 15:55:23.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.357" endtime="20201030 15:55:23.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:23.667" level="INFO">${RESULT} = [{'diff': 2.120899999999773e-05}, {'diff': 2.097300000000052e-05}, {'diff': 2.1000000000000185e-05}, {'diff': 2.087500000000006e-05}, {'diff': 2.1013999999999755e-05}, {'diff': 2.086100000000049e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:23.664" endtime="20201030 15:55:23.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:23.672" level="INFO">${ACCURACY} = {'diff': [2.120899999999773e-05, 2.097300000000052e-05, 2.1000000000000185e-05, 2.087500000000006e-05, 2.1013999999999755e-05, 2.086100000000049e-05, 2.112500000000031e-05, 2.102699999999985e-05, 2.13...</msg>
<status status="PASS" starttime="20201030 15:55:23.668" endtime="20201030 15:55:23.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.677" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 15:55:23.676" endtime="20201030 15:55:23.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.679" level="INFO">VALUE: [2.120899999999773e-05, 2.097300000000052e-05, 2.1000000000000185e-05, 2.087500000000006e-05, 2.1013999999999755e-05, 2.086100000000049e-05, 2.112500000000031e-05, 2.102699999999985e-05, 2.136100000000099e-05, 2.133299999999838e-05, 2.112500000000031e-05, 2.1457999999998506e-05, 2.1208000000001725e-05, 2.116699999999902e-05, 2.130499999999924e-05, 2.1165999999999546e-05, 2.112499999999684e-05, 2.105499999999899e-05, 2.0929999999998866e-05, 2.0527999999998825e-05, 2.116699999999902e-05, 2.1264000000000005e-05, 2.1236000000000865e-05, 2.145899999999798e-05, 2.116699999999902e-05, 2.069500000000113e-05, 2.058299999999763e-05, 2.1235999999997396e-05, 2.116699999999902e-05, 2.086100000000049e-05, 2.138900000000013e-05, 2.1486000000001115e-05, 2.093100000000181e-05, 2.0499999999999685e-05, 2.0584000000000574e-05, 2.1084000000001074e-05, 2.0805999999998215e-05, 2.111099999999727e-05, 2.143099999999884e-05, 2.1236000000000865e-05, 2.1014000000003225e-05, 2.0527999999998825e-05, 2.062499999999981e-05, 2.148700000000059e-05, 2.080499999999874e-05, 2.0513999999999255e-05, 2.1193999999998686e-05, 2.105500000000246e-05, 2.0986000000000615e-05, 2.1084000000001074e-05]</msg>
<status status="PASS" starttime="20201030 15:55:23.678" endtime="20201030 15:55:23.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.673" endtime="20201030 15:55:23.685"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:23.689" endtime="20201030 15:55:23.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.688" endtime="20201030 15:55:23.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.686" endtime="20201030 15:55:23.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.324" endtime="20201030 15:55:23.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.324" endtime="20201030 15:55:23.710"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.718" endtime="20201030 15:55:23.734"></status>
</kw>
<msg timestamp="20201030 15:55:23.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.717" endtime="20201030 15:55:23.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.736" endtime="20201030 15:55:23.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.738" endtime="20201030 15:55:23.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.714" endtime="20201030 15:55:23.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.712" endtime="20201030 15:55:23.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.747" endtime="20201030 15:55:24.036"></status>
</kw>
<msg timestamp="20201030 15:55:24.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019385139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019407208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.746" endtime="20201030 15:55:24.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019385139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019407208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.040" endtime="20201030 15:55:24.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.048" endtime="20201030 15:55:24.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.743" endtime="20201030 15:55:24.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.741" endtime="20201030 15:55:24.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:24.055" level="INFO">${RESULT} = [{'diff': 2.206899999999956e-05}, {'diff': 2.236099999999852e-05}, {'diff': 2.1707999999998756e-05}, {'diff': 2.2457999999999506e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.2180000000000116e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:24.051" endtime="20201030 15:55:24.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:24.059" level="INFO">${ACCURACY} = {'diff': [2.206899999999956e-05, 2.236099999999852e-05, 2.1707999999998756e-05, 2.2457999999999506e-05, 2.205499999999999e-05, 2.2180000000000116e-05, 2.187499999999759e-05, 2.1736000000001365e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:55:24.056" endtime="20201030 15:55:24.059"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.063" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 15:55:24.062" endtime="20201030 15:55:24.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.066" level="INFO">VALUE: [2.206899999999956e-05, 2.236099999999852e-05, 2.1707999999998756e-05, 2.2457999999999506e-05, 2.205499999999999e-05, 2.2180000000000116e-05, 2.187499999999759e-05, 2.1736000000001365e-05, 2.204100000000042e-05, 2.1986000000001615e-05, 2.2334000000002324e-05, 2.1943999999999436e-05, 2.1805999999999215e-05, 2.1722000000001795e-05, 2.1819999999998785e-05, 2.241700000000027e-05, 2.243099999999984e-05, 2.198700000000109e-05, 2.2472000000002545e-05, 2.168099999999909e-05, 2.1986000000001615e-05, 2.188900000000063e-05, 2.236100000000199e-05, 2.187500000000106e-05, 2.1721999999998326e-05, 2.236099999999852e-05, 2.19030000000002e-05, 2.184700000000192e-05, 2.2264000000001005e-05, 2.2041999999999895e-05, 2.1722000000001795e-05, 2.194499999999891e-05, 2.17090000000017e-05, 2.248700000000159e-05, 2.193099999999934e-05, 2.181899999999931e-05, 2.161099999999777e-05, 2.20969999999987e-05, 2.1847999999997925e-05, 2.1805999999999215e-05, 2.154099999999992e-05, 2.1721999999998326e-05, 2.20969999999987e-05, 2.1985999999998146e-05, 2.170899999999823e-05, 2.1679999999999616e-05, 2.155499999999949e-05, 2.2485999999998646e-05, 2.2236000000001865e-05, 2.165299999999995e-05]</msg>
<status status="PASS" starttime="20201030 15:55:24.064" endtime="20201030 15:55:24.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.060" endtime="20201030 15:55:24.067"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:24.071" endtime="20201030 15:55:24.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.069" endtime="20201030 15:55:24.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.068" endtime="20201030 15:55:24.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.711" endtime="20201030 15:55:24.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.710" endtime="20201030 15:55:24.091"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.100" endtime="20201030 15:55:24.118"></status>
</kw>
<msg timestamp="20201030 15:55:24.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.098" endtime="20201030 15:55:24.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.120" endtime="20201030 15:55:24.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.122" endtime="20201030 15:55:24.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.096" endtime="20201030 15:55:24.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.094" endtime="20201030 15:55:24.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.131" endtime="20201030 15:55:24.416"></status>
</kw>
<msg timestamp="20201030 15:55:24.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020288764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020312139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.130" endtime="20201030 15:55:24.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020288764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020312139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.421" endtime="20201030 15:55:24.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.429" endtime="20201030 15:55:24.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.127" endtime="20201030 15:55:24.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.125" endtime="20201030 15:55:24.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:24.435" level="INFO">${RESULT} = [{'diff': 2.337499999999909e-05}, {'diff': 2.2915999999997827e-05}, {'diff': 2.2971999999999576e-05}, {'diff': 2.287500000000206e-05}, {'diff': 2.2680000000000616e-05}, {'diff': 2.2944000000000436e-05...</msg>
<status status="PASS" starttime="20201030 15:55:24.432" endtime="20201030 15:55:24.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:24.439" level="INFO">${ACCURACY} = {'diff': [2.337499999999909e-05, 2.2915999999997827e-05, 2.2971999999999576e-05, 2.287500000000206e-05, 2.2680000000000616e-05, 2.2944000000000436e-05, 2.286100000000249e-05, 2.256900000000006e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:55:24.436" endtime="20201030 15:55:24.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.444" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 15:55:24.443" endtime="20201030 15:55:24.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.446" level="INFO">VALUE: [2.337499999999909e-05, 2.2915999999997827e-05, 2.2971999999999576e-05, 2.287500000000206e-05, 2.2680000000000616e-05, 2.2944000000000436e-05, 2.286100000000249e-05, 2.256900000000006e-05, 2.2792000000000645e-05, 2.2680000000000616e-05, 2.2944000000000436e-05, 2.2749999999998466e-05, 2.3056000000000465e-05, 2.316700000000102e-05, 2.261100000000224e-05, 2.338899999999866e-05, 2.3249999999998966e-05, 2.316700000000102e-05, 2.3333999999999855e-05, 2.291700000000077e-05, 2.2792000000000645e-05, 2.293100000000034e-05, 2.347299999999955e-05, 2.3028000000001325e-05, 2.3000000000002185e-05, 2.343100000000084e-05, 2.2721999999999326e-05, 2.3026999999998382e-05, 2.3333999999999855e-05, 2.266699999999705e-05, 2.341700000000127e-05, 2.2500000000001685e-05, 2.3056000000000465e-05, 2.2777999999997606e-05, 2.276300000000203e-05, 2.2735999999998896e-05, 2.25969999999992e-05, 2.2542000000000395e-05, 2.305500000000099e-05, 2.312499999999884e-05, 2.337500000000256e-05, 2.2665999999997577e-05, 2.3415999999998327e-05, 2.3458000000000506e-05, 2.2750000000001935e-05, 2.2736000000002365e-05, 2.315300000000145e-05, 2.3499999999999216e-05, 2.287499999999859e-05, 2.334699999999995e-05]</msg>
<status status="PASS" starttime="20201030 15:55:24.445" endtime="20201030 15:55:24.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.440" endtime="20201030 15:55:24.448"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:24.452" endtime="20201030 15:55:24.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.450" endtime="20201030 15:55:24.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.449" endtime="20201030 15:55:24.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.092" endtime="20201030 15:55:24.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.092" endtime="20201030 15:55:24.473"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.482" endtime="20201030 15:55:24.500"></status>
</kw>
<msg timestamp="20201030 15:55:24.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.481" endtime="20201030 15:55:24.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.501" endtime="20201030 15:55:24.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.504" endtime="20201030 15:55:24.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.478" endtime="20201030 15:55:24.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.475" endtime="20201030 15:55:24.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.512" endtime="20201030 15:55:24.798"></status>
</kw>
<msg timestamp="20201030 15:55:24.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020490306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020514264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.511" endtime="20201030 15:55:24.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020490306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020514264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.802" endtime="20201030 15:55:24.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.811" endtime="20201030 15:55:24.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.508" endtime="20201030 15:55:24.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.507" endtime="20201030 15:55:24.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:24.817" level="INFO">${RESULT} = [{'diff': 2.3958000000001006e-05}, {'diff': 2.4236000000000396e-05}, {'diff': 2.4249999999999966e-05}, {'diff': 2.3972000000000576e-05}, {'diff': 2.386100000000002e-05}, {'diff': 2.3736000000003366e-0...</msg>
<status status="PASS" starttime="20201030 15:55:24.814" endtime="20201030 15:55:24.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:24.822" level="INFO">${ACCURACY} = {'diff': [2.3958000000001006e-05, 2.4236000000000396e-05, 2.4249999999999966e-05, 2.3972000000000576e-05, 2.386100000000002e-05, 2.3736000000003366e-05, 2.411100000000027e-05, 2.3972000000000576e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:24.818" endtime="20201030 15:55:24.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.827" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 15:55:24.826" endtime="20201030 15:55:24.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.829" level="INFO">VALUE: [2.3958000000001006e-05, 2.4236000000000396e-05, 2.4249999999999966e-05, 2.3972000000000576e-05, 2.386100000000002e-05, 2.3736000000003366e-05, 2.411100000000027e-05, 2.3972000000000576e-05, 2.3999999999999716e-05, 2.3693999999997717e-05, 2.40970000000007e-05, 2.418100000000159e-05, 2.366700000000152e-05, 2.362499999999934e-05, 2.4027999999998856e-05, 2.3792000000001645e-05, 2.40970000000007e-05, 2.3735999999999896e-05, 2.418099999999812e-05, 2.39169999999983e-05, 2.4471999999997607e-05, 2.39169999999983e-05, 2.3722000000000326e-05, 2.4222000000000826e-05, 2.366700000000152e-05, 2.4277999999999106e-05, 2.4513999999999786e-05, 2.3986000000000146e-05, 2.3834000000000355e-05, 2.3570000000000535e-05, 2.416700000000202e-05, 2.4500000000000216e-05, 2.3929999999998397e-05, 2.4180000000002116e-05, 2.445900000000098e-05, 2.4500000000000216e-05, 2.356900000000106e-05, 2.362499999999934e-05, 2.436100000000052e-05, 2.4222000000000826e-05, 2.3665999999998577e-05, 2.3694000000001186e-05, 2.3999999999999716e-05, 2.4472000000001076e-05, 2.4443999999998467e-05, 2.394500000000091e-05, 2.4208000000001256e-05, 2.3680000000001616e-05, 2.430500000000224e-05, 2.3820000000000785e-05]</msg>
<status status="PASS" starttime="20201030 15:55:24.828" endtime="20201030 15:55:24.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.823" endtime="20201030 15:55:24.830"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:24.834" endtime="20201030 15:55:24.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.832" endtime="20201030 15:55:24.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.831" endtime="20201030 15:55:24.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.474" endtime="20201030 15:55:24.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.473" endtime="20201030 15:55:24.855"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.863" endtime="20201030 15:55:24.881"></status>
</kw>
<msg timestamp="20201030 15:55:24.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.862" endtime="20201030 15:55:24.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.883" endtime="20201030 15:55:24.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.885" endtime="20201030 15:55:24.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.859" endtime="20201030 15:55:24.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.857" endtime="20201030 15:55:24.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.894" endtime="20201030 15:55:25.180"></status>
</kw>
<msg timestamp="20201030 15:55:25.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019430111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019454986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.892" endtime="20201030 15:55:25.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019430111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019454986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.184" endtime="20201030 15:55:25.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.192" endtime="20201030 15:55:25.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.890" endtime="20201030 15:55:25.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.888" endtime="20201030 15:55:25.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:25.199" level="INFO">${RESULT} = [{'diff': 2.487500000000059e-05}, {'diff': 2.4554999999999022e-05}, {'diff': 2.5166000000000077e-05}, {'diff': 2.5235999999997927e-05}, {'diff': 2.5236000000001396e-05}, {'diff': 2.458300000000163e-05...</msg>
<status status="PASS" starttime="20201030 15:55:25.196" endtime="20201030 15:55:25.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:25.203" level="INFO">${ACCURACY} = {'diff': [2.487500000000059e-05, 2.4554999999999022e-05, 2.5166000000000077e-05, 2.5235999999997927e-05, 2.5236000000001396e-05, 2.458300000000163e-05, 2.4582999999998162e-05, 2.519500000000216e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:55:25.200" endtime="20201030 15:55:25.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.207" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 15:55:25.206" endtime="20201030 15:55:25.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.210" level="INFO">VALUE: [2.487500000000059e-05, 2.4554999999999022e-05, 2.5166000000000077e-05, 2.5235999999997927e-05, 2.5236000000001396e-05, 2.458300000000163e-05, 2.4582999999998162e-05, 2.519500000000216e-05, 2.5069999999998566e-05, 2.493100000000234e-05, 2.5346999999998482e-05, 2.5291999999999676e-05, 2.4570000000001535e-05, 2.461100000000077e-05, 2.469499999999819e-05, 2.4777000000000132e-05, 2.5472000000002076e-05, 2.4527999999999356e-05, 2.494500000000191e-05, 2.488900000000016e-05, 2.4819999999998316e-05, 2.466699999999905e-05, 2.4860999999997552e-05, 2.473700000000037e-05, 2.465299999999948e-05, 2.462500000000034e-05, 2.511100000000127e-05, 2.486100000000102e-05, 2.4721999999997857e-05, 2.4986000000001146e-05, 2.5068999999999092e-05, 2.5457999999999037e-05, 2.5291000000000202e-05, 2.5486000000001646e-05, 2.4679999999999147e-05, 2.4750000000000466e-05, 2.486100000000102e-05, 2.515299999999998e-05, 2.5179999999999647e-05, 2.455500000000249e-05, 2.508300000000213e-05, 2.4777999999999606e-05, 2.463899999999991e-05, 2.4846999999997982e-05, 2.466699999999905e-05, 2.513899999999694e-05, 2.515299999999998e-05, 2.4986000000001146e-05, 2.5500000000001216e-05, 2.5250000000000966e-05]</msg>
<status status="PASS" starttime="20201030 15:55:25.208" endtime="20201030 15:55:25.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.204" endtime="20201030 15:55:25.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:25.215" endtime="20201030 15:55:25.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.213" endtime="20201030 15:55:25.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.212" endtime="20201030 15:55:25.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.855" endtime="20201030 15:55:25.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.855" endtime="20201030 15:55:25.235"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.244" endtime="20201030 15:55:25.263"></status>
</kw>
<msg timestamp="20201030 15:55:25.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.242" endtime="20201030 15:55:25.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.264" endtime="20201030 15:55:25.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.267" endtime="20201030 15:55:25.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.240" endtime="20201030 15:55:25.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.238" endtime="20201030 15:55:25.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.276" endtime="20201030 15:55:25.562"></status>
</kw>
<msg timestamp="20201030 15:55:25.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020394917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020421333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.274" endtime="20201030 15:55:25.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020394917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020421333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.566" endtime="20201030 15:55:25.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.574" endtime="20201030 15:55:25.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.271" endtime="20201030 15:55:25.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.270" endtime="20201030 15:55:25.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:25.581" level="INFO">${RESULT} = [{'diff': 2.6416000000001327e-05}, {'diff': 2.5735999999998427e-05}, {'diff': 2.6360999999999052e-05}, {'diff': 2.5707999999999287e-05}, {'diff': 2.5791000000000702e-05}, {'diff': 2.6110999999998802e-...</msg>
<status status="PASS" starttime="20201030 15:55:25.578" endtime="20201030 15:55:25.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:25.585" level="INFO">${ACCURACY} = {'diff': [2.6416000000001327e-05, 2.5735999999998427e-05, 2.6360999999999052e-05, 2.5707999999999287e-05, 2.5791000000000702e-05, 2.6110999999998802e-05, 2.5791000000000702e-05, 2.5916000000000827e-05...</msg>
<status status="PASS" starttime="20201030 15:55:25.582" endtime="20201030 15:55:25.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.589" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 15:55:25.588" endtime="20201030 15:55:25.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.592" level="INFO">VALUE: [2.6416000000001327e-05, 2.5735999999998427e-05, 2.6360999999999052e-05, 2.5707999999999287e-05, 2.5791000000000702e-05, 2.6110999999998802e-05, 2.5791000000000702e-05, 2.5916000000000827e-05, 2.5610999999998302e-05, 2.566700000000005e-05, 2.586100000000202e-05, 2.5999999999998247e-05, 2.6292000000000676e-05, 2.641699999999733e-05, 2.643100000000037e-05, 2.5943999999999967e-05, 2.6360999999999052e-05, 2.645899999999951e-05, 2.5750000000001466e-05, 2.5833999999998886e-05, 2.5707999999999287e-05, 2.616700000000055e-05, 2.6278000000001106e-05, 2.6098000000002175e-05, 2.618100000000012e-05, 2.5848000000001925e-05, 2.5888000000001687e-05, 2.622299999999883e-05, 2.572299999999833e-05, 2.615300000000098e-05, 2.5985999999998677e-05, 2.566700000000005e-05, 2.6306000000000246e-05, 2.6292000000000676e-05, 2.5805000000000272e-05, 2.5930000000000397e-05, 2.6304999999997303e-05, 2.6346999999999482e-05, 2.6221999999999357e-05, 2.6096999999999232e-05, 2.6485999999999177e-05, 2.6096999999999232e-05, 2.5916000000000827e-05, 2.562500000000134e-05, 2.5957999999999537e-05, 2.5750000000001466e-05, 2.566700000000005e-05, 2.6194000000000217e-05, 2.6444000000000467e-05, 2.565300000000048e-05]</msg>
<status status="PASS" starttime="20201030 15:55:25.591" endtime="20201030 15:55:25.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.586" endtime="20201030 15:55:25.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:25.598" endtime="20201030 15:55:25.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.596" endtime="20201030 15:55:25.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.595" endtime="20201030 15:55:25.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.236" endtime="20201030 15:55:25.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.235" endtime="20201030 15:55:25.619"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.627" endtime="20201030 15:55:25.644"></status>
</kw>
<msg timestamp="20201030 15:55:25.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.626" endtime="20201030 15:55:25.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.646" endtime="20201030 15:55:25.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.648" endtime="20201030 15:55:25.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.623" endtime="20201030 15:55:25.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.621" endtime="20201030 15:55:25.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.657" endtime="20201030 15:55:25.942"></status>
</kw>
<msg timestamp="20201030 15:55:25.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019504306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01953175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:25.655" endtime="20201030 15:55:25.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019504306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01953175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:25.946" endtime="20201030 15:55:25.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.954" endtime="20201030 15:55:25.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.653" endtime="20201030 15:55:25.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.651" endtime="20201030 15:55:25.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:25.961" level="INFO">${RESULT} = [{'diff': 2.7444000000001467e-05}, {'diff': 2.69170000000013e-05}, {'diff': 2.694499999999697e-05}, {'diff': 2.7070000000000566e-05}, {'diff': 2.741699999999833e-05}, {'diff': 2.7097000000000232e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:25.957" endtime="20201030 15:55:25.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:25.966" level="INFO">${ACCURACY} = {'diff': [2.7444000000001467e-05, 2.69170000000013e-05, 2.694499999999697e-05, 2.7070000000000566e-05, 2.741699999999833e-05, 2.7097000000000232e-05, 2.694500000000044e-05, 2.7278000000002106e-05, 2.6...</msg>
<status status="PASS" starttime="20201030 15:55:25.962" endtime="20201030 15:55:25.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.970" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 15:55:25.969" endtime="20201030 15:55:25.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.972" level="INFO">VALUE: [2.7444000000001467e-05, 2.69170000000013e-05, 2.694499999999697e-05, 2.7070000000000566e-05, 2.741699999999833e-05, 2.7097000000000232e-05, 2.694500000000044e-05, 2.7278000000002106e-05, 2.693100000000087e-05, 2.6514000000001786e-05, 2.669500000000019e-05, 2.7124999999999372e-05, 2.7347999999999956e-05, 2.715299999999851e-05, 2.6999999999999247e-05, 2.716700000000155e-05, 2.6583999999999636e-05, 2.6556000000000496e-05, 2.687500000000259e-05, 2.698699999999915e-05, 2.6764000000002036e-05, 2.7124999999999372e-05, 2.7138999999998942e-05, 2.662500000000234e-05, 2.6901999999998788e-05, 2.7040999999998483e-05, 2.6555000000001022e-05, 2.6541000000001452e-05, 2.7513999999999317e-05, 2.7486000000000177e-05, 2.6792000000001176e-05, 2.7374999999999622e-05, 2.6499999999998747e-05, 2.6985999999999677e-05, 2.6874999999999122e-05, 2.7235999999999927e-05, 2.7486000000000177e-05, 2.6749999999998997e-05, 2.7110999999999802e-05, 2.711100000000327e-05, 2.6583000000000162e-05, 2.740300000000223e-05, 2.6999999999999247e-05, 2.686100000000302e-05, 2.6735999999999427e-05, 2.6985999999999677e-05, 2.668100000000062e-05, 2.6749999999998997e-05, 2.716700000000155e-05, 2.6972000000000107e-05]</msg>
<status status="PASS" starttime="20201030 15:55:25.971" endtime="20201030 15:55:25.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.966" endtime="20201030 15:55:25.974"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:25.977" endtime="20201030 15:55:25.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.976" endtime="20201030 15:55:25.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.975" endtime="20201030 15:55:25.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.619" endtime="20201030 15:55:25.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.619" endtime="20201030 15:55:25.998"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.007" endtime="20201030 15:55:26.022"></status>
</kw>
<msg timestamp="20201030 15:55:26.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.005" endtime="20201030 15:55:26.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.024" endtime="20201030 15:55:26.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.026" endtime="20201030 15:55:26.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.003" endtime="20201030 15:55:26.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.001" endtime="20201030 15:55:26.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.035" endtime="20201030 15:55:26.324"></status>
</kw>
<msg timestamp="20201030 15:55:26.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019548458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019576944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.034" endtime="20201030 15:55:26.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019548458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019576944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.328" endtime="20201030 15:55:26.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.336" endtime="20201030 15:55:26.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.031" endtime="20201030 15:55:26.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.029" endtime="20201030 15:55:26.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:26.343" level="INFO">${RESULT} = [{'diff': 2.8485999999997708e-05}, {'diff': 2.7749999999999997e-05}, {'diff': 2.7624999999999872e-05}, {'diff': 2.8250000000000497e-05}, {'diff': 2.8013999999999817e-05}, {'diff': 2.8152999999999512e-...</msg>
<status status="PASS" starttime="20201030 15:55:26.340" endtime="20201030 15:55:26.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:26.347" level="INFO">${ACCURACY} = {'diff': [2.8485999999997708e-05, 2.7749999999999997e-05, 2.7624999999999872e-05, 2.8250000000000497e-05, 2.8013999999999817e-05, 2.8152999999999512e-05, 2.8304999999999303e-05, 2.8485999999997708e-05...</msg>
<status status="PASS" starttime="20201030 15:55:26.344" endtime="20201030 15:55:26.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.351" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 15:55:26.350" endtime="20201030 15:55:26.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.354" level="INFO">VALUE: [2.8485999999997708e-05, 2.7749999999999997e-05, 2.7624999999999872e-05, 2.8250000000000497e-05, 2.8013999999999817e-05, 2.8152999999999512e-05, 2.8304999999999303e-05, 2.8485999999997708e-05, 2.7915999999999358e-05, 2.8472000000001607e-05, 2.7834000000000886e-05, 2.7861000000000552e-05, 2.8375000000000622e-05, 2.84309999999989e-05, 2.7986000000000677e-05, 2.791699999999883e-05, 2.8097000000001232e-05, 2.818100000000212e-05, 2.7805999999998277e-05, 2.7861000000000552e-05, 2.7707999999997818e-05, 2.8041999999998957e-05, 2.8097000000001232e-05, 2.8111000000000802e-05, 2.7652999999999012e-05, 2.8375000000000622e-05, 2.819500000000169e-05, 2.820900000000126e-05, 2.8375000000000622e-05, 2.8250000000000497e-05, 2.7929999999998928e-05, 2.7500000000003216e-05, 2.772300000000033e-05, 2.8000000000000247e-05, 2.8221999999997888e-05, 2.7861000000000552e-05, 2.7888999999999692e-05, 2.8111000000000802e-05, 2.7735999999996958e-05, 2.8361000000001052e-05, 2.84309999999989e-05, 2.791699999999883e-05, 2.7513999999999317e-05, 2.8236000000000927e-05, 2.7986000000000677e-05, 2.7736000000000427e-05, 2.8096999999997763e-05, 2.793100000000187e-05, 2.7624999999999872e-05, 2.8291999999999207e-05]</msg>
<status status="PASS" starttime="20201030 15:55:26.352" endtime="20201030 15:55:26.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.348" endtime="20201030 15:55:26.355"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:26.359" endtime="20201030 15:55:26.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.357" endtime="20201030 15:55:26.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.356" endtime="20201030 15:55:26.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.999" endtime="20201030 15:55:26.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.998" endtime="20201030 15:55:26.379"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.388" endtime="20201030 15:55:26.405"></status>
</kw>
<msg timestamp="20201030 15:55:26.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.386" endtime="20201030 15:55:26.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.407" endtime="20201030 15:55:26.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.410" endtime="20201030 15:55:26.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.384" endtime="20201030 15:55:26.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.382" endtime="20201030 15:55:26.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.419" endtime="20201030 15:55:26.705"></status>
</kw>
<msg timestamp="20201030 15:55:26.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020182972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020212278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.417" endtime="20201030 15:55:26.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020182972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020212278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.709" endtime="20201030 15:55:26.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.717" endtime="20201030 15:55:26.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.415" endtime="20201030 15:55:26.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.413" endtime="20201030 15:55:26.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:26.724" level="INFO">${RESULT} = [{'diff': 2.9305999999999777e-05}, {'diff': 2.9417000000000332e-05}, {'diff': 2.898700000000115e-05}, {'diff': 2.8791999999999707e-05}, {'diff': 2.8903000000000262e-05}, {'diff': 2.9014000000000817e-0...</msg>
<status status="PASS" starttime="20201030 15:55:26.721" endtime="20201030 15:55:26.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:26.728" level="INFO">${ACCURACY} = {'diff': [2.9305999999999777e-05, 2.9417000000000332e-05, 2.898700000000115e-05, 2.8791999999999707e-05, 2.8903000000000262e-05, 2.9014000000000817e-05, 2.9443999999999998e-05, 2.8653000000000012e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:26.725" endtime="20201030 15:55:26.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.733" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 15:55:26.732" endtime="20201030 15:55:26.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.735" level="INFO">VALUE: [2.9305999999999777e-05, 2.9417000000000332e-05, 2.898700000000115e-05, 2.8791999999999707e-05, 2.8903000000000262e-05, 2.9014000000000817e-05, 2.9443999999999998e-05, 2.8653000000000012e-05, 2.9556000000000027e-05, 2.948699999999818e-05, 2.9153000000000512e-05, 2.8846999999998513e-05, 2.9180000000000178e-05, 2.8971999999998638e-05, 2.8999999999997778e-05, 2.8679999999999678e-05, 2.8597000000001732e-05, 2.8943999999999498e-05, 2.8986000000001677e-05, 2.8750000000000997e-05, 2.9041000000000483e-05, 2.9305999999999777e-05, 2.8735999999997958e-05, 2.9082999999999193e-05, 2.9139000000000942e-05, 2.9041999999999957e-05, 2.9083999999998666e-05, 2.8568999999999123e-05, 2.8541999999999457e-05, 2.9221999999998888e-05, 2.8889000000000692e-05, 2.9346999999999013e-05, 2.8596999999998263e-05, 2.89309999999994e-05, 2.9221999999998888e-05, 2.8833999999998416e-05, 2.9417000000000332e-05, 2.9207999999999318e-05, 2.9082999999999193e-05, 2.9111000000001802e-05, 2.9417000000000332e-05, 2.9041999999999957e-05, 2.8653000000000012e-05, 2.947300000000208e-05, 2.9250000000001497e-05, 2.8555000000003022e-05, 2.9221999999998888e-05, 2.9250000000001497e-05, 2.8625000000000872e-05, 2.9417000000000332e-05]</msg>
<status status="PASS" starttime="20201030 15:55:26.734" endtime="20201030 15:55:26.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.729" endtime="20201030 15:55:26.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:26.741" endtime="20201030 15:55:26.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.739" endtime="20201030 15:55:26.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.738" endtime="20201030 15:55:26.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.380" endtime="20201030 15:55:26.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.380" endtime="20201030 15:55:26.761"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.770" endtime="20201030 15:55:26.788"></status>
</kw>
<msg timestamp="20201030 15:55:26.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.768" endtime="20201030 15:55:26.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.789" endtime="20201030 15:55:26.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.792" endtime="20201030 15:55:26.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.766" endtime="20201030 15:55:26.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.764" endtime="20201030 15:55:26.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.801" endtime="20201030 15:55:27.086"></status>
</kw>
<msg timestamp="20201030 15:55:27.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019337986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019367611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.799" endtime="20201030 15:55:27.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019337986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019367611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.090" endtime="20201030 15:55:27.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.099" endtime="20201030 15:55:27.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.797" endtime="20201030 15:55:27.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.795" endtime="20201030 15:55:27.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:27.105" level="INFO">${RESULT} = [{'diff': 2.9624999999998403e-05}, {'diff': 2.9610999999998833e-05}, {'diff': 3.0277999999998167e-05}, {'diff': 2.9750000000001997e-05}, {'diff': 2.9986000000002677e-05}, {'diff': 2.9721999999999388e-...</msg>
<status status="PASS" starttime="20201030 15:55:27.102" endtime="20201030 15:55:27.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:27.110" level="INFO">${ACCURACY} = {'diff': [2.9624999999998403e-05, 2.9610999999998833e-05, 3.0277999999998167e-05, 2.9750000000001997e-05, 2.9986000000002677e-05, 2.9721999999999388e-05, 3.0027999999997917e-05, 2.9874999999998653e-05...</msg>
<status status="PASS" starttime="20201030 15:55:27.106" endtime="20201030 15:55:27.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.114" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 15:55:27.113" endtime="20201030 15:55:27.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.117" level="INFO">VALUE: [2.9624999999998403e-05, 2.9610999999998833e-05, 3.0277999999998167e-05, 2.9750000000001997e-05, 2.9986000000002677e-05, 2.9721999999999388e-05, 3.0027999999997917e-05, 2.9874999999998653e-05, 2.9556000000000027e-05, 2.9639000000001442e-05, 3.0513999999998848e-05, 3.0082999999996723e-05, 3.0360999999999583e-05, 3.0110999999999333e-05, 2.972300000000233e-05, 3.022299999999936e-05, 3.0056000000000527e-05, 3.020899999999979e-05, 2.9639000000001442e-05, 2.9790999999997764e-05, 3.0499999999999278e-05, 2.972299999999886e-05, 3.0402000000002288e-05, 2.9541000000000983e-05, 3.0166000000001608e-05, 3.0360999999999583e-05, 2.9819000000000373e-05, 2.9764000000001567e-05, 2.9680000000000678e-05, 3.0069000000000623e-05, 3.041599999999839e-05, 3.0417000000001332e-05, 3.0361000000003052e-05, 2.9735999999998958e-05, 2.9999999999998778e-05, 3.0236000000002927e-05, 2.9707999999999818e-05, 2.9681000000000152e-05, 2.9916999999997362e-05, 3.0472000000000138e-05, 2.9681000000000152e-05, 2.9832999999999943e-05, 2.994499999999997e-05, 3.0181000000000652e-05, 3.0041999999997487e-05, 2.9792000000000707e-05, 3.0472000000000138e-05, 2.969500000000319e-05, 2.9792000000000707e-05, 2.9916999999997362e-05]</msg>
<status status="PASS" starttime="20201030 15:55:27.115" endtime="20201030 15:55:27.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.111" endtime="20201030 15:55:27.118"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:27.122" endtime="20201030 15:55:27.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.120" endtime="20201030 15:55:27.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.119" endtime="20201030 15:55:27.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.762" endtime="20201030 15:55:27.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.762" endtime="20201030 15:55:27.142"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.151" endtime="20201030 15:55:27.167"></status>
</kw>
<msg timestamp="20201030 15:55:27.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.150" endtime="20201030 15:55:27.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.169" endtime="20201030 15:55:27.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.171" endtime="20201030 15:55:27.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.147" endtime="20201030 15:55:27.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.145" endtime="20201030 15:55:27.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.180" endtime="20201030 15:55:27.468"></status>
</kw>
<msg timestamp="20201030 15:55:27.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019434444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019465569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.179" endtime="20201030 15:55:27.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019434444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019465569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.472" endtime="20201030 15:55:27.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.480" endtime="20201030 15:55:27.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.176" endtime="20201030 15:55:27.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.174" endtime="20201030 15:55:27.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:27.487" level="INFO">${RESULT} = [{'diff': 3.11249999999999e-05}, {'diff': 3.0597999999999737e-05}, {'diff': 3.095800000000107e-05}, {'diff': 3.125000000000003e-05}, {'diff': 3.142999999999896e-05}, {'diff': 3.138899999999972e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:27.483" endtime="20201030 15:55:27.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:27.491" level="INFO">${ACCURACY} = {'diff': [3.11249999999999e-05, 3.0597999999999737e-05, 3.095800000000107e-05, 3.125000000000003e-05, 3.142999999999896e-05, 3.138899999999972e-05, 3.134700000000101e-05, 3.088900000000269e-05, 3.1276...</msg>
<status status="PASS" starttime="20201030 15:55:27.488" endtime="20201030 15:55:27.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.495" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 15:55:27.494" endtime="20201030 15:55:27.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.498" level="INFO">VALUE: [3.11249999999999e-05, 3.0597999999999737e-05, 3.095800000000107e-05, 3.125000000000003e-05, 3.142999999999896e-05, 3.138899999999972e-05, 3.134700000000101e-05, 3.088900000000269e-05, 3.1276999999999694e-05, 3.119400000000175e-05, 3.097200000000064e-05, 3.054100000000198e-05, 3.148600000000071e-05, 3.0554999999998084e-05, 3.066699999999811e-05, 3.07639999999991e-05, 3.065299999999854e-05, 3.093099999999793e-05, 3.150000000000028e-05, 3.138899999999972e-05, 3.143099999999843e-05, 3.097200000000064e-05, 3.147200000000114e-05, 3.087499999999965e-05, 3.111100000000033e-05, 3.097200000000064e-05, 3.1360999999997113e-05, 3.141699999999886e-05, 3.059700000000026e-05, 3.080599999999781e-05, 3.067999999999821e-05, 3.073699999999943e-05, 3.1054999999998584e-05, 3.072299999999986e-05, 3.0540999999998514e-05, 3.147200000000114e-05, 3.1276999999999694e-05, 3.144399999999853e-05, 3.123599999999699e-05, 3.1040999999999014e-05, 3.074999999999953e-05, 3.0554999999998084e-05, 3.066700000000158e-05, 3.070800000000082e-05, 3.125000000000003e-05, 3.144399999999853e-05, 3.134700000000101e-05, 3.055600000000103e-05, 3.118100000000165e-05, 3.1054999999998584e-05]</msg>
<status status="PASS" starttime="20201030 15:55:27.496" endtime="20201030 15:55:27.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.492" endtime="20201030 15:55:27.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:27.503" endtime="20201030 15:55:27.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.501" endtime="20201030 15:55:27.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.500" endtime="20201030 15:55:27.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.143" endtime="20201030 15:55:27.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.143" endtime="20201030 15:55:27.523"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.532" endtime="20201030 15:55:27.549"></status>
</kw>
<msg timestamp="20201030 15:55:27.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.531" endtime="20201030 15:55:27.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.550" endtime="20201030 15:55:27.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.553" endtime="20201030 15:55:27.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.528" endtime="20201030 15:55:27.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.526" endtime="20201030 15:55:27.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.562" endtime="20201030 15:55:27.848"></status>
</kw>
<msg timestamp="20201030 15:55:27.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020648431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020680167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.560" endtime="20201030 15:55:27.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020648431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020680167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.852" endtime="20201030 15:55:27.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.860" endtime="20201030 15:55:27.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.558" endtime="20201030 15:55:27.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.556" endtime="20201030 15:55:27.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:27.866" level="INFO">${RESULT} = [{'diff': 3.173600000000096e-05}, {'diff': 3.2374999999997683e-05}, {'diff': 3.165299999999954e-05}, {'diff': 3.191699999999936e-05}, {'diff': 3.187500000000065e-05}, {'diff': 3.244399999999953e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:27.863" endtime="20201030 15:55:27.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:27.871" level="INFO">${ACCURACY} = {'diff': [3.173600000000096e-05, 3.2374999999997683e-05, 3.165299999999954e-05, 3.191699999999936e-05, 3.187500000000065e-05, 3.244399999999953e-05, 3.1540999999999514e-05, 3.197200000000164e-05, 3.19...</msg>
<status status="PASS" starttime="20201030 15:55:27.867" endtime="20201030 15:55:27.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.875" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 15:55:27.874" endtime="20201030 15:55:27.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.877" level="INFO">VALUE: [3.173600000000096e-05, 3.2374999999997683e-05, 3.165299999999954e-05, 3.191699999999936e-05, 3.187500000000065e-05, 3.244399999999953e-05, 3.1540999999999514e-05, 3.197200000000164e-05, 3.190200000000032e-05, 3.206999999999863e-05, 3.173599999999749e-05, 3.161100000000083e-05, 3.223600000000146e-05, 3.165299999999954e-05, 3.161100000000083e-05, 3.2110999999997863e-05, 3.192999999999946e-05, 3.180599999999881e-05, 3.154199999999899e-05, 3.22640000000006e-05, 3.229199999999974e-05, 3.236100000000158e-05, 3.193099999999893e-05, 3.191700000000283e-05, 3.181999999999838e-05, 3.222200000000189e-05, 3.199999999999731e-05, 3.237500000000115e-05, 3.165299999999954e-05, 3.2360999999998113e-05, 3.236100000000158e-05, 3.198599999999774e-05, 3.169499999999825e-05, 3.166699999999911e-05, 3.224999999999756e-05, 3.218100000000265e-05, 3.22640000000006e-05, 3.155500000000255e-05, 3.184800000000099e-05, 3.173700000000043e-05, 3.240200000000082e-05, 3.1832999999998474e-05, 3.173600000000096e-05, 3.2277000000000694e-05, 3.190299999999979e-05, 3.217999999999971e-05, 3.236100000000158e-05, 3.2291000000000264e-05, 3.198600000000121e-05, 3.209700000000176e-05]</msg>
<status status="PASS" starttime="20201030 15:55:27.876" endtime="20201030 15:55:27.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.871" endtime="20201030 15:55:27.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:27.883" endtime="20201030 15:55:27.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.882" endtime="20201030 15:55:27.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.881" endtime="20201030 15:55:27.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.524" endtime="20201030 15:55:27.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.524" endtime="20201030 15:55:27.904"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.912" endtime="20201030 15:55:27.930"></status>
</kw>
<msg timestamp="20201030 15:55:27.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.911" endtime="20201030 15:55:27.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.932" endtime="20201030 15:55:27.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.934" endtime="20201030 15:55:27.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.908" endtime="20201030 15:55:27.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.906" endtime="20201030 15:55:27.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.943" endtime="20201030 15:55:28.229"></status>
</kw>
<msg timestamp="20201030 15:55:28.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019360736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019393764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.942" endtime="20201030 15:55:28.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019360736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019393764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.233" endtime="20201030 15:55:28.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.241" endtime="20201030 15:55:28.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.939" endtime="20201030 15:55:28.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.937" endtime="20201030 15:55:28.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:28.248" level="INFO">${RESULT} = [{'diff': 3.302800000000092e-05}, {'diff': 3.265200000000107e-05}, {'diff': 3.333400000000292e-05}, {'diff': 3.320899999999932e-05}, {'diff': 3.337500000000215e-05}, {'diff': 3.315200000000157e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:28.244" endtime="20201030 15:55:28.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:28.253" level="INFO">${ACCURACY} = {'diff': [3.302800000000092e-05, 3.265200000000107e-05, 3.333400000000292e-05, 3.320899999999932e-05, 3.337500000000215e-05, 3.315200000000157e-05, 3.272299999999839e-05, 3.275000000000153e-05, 3.2764...</msg>
<status status="PASS" starttime="20201030 15:55:28.249" endtime="20201030 15:55:28.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.257" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 15:55:28.256" endtime="20201030 15:55:28.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.259" level="INFO">VALUE: [3.302800000000092e-05, 3.265200000000107e-05, 3.333400000000292e-05, 3.320899999999932e-05, 3.337500000000215e-05, 3.315200000000157e-05, 3.272299999999839e-05, 3.275000000000153e-05, 3.27640000000011e-05, 3.297299999999864e-05, 3.3374999999998683e-05, 3.316700000000061e-05, 3.273599999999849e-05, 3.320799999999985e-05, 3.2526999999997475e-05, 3.3055000000000584e-05, 3.275000000000153e-05, 3.291600000000089e-05, 3.273600000000196e-05, 3.3110999999998864e-05, 3.3041000000001014e-05, 3.300000000000178e-05, 3.300000000000178e-05, 3.293000000000046e-05, 3.297199999999917e-05, 3.3346999999999544e-05, 3.343000000000096e-05, 3.293099999999993e-05, 3.340300000000129e-05, 3.327800000000117e-05, 3.273600000000196e-05, 3.305600000000006e-05, 3.3124999999998433e-05, 3.316700000000061e-05, 3.330600000000031e-05, 3.327800000000117e-05, 3.248599999999824e-05, 3.2860999999998614e-05, 3.3041000000001014e-05, 3.254199999999999e-05, 3.319499999999975e-05, 3.272299999999839e-05, 3.343000000000096e-05, 3.252800000000042e-05, 3.3319000000000404e-05, 3.295899999999907e-05, 3.2804999999996864e-05, 3.343000000000096e-05, 3.266600000000064e-05, 3.293000000000046e-05]</msg>
<status status="PASS" starttime="20201030 15:55:28.258" endtime="20201030 15:55:28.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.253" endtime="20201030 15:55:28.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:28.264" endtime="20201030 15:55:28.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.263" endtime="20201030 15:55:28.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.262" endtime="20201030 15:55:28.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.905" endtime="20201030 15:55:28.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.904" endtime="20201030 15:55:28.285"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.294" endtime="20201030 15:55:28.311"></status>
</kw>
<msg timestamp="20201030 15:55:28.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.292" endtime="20201030 15:55:28.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.312" endtime="20201030 15:55:28.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.315" endtime="20201030 15:55:28.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.290" endtime="20201030 15:55:28.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.287" endtime="20201030 15:55:28.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.323" endtime="20201030 15:55:28.610"></status>
</kw>
<msg timestamp="20201030 15:55:28.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019486569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019520417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.322" endtime="20201030 15:55:28.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019486569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019520417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.615" endtime="20201030 15:55:28.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.623" endtime="20201030 15:55:28.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.319" endtime="20201030 15:55:28.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.318" endtime="20201030 15:55:28.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:28.629" level="INFO">${RESULT} = [{'diff': 3.384800000000299e-05}, {'diff': 3.429200000000174e-05}, {'diff': 3.4361000000000114e-05}, {'diff': 3.3833000000000474e-05}, {'diff': 3.4110999999999864e-05}, {'diff': 3.4445000000001e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:28.626" endtime="20201030 15:55:28.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:28.633" level="INFO">${ACCURACY} = {'diff': [3.384800000000299e-05, 3.429200000000174e-05, 3.4361000000000114e-05, 3.3833000000000474e-05, 3.4110999999999864e-05, 3.4445000000001e-05, 3.370899999999982e-05, 3.390300000000179e-05, 3.433...</msg>
<status status="PASS" starttime="20201030 15:55:28.630" endtime="20201030 15:55:28.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.638" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 15:55:28.637" endtime="20201030 15:55:28.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.640" level="INFO">VALUE: [3.384800000000299e-05, 3.429200000000174e-05, 3.4361000000000114e-05, 3.3833000000000474e-05, 3.4110999999999864e-05, 3.4445000000001e-05, 3.370899999999982e-05, 3.390300000000179e-05, 3.433400000000045e-05, 3.4402999999998823e-05, 3.4290999999998795e-05, 3.430600000000131e-05, 3.3874999999999184e-05, 3.390299999999832e-05, 3.447200000000067e-05, 3.445799999999763e-05, 3.4083000000000724e-05, 3.388900000000222e-05, 3.420799999999738e-05, 3.391600000000189e-05, 3.398599999999974e-05, 3.419499999999728e-05, 3.444400000000153e-05, 3.3819000000000904e-05, 3.398599999999974e-05, 3.448599999999677e-05, 3.409800000000324e-05, 3.379200000000124e-05, 3.423599999999999e-05, 3.402799999999845e-05, 3.3847000000000044e-05, 3.4097000000000294e-05, 3.3610999999999364e-05, 3.352800000000142e-05, 3.4124999999999434e-05, 3.41250000000029e-05, 3.37640000000021e-05, 3.373599999999949e-05, 3.361199999999884e-05, 3.361199999999884e-05, 3.390300000000179e-05, 3.429199999999827e-05, 3.391700000000136e-05, 3.3804999999997865e-05, 3.4374999999999684e-05, 3.393000000000146e-05, 3.3805000000001334e-05, 3.3610999999999364e-05, 3.365300000000154e-05, 3.424999999999956e-05]</msg>
<status status="PASS" starttime="20201030 15:55:28.639" endtime="20201030 15:55:28.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.634" endtime="20201030 15:55:28.642"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:28.645" endtime="20201030 15:55:28.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.644" endtime="20201030 15:55:28.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.643" endtime="20201030 15:55:28.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.286" endtime="20201030 15:55:28.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.285" endtime="20201030 15:55:28.666"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.675" endtime="20201030 15:55:28.693"></status>
</kw>
<msg timestamp="20201030 15:55:28.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.673" endtime="20201030 15:55:28.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.695" endtime="20201030 15:55:28.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.697" endtime="20201030 15:55:28.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.671" endtime="20201030 15:55:28.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.669" endtime="20201030 15:55:28.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.706" endtime="20201030 15:55:28.992"></status>
</kw>
<msg timestamp="20201030 15:55:28.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020543417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020578556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.705" endtime="20201030 15:55:28.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020543417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020578556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.996" endtime="20201030 15:55:29.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.004" endtime="20201030 15:55:29.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.702" endtime="20201030 15:55:29.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.700" endtime="20201030 15:55:29.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:29.011" level="INFO">${RESULT} = [{'diff': 3.5139000000000004e-05}, {'diff': 3.5375000000000684e-05}, {'diff': 3.517999999999924e-05}, {'diff': 3.54580000000021e-05}, {'diff': 3.463800000000003e-05}, {'diff': 3.475000000000006e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:29.008" endtime="20201030 15:55:29.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:29.015" level="INFO">${ACCURACY} = {'diff': [3.5139000000000004e-05, 3.5375000000000684e-05, 3.517999999999924e-05, 3.54580000000021e-05, 3.463800000000003e-05, 3.475000000000006e-05, 3.49719999999977e-05, 3.522200000000142e-05, 3.5026...</msg>
<status status="PASS" starttime="20201030 15:55:29.012" endtime="20201030 15:55:29.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.019" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 15:55:29.018" endtime="20201030 15:55:29.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.022" level="INFO">VALUE: [3.5139000000000004e-05, 3.5375000000000684e-05, 3.517999999999924e-05, 3.54580000000021e-05, 3.463800000000003e-05, 3.475000000000006e-05, 3.49719999999977e-05, 3.522200000000142e-05, 3.5026999999999975e-05, 3.4569000000001654e-05, 3.52779999999997e-05, 3.479200000000224e-05, 3.493000000000246e-05, 3.498600000000074e-05, 3.4875000000000184e-05, 3.515300000000304e-05, 3.544399999999906e-05, 3.47779999999992e-05, 3.4638999999999504e-05, 3.479200000000224e-05, 3.5318999999998935e-05, 3.502799999999945e-05, 3.5416999999999393e-05, 3.544499999999853e-05, 3.491699999999889e-05, 3.5166999999999143e-05, 3.493099999999846e-05, 3.479200000000224e-05, 3.504199999999902e-05, 3.532000000000188e-05, 3.501399999999988e-05, 3.498600000000074e-05, 3.4833000000001474e-05, 3.4610999999996894e-05, 3.5332999999998504e-05, 3.516599999999967e-05, 3.5082999999998254e-05, 3.523600000000099e-05, 3.5152999999999573e-05, 3.4847000000001044e-05, 3.480599999999834e-05, 3.5374999999997214e-05, 3.548600000000124e-05, 3.5111000000000864e-05, 3.542999999999949e-05, 3.555600000000256e-05, 3.5347000000001544e-05, 3.475000000000006e-05, 3.5152999999999573e-05, 3.4776999999999725e-05]</msg>
<status status="PASS" starttime="20201030 15:55:29.020" endtime="20201030 15:55:29.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.016" endtime="20201030 15:55:29.031"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:29.035" endtime="20201030 15:55:29.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.033" endtime="20201030 15:55:29.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.032" endtime="20201030 15:55:29.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.667" endtime="20201030 15:55:29.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.666" endtime="20201030 15:55:29.055"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.064" endtime="20201030 15:55:29.084"></status>
</kw>
<msg timestamp="20201030 15:55:29.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.062" endtime="20201030 15:55:29.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.085" endtime="20201030 15:55:29.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.088" endtime="20201030 15:55:29.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.060" endtime="20201030 15:55:29.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.058" endtime="20201030 15:55:29.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.096" endtime="20201030 15:55:29.382"></status>
</kw>
<msg timestamp="20201030 15:55:29.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019400069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019436403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.095" endtime="20201030 15:55:29.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019400069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019436403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.386" endtime="20201030 15:55:29.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.394" endtime="20201030 15:55:29.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.092" endtime="20201030 15:55:29.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.091" endtime="20201030 15:55:29.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:29.401" level="INFO">${RESULT} = [{'diff': 3.633400000000245e-05}, {'diff': 3.5846999999998574e-05}, {'diff': 3.6125000000001434e-05}, {'diff': 3.608399999999873e-05}, {'diff': 3.569499999999878e-05}, {'diff': 3.623700000000146e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:29.398" endtime="20201030 15:55:29.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:29.406" level="INFO">${ACCURACY} = {'diff': [3.633400000000245e-05, 3.5846999999998574e-05, 3.6125000000001434e-05, 3.608399999999873e-05, 3.569499999999878e-05, 3.623700000000146e-05, 3.62780000000007e-05, 3.6068999999999685e-05, 3.57...</msg>
<status status="PASS" starttime="20201030 15:55:29.402" endtime="20201030 15:55:29.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.410" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 15:55:29.409" endtime="20201030 15:55:29.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.413" level="INFO">VALUE: [3.633400000000245e-05, 3.5846999999998574e-05, 3.6125000000001434e-05, 3.608399999999873e-05, 3.569499999999878e-05, 3.623700000000146e-05, 3.62780000000007e-05, 3.6068999999999685e-05, 3.570899999999835e-05, 3.597200000000217e-05, 3.6276999999997755e-05, 3.6055000000000115e-05, 3.574999999999759e-05, 3.6291000000000795e-05, 3.626399999999766e-05, 3.5818999999999435e-05, 3.569399999999931e-05, 3.579199999999977e-05, 3.59719999999987e-05, 3.6389000000001254e-05, 3.594499999999903e-05, 3.602800000000045e-05, 3.583399999999848e-05, 3.572199999999845e-05, 3.598599999999827e-05, 3.573599999999802e-05, 3.629200000000027e-05, 3.6111000000001864e-05, 3.579199999999977e-05, 3.554199999999952e-05, 3.6125000000001434e-05, 3.572200000000192e-05, 3.6318999999999935e-05, 3.648599999999877e-05, 3.554199999999952e-05, 3.608399999999873e-05, 3.5916999999999893e-05, 3.567999999999974e-05, 3.6389000000001254e-05, 3.617999999999677e-05, 3.6305000000000365e-05, 3.624999999999809e-05, 3.5568999999999185e-05, 3.576400000000063e-05, 3.623599999999852e-05, 3.622199999999895e-05, 3.6068999999999685e-05, 3.629200000000027e-05, 3.575000000000106e-05, 3.5610999999997894e-05]</msg>
<status status="PASS" starttime="20201030 15:55:29.411" endtime="20201030 15:55:29.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.407" endtime="20201030 15:55:29.414"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:29.418" endtime="20201030 15:55:29.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.416" endtime="20201030 15:55:29.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.415" endtime="20201030 15:55:29.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.056" endtime="20201030 15:55:29.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.056" endtime="20201030 15:55:29.438"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.447" endtime="20201030 15:55:29.464"></status>
</kw>
<msg timestamp="20201030 15:55:29.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.445" endtime="20201030 15:55:29.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.465" endtime="20201030 15:55:29.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.468" endtime="20201030 15:55:29.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.443" endtime="20201030 15:55:29.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.441" endtime="20201030 15:55:29.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.477" endtime="20201030 15:55:29.770"></status>
</kw>
<msg timestamp="20201030 15:55:29.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019317319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019354208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.475" endtime="20201030 15:55:29.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019317319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019354208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.774" endtime="20201030 15:55:29.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.782" endtime="20201030 15:55:29.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.473" endtime="20201030 15:55:29.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.471" endtime="20201030 15:55:29.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:29.788" level="INFO">${RESULT} = [{'diff': 3.6889000000001754e-05}, {'diff': 3.719400000000081e-05}, {'diff': 3.716600000000167e-05}, {'diff': 3.673600000000249e-05}, {'diff': 3.7360999999999644e-05}, {'diff': 3.6653000000001074e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:29.785" endtime="20201030 15:55:29.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:29.793" level="INFO">${ACCURACY} = {'diff': [3.6889000000001754e-05, 3.719400000000081e-05, 3.716600000000167e-05, 3.673600000000249e-05, 3.7360999999999644e-05, 3.6653000000001074e-05, 3.747199999999673e-05, 3.6652999999997604e-05, 3....</msg>
<status status="PASS" starttime="20201030 15:55:29.789" endtime="20201030 15:55:29.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.797" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 15:55:29.796" endtime="20201030 15:55:29.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.799" level="INFO">VALUE: [3.6889000000001754e-05, 3.719400000000081e-05, 3.716600000000167e-05, 3.673600000000249e-05, 3.7360999999999644e-05, 3.6653000000001074e-05, 3.747199999999673e-05, 3.6652999999997604e-05, 3.7110999999999394e-05, 3.733399999999998e-05, 3.72780000000017e-05, 3.732000000000041e-05, 3.72780000000017e-05, 3.694500000000003e-05, 3.6666999999997174e-05, 3.655600000000009e-05, 3.7431000000000964e-05, 3.733400000000345e-05, 3.7360999999999644e-05, 3.6681000000000213e-05, 3.7124999999998964e-05, 3.65979999999988e-05, 3.717999999999777e-05, 3.65979999999988e-05, 3.7319000000000935e-05, 3.7096999999999825e-05, 3.7110999999999394e-05, 3.6541000000001045e-05, 3.6875000000002184e-05, 3.697200000000317e-05, 3.748599999999977e-05, 3.6903000000001324e-05, 3.6916999999997424e-05, 3.7139000000002004e-05, 3.7180999999997244e-05, 3.724999999999909e-05, 3.7347000000000075e-05, 3.7139000000002004e-05, 3.6596999999999325e-05, 3.702800000000145e-05, 3.752799999999848e-05, 3.6861000000002614e-05, 3.7375000000002684e-05, 3.723599999999952e-05, 3.672199999999945e-05, 3.749999999999934e-05, 3.702799999999798e-05, 3.655600000000009e-05, 3.679200000000077e-05, 3.7124999999998964e-05]</msg>
<status status="PASS" starttime="20201030 15:55:29.798" endtime="20201030 15:55:29.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.793" endtime="20201030 15:55:29.801"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:29.804" endtime="20201030 15:55:29.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.803" endtime="20201030 15:55:29.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.802" endtime="20201030 15:55:29.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.439" endtime="20201030 15:55:29.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.439" endtime="20201030 15:55:29.825"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.834" endtime="20201030 15:55:29.852"></status>
</kw>
<msg timestamp="20201030 15:55:29.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.832" endtime="20201030 15:55:29.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.853" endtime="20201030 15:55:29.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.856" endtime="20201030 15:55:29.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.829" endtime="20201030 15:55:29.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.827" endtime="20201030 15:55:29.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.865" endtime="20201030 15:55:30.149"></status>
</kw>
<msg timestamp="20201030 15:55:30.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020300333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020337986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.863" endtime="20201030 15:55:30.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020300333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020337986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.153" endtime="20201030 15:55:30.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.162" endtime="20201030 15:55:30.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.861" endtime="20201030 15:55:30.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.859" endtime="20201030 15:55:30.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:30.168" level="INFO">${RESULT} = [{'diff': 3.7652999999998604e-05}, {'diff': 3.768000000000174e-05}, {'diff': 3.7889000000002754e-05}, {'diff': 3.841599999999945e-05}, {'diff': 3.818000000000224e-05}, {'diff': 3.7874999999999714e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:30.165" endtime="20201030 15:55:30.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:30.172" level="INFO">${ACCURACY} = {'diff': [3.7652999999998604e-05, 3.768000000000174e-05, 3.7889000000002754e-05, 3.841599999999945e-05, 3.818000000000224e-05, 3.7874999999999714e-05, 3.792999999999852e-05, 3.754200000000152e-05, 3.8...</msg>
<status status="PASS" starttime="20201030 15:55:30.169" endtime="20201030 15:55:30.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.176" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 15:55:30.175" endtime="20201030 15:55:30.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.179" level="INFO">VALUE: [3.7652999999998604e-05, 3.768000000000174e-05, 3.7889000000002754e-05, 3.841599999999945e-05, 3.818000000000224e-05, 3.7874999999999714e-05, 3.792999999999852e-05, 3.754200000000152e-05, 3.8152999999999104e-05, 3.8110999999996925e-05, 3.8181000000001714e-05, 3.8138999999999534e-05, 3.7624999999999464e-05, 3.75979999999998e-05, 3.7610999999999895e-05, 3.825000000000009e-05, 3.780599999999787e-05, 3.767999999999827e-05, 3.848600000000077e-05, 3.783400000000048e-05, 3.772299999999992e-05, 3.794399999999809e-05, 3.7917000000001894e-05, 3.7861000000000145e-05, 3.811199999999987e-05, 3.791600000000242e-05, 3.8096999999997355e-05, 3.8347000000001075e-05, 3.826399999999966e-05, 3.798600000000027e-05, 3.8097000000000825e-05, 3.7888999999999284e-05, 3.852799999999948e-05, 3.772200000000045e-05, 3.755600000000109e-05, 3.8360999999997175e-05, 3.8431000000001964e-05, 3.82919999999988e-05, 3.8181000000001714e-05, 3.776399999999916e-05, 3.7861000000000145e-05, 3.8208999999997384e-05, 3.800000000000331e-05, 3.755599999999762e-05, 3.848600000000077e-05, 3.823699999999999e-05, 3.751400000000238e-05, 3.7874999999999714e-05, 3.8472999999997204e-05, 3.755600000000109e-05]</msg>
<status status="PASS" starttime="20201030 15:55:30.178" endtime="20201030 15:55:30.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.173" endtime="20201030 15:55:30.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:30.185" endtime="20201030 15:55:30.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.183" endtime="20201030 15:55:30.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.182" endtime="20201030 15:55:30.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.826" endtime="20201030 15:55:30.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.825" endtime="20201030 15:55:30.205"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.214" endtime="20201030 15:55:30.232"></status>
</kw>
<msg timestamp="20201030 15:55:30.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.212" endtime="20201030 15:55:30.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.233" endtime="20201030 15:55:30.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.236" endtime="20201030 15:55:30.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.210" endtime="20201030 15:55:30.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.208" endtime="20201030 15:55:30.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.245" endtime="20201030 15:55:30.530"></status>
</kw>
<msg timestamp="20201030 15:55:30.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019425069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019464, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:30.243" endtime="20201030 15:55:30.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019425069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019464, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:30.534" endtime="20201030 15:55:30.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.543" endtime="20201030 15:55:30.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.241" endtime="20201030 15:55:30.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.239" endtime="20201030 15:55:30.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:30.549" level="INFO">${RESULT} = [{'diff': 3.8930999999998994e-05}, {'diff': 3.87919999999993e-05}, {'diff': 3.8846999999998105e-05}, {'diff': 3.875000000000059e-05}, {'diff': 3.94859999999983e-05}, {'diff': 3.858400000000123e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:30.546" endtime="20201030 15:55:30.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:30.554" level="INFO">${ACCURACY} = {'diff': [3.8930999999998994e-05, 3.87919999999993e-05, 3.8846999999998105e-05, 3.875000000000059e-05, 3.94859999999983e-05, 3.858400000000123e-05, 3.894400000000256e-05, 3.904199999999955e-05, 3.8902...</msg>
<status status="PASS" starttime="20201030 15:55:30.550" endtime="20201030 15:55:30.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.559" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 15:55:30.558" endtime="20201030 15:55:30.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.562" level="INFO">VALUE: [3.8930999999998994e-05, 3.87919999999993e-05, 3.8846999999998105e-05, 3.875000000000059e-05, 3.94859999999983e-05, 3.858400000000123e-05, 3.894400000000256e-05, 3.904199999999955e-05, 3.8902999999999854e-05, 3.950000000000134e-05, 3.893000000000299e-05, 3.8833000000002005e-05, 3.873599999999755e-05, 3.867999999999927e-05, 3.868000000000274e-05, 3.950000000000134e-05, 3.9360999999998175e-05, 3.901400000000041e-05, 3.8597000000001325e-05, 3.8889000000000284e-05, 3.872300000000092e-05, 3.8847000000001575e-05, 3.8582999999998285e-05, 3.919399999999934e-05, 3.922200000000195e-05, 3.901400000000041e-05, 3.870800000000188e-05, 3.930600000000284e-05, 3.904199999999955e-05, 3.8611000000000895e-05, 3.854199999999905e-05, 3.925000000000109e-05, 3.873600000000102e-05, 3.941599999999698e-05, 3.875000000000059e-05, 3.9223000000001423e-05, 3.8708999999997884e-05, 3.9416999999999924e-05, 3.8709000000001353e-05, 3.920799999999891e-05, 3.86659999999997e-05, 3.875000000000059e-05, 3.8597000000001325e-05, 3.938799999999784e-05, 3.9346999999998605e-05, 3.9375000000001215e-05, 3.941600000000045e-05, 3.9125000000000965e-05, 3.945800000000263e-05, 3.870800000000188e-05]</msg>
<status status="PASS" starttime="20201030 15:55:30.560" endtime="20201030 15:55:30.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.555" endtime="20201030 15:55:30.563"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:30.567" endtime="20201030 15:55:30.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.566" endtime="20201030 15:55:30.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.564" endtime="20201030 15:55:30.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.206" endtime="20201030 15:55:30.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.206" endtime="20201030 15:55:30.588"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.597" endtime="20201030 15:55:30.615"></status>
</kw>
<msg timestamp="20201030 15:55:30.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.595" endtime="20201030 15:55:30.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.616" endtime="20201030 15:55:30.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.619" endtime="20201030 15:55:30.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.592" endtime="20201030 15:55:30.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.590" endtime="20201030 15:55:30.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.628" endtime="20201030 15:55:30.914"></status>
</kw>
<msg timestamp="20201030 15:55:30.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019659917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019700194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.626" endtime="20201030 15:55:30.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019659917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019700194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.918" endtime="20201030 15:55:30.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.926" endtime="20201030 15:55:30.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.624" endtime="20201030 15:55:30.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.622" endtime="20201030 15:55:30.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:30.933" level="INFO">${RESULT} = [{'diff': 4.0277000000001756e-05}, {'diff': 4.01799999999973e-05}, {'diff': 4.0431000000000494e-05}, {'diff': 4.043000000000102e-05}, {'diff': 3.9568999999999716e-05}, {'diff': 4.002800000000098e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:30.929" endtime="20201030 15:55:30.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:30.937" level="INFO">${ACCURACY} = {'diff': [4.0277000000001756e-05, 4.01799999999973e-05, 4.0431000000000494e-05, 4.043000000000102e-05, 3.9568999999999716e-05, 4.002800000000098e-05, 4.023600000000252e-05, 4.043000000000102e-05, 3.96...</msg>
<status status="PASS" starttime="20201030 15:55:30.934" endtime="20201030 15:55:30.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.941" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 15:55:30.940" endtime="20201030 15:55:30.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.943" level="INFO">VALUE: [4.0277000000001756e-05, 4.01799999999973e-05, 4.0431000000000494e-05, 4.043000000000102e-05, 3.9568999999999716e-05, 4.002800000000098e-05, 4.023600000000252e-05, 4.043000000000102e-05, 3.9667000000000174e-05, 3.969399999999984e-05, 3.9846999999999105e-05, 3.9846999999999105e-05, 3.983399999999901e-05, 3.9930999999999994e-05, 4.0360999999999175e-05, 4.0333000000000035e-05, 3.9846999999999105e-05, 4.0027000000001506e-05, 3.9624999999997995e-05, 3.95980000000018e-05, 3.9568999999999716e-05, 4.052800000000148e-05, 3.984799999999858e-05, 3.974999999999812e-05, 3.9555000000000146e-05, 3.993000000000052e-05, 4.0208999999999384e-05, 4.020799999999991e-05, 3.9832999999999535e-05, 4.018000000000077e-05, 4.0374999999998745e-05, 3.96660000000007e-05, 4.0041000000001076e-05, 3.952800000000048e-05, 3.99859999999988e-05, 4.034800000000255e-05, 4.049999999999887e-05, 3.982000000000291e-05, 3.9958999999999134e-05, 4.004199999999708e-05, 4.047199999999973e-05, 4.023599999999905e-05, 4.045800000000016e-05, 3.9874999999998245e-05, 3.997199999999923e-05, 4.0167000000000674e-05, 4.02920000000008e-05, 4.0111000000002395e-05, 3.99859999999988e-05, 4.049999999999887e-05]</msg>
<status status="PASS" starttime="20201030 15:55:30.942" endtime="20201030 15:55:30.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.937" endtime="20201030 15:55:30.945"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:30.948" endtime="20201030 15:55:30.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.947" endtime="20201030 15:55:30.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.946" endtime="20201030 15:55:30.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.589" endtime="20201030 15:55:30.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.588" endtime="20201030 15:55:30.969"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.978" endtime="20201030 15:55:30.996"></status>
</kw>
<msg timestamp="20201030 15:55:30.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.976" endtime="20201030 15:55:30.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.998" endtime="20201030 15:55:31.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.000" endtime="20201030 15:55:31.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.973" endtime="20201030 15:55:31.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.971" endtime="20201030 15:55:31.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.009" endtime="20201030 15:55:31.295"></status>
</kw>
<msg timestamp="20201030 15:55:31.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020292569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020333472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.008" endtime="20201030 15:55:31.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020292569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020333472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.300" endtime="20201030 15:55:31.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.308" endtime="20201030 15:55:31.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.005" endtime="20201030 15:55:31.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.004" endtime="20201030 15:55:31.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:31.314" level="INFO">${RESULT} = [{'diff': 4.0902999999998385e-05}, {'diff': 4.1152999999998635e-05}, {'diff': 4.102799999999851e-05}, {'diff': 4.141599999999898e-05}, {'diff': 4.072199999999998e-05}, {'diff': 4.0639000000002035e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:31.311" endtime="20201030 15:55:31.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:31.319" level="INFO">${ACCURACY} = {'diff': [4.0902999999998385e-05, 4.1152999999998635e-05, 4.102799999999851e-05, 4.141599999999898e-05, 4.072199999999998e-05, 4.0639000000002035e-05, 4.1304999999998426e-05, 4.058399999999976e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:55:31.315" endtime="20201030 15:55:31.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.323" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 15:55:31.322" endtime="20201030 15:55:31.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.325" level="INFO">VALUE: [4.0902999999998385e-05, 4.1152999999998635e-05, 4.102799999999851e-05, 4.141599999999898e-05, 4.072199999999998e-05, 4.0639000000002035e-05, 4.1304999999998426e-05, 4.058399999999976e-05, 4.105599999999765e-05, 4.099999999999937e-05, 4.0695000000000314e-05, 4.073599999999955e-05, 4.124999999999962e-05, 4.105599999999765e-05, 4.083400000000001e-05, 4.055600000000062e-05, 4.124999999999962e-05, 4.07920000000013e-05, 4.0874999999999245e-05, 4.1417000000001924e-05, 4.1431000000001494e-05, 4.063799999999909e-05, 4.1110999999999925e-05, 4.141599999999898e-05, 4.1276999999999286e-05, 4.076399999999869e-05, 4.092999999999805e-05, 4.07920000000013e-05, 4.095800000000066e-05, 4.052800000000148e-05, 4.1333000000001036e-05, 4.04859999999993e-05, 4.0860999999999675e-05, 4.1417000000001924e-05, 4.122200000000048e-05, 4.144399999999812e-05, 4.1138999999999065e-05, 4.072199999999998e-05, 4.09859999999998e-05, 4.104200000000155e-05, 4.0889000000002285e-05, 4.0847000000000105e-05, 4.09859999999998e-05, 4.132000000000094e-05, 4.0945000000000564e-05, 4.1416999999998455e-05, 4.0958999999996665e-05, 4.0860999999999675e-05, 4.11799999999983e-05, 4.0888999999998815e-05]</msg>
<status status="PASS" starttime="20201030 15:55:31.324" endtime="20201030 15:55:31.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.319" endtime="20201030 15:55:31.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:31.331" endtime="20201030 15:55:31.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.330" endtime="20201030 15:55:31.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.329" endtime="20201030 15:55:31.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.970" endtime="20201030 15:55:31.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.969" endtime="20201030 15:55:31.352"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.360" endtime="20201030 15:55:31.378"></status>
</kw>
<msg timestamp="20201030 15:55:31.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.359" endtime="20201030 15:55:31.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.379" endtime="20201030 15:55:31.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.382" endtime="20201030 15:55:31.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.356" endtime="20201030 15:55:31.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.354" endtime="20201030 15:55:31.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.391" endtime="20201030 15:55:31.677"></status>
</kw>
<msg timestamp="20201030 15:55:31.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019419292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019461208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.389" endtime="20201030 15:55:31.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019419292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019461208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.681" endtime="20201030 15:55:31.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.690" endtime="20201030 15:55:31.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.387" endtime="20201030 15:55:31.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.385" endtime="20201030 15:55:31.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:31.696" level="INFO">${RESULT} = [{'diff': 4.191599999999948e-05}, {'diff': 4.223600000000105e-05}, {'diff': 4.2290999999999856e-05}, {'diff': 4.244399999999912e-05}, {'diff': 4.1569000000001716e-05}, {'diff': 4.2027000000000037e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:31.693" endtime="20201030 15:55:31.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:31.701" level="INFO">${ACCURACY} = {'diff': [4.191599999999948e-05, 4.223600000000105e-05, 4.2290999999999856e-05, 4.244399999999912e-05, 4.1569000000001716e-05, 4.2027000000000037e-05, 4.21660000000032e-05, 4.24860000000013e-05, 4.225...</msg>
<status status="PASS" starttime="20201030 15:55:31.697" endtime="20201030 15:55:31.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.705" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 15:55:31.704" endtime="20201030 15:55:31.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.708" level="INFO">VALUE: [4.191599999999948e-05, 4.223600000000105e-05, 4.2290999999999856e-05, 4.244399999999912e-05, 4.1569000000001716e-05, 4.2027000000000037e-05, 4.21660000000032e-05, 4.24860000000013e-05, 4.225000000000062e-05, 4.18059999999984e-05, 4.222199999999801e-05, 4.179199999999883e-05, 4.227799999999976e-05, 4.207000000000169e-05, 4.2361000000001175e-05, 4.181999999999797e-05, 4.1832999999998066e-05, 4.2125000000000495e-05, 4.223599999999758e-05, 4.1611000000000425e-05, 4.2402999999999885e-05, 4.163800000000009e-05, 4.2416999999999455e-05, 4.1680999999998275e-05, 4.216599999999973e-05, 4.200000000000037e-05, 4.200000000000037e-05, 4.1610999999996956e-05, 4.1776999999999787e-05, 4.169400000000184e-05, 4.222200000000148e-05, 4.2277000000000287e-05, 4.2139000000000065e-05, 4.173600000000055e-05, 4.170799999999794e-05, 4.247200000000173e-05, 4.177800000000273e-05, 4.1624999999999995e-05, 4.198599999999733e-05, 4.204200000000255e-05, 4.1666999999998705e-05, 4.252800000000001e-05, 4.1680999999998275e-05, 4.223599999999758e-05, 4.1681000000001744e-05, 4.1639000000003035e-05, 4.1681000000001744e-05, 4.180600000000187e-05, 4.1709000000000884e-05, 4.17920000000023e-05]</msg>
<status status="PASS" starttime="20201030 15:55:31.706" endtime="20201030 15:55:31.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.702" endtime="20201030 15:55:31.709"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:31.713" endtime="20201030 15:55:31.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.711" endtime="20201030 15:55:31.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.710" endtime="20201030 15:55:31.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.353" endtime="20201030 15:55:31.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.352" endtime="20201030 15:55:31.733"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.742" endtime="20201030 15:55:31.761"></status>
</kw>
<msg timestamp="20201030 15:55:31.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.741" endtime="20201030 15:55:31.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.762" endtime="20201030 15:55:31.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.765" endtime="20201030 15:55:31.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.738" endtime="20201030 15:55:31.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.736" endtime="20201030 15:55:31.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.774" endtime="20201030 15:55:32.063"></status>
</kw>
<msg timestamp="20201030 15:55:32.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019426028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019468722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.773" endtime="20201030 15:55:32.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019426028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019468722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.067" endtime="20201030 15:55:32.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.075" endtime="20201030 15:55:32.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.770" endtime="20201030 15:55:32.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.768" endtime="20201030 15:55:32.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:32.082" level="INFO">${RESULT} = [{'diff': 4.269399999999937e-05}, {'diff': 4.298599999999833e-05}, {'diff': 4.316600000000073e-05}, {'diff': 4.3055000000000176e-05}, {'diff': 4.323599999999858e-05}, {'diff': 4.327800000000076e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:32.079" endtime="20201030 15:55:32.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:32.086" level="INFO">${ACCURACY} = {'diff': [4.269399999999937e-05, 4.298599999999833e-05, 4.316600000000073e-05, 4.3055000000000176e-05, 4.323599999999858e-05, 4.327800000000076e-05, 4.2875000000001245e-05, 4.3167000000000205e-05, 4.3...</msg>
<status status="PASS" starttime="20201030 15:55:32.083" endtime="20201030 15:55:32.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.090" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 15:55:32.089" endtime="20201030 15:55:32.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.093" level="INFO">VALUE: [4.269399999999937e-05, 4.298599999999833e-05, 4.316600000000073e-05, 4.3055000000000176e-05, 4.323599999999858e-05, 4.327800000000076e-05, 4.2875000000001245e-05, 4.3167000000000205e-05, 4.351400000000144e-05, 4.348599999999883e-05, 4.281999999999897e-05, 4.305599999999965e-05, 4.2875000000001245e-05, 4.3110999999998456e-05, 4.291600000000048e-05, 4.2653000000000135e-05, 4.252800000000001e-05, 4.351400000000144e-05, 4.2846999999998636e-05, 4.3487000000001774e-05, 4.3096999999998886e-05, 4.323600000000205e-05, 4.3041000000000607e-05, 4.322199999999901e-05, 4.290200000000091e-05, 4.269399999999937e-05, 4.3055000000000176e-05, 4.2804999999999926e-05, 4.2597000000001856e-05, 4.343000000000055e-05, 4.3096999999998886e-05, 4.3402999999997416e-05, 4.2596999999998386e-05, 4.2639000000000565e-05, 4.254199999999958e-05, 4.256999999999872e-05, 4.2680999999999275e-05, 4.3153000000000635e-05, 4.281999999999897e-05, 4.313800000000159e-05, 4.3375000000001745e-05, 4.254199999999958e-05, 4.3068999999999746e-05, 4.334799999999861e-05, 4.2930999999999525e-05, 4.341600000000098e-05, 4.2709000000001884e-05, 4.256999999999872e-05, 4.2638999999997096e-05, 4.270799999999894e-05]</msg>
<status status="PASS" starttime="20201030 15:55:32.091" endtime="20201030 15:55:32.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.087" endtime="20201030 15:55:32.094"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:32.098" endtime="20201030 15:55:32.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.096" endtime="20201030 15:55:32.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.095" endtime="20201030 15:55:32.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.734" endtime="20201030 15:55:32.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.734" endtime="20201030 15:55:32.118"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.127" endtime="20201030 15:55:32.147"></status>
</kw>
<msg timestamp="20201030 15:55:32.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.125" endtime="20201030 15:55:32.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.149" endtime="20201030 15:55:32.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.151" endtime="20201030 15:55:32.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.123" endtime="20201030 15:55:32.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.121" endtime="20201030 15:55:32.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.160" endtime="20201030 15:55:32.445"></status>
</kw>
<msg timestamp="20201030 15:55:32.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020345736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020389417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.158" endtime="20201030 15:55:32.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020345736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020389417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.449" endtime="20201030 15:55:32.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.457" endtime="20201030 15:55:32.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.156" endtime="20201030 15:55:32.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.154" endtime="20201030 15:55:32.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:32.464" level="INFO">${RESULT} = [{'diff': 4.3681000000000275e-05}, {'diff': 4.4486999999999305e-05}, {'diff': 4.374999999999865e-05}, {'diff': 4.379100000000136e-05}, {'diff': 4.373599999999908e-05}, {'diff': 4.380499999999746e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:32.461" endtime="20201030 15:55:32.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:32.468" level="INFO">${ACCURACY} = {'diff': [4.3681000000000275e-05, 4.4486999999999305e-05, 4.374999999999865e-05, 4.379100000000136e-05, 4.373599999999908e-05, 4.380499999999746e-05, 4.420800000000044e-05, 4.4096999999999886e-05, 4.4...</msg>
<status status="PASS" starttime="20201030 15:55:32.465" endtime="20201030 15:55:32.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.472" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 15:55:32.471" endtime="20201030 15:55:32.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.475" level="INFO">VALUE: [4.3681000000000275e-05, 4.4486999999999305e-05, 4.374999999999865e-05, 4.379100000000136e-05, 4.373599999999908e-05, 4.380499999999746e-05, 4.420800000000044e-05, 4.4096999999999886e-05, 4.416600000000173e-05, 4.445800000000069e-05, 4.3681000000000275e-05, 4.4360999999999706e-05, 4.394400000000062e-05, 4.436199999999918e-05, 4.3874999999998776e-05, 4.429200000000133e-05, 4.372199999999951e-05, 4.4096999999999886e-05, 4.375000000000212e-05, 4.4138999999998596e-05, 4.3917000000000955e-05, 4.381999999999997e-05, 4.429199999999786e-05, 4.4069000000000746e-05, 4.374999999999865e-05, 4.402800000000151e-05, 4.405599999999718e-05, 4.427799999999829e-05, 4.424999999999915e-05, 4.36800000000008e-05, 4.4374999999999276e-05, 4.3555000000000677e-05, 4.402700000000204e-05, 4.379099999999789e-05, 4.402799999999804e-05, 4.39999999999989e-05, 4.398599999999933e-05, 4.448599999999983e-05, 4.4305000000001427e-05, 4.373600000000255e-05, 4.4374999999999276e-05, 4.3916999999997486e-05, 4.405600000000065e-05, 4.379199999999736e-05, 4.3846999999999636e-05, 4.422200000000001e-05, 4.4431000000001025e-05, 4.354200000000058e-05, 4.3653000000001135e-05, 4.370799999999994e-05]</msg>
<status status="PASS" starttime="20201030 15:55:32.473" endtime="20201030 15:55:32.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.469" endtime="20201030 15:55:32.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:32.481" endtime="20201030 15:55:32.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.479" endtime="20201030 15:55:32.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.478" endtime="20201030 15:55:32.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.119" endtime="20201030 15:55:32.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.119" endtime="20201030 15:55:32.501"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.510" endtime="20201030 15:55:32.530"></status>
</kw>
<msg timestamp="20201030 15:55:32.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.508" endtime="20201030 15:55:32.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.531" endtime="20201030 15:55:32.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.534" endtime="20201030 15:55:32.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.506" endtime="20201030 15:55:32.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.504" endtime="20201030 15:55:32.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.545" endtime="20201030 15:55:32.848"></status>
</kw>
<msg timestamp="20201030 15:55:32.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019364875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019409528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.542" endtime="20201030 15:55:32.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019364875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019409528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.852" endtime="20201030 15:55:32.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.861" endtime="20201030 15:55:32.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.539" endtime="20201030 15:55:32.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.537" endtime="20201030 15:55:32.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:32.867" level="INFO">${RESULT} = [{'diff': 4.4652999999998666e-05}, {'diff': 4.534800000000061e-05}, {'diff': 4.4889000000002816e-05}, {'diff': 4.5431000000002025e-05}, {'diff': 4.479200000000183e-05}, {'diff': 4.5166999999998736e-05...</msg>
<status status="PASS" starttime="20201030 15:55:32.864" endtime="20201030 15:55:32.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:32.872" level="INFO">${ACCURACY} = {'diff': [4.4652999999998666e-05, 4.534800000000061e-05, 4.4889000000002816e-05, 4.5431000000002025e-05, 4.479200000000183e-05, 4.5166999999998736e-05, 4.469400000000137e-05, 4.5361000000000706e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:55:32.868" endtime="20201030 15:55:32.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.877" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 15:55:32.876" endtime="20201030 15:55:32.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.879" level="INFO">VALUE: [4.4652999999998666e-05, 4.534800000000061e-05, 4.4889000000002816e-05, 4.5431000000002025e-05, 4.479200000000183e-05, 4.5166999999998736e-05, 4.469400000000137e-05, 4.5361000000000706e-05, 4.504100000000261e-05, 4.4874999999999776e-05, 4.4624999999999526e-05, 4.509699999999742e-05, 4.474999999999965e-05, 4.498600000000033e-05, 4.5319000000001997e-05, 4.5431000000002025e-05, 4.502799999999904e-05, 4.508299999999785e-05, 4.494399999999815e-05, 4.4666999999998236e-05, 4.457000000000072e-05, 4.5083000000001316e-05, 4.483400000000054e-05, 4.4916999999998486e-05, 4.55000000000004e-05, 4.4931000000001525e-05, 4.536200000000018e-05, 4.5333000000001566e-05, 4.4973000000000235e-05, 4.55000000000004e-05, 4.474999999999965e-05, 4.4666999999998236e-05, 4.527799999999929e-05, 4.551399999999997e-05, 4.5138999999999596e-05, 4.479200000000183e-05, 4.5347000000001136e-05, 4.51939999999984e-05, 4.498600000000033e-05, 4.4638999999999096e-05, 4.504199999999861e-05, 4.497200000000076e-05, 4.4610999999999956e-05, 4.455499999999821e-05, 4.552800000000301e-05, 4.5445000000001595e-05, 4.5431000000002025e-05, 4.5375000000000276e-05, 4.4930999999998056e-05, 4.5361000000000706e-05]</msg>
<status status="PASS" starttime="20201030 15:55:32.878" endtime="20201030 15:55:32.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.873" endtime="20201030 15:55:32.881"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:32.884" endtime="20201030 15:55:32.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.883" endtime="20201030 15:55:32.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.882" endtime="20201030 15:55:32.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.502" endtime="20201030 15:55:32.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.502" endtime="20201030 15:55:32.905"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.914" endtime="20201030 15:55:32.931"></status>
</kw>
<msg timestamp="20201030 15:55:32.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.912" endtime="20201030 15:55:32.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.933" endtime="20201030 15:55:32.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.935" endtime="20201030 15:55:32.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.910" endtime="20201030 15:55:32.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.907" endtime="20201030 15:55:32.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.944" endtime="20201030 15:55:33.234"></status>
</kw>
<msg timestamp="20201030 15:55:33.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019622389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019668792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.943" endtime="20201030 15:55:33.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019622389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019668792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.238" endtime="20201030 15:55:33.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.246" endtime="20201030 15:55:33.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.940" endtime="20201030 15:55:33.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.939" endtime="20201030 15:55:33.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:33.253" level="INFO">${RESULT} = [{'diff': 4.6403000000000416e-05}, {'diff': 4.648600000000183e-05}, {'diff': 4.5694999999998376e-05}, {'diff': 4.5652999999999666e-05}, {'diff': 4.580599999999893e-05}, {'diff': 4.65000000000014e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:33.250" endtime="20201030 15:55:33.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:33.257" level="INFO">${ACCURACY} = {'diff': [4.6403000000000416e-05, 4.648600000000183e-05, 4.5694999999998376e-05, 4.5652999999999666e-05, 4.580599999999893e-05, 4.65000000000014e-05, 4.625000000000115e-05, 4.561200000000043e-05, 4.59...</msg>
<status status="PASS" starttime="20201030 15:55:33.254" endtime="20201030 15:55:33.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.261" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 15:55:33.260" endtime="20201030 15:55:33.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.264" level="INFO">VALUE: [4.6403000000000416e-05, 4.648600000000183e-05, 4.5694999999998376e-05, 4.5652999999999666e-05, 4.580599999999893e-05, 4.65000000000014e-05, 4.625000000000115e-05, 4.561200000000043e-05, 4.5902999999999916e-05, 4.579099999999989e-05, 4.622199999999854e-05, 4.61939999999994e-05, 4.629100000000039e-05, 4.5889000000000346e-05, 4.648599999999836e-05, 4.606899999999928e-05, 4.622199999999854e-05, 4.627800000000029e-05, 4.567999999999933e-05, 4.5847000000001636e-05, 4.570799999999847e-05, 4.5625000000000526e-05, 4.584699999999817e-05, 4.552799999999954e-05, 4.554200000000258e-05, 4.573600000000108e-05, 4.634699999999867e-05, 4.598599999999786e-05, 4.65000000000014e-05, 4.579199999999936e-05, 4.629199999999986e-05, 4.605599999999918e-05, 4.601400000000047e-05, 4.609799999999789e-05, 4.624999999999768e-05, 4.655599999999968e-05, 4.572199999999804e-05, 4.622199999999854e-05, 4.598600000000133e-05, 4.572200000000151e-05, 4.623599999999811e-05, 4.61939999999994e-05, 4.6403000000000416e-05, 4.5917000000002955e-05, 4.5875000000000776e-05, 4.65000000000014e-05, 4.573600000000108e-05, 4.5833000000002067e-05, 4.6125000000001026e-05, 4.5667000000002705e-05]</msg>
<status status="PASS" starttime="20201030 15:55:33.263" endtime="20201030 15:55:33.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.258" endtime="20201030 15:55:33.265"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:33.269" endtime="20201030 15:55:33.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.267" endtime="20201030 15:55:33.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.266" endtime="20201030 15:55:33.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.906" endtime="20201030 15:55:33.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.905" endtime="20201030 15:55:33.290"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.298" endtime="20201030 15:55:33.317"></status>
</kw>
<msg timestamp="20201030 15:55:33.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.297" endtime="20201030 15:55:33.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.318" endtime="20201030 15:55:33.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.321" endtime="20201030 15:55:33.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.294" endtime="20201030 15:55:33.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.292" endtime="20201030 15:55:33.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.330" endtime="20201030 15:55:33.615"></status>
</kw>
<msg timestamp="20201030 15:55:33.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020456903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020503542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.328" endtime="20201030 15:55:33.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020456903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020503542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.619" endtime="20201030 15:55:33.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.628" endtime="20201030 15:55:33.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.326" endtime="20201030 15:55:33.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.324" endtime="20201030 15:55:33.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:33.634" level="INFO">${RESULT} = [{'diff': 4.6639000000001096e-05}, {'diff': 4.737499999999881e-05}, {'diff': 4.676400000000122e-05}, {'diff': 4.686200000000168e-05}, {'diff': 4.7445000000000126e-05}, {'diff': 4.7139000000001596e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:33.631" endtime="20201030 15:55:33.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:33.638" level="INFO">${ACCURACY} = {'diff': [4.6639000000001096e-05, 4.737499999999881e-05, 4.676400000000122e-05, 4.686200000000168e-05, 4.7445000000000126e-05, 4.7139000000001596e-05, 4.741600000000151e-05, 4.690200000000144e-05, 4.7...</msg>
<status status="PASS" starttime="20201030 15:55:33.635" endtime="20201030 15:55:33.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.643" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 15:55:33.642" endtime="20201030 15:55:33.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.645" level="INFO">VALUE: [4.6639000000001096e-05, 4.737499999999881e-05, 4.676400000000122e-05, 4.686200000000168e-05, 4.7445000000000126e-05, 4.7139000000001596e-05, 4.741600000000151e-05, 4.690200000000144e-05, 4.738899999999838e-05, 4.744400000000065e-05, 4.690200000000144e-05, 4.748599999999936e-05, 4.654200000000011e-05, 4.713899999999813e-05, 4.744400000000065e-05, 4.743000000000108e-05, 4.673600000000208e-05, 4.686099999999874e-05, 4.730600000000043e-05, 4.741699999999752e-05, 4.7139000000001596e-05, 4.7431000000000556e-05, 4.6680999999999806e-05, 4.711099999999899e-05, 4.6972999999998766e-05, 4.740299999999795e-05, 4.7236999999998586e-05, 4.688899999999788e-05, 4.73330000000001e-05, 4.688899999999788e-05, 4.706900000000028e-05, 4.6875000000001776e-05, 4.748599999999936e-05, 4.695799999999972e-05, 4.730499999999749e-05, 4.734699999999967e-05, 4.654100000000064e-05, 4.711099999999899e-05, 4.747199999999979e-05, 4.68329999999996e-05, 4.681900000000003e-05, 4.655599999999968e-05, 4.713899999999813e-05, 4.736099999999924e-05, 4.680599999999993e-05, 4.680599999999993e-05, 4.652800000000054e-05, 4.675000000000165e-05, 4.652800000000054e-05, 4.687499999999831e-05]</msg>
<status status="PASS" starttime="20201030 15:55:33.644" endtime="20201030 15:55:33.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.639" endtime="20201030 15:55:33.648"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:33.651" endtime="20201030 15:55:33.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.650" endtime="20201030 15:55:33.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.649" endtime="20201030 15:55:33.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.291" endtime="20201030 15:55:33.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.290" endtime="20201030 15:55:33.672"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.681" endtime="20201030 15:55:33.698"></status>
</kw>
<msg timestamp="20201030 15:55:33.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.679" endtime="20201030 15:55:33.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.700" endtime="20201030 15:55:33.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.702" endtime="20201030 15:55:33.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.676" endtime="20201030 15:55:33.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.674" endtime="20201030 15:55:33.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.711" endtime="20201030 15:55:33.997"></status>
</kw>
<msg timestamp="20201030 15:55:34.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019594472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.710" endtime="20201030 15:55:34.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019594472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.002" endtime="20201030 15:55:34.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.010" endtime="20201030 15:55:34.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.707" endtime="20201030 15:55:34.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.705" endtime="20201030 15:55:34.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:34.017" level="INFO">${RESULT} = [{'diff': 4.816699999999827e-05}, {'diff': 4.776400000000222e-05}, {'diff': 4.78200000000005e-05}, {'diff': 4.826399999999925e-05}, {'diff': 4.8417000000001986e-05}, {'diff': 4.790299999999845e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:34.013" endtime="20201030 15:55:34.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:34.022" level="INFO">${ACCURACY} = {'diff': [4.816699999999827e-05, 4.776400000000222e-05, 4.78200000000005e-05, 4.826399999999925e-05, 4.8417000000001986e-05, 4.790299999999845e-05, 4.7736999999999086e-05, 4.7722999999999516e-05, 4.81...</msg>
<status status="PASS" starttime="20201030 15:55:34.017" endtime="20201030 15:55:34.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.026" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 15:55:34.025" endtime="20201030 15:55:34.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.029" level="INFO">VALUE: [4.816699999999827e-05, 4.776400000000222e-05, 4.78200000000005e-05, 4.826399999999925e-05, 4.8417000000001986e-05, 4.790299999999845e-05, 4.7736999999999086e-05, 4.7722999999999516e-05, 4.816600000000226e-05, 4.818000000000183e-05, 4.780500000000146e-05, 4.809700000000042e-05, 4.780600000000093e-05, 4.817999999999836e-05, 4.799999999999943e-05, 4.772200000000004e-05, 4.812499999999956e-05, 4.827800000000229e-05, 4.766699999999777e-05, 4.812499999999956e-05, 4.804199999999814e-05, 4.823600000000011e-05, 4.812499999999956e-05, 4.787499999999931e-05, 4.82079999999975e-05, 4.818099999999784e-05, 4.847200000000079e-05, 4.7972999999999766e-05, 4.808300000000085e-05, 4.8013999999999e-05, 4.780500000000146e-05, 4.798599999999986e-05, 4.818000000000183e-05, 4.780499999999799e-05, 4.754100000000164e-05, 4.812499999999956e-05, 4.816599999999879e-05, 4.799999999999943e-05, 4.780500000000146e-05, 4.7653000000001666e-05, 4.806899999999781e-05, 4.784700000000017e-05, 4.758399999999982e-05, 4.762499999999906e-05, 4.813899999999913e-05, 4.809799999999989e-05, 4.7931000000001056e-05, 4.758300000000035e-05, 4.823600000000011e-05, 4.818099999999784e-05]</msg>
<status status="PASS" starttime="20201030 15:55:34.027" endtime="20201030 15:55:34.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.022" endtime="20201030 15:55:34.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:34.034" endtime="20201030 15:55:34.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.032" endtime="20201030 15:55:34.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.031" endtime="20201030 15:55:34.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.673" endtime="20201030 15:55:34.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.672" endtime="20201030 15:55:34.055"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.063" endtime="20201030 15:55:34.082"></status>
</kw>
<msg timestamp="20201030 15:55:34.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.062" endtime="20201030 15:55:34.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.084" endtime="20201030 15:55:34.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.086" endtime="20201030 15:55:34.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.059" endtime="20201030 15:55:34.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.057" endtime="20201030 15:55:34.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.095" endtime="20201030 15:55:34.382"></status>
</kw>
<msg timestamp="20201030 15:55:34.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019606069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019654639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.094" endtime="20201030 15:55:34.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019606069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019654639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.386" endtime="20201030 15:55:34.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.394" endtime="20201030 15:55:34.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.091" endtime="20201030 15:55:34.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.090" endtime="20201030 15:55:34.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:34.401" level="INFO">${RESULT} = [{'diff': 4.857000000000125e-05}, {'diff': 4.913900000000013e-05}, {'diff': 4.884700000000117e-05}, {'diff': 4.930599999999896e-05}, {'diff': 4.9223000000001016e-05}, {'diff': 4.862500000000006e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:34.397" endtime="20201030 15:55:34.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:34.405" level="INFO">${ACCURACY} = {'diff': [4.857000000000125e-05, 4.913900000000013e-05, 4.884700000000117e-05, 4.930599999999896e-05, 4.9223000000001016e-05, 4.862500000000006e-05, 4.8945000000001626e-05, 4.936099999999777e-05, 4.92...</msg>
<status status="PASS" starttime="20201030 15:55:34.402" endtime="20201030 15:55:34.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.409" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 15:55:34.408" endtime="20201030 15:55:34.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.412" level="INFO">VALUE: [4.857000000000125e-05, 4.913900000000013e-05, 4.884700000000117e-05, 4.930599999999896e-05, 4.9223000000001016e-05, 4.862500000000006e-05, 4.8945000000001626e-05, 4.936099999999777e-05, 4.925000000000068e-05, 4.884700000000117e-05, 4.918099999999884e-05, 4.88469999999977e-05, 4.9014e-05, 4.880599999999846e-05, 4.883400000000107e-05, 4.926300000000078e-05, 4.942999999999961e-05, 4.884700000000117e-05, 4.949999999999746e-05, 4.904099999999967e-05, 4.879100000000289e-05, 4.855499999999874e-05, 4.917999999999936e-05, 4.892999999999911e-05, 4.917999999999936e-05, 4.877800000000279e-05, 4.895800000000172e-05, 4.912500000000056e-05, 4.923599999999764e-05, 4.875000000000018e-05, 4.8667000000002236e-05, 4.859700000000092e-05, 4.941699999999952e-05, 4.929199999999939e-05, 4.8959000000001196e-05, 4.9209000000001446e-05, 4.865200000000319e-05, 4.948599999999789e-05, 4.887500000000031e-05, 4.909699999999795e-05, 4.859700000000092e-05, 4.926400000000025e-05, 4.861100000000049e-05, 4.934700000000167e-05, 4.875000000000018e-05, 4.856900000000178e-05, 4.881899999999856e-05, 4.904200000000261e-05, 4.895799999999825e-05, 4.897200000000129e-05]</msg>
<status status="PASS" starttime="20201030 15:55:34.410" endtime="20201030 15:55:34.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.406" endtime="20201030 15:55:34.413"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:34.417" endtime="20201030 15:55:34.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.415" endtime="20201030 15:55:34.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.414" endtime="20201030 15:55:34.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.055" endtime="20201030 15:55:34.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.055" endtime="20201030 15:55:34.437"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.446" endtime="20201030 15:55:34.465"></status>
</kw>
<msg timestamp="20201030 15:55:34.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.445" endtime="20201030 15:55:34.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.467" endtime="20201030 15:55:34.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.469" endtime="20201030 15:55:34.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.442" endtime="20201030 15:55:34.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.440" endtime="20201030 15:55:34.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.478" endtime="20201030 15:55:34.763"></status>
</kw>
<msg timestamp="20201030 15:55:34.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020680111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020730097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.477" endtime="20201030 15:55:34.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020680111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020730097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.767" endtime="20201030 15:55:34.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.776" endtime="20201030 15:55:34.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.474" endtime="20201030 15:55:34.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.472" endtime="20201030 15:55:34.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:34.782" level="INFO">${RESULT} = [{'diff': 4.998599999999839e-05}, {'diff': 4.956899999999931e-05}, {'diff': 4.980499999999999e-05}, {'diff': 5.004200000000014e-05}, {'diff': 4.990300000000045e-05}, {'diff': 5.0222999999998547e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:34.779" endtime="20201030 15:55:34.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:34.786" level="INFO">${ACCURACY} = {'diff': [4.998599999999839e-05, 4.956899999999931e-05, 4.980499999999999e-05, 5.004200000000014e-05, 4.990300000000045e-05, 5.0222999999998547e-05, 5.041600000000104e-05, 5.005500000000024e-05, 4.991...</msg>
<status status="PASS" starttime="20201030 15:55:34.783" endtime="20201030 15:55:34.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.791" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 15:55:34.790" endtime="20201030 15:55:34.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.793" level="INFO">VALUE: [4.998599999999839e-05, 4.956899999999931e-05, 4.980499999999999e-05, 5.004200000000014e-05, 4.990300000000045e-05, 5.0222999999998547e-05, 5.041600000000104e-05, 5.005500000000024e-05, 4.991600000000054e-05, 5.019399999999993e-05, 4.972199999999857e-05, 4.991600000000054e-05, 5.037499999999834e-05, 5.037500000000181e-05, 5.004200000000014e-05, 4.966699999999977e-05, 5.029200000000039e-05, 4.956999999999878e-05, 5.029200000000039e-05, 4.956999999999878e-05, 5.029200000000039e-05, 4.999999999999796e-05, 5.037500000000181e-05, 5.005599999999971e-05, 5.037499999999834e-05, 5.018000000000036e-05, 4.991700000000002e-05, 5.000000000000143e-05, 4.970800000000247e-05, 4.962500000000106e-05, 4.991600000000054e-05, 5.012499999999809e-05, 5.038899999999791e-05, 5.01669999999968e-05, 5.027799999999735e-05, 5.030500000000049e-05, 5.051399999999803e-05, 5.01530000000007e-05, 5.016700000000027e-05, 4.955599999999921e-05, 5.013900000000113e-05, 5.018099999999984e-05, 5.036100000000224e-05, 4.956999999999878e-05, 5.048599999999889e-05, 4.997200000000229e-05, 4.974999999999771e-05, 4.991700000000002e-05, 4.959799999999792e-05, 5.031900000000006e-05]</msg>
<status status="PASS" starttime="20201030 15:55:34.792" endtime="20201030 15:55:34.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.787" endtime="20201030 15:55:34.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:34.799" endtime="20201030 15:55:34.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.798" endtime="20201030 15:55:34.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.796" endtime="20201030 15:55:34.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.438" endtime="20201030 15:55:34.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.438" endtime="20201030 15:55:34.820"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.829" endtime="20201030 15:55:34.848"></status>
</kw>
<msg timestamp="20201030 15:55:34.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.827" endtime="20201030 15:55:34.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.850" endtime="20201030 15:55:34.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.852" endtime="20201030 15:55:34.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.825" endtime="20201030 15:55:34.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.822" endtime="20201030 15:55:34.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.861" endtime="20201030 15:55:35.147"></status>
</kw>
<msg timestamp="20201030 15:55:35.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019560972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019612347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.860" endtime="20201030 15:55:35.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019560972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019612347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.151" endtime="20201030 15:55:35.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.160" endtime="20201030 15:55:35.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.857" endtime="20201030 15:55:35.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.855" endtime="20201030 15:55:35.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:35.166" level="INFO">${RESULT} = [{'diff': 5.137499999999934e-05}, {'diff': 5.073600000000261e-05}, {'diff': 5.072199999999957e-05}, {'diff': 5.0679999999997394e-05}, {'diff': 5.087499999999884e-05}, {'diff': 5.056900000000031e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:35.163" endtime="20201030 15:55:35.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:35.171" level="INFO">${ACCURACY} = {'diff': [5.137499999999934e-05, 5.073600000000261e-05, 5.072199999999957e-05, 5.0679999999997394e-05, 5.087499999999884e-05, 5.056900000000031e-05, 5.1429999999998144e-05, 5.090299999999798e-05, 5.11...</msg>
<status status="PASS" starttime="20201030 15:55:35.167" endtime="20201030 15:55:35.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.176" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 15:55:35.175" endtime="20201030 15:55:35.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.178" level="INFO">VALUE: [5.137499999999934e-05, 5.073600000000261e-05, 5.072199999999957e-05, 5.0679999999997394e-05, 5.087499999999884e-05, 5.056900000000031e-05, 5.1429999999998144e-05, 5.090299999999798e-05, 5.118100000000084e-05, 5.127799999999835e-05, 5.144500000000066e-05, 5.107000000000028e-05, 5.15140000000025e-05, 5.087499999999884e-05, 5.061099999999902e-05, 5.0695000000003376e-05, 5.143100000000109e-05, 5.059700000000292e-05, 5.056900000000031e-05, 5.143000000000161e-05, 5.073599999999914e-05, 5.104100000000167e-05, 5.0652000000001723e-05, 5.073599999999914e-05, 5.068000000000086e-05, 5.058299999999988e-05, 5.076400000000175e-05, 5.093000000000111e-05, 5.1486999999999367e-05, 5.063899999999816e-05, 5.056999999999978e-05, 5.098599999999939e-05, 5.10279999999981e-05, 5.136099999999977e-05, 5.130500000000149e-05, 5.069499999999991e-05, 5.097199999999982e-05, 5.143100000000109e-05, 5.0736999999998617e-05, 5.099999999999896e-05, 5.130599999999749e-05, 5.083400000000307e-05, 5.074999999999871e-05, 5.129100000000192e-05, 5.105500000000124e-05, 5.066600000000129e-05, 5.090300000000145e-05, 5.052699999999813e-05, 5.087500000000231e-05, 5.080600000000046e-05]</msg>
<status status="PASS" starttime="20201030 15:55:35.177" endtime="20201030 15:55:35.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.172" endtime="20201030 15:55:35.179"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:35.183" endtime="20201030 15:55:35.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.182" endtime="20201030 15:55:35.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.180" endtime="20201030 15:55:35.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.821" endtime="20201030 15:55:35.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.820" endtime="20201030 15:55:35.204"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.213" endtime="20201030 15:55:35.233"></status>
</kw>
<msg timestamp="20201030 15:55:35.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.211" endtime="20201030 15:55:35.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.235" endtime="20201030 15:55:35.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.237" endtime="20201030 15:55:35.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.209" endtime="20201030 15:55:35.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.207" endtime="20201030 15:55:35.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.247" endtime="20201030 15:55:35.533"></status>
</kw>
<msg timestamp="20201030 15:55:35.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020134556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020186681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.245" endtime="20201030 15:55:35.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020134556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020186681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.538" endtime="20201030 15:55:35.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.546" endtime="20201030 15:55:35.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.243" endtime="20201030 15:55:35.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.241" endtime="20201030 15:55:35.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:35.553" level="INFO">${RESULT} = [{'diff': 5.212500000000009e-05}, {'diff': 5.154199999999817e-05}, {'diff': 5.154199999999817e-05}, {'diff': 5.162499999999959e-05}, {'diff': 5.169400000000143e-05}, {'diff': 5.161100000000002e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:35.550" endtime="20201030 15:55:35.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:35.557" level="INFO">${ACCURACY} = {'diff': [5.212500000000009e-05, 5.154199999999817e-05, 5.154199999999817e-05, 5.162499999999959e-05, 5.169400000000143e-05, 5.161100000000002e-05, 5.180500000000199e-05, 5.2179999999998894e-05, 5.206...</msg>
<status status="PASS" starttime="20201030 15:55:35.554" endtime="20201030 15:55:35.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.562" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 15:55:35.561" endtime="20201030 15:55:35.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.565" level="INFO">VALUE: [5.212500000000009e-05, 5.154199999999817e-05, 5.154199999999817e-05, 5.162499999999959e-05, 5.169400000000143e-05, 5.161100000000002e-05, 5.180500000000199e-05, 5.2179999999998894e-05, 5.206899999999834e-05, 5.172200000000057e-05, 5.187499999999984e-05, 5.243099999999862e-05, 5.158300000000088e-05, 5.236100000000077e-05, 5.152800000000207e-05, 5.187499999999984e-05, 5.188899999999941e-05, 5.198600000000039e-05, 5.205600000000171e-05, 5.236100000000077e-05, 5.180600000000146e-05, 5.218100000000184e-05, 5.240299999999948e-05, 5.248700000000037e-05, 5.250000000000046e-05, 5.231899999999859e-05, 5.218000000000236e-05, 5.236100000000077e-05, 5.206899999999834e-05, 5.248600000000089e-05, 5.190299999999898e-05, 5.1929999999998644e-05, 5.250000000000046e-05, 5.187499999999984e-05, 5.172200000000057e-05, 5.177799999999885e-05, 5.180600000000146e-05, 5.152800000000207e-05, 5.162500000000306e-05, 5.154200000000164e-05, 5.226399999999978e-05, 5.229199999999892e-05, 5.186100000000027e-05, 5.230599999999849e-05, 5.237500000000034e-05, 5.2179999999998894e-05, 5.173699999999962e-05, 5.2165999999999324e-05, 5.184699999999723e-05, 5.159699999999698e-05]</msg>
<status status="PASS" starttime="20201030 15:55:35.563" endtime="20201030 15:55:35.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.558" endtime="20201030 15:55:35.566"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:35.570" endtime="20201030 15:55:35.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.568" endtime="20201030 15:55:35.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.567" endtime="20201030 15:55:35.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.205" endtime="20201030 15:55:35.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.204" endtime="20201030 15:55:35.591"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.601" endtime="20201030 15:55:35.625"></status>
</kw>
<msg timestamp="20201030 15:55:35.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.599" endtime="20201030 15:55:35.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.628" endtime="20201030 15:55:35.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.634" endtime="20201030 15:55:35.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.597" endtime="20201030 15:55:35.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.594" endtime="20201030 15:55:35.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.656" endtime="20201030 15:55:35.952"></status>
</kw>
<msg timestamp="20201030 15:55:35.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022191736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.652" endtime="20201030 15:55:35.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022191736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.956" endtime="20201030 15:55:35.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.965" endtime="20201030 15:55:35.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.646" endtime="20201030 15:55:35.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.642" endtime="20201030 15:55:35.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:35.972" level="INFO">${RESULT} = [{'diff': 5.251400000000003e-05}, {'diff': 5.323600000000164e-05}, {'diff': 5.251400000000003e-05}, {'diff': 5.288900000000041e-05}, {'diff': 5.312499999999762e-05}, {'diff': 5.282000000000203e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:35.969" endtime="20201030 15:55:35.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:35.976" level="INFO">${ACCURACY} = {'diff': [5.251400000000003e-05, 5.323600000000164e-05, 5.251400000000003e-05, 5.288900000000041e-05, 5.312499999999762e-05, 5.282000000000203e-05, 5.340300000000048e-05, 5.286100000000127e-05, 5.2957...</msg>
<status status="PASS" starttime="20201030 15:55:35.973" endtime="20201030 15:55:35.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.981" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 15:55:35.980" endtime="20201030 15:55:35.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.983" level="INFO">VALUE: [5.251400000000003e-05, 5.323600000000164e-05, 5.251400000000003e-05, 5.288900000000041e-05, 5.312499999999762e-05, 5.282000000000203e-05, 5.340300000000048e-05, 5.286100000000127e-05, 5.2957999999998784e-05, 5.34730000000018e-05, 5.350000000000146e-05, 5.286100000000127e-05, 5.29869999999974e-05, 5.280599999999899e-05, 5.337499999999787e-05, 5.283300000000213e-05, 5.334699999999873e-05, 5.30410000000002e-05, 5.2665999999999824e-05, 5.351400000000103e-05, 5.28609999999978e-05, 5.290299999999998e-05, 5.3235999999998174e-05, 5.3235999999998174e-05, 5.308300000000238e-05, 5.298600000000139e-05, 5.318099999999937e-05, 5.3499999999997994e-05, 5.258400000000135e-05, 5.343099999999962e-05, 5.305599999999924e-05, 5.280599999999899e-05, 5.281999999999856e-05, 5.259700000000145e-05, 5.333299999999916e-05, 5.270900000000148e-05, 5.280499999999952e-05, 5.3235999999998174e-05, 5.275000000000071e-05, 5.319499999999894e-05, 5.295800000000225e-05, 5.283300000000213e-05, 5.25279999999996e-05, 5.312499999999762e-05, 5.3457999999999284e-05, 5.31669999999998e-05, 5.329199999999992e-05, 5.331899999999959e-05, 5.301400000000053e-05, 5.318100000000284e-05]</msg>
<status status="PASS" starttime="20201030 15:55:35.982" endtime="20201030 15:55:35.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.977" endtime="20201030 15:55:35.986"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:35.990" endtime="20201030 15:55:36.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.988" endtime="20201030 15:55:36.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.987" endtime="20201030 15:55:36.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.593" endtime="20201030 15:55:36.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.591" endtime="20201030 15:55:36.010"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.020" endtime="20201030 15:55:36.038"></status>
</kw>
<msg timestamp="20201030 15:55:36.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.018" endtime="20201030 15:55:36.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.039" endtime="20201030 15:55:36.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.042" endtime="20201030 15:55:36.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.015" endtime="20201030 15:55:36.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.013" endtime="20201030 15:55:36.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.052" endtime="20201030 15:55:36.338"></status>
</kw>
<msg timestamp="20201030 15:55:36.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020275181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020329542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.050" endtime="20201030 15:55:36.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020275181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020329542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.342" endtime="20201030 15:55:36.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.351" endtime="20201030 15:55:36.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.047" endtime="20201030 15:55:36.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.045" endtime="20201030 15:55:36.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:36.357" level="INFO">${RESULT} = [{'diff': 5.43609999999993e-05}, {'diff': 5.4249999999998744e-05}, {'diff': 5.354200000000017e-05}, {'diff': 5.429200000000092e-05}, {'diff': 5.390299999999751e-05}, {'diff': 5.400000000000196e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:36.354" endtime="20201030 15:55:36.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:36.362" level="INFO">${ACCURACY} = {'diff': [5.43609999999993e-05, 5.4249999999998744e-05, 5.354200000000017e-05, 5.429200000000092e-05, 5.390299999999751e-05, 5.400000000000196e-05, 5.437500000000234e-05, 5.4235999999999174e-05, 5.372...</msg>
<status status="PASS" starttime="20201030 15:55:36.358" endtime="20201030 15:55:36.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.367" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 15:55:36.366" endtime="20201030 15:55:36.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.370" level="INFO">VALUE: [5.43609999999993e-05, 5.4249999999998744e-05, 5.354200000000017e-05, 5.429200000000092e-05, 5.390299999999751e-05, 5.400000000000196e-05, 5.437500000000234e-05, 5.4235999999999174e-05, 5.372200000000257e-05, 5.436100000000277e-05, 5.400000000000196e-05, 5.411100000000252e-05, 5.418100000000037e-05, 5.440300000000148e-05, 5.36670000000003e-05, 5.379200000000042e-05, 5.4235999999999174e-05, 5.440299999999801e-05, 5.4458000000000284e-05, 5.365300000000073e-05, 5.354200000000017e-05, 5.36670000000003e-05, 5.437499999999887e-05, 5.387499999999837e-05, 5.3999999999998494e-05, 5.387500000000184e-05, 5.379100000000095e-05, 5.409699999999948e-05, 5.4471999999999854e-05, 5.437499999999887e-05, 5.361099999999855e-05, 5.40410000000012e-05, 5.3915999999997605e-05, 5.430600000000049e-05, 5.358299999999941e-05, 5.36670000000003e-05, 5.354200000000017e-05, 5.391700000000055e-05, 5.4291999999997453e-05, 5.365300000000073e-05, 5.380599999999999e-05, 5.354200000000017e-05, 5.4499999999998994e-05, 5.369500000000291e-05, 5.373699999999815e-05, 5.412499999999862e-05, 5.409799999999895e-05, 5.401400000000153e-05, 5.43609999999993e-05, 5.356899999999984e-05]</msg>
<status status="PASS" starttime="20201030 15:55:36.368" endtime="20201030 15:55:36.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.363" endtime="20201030 15:55:36.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:36.375" endtime="20201030 15:55:36.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.373" endtime="20201030 15:55:36.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.372" endtime="20201030 15:55:36.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.012" endtime="20201030 15:55:36.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.011" endtime="20201030 15:55:36.396"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.405" endtime="20201030 15:55:36.423"></status>
</kw>
<msg timestamp="20201030 15:55:36.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.403" endtime="20201030 15:55:36.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.425" endtime="20201030 15:55:36.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.427" endtime="20201030 15:55:36.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.401" endtime="20201030 15:55:36.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.398" endtime="20201030 15:55:36.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.437" endtime="20201030 15:55:36.728"></status>
</kw>
<msg timestamp="20201030 15:55:36.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020264764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020319833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.435" endtime="20201030 15:55:36.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020264764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020319833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.732" endtime="20201030 15:55:36.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.741" endtime="20201030 15:55:36.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.432" endtime="20201030 15:55:36.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.431" endtime="20201030 15:55:36.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:36.747" level="INFO">${RESULT} = [{'diff': 5.506899999999787e-05}, {'diff': 5.511100000000005e-05}, {'diff': 5.54869999999999e-05}, {'diff': 5.530600000000149e-05}, {'diff': 5.53610000000003e-05}, {'diff': 5.53610000000003e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:55:36.744" endtime="20201030 15:55:36.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:36.752" level="INFO">${ACCURACY} = {'diff': [5.506899999999787e-05, 5.511100000000005e-05, 5.54869999999999e-05, 5.530600000000149e-05, 5.53610000000003e-05, 5.53610000000003e-05, 5.511100000000005e-05, 5.4541999999997703e-05, 5.455600...</msg>
<status status="PASS" starttime="20201030 15:55:36.749" endtime="20201030 15:55:36.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.756" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 15:55:36.755" endtime="20201030 15:55:36.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.759" level="INFO">VALUE: [5.506899999999787e-05, 5.511100000000005e-05, 5.54869999999999e-05, 5.530600000000149e-05, 5.53610000000003e-05, 5.53610000000003e-05, 5.511100000000005e-05, 5.4541999999997703e-05, 5.455600000000074e-05, 5.465299999999826e-05, 5.46670000000013e-05, 5.533400000000063e-05, 5.5277999999998884e-05, 5.522300000000008e-05, 5.4972000000000354e-05, 5.461099999999955e-05, 5.48609999999998e-05, 5.4944000000001214e-05, 5.506900000000134e-05, 5.461099999999955e-05, 5.5513999999999564e-05, 5.4722000000000104e-05, 5.5194000000001464e-05, 5.509700000000048e-05, 5.476400000000228e-05, 5.483299999999719e-05, 5.506899999999787e-05, 5.5027999999998634e-05, 5.512499999999962e-05, 5.5291999999998453e-05, 5.463899999999869e-05, 5.48609999999998e-05, 5.4972000000000354e-05, 5.488899999999894e-05, 5.487499999999937e-05, 5.458399999999988e-05, 5.483300000000066e-05, 5.495900000000026e-05, 5.4999999999999494e-05, 5.497299999999983e-05, 5.4665999999998355e-05, 5.462499999999912e-05, 5.50410000000022e-05, 5.454200000000117e-05, 5.4930000000001644e-05, 5.4722000000000104e-05, 5.480499999999805e-05, 5.48479999999997e-05, 5.458300000000041e-05, 5.505600000000124e-05]</msg>
<status status="PASS" starttime="20201030 15:55:36.758" endtime="20201030 15:55:36.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.753" endtime="20201030 15:55:36.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:36.764" endtime="20201030 15:55:36.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.763" endtime="20201030 15:55:36.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.761" endtime="20201030 15:55:36.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.397" endtime="20201030 15:55:36.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.396" endtime="20201030 15:55:36.785"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.795" endtime="20201030 15:55:36.815"></status>
</kw>
<msg timestamp="20201030 15:55:36.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.793" endtime="20201030 15:55:36.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.816" endtime="20201030 15:55:36.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.819" endtime="20201030 15:55:36.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.790" endtime="20201030 15:55:36.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.787" endtime="20201030 15:55:36.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.828" endtime="20201030 15:55:37.115"></status>
</kw>
<msg timestamp="20201030 15:55:37.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022039931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022096208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.827" endtime="20201030 15:55:37.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022039931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022096208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.119" endtime="20201030 15:55:37.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.128" endtime="20201030 15:55:37.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.824" endtime="20201030 15:55:37.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.822" endtime="20201030 15:55:37.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:37.135" level="INFO">${RESULT} = [{'diff': 5.627700000000041e-05}, {'diff': 5.593099999999865e-05}, {'diff': 5.5944000000002214e-05}, {'diff': 5.615299999999976e-05}, {'diff': 5.6416000000000105e-05}, {'diff': 5.5986000000000924e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:37.131" endtime="20201030 15:55:37.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:37.139" level="INFO">${ACCURACY} = {'diff': [5.627700000000041e-05, 5.593099999999865e-05, 5.5944000000002214e-05, 5.615299999999976e-05, 5.6416000000000105e-05, 5.5986000000000924e-05, 5.612500000000062e-05, 5.561100000000055e-05, 5.6...</msg>
<status status="PASS" starttime="20201030 15:55:37.136" endtime="20201030 15:55:37.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.144" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 15:55:37.143" endtime="20201030 15:55:37.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.146" level="INFO">VALUE: [5.627700000000041e-05, 5.593099999999865e-05, 5.5944000000002214e-05, 5.615299999999976e-05, 5.6416000000000105e-05, 5.5986000000000924e-05, 5.612500000000062e-05, 5.561100000000055e-05, 5.629099999999998e-05, 5.584700000000123e-05, 5.5736000000000674e-05, 5.609700000000148e-05, 5.5929999999999175e-05, 5.580600000000199e-05, 5.6486000000001424e-05, 5.5541999999998704e-05, 5.561100000000055e-05, 5.590299999999951e-05, 5.6277999999999884e-05, 5.5999999999997024e-05, 5.591700000000255e-05, 5.5805999999998523e-05, 5.563899999999969e-05, 5.620899999999804e-05, 5.5791999999998954e-05, 5.58480000000007e-05, 5.618100000000237e-05, 5.6305999999999023e-05, 5.5750000000000244e-05, 5.55410000000027e-05, 5.5722000000001104e-05, 5.609699999999801e-05, 5.5708000000001534e-05, 5.5735999999997204e-05, 5.629099999999998e-05, 5.570900000000101e-05, 5.590299999999951e-05, 5.6055999999998773e-05, 5.562500000000012e-05, 5.566699999999883e-05, 5.630600000000249e-05, 5.561099999999708e-05, 5.636099999999783e-05, 5.5736000000000674e-05, 5.5986000000000924e-05, 5.587500000000037e-05, 5.5555999999998273e-05, 5.584799999999723e-05, 5.561100000000055e-05, 5.6222000000001604e-05]</msg>
<status status="PASS" starttime="20201030 15:55:37.145" endtime="20201030 15:55:37.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.140" endtime="20201030 15:55:37.149"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:37.152" endtime="20201030 15:55:37.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.151" endtime="20201030 15:55:37.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.150" endtime="20201030 15:55:37.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.786" endtime="20201030 15:55:37.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.785" endtime="20201030 15:55:37.173"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.182" endtime="20201030 15:55:37.201"></status>
</kw>
<msg timestamp="20201030 15:55:37.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.181" endtime="20201030 15:55:37.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.203" endtime="20201030 15:55:37.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.205" endtime="20201030 15:55:37.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.178" endtime="20201030 15:55:37.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.176" endtime="20201030 15:55:37.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.215" endtime="20201030 15:55:37.500"></status>
</kw>
<msg timestamp="20201030 15:55:37.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019977722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020034556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.213" endtime="20201030 15:55:37.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019977722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020034556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.504" endtime="20201030 15:55:37.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.513" endtime="20201030 15:55:37.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.210" endtime="20201030 15:55:37.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.209" endtime="20201030 15:55:37.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:37.520" level="INFO">${RESULT} = [{'diff': 5.683399999999866e-05}, {'diff': 5.7278000000000884e-05}, {'diff': 5.7013999999997594e-05}, {'diff': 5.7193999999999995e-05}, {'diff': 5.741700000000058e-05}, {'diff': 5.691700000000008e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:37.516" endtime="20201030 15:55:37.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:37.525" level="INFO">${ACCURACY} = {'diff': [5.683399999999866e-05, 5.7278000000000884e-05, 5.7013999999997594e-05, 5.7193999999999995e-05, 5.741700000000058e-05, 5.691700000000008e-05, 5.6569999999998843e-05, 5.71809999999999e-05, 5.6...</msg>
<status status="PASS" starttime="20201030 15:55:37.521" endtime="20201030 15:55:37.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.529" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 15:55:37.528" endtime="20201030 15:55:37.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.532" level="INFO">VALUE: [5.683399999999866e-05, 5.7278000000000884e-05, 5.7013999999997594e-05, 5.7193999999999995e-05, 5.741700000000058e-05, 5.691700000000008e-05, 5.6569999999998843e-05, 5.71809999999999e-05, 5.6791999999999954e-05, 5.662500000000112e-05, 5.7277999999997414e-05, 5.682000000000256e-05, 5.7291999999996984e-05, 5.7333999999999163e-05, 5.723699999999818e-05, 5.6735999999998205e-05, 5.734799999999873e-05, 5.70550000000003e-05, 5.6499999999997524e-05, 5.740300000000101e-05, 5.6971999999998885e-05, 5.6750000000001244e-05, 5.6694000000002964e-05, 5.6749999999997774e-05, 5.7193999999999995e-05, 5.6735999999998205e-05, 5.736099999999883e-05, 5.736099999999883e-05, 5.737500000000187e-05, 5.7306000000000024e-05, 5.6708000000002534e-05, 5.6555999999999274e-05, 5.713899999999772e-05, 5.738899999999797e-05, 5.672300000000158e-05, 5.737500000000187e-05, 5.695899999999879e-05, 5.709700000000248e-05, 5.70550000000003e-05, 5.6930000000000175e-05, 5.7319999999999593e-05, 5.7207999999999565e-05, 5.715300000000076e-05, 5.663899999999722e-05, 5.7542000000000704e-05, 5.659699999999851e-05, 5.7513999999998094e-05, 5.734699999999926e-05, 5.7500000000001994e-05, 5.7055999999999774e-05]</msg>
<status status="PASS" starttime="20201030 15:55:37.531" endtime="20201030 15:55:37.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.526" endtime="20201030 15:55:37.533"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:37.537" endtime="20201030 15:55:37.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.536" endtime="20201030 15:55:37.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.534" endtime="20201030 15:55:37.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.174" endtime="20201030 15:55:37.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.174" endtime="20201030 15:55:37.558"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.567" endtime="20201030 15:55:37.586"></status>
</kw>
<msg timestamp="20201030 15:55:37.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.565" endtime="20201030 15:55:37.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.588" endtime="20201030 15:55:37.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.591" endtime="20201030 15:55:37.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.563" endtime="20201030 15:55:37.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.560" endtime="20201030 15:55:37.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.601" endtime="20201030 15:55:37.889"></status>
</kw>
<msg timestamp="20201030 15:55:37.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019995361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02005325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:37.600" endtime="20201030 15:55:37.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019995361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02005325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:37.893" endtime="20201030 15:55:37.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.902" endtime="20201030 15:55:37.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.597" endtime="20201030 15:55:37.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.595" endtime="20201030 15:55:37.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:37.909" level="INFO">${RESULT} = [{'diff': 5.788900000000194e-05}, {'diff': 5.8278000000001884e-05}, {'diff': 5.793100000000065e-05}, {'diff': 5.81810000000009e-05}, {'diff': 5.762500000000212e-05}, {'diff': 5.761199999999855e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:37.905" endtime="20201030 15:55:37.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:37.913" level="INFO">${ACCURACY} = {'diff': [5.788900000000194e-05, 5.8278000000001884e-05, 5.793100000000065e-05, 5.81810000000009e-05, 5.762500000000212e-05, 5.761199999999855e-05, 5.8070000000000344e-05, 5.8193999999997525e-05, 5.81...</msg>
<status status="PASS" starttime="20201030 15:55:37.910" endtime="20201030 15:55:37.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.917" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 15:55:37.916" endtime="20201030 15:55:37.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.920" level="INFO">VALUE: [5.788900000000194e-05, 5.8278000000001884e-05, 5.793100000000065e-05, 5.81810000000009e-05, 5.762500000000212e-05, 5.761199999999855e-05, 5.8070000000000344e-05, 5.8193999999997525e-05, 5.8180000000001425e-05, 5.8235999999999705e-05, 5.83749999999994e-05, 5.8415999999998636e-05, 5.812500000000262e-05, 5.7708000000000065e-05, 5.8208000000000565e-05, 5.7694000000000495e-05, 5.8056000000000774e-05, 5.7721999999999635e-05, 5.8472000000000385e-05, 5.7806000000000524e-05, 5.8485999999999955e-05, 5.7569999999999844e-05, 5.784699999999976e-05, 5.8334000000000163e-05, 5.7971999999999885e-05, 5.762499999999865e-05, 5.852699999999919e-05, 5.793099999999718e-05, 5.7999999999999025e-05, 5.8179999999997956e-05, 5.83749999999994e-05, 5.7694000000000495e-05, 5.7930000000001175e-05, 5.8165999999998386e-05, 5.763900000000169e-05, 5.790299999999804e-05, 5.7985999999999455e-05, 5.815300000000176e-05, 5.809700000000001e-05, 5.791699999999761e-05, 5.8208000000000565e-05, 5.8334000000000163e-05, 5.8041999999997734e-05, 5.8278000000001884e-05, 5.845900000000029e-05, 5.815299999999829e-05, 5.844500000000072e-05, 5.8499999999999525e-05, 5.83749999999994e-05, 5.780500000000105e-05]</msg>
<status status="PASS" starttime="20201030 15:55:37.919" endtime="20201030 15:55:37.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.914" endtime="20201030 15:55:37.922"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:37.925" endtime="20201030 15:55:37.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.924" endtime="20201030 15:55:37.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.923" endtime="20201030 15:55:37.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.559" endtime="20201030 15:55:37.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.558" endtime="20201030 15:55:37.946"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.955" endtime="20201030 15:55:37.975"></status>
</kw>
<msg timestamp="20201030 15:55:37.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.954" endtime="20201030 15:55:37.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.977" endtime="20201030 15:55:37.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.980" endtime="20201030 15:55:37.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.951" endtime="20201030 15:55:37.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.949" endtime="20201030 15:55:37.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.989" endtime="20201030 15:55:38.276"></status>
</kw>
<msg timestamp="20201030 15:55:38.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021192931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021252056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.987" endtime="20201030 15:55:38.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021192931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021252056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.280" endtime="20201030 15:55:38.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.289" endtime="20201030 15:55:38.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.985" endtime="20201030 15:55:38.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.983" endtime="20201030 15:55:38.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:38.296" level="INFO">${RESULT} = [{'diff': 5.912499999999668e-05}, {'diff': 5.8929999999998706e-05}, {'diff': 5.9236000000000705e-05}, {'diff': 5.880499999999858e-05}, {'diff': 5.9291999999998984e-05}, {'diff': 5.8986000000000455e-05...</msg>
<status status="PASS" starttime="20201030 15:55:38.292" endtime="20201030 15:55:38.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:38.300" level="INFO">${ACCURACY} = {'diff': [5.912499999999668e-05, 5.8929999999998706e-05, 5.9236000000000705e-05, 5.880499999999858e-05, 5.9291999999998984e-05, 5.8986000000000455e-05, 5.936100000000083e-05, 5.866700000000183e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:55:38.297" endtime="20201030 15:55:38.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.305" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 15:55:38.304" endtime="20201030 15:55:38.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.307" level="INFO">VALUE: [5.912499999999668e-05, 5.8929999999998706e-05, 5.9236000000000705e-05, 5.880499999999858e-05, 5.9291999999998984e-05, 5.8986000000000455e-05, 5.936100000000083e-05, 5.866700000000183e-05, 5.8513999999999095e-05, 5.8749999999999775e-05, 5.8805999999998054e-05, 5.9320000000001594e-05, 5.9070000000001344e-05, 5.883299999999772e-05, 5.916699999999886e-05, 5.862499999999965e-05, 5.91810000000019e-05, 5.9236000000000705e-05, 5.9291999999998984e-05, 5.9429999999999206e-05, 5.9000000000000025e-05, 5.8597999999999983e-05, 5.881900000000162e-05, 5.859700000000051e-05, 5.933300000000169e-05, 5.888900000000294e-05, 5.931899999999865e-05, 5.8514000000002564e-05, 5.911100000000058e-05, 5.886100000000033e-05, 5.912500000000015e-05, 5.9027999999999164e-05, 5.890299999999904e-05, 5.8777999999998914e-05, 5.909699999999754e-05, 5.936100000000083e-05, 5.9236000000000705e-05, 5.9179999999998956e-05, 5.9291999999998984e-05, 5.908300000000144e-05, 5.9235999999997235e-05, 5.8985999999996985e-05, 5.855499999999833e-05, 5.931900000000212e-05, 5.909700000000101e-05, 5.862499999999965e-05, 5.9291999999998984e-05, 5.9443999999998776e-05, 5.8749999999999775e-05, 5.86810000000014e-05]</msg>
<status status="PASS" starttime="20201030 15:55:38.306" endtime="20201030 15:55:38.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.301" endtime="20201030 15:55:38.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:38.313" endtime="20201030 15:55:38.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.312" endtime="20201030 15:55:38.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.311" endtime="20201030 15:55:38.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.947" endtime="20201030 15:55:38.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.947" endtime="20201030 15:55:38.334"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.343" endtime="20201030 15:55:38.362"></status>
</kw>
<msg timestamp="20201030 15:55:38.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.342" endtime="20201030 15:55:38.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.363" endtime="20201030 15:55:38.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.366" endtime="20201030 15:55:38.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.339" endtime="20201030 15:55:38.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.337" endtime="20201030 15:55:38.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.375" endtime="20201030 15:55:38.662"></status>
</kw>
<msg timestamp="20201030 15:55:38.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020104722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020164708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.374" endtime="20201030 15:55:38.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020104722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020164708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.666" endtime="20201030 15:55:38.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.675" endtime="20201030 15:55:38.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.371" endtime="20201030 15:55:38.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.369" endtime="20201030 15:55:38.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:38.682" level="INFO">${RESULT} = [{'diff': 5.9986000000001455e-05}, {'diff': 5.954099999999976e-05}, {'diff': 5.9999999999997555e-05}, {'diff': 5.9902000000000566e-05}, {'diff': 6.0430000000000206e-05}, {'diff': 6.034699999999879e-05...</msg>
<status status="PASS" starttime="20201030 15:55:38.679" endtime="20201030 15:55:38.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:38.688" level="INFO">${ACCURACY} = {'diff': [5.9986000000001455e-05, 5.954099999999976e-05, 5.9999999999997555e-05, 5.9902000000000566e-05, 6.0430000000000206e-05, 6.034699999999879e-05, 5.9764000000000345e-05, 5.984699999999829e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:55:38.683" endtime="20201030 15:55:38.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.693" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 15:55:38.692" endtime="20201030 15:55:38.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.696" level="INFO">VALUE: [5.9986000000001455e-05, 5.954099999999976e-05, 5.9999999999997555e-05, 5.9902000000000566e-05, 6.0430000000000206e-05, 6.034699999999879e-05, 5.9764000000000345e-05, 5.984699999999829e-05, 5.9736000000001205e-05, 5.966699999999936e-05, 6.037499999999793e-05, 5.9999999999997555e-05, 5.969500000000197e-05, 6.037499999999793e-05, 5.9722000000001635e-05, 5.981899999999915e-05, 6.0000000000001025e-05, 6.0291999999999984e-05, 6.0000000000001025e-05, 5.955499999999933e-05, 6.0485999999998485e-05, 6.0486000000001955e-05, 5.9971999999998415e-05, 6.0249999999997805e-05, 6.011100000000158e-05, 5.961100000000108e-05, 5.9722000000001635e-05, 6.0249999999997805e-05, 5.968099999999893e-05, 6.009700000000201e-05, 6.0000000000001025e-05, 5.966699999999936e-05, 5.988900000000047e-05, 6.0500000000001525e-05, 5.9750000000000775e-05, 5.986099999999786e-05, 5.9848000000001234e-05, 5.95689999999989e-05, 6.0471999999998916e-05, 5.9694000000002495e-05, 5.9929999999999706e-05, 6.0485999999998485e-05, 5.981899999999915e-05, 5.959699999999804e-05, 5.9665999999999886e-05, 5.959700000000151e-05, 5.96810000000024e-05, 5.9985999999997985e-05, 6.0098000000001484e-05, 6.0236000000001705e-05]</msg>
<status status="PASS" starttime="20201030 15:55:38.694" endtime="20201030 15:55:38.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.689" endtime="20201030 15:55:38.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:38.701" endtime="20201030 15:55:38.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.700" endtime="20201030 15:55:38.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.698" endtime="20201030 15:55:38.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.335" endtime="20201030 15:55:38.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.335" endtime="20201030 15:55:38.722"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.731" endtime="20201030 15:55:38.750"></status>
</kw>
<msg timestamp="20201030 15:55:38.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.729" endtime="20201030 15:55:38.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.751" endtime="20201030 15:55:38.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.754" endtime="20201030 15:55:38.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.727" endtime="20201030 15:55:38.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.724" endtime="20201030 15:55:38.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.763" endtime="20201030 15:55:39.051"></status>
</kw>
<msg timestamp="20201030 15:55:39.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020043833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020104708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.762" endtime="20201030 15:55:39.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020043833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020104708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.056" endtime="20201030 15:55:39.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.064" endtime="20201030 15:55:39.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.759" endtime="20201030 15:55:39.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.757" endtime="20201030 15:55:39.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:39.071" level="INFO">${RESULT} = [{'diff': 6.087499999999843e-05}, {'diff': 6.087499999999843e-05}, {'diff': 6.0680000000000456e-05}, {'diff': 6.08750000000019e-05}, {'diff': 6.0694000000000026e-05}, {'diff': 6.1000000000002025e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:39.067" endtime="20201030 15:55:39.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:39.075" level="INFO">${ACCURACY} = {'diff': [6.087499999999843e-05, 6.087499999999843e-05, 6.0680000000000456e-05, 6.08750000000019e-05, 6.0694000000000026e-05, 6.1000000000002025e-05, 6.0944000000000276e-05, 6.0749999999998305e-05, 6....</msg>
<status status="PASS" starttime="20201030 15:55:39.072" endtime="20201030 15:55:39.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.080" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 15:55:39.079" endtime="20201030 15:55:39.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.082" level="INFO">VALUE: [6.087499999999843e-05, 6.087499999999843e-05, 6.0680000000000456e-05, 6.08750000000019e-05, 6.0694000000000026e-05, 6.1000000000002025e-05, 6.0944000000000276e-05, 6.0749999999998305e-05, 6.0929999999997236e-05, 6.141699999999764e-05, 6.086099999999886e-05, 6.116700000000086e-05, 6.1014000000001595e-05, 6.0722000000002635e-05, 6.141700000000111e-05, 6.111100000000258e-05, 6.155500000000133e-05, 6.134699999999979e-05, 6.068099999999993e-05, 6.149999999999906e-05, 6.0957999999999846e-05, 6.111099999999911e-05, 6.130500000000108e-05, 6.127699999999847e-05, 6.0679999999996986e-05, 6.10690000000004e-05, 6.119400000000053e-05, 6.061099999999861e-05, 6.0750000000001775e-05, 6.063899999999775e-05, 6.090300000000104e-05, 6.134699999999979e-05, 6.093100000000018e-05, 6.1013999999998125e-05, 6.141700000000111e-05, 6.0806000000000054e-05, 6.129200000000098e-05, 6.0778000000000915e-05, 6.080499999999711e-05, 6.115299999999782e-05, 6.112499999999868e-05, 6.136099999999936e-05, 6.0735999999998735e-05, 6.0736000000002205e-05, 6.061100000000208e-05, 6.123599999999924e-05, 6.055500000000033e-05, 6.055500000000033e-05, 6.10690000000004e-05, 6.119400000000053e-05]</msg>
<status status="PASS" starttime="20201030 15:55:39.081" endtime="20201030 15:55:39.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.076" endtime="20201030 15:55:39.088"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:39.092" endtime="20201030 15:55:39.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.090" endtime="20201030 15:55:39.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.089" endtime="20201030 15:55:39.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.723" endtime="20201030 15:55:39.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.722" endtime="20201030 15:55:39.113"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.122" endtime="20201030 15:55:39.141"></status>
</kw>
<msg timestamp="20201030 15:55:39.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.120" endtime="20201030 15:55:39.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.143" endtime="20201030 15:55:39.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.145" endtime="20201030 15:55:39.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.117" endtime="20201030 15:55:39.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.115" endtime="20201030 15:55:39.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.155" endtime="20201030 15:55:39.441"></status>
</kw>
<msg timestamp="20201030 15:55:39.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021090347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021151917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.153" endtime="20201030 15:55:39.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021090347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021151917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.446" endtime="20201030 15:55:39.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.454" endtime="20201030 15:55:39.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.151" endtime="20201030 15:55:39.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.149" endtime="20201030 15:55:39.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:39.461" level="INFO">${RESULT} = [{'diff': 6.157000000000037e-05}, {'diff': 6.17499999999993e-05}, {'diff': 6.243100000000168e-05}, {'diff': 6.251399999999963e-05}, {'diff': 6.197299999999989e-05}, {'diff': 6.24439999999983e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:39.458" endtime="20201030 15:55:39.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:39.465" level="INFO">${ACCURACY} = {'diff': [6.157000000000037e-05, 6.17499999999993e-05, 6.243100000000168e-05, 6.251399999999963e-05, 6.197299999999989e-05, 6.24439999999983e-05, 6.201399999999913e-05, 6.169400000000103e-05, 6.244400...</msg>
<status status="PASS" starttime="20201030 15:55:39.462" endtime="20201030 15:55:39.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.470" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 15:55:39.469" endtime="20201030 15:55:39.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.473" level="INFO">VALUE: [6.157000000000037e-05, 6.17499999999993e-05, 6.243100000000168e-05, 6.251399999999963e-05, 6.197299999999989e-05, 6.24439999999983e-05, 6.201399999999913e-05, 6.169400000000103e-05, 6.244400000000178e-05, 6.213899999999925e-05, 6.226399999999938e-05, 6.209700000000054e-05, 6.180600000000105e-05, 6.187499999999943e-05, 6.177799999999845e-05, 6.17080000000006e-05, 6.166700000000136e-05, 6.161099999999961e-05, 6.172200000000017e-05, 6.237499999999993e-05, 6.204200000000173e-05, 6.172299999999964e-05, 6.223700000000318e-05, 6.207000000000087e-05, 6.159700000000004e-05, 6.179100000000201e-05, 6.227800000000241e-05, 6.148599999999949e-05, 6.158300000000047e-05, 6.193100000000118e-05, 6.243100000000168e-05, 6.204199999999827e-05, 6.195900000000032e-05, 6.166699999999789e-05, 6.179200000000148e-05, 6.236100000000036e-05, 6.161099999999961e-05, 6.159700000000004e-05, 6.18340000000002e-05, 6.236100000000036e-05, 6.186099999999986e-05, 6.181900000000115e-05, 6.209800000000001e-05, 6.250000000000006e-05, 6.175000000000277e-05, 6.190299999999857e-05, 6.22080000000011e-05, 6.166600000000189e-05, 6.191599999999867e-05, 6.168100000000093e-05]</msg>
<status status="PASS" starttime="20201030 15:55:39.471" endtime="20201030 15:55:39.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.466" endtime="20201030 15:55:39.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:39.479" endtime="20201030 15:55:39.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.477" endtime="20201030 15:55:39.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.476" endtime="20201030 15:55:39.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.114" endtime="20201030 15:55:39.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.113" endtime="20201030 15:55:39.500"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.509" endtime="20201030 15:55:39.528"></status>
</kw>
<msg timestamp="20201030 15:55:39.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.507" endtime="20201030 15:55:39.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.529" endtime="20201030 15:55:39.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.532" endtime="20201030 15:55:39.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.504" endtime="20201030 15:55:39.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.502" endtime="20201030 15:55:39.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.541" endtime="20201030 15:55:39.828"></status>
</kw>
<msg timestamp="20201030 15:55:39.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020180903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020244222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.540" endtime="20201030 15:55:39.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020180903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020244222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.832" endtime="20201030 15:55:39.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.840" endtime="20201030 15:55:39.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.537" endtime="20201030 15:55:39.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.535" endtime="20201030 15:55:39.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:39.847" level="INFO">${RESULT} = [{'diff': 6.331899999999918e-05}, {'diff': 6.347199999999845e-05}, {'diff': 6.263899999999975e-05}, {'diff': 6.322200000000167e-05}, {'diff': 6.336099999999789e-05}, {'diff': 6.262500000000018e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:39.844" endtime="20201030 15:55:39.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:39.853" level="INFO">${ACCURACY} = {'diff': [6.331899999999918e-05, 6.347199999999845e-05, 6.263899999999975e-05, 6.322200000000167e-05, 6.336099999999789e-05, 6.262500000000018e-05, 6.279200000000248e-05, 6.25279999999992e-05, 6.27920...</msg>
<status status="PASS" starttime="20201030 15:55:39.848" endtime="20201030 15:55:39.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.857" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 15:55:39.856" endtime="20201030 15:55:39.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.860" level="INFO">VALUE: [6.331899999999918e-05, 6.347199999999845e-05, 6.263899999999975e-05, 6.322200000000167e-05, 6.336099999999789e-05, 6.262500000000018e-05, 6.279200000000248e-05, 6.25279999999992e-05, 6.279200000000248e-05, 6.34020000000006e-05, 6.319499999999853e-05, 6.265300000000279e-05, 6.312500000000068e-05, 6.286100000000086e-05, 6.293100000000218e-05, 6.33479999999978e-05, 6.266700000000236e-05, 6.254099999999929e-05, 6.268000000000246e-05, 6.272200000000117e-05, 6.273600000000074e-05, 6.27500000000003e-05, 6.341699999999964e-05, 6.341699999999964e-05, 6.319399999999906e-05, 6.33890000000005e-05, 6.312500000000068e-05, 6.266700000000236e-05, 6.25279999999992e-05, 6.330600000000255e-05, 6.262500000000018e-05, 6.268100000000193e-05, 6.311200000000058e-05, 6.347300000000139e-05, 6.287500000000043e-05, 6.267999999999899e-05, 6.33890000000005e-05, 6.279099999999954e-05, 6.348599999999802e-05, 6.259700000000104e-05, 6.268000000000246e-05, 6.268100000000193e-05, 6.269399999999856e-05, 6.305599999999884e-05, 6.26950000000015e-05, 6.309699999999807e-05, 6.280599999999859e-05, 6.259700000000104e-05, 6.319499999999853e-05, 6.258300000000147e-05]</msg>
<status status="PASS" starttime="20201030 15:55:39.858" endtime="20201030 15:55:39.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.854" endtime="20201030 15:55:39.861"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:39.865" endtime="20201030 15:55:39.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.864" endtime="20201030 15:55:39.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.862" endtime="20201030 15:55:39.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.501" endtime="20201030 15:55:39.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.500" endtime="20201030 15:55:39.886"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.895" endtime="20201030 15:55:39.914"></status>
</kw>
<msg timestamp="20201030 15:55:39.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.893" endtime="20201030 15:55:39.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.916" endtime="20201030 15:55:39.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.918" endtime="20201030 15:55:39.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.891" endtime="20201030 15:55:39.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.888" endtime="20201030 15:55:39.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.928" endtime="20201030 15:55:40.218"></status>
</kw>
<msg timestamp="20201030 15:55:40.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020103903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020167611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.926" endtime="20201030 15:55:40.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020103903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020167611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.222" endtime="20201030 15:55:40.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.231" endtime="20201030 15:55:40.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.923" endtime="20201030 15:55:40.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.922" endtime="20201030 15:55:40.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:40.237" level="INFO">${RESULT} = [{'diff': 6.370799999999913e-05}, {'diff': 6.397199999999895e-05}, {'diff': 6.411099999999864e-05}, {'diff': 6.388899999999753e-05}, {'diff': 6.454099999999782e-05}, {'diff': 6.411100000000211e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:40.234" endtime="20201030 15:55:40.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:40.242" level="INFO">${ACCURACY} = {'diff': [6.370799999999913e-05, 6.397199999999895e-05, 6.411099999999864e-05, 6.388899999999753e-05, 6.454099999999782e-05, 6.411100000000211e-05, 6.429200000000052e-05, 6.368099999999946e-05, 6.3792...</msg>
<status status="PASS" starttime="20201030 15:55:40.239" endtime="20201030 15:55:40.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.246" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 15:55:40.245" endtime="20201030 15:55:40.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.249" level="INFO">VALUE: [6.370799999999913e-05, 6.397199999999895e-05, 6.411099999999864e-05, 6.388899999999753e-05, 6.454099999999782e-05, 6.411100000000211e-05, 6.429200000000052e-05, 6.368099999999946e-05, 6.379200000000002e-05, 6.431999999999966e-05, 6.37089999999986e-05, 6.372200000000217e-05, 6.39029999999971e-05, 6.420799999999963e-05, 6.356899999999943e-05, 6.384700000000229e-05, 6.366699999999989e-05, 6.440300000000107e-05, 6.398599999999852e-05, 6.413900000000125e-05, 6.429199999999705e-05, 6.418099999999996e-05, 6.436100000000236e-05, 6.430600000000009e-05, 6.370900000000207e-05, 6.42639999999979e-05, 6.408399999999898e-05, 6.441700000000064e-05, 6.3582999999999e-05, 6.365299999999685e-05, 6.400000000000156e-05, 6.449999999999859e-05, 6.405500000000036e-05, 6.401400000000113e-05, 6.373599999999827e-05, 6.42639999999979e-05, 6.445799999999988e-05, 6.365300000000032e-05, 6.391700000000014e-05, 6.416700000000039e-05, 6.384699999999882e-05, 6.384699999999882e-05, 6.399999999999809e-05, 6.405500000000036e-05, 6.369499999999903e-05, 6.423599999999877e-05, 6.418099999999996e-05, 6.409700000000254e-05, 6.436200000000183e-05, 6.443000000000074e-05]</msg>
<status status="PASS" starttime="20201030 15:55:40.248" endtime="20201030 15:55:40.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.243" endtime="20201030 15:55:40.251"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:40.254" endtime="20201030 15:55:40.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.253" endtime="20201030 15:55:40.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.252" endtime="20201030 15:55:40.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.887" endtime="20201030 15:55:40.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.886" endtime="20201030 15:55:40.275"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.284" endtime="20201030 15:55:40.305"></status>
</kw>
<msg timestamp="20201030 15:55:40.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.283" endtime="20201030 15:55:40.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.306" endtime="20201030 15:55:40.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.309" endtime="20201030 15:55:40.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.280" endtime="20201030 15:55:40.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.278" endtime="20201030 15:55:40.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.318" endtime="20201030 15:55:40.603"></status>
</kw>
<msg timestamp="20201030 15:55:40.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020908292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02097325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:40.316" endtime="20201030 15:55:40.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020908292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02097325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:40.608" endtime="20201030 15:55:40.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.616" endtime="20201030 15:55:40.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.314" endtime="20201030 15:55:40.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.312" endtime="20201030 15:55:40.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:40.623" level="INFO">${RESULT} = [{'diff': 6.495800000000038e-05}, {'diff': 6.52639999999989e-05}, {'diff': 6.511100000000311e-05}, {'diff': 6.47219999999997e-05}, {'diff': 6.512499999999921e-05}, {'diff': 6.541700000000164e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:40.620" endtime="20201030 15:55:40.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:40.627" level="INFO">${ACCURACY} = {'diff': [6.495800000000038e-05, 6.52639999999989e-05, 6.511100000000311e-05, 6.47219999999997e-05, 6.512499999999921e-05, 6.541700000000164e-05, 6.504200000000127e-05, 6.517999999999802e-05, 6.487499...</msg>
<status status="PASS" starttime="20201030 15:55:40.624" endtime="20201030 15:55:40.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.632" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 15:55:40.631" endtime="20201030 15:55:40.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.634" level="INFO">VALUE: [6.495800000000038e-05, 6.52639999999989e-05, 6.511100000000311e-05, 6.47219999999997e-05, 6.512499999999921e-05, 6.541700000000164e-05, 6.504200000000127e-05, 6.517999999999802e-05, 6.487499999999896e-05, 6.493000000000124e-05, 6.4583e-05, 6.55280000000022e-05, 6.506899999999746e-05, 6.534700000000032e-05, 6.484699999999982e-05, 6.499999999999909e-05, 6.524999999999934e-05, 6.487500000000243e-05, 6.505600000000084e-05, 6.549999999999959e-05, 6.523599999999977e-05, 6.50419999999978e-05, 6.477799999999798e-05, 6.549999999999959e-05, 6.491699999999767e-05, 6.486200000000233e-05, 6.497299999999942e-05, 6.533300000000075e-05, 6.527700000000247e-05, 6.479100000000154e-05, 6.483300000000025e-05, 6.541600000000217e-05, 6.504100000000179e-05, 6.534700000000032e-05, 6.462499999999871e-05, 6.466699999999742e-05, 6.545800000000088e-05, 6.519500000000053e-05, 6.527800000000195e-05, 6.462500000000218e-05, 6.484699999999982e-05, 6.52220000000002e-05, 6.455600000000034e-05, 6.463900000000175e-05, 6.522299999999967e-05, 6.490300000000157e-05, 6.468100000000046e-05, 6.469400000000056e-05, 6.474999999999884e-05, 6.498600000000299e-05]</msg>
<status status="PASS" starttime="20201030 15:55:40.633" endtime="20201030 15:55:40.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.628" endtime="20201030 15:55:40.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:40.640" endtime="20201030 15:55:40.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.639" endtime="20201030 15:55:40.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.638" endtime="20201030 15:55:40.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.276" endtime="20201030 15:55:40.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.275" endtime="20201030 15:55:40.661"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.670" endtime="20201030 15:55:40.690"></status>
</kw>
<msg timestamp="20201030 15:55:40.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.669" endtime="20201030 15:55:40.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.691" endtime="20201030 15:55:40.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.694" endtime="20201030 15:55:40.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.666" endtime="20201030 15:55:40.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.664" endtime="20201030 15:55:40.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.704" endtime="20201030 15:55:40.990"></status>
</kw>
<msg timestamp="20201030 15:55:40.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020183681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020250069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.702" endtime="20201030 15:55:40.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020183681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020250069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.995" endtime="20201030 15:55:41.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.004" endtime="20201030 15:55:41.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.699" endtime="20201030 15:55:41.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.697" endtime="20201030 15:55:41.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:41.011" level="INFO">${RESULT} = [{'diff': 6.638800000000056e-05}, {'diff': 6.622300000000067e-05}, {'diff': 6.581899999999821e-05}, {'diff': 6.644399999999884e-05}, {'diff': 6.611100000000064e-05}, {'diff': 6.591600000000267e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:41.007" endtime="20201030 15:55:41.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:41.016" level="INFO">${ACCURACY} = {'diff': [6.638800000000056e-05, 6.622300000000067e-05, 6.581899999999821e-05, 6.644399999999884e-05, 6.611100000000064e-05, 6.591600000000267e-05, 6.599999999999662e-05, 6.620799999999816e-05, 6.5804...</msg>
<status status="PASS" starttime="20201030 15:55:41.012" endtime="20201030 15:55:41.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.020" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 15:55:41.019" endtime="20201030 15:55:41.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.023" level="INFO">VALUE: [6.638800000000056e-05, 6.622300000000067e-05, 6.581899999999821e-05, 6.644399999999884e-05, 6.611100000000064e-05, 6.591600000000267e-05, 6.599999999999662e-05, 6.620799999999816e-05, 6.580499999999864e-05, 6.59440000000018e-05, 6.55419999999983e-05, 6.573600000000027e-05, 6.638900000000003e-05, 6.618099999999849e-05, 6.638900000000003e-05, 6.618100000000196e-05, 6.618100000000196e-05, 6.623700000000024e-05, 6.591700000000214e-05, 6.554100000000229e-05, 6.638900000000003e-05, 6.5583000000001e-05, 6.612500000000021e-05, 6.587499999999996e-05, 6.586099999999692e-05, 6.600000000000009e-05, 6.636100000000089e-05, 6.587499999999996e-05, 6.652799999999973e-05, 6.630600000000209e-05, 6.637500000000046e-05, 6.622199999999773e-05, 6.611100000000064e-05, 6.612500000000021e-05, 6.581900000000168e-05, 6.580499999999864e-05, 6.574999999999984e-05, 6.650000000000059e-05, 6.625000000000034e-05, 6.584700000000082e-05, 6.591700000000214e-05, 6.593100000000171e-05, 6.587499999999996e-05, 6.597199999999748e-05, 6.593099999999824e-05, 6.643100000000221e-05, 6.565300000000232e-05, 6.57220000000007e-05, 6.559700000000057e-05, 6.641700000000264e-05]</msg>
<status status="PASS" starttime="20201030 15:55:41.022" endtime="20201030 15:55:41.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.017" endtime="20201030 15:55:41.024"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:41.028" endtime="20201030 15:55:41.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.027" endtime="20201030 15:55:41.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.025" endtime="20201030 15:55:41.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.662" endtime="20201030 15:55:41.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.662" endtime="20201030 15:55:41.049"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.058" endtime="20201030 15:55:41.078"></status>
</kw>
<msg timestamp="20201030 15:55:41.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.056" endtime="20201030 15:55:41.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.079" endtime="20201030 15:55:41.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.082" endtime="20201030 15:55:41.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.054" endtime="20201030 15:55:41.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.051" endtime="20201030 15:55:41.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.091" endtime="20201030 15:55:41.378"></status>
</kw>
<msg timestamp="20201030 15:55:41.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020251611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020318556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.090" endtime="20201030 15:55:41.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020251611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020318556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.383" endtime="20201030 15:55:41.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.391" endtime="20201030 15:55:41.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.087" endtime="20201030 15:55:41.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.085" endtime="20201030 15:55:41.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:41.399" level="INFO">${RESULT} = [{'diff': 6.694500000000228e-05}, {'diff': 6.747300000000192e-05}, {'diff': 6.695799999999891e-05}, {'diff': 6.686100000000139e-05}, {'diff': 6.743000000000027e-05}, {'diff': 6.680499999999964e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:41.396" endtime="20201030 15:55:41.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:41.403" level="INFO">${ACCURACY} = {'diff': [6.694500000000228e-05, 6.747300000000192e-05, 6.695799999999891e-05, 6.686100000000139e-05, 6.743000000000027e-05, 6.680499999999964e-05, 6.724999999999787e-05, 6.67770000000005e-05, 6.73470...</msg>
<status status="PASS" starttime="20201030 15:55:41.400" endtime="20201030 15:55:41.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.408" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 15:55:41.407" endtime="20201030 15:55:41.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.411" level="INFO">VALUE: [6.694500000000228e-05, 6.747300000000192e-05, 6.695799999999891e-05, 6.686100000000139e-05, 6.743000000000027e-05, 6.680499999999964e-05, 6.724999999999787e-05, 6.67770000000005e-05, 6.734700000000232e-05, 6.694400000000281e-05, 6.698599999999805e-05, 6.698599999999805e-05, 6.684699999999835e-05, 6.665299999999985e-05, 6.670799999999866e-05, 6.695799999999891e-05, 6.744499999999931e-05, 6.724999999999787e-05, 6.750000000000159e-05, 6.658299999999853e-05, 6.734699999999885e-05, 6.73619999999979e-05, 6.666699999999942e-05, 6.725000000000134e-05, 6.651400000000016e-05, 6.69160000000002e-05, 6.697199999999848e-05, 6.749999999999812e-05, 6.715300000000035e-05, 6.723600000000177e-05, 6.680600000000259e-05, 6.659799999999758e-05, 6.698599999999805e-05, 6.743099999999974e-05, 6.686099999999792e-05, 6.662500000000071e-05, 6.72229999999982e-05, 6.661200000000062e-05, 6.650000000000059e-05, 6.752700000000125e-05, 6.712500000000121e-05, 6.729100000000057e-05, 6.699999999999762e-05, 6.743000000000027e-05, 6.652799999999973e-05, 6.730500000000014e-05, 6.748600000000202e-05, 6.675000000000084e-05, 6.662500000000071e-05, 6.686100000000139e-05]</msg>
<status status="PASS" starttime="20201030 15:55:41.409" endtime="20201030 15:55:41.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.404" endtime="20201030 15:55:41.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:41.416" endtime="20201030 15:55:41.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.414" endtime="20201030 15:55:41.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.413" endtime="20201030 15:55:41.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.050" endtime="20201030 15:55:41.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.049" endtime="20201030 15:55:41.436"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.446" endtime="20201030 15:55:41.465"></status>
</kw>
<msg timestamp="20201030 15:55:41.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.444" endtime="20201030 15:55:41.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.467" endtime="20201030 15:55:41.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.470" endtime="20201030 15:55:41.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.441" endtime="20201030 15:55:41.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.439" endtime="20201030 15:55:41.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.479" endtime="20201030 15:55:41.764"></status>
</kw>
<msg timestamp="20201030 15:55:41.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021034569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021102167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.477" endtime="20201030 15:55:41.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021034569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021102167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.769" endtime="20201030 15:55:41.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.777" endtime="20201030 15:55:41.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.475" endtime="20201030 15:55:41.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.473" endtime="20201030 15:55:41.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:41.784" level="INFO">${RESULT} = [{'diff': 6.759800000000205e-05}, {'diff': 6.811099999999917e-05}, {'diff': 6.80420000000008e-05}, {'diff': 6.843100000000074e-05}, {'diff': 6.799999999999862e-05}, {'diff': 6.79160000000012e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:41.781" endtime="20201030 15:55:41.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:41.788" level="INFO">${ACCURACY} = {'diff': [6.759800000000205e-05, 6.811099999999917e-05, 6.80420000000008e-05, 6.843100000000074e-05, 6.799999999999862e-05, 6.79160000000012e-05, 6.748599999999855e-05, 6.786099999999892e-05, 6.824999...</msg>
<status status="PASS" starttime="20201030 15:55:41.785" endtime="20201030 15:55:41.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.794" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 15:55:41.793" endtime="20201030 15:55:41.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.796" level="INFO">VALUE: [6.759800000000205e-05, 6.811099999999917e-05, 6.80420000000008e-05, 6.843100000000074e-05, 6.799999999999862e-05, 6.79160000000012e-05, 6.748599999999855e-05, 6.786099999999892e-05, 6.824999999999887e-05, 6.775000000000184e-05, 6.798599999999905e-05, 6.784699999999935e-05, 6.836099999999942e-05, 6.847199999999998e-05, 6.852799999999826e-05, 6.774999999999837e-05, 6.804199999999733e-05, 6.827800000000148e-05, 6.769499999999956e-05, 6.837499999999899e-05, 6.847299999999945e-05, 6.83619999999989e-05, 6.77229999999987e-05, 6.772199999999923e-05, 6.770799999999966e-05, 6.806900000000046e-05, 6.805500000000089e-05, 6.791599999999773e-05, 6.798599999999905e-05, 6.79169999999972e-05, 6.784699999999935e-05, 6.769499999999956e-05, 6.829200000000105e-05, 6.77359999999988e-05, 6.793000000000077e-05, 6.848599999999955e-05, 6.787500000000196e-05, 6.804199999999733e-05, 6.823699999999877e-05, 6.797199999999948e-05, 6.836099999999942e-05, 6.766599999999748e-05, 6.849999999999912e-05, 6.799999999999862e-05, 6.756899999999996e-05, 6.818000000000102e-05, 6.800000000000209e-05, 6.820800000000016e-05, 6.829200000000105e-05, 6.77359999999988e-05]</msg>
<status status="PASS" starttime="20201030 15:55:41.795" endtime="20201030 15:55:41.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.789" endtime="20201030 15:55:41.799"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:41.803" endtime="20201030 15:55:41.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.801" endtime="20201030 15:55:41.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.800" endtime="20201030 15:55:41.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.437" endtime="20201030 15:55:41.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.437" endtime="20201030 15:55:41.823"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.832" endtime="20201030 15:55:41.852"></status>
</kw>
<msg timestamp="20201030 15:55:41.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.831" endtime="20201030 15:55:41.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.854" endtime="20201030 15:55:41.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.856" endtime="20201030 15:55:41.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.828" endtime="20201030 15:55:41.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.826" endtime="20201030 15:55:41.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.866" endtime="20201030 15:55:42.152"></status>
</kw>
<msg timestamp="20201030 15:55:42.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020101306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.864" endtime="20201030 15:55:42.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020101306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.156" endtime="20201030 15:55:42.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.165" endtime="20201030 15:55:42.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.862" endtime="20201030 15:55:42.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.860" endtime="20201030 15:55:42.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:42.172" level="INFO">${RESULT} = [{'diff': 6.877699999999903e-05}, {'diff': 6.865299999999838e-05}, {'diff': 6.934699999999738e-05}, {'diff': 6.916599999999898e-05}, {'diff': 6.891700000000167e-05}, {'diff': 6.944400000000184e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:42.168" endtime="20201030 15:55:42.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:42.177" level="INFO">${ACCURACY} = {'diff': [6.877699999999903e-05, 6.865299999999838e-05, 6.934699999999738e-05, 6.916599999999898e-05, 6.891700000000167e-05, 6.944400000000184e-05, 6.950000000000012e-05, 6.923699999999977e-05, 6.8624...</msg>
<status status="PASS" starttime="20201030 15:55:42.173" endtime="20201030 15:55:42.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.182" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 15:55:42.180" endtime="20201030 15:55:42.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.184" level="INFO">VALUE: [6.877699999999903e-05, 6.865299999999838e-05, 6.934699999999738e-05, 6.916599999999898e-05, 6.891700000000167e-05, 6.944400000000184e-05, 6.950000000000012e-05, 6.923699999999977e-05, 6.862499999999924e-05, 6.929200000000205e-05, 6.886099999999992e-05, 6.918100000000149e-05, 6.857000000000044e-05, 6.924999999999987e-05, 6.883299999999731e-05, 6.911199999999965e-05, 6.926399999999944e-05, 6.902800000000223e-05, 6.854100000000182e-05, 6.950000000000012e-05, 6.854099999999835e-05, 6.911100000000017e-05, 6.92360000000003e-05, 6.85970000000001e-05, 6.862499999999924e-05, 6.92360000000003e-05, 6.879200000000155e-05, 6.85420000000013e-05, 6.924999999999987e-05, 6.898600000000005e-05, 6.880599999999765e-05, 6.901399999999919e-05, 6.93619999999999e-05, 6.899999999999962e-05, 6.911100000000017e-05, 6.941599999999923e-05, 6.880500000000164e-05, 6.868100000000099e-05, 6.866600000000195e-05, 6.87909999999986e-05, 6.87229999999997e-05, 6.893099999999777e-05, 6.85970000000001e-05, 6.950000000000012e-05, 6.915299999999888e-05, 6.886099999999992e-05, 6.950000000000012e-05, 6.869500000000056e-05, 6.893100000000124e-05, 6.934800000000033e-05]</msg>
<status status="PASS" starttime="20201030 15:55:42.183" endtime="20201030 15:55:42.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.178" endtime="20201030 15:55:42.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:42.189" endtime="20201030 15:55:42.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.188" endtime="20201030 15:55:42.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.186" endtime="20201030 15:55:42.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.824" endtime="20201030 15:55:42.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.824" endtime="20201030 15:55:42.210"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.219" endtime="20201030 15:55:42.239"></status>
</kw>
<msg timestamp="20201030 15:55:42.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.217" endtime="20201030 15:55:42.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.240" endtime="20201030 15:55:42.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.243" endtime="20201030 15:55:42.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.215" endtime="20201030 15:55:42.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.213" endtime="20201030 15:55:42.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.252" endtime="20201030 15:55:42.538"></status>
</kw>
<msg timestamp="20201030 15:55:42.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020118069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020187694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.250" endtime="20201030 15:55:42.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020118069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020187694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.542" endtime="20201030 15:55:42.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.551" endtime="20201030 15:55:42.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.248" endtime="20201030 15:55:42.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.246" endtime="20201030 15:55:42.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:42.558" level="INFO">${RESULT} = [{'diff': 6.962500000000024e-05}, {'diff': 6.997199999999801e-05}, {'diff': 7.006899999999899e-05}, {'diff': 7.027700000000053e-05}, {'diff': 6.998599999999758e-05}, {'diff': 7.012500000000074e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:42.555" endtime="20201030 15:55:42.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:42.562" level="INFO">${ACCURACY} = {'diff': [6.962500000000024e-05, 6.997199999999801e-05, 7.006899999999899e-05, 7.027700000000053e-05, 6.998599999999758e-05, 7.012500000000074e-05, 6.984699999999788e-05, 7.043099999999927e-05, 7.0096...</msg>
<status status="PASS" starttime="20201030 15:55:42.559" endtime="20201030 15:55:42.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.567" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 15:55:42.566" endtime="20201030 15:55:42.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.570" level="INFO">VALUE: [6.962500000000024e-05, 6.997199999999801e-05, 7.006899999999899e-05, 7.027700000000053e-05, 6.998599999999758e-05, 7.012500000000074e-05, 6.984699999999788e-05, 7.043099999999927e-05, 7.009699999999813e-05, 7.02499999999974e-05, 6.984800000000083e-05, 6.993100000000224e-05, 7.034700000000185e-05, 6.975000000000037e-05, 7.032000000000219e-05, 7.045800000000241e-05, 7.047199999999851e-05, 7.012500000000074e-05, 7.017999999999955e-05, 7.004099999999985e-05, 7.022199999999826e-05, 6.980499999999917e-05, 7.04299999999998e-05, 6.976399999999994e-05, 6.952799999999926e-05, 7.036100000000142e-05, 6.982000000000169e-05, 6.968099999999852e-05, 7.030600000000262e-05, 7.016599999999998e-05, 7.029199999999958e-05, 7.023599999999783e-05, 6.961200000000015e-05, 7.04169999999997e-05, 6.988900000000006e-05, 6.956900000000196e-05, 7.004099999999985e-05, 6.962500000000024e-05, 7.009699999999813e-05, 7.047199999999851e-05, 6.962500000000024e-05, 6.969399999999862e-05, 7.00970000000016e-05, 7.037499999999752e-05, 7.044500000000231e-05, 6.998599999999758e-05, 6.956999999999797e-05, 7.016699999999945e-05, 7.00559999999989e-05, 6.984800000000083e-05]</msg>
<status status="PASS" starttime="20201030 15:55:42.568" endtime="20201030 15:55:42.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.563" endtime="20201030 15:55:42.571"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:42.575" endtime="20201030 15:55:42.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.573" endtime="20201030 15:55:42.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.572" endtime="20201030 15:55:42.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.211" endtime="20201030 15:55:42.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.210" endtime="20201030 15:55:42.596"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.607" endtime="20201030 15:55:42.627"></status>
</kw>
<msg timestamp="20201030 15:55:42.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.605" endtime="20201030 15:55:42.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.629" endtime="20201030 15:55:42.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.632" endtime="20201030 15:55:42.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.602" endtime="20201030 15:55:42.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.600" endtime="20201030 15:55:42.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.641" endtime="20201030 15:55:42.928"></status>
</kw>
<msg timestamp="20201030 15:55:42.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023442403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023513167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.640" endtime="20201030 15:55:42.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023442403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023513167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.932" endtime="20201030 15:55:42.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.941" endtime="20201030 15:55:42.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.637" endtime="20201030 15:55:42.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.635" endtime="20201030 15:55:42.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:42.948" level="INFO">${RESULT} = [{'diff': 7.076400000000094e-05}, {'diff': 7.111200000000165e-05}, {'diff': 7.090300000000063e-05}, {'diff': 7.127700000000153e-05}, {'diff': 7.086099999999845e-05}, {'diff': 7.136100000000242e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:42.944" endtime="20201030 15:55:42.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:42.952" level="INFO">${ACCURACY} = {'diff': [7.076400000000094e-05, 7.111200000000165e-05, 7.090300000000063e-05, 7.127700000000153e-05, 7.086099999999845e-05, 7.136100000000242e-05, 7.062500000000124e-05, 7.095799999999944e-05, 7.1277...</msg>
<status status="PASS" starttime="20201030 15:55:42.949" endtime="20201030 15:55:42.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.957" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 15:55:42.955" endtime="20201030 15:55:42.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.959" level="INFO">VALUE: [7.076400000000094e-05, 7.111200000000165e-05, 7.090300000000063e-05, 7.127700000000153e-05, 7.086099999999845e-05, 7.136100000000242e-05, 7.062500000000124e-05, 7.095799999999944e-05, 7.127799999999754e-05, 7.083299999999931e-05, 7.068099999999952e-05, 7.079200000000008e-05, 7.076399999999747e-05, 7.148600000000255e-05, 7.151400000000169e-05, 7.117999999999708e-05, 7.072199999999876e-05, 7.063800000000134e-05, 7.10559999999999e-05, 7.062499999999777e-05, 7.102699999999781e-05, 7.099999999999815e-05, 7.081899999999974e-05, 7.100000000000162e-05, 7.141599999999776e-05, 7.125000000000187e-05, 7.133299999999981e-05, 7.054199999999983e-05, 7.07360000000018e-05, 7.072199999999876e-05, 7.091600000000073e-05, 7.129200000000058e-05, 7.144499999999984e-05, 7.115300000000088e-05, 7.118100000000002e-05, 7.130600000000015e-05, 7.1069e-05, 7.14300000000008e-05, 7.145799999999994e-05, 7.055499999999992e-05, 7.105500000000042e-05, 7.075000000000137e-05, 7.069399999999962e-05, 7.134700000000285e-05, 7.098599999999858e-05, 7.112499999999827e-05, 7.14170000000007e-05, 7.079200000000008e-05, 7.094500000000281e-05, 7.076400000000094e-05]</msg>
<status status="PASS" starttime="20201030 15:55:42.958" endtime="20201030 15:55:42.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.953" endtime="20201030 15:55:42.962"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:42.965" endtime="20201030 15:55:42.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.964" endtime="20201030 15:55:42.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.963" endtime="20201030 15:55:42.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.598" endtime="20201030 15:55:42.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.597" endtime="20201030 15:55:42.986"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.996" endtime="20201030 15:55:43.017"></status>
</kw>
<msg timestamp="20201030 15:55:43.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.995" endtime="20201030 15:55:43.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.018" endtime="20201030 15:55:43.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.021" endtime="20201030 15:55:43.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.991" endtime="20201030 15:55:43.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.989" endtime="20201030 15:55:43.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.030" endtime="20201030 15:55:43.317"></status>
</kw>
<msg timestamp="20201030 15:55:43.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021273458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021345222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.029" endtime="20201030 15:55:43.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021273458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021345222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.321" endtime="20201030 15:55:43.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.330" endtime="20201030 15:55:43.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.026" endtime="20201030 15:55:43.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.024" endtime="20201030 15:55:43.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:43.336" level="INFO">${RESULT} = [{'diff': 7.176400000000194e-05}, {'diff': 7.237499999999952e-05}, {'diff': 7.156999999999997e-05}, {'diff': 7.184699999999988e-05}, {'diff': 7.209700000000013e-05}, {'diff': 7.152799999999779e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:43.333" endtime="20201030 15:55:43.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:43.342" level="INFO">${ACCURACY} = {'diff': [7.176400000000194e-05, 7.237499999999952e-05, 7.156999999999997e-05, 7.184699999999988e-05, 7.209700000000013e-05, 7.152799999999779e-05, 7.198599999999958e-05, 7.166700000000095e-05, 7.1764...</msg>
<status status="PASS" starttime="20201030 15:55:43.337" endtime="20201030 15:55:43.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.346" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 15:55:43.345" endtime="20201030 15:55:43.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.349" level="INFO">VALUE: [7.176400000000194e-05, 7.237499999999952e-05, 7.156999999999997e-05, 7.184699999999988e-05, 7.209700000000013e-05, 7.152799999999779e-05, 7.198599999999958e-05, 7.166700000000095e-05, 7.176400000000194e-05, 7.208300000000056e-05, 7.237499999999952e-05, 7.216699999999798e-05, 7.218100000000102e-05, 7.172299999999923e-05, 7.252799999999879e-05, 7.23620000000029e-05, 7.226400000000244e-05, 7.245799999999747e-05, 7.22910000000021e-05, 7.213899999999884e-05, 7.190300000000163e-05, 7.19170000000012e-05, 7.172199999999976e-05, 7.163900000000181e-05, 7.172199999999976e-05, 7.216700000000145e-05, 7.187499999999902e-05, 7.240299999999866e-05, 7.234799999999986e-05, 7.238799999999962e-05, 7.194400000000087e-05, 7.219400000000112e-05, 7.202699999999881e-05, 7.16109999999992e-05, 7.17910000000016e-05, 7.245799999999747e-05, 7.201399999999872e-05, 7.215299999999841e-05, 7.237499999999952e-05, 7.194500000000034e-05, 7.200000000000262e-05, 7.166700000000095e-05, 7.17499999999989e-05, 7.20560000000009e-05, 7.215299999999841e-05, 7.209800000000308e-05, 7.201299999999924e-05, 7.15690000000005e-05, 7.197200000000001e-05, 7.230500000000167e-05]</msg>
<status status="PASS" starttime="20201030 15:55:43.347" endtime="20201030 15:55:43.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.342" endtime="20201030 15:55:43.350"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:43.354" endtime="20201030 15:55:43.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.353" endtime="20201030 15:55:43.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.351" endtime="20201030 15:55:43.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.987" endtime="20201030 15:55:43.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.987" endtime="20201030 15:55:43.375"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.384" endtime="20201030 15:55:43.403"></status>
</kw>
<msg timestamp="20201030 15:55:43.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.382" endtime="20201030 15:55:43.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.405" endtime="20201030 15:55:43.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.407" endtime="20201030 15:55:43.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.380" endtime="20201030 15:55:43.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.377" endtime="20201030 15:55:43.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.417" endtime="20201030 15:55:43.705"></status>
</kw>
<msg timestamp="20201030 15:55:43.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020034806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.415" endtime="20201030 15:55:43.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020034806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.710" endtime="20201030 15:55:43.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.718" endtime="20201030 15:55:43.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.412" endtime="20201030 15:55:43.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.411" endtime="20201030 15:55:43.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:43.725" level="INFO">${RESULT} = [{'diff': 7.283300000000131e-05}, {'diff': 7.30560000000019e-05}, {'diff': 7.279199999999861e-05}, {'diff': 7.254199999999836e-05}, {'diff': 7.334800000000086e-05}, {'diff': 7.30560000000019e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:43.722" endtime="20201030 15:55:43.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:43.729" level="INFO">${ACCURACY} = {'diff': [7.283300000000131e-05, 7.30560000000019e-05, 7.279199999999861e-05, 7.254199999999836e-05, 7.334800000000086e-05, 7.30560000000019e-05, 7.33049999999992e-05, 7.334700000000138e-05, 7.2944000...</msg>
<status status="PASS" starttime="20201030 15:55:43.726" endtime="20201030 15:55:43.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.734" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 15:55:43.733" endtime="20201030 15:55:43.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.736" level="INFO">VALUE: [7.283300000000131e-05, 7.30560000000019e-05, 7.279199999999861e-05, 7.254199999999836e-05, 7.334800000000086e-05, 7.30560000000019e-05, 7.33049999999992e-05, 7.334700000000138e-05, 7.294400000000187e-05, 7.272200000000076e-05, 7.277699999999956e-05, 7.320799999999822e-05, 7.329099999999963e-05, 7.302799999999929e-05, 7.333299999999834e-05, 7.300000000000015e-05, 7.268100000000152e-05, 7.259700000000063e-05, 7.304200000000233e-05, 7.288800000000012e-05, 7.331900000000224e-05, 7.25560000000014e-05, 7.27499999999999e-05, 7.266599999999901e-05, 7.298600000000058e-05, 7.312500000000027e-05, 7.316599999999951e-05, 7.323600000000083e-05, 7.334700000000138e-05, 7.25690000000015e-05, 7.345900000000141e-05, 7.309699999999766e-05, 7.319500000000159e-05, 7.293100000000177e-05, 7.258399999999707e-05, 7.287500000000002e-05, 7.350000000000065e-05, 7.338900000000009e-05, 7.256899999999802e-05, 7.34309999999988e-05, 7.27499999999999e-05, 7.291599999999926e-05, 7.320800000000169e-05, 7.349999999999718e-05, 7.27499999999999e-05, 7.318099999999855e-05, 7.329199999999911e-05, 7.307000000000147e-05, 7.31110000000007e-05, 7.329200000000258e-05]</msg>
<status status="PASS" starttime="20201030 15:55:43.735" endtime="20201030 15:55:43.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.730" endtime="20201030 15:55:43.738"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:43.741" endtime="20201030 15:55:43.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.740" endtime="20201030 15:55:43.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.739" endtime="20201030 15:55:43.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.376" endtime="20201030 15:55:43.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.375" endtime="20201030 15:55:43.762"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.772" endtime="20201030 15:55:43.794"></status>
</kw>
<msg timestamp="20201030 15:55:43.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.771" endtime="20201030 15:55:43.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.796" endtime="20201030 15:55:43.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.798" endtime="20201030 15:55:43.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.768" endtime="20201030 15:55:43.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.765" endtime="20201030 15:55:43.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.808" endtime="20201030 15:55:44.094"></status>
</kw>
<msg timestamp="20201030 15:55:44.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021950917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.806" endtime="20201030 15:55:44.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021950917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.098" endtime="20201030 15:55:44.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.107" endtime="20201030 15:55:44.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.804" endtime="20201030 15:55:44.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.802" endtime="20201030 15:55:44.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:44.114" level="INFO">${RESULT} = [{'diff': 7.402700000000081e-05}, {'diff': 7.380500000000317e-05}, {'diff': 7.401400000000072e-05}, {'diff': 7.377800000000004e-05}, {'diff': 7.367999999999958e-05}, {'diff': 7.369499999999862e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:44.110" endtime="20201030 15:55:44.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:44.118" level="INFO">${ACCURACY} = {'diff': [7.402700000000081e-05, 7.380500000000317e-05, 7.401400000000072e-05, 7.377800000000004e-05, 7.367999999999958e-05, 7.369499999999862e-05, 7.37500000000009e-05, 7.379199999999961e-05, 7.39720...</msg>
<status status="PASS" starttime="20201030 15:55:44.115" endtime="20201030 15:55:44.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.123" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 15:55:44.122" endtime="20201030 15:55:44.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.125" level="INFO">VALUE: [7.402700000000081e-05, 7.380500000000317e-05, 7.401400000000072e-05, 7.377800000000004e-05, 7.367999999999958e-05, 7.369499999999862e-05, 7.37500000000009e-05, 7.379199999999961e-05, 7.397200000000201e-05, 7.405499999999995e-05, 7.44309999999998e-05, 7.401400000000072e-05, 7.423600000000183e-05, 7.384800000000136e-05, 7.354099999999988e-05, 7.436099999999848e-05, 7.438899999999762e-05, 7.354099999999988e-05, 7.381899999999927e-05, 7.38049999999997e-05, 7.394400000000287e-05, 7.419399999999965e-05, 7.444499999999937e-05, 7.362500000000077e-05, 7.412500000000127e-05, 7.373600000000133e-05, 7.413900000000084e-05, 7.362500000000077e-05, 7.354199999999936e-05, 7.448700000000155e-05, 7.366699999999948e-05, 7.398699999999758e-05, 7.370799999999872e-05, 7.412500000000127e-05, 7.406899999999952e-05, 7.354099999999988e-05, 7.413900000000084e-05, 7.369500000000209e-05, 7.399999999999768e-05, 7.437500000000152e-05, 7.422199999999879e-05, 7.366699999999948e-05, 7.408400000000204e-05, 7.451399999999775e-05, 7.445899999999894e-05, 7.448700000000155e-05, 7.391699999999973e-05, 7.450000000000165e-05, 7.39309999999993e-05, 7.402700000000081e-05]</msg>
<status status="PASS" starttime="20201030 15:55:44.124" endtime="20201030 15:55:44.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.119" endtime="20201030 15:55:44.131"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:44.135" endtime="20201030 15:55:44.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.134" endtime="20201030 15:55:44.155"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.132" endtime="20201030 15:55:44.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.764" endtime="20201030 15:55:44.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.763" endtime="20201030 15:55:44.156"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.165" endtime="20201030 15:55:44.185"></status>
</kw>
<msg timestamp="20201030 15:55:44.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.164" endtime="20201030 15:55:44.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.186" endtime="20201030 15:55:44.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.189" endtime="20201030 15:55:44.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.161" endtime="20201030 15:55:44.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.159" endtime="20201030 15:55:44.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.199" endtime="20201030 15:55:44.487"></status>
</kw>
<msg timestamp="20201030 15:55:44.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020285792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020360653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.198" endtime="20201030 15:55:44.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020285792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020360653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.491" endtime="20201030 15:55:44.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.500" endtime="20201030 15:55:44.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.195" endtime="20201030 15:55:44.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.193" endtime="20201030 15:55:44.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:44.506" level="INFO">${RESULT} = [{'diff': 7.486099999999898e-05}, {'diff': 7.548699999999908e-05}, {'diff': 7.541700000000123e-05}, {'diff': 7.469499999999962e-05}, {'diff': 7.540200000000219e-05}, {'diff': 7.459699999999916e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:44.503" endtime="20201030 15:55:44.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:44.512" level="INFO">${ACCURACY} = {'diff': [7.486099999999898e-05, 7.548699999999908e-05, 7.541700000000123e-05, 7.469499999999962e-05, 7.540200000000219e-05, 7.459699999999916e-05, 7.531900000000077e-05, 7.459699999999916e-05, 7.5013...</msg>
<status status="PASS" starttime="20201030 15:55:44.507" endtime="20201030 15:55:44.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.516" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 15:55:44.515" endtime="20201030 15:55:44.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.519" level="INFO">VALUE: [7.486099999999898e-05, 7.548699999999908e-05, 7.541700000000123e-05, 7.469499999999962e-05, 7.540200000000219e-05, 7.459699999999916e-05, 7.531900000000077e-05, 7.459699999999916e-05, 7.501399999999825e-05, 7.472199999999929e-05, 7.536099999999948e-05, 7.494499999999987e-05, 7.490300000000116e-05, 7.552800000000179e-05, 7.498599999999911e-05, 7.480600000000018e-05, 7.454200000000036e-05, 7.498599999999911e-05, 7.543099999999733e-05, 7.46249999999983e-05, 7.49029999999977e-05, 7.455500000000045e-05, 7.516599999999804e-05, 7.548599999999961e-05, 7.455500000000045e-05, 7.493000000000083e-05, 7.523599999999936e-05, 7.491699999999726e-05, 7.487499999999855e-05, 7.476400000000147e-05, 7.459700000000263e-05, 7.515300000000141e-05, 7.466700000000048e-05, 7.512500000000227e-05, 7.490199999999822e-05, 7.483299999999984e-05, 7.505499999999748e-05, 7.468000000000058e-05, 7.516599999999804e-05, 7.549999999999918e-05, 7.551399999999875e-05, 7.49440000000004e-05, 7.456900000000002e-05, 7.462500000000177e-05, 7.527800000000154e-05, 7.481999999999975e-05, 7.527800000000154e-05, 7.519500000000012e-05, 7.524999999999893e-05, 7.468000000000058e-05]</msg>
<status status="PASS" starttime="20201030 15:55:44.518" endtime="20201030 15:55:44.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.513" endtime="20201030 15:55:44.520"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:44.524" endtime="20201030 15:55:44.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.523" endtime="20201030 15:55:44.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.521" endtime="20201030 15:55:44.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.157" endtime="20201030 15:55:44.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.156" endtime="20201030 15:55:44.545"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.554" endtime="20201030 15:55:44.574"></status>
</kw>
<msg timestamp="20201030 15:55:44.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.552" endtime="20201030 15:55:44.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.575" endtime="20201030 15:55:44.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.578" endtime="20201030 15:55:44.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.550" endtime="20201030 15:55:44.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.547" endtime="20201030 15:55:44.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.587" endtime="20201030 15:55:44.875"></status>
</kw>
<msg timestamp="20201030 15:55:44.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020000069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020075875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.586" endtime="20201030 15:55:44.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020000069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020075875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.879" endtime="20201030 15:55:44.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.887" endtime="20201030 15:55:44.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.583" endtime="20201030 15:55:44.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.581" endtime="20201030 15:55:44.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:44.894" level="INFO">${RESULT} = [{'diff': 7.580600000000118e-05}, {'diff': 7.555600000000093e-05}, {'diff': 7.652699999999985e-05}, {'diff': 7.582000000000075e-05}, {'diff': 7.56249999999993e-05}, {'diff': 7.636199999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:44.891" endtime="20201030 15:55:44.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:44.899" level="INFO">${ACCURACY} = {'diff': [7.580600000000118e-05, 7.555600000000093e-05, 7.652699999999985e-05, 7.582000000000075e-05, 7.56249999999993e-05, 7.636199999999996e-05, 7.636100000000048e-05, 7.583400000000032e-05, 7.57499...</msg>
<status status="PASS" starttime="20201030 15:55:44.895" endtime="20201030 15:55:44.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.903" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 15:55:44.902" endtime="20201030 15:55:44.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.906" level="INFO">VALUE: [7.580600000000118e-05, 7.555600000000093e-05, 7.652699999999985e-05, 7.582000000000075e-05, 7.56249999999993e-05, 7.636199999999996e-05, 7.636100000000048e-05, 7.583400000000032e-05, 7.574999999999943e-05, 7.630499999999873e-05, 7.556900000000102e-05, 7.600000000000315e-05, 7.555500000000145e-05, 7.599999999999968e-05, 7.584700000000041e-05, 7.56249999999993e-05, 7.636099999999701e-05, 7.604200000000186e-05, 7.619499999999765e-05, 7.566699999999801e-05, 7.630599999999821e-05, 7.591699999999826e-05, 7.617999999999861e-05, 7.629200000000211e-05, 7.591700000000173e-05, 7.647199999999757e-05, 7.580600000000118e-05, 7.556900000000102e-05, 7.648600000000061e-05, 7.627800000000254e-05, 7.643099999999833e-05, 7.641699999999876e-05, 7.573600000000333e-05, 7.618099999999808e-05, 7.62639999999995e-05, 7.587499999999955e-05, 7.598699999999958e-05, 7.593000000000183e-05, 7.647300000000051e-05, 7.616699999999851e-05, 7.617999999999861e-05, 7.641600000000276e-05, 7.629099999999917e-05, 7.599999999999968e-05, 7.556900000000102e-05, 7.582000000000075e-05, 7.584700000000041e-05, 7.572200000000029e-05, 7.618099999999808e-05, 7.59310000000013e-05]</msg>
<status status="PASS" starttime="20201030 15:55:44.904" endtime="20201030 15:55:44.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.899" endtime="20201030 15:55:44.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:44.911" endtime="20201030 15:55:44.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.909" endtime="20201030 15:55:44.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.908" endtime="20201030 15:55:44.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.546" endtime="20201030 15:55:44.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.545" endtime="20201030 15:55:44.932"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.941" endtime="20201030 15:55:44.962"></status>
</kw>
<msg timestamp="20201030 15:55:44.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.939" endtime="20201030 15:55:44.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.963" endtime="20201030 15:55:44.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.966" endtime="20201030 15:55:44.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.937" endtime="20201030 15:55:44.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.934" endtime="20201030 15:55:44.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.975" endtime="20201030 15:55:45.262"></status>
</kw>
<msg timestamp="20201030 15:55:45.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021031208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021107889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.974" endtime="20201030 15:55:45.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021031208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021107889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.266" endtime="20201030 15:55:45.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.274" endtime="20201030 15:55:45.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.971" endtime="20201030 15:55:45.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.969" endtime="20201030 15:55:45.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:45.281" level="INFO">${RESULT} = [{'diff': 7.668100000000205e-05}, {'diff': 7.654200000000236e-05}, {'diff': 7.655599999999846e-05}, {'diff': 7.700000000000068e-05}, {'diff': 7.730599999999921e-05}, {'diff': 7.70969999999982e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:45.278" endtime="20201030 15:55:45.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:45.286" level="INFO">${ACCURACY} = {'diff': [7.668100000000205e-05, 7.654200000000236e-05, 7.655599999999846e-05, 7.700000000000068e-05, 7.730599999999921e-05, 7.70969999999982e-05, 7.722300000000126e-05, 7.673599999999739e-05, 7.72780...</msg>
<status status="PASS" starttime="20201030 15:55:45.282" endtime="20201030 15:55:45.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.290" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 15:55:45.289" endtime="20201030 15:55:45.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.293" level="INFO">VALUE: [7.668100000000205e-05, 7.654200000000236e-05, 7.655599999999846e-05, 7.700000000000068e-05, 7.730599999999921e-05, 7.70969999999982e-05, 7.722300000000126e-05, 7.673599999999739e-05, 7.727800000000007e-05, 7.694500000000187e-05, 7.697200000000154e-05, 7.705499999999949e-05, 7.749999999999771e-05, 7.692999999999936e-05, 7.684700000000141e-05, 7.666599999999954e-05, 7.738900000000062e-05, 7.716699999999951e-05, 7.656899999999855e-05, 7.663899999999987e-05, 7.670799999999825e-05, 7.658400000000107e-05, 7.69310000000023e-05, 7.672199999999782e-05, 7.726300000000103e-05, 7.69440000000024e-05, 7.69579999999985e-05, 7.704099999999992e-05, 7.716600000000004e-05, 7.686099999999751e-05, 7.673599999999739e-05, 7.673599999999739e-05, 7.72640000000005e-05, 7.71250000000008e-05, 7.652800000000279e-05, 7.750000000000118e-05, 7.680599999999871e-05, 7.719500000000212e-05, 7.716699999999951e-05, 7.72770000000006e-05, 7.679199999999914e-05, 7.694500000000187e-05, 7.747299999999804e-05, 7.68189999999988e-05, 7.659700000000116e-05, 7.741699999999976e-05, 7.741600000000029e-05, 7.725000000000093e-05, 7.663899999999987e-05, 7.663899999999987e-05]</msg>
<status status="PASS" starttime="20201030 15:55:45.291" endtime="20201030 15:55:45.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.287" endtime="20201030 15:55:45.295"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:45.299" endtime="20201030 15:55:45.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.297" endtime="20201030 15:55:45.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.296" endtime="20201030 15:55:45.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.933" endtime="20201030 15:55:45.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.932" endtime="20201030 15:55:45.320"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.329" endtime="20201030 15:55:45.348"></status>
</kw>
<msg timestamp="20201030 15:55:45.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.327" endtime="20201030 15:55:45.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.350" endtime="20201030 15:55:45.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.352" endtime="20201030 15:55:45.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.324" endtime="20201030 15:55:45.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.322" endtime="20201030 15:55:45.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.362" endtime="20201030 15:55:45.648"></status>
</kw>
<msg timestamp="20201030 15:55:45.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020065056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020142708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.360" endtime="20201030 15:55:45.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020065056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020142708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.652" endtime="20201030 15:55:45.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.661" endtime="20201030 15:55:45.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.357" endtime="20201030 15:55:45.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.355" endtime="20201030 15:55:45.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:45.668" level="INFO">${RESULT} = [{'diff': 7.76519999999975e-05}, {'diff': 7.788900000000112e-05}, {'diff': 7.813900000000137e-05}, {'diff': 7.786100000000198e-05}, {'diff': 7.787500000000155e-05}, {'diff': 7.766700000000001e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:45.665" endtime="20201030 15:55:45.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:45.673" level="INFO">${ACCURACY} = {'diff': [7.76519999999975e-05, 7.788900000000112e-05, 7.813900000000137e-05, 7.786100000000198e-05, 7.787500000000155e-05, 7.766700000000001e-05, 7.798599999999864e-05, 7.84449999999999e-05, 7.820799...</msg>
<status status="PASS" starttime="20201030 15:55:45.669" endtime="20201030 15:55:45.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.678" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 15:55:45.677" endtime="20201030 15:55:45.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.680" level="INFO">VALUE: [7.76519999999975e-05, 7.788900000000112e-05, 7.813900000000137e-05, 7.786100000000198e-05, 7.787500000000155e-05, 7.766700000000001e-05, 7.798599999999864e-05, 7.84449999999999e-05, 7.820799999999975e-05, 7.774999999999796e-05, 7.820899999999922e-05, 7.831999999999978e-05, 7.81389999999979e-05, 7.827800000000107e-05, 7.854099999999795e-05, 7.755499999999999e-05, 7.762499999999783e-05, 7.759700000000216e-05, 7.836099999999901e-05, 7.805499999999702e-05, 7.817999999999714e-05, 7.76250000000013e-05, 7.79579999999995e-05, 7.780599999999971e-05, 7.798600000000211e-05, 7.761100000000173e-05, 7.825000000000193e-05, 7.836100000000248e-05, 7.849999999999871e-05, 7.806900000000006e-05, 7.84169999999973e-05, 7.830500000000074e-05, 7.804099999999745e-05, 7.848599999999914e-05, 7.836099999999901e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.754199999999989e-05, 7.799999999999821e-05, 7.811099999999876e-05, 7.798600000000211e-05, 7.813900000000137e-05, 7.818100000000008e-05, 7.837499999999858e-05, 7.784800000000189e-05, 7.756899999999955e-05, 7.836099999999901e-05, 7.772200000000229e-05, 7.791700000000026e-05, 7.806900000000006e-05]</msg>
<status status="PASS" starttime="20201030 15:55:45.679" endtime="20201030 15:55:45.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.674" endtime="20201030 15:55:45.682"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:45.686" endtime="20201030 15:55:45.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.684" endtime="20201030 15:55:45.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.683" endtime="20201030 15:55:45.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.321" endtime="20201030 15:55:45.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.320" endtime="20201030 15:55:45.706"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.716" endtime="20201030 15:55:45.736"></status>
</kw>
<msg timestamp="20201030 15:55:45.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.714" endtime="20201030 15:55:45.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.737" endtime="20201030 15:55:45.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.740" endtime="20201030 15:55:45.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.711" endtime="20201030 15:55:45.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.709" endtime="20201030 15:55:45.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.749" endtime="20201030 15:55:46.037"></status>
</kw>
<msg timestamp="20201030 15:55:46.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020336722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02041625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:45.748" endtime="20201030 15:55:46.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020336722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02041625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:46.041" endtime="20201030 15:55:46.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.050" endtime="20201030 15:55:46.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.745" endtime="20201030 15:55:46.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.743" endtime="20201030 15:55:46.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:46.057" level="INFO">${RESULT} = [{'diff': 7.952799999999885e-05}, {'diff': 7.868100000000058e-05}, {'diff': 7.8764000000002e-05}, {'diff': 7.880600000000071e-05}, {'diff': 7.911099999999976e-05}, {'diff': 7.951399999999928e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:46.053" endtime="20201030 15:55:46.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:46.061" level="INFO">${ACCURACY} = {'diff': [7.952799999999885e-05, 7.868100000000058e-05, 7.8764000000002e-05, 7.880600000000071e-05, 7.911099999999976e-05, 7.951399999999928e-05, 7.9458000000001e-05, 7.852800000000132e-05, 7.86250000...</msg>
<status status="PASS" starttime="20201030 15:55:46.058" endtime="20201030 15:55:46.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.066" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 15:55:46.065" endtime="20201030 15:55:46.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.068" level="INFO">VALUE: [7.952799999999885e-05, 7.868100000000058e-05, 7.8764000000002e-05, 7.880600000000071e-05, 7.911099999999976e-05, 7.951399999999928e-05, 7.9458000000001e-05, 7.852800000000132e-05, 7.86250000000023e-05, 7.948600000000014e-05, 7.897200000000007e-05, 7.931899999999784e-05, 7.90970000000002e-05, 7.949999999999971e-05, 7.918000000000161e-05, 7.938899999999915e-05, 7.882000000000028e-05, 7.937499999999958e-05, 7.857000000000003e-05, 7.893100000000083e-05, 7.897200000000007e-05, 7.920900000000022e-05, 7.868099999999711e-05, 7.911199999999924e-05, 7.852800000000132e-05, 7.898599999999964e-05, 7.882000000000028e-05, 7.899999999999921e-05, 7.936100000000001e-05, 7.861100000000273e-05, 7.930600000000121e-05, 7.905599999999749e-05, 7.881899999999734e-05, 7.920800000000075e-05, 7.879199999999767e-05, 7.879199999999767e-05, 7.934700000000044e-05, 7.872199999999982e-05, 7.869400000000068e-05, 7.923599999999989e-05, 7.920800000000075e-05, 7.934700000000044e-05, 7.863900000000187e-05, 7.90970000000002e-05, 7.938899999999915e-05, 7.877800000000157e-05, 7.902800000000182e-05, 7.898599999999964e-05, 7.932000000000078e-05, 7.879200000000114e-05]</msg>
<status status="PASS" starttime="20201030 15:55:46.067" endtime="20201030 15:55:46.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.062" endtime="20201030 15:55:46.070"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:46.073" endtime="20201030 15:55:46.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.072" endtime="20201030 15:55:46.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.071" endtime="20201030 15:55:46.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.707" endtime="20201030 15:55:46.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.707" endtime="20201030 15:55:46.094"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.103" endtime="20201030 15:55:46.123"></status>
</kw>
<msg timestamp="20201030 15:55:46.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.102" endtime="20201030 15:55:46.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.125" endtime="20201030 15:55:46.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.128" endtime="20201030 15:55:46.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.099" endtime="20201030 15:55:46.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.097" endtime="20201030 15:55:46.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.137" endtime="20201030 15:55:46.424"></status>
</kw>
<msg timestamp="20201030 15:55:46.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020999944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021080306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.135" endtime="20201030 15:55:46.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020999944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021080306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.428" endtime="20201030 15:55:46.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.436" endtime="20201030 15:55:46.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.133" endtime="20201030 15:55:46.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.131" endtime="20201030 15:55:46.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:46.443" level="INFO">${RESULT} = [{'diff': 8.036200000000049e-05}, {'diff': 7.974999999999996e-05}, {'diff': 7.955499999999852e-05}, {'diff': 8.02909999999997e-05}, {'diff': 8.037499999999712e-05}, {'diff': 8.018000000000261e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:46.440" endtime="20201030 15:55:46.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:46.447" level="INFO">${ACCURACY} = {'diff': [8.036200000000049e-05, 7.974999999999996e-05, 7.955499999999852e-05, 8.02909999999997e-05, 8.037499999999712e-05, 8.018000000000261e-05, 8.006899999999859e-05, 8.031899999999884e-05, 8.03610...</msg>
<status status="PASS" starttime="20201030 15:55:46.444" endtime="20201030 15:55:46.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.451" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 15:55:46.450" endtime="20201030 15:55:46.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.454" level="INFO">VALUE: [8.036200000000049e-05, 7.974999999999996e-05, 7.955499999999852e-05, 8.02909999999997e-05, 8.037499999999712e-05, 8.018000000000261e-05, 8.006899999999859e-05, 8.031899999999884e-05, 8.036100000000101e-05, 8.015299999999947e-05, 7.982000000000128e-05, 8.000000000000021e-05, 7.956999999999756e-05, 8.022199999999785e-05, 7.983399999999738e-05, 8.018099999999861e-05, 8.030600000000221e-05, 7.980499999999877e-05, 8.008299999999816e-05, 8.016700000000251e-05, 7.948600000000014e-05, 7.986100000000051e-05, 7.967999999999864e-05, 8.001399999999978e-05, 8.020800000000175e-05, 8.040299999999972e-05, 8.007000000000153e-05, 8.018100000000208e-05, 7.954199999999842e-05, 8.011100000000076e-05, 7.99169999999988e-05, 8.048700000000061e-05, 8.015299999999947e-05, 8.02909999999997e-05, 7.980499999999877e-05, 8.048600000000114e-05, 8.030500000000274e-05, 7.958300000000113e-05, 8.011100000000076e-05, 8.050000000000071e-05, 7.987500000000008e-05, 7.993100000000183e-05, 7.968100000000158e-05, 8.016700000000251e-05, 7.993100000000183e-05, 8.041700000000276e-05, 8.001399999999978e-05, 8.036100000000101e-05, 8.018000000000261e-05, 8.036100000000101e-05]</msg>
<status status="PASS" starttime="20201030 15:55:46.452" endtime="20201030 15:55:46.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.448" endtime="20201030 15:55:46.456"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:46.460" endtime="20201030 15:55:46.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.458" endtime="20201030 15:55:46.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.457" endtime="20201030 15:55:46.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.095" endtime="20201030 15:55:46.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.095" endtime="20201030 15:55:46.481"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.493" endtime="20201030 15:55:46.512"></status>
</kw>
<msg timestamp="20201030 15:55:46.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.490" endtime="20201030 15:55:46.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.514" endtime="20201030 15:55:46.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.516" endtime="20201030 15:55:46.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.487" endtime="20201030 15:55:46.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.484" endtime="20201030 15:55:46.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.525" endtime="20201030 15:55:46.810"></status>
</kw>
<msg timestamp="20201030 15:55:46.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023588042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023669028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.524" endtime="20201030 15:55:46.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023588042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023669028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.814" endtime="20201030 15:55:46.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.823" endtime="20201030 15:55:46.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.521" endtime="20201030 15:55:46.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.520" endtime="20201030 15:55:46.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:46.829" level="INFO">${RESULT} = [{'diff': 8.098600000000164e-05}, {'diff': 8.093099999999936e-05}, {'diff': 8.070899999999825e-05}, {'diff': 8.07230000000013e-05}, {'diff': 8.120900000000222e-05}, {'diff': 8.09719999999986e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:46.826" endtime="20201030 15:55:46.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:46.834" level="INFO">${ACCURACY} = {'diff': [8.098600000000164e-05, 8.093099999999936e-05, 8.070899999999825e-05, 8.07230000000013e-05, 8.120900000000222e-05, 8.09719999999986e-05, 8.067999999999964e-05, 8.141600000000082e-05, 8.116600...</msg>
<status status="PASS" starttime="20201030 15:55:46.830" endtime="20201030 15:55:46.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.839" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 15:55:46.838" endtime="20201030 15:55:46.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.841" level="INFO">VALUE: [8.098600000000164e-05, 8.093099999999936e-05, 8.070899999999825e-05, 8.07230000000013e-05, 8.120900000000222e-05, 8.09719999999986e-05, 8.067999999999964e-05, 8.141600000000082e-05, 8.116600000000057e-05, 8.112500000000133e-05, 8.052799999999985e-05, 8.134699999999898e-05, 8.074999999999749e-05, 8.129200000000017e-05, 8.101400000000078e-05, 8.105599999999949e-05, 8.123599999999842e-05, 8.144499999999943e-05, 8.1458999999999e-05, 8.108299999999916e-05, 8.092999999999989e-05, 8.052700000000038e-05, 8.14719999999991e-05, 8.058299999999866e-05, 8.108299999999916e-05, 8.06109999999978e-05, 8.056899999999909e-05, 8.062500000000083e-05, 8.051400000000028e-05, 8.059699999999823e-05, 8.131999999999931e-05, 8.1458999999999e-05, 8.081999999999881e-05, 8.148699999999814e-05, 8.087500000000108e-05, 8.143099999999986e-05, 8.118000000000014e-05, 8.099999999999774e-05, 8.115300000000047e-05, 8.067999999999964e-05, 8.155599999999999e-05, 8.086100000000151e-05, 8.075000000000096e-05, 8.052799999999985e-05, 8.094499999999893e-05, 8.108299999999916e-05, 8.144499999999943e-05, 8.07230000000013e-05, 8.08329999999989e-05, 8.136200000000149e-05]</msg>
<status status="PASS" starttime="20201030 15:55:46.840" endtime="20201030 15:55:46.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.835" endtime="20201030 15:55:46.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:46.846" endtime="20201030 15:55:46.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.844" endtime="20201030 15:55:46.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.843" endtime="20201030 15:55:46.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.482" endtime="20201030 15:55:46.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.481" endtime="20201030 15:55:46.867"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.875" endtime="20201030 15:55:46.895"></status>
</kw>
<msg timestamp="20201030 15:55:46.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.874" endtime="20201030 15:55:46.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.897" endtime="20201030 15:55:46.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.899" endtime="20201030 15:55:46.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.871" endtime="20201030 15:55:46.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.869" endtime="20201030 15:55:46.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.908" endtime="20201030 15:55:47.197"></status>
</kw>
<msg timestamp="20201030 15:55:47.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019450194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01953225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:46.907" endtime="20201030 15:55:47.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019450194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01953225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:47.201" endtime="20201030 15:55:47.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.209" endtime="20201030 15:55:47.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.904" endtime="20201030 15:55:47.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.902" endtime="20201030 15:55:47.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:47.216" level="INFO">${RESULT} = [{'diff': 8.205600000000049e-05}, {'diff': 8.209699999999973e-05}, {'diff': 8.208399999999963e-05}, {'diff': 8.215300000000147e-05}, {'diff': 8.168100000000011e-05}, {'diff': 8.244400000000096e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:47.213" endtime="20201030 15:55:47.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:47.220" level="INFO">${ACCURACY} = {'diff': [8.205600000000049e-05, 8.209699999999973e-05, 8.208399999999963e-05, 8.215300000000147e-05, 8.168100000000011e-05, 8.244400000000096e-05, 8.17230000000023e-05, 8.17780000000011e-05, 8.212500...</msg>
<status status="PASS" starttime="20201030 15:55:47.217" endtime="20201030 15:55:47.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.224" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 15:55:47.223" endtime="20201030 15:55:47.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.227" level="INFO">VALUE: [8.205600000000049e-05, 8.209699999999973e-05, 8.208399999999963e-05, 8.215300000000147e-05, 8.168100000000011e-05, 8.244400000000096e-05, 8.17230000000023e-05, 8.17780000000011e-05, 8.212500000000234e-05, 8.173599999999892e-05, 8.249999999999924e-05, 8.230500000000127e-05, 8.162500000000183e-05, 8.162499999999837e-05, 8.176400000000153e-05, 8.180600000000024e-05, 8.188899999999819e-05, 8.168100000000011e-05, 8.201400000000178e-05, 8.21109999999993e-05, 8.226299999999909e-05, 8.191699999999733e-05, 8.22780000000016e-05, 8.156900000000009e-05, 8.16109999999988e-05, 8.198599999999917e-05, 8.212499999999887e-05, 8.191599999999785e-05, 8.198599999999917e-05, 8.170799999999978e-05, 8.181999999999981e-05, 8.24720000000001e-05, 8.180600000000024e-05, 8.19170000000008e-05, 8.162499999999837e-05, 8.240300000000172e-05, 8.218099999999715e-05, 8.159699999999923e-05, 8.187499999999862e-05, 8.181900000000034e-05, 8.174999999999849e-05, 8.216700000000104e-05, 8.206899999999712e-05, 8.156900000000009e-05, 8.198599999999917e-05, 8.248599999999967e-05, 8.162499999999837e-05, 8.176399999999806e-05, 8.179200000000067e-05, 8.155500000000052e-05]</msg>
<status status="PASS" starttime="20201030 15:55:47.225" endtime="20201030 15:55:47.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.221" endtime="20201030 15:55:47.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:47.231" endtime="20201030 15:55:47.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.230" endtime="20201030 15:55:47.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.229" endtime="20201030 15:55:47.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.867" endtime="20201030 15:55:47.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.867" endtime="20201030 15:55:47.252"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.261" endtime="20201030 15:55:47.282"></status>
</kw>
<msg timestamp="20201030 15:55:47.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.259" endtime="20201030 15:55:47.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.283" endtime="20201030 15:55:47.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.286" endtime="20201030 15:55:47.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.257" endtime="20201030 15:55:47.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.255" endtime="20201030 15:55:47.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.295" endtime="20201030 15:55:47.579"></status>
</kw>
<msg timestamp="20201030 15:55:47.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020209014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020292542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.293" endtime="20201030 15:55:47.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020209014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020292542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.583" endtime="20201030 15:55:47.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.591" endtime="20201030 15:55:47.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.291" endtime="20201030 15:55:47.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.289" endtime="20201030 15:55:47.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:47.598" level="INFO">${RESULT} = [{'diff': 8.352799999999938e-05}, {'diff': 8.261200000000274e-05}, {'diff': 8.351300000000034e-05}, {'diff': 8.254100000000195e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.329099999999923e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:47.595" endtime="20201030 15:55:47.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:47.602" level="INFO">${ACCURACY} = {'diff': [8.352799999999938e-05, 8.261200000000274e-05, 8.351300000000034e-05, 8.254100000000195e-05, 8.31110000000003e-05, 8.329099999999923e-05, 8.322200000000085e-05, 8.309700000000073e-05, 8.30970...</msg>
<status status="PASS" starttime="20201030 15:55:47.599" endtime="20201030 15:55:47.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.606" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 15:55:47.605" endtime="20201030 15:55:47.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.609" level="INFO">VALUE: [8.352799999999938e-05, 8.261200000000274e-05, 8.351300000000034e-05, 8.254100000000195e-05, 8.31110000000003e-05, 8.329099999999923e-05, 8.322200000000085e-05, 8.309700000000073e-05, 8.309700000000073e-05, 8.306900000000159e-05, 8.280600000000124e-05, 8.287499999999962e-05, 8.265300000000197e-05, 8.287500000000309e-05, 8.344500000000143e-05, 8.29720000000006e-05, 8.308400000000063e-05, 8.326300000000009e-05, 8.336100000000055e-05, 8.279200000000167e-05, 8.341600000000282e-05, 8.323600000000042e-05, 8.337500000000012e-05, 8.305599999999802e-05, 8.298600000000017e-05, 8.316699999999858e-05, 8.269500000000068e-05, 8.292999999999842e-05, 8.268099999999765e-05, 8.276399999999906e-05, 8.298600000000017e-05, 8.282000000000081e-05, 8.312499999999987e-05, 8.337500000000012e-05, 8.344399999999849e-05, 8.295800000000103e-05, 8.254099999999848e-05, 8.31110000000003e-05, 8.29720000000006e-05, 8.29170000000018e-05, 8.347199999999763e-05, 8.337500000000012e-05, 8.287499999999962e-05, 8.312499999999987e-05, 8.308400000000063e-05, 8.287499999999962e-05, 8.254199999999795e-05, 8.262499999999937e-05, 8.288900000000265e-05, 8.31659999999991e-05]</msg>
<status status="PASS" starttime="20201030 15:55:47.607" endtime="20201030 15:55:47.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.603" endtime="20201030 15:55:47.611"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:47.614" endtime="20201030 15:55:47.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.613" endtime="20201030 15:55:47.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.612" endtime="20201030 15:55:47.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.253" endtime="20201030 15:55:47.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.252" endtime="20201030 15:55:47.635"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.644" endtime="20201030 15:55:47.663"></status>
</kw>
<msg timestamp="20201030 15:55:47.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.642" endtime="20201030 15:55:47.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.665" endtime="20201030 15:55:47.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.667" endtime="20201030 15:55:47.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.640" endtime="20201030 15:55:47.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.637" endtime="20201030 15:55:47.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.676" endtime="20201030 15:55:47.962"></status>
</kw>
<msg timestamp="20201030 15:55:47.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019349875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019433903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.675" endtime="20201030 15:55:47.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019349875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019433903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.966" endtime="20201030 15:55:47.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.974" endtime="20201030 15:55:47.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.672" endtime="20201030 15:55:47.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.671" endtime="20201030 15:55:47.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:47.981" level="INFO">${RESULT} = [{'diff': 8.402799999999988e-05}, {'diff': 8.401400000000031e-05}, {'diff': 8.412500000000087e-05}, {'diff': 8.400000000000074e-05}, {'diff': 8.433400000000188e-05}, {'diff': 8.355600000000199e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:47.977" endtime="20201030 15:55:47.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:47.985" level="INFO">${ACCURACY} = {'diff': [8.402799999999988e-05, 8.401400000000031e-05, 8.412500000000087e-05, 8.400000000000074e-05, 8.433400000000188e-05, 8.355600000000199e-05, 8.37919999999992e-05, 8.440300000000026e-05, 8.36659...</msg>
<status status="PASS" starttime="20201030 15:55:47.982" endtime="20201030 15:55:47.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.990" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 15:55:47.989" endtime="20201030 15:55:47.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.992" level="INFO">VALUE: [8.402799999999988e-05, 8.401400000000031e-05, 8.412500000000087e-05, 8.400000000000074e-05, 8.433400000000188e-05, 8.355600000000199e-05, 8.37919999999992e-05, 8.440300000000026e-05, 8.36659999999996e-05, 8.379200000000267e-05, 8.393100000000236e-05, 8.391699999999933e-05, 8.400000000000074e-05, 8.402799999999988e-05, 8.39720000000016e-05, 8.354099999999948e-05, 8.400000000000074e-05, 8.420799999999881e-05, 8.390299999999976e-05, 8.395800000000203e-05, 8.401400000000031e-05, 8.441699999999983e-05, 8.352800000000285e-05, 8.374999999999702e-05, 8.395799999999856e-05, 8.40980000000012e-05, 8.438799999999774e-05, 8.437499999999765e-05, 8.445899999999854e-05, 8.399999999999727e-05, 8.392999999999942e-05, 8.355499999999905e-05, 8.447199999999863e-05, 8.36110000000008e-05, 8.436099999999808e-05, 8.375000000000049e-05, 8.404199999999945e-05, 8.437499999999765e-05, 8.398600000000117e-05, 8.447199999999863e-05, 8.380600000000224e-05, 8.397199999999813e-05, 8.402799999999988e-05, 8.411099999999783e-05, 8.431899999999937e-05, 8.444399999999949e-05, 8.431899999999937e-05, 8.42919999999997e-05, 8.355599999999852e-05, 8.44720000000021e-05]</msg>
<status status="PASS" starttime="20201030 15:55:47.991" endtime="20201030 15:55:47.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.986" endtime="20201030 15:55:47.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:47.997" endtime="20201030 15:55:48.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.996" endtime="20201030 15:55:48.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.995" endtime="20201030 15:55:48.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.636" endtime="20201030 15:55:48.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.635" endtime="20201030 15:55:48.018"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.027" endtime="20201030 15:55:48.046"></status>
</kw>
<msg timestamp="20201030 15:55:48.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.025" endtime="20201030 15:55:48.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.047" endtime="20201030 15:55:48.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.050" endtime="20201030 15:55:48.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.023" endtime="20201030 15:55:48.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.021" endtime="20201030 15:55:48.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.059" endtime="20201030 15:55:48.346"></status>
</kw>
<msg timestamp="20201030 15:55:48.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019466931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.057" endtime="20201030 15:55:48.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019466931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.350" endtime="20201030 15:55:48.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.358" endtime="20201030 15:55:48.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.055" endtime="20201030 15:55:48.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.053" endtime="20201030 15:55:48.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:48.365" level="INFO">${RESULT} = [{'diff': 8.455500000000005e-05}, {'diff': 8.487500000000162e-05}, {'diff': 8.518100000000015e-05}, {'diff': 8.497199999999913e-05}, {'diff': 8.469500000000268e-05}, {'diff': 8.505600000000002e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:48.362" endtime="20201030 15:55:48.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:48.369" level="INFO">${ACCURACY} = {'diff': [8.455500000000005e-05, 8.487500000000162e-05, 8.518100000000015e-05, 8.497199999999913e-05, 8.469500000000268e-05, 8.505600000000002e-05, 8.455599999999952e-05, 8.472199999999888e-05, 8.5236...</msg>
<status status="PASS" starttime="20201030 15:55:48.366" endtime="20201030 15:55:48.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.373" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 15:55:48.372" endtime="20201030 15:55:48.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.376" level="INFO">VALUE: [8.455500000000005e-05, 8.487500000000162e-05, 8.518100000000015e-05, 8.497199999999913e-05, 8.469500000000268e-05, 8.505600000000002e-05, 8.455599999999952e-05, 8.472199999999888e-05, 8.523699999999843e-05, 8.524999999999852e-05, 8.529100000000123e-05, 8.513900000000144e-05, 8.475000000000149e-05, 8.488900000000119e-05, 8.461099999999833e-05, 8.468099999999965e-05, 8.519499999999972e-05, 8.49590000000025e-05, 8.52920000000007e-05, 8.47920000000002e-05, 8.533299999999994e-05, 8.534799999999898e-05, 8.481899999999987e-05, 8.486099999999858e-05, 8.449999999999777e-05, 8.462500000000137e-05, 8.469399999999974e-05, 8.49720000000026e-05, 8.551400000000181e-05, 8.472199999999888e-05, 8.490300000000076e-05, 8.455599999999952e-05, 8.483299999999944e-05, 8.538899999999822e-05, 8.487499999999815e-05, 8.500000000000174e-05, 8.54859999999992e-05, 8.476399999999759e-05, 8.53469999999995e-05, 8.540299999999779e-05, 8.523599999999895e-05, 8.46110000000018e-05, 8.51110000000023e-05, 8.509699999999926e-05, 8.516700000000058e-05, 8.554100000000148e-05, 8.543099999999693e-05, 8.472200000000235e-05, 8.468099999999965e-05, 8.530600000000027e-05]</msg>
<status status="PASS" starttime="20201030 15:55:48.374" endtime="20201030 15:55:48.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.370" endtime="20201030 15:55:48.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:48.381" endtime="20201030 15:55:48.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.379" endtime="20201030 15:55:48.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.378" endtime="20201030 15:55:48.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.019" endtime="20201030 15:55:48.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.019" endtime="20201030 15:55:48.401"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.410" endtime="20201030 15:55:48.431"></status>
</kw>
<msg timestamp="20201030 15:55:48.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.408" endtime="20201030 15:55:48.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.433" endtime="20201030 15:55:48.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.435" endtime="20201030 15:55:48.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.406" endtime="20201030 15:55:48.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.404" endtime="20201030 15:55:48.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.444" endtime="20201030 15:55:48.730"></status>
</kw>
<msg timestamp="20201030 15:55:48.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020340583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020427111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.443" endtime="20201030 15:55:48.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020340583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020427111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.735" endtime="20201030 15:55:48.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.743" endtime="20201030 15:55:48.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.440" endtime="20201030 15:55:48.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.438" endtime="20201030 15:55:48.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:48.749" level="INFO">${RESULT} = [{'diff': 8.652800000000238e-05}, {'diff': 8.572199999999988e-05}, {'diff': 8.599999999999927e-05}, {'diff': 8.569500000000022e-05}, {'diff': 8.63059999999978e-05}, {'diff': 8.629199999999823e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:48.746" endtime="20201030 15:55:48.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:48.753" level="INFO">${ACCURACY} = {'diff': [8.652800000000238e-05, 8.572199999999988e-05, 8.599999999999927e-05, 8.569500000000022e-05, 8.63059999999978e-05, 8.629199999999823e-05, 8.5944999999997e-05, 8.591699999999786e-05, 8.6249999...</msg>
<status status="PASS" starttime="20201030 15:55:48.750" endtime="20201030 15:55:48.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.758" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 15:55:48.757" endtime="20201030 15:55:48.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.760" level="INFO">VALUE: [8.652800000000238e-05, 8.572199999999988e-05, 8.599999999999927e-05, 8.569500000000022e-05, 8.63059999999978e-05, 8.629199999999823e-05, 8.5944999999997e-05, 8.591699999999786e-05, 8.624999999999952e-05, 8.562500000000237e-05, 8.565199999999856e-05, 8.593000000000142e-05, 8.618000000000167e-05, 8.59310000000009e-05, 8.642999999999845e-05, 8.641699999999836e-05, 8.624999999999952e-05, 8.574999999999902e-05, 8.555600000000052e-05, 8.605600000000102e-05, 8.62920000000017e-05, 8.56249999999989e-05, 8.605600000000102e-05, 8.584799999999948e-05, 8.608300000000069e-05, 8.619400000000124e-05, 8.56799999999977e-05, 8.626400000000256e-05, 8.597200000000013e-05, 8.640300000000226e-05, 8.62920000000017e-05, 8.572199999999988e-05, 8.602799999999841e-05, 8.586099999999958e-05, 8.618100000000115e-05, 8.56249999999989e-05, 8.59310000000009e-05, 8.579100000000173e-05, 8.595800000000056e-05, 8.592999999999795e-05, 8.651399999999934e-05, 8.630499999999833e-05, 8.569400000000074e-05, 8.647200000000063e-05, 8.611099999999983e-05, 8.619500000000072e-05, 8.56249999999989e-05, 8.622200000000038e-05, 8.632000000000084e-05, 8.557000000000009e-05]</msg>
<status status="PASS" starttime="20201030 15:55:48.759" endtime="20201030 15:55:48.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.754" endtime="20201030 15:55:48.762"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:48.766" endtime="20201030 15:55:48.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.764" endtime="20201030 15:55:48.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.763" endtime="20201030 15:55:48.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.402" endtime="20201030 15:55:48.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.402" endtime="20201030 15:55:48.786"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.795" endtime="20201030 15:55:48.815"></status>
</kw>
<msg timestamp="20201030 15:55:48.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.794" endtime="20201030 15:55:48.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.817" endtime="20201030 15:55:48.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.819" endtime="20201030 15:55:48.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.791" endtime="20201030 15:55:48.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.789" endtime="20201030 15:55:48.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.829" endtime="20201030 15:55:49.114"></status>
</kw>
<msg timestamp="20201030 15:55:49.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019551556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019638444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.827" endtime="20201030 15:55:49.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019551556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019638444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.119" endtime="20201030 15:55:49.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.127" endtime="20201030 15:55:49.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.824" endtime="20201030 15:55:49.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.822" endtime="20201030 15:55:49.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:49.133" level="INFO">${RESULT} = [{'diff': 8.688800000000024e-05}, {'diff': 8.658300000000119e-05}, {'diff': 8.73189999999989e-05}, {'diff': 8.654199999999848e-05}, {'diff': 8.71250000000004e-05}, {'diff': 8.683299999999797e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:49.130" endtime="20201030 15:55:49.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:49.138" level="INFO">${ACCURACY} = {'diff': [8.688800000000024e-05, 8.658300000000119e-05, 8.73189999999989e-05, 8.654199999999848e-05, 8.71250000000004e-05, 8.683299999999797e-05, 8.71250000000004e-05, 8.654199999999848e-05, 8.6667000...</msg>
<status status="PASS" starttime="20201030 15:55:49.134" endtime="20201030 15:55:49.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.143" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 15:55:49.142" endtime="20201030 15:55:49.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.145" level="INFO">VALUE: [8.688800000000024e-05, 8.658300000000119e-05, 8.73189999999989e-05, 8.654199999999848e-05, 8.71250000000004e-05, 8.683299999999797e-05, 8.71250000000004e-05, 8.654199999999848e-05, 8.666700000000208e-05, 8.71120000000003e-05, 8.743099999999893e-05, 8.723699999999696e-05, 8.705500000000255e-05, 8.665199999999956e-05, 8.713800000000049e-05, 8.725000000000052e-05, 8.655499999999858e-05, 8.725000000000052e-05, 8.718099999999868e-05, 8.725000000000052e-05, 8.693099999999843e-05, 8.675000000000002e-05, 8.687500000000015e-05, 8.690199999999981e-05, 8.719499999999825e-05, 8.750000000000077e-05, 8.713899999999997e-05, 8.66799999999987e-05, 8.706900000000212e-05, 8.672200000000088e-05, 8.655500000000205e-05, 8.661100000000033e-05, 8.655499999999858e-05, 8.695800000000156e-05, 8.745799999999859e-05, 8.738900000000022e-05, 8.654200000000195e-05, 8.688899999999972e-05, 8.652800000000238e-05, 8.686100000000058e-05, 8.663799999999999e-05, 8.734699999999804e-05, 8.687500000000015e-05, 8.741599999999988e-05, 8.700000000000027e-05, 8.676399999999959e-05, 8.672200000000088e-05, 8.711099999999736e-05, 8.695799999999809e-05, 8.687500000000015e-05]</msg>
<status status="PASS" starttime="20201030 15:55:49.144" endtime="20201030 15:55:49.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.139" endtime="20201030 15:55:49.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:49.155" endtime="20201030 15:55:49.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.153" endtime="20201030 15:55:49.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.152" endtime="20201030 15:55:49.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.787" endtime="20201030 15:55:49.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.787" endtime="20201030 15:55:49.175"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.184" endtime="20201030 15:55:49.204"></status>
</kw>
<msg timestamp="20201030 15:55:49.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.182" endtime="20201030 15:55:49.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.206" endtime="20201030 15:55:49.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.208" endtime="20201030 15:55:49.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.180" endtime="20201030 15:55:49.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.178" endtime="20201030 15:55:49.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.217" endtime="20201030 15:55:49.505"></status>
</kw>
<msg timestamp="20201030 15:55:49.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019443958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019532333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.216" endtime="20201030 15:55:49.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019443958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019532333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.509" endtime="20201030 15:55:49.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.517" endtime="20201030 15:55:49.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.213" endtime="20201030 15:55:49.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.211" endtime="20201030 15:55:49.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:49.524" level="INFO">${RESULT} = [{'diff': 8.837499999999818e-05}, {'diff': 8.827800000000066e-05}, {'diff': 8.792999999999995e-05}, {'diff': 8.780499999999983e-05}, {'diff': 8.76250000000009e-05}, {'diff': 8.847200000000263e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:49.521" endtime="20201030 15:55:49.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:49.528" level="INFO">${ACCURACY} = {'diff': [8.837499999999818e-05, 8.827800000000066e-05, 8.792999999999995e-05, 8.780499999999983e-05, 8.76250000000009e-05, 8.847200000000263e-05, 8.806999999999912e-05, 8.79999999999978e-05, 8.805599...</msg>
<status status="PASS" starttime="20201030 15:55:49.525" endtime="20201030 15:55:49.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.532" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 15:55:49.531" endtime="20201030 15:55:49.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.535" level="INFO">VALUE: [8.837499999999818e-05, 8.827800000000066e-05, 8.792999999999995e-05, 8.780499999999983e-05, 8.76250000000009e-05, 8.847200000000263e-05, 8.806999999999912e-05, 8.79999999999978e-05, 8.805599999999955e-05, 8.765300000000004e-05, 8.851400000000134e-05, 8.776300000000112e-05, 8.81250000000014e-05, 8.763900000000047e-05, 8.829100000000076e-05, 8.811099999999836e-05, 8.829100000000076e-05, 8.811100000000183e-05, 8.761099999999786e-05, 8.795800000000256e-05, 8.787500000000115e-05, 8.843099999999993e-05, 8.844400000000002e-05, 8.84999999999983e-05, 8.782000000000234e-05, 8.836200000000155e-05, 8.812499999999793e-05, 8.841600000000088e-05, 8.773599999999798e-05, 8.786099999999811e-05, 8.844400000000002e-05, 8.777800000000016e-05, 8.787500000000115e-05, 8.818099999999968e-05, 8.832000000000284e-05, 8.765300000000004e-05, 8.83059999999998e-05, 8.768099999999918e-05, 8.762499999999743e-05, 8.819499999999925e-05, 8.848599999999873e-05, 8.775000000000102e-05, 8.779100000000026e-05, 8.843000000000045e-05, 8.761100000000133e-05, 8.793099999999943e-05, 8.798599999999823e-05, 8.837499999999818e-05, 8.761100000000133e-05, 8.829200000000023e-05]</msg>
<status status="PASS" starttime="20201030 15:55:49.533" endtime="20201030 15:55:49.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.529" endtime="20201030 15:55:49.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:49.540" endtime="20201030 15:55:49.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.538" endtime="20201030 15:55:49.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.537" endtime="20201030 15:55:49.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.176" endtime="20201030 15:55:49.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.175" endtime="20201030 15:55:49.560"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.569" endtime="20201030 15:55:49.590"></status>
</kw>
<msg timestamp="20201030 15:55:49.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.567" endtime="20201030 15:55:49.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.591" endtime="20201030 15:55:49.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.594" endtime="20201030 15:55:49.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.565" endtime="20201030 15:55:49.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.563" endtime="20201030 15:55:49.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.603" endtime="20201030 15:55:49.889"></status>
</kw>
<msg timestamp="20201030 15:55:49.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020356625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020445889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.601" endtime="20201030 15:55:49.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020356625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020445889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.893" endtime="20201030 15:55:49.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.901" endtime="20201030 15:55:49.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.599" endtime="20201030 15:55:49.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.597" endtime="20201030 15:55:49.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:49.908" level="INFO">${RESULT} = [{'diff': 8.926399999999862e-05}, {'diff': 8.944499999999703e-05}, {'diff': 8.909700000000326e-05}, {'diff': 8.89999999999988e-05}, {'diff': 8.91670000000011e-05}, {'diff': 8.863900000000147e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:49.904" endtime="20201030 15:55:49.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:49.912" level="INFO">${ACCURACY} = {'diff': [8.926399999999862e-05, 8.944499999999703e-05, 8.909700000000326e-05, 8.89999999999988e-05, 8.91670000000011e-05, 8.863900000000147e-05, 8.850000000000177e-05, 8.902699999999847e-05, 8.922199...</msg>
<status status="PASS" starttime="20201030 15:55:49.909" endtime="20201030 15:55:49.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.916" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 15:55:49.915" endtime="20201030 15:55:49.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.919" level="INFO">VALUE: [8.926399999999862e-05, 8.944499999999703e-05, 8.909700000000326e-05, 8.89999999999988e-05, 8.91670000000011e-05, 8.863900000000147e-05, 8.850000000000177e-05, 8.902699999999847e-05, 8.922199999999991e-05, 8.862499999999843e-05, 8.855499999999711e-05, 8.94999999999993e-05, 8.917999999999773e-05, 8.924999999999905e-05, 8.89860000000027e-05, 8.920899999999982e-05, 8.951399999999887e-05, 8.911100000000283e-05, 8.915299999999807e-05, 8.922199999999991e-05, 8.905500000000108e-05, 8.872299999999889e-05, 8.948599999999973e-05, 8.886099999999911e-05, 8.855500000000058e-05, 8.937499999999918e-05, 8.924999999999905e-05, 8.897199999999966e-05, 8.873599999999898e-05, 8.886099999999911e-05, 8.924999999999905e-05, 8.884799999999901e-05, 8.93060000000008e-05, 8.859800000000223e-05, 8.95129999999994e-05, 8.936199999999908e-05, 8.894400000000052e-05, 8.927700000000219e-05, 8.937499999999918e-05, 8.9332999999997e-05, 8.933300000000047e-05, 8.851399999999787e-05, 8.916699999999764e-05, 8.923599999999948e-05, 8.868100000000018e-05, 8.940199999999884e-05, 8.855600000000005e-05, 8.91389999999985e-05, 8.847199999999916e-05, 8.865299999999757e-05]</msg>
<status status="PASS" starttime="20201030 15:55:49.917" endtime="20201030 15:55:49.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.913" endtime="20201030 15:55:49.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:49.924" endtime="20201030 15:55:49.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.923" endtime="20201030 15:55:49.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.922" endtime="20201030 15:55:49.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.561" endtime="20201030 15:55:49.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.561" endtime="20201030 15:55:49.945"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.954" endtime="20201030 15:55:49.974"></status>
</kw>
<msg timestamp="20201030 15:55:49.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.952" endtime="20201030 15:55:49.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.975" endtime="20201030 15:55:49.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.978" endtime="20201030 15:55:49.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.950" endtime="20201030 15:55:49.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.947" endtime="20201030 15:55:49.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.987" endtime="20201030 15:55:50.273"></status>
</kw>
<msg timestamp="20201030 15:55:50.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019448306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019537917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.985" endtime="20201030 15:55:50.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019448306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019537917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.277" endtime="20201030 15:55:50.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.285" endtime="20201030 15:55:50.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.983" endtime="20201030 15:55:50.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.981" endtime="20201030 15:55:50.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:50.292" level="INFO">${RESULT} = [{'diff': 8.961099999999986e-05}, {'diff': 9.034799999999704e-05}, {'diff': 9.041600000000288e-05}, {'diff': 9.004099999999904e-05}, {'diff': 9.022200000000091e-05}, {'diff': 9.030500000000233e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:50.289" endtime="20201030 15:55:50.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:50.297" level="INFO">${ACCURACY} = {'diff': [8.961099999999986e-05, 9.034799999999704e-05, 9.041600000000288e-05, 9.004099999999904e-05, 9.022200000000091e-05, 9.030500000000233e-05, 9.01800000000022e-05, 8.970799999999737e-05, 8.97359...</msg>
<status status="PASS" starttime="20201030 15:55:50.293" endtime="20201030 15:55:50.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.301" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 15:55:50.300" endtime="20201030 15:55:50.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.304" level="INFO">VALUE: [8.961099999999986e-05, 9.034799999999704e-05, 9.041600000000288e-05, 9.004099999999904e-05, 9.022200000000091e-05, 9.030500000000233e-05, 9.01800000000022e-05, 8.970799999999737e-05, 8.973599999999998e-05, 9.023600000000048e-05, 9.018100000000168e-05, 8.954200000000148e-05, 9.029199999999876e-05, 8.973599999999998e-05, 9.018099999999821e-05, 9.041699999999889e-05, 8.962499999999943e-05, 9.016599999999916e-05, 9.012499999999993e-05, 8.967999999999823e-05, 9.006900000000165e-05, 9.047200000000116e-05, 8.959700000000029e-05, 9.047200000000116e-05, 8.958400000000019e-05, 8.980599999999783e-05, 9.029199999999876e-05, 8.993099999999796e-05, 9.03190000000019e-05, 9.034699999999757e-05, 8.980499999999836e-05, 8.995800000000109e-05, 8.981899999999793e-05, 9.005500000000208e-05, 9.023599999999701e-05, 9.011100000000036e-05, 9.036100000000061e-05, 9.01389999999995e-05, 8.998600000000023e-05, 8.991700000000186e-05, 9.023600000000048e-05, 8.984800000000001e-05, 9.051399999999987e-05, 9.037500000000018e-05, 9.05000000000003e-05, 8.96939999999978e-05, 9.047200000000116e-05, 9.017999999999873e-05, 9.008300000000122e-05, 8.976399999999912e-05]</msg>
<status status="PASS" starttime="20201030 15:55:50.302" endtime="20201030 15:55:50.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.298" endtime="20201030 15:55:50.305"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:50.308" endtime="20201030 15:55:50.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.307" endtime="20201030 15:55:50.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.306" endtime="20201030 15:55:50.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.946" endtime="20201030 15:55:50.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.945" endtime="20201030 15:55:50.329"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.338" endtime="20201030 15:55:50.358"></status>
</kw>
<msg timestamp="20201030 15:55:50.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.336" endtime="20201030 15:55:50.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.359" endtime="20201030 15:55:50.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.362" endtime="20201030 15:55:50.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.334" endtime="20201030 15:55:50.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.332" endtime="20201030 15:55:50.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.371" endtime="20201030 15:55:50.660"></status>
</kw>
<msg timestamp="20201030 15:55:50.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019516431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019607611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.369" endtime="20201030 15:55:50.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019516431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019607611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.664" endtime="20201030 15:55:50.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.672" endtime="20201030 15:55:50.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.367" endtime="20201030 15:55:50.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.365" endtime="20201030 15:55:50.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:50.678" level="INFO">${RESULT} = [{'diff': 9.117999999999973e-05}, {'diff': 9.098600000000123e-05}, {'diff': 9.148599999999826e-05}, {'diff': 9.092999999999948e-05}, {'diff': 9.113899999999703e-05}, {'diff': 9.111200000000083e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:50.675" endtime="20201030 15:55:50.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:50.683" level="INFO">${ACCURACY} = {'diff': [9.117999999999973e-05, 9.098600000000123e-05, 9.148599999999826e-05, 9.092999999999948e-05, 9.113899999999703e-05, 9.111200000000083e-05, 9.104199999999951e-05, 9.11390000000005e-05, 9.04579...</msg>
<status status="PASS" starttime="20201030 15:55:50.679" endtime="20201030 15:55:50.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.687" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 15:55:50.686" endtime="20201030 15:55:50.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.689" level="INFO">VALUE: [9.117999999999973e-05, 9.098600000000123e-05, 9.148599999999826e-05, 9.092999999999948e-05, 9.113899999999703e-05, 9.111200000000083e-05, 9.104199999999951e-05, 9.11390000000005e-05, 9.045799999999812e-05, 9.086100000000111e-05, 9.144400000000302e-05, 9.116699999999964e-05, 9.073599999999751e-05, 9.141699999999989e-05, 9.108299999999875e-05, 9.149999999999783e-05, 9.075000000000055e-05, 9.08060000000023e-05, 9.079199999999926e-05, 9.099999999999733e-05, 9.134799999999804e-05, 9.062500000000043e-05, 9.14719999999987e-05, 9.094399999999905e-05, 9.109699999999832e-05, 9.056899999999868e-05, 9.104199999999951e-05, 9.106899999999918e-05, 9.15139999999974e-05, 9.125000000000105e-05, 9.084700000000154e-05, 9.143099999999946e-05, 9.086200000000058e-05, 9.136100000000161e-05, 9.098599999999776e-05, 9.13190000000029e-05, 9.06800000000027e-05, 9.141600000000041e-05, 9.056900000000215e-05, 9.137500000000118e-05, 9.055600000000205e-05, 9.061100000000086e-05, 9.107000000000212e-05, 9.057000000000162e-05, 9.091700000000286e-05, 9.152700000000097e-05, 9.143099999999946e-05, 9.104100000000004e-05, 9.059699999999782e-05, 9.075000000000055e-05]</msg>
<status status="PASS" starttime="20201030 15:55:50.688" endtime="20201030 15:55:50.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.683" endtime="20201030 15:55:50.691"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:50.694" endtime="20201030 15:55:50.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.693" endtime="20201030 15:55:50.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.692" endtime="20201030 15:55:50.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.330" endtime="20201030 15:55:50.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.330" endtime="20201030 15:55:50.715"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.723" endtime="20201030 15:55:50.744"></status>
</kw>
<msg timestamp="20201030 15:55:50.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.722" endtime="20201030 15:55:50.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.746" endtime="20201030 15:55:50.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.748" endtime="20201030 15:55:50.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.719" endtime="20201030 15:55:50.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.717" endtime="20201030 15:55:50.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.757" endtime="20201030 15:55:51.043"></status>
</kw>
<msg timestamp="20201030 15:55:51.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020276319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020368194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.756" endtime="20201030 15:55:51.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020276319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020368194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.047" endtime="20201030 15:55:51.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.056" endtime="20201030 15:55:51.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.753" endtime="20201030 15:55:51.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.752" endtime="20201030 15:55:51.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:51.062" level="INFO">${RESULT} = [{'diff': 9.187499999999821e-05}, {'diff': 9.252799999999797e-05}, {'diff': 9.163899999999753e-05}, {'diff': 9.175000000000155e-05}, {'diff': 9.191600000000091e-05}, {'diff': 9.154200000000001e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:51.059" endtime="20201030 15:55:51.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:51.066" level="INFO">${ACCURACY} = {'diff': [9.187499999999821e-05, 9.252799999999797e-05, 9.163899999999753e-05, 9.175000000000155e-05, 9.191600000000091e-05, 9.154200000000001e-05, 9.168099999999971e-05, 9.245900000000307e-05, 9.2416...</msg>
<status status="PASS" starttime="20201030 15:55:51.063" endtime="20201030 15:55:51.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.070" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 15:55:51.069" endtime="20201030 15:55:51.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.073" level="INFO">VALUE: [9.187499999999821e-05, 9.252799999999797e-05, 9.163899999999753e-05, 9.175000000000155e-05, 9.191600000000091e-05, 9.154200000000001e-05, 9.168099999999971e-05, 9.245900000000307e-05, 9.241699999999742e-05, 9.248599999999926e-05, 9.236099999999914e-05, 9.226400000000162e-05, 9.240300000000132e-05, 9.159699999999882e-05, 9.162499999999796e-05, 9.216700000000064e-05, 9.154100000000054e-05, 9.209699999999932e-05, 9.204200000000051e-05, 9.168099999999971e-05, 9.218100000000021e-05, 9.2333e-05, 9.156999999999915e-05, 9.216600000000116e-05, 9.204200000000051e-05, 9.243100000000046e-05, 9.162500000000143e-05, 9.249999999999883e-05, 9.223600000000248e-05, 9.152700000000097e-05, 9.245800000000012e-05, 9.181899999999993e-05, 9.168099999999971e-05, 9.229200000000076e-05, 9.219499999999978e-05, 9.198600000000223e-05, 9.243100000000046e-05, 9.191700000000039e-05, 9.173700000000146e-05, 9.1639000000001e-05, 9.19719999999992e-05, 9.187500000000168e-05, 9.155500000000011e-05, 9.18329999999995e-05, 9.187500000000168e-05, 9.209699999999932e-05, 9.254199999999754e-05, 9.158400000000219e-05, 9.176400000000112e-05, 9.161099999999839e-05]</msg>
<status status="PASS" starttime="20201030 15:55:51.072" endtime="20201030 15:55:51.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.067" endtime="20201030 15:55:51.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:51.079" endtime="20201030 15:55:51.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.077" endtime="20201030 15:55:51.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.076" endtime="20201030 15:55:51.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.716" endtime="20201030 15:55:51.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.715" endtime="20201030 15:55:51.099"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.108" endtime="20201030 15:55:51.128"></status>
</kw>
<msg timestamp="20201030 15:55:51.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.106" endtime="20201030 15:55:51.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.130" endtime="20201030 15:55:51.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.132" endtime="20201030 15:55:51.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.104" endtime="20201030 15:55:51.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.102" endtime="20201030 15:55:51.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.141" endtime="20201030 15:55:51.427"></status>
</kw>
<msg timestamp="20201030 15:55:51.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01938625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019479556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:51.140" endtime="20201030 15:55:51.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01938625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019479556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:51.432" endtime="20201030 15:55:51.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.440" endtime="20201030 15:55:51.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.137" endtime="20201030 15:55:51.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.136" endtime="20201030 15:55:51.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:51.446" level="INFO">${RESULT} = [{'diff': 9.330599999999786e-05}, {'diff': 9.327800000000219e-05}, {'diff': 9.301299999999943e-05}, {'diff': 9.259699999999982e-05}, {'diff': 9.317999999999826e-05}, {'diff': 9.35139999999994e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:51.443" endtime="20201030 15:55:51.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:51.451" level="INFO">${ACCURACY} = {'diff': [9.330599999999786e-05, 9.327800000000219e-05, 9.301299999999943e-05, 9.259699999999982e-05, 9.317999999999826e-05, 9.35139999999994e-05, 9.30139999999989e-05, 9.349999999999983e-05, 9.257000...</msg>
<status status="PASS" starttime="20201030 15:55:51.447" endtime="20201030 15:55:51.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.455" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 15:55:51.454" endtime="20201030 15:55:51.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.458" level="INFO">VALUE: [9.330599999999786e-05, 9.327800000000219e-05, 9.301299999999943e-05, 9.259699999999982e-05, 9.317999999999826e-05, 9.35139999999994e-05, 9.30139999999989e-05, 9.349999999999983e-05, 9.257000000000015e-05, 9.274999999999908e-05, 9.286100000000311e-05, 9.262499999999896e-05, 9.34720000000007e-05, 9.28200000000004e-05, 9.320900000000035e-05, 9.268000000000123e-05, 9.349999999999983e-05, 9.276400000000212e-05, 9.298599999999976e-05, 9.280499999999789e-05, 9.337499999999971e-05, 9.276399999999865e-05, 9.258300000000025e-05, 9.257000000000015e-05, 9.349999999999983e-05, 9.348600000000026e-05, 9.316700000000164e-05, 9.326399999999915e-05, 9.26940000000008e-05, 9.258399999999972e-05, 9.31940000000013e-05, 9.277800000000169e-05, 9.330499999999839e-05, 9.295800000000062e-05, 9.331899999999796e-05, 9.29720000000002e-05, 9.293100000000096e-05, 9.266700000000114e-05, 9.279200000000126e-05, 9.268100000000071e-05, 9.35139999999994e-05, 9.35000000000033e-05, 9.256900000000068e-05, 9.334700000000057e-05, 9.281900000000093e-05, 9.261099999999939e-05, 9.31390000000025e-05, 9.343100000000146e-05, 9.344500000000103e-05, 9.266700000000114e-05]</msg>
<status status="PASS" starttime="20201030 15:55:51.456" endtime="20201030 15:55:51.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.452" endtime="20201030 15:55:51.459"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:51.463" endtime="20201030 15:55:51.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.461" endtime="20201030 15:55:51.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.460" endtime="20201030 15:55:51.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.100" endtime="20201030 15:55:51.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.100" endtime="20201030 15:55:51.483"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.492" endtime="20201030 15:55:51.512"></status>
</kw>
<msg timestamp="20201030 15:55:51.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.490" endtime="20201030 15:55:51.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.514" endtime="20201030 15:55:51.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.516" endtime="20201030 15:55:51.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.488" endtime="20201030 15:55:51.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.486" endtime="20201030 15:55:51.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.525" endtime="20201030 15:55:51.813"></status>
</kw>
<msg timestamp="20201030 15:55:51.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019418542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019512153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.524" endtime="20201030 15:55:51.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019418542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019512153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.817" endtime="20201030 15:55:51.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.825" endtime="20201030 15:55:51.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.521" endtime="20201030 15:55:51.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.520" endtime="20201030 15:55:51.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:51.831" level="INFO">${RESULT} = [{'diff': 9.361100000000039e-05}, {'diff': 9.387500000000021e-05}, {'diff': 9.424999999999711e-05}, {'diff': 9.347300000000017e-05}, {'diff': 9.4027e-05}, {'diff': 9.443000000000298e-05}, {'diff': 9.4...</msg>
<status status="PASS" starttime="20201030 15:55:51.828" endtime="20201030 15:55:51.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:51.835" level="INFO">${ACCURACY} = {'diff': [9.361100000000039e-05, 9.387500000000021e-05, 9.424999999999711e-05, 9.347300000000017e-05, 9.4027e-05, 9.443000000000298e-05, 9.430500000000286e-05, 9.426400000000015e-05, 9.450000000000083...</msg>
<status status="PASS" starttime="20201030 15:55:51.832" endtime="20201030 15:55:51.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.840" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 15:55:51.839" endtime="20201030 15:55:51.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.842" level="INFO">VALUE: [9.361100000000039e-05, 9.387500000000021e-05, 9.424999999999711e-05, 9.347300000000017e-05, 9.4027e-05, 9.443000000000298e-05, 9.430500000000286e-05, 9.426400000000015e-05, 9.450000000000083e-05, 9.408299999999828e-05, 9.386100000000064e-05, 9.427800000000319e-05, 9.429199999999929e-05, 9.388899999999978e-05, 9.43880000000008e-05, 9.436200000000061e-05, 9.437500000000071e-05, 9.427700000000025e-05, 9.445800000000212e-05, 9.354100000000254e-05, 9.376399999999965e-05, 9.35139999999994e-05, 9.354200000000201e-05, 9.44720000000017e-05, 9.426400000000015e-05, 9.404199999999904e-05, 9.447300000000117e-05, 9.406999999999818e-05, 9.430600000000233e-05, 9.381900000000193e-05, 9.354099999999907e-05, 9.411100000000089e-05, 9.359699999999735e-05, 9.404099999999957e-05, 9.450000000000083e-05, 9.447199999999822e-05, 9.375000000000008e-05, 9.391599999999944e-05, 9.445899999999813e-05, 9.450000000000083e-05, 9.4333999999998e-05, 9.418100000000221e-05, 9.354199999999854e-05, 9.411100000000089e-05, 9.394400000000205e-05, 9.395799999999815e-05, 9.437500000000071e-05, 9.372200000000094e-05, 9.372200000000094e-05, 9.449999999999736e-05]</msg>
<status status="PASS" starttime="20201030 15:55:51.841" endtime="20201030 15:55:51.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.836" endtime="20201030 15:55:51.844"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:51.847" endtime="20201030 15:55:51.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.846" endtime="20201030 15:55:51.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.845" endtime="20201030 15:55:51.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.484" endtime="20201030 15:55:51.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.484" endtime="20201030 15:55:51.868"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.877" endtime="20201030 15:55:51.899"></status>
</kw>
<msg timestamp="20201030 15:55:51.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.876" endtime="20201030 15:55:51.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.901" endtime="20201030 15:55:51.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.903" endtime="20201030 15:55:51.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.873" endtime="20201030 15:55:51.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.871" endtime="20201030 15:55:51.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.912" endtime="20201030 15:55:52.198"></status>
</kw>
<msg timestamp="20201030 15:55:52.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021681694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02177625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:51.910" endtime="20201030 15:55:52.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021681694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02177625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:52.202" endtime="20201030 15:55:52.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.210" endtime="20201030 15:55:52.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.908" endtime="20201030 15:55:52.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.906" endtime="20201030 15:55:52.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:52.216" level="INFO">${RESULT} = [{'diff': 9.455599999999911e-05}, {'diff': 9.518000000000026e-05}, {'diff': 9.459699999999835e-05}, {'diff': 9.481999999999893e-05}, {'diff': 9.468099999999924e-05}, {'diff': 9.480500000000336e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:52.213" endtime="20201030 15:55:52.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:52.221" level="INFO">${ACCURACY} = {'diff': [9.455599999999911e-05, 9.518000000000026e-05, 9.459699999999835e-05, 9.481999999999893e-05, 9.468099999999924e-05, 9.480500000000336e-05, 9.495899999999863e-05, 9.531899999999996e-05, 9.5347...</msg>
<status status="PASS" starttime="20201030 15:55:52.217" endtime="20201030 15:55:52.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.225" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 15:55:52.224" endtime="20201030 15:55:52.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.227" level="INFO">VALUE: [9.455599999999911e-05, 9.518000000000026e-05, 9.459699999999835e-05, 9.481999999999893e-05, 9.468099999999924e-05, 9.480500000000336e-05, 9.495899999999863e-05, 9.531899999999996e-05, 9.534700000000257e-05, 9.543000000000051e-05, 9.493100000000296e-05, 9.454199999999954e-05, 9.467999999999976e-05, 9.504200000000004e-05, 9.479199999999979e-05, 9.518099999999974e-05, 9.543099999999999e-05, 9.525000000000158e-05, 9.454199999999954e-05, 9.545799999999965e-05, 9.474999999999761e-05, 9.53469999999991e-05, 9.533299999999953e-05, 9.522199999999897e-05, 9.477800000000022e-05, 9.519500000000278e-05, 9.543099999999999e-05, 9.530599999999986e-05, 9.50140000000009e-05, 9.53880000000018e-05, 9.474999999999761e-05, 9.54729999999987e-05, 9.474999999999761e-05, 9.537499999999824e-05, 9.500000000000133e-05, 9.481899999999946e-05, 9.467999999999976e-05, 9.501399999999743e-05, 9.522299999999845e-05, 9.49859999999983e-05, 9.513899999999756e-05, 9.536100000000214e-05, 9.509700000000232e-05, 9.477800000000022e-05, 9.506899999999971e-05, 9.50140000000009e-05, 9.477800000000022e-05, 9.504200000000004e-05, 9.463900000000053e-05, 9.520800000000287e-05]</msg>
<status status="PASS" starttime="20201030 15:55:52.226" endtime="20201030 15:55:52.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.221" endtime="20201030 15:55:52.230"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:52.233" endtime="20201030 15:55:52.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.232" endtime="20201030 15:55:52.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.231" endtime="20201030 15:55:52.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.869" endtime="20201030 15:55:52.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.868" endtime="20201030 15:55:52.254"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.262" endtime="20201030 15:55:52.283"></status>
</kw>
<msg timestamp="20201030 15:55:52.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.261" endtime="20201030 15:55:52.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.284" endtime="20201030 15:55:52.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.287" endtime="20201030 15:55:52.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.258" endtime="20201030 15:55:52.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.256" endtime="20201030 15:55:52.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.296" endtime="20201030 15:55:52.581"></status>
</kw>
<msg timestamp="20201030 15:55:52.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019395194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019491458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.294" endtime="20201030 15:55:52.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019395194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019491458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.585" endtime="20201030 15:55:52.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.593" endtime="20201030 15:55:52.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.292" endtime="20201030 15:55:52.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.290" endtime="20201030 15:55:52.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:52.600" level="INFO">${RESULT} = [{'diff': 9.626399999999868e-05}, {'diff': 9.644399999999761e-05}, {'diff': 9.579200000000079e-05}, {'diff': 9.573599999999904e-05}, {'diff': 9.640299999999838e-05}, {'diff': 9.599999999999886e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:52.597" endtime="20201030 15:55:52.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:52.605" level="INFO">${ACCURACY} = {'diff': [9.626399999999868e-05, 9.644399999999761e-05, 9.579200000000079e-05, 9.573599999999904e-05, 9.640299999999838e-05, 9.599999999999886e-05, 9.580600000000036e-05, 9.581999999999993e-05, 9.6124...</msg>
<status status="PASS" starttime="20201030 15:55:52.601" endtime="20201030 15:55:52.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.609" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 15:55:52.608" endtime="20201030 15:55:52.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.612" level="INFO">VALUE: [9.626399999999868e-05, 9.644399999999761e-05, 9.579200000000079e-05, 9.573599999999904e-05, 9.640299999999838e-05, 9.599999999999886e-05, 9.580600000000036e-05, 9.581999999999993e-05, 9.612499999999899e-05, 9.562499999999849e-05, 9.580500000000089e-05, 9.637499999999924e-05, 9.638899999999881e-05, 9.565199999999816e-05, 9.587499999999874e-05, 9.554100000000107e-05, 9.586200000000211e-05, 9.555600000000011e-05, 9.563900000000153e-05, 9.62920000000013e-05, 9.574999999999861e-05, 9.643100000000099e-05, 9.58469999999996e-05, 9.618000000000126e-05, 9.622199999999997e-05, 9.58469999999996e-05, 9.630499999999792e-05, 9.561099999999892e-05, 9.609699999999985e-05, 9.636100000000314e-05, 9.636099999999967e-05, 9.64859999999998e-05, 9.597199999999972e-05, 9.572200000000294e-05, 9.586199999999864e-05, 9.62080000000004e-05, 9.591700000000092e-05, 9.572199999999947e-05, 9.594400000000058e-05, 9.569400000000033e-05, 9.606900000000071e-05, 9.6027999999998e-05, 9.623599999999954e-05, 9.587500000000221e-05, 9.608300000000028e-05, 9.590299999999788e-05, 9.591700000000092e-05, 9.641699999999795e-05, 9.623699999999902e-05, 9.569499999999981e-05]</msg>
<status status="PASS" starttime="20201030 15:55:52.610" endtime="20201030 15:55:52.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.606" endtime="20201030 15:55:52.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:52.616" endtime="20201030 15:55:52.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.615" endtime="20201030 15:55:52.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.614" endtime="20201030 15:55:52.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.255" endtime="20201030 15:55:52.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.254" endtime="20201030 15:55:52.637"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.646" endtime="20201030 15:55:52.666"></status>
</kw>
<msg timestamp="20201030 15:55:52.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.644" endtime="20201030 15:55:52.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.667" endtime="20201030 15:55:52.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.670" endtime="20201030 15:55:52.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.642" endtime="20201030 15:55:52.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.640" endtime="20201030 15:55:52.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.679" endtime="20201030 15:55:52.965"></status>
</kw>
<msg timestamp="20201030 15:55:52.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019553361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019650056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.677" endtime="20201030 15:55:52.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019553361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019650056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.969" endtime="20201030 15:55:52.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.978" endtime="20201030 15:55:52.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.675" endtime="20201030 15:55:52.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.673" endtime="20201030 15:55:52.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:52.984" level="INFO">${RESULT} = [{'diff': 9.669500000000081e-05}, {'diff': 9.743100000000199e-05}, {'diff': 9.699999999999986e-05}, {'diff': 9.744399999999862e-05}, {'diff': 9.718000000000226e-05}, {'diff': 9.737500000000024e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:52.981" endtime="20201030 15:55:52.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:52.988" level="INFO">${ACCURACY} = {'diff': [9.669500000000081e-05, 9.743100000000199e-05, 9.699999999999986e-05, 9.744399999999862e-05, 9.718000000000226e-05, 9.737500000000024e-05, 9.676399999999918e-05, 9.730500000000239e-05, 9.7444...</msg>
<status status="PASS" starttime="20201030 15:55:52.985" endtime="20201030 15:55:52.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.993" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 15:55:52.992" endtime="20201030 15:55:52.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.995" level="INFO">VALUE: [9.669500000000081e-05, 9.743100000000199e-05, 9.699999999999986e-05, 9.744399999999862e-05, 9.718000000000226e-05, 9.737500000000024e-05, 9.676399999999918e-05, 9.730500000000239e-05, 9.744400000000208e-05, 9.743100000000199e-05, 9.726400000000315e-05, 9.74860000000008e-05, 9.737500000000024e-05, 9.736100000000067e-05, 9.722200000000097e-05, 9.691699999999845e-05, 9.679099999999885e-05, 9.731899999999849e-05, 9.743000000000251e-05, 9.706900000000171e-05, 9.715299999999913e-05, 9.699999999999986e-05, 9.715299999999913e-05, 9.668100000000124e-05, 9.666700000000167e-05, 9.705599999999814e-05, 9.732000000000143e-05, 9.723700000000002e-05, 9.71669999999987e-05, 9.711099999999695e-05, 9.66660000000022e-05, 9.740300000000285e-05, 9.732000000000143e-05, 9.706900000000171e-05, 9.71669999999987e-05, 9.712499999999999e-05, 9.709700000000085e-05, 9.713899999999956e-05, 9.709699999999738e-05, 9.743100000000199e-05, 9.691699999999845e-05, 9.66660000000022e-05, 9.686100000000017e-05, 9.744399999999862e-05, 9.73470000000011e-05, 9.662499999999949e-05, 9.713899999999956e-05, 9.66669999999982e-05, 9.751399999999993e-05, 9.668100000000124e-05]</msg>
<status status="PASS" starttime="20201030 15:55:52.994" endtime="20201030 15:55:52.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.989" endtime="20201030 15:55:52.997"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:53.000" endtime="20201030 15:55:53.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.999" endtime="20201030 15:55:53.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.998" endtime="20201030 15:55:53.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.638" endtime="20201030 15:55:53.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.637" endtime="20201030 15:55:53.021"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.030" endtime="20201030 15:55:53.051"></status>
</kw>
<msg timestamp="20201030 15:55:53.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.028" endtime="20201030 15:55:53.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.053" endtime="20201030 15:55:53.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.055" endtime="20201030 15:55:53.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.025" endtime="20201030 15:55:53.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.023" endtime="20201030 15:55:53.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.064" endtime="20201030 15:55:53.350"></status>
</kw>
<msg timestamp="20201030 15:55:53.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020435139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020532889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.063" endtime="20201030 15:55:53.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020435139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020532889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.354" endtime="20201030 15:55:53.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.362" endtime="20201030 15:55:53.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.060" endtime="20201030 15:55:53.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.058" endtime="20201030 15:55:53.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:53.369" level="INFO">${RESULT} = [{'diff': 9.774999999999714e-05}, {'diff': 9.819500000000231e-05}, {'diff': 9.791699999999945e-05}, {'diff': 9.798599999999782e-05}, {'diff': 9.822299999999798e-05}, {'diff': 9.80410000000001e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:53.365" endtime="20201030 15:55:53.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:53.373" level="INFO">${ACCURACY} = {'diff': [9.774999999999714e-05, 9.819500000000231e-05, 9.791699999999945e-05, 9.798599999999782e-05, 9.822299999999798e-05, 9.80410000000001e-05, 9.769399999999887e-05, 9.845799999999919e-05, 9.84720...</msg>
<status status="PASS" starttime="20201030 15:55:53.370" endtime="20201030 15:55:53.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.377" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 15:55:53.376" endtime="20201030 15:55:53.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.380" level="INFO">VALUE: [9.774999999999714e-05, 9.819500000000231e-05, 9.791699999999945e-05, 9.798599999999782e-05, 9.822299999999798e-05, 9.80410000000001e-05, 9.769399999999887e-05, 9.845799999999919e-05, 9.847200000000222e-05, 9.765299999999963e-05, 9.761100000000092e-05, 9.837499999999777e-05, 9.813900000000056e-05, 9.837500000000124e-05, 9.806999999999871e-05, 9.772200000000147e-05, 9.818099999999927e-05, 9.762500000000049e-05, 9.811099999999795e-05, 9.823599999999807e-05, 9.780499999999942e-05, 9.812499999999752e-05, 9.844399999999962e-05, 9.791699999999945e-05, 9.812500000000099e-05, 9.782000000000193e-05, 9.770899999999791e-05, 9.754200000000254e-05, 9.832000000000243e-05, 9.773600000000104e-05, 9.845799999999919e-05, 9.82219999999985e-05, 9.758299999999831e-05, 9.78609999999977e-05, 9.787500000000074e-05, 9.825000000000111e-05, 9.847199999999875e-05, 9.812500000000099e-05, 9.768099999999877e-05, 9.769500000000181e-05, 9.75279999999995e-05, 9.773599999999757e-05, 9.84869999999978e-05, 9.756899999999874e-05, 9.851400000000093e-05, 9.787500000000074e-05, 9.819400000000283e-05, 9.787500000000074e-05, 9.756900000000221e-05, 9.840300000000038e-05]</msg>
<status status="PASS" starttime="20201030 15:55:53.378" endtime="20201030 15:55:53.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.374" endtime="20201030 15:55:53.382"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:53.385" endtime="20201030 15:55:53.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.384" endtime="20201030 15:55:53.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.383" endtime="20201030 15:55:53.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.022" endtime="20201030 15:55:53.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.021" endtime="20201030 15:55:53.406"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.415" endtime="20201030 15:55:53.435"></status>
</kw>
<msg timestamp="20201030 15:55:53.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.413" endtime="20201030 15:55:53.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.437" endtime="20201030 15:55:53.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.439" endtime="20201030 15:55:53.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.411" endtime="20201030 15:55:53.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.409" endtime="20201030 15:55:53.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.448" endtime="20201030 15:55:53.735"></status>
</kw>
<msg timestamp="20201030 15:55:53.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019430806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019530278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.447" endtime="20201030 15:55:53.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019430806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019530278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.739" endtime="20201030 15:55:53.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.747" endtime="20201030 15:55:53.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.444" endtime="20201030 15:55:53.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.443" endtime="20201030 15:55:53.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:53.754" level="INFO">${RESULT} = [{'diff': 9.947200000000322e-05}, {'diff': 9.901400000000143e-05}, {'diff': 9.926299999999874e-05}, {'diff': 9.870899999999891e-05}, {'diff': 9.884699999999913e-05}, {'diff': 9.924999999999864e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:53.750" endtime="20201030 15:55:53.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:53.759" level="INFO">${ACCURACY} = {'diff': [9.947200000000322e-05, 9.901400000000143e-05, 9.926299999999874e-05, 9.870899999999891e-05, 9.884699999999913e-05, 9.924999999999864e-05, 9.89999999999984e-05, 9.929099999999788e-05, 9.89860...</msg>
<status status="PASS" starttime="20201030 15:55:53.755" endtime="20201030 15:55:53.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.763" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 15:55:53.762" endtime="20201030 15:55:53.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.765" level="INFO">VALUE: [9.947200000000322e-05, 9.901400000000143e-05, 9.926299999999874e-05, 9.870899999999891e-05, 9.884699999999913e-05, 9.924999999999864e-05, 9.89999999999984e-05, 9.929099999999788e-05, 9.89860000000023e-05, 9.93609999999992e-05, 9.86670000000002e-05, 9.868099999999977e-05, 9.951399999999846e-05, 9.93060000000004e-05, 9.933399999999953e-05, 9.861200000000139e-05, 9.911099999999895e-05, 9.912500000000199e-05, 9.852700000000103e-05, 9.875000000000161e-05, 9.887499999999827e-05, 9.93609999999992e-05, 9.898599999999882e-05, 9.926399999999821e-05, 9.909699999999938e-05, 9.854200000000007e-05, 9.85280000000005e-05, 9.874999999999814e-05, 9.922299999999898e-05, 9.909799999999885e-05, 9.905500000000067e-05, 9.950000000000236e-05, 9.893100000000002e-05, 9.922299999999898e-05, 9.923600000000254e-05, 9.859700000000235e-05, 9.89999999999984e-05, 9.924999999999864e-05, 9.947199999999976e-05, 9.866699999999673e-05, 9.894500000000306e-05, 9.909799999999885e-05, 9.908299999999981e-05, 9.86800000000003e-05, 9.913900000000156e-05, 9.85410000000006e-05, 9.869399999999987e-05, 9.883299999999956e-05, 9.859699999999888e-05, 9.893000000000055e-05]</msg>
<status status="PASS" starttime="20201030 15:55:53.764" endtime="20201030 15:55:53.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.759" endtime="20201030 15:55:53.767"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:53.770" endtime="20201030 15:55:53.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.769" endtime="20201030 15:55:53.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.768" endtime="20201030 15:55:53.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.407" endtime="20201030 15:55:53.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.406" endtime="20201030 15:55:53.791"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.800" endtime="20201030 15:55:53.821"></status>
</kw>
<msg timestamp="20201030 15:55:53.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.798" endtime="20201030 15:55:53.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.822" endtime="20201030 15:55:53.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.825" endtime="20201030 15:55:53.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.796" endtime="20201030 15:55:53.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.793" endtime="20201030 15:55:53.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.833" endtime="20201030 15:55:54.129"></status>
</kw>
<msg timestamp="20201030 15:55:54.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019559375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019658972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.832" endtime="20201030 15:55:54.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019559375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019658972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.138" endtime="20201030 15:55:54.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.156" endtime="20201030 15:55:54.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.829" endtime="20201030 15:55:54.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.828" endtime="20201030 15:55:54.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:54.169" level="INFO">${RESULT} = [{'diff': 9.959699999999988e-05}, {'diff': 9.980500000000142e-05}, {'diff': 9.988900000000231e-05}, {'diff': 0.00010017999999999833}, {'diff': 0.00010031900000000149}, {'diff': 9.997199999999679e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:54.163" endtime="20201030 15:55:54.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:54.178" level="INFO">${ACCURACY} = {'diff': [9.959699999999988e-05, 9.980500000000142e-05, 9.988900000000231e-05, 0.00010017999999999833, 0.00010031900000000149, 9.997199999999679e-05, 9.993100000000102e-05, 9.965300000000163e-05, 0.00...</msg>
<status status="PASS" starttime="20201030 15:55:54.171" endtime="20201030 15:55:54.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.187" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 15:55:54.185" endtime="20201030 15:55:54.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.192" level="INFO">VALUE: [9.959699999999988e-05, 9.980500000000142e-05, 9.988900000000231e-05, 0.00010017999999999833, 0.00010031900000000149, 9.997199999999679e-05, 9.993100000000102e-05, 9.965300000000163e-05, 0.00010006999999999724, 9.96670000000012e-05, 0.00010026399999999921, 0.00010041699999999848, 9.99869999999993e-05, 9.980499999999795e-05, 0.00010012499999999952, 9.99999999999994e-05, 0.00010009700000000038, 0.00010051399999999946, 9.99999999999994e-05, 0.00010048600000000033, 9.963899999999859e-05, 0.00010011099999999995, 0.00010026399999999921, 9.98609999999997e-05, 9.973699999999905e-05, 0.0001000419999999981, 9.962500000000249e-05, 0.00010022199999999704, 9.967999999999783e-05, 9.961099999999945e-05, 0.00010005600000000114, 9.984700000000013e-05, 9.988900000000231e-05, 0.00010006999999999724, 9.993099999999755e-05, 9.984700000000013e-05, 0.00010027699999999931, 0.00010038899999999934, 0.00010024999999999964, 0.0001000410000000021, 0.00010029099999999888, 0.0001005280000000025, 0.00010040299999999891, 9.988900000000231e-05, 9.983300000000056e-05, 9.98609999999997e-05, 9.966600000000173e-05, 0.00010011099999999995, 9.98609999999997e-05, 9.970799999999697e-05]</msg>
<status status="PASS" starttime="20201030 15:55:54.189" endtime="20201030 15:55:54.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.180" endtime="20201030 15:55:54.198"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:54.202" endtime="20201030 15:55:54.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.200" endtime="20201030 15:55:54.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.199" endtime="20201030 15:55:54.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.792" endtime="20201030 15:55:54.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.791" endtime="20201030 15:55:54.222"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.231" endtime="20201030 15:55:54.252"></status>
</kw>
<msg timestamp="20201030 15:55:54.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.230" endtime="20201030 15:55:54.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.254" endtime="20201030 15:55:54.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.256" endtime="20201030 15:55:54.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.227" endtime="20201030 15:55:54.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.225" endtime="20201030 15:55:54.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.265" endtime="20201030 15:55:54.550"></status>
</kw>
<msg timestamp="20201030 15:55:54.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020329986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020430653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.263" endtime="20201030 15:55:54.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020329986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020430653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.554" endtime="20201030 15:55:54.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.562" endtime="20201030 15:55:54.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.261" endtime="20201030 15:55:54.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.259" endtime="20201030 15:55:54.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:54.569" level="INFO">${RESULT} = [{'diff': 0.00010066699999999873}, {'diff': 0.00010077799999999928}, {'diff': 0.00010116599999999976}, {'diff': 0.00010144500000000209}, {'diff': 0.00010076300000000024}, {'diff': 0.000100611000000000...</msg>
<status status="PASS" starttime="20201030 15:55:54.566" endtime="20201030 15:55:54.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:54.573" level="INFO">${ACCURACY} = {'diff': [0.00010066699999999873, 0.00010077799999999928, 0.00010116599999999976, 0.00010144500000000209, 0.00010076300000000024, 0.00010061100000000045, 0.00010056899999999827, 0.00010131899999999902...</msg>
<status status="PASS" starttime="20201030 15:55:54.570" endtime="20201030 15:55:54.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.577" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 15:55:54.576" endtime="20201030 15:55:54.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.580" level="INFO">VALUE: [0.00010066699999999873, 0.00010077799999999928, 0.00010116599999999976, 0.00010144500000000209, 0.00010076300000000024, 0.00010061100000000045, 0.00010056899999999827, 0.00010131899999999902, 0.00010147199999999829, 0.00010151400000000046, 0.00010147300000000123, 0.00010116699999999923, 0.00010090300000000288, 0.00010133299999999859, 0.00010107000000000171, 0.00010065300000000263, 0.00010079199999999885, 0.0001013610000000012, 0.00010070799999999797, 0.00010090199999999994, 0.00010102799999999953, 0.00010123600000000108, 0.00010125000000000065, 0.00010059700000000088, 0.00010140299999999991, 0.0001008610000000007, 0.00010123600000000108, 0.00010147199999999829, 0.00010079099999999938, 0.0001006800000000023, 0.00010072199999999754, 0.0001013610000000012, 0.0001005419999999986, 0.00010056900000000174, 0.00010069400000000187, 0.00010075000000000014, 0.00010084700000000113, 0.00010093099999999855, 0.00010109700000000138, 0.00010095800000000169, 0.00010079200000000232, 0.00010111099999999748, 0.00010065300000000263, 0.00010088899999999984, 0.00010111099999999748, 0.00010061100000000045, 0.00010070799999999797, 0.00010137500000000077, 0.00010069500000000134, 0.00010107000000000171]</msg>
<status status="PASS" starttime="20201030 15:55:54.578" endtime="20201030 15:55:54.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.574" endtime="20201030 15:55:54.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:54.585" endtime="20201030 15:55:54.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.584" endtime="20201030 15:55:54.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.583" endtime="20201030 15:55:54.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.223" endtime="20201030 15:55:54.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.223" endtime="20201030 15:55:54.606"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.615" endtime="20201030 15:55:54.636"></status>
</kw>
<msg timestamp="20201030 15:55:54.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.613" endtime="20201030 15:55:54.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.638" endtime="20201030 15:55:54.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.640" endtime="20201030 15:55:54.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.610" endtime="20201030 15:55:54.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.608" endtime="20201030 15:55:54.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.649" endtime="20201030 15:55:54.942"></status>
</kw>
<msg timestamp="20201030 15:55:54.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020390514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020492569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.647" endtime="20201030 15:55:54.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020390514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020492569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.952" endtime="20201030 15:55:54.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.969" endtime="20201030 15:55:54.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.645" endtime="20201030 15:55:54.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.643" endtime="20201030 15:55:54.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:54.983" level="INFO">${RESULT} = [{'diff': 0.0001020550000000002}, {'diff': 0.00010237500000000177}, {'diff': 0.00010218000000000033}, {'diff': 0.00010209699999999891}, {'diff': 0.00010162499999999755}, {'diff': 0.0001020140000000009...</msg>
<status status="PASS" starttime="20201030 15:55:54.976" endtime="20201030 15:55:54.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:54.993" level="INFO">${ACCURACY} = {'diff': [0.0001020550000000002, 0.00010237500000000177, 0.00010218000000000033, 0.00010209699999999891, 0.00010162499999999755, 0.00010201400000000097, 0.00010180599999999942, 0.00010180599999999942,...</msg>
<status status="PASS" starttime="20201030 15:55:54.985" endtime="20201030 15:55:54.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.001" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 15:55:55.000" endtime="20201030 15:55:55.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.004" level="INFO">VALUE: [0.0001020550000000002, 0.00010237500000000177, 0.00010218000000000033, 0.00010209699999999891, 0.00010162499999999755, 0.00010201400000000097, 0.00010180599999999942, 0.00010180599999999942, 0.00010211100000000195, 0.00010219499999999937, 0.00010159799999999788, 0.00010186099999999823, 0.00010244400000000015, 0.0001022359999999986, 0.00010183299999999909, 0.00010217999999999686, 0.00010218000000000033, 0.00010237500000000177, 0.00010202800000000053, 0.00010180599999999942, 0.0001022359999999986, 0.00010186099999999823, 0.00010241700000000048, 0.00010234799999999863, 0.00010186200000000117, 0.00010170799999999897, 0.00010190200000000094, 0.00010167999999999983, 0.00010213900000000109, 0.00010161100000000145, 0.00010191699999999998, 0.0001017359999999981, 0.00010205599999999967, 0.00010161099999999798, 0.00010165300000000016, 0.00010244499999999962, 0.00010197299999999826, 0.00010177800000000028, 0.00010229100000000088, 0.00010231900000000002, 0.00010249999999999843, 0.00010212499999999805, 0.00010211099999999848, 0.0001023749999999983, 0.00010219499999999937, 0.00010155599999999917, 0.00010216700000000023, 0.00010240199999999797, 0.00010173699999999758, 0.00010181899999999952]</msg>
<status status="PASS" starttime="20201030 15:55:55.003" endtime="20201030 15:55:55.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.995" endtime="20201030 15:55:55.005"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:55.009" endtime="20201030 15:55:55.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.007" endtime="20201030 15:55:55.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.006" endtime="20201030 15:55:55.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.607" endtime="20201030 15:55:55.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.606" endtime="20201030 15:55:55.030"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.038" endtime="20201030 15:55:55.059"></status>
</kw>
<msg timestamp="20201030 15:55:55.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.037" endtime="20201030 15:55:55.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.060" endtime="20201030 15:55:55.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.063" endtime="20201030 15:55:55.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.034" endtime="20201030 15:55:55.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.032" endtime="20201030 15:55:55.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.072" endtime="20201030 15:55:55.357"></status>
</kw>
<msg timestamp="20201030 15:55:55.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019482931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019586167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.070" endtime="20201030 15:55:55.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019482931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019586167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.362" endtime="20201030 15:55:55.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.370" endtime="20201030 15:55:55.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.068" endtime="20201030 15:55:55.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.066" endtime="20201030 15:55:55.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:55.376" level="INFO">${RESULT} = [{'diff': 0.00010323600000000308}, {'diff': 0.00010266700000000073}, {'diff': 0.00010265199999999822}, {'diff': 0.00010333300000000059}, {'diff': 0.00010343000000000158}, {'diff': 0.000103110999999999...</msg>
<status status="PASS" starttime="20201030 15:55:55.373" endtime="20201030 15:55:55.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:55.380" level="INFO">${ACCURACY} = {'diff': [0.00010323600000000308, 0.00010266700000000073, 0.00010265199999999822, 0.00010333300000000059, 0.00010343000000000158, 0.00010311099999999948, 0.00010281900000000052, 0.00010270799999999997...</msg>
<status status="PASS" starttime="20201030 15:55:55.377" endtime="20201030 15:55:55.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.384" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 15:55:55.383" endtime="20201030 15:55:55.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.387" level="INFO">VALUE: [0.00010323600000000308, 0.00010266700000000073, 0.00010265199999999822, 0.00010333300000000059, 0.00010343000000000158, 0.00010311099999999948, 0.00010281900000000052, 0.00010270799999999997, 0.0001030550000000012, 0.00010298599999999936, 0.00010288900000000184, 0.00010276399999999825, 0.00010348599999999986, 0.000103513999999999, 0.00010255600000000017, 0.00010266699999999726, 0.00010316699999999776, 0.00010268000000000083, 0.00010268000000000083, 0.00010276399999999825, 0.00010276399999999825, 0.0001033200000000005, 0.00010336099999999973, 0.00010351400000000247, 0.00010293100000000055, 0.00010327800000000179, 0.00010309699999999991, 0.000103207999999997, 0.00010312499999999905, 0.00010345800000000072, 0.00010274999999999868, 0.00010294399999999718, 0.00010341700000000148, 0.00010326399999999875, 0.00010344500000000062, 0.0001028749999999988, 0.00010277800000000128, 0.00010276400000000172, 0.00010325000000000265, 0.00010272300000000248, 0.00010277799999999782, 0.00010284700000000313, 0.00010254100000000113, 0.0001025550000000007, 0.00010256900000000027, 0.00010341699999999801, 0.00010298599999999936, 0.00010341699999999801, 0.0001030420000000011, 0.00010334799999999963]</msg>
<status status="PASS" starttime="20201030 15:55:55.385" endtime="20201030 15:55:55.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.381" endtime="20201030 15:55:55.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:55.392" endtime="20201030 15:55:55.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.390" endtime="20201030 15:55:55.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.389" endtime="20201030 15:55:55.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.030" endtime="20201030 15:55:55.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.030" endtime="20201030 15:55:55.412"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.421" endtime="20201030 15:55:55.441"></status>
</kw>
<msg timestamp="20201030 15:55:55.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.419" endtime="20201030 15:55:55.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.442" endtime="20201030 15:55:55.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.444" endtime="20201030 15:55:55.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.417" endtime="20201030 15:55:55.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.415" endtime="20201030 15:55:55.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.453" endtime="20201030 15:55:55.738"></status>
</kw>
<msg timestamp="20201030 15:55:55.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020373458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020477056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.452" endtime="20201030 15:55:55.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020373458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020477056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.742" endtime="20201030 15:55:55.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.750" endtime="20201030 15:55:55.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.449" endtime="20201030 15:55:55.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.448" endtime="20201030 15:55:55.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:55.756" level="INFO">${RESULT} = [{'diff': 0.00010359799999999988}, {'diff': 0.00010398600000000036}, {'diff': 0.00010365300000000216}, {'diff': 0.00010388899999999937}, {'diff': 0.00010411100000000048}, {'diff': 0.000104443999999998...</msg>
<status status="PASS" starttime="20201030 15:55:55.753" endtime="20201030 15:55:55.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:55.760" level="INFO">${ACCURACY} = {'diff': [0.00010359799999999988, 0.00010398600000000036, 0.00010365300000000216, 0.00010388899999999937, 0.00010411100000000048, 0.00010444399999999868, 0.0001040550000000022, 0.0001042360000000006, ...</msg>
<status status="PASS" starttime="20201030 15:55:55.757" endtime="20201030 15:55:55.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.765" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 15:55:55.764" endtime="20201030 15:55:55.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.767" level="INFO">VALUE: [0.00010359799999999988, 0.00010398600000000036, 0.00010365300000000216, 0.00010388899999999937, 0.00010411100000000048, 0.00010444399999999868, 0.0001040550000000022, 0.0001042360000000006, 0.00010399999999999993, 0.0001043750000000003, 0.000103820000000001, 0.00010380599999999796, 0.00010370900000000044, 0.00010402799999999907, 0.0001037360000000001, 0.00010377699999999934, 0.00010374999999999968, 0.00010354100000000213, 0.00010426399999999975, 0.0001040139999999995, 0.00010416699999999876, 0.00010447199999999782, 0.00010362499999999955, 0.00010397200000000079, 0.00010422200000000104, 0.00010441699999999901, 0.000104514, 0.00010363899999999912, 0.00010367999999999836, 0.00010412500000000005, 0.00010436099999999726, 0.00010361099999999998, 0.00010379200000000185, 0.00010370900000000044, 0.00010438899999999987, 0.0001040559999999982, 0.00010354199999999814, 0.00010436199999999674, 0.0001038749999999998, 0.00010372199999999707, 0.0001043750000000003, 0.00010379199999999839, 0.00010441599999999954, 0.00010366700000000173, 0.00010404199999999864, 0.000103820000000001, 0.00010380499999999848, 0.0001038749999999998, 0.00010376399999999925, 0.00010443099999999858]</msg>
<status status="PASS" starttime="20201030 15:55:55.766" endtime="20201030 15:55:55.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.761" endtime="20201030 15:55:55.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:55.773" endtime="20201030 15:55:55.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.771" endtime="20201030 15:55:55.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.770" endtime="20201030 15:55:55.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.413" endtime="20201030 15:55:55.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.413" endtime="20201030 15:55:55.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.101" endtime="20201030 15:55:55.794"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:17.017" endtime="20201030 15:55:55.795" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:55.802" endtime="20201030 15:55:55.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.800" endtime="20201030 15:55:55.822"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.834" endtime="20201030 15:55:55.851"></status>
</kw>
<msg timestamp="20201030 15:55:55.851" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.833" endtime="20201030 15:55:55.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.854" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.852" endtime="20201030 15:55:55.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.857" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:55.855" endtime="20201030 15:55:55.857"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:55.830" endtime="20201030 15:55:55.858"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:55.828" endtime="20201030 15:55:55.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.827" endtime="20201030 15:55:55.859"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:55.862" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:55.862" endtime="20201030 15:55:55.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.859" endtime="20201030 15:55:55.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.826" endtime="20201030 15:55:55.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.825" endtime="20201030 15:55:55.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.864" endtime="20201030 15:55:55.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.824" endtime="20201030 15:55:55.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.822" endtime="20201030 15:55:55.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.799" endtime="20201030 15:55:55.867"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.877" endtime="20201030 15:55:55.895"></status>
</kw>
<msg timestamp="20201030 15:55:55.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.876" endtime="20201030 15:55:55.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.896" endtime="20201030 15:55:55.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.899" endtime="20201030 15:55:55.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.872" endtime="20201030 15:55:55.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.870" endtime="20201030 15:55:55.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.908" endtime="20201030 15:55:56.194"></status>
</kw>
<msg timestamp="20201030 15:55:56.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065927972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065958486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.907" endtime="20201030 15:55:56.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065927972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065958486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.199" endtime="20201030 15:55:56.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.207" endtime="20201030 15:55:56.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.904" endtime="20201030 15:55:56.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.902" endtime="20201030 15:55:56.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:56.213" level="INFO">${RESULT} = [{'diff': 3.0513999999995378e-05}, {'diff': 3.042999999999796e-05}, {'diff': 3.0472000000003607e-05}, {'diff': 3.0430999999997432e-05}, {'diff': 3.0444000000004467e-05}, {'diff': 3.044500000000394e-05...</msg>
<status status="PASS" starttime="20201030 15:55:56.210" endtime="20201030 15:55:56.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:56.217" level="INFO">${ACCURACY} = {'diff': [3.0513999999995378e-05, 3.042999999999796e-05, 3.0472000000003607e-05, 3.0430999999997432e-05, 3.0444000000004467e-05, 3.044500000000394e-05, 3.040300000001217e-05, 3.0444000000004467e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:55:56.214" endtime="20201030 15:55:56.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.223" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 15:55:56.222" endtime="20201030 15:55:56.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.225" level="INFO">VALUE: [3.0513999999995378e-05, 3.042999999999796e-05, 3.0472000000003607e-05, 3.0430999999997432e-05, 3.0444000000004467e-05, 3.044500000000394e-05, 3.040300000001217e-05, 3.0444000000004467e-05, 3.0430999999997432e-05, 3.042999999999796e-05, 3.0402999999998293e-05, 3.04170000000048e-05, 3.0444000000004467e-05, 3.048599999999624e-05, 3.04170000000048e-05, 3.0430999999997432e-05, 3.0500000000002747e-05, 3.042999999999796e-05, 3.044500000000394e-05, 3.0374999999999153e-05, 3.0430999999997432e-05, 3.042999999999796e-05, 3.042999999999796e-05, 3.040199999999882e-05, 3.042999999999796e-05, 3.0444000000004467e-05, 3.0402999999998293e-05, 3.0374999999999153e-05, 3.042999999999796e-05, 3.040300000001217e-05, 3.041599999999145e-05, 3.044399999999059e-05, 3.0444000000004467e-05, 3.0430999999997432e-05, 3.042999999999796e-05, 3.043100000001131e-05, 3.044500000000394e-05, 3.0430999999997432e-05, 3.040199999999882e-05, 3.0416999999990924e-05, 3.0472000000003607e-05, 3.0444000000004467e-05, 3.044399999999059e-05, 3.04170000000048e-05, 3.042999999999796e-05, 3.0430999999997432e-05, 3.0444000000004467e-05, 3.043100000001131e-05, 3.044399999999059e-05, 3.0430999999997432e-05]</msg>
<status status="PASS" starttime="20201030 15:55:56.224" endtime="20201030 15:55:56.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.218" endtime="20201030 15:55:56.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:56.230" endtime="20201030 15:55:56.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.228" endtime="20201030 15:55:56.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.227" endtime="20201030 15:55:56.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.868" endtime="20201030 15:55:56.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.868" endtime="20201030 15:55:56.250"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.259" endtime="20201030 15:55:56.278"></status>
</kw>
<msg timestamp="20201030 15:55:56.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.257" endtime="20201030 15:55:56.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.279" endtime="20201030 15:55:56.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.282" endtime="20201030 15:55:56.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.255" endtime="20201030 15:55:56.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.253" endtime="20201030 15:55:56.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.290" endtime="20201030 15:55:56.576"></status>
</kw>
<msg timestamp="20201030 15:55:56.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020042139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020072639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.289" endtime="20201030 15:55:56.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020042139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020072639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.580" endtime="20201030 15:55:56.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.589" endtime="20201030 15:55:56.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.286" endtime="20201030 15:55:56.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.285" endtime="20201030 15:55:56.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:56.595" level="INFO">${RESULT} = [{'diff': 3.0499999999999278e-05}, {'diff': 3.0444000000000998e-05}, {'diff': 3.0375000000002622e-05}, {'diff': 3.0417000000001332e-05}, {'diff': 3.0417000000001332e-05}, {'diff': 3.0417000000001332e-...</msg>
<status status="PASS" starttime="20201030 15:55:56.592" endtime="20201030 15:55:56.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:56.600" level="INFO">${ACCURACY} = {'diff': [3.0499999999999278e-05, 3.0444000000000998e-05, 3.0375000000002622e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0389000000002192e-05, 3.0430000000001428e-05...</msg>
<status status="PASS" starttime="20201030 15:55:56.596" endtime="20201030 15:55:56.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.605" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 15:55:56.604" endtime="20201030 15:55:56.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.607" level="INFO">VALUE: [3.0499999999999278e-05, 3.0444000000000998e-05, 3.0375000000002622e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0389000000002192e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0416999999997862e-05, 3.044500000000047e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0444999999997002e-05, 3.0360999999999583e-05, 3.044500000000047e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.041599999999839e-05, 3.0485999999999708e-05, 3.0444000000000998e-05, 3.0416999999997862e-05, 3.0458000000000568e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.0417000000001332e-05, 3.0374999999999153e-05, 3.0403000000001762e-05, 3.0431000000000902e-05, 3.0416000000001858e-05, 3.042999999999796e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0485999999999708e-05, 3.0417000000001332e-05, 3.0374999999999153e-05, 3.0403000000001762e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.044500000000047e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0499999999999278e-05, 3.0403000000001762e-05]</msg>
<status status="PASS" starttime="20201030 15:55:56.606" endtime="20201030 15:55:56.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.601" endtime="20201030 15:55:56.608"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:56.612" endtime="20201030 15:55:56.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.610" endtime="20201030 15:55:56.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.609" endtime="20201030 15:55:56.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.251" endtime="20201030 15:55:56.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.251" endtime="20201030 15:55:56.632"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.641" endtime="20201030 15:55:56.659"></status>
</kw>
<msg timestamp="20201030 15:55:56.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.640" endtime="20201030 15:55:56.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.661" endtime="20201030 15:55:56.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.663" endtime="20201030 15:55:56.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.637" endtime="20201030 15:55:56.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.635" endtime="20201030 15:55:56.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.672" endtime="20201030 15:55:56.963"></status>
</kw>
<msg timestamp="20201030 15:55:56.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020069403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020099889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.670" endtime="20201030 15:55:56.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020069403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020099889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.967" endtime="20201030 15:55:56.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.976" endtime="20201030 15:55:56.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.668" endtime="20201030 15:55:56.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.666" endtime="20201030 15:55:56.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:56.983" level="INFO">${RESULT} = [{'diff': 3.0485999999999708e-05}, {'diff': 3.0430999999997432e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0417000000001332e-05}, {'diff': 3.0417000000001332e-05}, {'diff': 3.0431000000000902e-...</msg>
<status status="PASS" starttime="20201030 15:55:56.980" endtime="20201030 15:55:56.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:56.987" level="INFO">${ACCURACY} = {'diff': [3.0485999999999708e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.040199999999882e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:56.984" endtime="20201030 15:55:56.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.991" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 15:55:56.990" endtime="20201030 15:55:56.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.994" level="INFO">VALUE: [3.0485999999999708e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.040199999999882e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0444000000000998e-05, 3.042999999999796e-05, 3.0388999999998723e-05, 3.044500000000047e-05, 3.0431000000000902e-05, 3.0485999999999708e-05, 3.0417000000001332e-05, 3.0416000000001858e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0416000000001858e-05, 3.04579999999971e-05, 3.0416000000001858e-05, 3.0431000000000902e-05, 3.0402999999998293e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.044399999999753e-05, 3.0430000000001428e-05, 3.0389000000002192e-05, 3.0513999999998848e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0388999999998723e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.044500000000047e-05, 3.0417000000001332e-05, 3.044500000000047e-05, 3.0430000000001428e-05, 3.0444000000000998e-05, 3.0458000000000568e-05, 3.0444000000000998e-05, 3.048699999999918e-05]</msg>
<status status="PASS" starttime="20201030 15:55:56.992" endtime="20201030 15:55:56.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.988" endtime="20201030 15:55:56.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:57.003" endtime="20201030 15:55:57.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.001" endtime="20201030 15:55:57.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.998" endtime="20201030 15:55:57.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.633" endtime="20201030 15:55:57.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.633" endtime="20201030 15:55:57.027"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.044" endtime="20201030 15:55:57.064"></status>
</kw>
<msg timestamp="20201030 15:55:57.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.040" endtime="20201030 15:55:57.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.066" endtime="20201030 15:55:57.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.069" endtime="20201030 15:55:57.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.036" endtime="20201030 15:55:57.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.032" endtime="20201030 15:55:57.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.080" endtime="20201030 15:55:57.366"></status>
</kw>
<msg timestamp="20201030 15:55:57.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031239167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031269694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.078" endtime="20201030 15:55:57.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031239167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031269694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.371" endtime="20201030 15:55:57.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.379" endtime="20201030 15:55:57.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.075" endtime="20201030 15:55:57.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.073" endtime="20201030 15:55:57.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:57.385" level="INFO">${RESULT} = [{'diff': 3.0526999999998944e-05}, {'diff': 3.0430999999997432e-05}, {'diff': 3.0416999999997862e-05}, {'diff': 3.042999999999796e-05}, {'diff': 3.038900000000566e-05}, {'diff': 3.0416999999997862e-05...</msg>
<status status="PASS" starttime="20201030 15:55:57.382" endtime="20201030 15:55:57.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:57.389" level="INFO">${ACCURACY} = {'diff': [3.0526999999998944e-05, 3.0430999999997432e-05, 3.0416999999997862e-05, 3.042999999999796e-05, 3.038900000000566e-05, 3.0416999999997862e-05, 3.0430999999997432e-05, 3.0374999999999153e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:57.386" endtime="20201030 15:55:57.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.394" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 15:55:57.393" endtime="20201030 15:55:57.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.396" level="INFO">VALUE: [3.0526999999998944e-05, 3.0430999999997432e-05, 3.0416999999997862e-05, 3.042999999999796e-05, 3.038900000000566e-05, 3.0416999999997862e-05, 3.0430999999997432e-05, 3.0374999999999153e-05, 3.042999999999796e-05, 3.0430999999997432e-05, 3.0430999999997432e-05, 3.0430999999997432e-05, 3.04170000000048e-05, 3.044399999999753e-05, 3.042999999999796e-05, 3.0500000000002747e-05, 3.044500000000394e-05, 3.042999999999796e-05, 3.042999999999796e-05, 3.043100000000437e-05, 3.043100000000437e-05, 3.042999999999796e-05, 3.0360999999999583e-05, 3.043100000000437e-05, 3.0416999999997862e-05, 3.0416999999997862e-05, 3.042999999999796e-05, 3.0416999999997862e-05, 3.0416000000005328e-05, 3.0430000000004898e-05, 3.042999999999796e-05, 3.040199999999882e-05, 3.0444999999997002e-05, 3.0416999999997862e-05, 3.0416999999997862e-05, 3.042999999999796e-05, 3.041599999999839e-05, 3.042999999999796e-05, 3.042999999999796e-05, 3.0416999999997862e-05, 3.0430999999997432e-05, 3.040300000000523e-05, 3.042999999999796e-05, 3.0430999999997432e-05, 3.0444000000004467e-05, 3.042999999999796e-05, 3.044399999999753e-05, 3.0416999999997862e-05, 3.041599999999839e-05, 3.042999999999796e-05]</msg>
<status status="PASS" starttime="20201030 15:55:57.395" endtime="20201030 15:55:57.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.390" endtime="20201030 15:55:57.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:57.404" endtime="20201030 15:55:57.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.403" endtime="20201030 15:55:57.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.401" endtime="20201030 15:55:57.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.029" endtime="20201030 15:55:57.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.028" endtime="20201030 15:55:57.425"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.433" endtime="20201030 15:55:57.449"></status>
</kw>
<msg timestamp="20201030 15:55:57.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.432" endtime="20201030 15:55:57.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.450" endtime="20201030 15:55:57.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.453" endtime="20201030 15:55:57.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.429" endtime="20201030 15:55:57.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.427" endtime="20201030 15:55:57.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.462" endtime="20201030 15:55:57.749"></status>
</kw>
<msg timestamp="20201030 15:55:57.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019510958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019541486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.460" endtime="20201030 15:55:57.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019510958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019541486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.753" endtime="20201030 15:55:57.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.761" endtime="20201030 15:55:57.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.457" endtime="20201030 15:55:57.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.456" endtime="20201030 15:55:57.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:57.768" level="INFO">${RESULT} = [{'diff': 3.052800000000189e-05}, {'diff': 3.0389000000002192e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.042999999999796e-05}, {'diff': 3.0417000000001332e-05}, {'diff': 3.0458000000000568e-05...</msg>
<status status="PASS" starttime="20201030 15:55:57.765" endtime="20201030 15:55:57.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:57.773" level="INFO">${ACCURACY} = {'diff': [3.052800000000189e-05, 3.0389000000002192e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0417000000001332e-05, 3.0458000000000568e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:57.769" endtime="20201030 15:55:57.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.777" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 15:55:57.776" endtime="20201030 15:55:57.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.780" level="INFO">VALUE: [3.052800000000189e-05, 3.0389000000002192e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0417000000001332e-05, 3.0458000000000568e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.044500000000047e-05, 3.0416999999997862e-05, 3.047299999999961e-05, 3.048699999999918e-05, 3.044399999999753e-05, 3.0472000000000138e-05, 3.042999999999796e-05, 3.0430000000001428e-05, 3.0444999999997002e-05, 3.0389000000002192e-05, 3.044500000000047e-05, 3.0430000000001428e-05, 3.0403000000001762e-05, 3.0430000000001428e-05, 3.0416000000001858e-05, 3.0430999999997432e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0402999999998293e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0347000000000013e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0402999999998293e-05, 3.0430999999997432e-05, 3.0472000000000138e-05, 3.044500000000047e-05, 3.0417000000001332e-05, 3.0458000000000568e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0444000000000998e-05, 3.0416000000001858e-05, 3.0430000000001428e-05, 3.040199999999882e-05, 3.0347999999999486e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.044500000000047e-05]</msg>
<status status="PASS" starttime="20201030 15:55:57.778" endtime="20201030 15:55:57.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.774" endtime="20201030 15:55:57.781"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:57.785" endtime="20201030 15:55:57.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.783" endtime="20201030 15:55:57.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.782" endtime="20201030 15:55:57.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.426" endtime="20201030 15:55:57.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.425" endtime="20201030 15:55:57.805"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.814" endtime="20201030 15:55:57.831"></status>
</kw>
<msg timestamp="20201030 15:55:57.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.812" endtime="20201030 15:55:57.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.833" endtime="20201030 15:55:57.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.835" endtime="20201030 15:55:57.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.810" endtime="20201030 15:55:57.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.808" endtime="20201030 15:55:57.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.844" endtime="20201030 15:55:58.132"></status>
</kw>
<msg timestamp="20201030 15:55:58.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019475236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01950575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:57.843" endtime="20201030 15:55:58.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019475236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01950575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:58.136" endtime="20201030 15:55:58.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.145" endtime="20201030 15:55:58.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.840" endtime="20201030 15:55:58.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.838" endtime="20201030 15:55:58.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:58.151" level="INFO">${RESULT} = [{'diff': 3.0513999999998848e-05}, {'diff': 3.0416999999997862e-05}, {'diff': 3.0347000000000013e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.044500000000047e-05}, {'diff': 3.0388999999998723e-0...</msg>
<status status="PASS" starttime="20201030 15:55:58.148" endtime="20201030 15:55:58.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:58.155" level="INFO">${ACCURACY} = {'diff': [3.0513999999998848e-05, 3.0416999999997862e-05, 3.0347000000000013e-05, 3.0431000000000902e-05, 3.044500000000047e-05, 3.0388999999998723e-05, 3.0444000000000998e-05, 3.0416999999997862e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:58.152" endtime="20201030 15:55:58.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.160" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 15:55:58.159" endtime="20201030 15:55:58.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.162" level="INFO">VALUE: [3.0513999999998848e-05, 3.0416999999997862e-05, 3.0347000000000013e-05, 3.0431000000000902e-05, 3.044500000000047e-05, 3.0388999999998723e-05, 3.0444000000000998e-05, 3.0416999999997862e-05, 3.0472000000000138e-05, 3.044500000000047e-05, 3.0458000000000568e-05, 3.0458000000000568e-05, 3.0416000000001858e-05, 3.045900000000004e-05, 3.0417000000001332e-05, 3.0444000000000998e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0444999999997002e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0361000000003052e-05, 3.0374999999999153e-05, 3.0417000000001332e-05, 3.044500000000047e-05, 3.044500000000047e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0416999999997862e-05, 3.0444000000000998e-05, 3.041599999999839e-05, 3.0431000000000902e-05, 3.0444000000000998e-05, 3.0347000000000013e-05, 3.0431000000000902e-05, 3.0360999999999583e-05, 3.0403000000001762e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0416000000001858e-05, 3.0389000000002192e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0430000000001428e-05]</msg>
<status status="PASS" starttime="20201030 15:55:58.161" endtime="20201030 15:55:58.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.156" endtime="20201030 15:55:58.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:58.167" endtime="20201030 15:55:58.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.165" endtime="20201030 15:55:58.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.164" endtime="20201030 15:55:58.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.806" endtime="20201030 15:55:58.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.806" endtime="20201030 15:55:58.188"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.196" endtime="20201030 15:55:58.215"></status>
</kw>
<msg timestamp="20201030 15:55:58.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.195" endtime="20201030 15:55:58.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.217" endtime="20201030 15:55:58.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.219" endtime="20201030 15:55:58.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.192" endtime="20201030 15:55:58.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.190" endtime="20201030 15:55:58.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.228" endtime="20201030 15:55:58.514"></status>
</kw>
<msg timestamp="20201030 15:55:58.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020529764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020560278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.226" endtime="20201030 15:55:58.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020529764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020560278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.518" endtime="20201030 15:55:58.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.527" endtime="20201030 15:55:58.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.224" endtime="20201030 15:55:58.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.222" endtime="20201030 15:55:58.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:58.533" level="INFO">${RESULT} = [{'diff': 3.0514000000002317e-05}, {'diff': 3.0430999999997432e-05}, {'diff': 3.0416999999997862e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.044399999999753e-05}, {'diff': 3.0417000000001332e-0...</msg>
<status status="PASS" starttime="20201030 15:55:58.530" endtime="20201030 15:55:58.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:58.537" level="INFO">${ACCURACY} = {'diff': [3.0514000000002317e-05, 3.0430999999997432e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.044399999999753e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0444000000000998e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:58.534" endtime="20201030 15:55:58.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.542" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 15:55:58.541" endtime="20201030 15:55:58.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.544" level="INFO">VALUE: [3.0514000000002317e-05, 3.0430999999997432e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.044399999999753e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0444000000000998e-05, 3.0403000000001762e-05, 3.0458000000000568e-05, 3.0431000000000902e-05, 3.0430999999997432e-05, 3.041599999999839e-05, 3.0430000000001428e-05, 3.0374999999999153e-05, 3.0444000000000998e-05, 3.0389000000002192e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.044500000000047e-05, 3.042999999999796e-05, 3.0389000000002192e-05, 3.042999999999796e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0416000000001858e-05, 3.0430999999997432e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.044399999999753e-05, 3.0431000000000902e-05, 3.044500000000047e-05, 3.0416000000001858e-05, 3.040199999999882e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.0388999999998723e-05, 3.0416999999997862e-05, 3.0499999999999278e-05, 3.04579999999971e-05, 3.0430000000001428e-05, 3.0360999999999583e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0430000000001428e-05, 3.041599999999839e-05, 3.0403000000001762e-05, 3.0403000000001762e-05, 3.0403000000001762e-05]</msg>
<status status="PASS" starttime="20201030 15:55:58.543" endtime="20201030 15:55:58.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.538" endtime="20201030 15:55:58.546"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:58.550" endtime="20201030 15:55:58.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.549" endtime="20201030 15:55:58.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.547" endtime="20201030 15:55:58.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.188" endtime="20201030 15:55:58.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.188" endtime="20201030 15:55:58.571"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.579" endtime="20201030 15:55:58.597"></status>
</kw>
<msg timestamp="20201030 15:55:58.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.578" endtime="20201030 15:55:58.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.598" endtime="20201030 15:55:58.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.601" endtime="20201030 15:55:58.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.575" endtime="20201030 15:55:58.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.573" endtime="20201030 15:55:58.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.610" endtime="20201030 15:55:58.895"></status>
</kw>
<msg timestamp="20201030 15:55:58.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019484278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019514792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.608" endtime="20201030 15:55:58.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019484278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019514792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.899" endtime="20201030 15:55:58.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.907" endtime="20201030 15:55:58.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.605" endtime="20201030 15:55:58.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.604" endtime="20201030 15:55:58.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:58.914" level="INFO">${RESULT} = [{'diff': 3.0513999999998848e-05}, {'diff': 3.044500000000047e-05}, {'diff': 3.041599999999839e-05}, {'diff': 3.045900000000004e-05}, {'diff': 3.0360999999999583e-05}, {'diff': 3.0431000000000902e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:58.911" endtime="20201030 15:55:58.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:58.919" level="INFO">${ACCURACY} = {'diff': [3.0513999999998848e-05, 3.044500000000047e-05, 3.041599999999839e-05, 3.045900000000004e-05, 3.0360999999999583e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0402999999998293e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:55:58.915" endtime="20201030 15:55:58.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.923" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 15:55:58.922" endtime="20201030 15:55:58.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.926" level="INFO">VALUE: [3.0513999999998848e-05, 3.044500000000047e-05, 3.041599999999839e-05, 3.045900000000004e-05, 3.0360999999999583e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0402999999998293e-05, 3.0431000000000902e-05, 3.0402999999998293e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0444000000000998e-05, 3.048699999999918e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0416000000001858e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0430999999997432e-05, 3.0417000000001332e-05, 3.0416999999997862e-05, 3.0472000000000138e-05, 3.044500000000047e-05, 3.042999999999796e-05, 3.0417000000001332e-05, 3.044399999999753e-05, 3.042999999999796e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.044500000000047e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.0403000000001762e-05, 3.0444999999997002e-05, 3.0374999999999153e-05, 3.0499999999999278e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0416000000001858e-05, 3.0416999999997862e-05, 3.0444000000000998e-05, 3.0430999999997432e-05, 3.042999999999796e-05, 3.0430000000001428e-05]</msg>
<status status="PASS" starttime="20201030 15:55:58.924" endtime="20201030 15:55:58.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.920" endtime="20201030 15:55:58.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:58.931" endtime="20201030 15:55:58.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.929" endtime="20201030 15:55:58.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.928" endtime="20201030 15:55:58.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.572" endtime="20201030 15:55:58.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.571" endtime="20201030 15:55:58.951"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.960" endtime="20201030 15:55:58.978"></status>
</kw>
<msg timestamp="20201030 15:55:58.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.958" endtime="20201030 15:55:58.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.980" endtime="20201030 15:55:58.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.982" endtime="20201030 15:55:58.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.956" endtime="20201030 15:55:58.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.954" endtime="20201030 15:55:58.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.992" endtime="20201030 15:55:59.279"></status>
</kw>
<msg timestamp="20201030 15:55:59.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019525597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019556083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.990" endtime="20201030 15:55:59.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019525597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019556083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:59.283" endtime="20201030 15:55:59.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.291" endtime="20201030 15:55:59.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.987" endtime="20201030 15:55:59.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.985" endtime="20201030 15:55:59.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:59.298" level="INFO">${RESULT} = [{'diff': 3.0485999999999708e-05}, {'diff': 3.0347999999999486e-05}, {'diff': 3.0444000000000998e-05}, {'diff': 3.041599999999839e-05}, {'diff': 3.0500000000002747e-05}, {'diff': 3.0417000000001332e-0...</msg>
<status status="PASS" starttime="20201030 15:55:59.295" endtime="20201030 15:55:59.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:59.302" level="INFO">${ACCURACY} = {'diff': [3.0485999999999708e-05, 3.0347999999999486e-05, 3.0444000000000998e-05, 3.041599999999839e-05, 3.0500000000002747e-05, 3.0417000000001332e-05, 3.0485999999999708e-05, 3.0430000000001428e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:59.299" endtime="20201030 15:55:59.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.306" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 15:55:59.305" endtime="20201030 15:55:59.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.309" level="INFO">VALUE: [3.0485999999999708e-05, 3.0347999999999486e-05, 3.0444000000000998e-05, 3.041599999999839e-05, 3.0500000000002747e-05, 3.0417000000001332e-05, 3.0485999999999708e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0416999999997862e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.04579999999971e-05, 3.0431000000000902e-05, 3.0360999999999583e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0444000000000998e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.0513999999998848e-05, 3.0403000000001762e-05, 3.044399999999753e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.044500000000047e-05, 3.040199999999882e-05, 3.0444000000000998e-05, 3.0444000000000998e-05, 3.0333999999999917e-05, 3.0430999999997432e-05, 3.0444999999997002e-05, 3.0375000000002622e-05, 3.0444000000000998e-05, 3.0499999999999278e-05, 3.0430999999997432e-05, 3.0444999999997002e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.045900000000004e-05, 3.0416999999997862e-05, 3.044500000000047e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.044399999999753e-05, 3.0388999999998723e-05, 3.0430999999997432e-05]</msg>
<status status="PASS" starttime="20201030 15:55:59.307" endtime="20201030 15:55:59.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.303" endtime="20201030 15:55:59.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:59.318" endtime="20201030 15:55:59.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.317" endtime="20201030 15:55:59.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.315" endtime="20201030 15:55:59.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.952" endtime="20201030 15:55:59.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.952" endtime="20201030 15:55:59.339"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.347" endtime="20201030 15:55:59.366"></status>
</kw>
<msg timestamp="20201030 15:55:59.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.346" endtime="20201030 15:55:59.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.367" endtime="20201030 15:55:59.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.370" endtime="20201030 15:55:59.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.343" endtime="20201030 15:55:59.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.341" endtime="20201030 15:55:59.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.379" endtime="20201030 15:55:59.664"></status>
</kw>
<msg timestamp="20201030 15:55:59.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020563681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020594194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:59.377" endtime="20201030 15:55:59.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020563681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020594194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:59.668" endtime="20201030 15:55:59.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.677" endtime="20201030 15:55:59.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.375" endtime="20201030 15:55:59.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.373" endtime="20201030 15:55:59.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:59.684" level="INFO">${RESULT} = [{'diff': 3.0512999999999374e-05}, {'diff': 3.0417000000001332e-05}, {'diff': 3.0417000000001332e-05}, {'diff': 3.0430000000001428e-05}, {'diff': 3.044500000000047e-05}, {'diff': 3.0430000000001428e-0...</msg>
<status status="PASS" starttime="20201030 15:55:59.680" endtime="20201030 15:55:59.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:59.688" level="INFO">${ACCURACY} = {'diff': [3.0512999999999374e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.044500000000047e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.0417000000001332e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:59.684" endtime="20201030 15:55:59.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.694" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 15:55:59.692" endtime="20201030 15:55:59.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.697" level="INFO">VALUE: [3.0512999999999374e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.044500000000047e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0403000000001762e-05, 3.0374999999999153e-05, 3.0444000000000998e-05, 3.0416999999997862e-05, 3.0388999999998723e-05, 3.041599999999839e-05, 3.042999999999796e-05, 3.044500000000047e-05, 3.0417000000001332e-05, 3.0458000000000568e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0402999999998293e-05, 3.0430000000001428e-05, 3.041599999999839e-05, 3.0416999999997862e-05, 3.0444000000000998e-05, 3.0417000000001332e-05, 3.042999999999796e-05, 3.0402999999998293e-05, 3.0444000000000998e-05, 3.0430000000001428e-05, 3.0416999999997862e-05, 3.0416999999997862e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.0472000000000138e-05, 3.045900000000004e-05, 3.0444000000000998e-05, 3.0362000000002526e-05, 3.0444000000000998e-05, 3.0416999999997862e-05, 3.0430000000001428e-05, 3.041599999999839e-05, 3.044500000000047e-05, 3.044500000000047e-05, 3.0416999999997862e-05]</msg>
<status status="PASS" starttime="20201030 15:55:59.695" endtime="20201030 15:55:59.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.689" endtime="20201030 15:55:59.699"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:59.704" endtime="20201030 15:55:59.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.702" endtime="20201030 15:55:59.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.700" endtime="20201030 15:55:59.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.340" endtime="20201030 15:55:59.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.339" endtime="20201030 15:55:59.725"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.734" endtime="20201030 15:55:59.752"></status>
</kw>
<msg timestamp="20201030 15:55:59.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.732" endtime="20201030 15:55:59.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.753" endtime="20201030 15:55:59.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.757" endtime="20201030 15:55:59.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.729" endtime="20201030 15:55:59.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.727" endtime="20201030 15:55:59.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.766" endtime="20201030 15:56:00.057"></status>
</kw>
<msg timestamp="20201030 15:56:00.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019673069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019703569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:59.765" endtime="20201030 15:56:00.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019673069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019703569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.061" endtime="20201030 15:56:00.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.070" endtime="20201030 15:56:00.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.762" endtime="20201030 15:56:00.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.760" endtime="20201030 15:56:00.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:00.076" level="INFO">${RESULT} = [{'diff': 3.0499999999999278e-05}, {'diff': 3.044399999999753e-05}, {'diff': 3.0430999999997432e-05}, {'diff': 3.0417000000001332e-05}, {'diff': 3.0444000000000998e-05}, {'diff': 3.0430000000001428e-0...</msg>
<status status="PASS" starttime="20201030 15:56:00.073" endtime="20201030 15:56:00.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:00.081" level="INFO">${ACCURACY} = {'diff': [3.0499999999999278e-05, 3.044399999999753e-05, 3.0430999999997432e-05, 3.0417000000001332e-05, 3.0444000000000998e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0472000000000138e-05,...</msg>
<status status="PASS" starttime="20201030 15:56:00.077" endtime="20201030 15:56:00.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.086" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 15:56:00.085" endtime="20201030 15:56:00.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.088" level="INFO">VALUE: [3.0499999999999278e-05, 3.044399999999753e-05, 3.0430999999997432e-05, 3.0417000000001332e-05, 3.0444000000000998e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0472000000000138e-05, 3.0417000000001332e-05, 3.0347000000000013e-05, 3.0458000000000568e-05, 3.0416000000001858e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0416999999997862e-05, 3.0416000000001858e-05, 3.0417000000001332e-05, 3.0416000000001858e-05, 3.0417000000001332e-05, 3.047299999999961e-05, 3.0500000000002747e-05, 3.0417000000001332e-05, 3.0374999999999153e-05, 3.041599999999839e-05, 3.0374999999999153e-05, 3.0375000000002622e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0472000000000138e-05, 3.0402999999998293e-05, 3.0444000000000998e-05, 3.0430000000001428e-05, 3.0347000000000013e-05, 3.0431000000000902e-05, 3.0403000000001762e-05, 3.0444000000000998e-05, 3.0444000000000998e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.044500000000047e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0458000000000568e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0402000000002288e-05, 3.0416000000001858e-05, 3.0430999999997432e-05, 3.0403000000001762e-05]</msg>
<status status="PASS" starttime="20201030 15:56:00.087" endtime="20201030 15:56:00.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.082" endtime="20201030 15:56:00.089"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:00.093" endtime="20201030 15:56:00.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.091" endtime="20201030 15:56:00.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.090" endtime="20201030 15:56:00.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.726" endtime="20201030 15:56:00.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.725" endtime="20201030 15:56:00.114"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.122" endtime="20201030 15:56:00.140"></status>
</kw>
<msg timestamp="20201030 15:56:00.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.121" endtime="20201030 15:56:00.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.142" endtime="20201030 15:56:00.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.144" endtime="20201030 15:56:00.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.118" endtime="20201030 15:56:00.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.116" endtime="20201030 15:56:00.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.153" endtime="20201030 15:56:00.439"></status>
</kw>
<msg timestamp="20201030 15:56:00.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019598764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019629278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.152" endtime="20201030 15:56:00.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019598764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019629278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.443" endtime="20201030 15:56:00.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.452" endtime="20201030 15:56:00.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.149" endtime="20201030 15:56:00.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.147" endtime="20201030 15:56:00.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:00.458" level="INFO">${RESULT} = [{'diff': 3.0513999999998848e-05}, {'diff': 3.0499999999999278e-05}, {'diff': 3.0430000000001428e-05}, {'diff': 3.0430999999997432e-05}, {'diff': 3.0417000000001332e-05}, {'diff': 3.0444000000000998e-...</msg>
<status status="PASS" starttime="20201030 15:56:00.455" endtime="20201030 15:56:00.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:00.462" level="INFO">${ACCURACY} = {'diff': [3.0513999999998848e-05, 3.0499999999999278e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.0417000000001332e-05, 3.0444000000000998e-05, 3.041599999999839e-05, 3.0374999999999153e-05,...</msg>
<status status="PASS" starttime="20201030 15:56:00.459" endtime="20201030 15:56:00.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.467" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 15:56:00.466" endtime="20201030 15:56:00.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.469" level="INFO">VALUE: [3.0513999999998848e-05, 3.0499999999999278e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.0417000000001332e-05, 3.0444000000000998e-05, 3.041599999999839e-05, 3.0374999999999153e-05, 3.0388999999998723e-05, 3.0431000000000902e-05, 3.0403000000001762e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0416000000001858e-05, 3.0416000000001858e-05, 3.0430000000001428e-05, 3.045900000000004e-05, 3.0431000000000902e-05, 3.0362000000002526e-05, 3.0431000000000902e-05, 3.044500000000047e-05, 3.044500000000047e-05, 3.0430000000001428e-05, 3.0403000000001762e-05, 3.0388999999998723e-05, 3.042999999999796e-05, 3.0388999999998723e-05, 3.044399999999753e-05, 3.0499999999999278e-05, 3.0389000000002192e-05, 3.0431000000000902e-05, 3.0374999999999153e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0444000000000998e-05, 3.0361999999999056e-05, 3.0472000000000138e-05, 3.041599999999839e-05, 3.044399999999753e-05, 3.0458000000000568e-05, 3.0431000000000902e-05, 3.0403000000001762e-05, 3.0500000000002747e-05, 3.0417000000001332e-05, 3.0403000000001762e-05, 3.041599999999839e-05, 3.0417000000001332e-05, 3.044500000000047e-05, 3.0430000000001428e-05]</msg>
<status status="PASS" starttime="20201030 15:56:00.468" endtime="20201030 15:56:00.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.463" endtime="20201030 15:56:00.470"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:00.474" endtime="20201030 15:56:00.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.472" endtime="20201030 15:56:00.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.471" endtime="20201030 15:56:00.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.114" endtime="20201030 15:56:00.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.114" endtime="20201030 15:56:00.495"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.503" endtime="20201030 15:56:00.522"></status>
</kw>
<msg timestamp="20201030 15:56:00.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.502" endtime="20201030 15:56:00.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.524" endtime="20201030 15:56:00.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.527" endtime="20201030 15:56:00.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.499" endtime="20201030 15:56:00.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.497" endtime="20201030 15:56:00.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.540" endtime="20201030 15:56:00.827"></status>
</kw>
<msg timestamp="20201030 15:56:00.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020446569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020477125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.537" endtime="20201030 15:56:00.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020446569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020477125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.831" endtime="20201030 15:56:00.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.840" endtime="20201030 15:56:00.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.534" endtime="20201030 15:56:00.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.532" endtime="20201030 15:56:00.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:00.846" level="INFO">${RESULT} = [{'diff': 3.055599999999756e-05}, {'diff': 3.0846999999997043e-05}, {'diff': 3.0444999999997002e-05}, {'diff': 3.045900000000004e-05}, {'diff': 3.0458000000000568e-05}, {'diff': 3.0847999999999987e-05...</msg>
<status status="PASS" starttime="20201030 15:56:00.843" endtime="20201030 15:56:00.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:00.850" level="INFO">${ACCURACY} = {'diff': [3.055599999999756e-05, 3.0846999999997043e-05, 3.0444999999997002e-05, 3.045900000000004e-05, 3.0458000000000568e-05, 3.0847999999999987e-05, 3.0444000000000998e-05, 3.042999999999796e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:56:00.847" endtime="20201030 15:56:00.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.855" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 15:56:00.854" endtime="20201030 15:56:00.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.860" level="INFO">VALUE: [3.055599999999756e-05, 3.0846999999997043e-05, 3.0444999999997002e-05, 3.045900000000004e-05, 3.0458000000000568e-05, 3.0847999999999987e-05, 3.0444000000000998e-05, 3.042999999999796e-05, 3.0499999999999278e-05, 3.145900000000104e-05, 3.0514000000002317e-05, 3.081900000000137e-05, 3.0472000000000138e-05, 3.147200000000114e-05, 3.045900000000004e-05, 3.0513999999998848e-05, 3.0472000000000138e-05, 3.0417000000001332e-05, 3.0388999999998723e-05, 3.144399999999853e-05, 3.048699999999918e-05, 3.0430000000001428e-05, 3.082000000000085e-05, 3.0444000000000998e-05, 3.0430000000001428e-05, 3.143099999999843e-05, 3.044399999999753e-05, 3.044500000000047e-05, 3.086100000000008e-05, 3.0499999999999278e-05, 3.084700000000051e-05, 3.0472000000000138e-05, 3.0402999999998293e-05, 3.083300000000094e-05, 3.0472000000000138e-05, 3.0485999999999708e-05, 3.0804999999998334e-05, 3.077700000000266e-05, 3.045900000000004e-05, 3.0472000000000138e-05, 3.0444000000000998e-05, 3.0444000000000998e-05, 3.0416000000001858e-05, 3.0804999999998334e-05, 3.0431000000000902e-05, 3.0472000000000138e-05, 3.086100000000008e-05, 3.0458000000000568e-05, 3.0431000000000902e-05, 3.0499999999999278e-05]</msg>
<status status="PASS" starttime="20201030 15:56:00.856" endtime="20201030 15:56:00.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.851" endtime="20201030 15:56:00.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:00.865" endtime="20201030 15:56:00.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.864" endtime="20201030 15:56:00.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.863" endtime="20201030 15:56:00.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.495" endtime="20201030 15:56:00.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.495" endtime="20201030 15:56:00.886"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.895" endtime="20201030 15:56:00.911"></status>
</kw>
<msg timestamp="20201030 15:56:00.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.893" endtime="20201030 15:56:00.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.913" endtime="20201030 15:56:00.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.915" endtime="20201030 15:56:00.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.891" endtime="20201030 15:56:00.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.888" endtime="20201030 15:56:00.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.924" endtime="20201030 15:56:01.209"></status>
</kw>
<msg timestamp="20201030 15:56:01.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01961, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019640542, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:56:00.922" endtime="20201030 15:56:01.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01961, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019640542, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:56:01.213" endtime="20201030 15:56:01.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.222" endtime="20201030 15:56:01.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.920" endtime="20201030 15:56:01.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.918" endtime="20201030 15:56:01.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:01.228" level="INFO">${RESULT} = [{'diff': 3.054200000000146e-05}, {'diff': 3.368100000000068e-05}, {'diff': 3.042999999999796e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.35839999999997e-05}, {'diff': 3.3596999999999794e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:01.225" endtime="20201030 15:56:01.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:01.233" level="INFO">${ACCURACY} = {'diff': [3.054200000000146e-05, 3.368100000000068e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.35839999999997e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.04579999999971e-05, 3.356...</msg>
<status status="PASS" starttime="20201030 15:56:01.229" endtime="20201030 15:56:01.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.237" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 15:56:01.236" endtime="20201030 15:56:01.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.240" level="INFO">VALUE: [3.054200000000146e-05, 3.368100000000068e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.35839999999997e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.04579999999971e-05, 3.356999999999666e-05, 3.0431000000000902e-05, 3.365299999999807e-05, 3.0458000000000568e-05, 3.35839999999997e-05, 3.0472000000000138e-05, 3.3555000000001084e-05, 3.3624999999998934e-05, 3.044500000000047e-05, 3.359700000000326e-05, 3.0431000000000902e-05, 3.35839999999997e-05, 3.35839999999997e-05, 3.3583000000000224e-05, 3.044500000000047e-05, 3.0444000000000998e-05, 3.359799999999927e-05, 3.3569000000000654e-05, 3.35839999999997e-05, 3.045900000000004e-05, 3.3569000000000654e-05, 3.359799999999927e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.0458000000000568e-05, 3.3582999999996754e-05, 3.0472000000000138e-05, 3.3638999999998503e-05, 3.354200000000099e-05, 3.045900000000004e-05, 3.355600000000056e-05, 3.3583000000000224e-05, 3.35839999999997e-05, 3.3554999999997615e-05, 3.359799999999927e-05, 3.3596999999999794e-05, 3.359799999999927e-05, 3.3583000000000224e-05, 3.0444999999997002e-05, 3.3596999999999794e-05]</msg>
<status status="PASS" starttime="20201030 15:56:01.238" endtime="20201030 15:56:01.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.234" endtime="20201030 15:56:01.241"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:01.245" endtime="20201030 15:56:01.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.243" endtime="20201030 15:56:01.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.242" endtime="20201030 15:56:01.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.887" endtime="20201030 15:56:01.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.886" endtime="20201030 15:56:01.266"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.274" endtime="20201030 15:56:01.291"></status>
</kw>
<msg timestamp="20201030 15:56:01.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.273" endtime="20201030 15:56:01.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.293" endtime="20201030 15:56:01.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.295" endtime="20201030 15:56:01.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.270" endtime="20201030 15:56:01.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.268" endtime="20201030 15:56:01.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.304" endtime="20201030 15:56:01.591"></status>
</kw>
<msg timestamp="20201030 15:56:01.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019648639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019682389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:01.303" endtime="20201030 15:56:01.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019648639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019682389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:01.595" endtime="20201030 15:56:01.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.604" endtime="20201030 15:56:01.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.300" endtime="20201030 15:56:01.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.298" endtime="20201030 15:56:01.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:01.610" level="INFO">${RESULT} = [{'diff': 3.375000000000253e-05}, {'diff': 3.361200000000231e-05}, {'diff': 3.3610999999999364e-05}, {'diff': 3.35839999999997e-05}, {'diff': 3.3583000000000224e-05}, {'diff': 3.3583000000000224e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:01.607" endtime="20201030 15:56:01.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:01.614" level="INFO">${ACCURACY} = {'diff': [3.375000000000253e-05, 3.361200000000231e-05, 3.3610999999999364e-05, 3.35839999999997e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.361100000000283e-05, 3.354199999999752e-05, 3.35...</msg>
<status status="PASS" starttime="20201030 15:56:01.611" endtime="20201030 15:56:01.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.618" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 15:56:01.617" endtime="20201030 15:56:01.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.621" level="INFO">VALUE: [3.375000000000253e-05, 3.361200000000231e-05, 3.3610999999999364e-05, 3.35839999999997e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.361100000000283e-05, 3.354199999999752e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.361199999999884e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.3610999999999364e-05, 3.35839999999997e-05, 3.3610999999999364e-05, 3.357000000000013e-05, 3.35839999999997e-05, 3.3610999999999364e-05, 3.3610999999999364e-05, 3.3583000000000224e-05, 3.3610999999999364e-05, 3.359700000000326e-05, 3.359800000000274e-05, 3.3583000000000224e-05, 3.35839999999997e-05, 3.359700000000326e-05, 3.3583000000000224e-05, 3.359799999999927e-05, 3.3596999999999794e-05, 3.366699999999764e-05, 3.3583000000000224e-05, 3.36250000000024e-05, 3.3610999999999364e-05, 3.359799999999927e-05, 3.36519999999986e-05, 3.357000000000013e-05, 3.3610999999999364e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.3610999999999364e-05, 3.359799999999927e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.3582999999996754e-05]</msg>
<status status="PASS" starttime="20201030 15:56:01.620" endtime="20201030 15:56:01.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.615" endtime="20201030 15:56:01.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:01.626" endtime="20201030 15:56:01.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.624" endtime="20201030 15:56:01.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.623" endtime="20201030 15:56:01.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.266" endtime="20201030 15:56:01.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.266" endtime="20201030 15:56:01.646"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.655" endtime="20201030 15:56:01.674"></status>
</kw>
<msg timestamp="20201030 15:56:01.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.654" endtime="20201030 15:56:01.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.675" endtime="20201030 15:56:01.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.678" endtime="20201030 15:56:01.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.651" endtime="20201030 15:56:01.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.649" endtime="20201030 15:56:01.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.687" endtime="20201030 15:56:01.975"></status>
</kw>
<msg timestamp="20201030 15:56:01.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0204545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020488236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:56:01.685" endtime="20201030 15:56:01.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0204545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020488236, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:56:01.980" endtime="20201030 15:56:01.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.989" endtime="20201030 15:56:01.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.683" endtime="20201030 15:56:01.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.681" endtime="20201030 15:56:01.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:01.996" level="INFO">${RESULT} = [{'diff': 3.373599999999949e-05}, {'diff': 3.3610999999999364e-05}, {'diff': 3.3583000000000224e-05}, {'diff': 3.3610999999999364e-05}, {'diff': 3.35839999999997e-05}, {'diff': 3.3638999999998503e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:01.993" endtime="20201030 15:56:01.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:02.001" level="INFO">${ACCURACY} = {'diff': [3.373599999999949e-05, 3.3610999999999364e-05, 3.3583000000000224e-05, 3.3610999999999364e-05, 3.35839999999997e-05, 3.3638999999998503e-05, 3.365299999999807e-05, 3.3583000000000224e-05, 3....</msg>
<status status="PASS" starttime="20201030 15:56:01.997" endtime="20201030 15:56:02.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.005" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 15:56:02.004" endtime="20201030 15:56:02.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.008" level="INFO">VALUE: [3.373599999999949e-05, 3.3610999999999364e-05, 3.3583000000000224e-05, 3.3610999999999364e-05, 3.35839999999997e-05, 3.3638999999998503e-05, 3.365299999999807e-05, 3.3583000000000224e-05, 3.3569000000000654e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.361100000000283e-05, 3.363799999999903e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.359800000000274e-05, 3.3583000000000224e-05, 3.35839999999997e-05, 3.3583000000000224e-05, 3.35839999999997e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.359799999999927e-05, 3.3583000000000224e-05, 3.359799999999927e-05, 3.361100000000283e-05, 3.359799999999927e-05, 3.3583000000000224e-05, 3.35839999999997e-05, 3.3596999999999794e-05, 3.35839999999997e-05, 3.3569000000000654e-05, 3.3610999999999364e-05, 3.359800000000274e-05, 3.3596999999999794e-05, 3.35839999999997e-05, 3.3596999999999794e-05, 3.352800000000142e-05, 3.3527000000001944e-05, 3.35839999999997e-05, 3.365300000000154e-05, 3.359799999999927e-05, 3.3610999999999364e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.359700000000326e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.3582999999996754e-05]</msg>
<status status="PASS" starttime="20201030 15:56:02.006" endtime="20201030 15:56:02.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.002" endtime="20201030 15:56:02.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:02.013" endtime="20201030 15:56:02.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.012" endtime="20201030 15:56:02.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.011" endtime="20201030 15:56:02.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.647" endtime="20201030 15:56:02.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.647" endtime="20201030 15:56:02.041"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.051" endtime="20201030 15:56:02.068"></status>
</kw>
<msg timestamp="20201030 15:56:02.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.049" endtime="20201030 15:56:02.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.069" endtime="20201030 15:56:02.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.072" endtime="20201030 15:56:02.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.046" endtime="20201030 15:56:02.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.044" endtime="20201030 15:56:02.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.081" endtime="20201030 15:56:02.366"></status>
</kw>
<msg timestamp="20201030 15:56:02.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027536472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027570222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.079" endtime="20201030 15:56:02.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027536472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027570222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.370" endtime="20201030 15:56:02.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.378" endtime="20201030 15:56:02.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.077" endtime="20201030 15:56:02.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.075" endtime="20201030 15:56:02.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:02.385" level="INFO">${RESULT} = [{'diff': 3.374999999999906e-05}, {'diff': 3.361100000000283e-05}, {'diff': 3.3569000000000654e-05}, {'diff': 3.3638999999998503e-05}, {'diff': 3.3583000000000224e-05}, {'diff': 3.359799999999927e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:02.382" endtime="20201030 15:56:02.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:02.390" level="INFO">${ACCURACY} = {'diff': [3.374999999999906e-05, 3.361100000000283e-05, 3.3569000000000654e-05, 3.3638999999998503e-05, 3.3583000000000224e-05, 3.359799999999927e-05, 3.35839999999997e-05, 3.351400000000185e-05, 3.35...</msg>
<status status="PASS" starttime="20201030 15:56:02.386" endtime="20201030 15:56:02.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.394" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 15:56:02.393" endtime="20201030 15:56:02.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.397" level="INFO">VALUE: [3.374999999999906e-05, 3.361100000000283e-05, 3.3569000000000654e-05, 3.3638999999998503e-05, 3.3583000000000224e-05, 3.359799999999927e-05, 3.35839999999997e-05, 3.351400000000185e-05, 3.3596999999999794e-05, 3.361199999999884e-05, 3.3596999999999794e-05, 3.3568999999997184e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.3569000000000654e-05, 3.359799999999927e-05, 3.36519999999986e-05, 3.357000000000013e-05, 3.3596999999999794e-05, 3.3541000000001514e-05, 3.359700000000326e-05, 3.3610999999999364e-05, 3.3540999999998045e-05, 3.36250000000024e-05, 3.3624999999998934e-05, 3.3583000000000224e-05, 3.359799999999927e-05, 3.3583000000000224e-05, 3.359799999999927e-05, 3.3568999999997184e-05, 3.359799999999927e-05, 3.354200000000099e-05, 3.3624999999998934e-05, 3.3610999999999364e-05, 3.3610999999999364e-05, 3.3555000000001084e-05, 3.35839999999997e-05, 3.3583000000000224e-05, 3.357000000000013e-05, 3.35839999999997e-05, 3.3582999999996754e-05, 3.3569000000000654e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.357000000000013e-05, 3.3610999999999364e-05, 3.3596999999999794e-05, 3.3569000000000654e-05]</msg>
<status status="PASS" starttime="20201030 15:56:02.396" endtime="20201030 15:56:02.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.391" endtime="20201030 15:56:02.398"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:02.402" endtime="20201030 15:56:02.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.400" endtime="20201030 15:56:02.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.399" endtime="20201030 15:56:02.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.042" endtime="20201030 15:56:02.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.042" endtime="20201030 15:56:02.422"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.431" endtime="20201030 15:56:02.448"></status>
</kw>
<msg timestamp="20201030 15:56:02.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.430" endtime="20201030 15:56:02.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.450" endtime="20201030 15:56:02.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.452" endtime="20201030 15:56:02.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.427" endtime="20201030 15:56:02.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.425" endtime="20201030 15:56:02.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.461" endtime="20201030 15:56:02.749"></status>
</kw>
<msg timestamp="20201030 15:56:02.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019572056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019606458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.460" endtime="20201030 15:56:02.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019572056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019606458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.753" endtime="20201030 15:56:02.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.761" endtime="20201030 15:56:02.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.457" endtime="20201030 15:56:02.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.455" endtime="20201030 15:56:02.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:02.767" level="INFO">${RESULT} = [{'diff': 3.440199999999935e-05}, {'diff': 3.422200000000042e-05}, {'diff': 3.420800000000085e-05}, {'diff': 3.455600000000156e-05}, {'diff': 3.448600000000024e-05}, {'diff': 3.405600000000106e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:02.764" endtime="20201030 15:56:02.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:02.771" level="INFO">${ACCURACY} = {'diff': [3.440199999999935e-05, 3.422200000000042e-05, 3.420800000000085e-05, 3.455600000000156e-05, 3.448600000000024e-05, 3.405600000000106e-05, 3.3540999999998045e-05, 3.399999999999931e-05, 3.513...</msg>
<status status="PASS" starttime="20201030 15:56:02.768" endtime="20201030 15:56:02.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.776" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 15:56:02.775" endtime="20201030 15:56:02.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.778" level="INFO">VALUE: [3.440199999999935e-05, 3.422200000000042e-05, 3.420800000000085e-05, 3.455600000000156e-05, 3.448600000000024e-05, 3.405600000000106e-05, 3.3540999999998045e-05, 3.399999999999931e-05, 3.5139000000000004e-05, 3.420799999999738e-05, 3.424999999999956e-05, 3.4597000000000794e-05, 3.3596999999999794e-05, 3.481999999999791e-05, 3.419500000000075e-05, 3.444400000000153e-05, 3.475000000000006e-05, 3.4097000000000294e-05, 3.469400000000178e-05, 3.491700000000236e-05, 3.419499999999728e-05, 3.452799999999895e-05, 3.369400000000078e-05, 3.4583000000001224e-05, 3.454200000000199e-05, 3.4026999999998975e-05, 3.473599999999702e-05, 3.366600000000164e-05, 3.359799999999927e-05, 3.473600000000049e-05, 3.4526999999999475e-05, 3.422299999999989e-05, 3.422200000000042e-05, 3.422200000000042e-05, 3.355599999999709e-05, 3.454200000000199e-05, 3.473699999999996e-05, 3.357000000000013e-05, 3.4305000000001834e-05, 3.420799999999738e-05, 3.52779999999997e-05, 3.369500000000025e-05, 3.448600000000024e-05, 3.413900000000247e-05, 3.419500000000075e-05, 3.420800000000085e-05, 3.422299999999989e-05, 3.420800000000085e-05, 3.357000000000013e-05, 3.3569000000000654e-05]</msg>
<status status="PASS" starttime="20201030 15:56:02.777" endtime="20201030 15:56:02.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.772" endtime="20201030 15:56:02.780"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:02.783" endtime="20201030 15:56:02.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.782" endtime="20201030 15:56:02.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.781" endtime="20201030 15:56:02.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.423" endtime="20201030 15:56:02.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.423" endtime="20201030 15:56:02.804"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.812" endtime="20201030 15:56:02.831"></status>
</kw>
<msg timestamp="20201030 15:56:02.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.811" endtime="20201030 15:56:02.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.832" endtime="20201030 15:56:02.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.835" endtime="20201030 15:56:02.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.808" endtime="20201030 15:56:02.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.806" endtime="20201030 15:56:02.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.844" endtime="20201030 15:56:03.131"></status>
</kw>
<msg timestamp="20201030 15:56:03.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020540361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020575278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.842" endtime="20201030 15:56:03.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020540361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020575278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.135" endtime="20201030 15:56:03.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.143" endtime="20201030 15:56:03.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.840" endtime="20201030 15:56:03.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.838" endtime="20201030 15:56:03.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:03.149" level="INFO">${RESULT} = [{'diff': 3.491699999999889e-05}, {'diff': 3.602800000000045e-05}, {'diff': 3.51520000000001e-05}, {'diff': 3.5596999999998324e-05}, {'diff': 3.555600000000256e-05}, {'diff': 3.498600000000074e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:03.146" endtime="20201030 15:56:03.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:03.154" level="INFO">${ACCURACY} = {'diff': [3.491699999999889e-05, 3.602800000000045e-05, 3.51520000000001e-05, 3.5596999999998324e-05, 3.555600000000256e-05, 3.498600000000074e-05, 3.452800000000242e-05, 3.581999999999891e-05, 3.5165...</msg>
<status status="PASS" starttime="20201030 15:56:03.151" endtime="20201030 15:56:03.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.158" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 15:56:03.157" endtime="20201030 15:56:03.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.161" level="INFO">VALUE: [3.491699999999889e-05, 3.602800000000045e-05, 3.51520000000001e-05, 3.5596999999998324e-05, 3.555600000000256e-05, 3.498600000000074e-05, 3.452800000000242e-05, 3.581999999999891e-05, 3.516599999999967e-05, 3.570899999999835e-05, 3.4804999999998865e-05, 3.500000000000031e-05, 3.569399999999931e-05, 3.494400000000203e-05, 3.56520000000006e-05, 3.5152999999999573e-05, 3.559800000000127e-05, 3.54719999999982e-05, 3.4819000000001904e-05, 3.498600000000074e-05, 3.544400000000253e-05, 3.654200000000052e-05, 3.5152999999999573e-05, 3.574999999999759e-05, 3.5152999999999573e-05, 3.5610999999997894e-05, 3.522300000000089e-05, 3.598600000000174e-05, 3.551400000000038e-05, 3.523600000000099e-05, 3.473600000000049e-05, 3.604200000000002e-05, 3.654199999999705e-05, 3.5139000000000004e-05, 3.5583000000002224e-05, 3.5139000000000004e-05, 3.5639000000000504e-05, 3.593099999999946e-05, 3.518099999999871e-05, 3.494400000000203e-05, 3.52779999999997e-05, 3.493100000000193e-05, 3.5874999999997714e-05, 3.548600000000124e-05, 3.5512999999997436e-05, 3.543000000000296e-05, 3.544400000000253e-05, 3.5139000000000004e-05, 3.573600000000149e-05, 3.5124999999996964e-05]</msg>
<status status="PASS" starttime="20201030 15:56:03.159" endtime="20201030 15:56:03.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.155" endtime="20201030 15:56:03.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:03.166" endtime="20201030 15:56:03.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.165" endtime="20201030 15:56:03.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.164" endtime="20201030 15:56:03.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.805" endtime="20201030 15:56:03.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.804" endtime="20201030 15:56:03.187"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.196" endtime="20201030 15:56:03.212"></status>
</kw>
<msg timestamp="20201030 15:56:03.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.194" endtime="20201030 15:56:03.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.213" endtime="20201030 15:56:03.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.215" endtime="20201030 15:56:03.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.192" endtime="20201030 15:56:03.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.190" endtime="20201030 15:56:03.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.224" endtime="20201030 15:56:03.510"></status>
</kw>
<msg timestamp="20201030 15:56:03.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019687903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019725042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.223" endtime="20201030 15:56:03.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019687903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019725042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.514" endtime="20201030 15:56:03.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.522" endtime="20201030 15:56:03.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.220" endtime="20201030 15:56:03.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.219" endtime="20201030 15:56:03.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:03.529" level="INFO">${RESULT} = [{'diff': 3.7139000000002004e-05}, {'diff': 3.674999999999859e-05}, {'diff': 3.654200000000052e-05}, {'diff': 3.6541000000001045e-05}, {'diff': 3.6555000000000615e-05}, {'diff': 3.6833000000000005e-05...</msg>
<status status="PASS" starttime="20201030 15:56:03.525" endtime="20201030 15:56:03.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:03.534" level="INFO">${ACCURACY} = {'diff': [3.7139000000002004e-05, 3.674999999999859e-05, 3.654200000000052e-05, 3.6541000000001045e-05, 3.6555000000000615e-05, 3.6833000000000005e-05, 3.668000000000074e-05, 3.6874999999998714e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:56:03.530" endtime="20201030 15:56:03.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.538" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 15:56:03.537" endtime="20201030 15:56:03.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.540" level="INFO">VALUE: [3.7139000000002004e-05, 3.674999999999859e-05, 3.654200000000052e-05, 3.6541000000001045e-05, 3.6555000000000615e-05, 3.6833000000000005e-05, 3.668000000000074e-05, 3.6874999999998714e-05, 3.7069000000000685e-05, 3.648599999999877e-05, 3.6833000000000005e-05, 3.654199999999705e-05, 3.651400000000138e-05, 3.652800000000095e-05, 3.6846999999999575e-05, 3.6819000000000435e-05, 3.6527000000001475e-05, 3.656999999999966e-05, 3.6624999999998464e-05, 3.654200000000052e-05, 3.6611000000002364e-05, 3.6874999999998714e-05, 3.680600000000034e-05, 3.654200000000052e-05, 3.695800000000013e-05, 3.679200000000077e-05, 3.654200000000052e-05, 3.677799999999773e-05, 3.656999999999966e-05, 3.6541000000001045e-05, 3.684800000000252e-05, 3.652800000000095e-05, 3.654200000000052e-05, 3.654200000000052e-05, 3.6541000000001045e-05, 3.652800000000095e-05, 3.650000000000181e-05, 3.654200000000052e-05, 3.6819000000000435e-05, 3.6889000000001754e-05, 3.670799999999988e-05, 3.6875000000002184e-05, 3.672199999999945e-05, 3.654200000000052e-05, 3.654200000000052e-05, 3.655600000000009e-05, 3.652800000000095e-05, 3.6610999999998894e-05, 3.7069000000000685e-05, 3.6555000000000615e-05]</msg>
<status status="PASS" starttime="20201030 15:56:03.539" endtime="20201030 15:56:03.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.534" endtime="20201030 15:56:03.542"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:03.545" endtime="20201030 15:56:03.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.544" endtime="20201030 15:56:03.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.543" endtime="20201030 15:56:03.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.188" endtime="20201030 15:56:03.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.187" endtime="20201030 15:56:03.566"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.575" endtime="20201030 15:56:03.592"></status>
</kw>
<msg timestamp="20201030 15:56:03.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.573" endtime="20201030 15:56:03.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.593" endtime="20201030 15:56:03.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.596" endtime="20201030 15:56:03.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.571" endtime="20201030 15:56:03.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.568" endtime="20201030 15:56:03.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.605" endtime="20201030 15:56:03.893"></status>
</kw>
<msg timestamp="20201030 15:56:03.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019624333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019662181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.603" endtime="20201030 15:56:03.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019624333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019662181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.898" endtime="20201030 15:56:03.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.909" endtime="20201030 15:56:03.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.601" endtime="20201030 15:56:03.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.599" endtime="20201030 15:56:03.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:03.919" level="INFO">${RESULT} = [{'diff': 3.784800000000005e-05}, {'diff': 3.801399999999941e-05}, {'diff': 3.732000000000041e-05}, {'diff': 3.748699999999924e-05}, {'diff': 3.8083000000001255e-05}, {'diff': 3.774999999999959e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:03.914" endtime="20201030 15:56:03.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:03.924" level="INFO">${ACCURACY} = {'diff': [3.784800000000005e-05, 3.801399999999941e-05, 3.732000000000041e-05, 3.748699999999924e-05, 3.8083000000001255e-05, 3.774999999999959e-05, 3.748599999999977e-05, 3.719399999999734e-05, 3.748...</msg>
<status status="PASS" starttime="20201030 15:56:03.920" endtime="20201030 15:56:03.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.929" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 15:56:03.928" endtime="20201030 15:56:03.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.931" level="INFO">VALUE: [3.784800000000005e-05, 3.801399999999941e-05, 3.732000000000041e-05, 3.748699999999924e-05, 3.8083000000001255e-05, 3.774999999999959e-05, 3.748599999999977e-05, 3.719399999999734e-05, 3.748599999999977e-05, 3.7790999999998826e-05, 3.770800000000088e-05, 3.7833000000001005e-05, 3.7610999999999895e-05, 3.7874999999999714e-05, 3.77919999999983e-05, 3.750000000000281e-05, 3.7583000000000755e-05, 3.7389000000002254e-05, 3.7667000000001644e-05, 3.7139000000002004e-05, 3.801400000000288e-05, 3.751399999999891e-05, 3.801399999999941e-05, 3.7874999999999714e-05, 3.7431000000000964e-05, 3.752800000000195e-05, 3.7638999999999034e-05, 3.724999999999909e-05, 3.749999999999934e-05, 3.808400000000073e-05, 3.805599999999812e-05, 3.755600000000109e-05, 3.757000000000066e-05, 3.763799999999956e-05, 3.713800000000253e-05, 3.7624999999999464e-05, 3.801399999999941e-05, 3.7374999999999214e-05, 3.711199999999887e-05, 3.7526999999999006e-05, 3.7804999999998395e-05, 3.7360999999999644e-05, 3.719400000000081e-05, 3.794399999999809e-05, 3.7568999999997715e-05, 3.7083000000000255e-05, 3.7624999999999464e-05, 3.795800000000113e-05, 3.744400000000106e-05, 3.7152999999998104e-05]</msg>
<status status="PASS" starttime="20201030 15:56:03.930" endtime="20201030 15:56:03.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.925" endtime="20201030 15:56:03.933"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:03.936" endtime="20201030 15:56:03.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.935" endtime="20201030 15:56:03.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.934" endtime="20201030 15:56:03.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.567" endtime="20201030 15:56:03.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.566" endtime="20201030 15:56:03.957"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.966" endtime="20201030 15:56:03.985"></status>
</kw>
<msg timestamp="20201030 15:56:03.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.964" endtime="20201030 15:56:03.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.986" endtime="20201030 15:56:03.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.989" endtime="20201030 15:56:03.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.962" endtime="20201030 15:56:03.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.960" endtime="20201030 15:56:03.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.997" endtime="20201030 15:56:04.283"></status>
</kw>
<msg timestamp="20201030 15:56:04.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020649736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020688278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.996" endtime="20201030 15:56:04.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020649736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020688278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.287" endtime="20201030 15:56:04.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.296" endtime="20201030 15:56:04.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.993" endtime="20201030 15:56:04.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.992" endtime="20201030 15:56:04.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:04.302" level="INFO">${RESULT} = [{'diff': 3.854200000000252e-05}, {'diff': 3.877799999999973e-05}, {'diff': 3.8124999999999964e-05}, {'diff': 3.829200000000227e-05}, {'diff': 3.8416999999998924e-05}, {'diff': 3.825000000000009e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:04.299" endtime="20201030 15:56:04.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:04.306" level="INFO">${ACCURACY} = {'diff': [3.854200000000252e-05, 3.877799999999973e-05, 3.8124999999999964e-05, 3.829200000000227e-05, 3.8416999999998924e-05, 3.825000000000009e-05, 3.830600000000184e-05, 3.857000000000166e-05, 3.83...</msg>
<status status="PASS" starttime="20201030 15:56:04.303" endtime="20201030 15:56:04.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.311" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 15:56:04.310" endtime="20201030 15:56:04.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.316" level="INFO">VALUE: [3.854200000000252e-05, 3.877799999999973e-05, 3.8124999999999964e-05, 3.829200000000227e-05, 3.8416999999998924e-05, 3.825000000000009e-05, 3.830600000000184e-05, 3.857000000000166e-05, 3.8319000000001935e-05, 3.826399999999966e-05, 3.886200000000062e-05, 3.8790999999999826e-05, 3.8611000000000895e-05, 3.895800000000213e-05, 3.825000000000009e-05, 3.8388999999999784e-05, 3.825000000000009e-05, 3.8360999999997175e-05, 3.907000000000216e-05, 3.8318999999998465e-05, 3.901400000000041e-05, 3.900000000000084e-05, 3.9096999999998355e-05, 3.8861000000001145e-05, 3.867999999999927e-05, 3.8625000000000465e-05, 3.84720000000012e-05, 3.8166999999998674e-05, 3.8930999999998994e-05, 3.8875000000000715e-05, 3.882000000000191e-05, 3.8375000000000214e-05, 3.857000000000166e-05, 3.897199999999823e-05, 3.8611000000000895e-05, 3.82919999999988e-05, 3.8625000000000465e-05, 3.901400000000041e-05, 3.855599999999862e-05, 3.8180999999998244e-05, 3.8375000000000214e-05, 3.813800000000006e-05, 3.819400000000181e-05, 3.8804999999999396e-05, 3.820799999999791e-05, 3.8874999999997245e-05, 3.8790999999999826e-05, 3.9068999999999215e-05, 3.8319000000001935e-05, 3.875000000000059e-05]</msg>
<status status="PASS" starttime="20201030 15:56:04.312" endtime="20201030 15:56:04.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.307" endtime="20201030 15:56:04.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:04.330" endtime="20201030 15:56:04.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.329" endtime="20201030 15:56:04.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.328" endtime="20201030 15:56:04.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.958" endtime="20201030 15:56:04.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.957" endtime="20201030 15:56:04.351"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.360" endtime="20201030 15:56:04.377"></status>
</kw>
<msg timestamp="20201030 15:56:04.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.358" endtime="20201030 15:56:04.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.379" endtime="20201030 15:56:04.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.381" endtime="20201030 15:56:04.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.355" endtime="20201030 15:56:04.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.353" endtime="20201030 15:56:04.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.390" endtime="20201030 15:56:04.676"></status>
</kw>
<msg timestamp="20201030 15:56:04.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019591708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0196315, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:56:04.389" endtime="20201030 15:56:04.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019591708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0196315, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:56:04.680" endtime="20201030 15:56:04.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.688" endtime="20201030 15:56:04.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.386" endtime="20201030 15:56:04.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.384" endtime="20201030 15:56:04.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:04.695" level="INFO">${RESULT} = [{'diff': 3.97920000000003e-05}, {'diff': 3.9458999999998634e-05}, {'diff': 3.923600000000152e-05}, {'diff': 3.917999999999977e-05}, {'diff': 3.945799999999916e-05}, {'diff': 3.9832999999999535e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:04.691" endtime="20201030 15:56:04.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:04.700" level="INFO">${ACCURACY} = {'diff': [3.97920000000003e-05, 3.9458999999998634e-05, 3.923600000000152e-05, 3.917999999999977e-05, 3.945799999999916e-05, 3.9832999999999535e-05, 3.982000000000291e-05, 3.9346999999998605e-05, 3.96...</msg>
<status status="PASS" starttime="20201030 15:56:04.696" endtime="20201030 15:56:04.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.704" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 15:56:04.703" endtime="20201030 15:56:04.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.706" level="INFO">VALUE: [3.97920000000003e-05, 3.9458999999998634e-05, 3.923600000000152e-05, 3.917999999999977e-05, 3.945799999999916e-05, 3.9832999999999535e-05, 3.982000000000291e-05, 3.9346999999998605e-05, 3.968000000000027e-05, 3.94720000000022e-05, 3.9195000000002284e-05, 4.004200000000055e-05, 3.92919999999998e-05, 3.9138999999997065e-05, 3.9180999999999244e-05, 3.9709000000002354e-05, 3.975000000000159e-05, 3.9986999999998274e-05, 3.9860999999998675e-05, 3.991599999999748e-05, 4.0069000000000216e-05, 3.930599999999937e-05, 3.9332999999999035e-05, 3.9625000000001465e-05, 4.0096999999999355e-05, 3.926400000000066e-05, 3.9568999999999716e-05, 3.9818999999999966e-05, 3.9818999999999966e-05, 4.0054999999997176e-05, 4.0069000000000216e-05, 3.948600000000177e-05, 3.972200000000245e-05, 3.9403000000000354e-05, 3.950000000000134e-05, 3.9195000000002284e-05, 3.9832999999999535e-05, 3.9124999999997495e-05, 3.970800000000288e-05, 3.9180999999999244e-05, 3.983399999999901e-05, 3.976400000000116e-05, 3.930599999999937e-05, 3.931999999999894e-05, 3.9818999999999966e-05, 3.9680999999999744e-05, 3.9875000000001715e-05, 3.948600000000177e-05, 3.9223000000001423e-05, 3.9624999999997995e-05]</msg>
<status status="PASS" starttime="20201030 15:56:04.705" endtime="20201030 15:56:04.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.701" endtime="20201030 15:56:04.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:04.711" endtime="20201030 15:56:04.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.710" endtime="20201030 15:56:04.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.709" endtime="20201030 15:56:04.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.352" endtime="20201030 15:56:04.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.351" endtime="20201030 15:56:04.732"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.741" endtime="20201030 15:56:04.757"></status>
</kw>
<msg timestamp="20201030 15:56:04.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.739" endtime="20201030 15:56:04.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.758" endtime="20201030 15:56:04.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.761" endtime="20201030 15:56:04.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.737" endtime="20201030 15:56:04.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.734" endtime="20201030 15:56:04.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.770" endtime="20201030 15:56:05.057"></status>
</kw>
<msg timestamp="20201030 15:56:05.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019586139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019626806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.768" endtime="20201030 15:56:05.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019586139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019626806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.061" endtime="20201030 15:56:05.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.069" endtime="20201030 15:56:05.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.765" endtime="20201030 15:56:05.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.764" endtime="20201030 15:56:05.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:05.076" level="INFO">${RESULT} = [{'diff': 4.0667000000001174e-05}, {'diff': 4.0445000000000064e-05}, {'diff': 4.105599999999765e-05}, {'diff': 4.072199999999998e-05}, {'diff': 4.026400000000166e-05}, {'diff': 4.0445000000000064e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:05.073" endtime="20201030 15:56:05.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:05.080" level="INFO">${ACCURACY} = {'diff': [4.0667000000001174e-05, 4.0445000000000064e-05, 4.105599999999765e-05, 4.072199999999998e-05, 4.026400000000166e-05, 4.0445000000000064e-05, 4.0875000000002715e-05, 4.095800000000066e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:56:05.077" endtime="20201030 15:56:05.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.085" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 15:56:05.084" endtime="20201030 15:56:05.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.088" level="INFO">VALUE: [4.0667000000001174e-05, 4.0445000000000064e-05, 4.105599999999765e-05, 4.072199999999998e-05, 4.026400000000166e-05, 4.0445000000000064e-05, 4.0875000000002715e-05, 4.095800000000066e-05, 4.01660000000012e-05, 4.0375000000002215e-05, 4.019400000000034e-05, 4.070800000000041e-05, 4.0695000000000314e-05, 4.076399999999869e-05, 4.018000000000077e-05, 4.0681000000000744e-05, 4.0610999999999425e-05, 4.0124999999998495e-05, 4.101399999999894e-05, 4.1055000000001646e-05, 4.0610999999999425e-05, 4.075000000000259e-05, 4.020799999999991e-05, 4.023599999999905e-05, 4.0930999999997525e-05, 4.076399999999869e-05, 4.031999999999994e-05, 4.09859999999998e-05, 4.0402999999997885e-05, 4.073599999999955e-05, 4.083400000000001e-05, 4.0388999999998315e-05, 4.0110999999998925e-05, 4.022199999999948e-05, 4.0319000000000466e-05, 4.070800000000041e-05, 4.0222999999998954e-05, 4.094400000000109e-05, 4.101400000000241e-05, 4.1012999999999467e-05, 4.0819000000000966e-05, 4.0305000000000896e-05, 4.0583000000000286e-05, 4.0166999999997205e-05, 4.0638999999998565e-05, 4.077799999999826e-05, 4.019400000000034e-05, 4.069399999999737e-05, 4.0124999999998495e-05, 4.0389000000001785e-05]</msg>
<status status="PASS" starttime="20201030 15:56:05.086" endtime="20201030 15:56:05.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.081" endtime="20201030 15:56:05.089"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:05.093" endtime="20201030 15:56:05.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.091" endtime="20201030 15:56:05.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.090" endtime="20201030 15:56:05.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.733" endtime="20201030 15:56:05.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.732" endtime="20201030 15:56:05.114"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.122" endtime="20201030 15:56:05.141"></status>
</kw>
<msg timestamp="20201030 15:56:05.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.121" endtime="20201030 15:56:05.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.142" endtime="20201030 15:56:05.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.144" endtime="20201030 15:56:05.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.118" endtime="20201030 15:56:05.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.116" endtime="20201030 15:56:05.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.154" endtime="20201030 15:56:05.438"></status>
</kw>
<msg timestamp="20201030 15:56:05.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020755333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020797431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.152" endtime="20201030 15:56:05.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020755333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020797431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.442" endtime="20201030 15:56:05.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.450" endtime="20201030 15:56:05.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.149" endtime="20201030 15:56:05.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.148" endtime="20201030 15:56:05.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:05.457" level="INFO">${RESULT} = [{'diff': 4.209800000000083e-05}, {'diff': 4.205599999999865e-05}, {'diff': 4.1638999999999565e-05}, {'diff': 4.1040999999998606e-05}, {'diff': 4.2040999999999606e-05}, {'diff': 4.194399999999862e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:05.454" endtime="20201030 15:56:05.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:05.461" level="INFO">${ACCURACY} = {'diff': [4.209800000000083e-05, 4.205599999999865e-05, 4.1638999999999565e-05, 4.1040999999998606e-05, 4.2040999999999606e-05, 4.194399999999862e-05, 4.1290999999998856e-05, 4.194399999999862e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:56:05.458" endtime="20201030 15:56:05.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.466" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 15:56:05.464" endtime="20201030 15:56:05.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.469" level="INFO">VALUE: [4.209800000000083e-05, 4.205599999999865e-05, 4.1638999999999565e-05, 4.1040999999998606e-05, 4.2040999999999606e-05, 4.194399999999862e-05, 4.1290999999998856e-05, 4.194399999999862e-05, 4.119400000000134e-05, 4.1790999999999356e-05, 4.191599999999948e-05, 4.2082999999998316e-05, 4.2082999999998316e-05, 4.192999999999905e-05, 4.1124999999999495e-05, 4.1638999999999565e-05, 4.1832999999998066e-05, 4.1944999999998095e-05, 4.194399999999862e-05, 4.202799999999951e-05, 4.1361000000000175e-05, 4.170800000000141e-05, 4.156999999999772e-05, 4.205599999999865e-05, 4.132000000000094e-05, 4.1597000000000856e-05, 4.175000000000012e-05, 4.1195000000000814e-05, 4.1945000000001564e-05, 4.151399999999944e-05, 4.195800000000166e-05, 4.155599999999815e-05, 4.1624999999999995e-05, 4.1486999999999774e-05, 4.201399999999994e-05, 4.1290999999998856e-05, 4.1652999999999135e-05, 4.147200000000073e-05, 4.2125000000000495e-05, 4.195799999999819e-05, 4.1541000000002576e-05, 4.1875000000000245e-05, 4.19860000000008e-05, 4.1555000000002146e-05, 4.170800000000141e-05, 4.2054999999999176e-05, 4.1902999999999385e-05, 4.145799999999769e-05, 4.156999999999772e-05, 4.182000000000144e-05]</msg>
<status status="PASS" starttime="20201030 15:56:05.467" endtime="20201030 15:56:05.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.462" endtime="20201030 15:56:05.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:05.476" endtime="20201030 15:56:05.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.474" endtime="20201030 15:56:05.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.472" endtime="20201030 15:56:05.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.115" endtime="20201030 15:56:05.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.114" endtime="20201030 15:56:05.498"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.509" endtime="20201030 15:56:05.526"></status>
</kw>
<msg timestamp="20201030 15:56:05.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.507" endtime="20201030 15:56:05.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.527" endtime="20201030 15:56:05.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.530" endtime="20201030 15:56:05.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.504" endtime="20201030 15:56:05.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.501" endtime="20201030 15:56:05.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.539" endtime="20201030 15:56:05.825"></status>
</kw>
<msg timestamp="20201030 15:56:05.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022339042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022381486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.537" endtime="20201030 15:56:05.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022339042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022381486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.829" endtime="20201030 15:56:05.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.837" endtime="20201030 15:56:05.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.535" endtime="20201030 15:56:05.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.533" endtime="20201030 15:56:05.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:05.844" level="INFO">${RESULT} = [{'diff': 4.244399999999912e-05}, {'diff': 4.226400000000019e-05}, {'diff': 4.223600000000105e-05}, {'diff': 4.23059999999989e-05}, {'diff': 4.2444999999998595e-05}, {'diff': 4.293000000000005e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:05.841" endtime="20201030 15:56:05.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:05.849" level="INFO">${ACCURACY} = {'diff': [4.244399999999912e-05, 4.226400000000019e-05, 4.223600000000105e-05, 4.23059999999989e-05, 4.2444999999998595e-05, 4.293000000000005e-05, 4.2694999999998845e-05, 4.275000000000112e-05, 4.277...</msg>
<status status="PASS" starttime="20201030 15:56:05.845" endtime="20201030 15:56:05.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.853" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 15:56:05.852" endtime="20201030 15:56:05.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.856" level="INFO">VALUE: [4.244399999999912e-05, 4.226400000000019e-05, 4.223600000000105e-05, 4.23059999999989e-05, 4.2444999999998595e-05, 4.293000000000005e-05, 4.2694999999998845e-05, 4.275000000000112e-05, 4.277800000000026e-05, 4.2944999999999095e-05, 4.270799999999894e-05, 4.2861000000001676e-05, 4.2568999999999246e-05, 4.300000000000137e-05, 4.294399999999962e-05, 4.2318999999998996e-05, 4.2916999999999955e-05, 4.2527000000000537e-05, 4.2582999999998816e-05, 4.2875000000001245e-05, 4.273599999999808e-05, 4.2903000000000385e-05, 4.2347000000001606e-05, 4.276400000000069e-05, 4.2139000000000065e-05, 4.2361000000001175e-05, 4.2568999999999246e-05, 4.2417000000002925e-05, 4.2152999999999635e-05, 4.297199999999876e-05, 4.2944999999999095e-05, 4.250000000000087e-05, 4.225000000000062e-05, 4.300000000000137e-05, 4.281999999999897e-05, 4.226399999999672e-05, 4.3055000000000176e-05, 4.300000000000137e-05, 4.2389000000000315e-05, 4.277800000000026e-05, 4.21799999999993e-05, 4.2361000000001175e-05, 4.2360999999997706e-05, 4.2125000000000495e-05, 4.270799999999894e-05, 4.2430999999999025e-05, 4.2430999999999025e-05, 4.222199999999801e-05, 4.291600000000048e-05, 4.242999999999955e-05]</msg>
<status status="PASS" starttime="20201030 15:56:05.854" endtime="20201030 15:56:05.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.850" endtime="20201030 15:56:05.857"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:05.861" endtime="20201030 15:56:05.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.859" endtime="20201030 15:56:05.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.858" endtime="20201030 15:56:05.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.499" endtime="20201030 15:56:05.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.498" endtime="20201030 15:56:05.881"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.890" endtime="20201030 15:56:05.907"></status>
</kw>
<msg timestamp="20201030 15:56:05.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.888" endtime="20201030 15:56:05.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.909" endtime="20201030 15:56:05.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.911" endtime="20201030 15:56:05.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.886" endtime="20201030 15:56:05.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.884" endtime="20201030 15:56:05.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.920" endtime="20201030 15:56:06.209"></status>
</kw>
<msg timestamp="20201030 15:56:06.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019613264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019657278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.919" endtime="20201030 15:56:06.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019613264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019657278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.214" endtime="20201030 15:56:06.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.222" endtime="20201030 15:56:06.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.916" endtime="20201030 15:56:06.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.914" endtime="20201030 15:56:06.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:06.228" level="INFO">${RESULT} = [{'diff': 4.401400000000194e-05}, {'diff': 4.327699999999782e-05}, {'diff': 4.3375000000001745e-05}, {'diff': 4.3291000000000857e-05}, {'diff': 4.33059999999999e-05}, {'diff': 4.3736999999998555e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:06.225" endtime="20201030 15:56:06.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:06.233" level="INFO">${ACCURACY} = {'diff': [4.401400000000194e-05, 4.327699999999782e-05, 4.3375000000001745e-05, 4.3291000000000857e-05, 4.33059999999999e-05, 4.3736999999998555e-05, 4.34999999999984e-05, 4.404200000000108e-05, 4.345...</msg>
<status status="PASS" starttime="20201030 15:56:06.229" endtime="20201030 15:56:06.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.237" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 15:56:06.236" endtime="20201030 15:56:06.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.240" level="INFO">VALUE: [4.401400000000194e-05, 4.327699999999782e-05, 4.3375000000001745e-05, 4.3291000000000857e-05, 4.33059999999999e-05, 4.3736999999998555e-05, 4.34999999999984e-05, 4.404200000000108e-05, 4.345799999999969e-05, 4.3125000000001495e-05, 4.3569000000000246e-05, 4.4069000000000746e-05, 4.3361000000002176e-05, 4.31800000000003e-05, 4.3082999999999316e-05, 4.3125000000001495e-05, 4.4083000000000316e-05, 4.3625000000001996e-05, 4.405499999999771e-05, 4.3318999999999996e-05, 4.34999999999984e-05, 4.326400000000119e-05, 4.3374999999998276e-05, 4.3374999999998276e-05, 4.3096999999998886e-05, 4.3639000000001565e-05, 4.3194999999999345e-05, 4.3945000000000095e-05, 4.332000000000294e-05, 4.3653000000001135e-05, 4.3958999999999665e-05, 4.3444999999999595e-05, 4.3833000000000066e-05, 4.326300000000172e-05, 4.3596999999999386e-05, 4.404199999999761e-05, 4.39999999999989e-05, 4.329200000000033e-05, 4.394400000000062e-05, 4.3819000000000496e-05, 4.3819000000000496e-05, 4.343000000000055e-05, 4.3374999999998276e-05, 4.3569000000000246e-05, 4.373599999999908e-05, 4.3041000000000607e-05, 4.3332999999999566e-05, 4.3110999999998456e-05, 4.3318999999999996e-05, 4.3361000000002176e-05]</msg>
<status status="PASS" starttime="20201030 15:56:06.239" endtime="20201030 15:56:06.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.233" endtime="20201030 15:56:06.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:06.245" endtime="20201030 15:56:06.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.244" endtime="20201030 15:56:06.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.243" endtime="20201030 15:56:06.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.882" endtime="20201030 15:56:06.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.882" endtime="20201030 15:56:06.266"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.275" endtime="20201030 15:56:06.294"></status>
</kw>
<msg timestamp="20201030 15:56:06.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.274" endtime="20201030 15:56:06.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.295" endtime="20201030 15:56:06.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.298" endtime="20201030 15:56:06.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.271" endtime="20201030 15:56:06.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.269" endtime="20201030 15:56:06.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.307" endtime="20201030 15:56:06.593"></status>
</kw>
<msg timestamp="20201030 15:56:06.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020895444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020940139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.305" endtime="20201030 15:56:06.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020895444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020940139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.597" endtime="20201030 15:56:06.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.605" endtime="20201030 15:56:06.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.303" endtime="20201030 15:56:06.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.301" endtime="20201030 15:56:06.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:06.612" level="INFO">${RESULT} = [{'diff': 4.4695000000000845e-05}, {'diff': 4.473600000000008e-05}, {'diff': 4.4610999999999956e-05}, {'diff': 4.4681000000001275e-05}, {'diff': 4.426399999999872e-05}, {'diff': 4.4375000000002746e-05...</msg>
<status status="PASS" starttime="20201030 15:56:06.609" endtime="20201030 15:56:06.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:06.616" level="INFO">${ACCURACY} = {'diff': [4.4695000000000845e-05, 4.473600000000008e-05, 4.4610999999999956e-05, 4.4681000000001275e-05, 4.426399999999872e-05, 4.4375000000002746e-05, 4.4625000000002996e-05, 4.473600000000008e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:56:06.613" endtime="20201030 15:56:06.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.620" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 15:56:06.619" endtime="20201030 15:56:06.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.623" level="INFO">VALUE: [4.4695000000000845e-05, 4.473600000000008e-05, 4.4610999999999956e-05, 4.4681000000001275e-05, 4.426399999999872e-05, 4.4375000000002746e-05, 4.4625000000002996e-05, 4.473600000000008e-05, 4.4125000000002496e-05, 4.4874999999999776e-05, 4.4874999999999776e-05, 4.451399999999897e-05, 4.4124999999999026e-05, 4.4874999999999776e-05, 4.4931000000001525e-05, 4.4472999999999735e-05, 4.4167000000001205e-05, 4.445800000000069e-05, 4.481899999999803e-05, 4.44999999999994e-05, 4.502799999999904e-05, 4.43329999999971e-05, 4.4416999999997986e-05, 4.4874999999999776e-05, 4.4319000000000996e-05, 4.444400000000112e-05, 4.508400000000079e-05, 4.433400000000004e-05, 4.4959000000000665e-05, 4.4666999999998236e-05, 4.4152999999998166e-05, 4.4610999999999956e-05, 4.4431000000001025e-05, 4.4624999999999526e-05, 4.4208999999999915e-05, 4.4903000000002385e-05, 4.422200000000001e-05, 4.4305000000001427e-05, 4.4736999999999555e-05, 4.48329999999976e-05, 4.497200000000076e-05, 4.419400000000087e-05, 4.448599999999983e-05, 4.497199999999729e-05, 4.4374999999999276e-05, 4.450000000000287e-05, 4.508299999999785e-05, 4.4610999999999956e-05, 4.4888999999999346e-05, 4.456899999999778e-05]</msg>
<status status="PASS" starttime="20201030 15:56:06.621" endtime="20201030 15:56:06.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.617" endtime="20201030 15:56:06.625"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:06.628" endtime="20201030 15:56:06.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.627" endtime="20201030 15:56:06.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.626" endtime="20201030 15:56:06.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.267" endtime="20201030 15:56:06.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.267" endtime="20201030 15:56:06.649"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.658" endtime="20201030 15:56:06.676"></status>
</kw>
<msg timestamp="20201030 15:56:06.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.656" endtime="20201030 15:56:06.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.677" endtime="20201030 15:56:06.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.680" endtime="20201030 15:56:06.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.654" endtime="20201030 15:56:06.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.652" endtime="20201030 15:56:06.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.689" endtime="20201030 15:56:06.975"></status>
</kw>
<msg timestamp="20201030 15:56:06.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019921458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019966736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.687" endtime="20201030 15:56:06.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019921458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019966736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.979" endtime="20201030 15:56:06.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.987" endtime="20201030 15:56:06.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.685" endtime="20201030 15:56:06.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.683" endtime="20201030 15:56:06.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:06.993" level="INFO">${RESULT} = [{'diff': 4.527799999999929e-05}, {'diff': 4.526300000000025e-05}, {'diff': 4.511199999999993e-05}, {'diff': 4.5639000000000096e-05}, {'diff': 4.544400000000212e-05}, {'diff': 4.5125000000000026e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:06.990" endtime="20201030 15:56:06.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:06.998" level="INFO">${ACCURACY} = {'diff': [4.527799999999929e-05, 4.526300000000025e-05, 4.511199999999993e-05, 4.5639000000000096e-05, 4.544400000000212e-05, 4.5125000000000026e-05, 4.544399999999865e-05, 4.548600000000083e-05, 4.58...</msg>
<status status="PASS" starttime="20201030 15:56:06.994" endtime="20201030 15:56:06.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.003" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 15:56:07.002" endtime="20201030 15:56:07.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.005" level="INFO">VALUE: [4.527799999999929e-05, 4.526300000000025e-05, 4.511199999999993e-05, 4.5639000000000096e-05, 4.544400000000212e-05, 4.5125000000000026e-05, 4.544399999999865e-05, 4.548600000000083e-05, 4.5861000000001206e-05, 4.5388999999999846e-05, 4.567999999999933e-05, 4.51800000000023e-05, 4.575000000000065e-05, 4.556899999999878e-05, 4.555500000000268e-05, 4.5444999999998126e-05, 4.526399999999972e-05, 4.547199999999779e-05, 4.575000000000065e-05, 4.5709000000001415e-05, 4.5930999999999056e-05, 4.5138999999999596e-05, 4.5611000000000956e-05, 4.548600000000083e-05, 4.5194999999997876e-05, 4.547200000000126e-05, 4.561200000000043e-05, 4.5347000000001136e-05, 4.511199999999993e-05, 4.55000000000004e-05, 4.51939999999984e-05, 4.576400000000022e-05, 4.591600000000001e-05, 4.556899999999878e-05, 4.544399999999865e-05, 4.56939999999989e-05, 4.554199999999911e-05, 4.5625000000000526e-05, 4.522200000000101e-05, 4.575000000000065e-05, 4.60000000000009e-05, 4.5138999999999596e-05, 4.5319999999998e-05, 4.526399999999972e-05, 4.552799999999954e-05, 4.605599999999918e-05, 4.604199999999961e-05, 4.547199999999779e-05, 4.558400000000129e-05, 4.5709000000001415e-05]</msg>
<status status="PASS" starttime="20201030 15:56:07.004" endtime="20201030 15:56:07.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.999" endtime="20201030 15:56:07.007"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:07.010" endtime="20201030 15:56:07.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.009" endtime="20201030 15:56:07.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.008" endtime="20201030 15:56:07.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.650" endtime="20201030 15:56:07.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.650" endtime="20201030 15:56:07.031"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.040" endtime="20201030 15:56:07.058"></status>
</kw>
<msg timestamp="20201030 15:56:07.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.038" endtime="20201030 15:56:07.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.060" endtime="20201030 15:56:07.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.062" endtime="20201030 15:56:07.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.036" endtime="20201030 15:56:07.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.034" endtime="20201030 15:56:07.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.071" endtime="20201030 15:56:07.358"></status>
</kw>
<msg timestamp="20201030 15:56:07.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020027417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020073944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.070" endtime="20201030 15:56:07.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020027417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020073944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.362" endtime="20201030 15:56:07.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.372" endtime="20201030 15:56:07.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.067" endtime="20201030 15:56:07.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.065" endtime="20201030 15:56:07.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:07.381" level="INFO">${RESULT} = [{'diff': 4.652700000000107e-05}, {'diff': 4.612499999999756e-05}, {'diff': 4.617999999999983e-05}, {'diff': 4.705500000000071e-05}, {'diff': 4.634699999999867e-05}, {'diff': 4.631899999999953e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:07.377" endtime="20201030 15:56:07.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:07.386" level="INFO">${ACCURACY} = {'diff': [4.652700000000107e-05, 4.612499999999756e-05, 4.617999999999983e-05, 4.705500000000071e-05, 4.634699999999867e-05, 4.631899999999953e-05, 4.6139000000000596e-05, 4.6875000000001776e-05, 4.63...</msg>
<status status="PASS" starttime="20201030 15:56:07.382" endtime="20201030 15:56:07.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.391" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 15:56:07.390" endtime="20201030 15:56:07.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.395" level="INFO">VALUE: [4.652700000000107e-05, 4.612499999999756e-05, 4.617999999999983e-05, 4.705500000000071e-05, 4.634699999999867e-05, 4.631899999999953e-05, 4.6139000000000596e-05, 4.6875000000001776e-05, 4.631899999999953e-05, 4.622200000000201e-05, 4.680500000000046e-05, 4.6139000000000596e-05, 4.673600000000208e-05, 4.622200000000201e-05, 4.708399999999932e-05, 4.688899999999788e-05, 4.677800000000079e-05, 4.686099999999874e-05, 4.6694999999999376e-05, 4.617999999999983e-05, 4.6208999999998446e-05, 4.611200000000093e-05, 4.687499999999831e-05, 4.66939999999999e-05, 4.6736999999998086e-05, 4.620799999999897e-05, 4.651400000000097e-05, 4.61939999999994e-05, 4.6611000000001956e-05, 4.698599999999886e-05, 4.637499999999781e-05, 4.617999999999983e-05, 4.624999999999768e-05, 4.622200000000201e-05, 4.626400000000072e-05, 4.65000000000014e-05, 4.676400000000122e-05, 4.6625000000001526e-05, 4.640200000000094e-05, 4.648599999999836e-05, 4.625000000000115e-05, 4.6222999999998016e-05, 4.6708999999998946e-05, 4.6194999999998876e-05, 4.6444999999999126e-05, 4.629100000000039e-05, 4.659699999999892e-05, 4.6375000000001276e-05, 4.61939999999994e-05, 4.654200000000011e-05]</msg>
<status status="PASS" starttime="20201030 15:56:07.393" endtime="20201030 15:56:07.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.387" endtime="20201030 15:56:07.398"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:07.405" endtime="20201030 15:56:07.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.403" endtime="20201030 15:56:07.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.400" endtime="20201030 15:56:07.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.032" endtime="20201030 15:56:07.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.031" endtime="20201030 15:56:07.426"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.435" endtime="20201030 15:56:07.453"></status>
</kw>
<msg timestamp="20201030 15:56:07.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.433" endtime="20201030 15:56:07.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.455" endtime="20201030 15:56:07.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.458" endtime="20201030 15:56:07.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.431" endtime="20201030 15:56:07.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.428" endtime="20201030 15:56:07.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.487" endtime="20201030 15:56:07.807"></status>
</kw>
<msg timestamp="20201030 15:56:07.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021267389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021315014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.478" endtime="20201030 15:56:07.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021267389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021315014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.817" endtime="20201030 15:56:07.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.827" endtime="20201030 15:56:07.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.463" endtime="20201030 15:56:07.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.461" endtime="20201030 15:56:07.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:07.834" level="INFO">${RESULT} = [{'diff': 4.762499999999906e-05}, {'diff': 4.73330000000001e-05}, {'diff': 4.736099999999924e-05}, {'diff': 4.748600000000283e-05}, {'diff': 4.7431000000000556e-05}, {'diff': 4.7375000000002276e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:07.831" endtime="20201030 15:56:07.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:07.838" level="INFO">${ACCURACY} = {'diff': [4.762499999999906e-05, 4.73330000000001e-05, 4.736099999999924e-05, 4.748600000000283e-05, 4.7431000000000556e-05, 4.7375000000002276e-05, 4.7945000000000626e-05, 4.78200000000005e-05, 4.729...</msg>
<status status="PASS" starttime="20201030 15:56:07.835" endtime="20201030 15:56:07.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.843" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 15:56:07.842" endtime="20201030 15:56:07.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.849" level="INFO">VALUE: [4.762499999999906e-05, 4.73330000000001e-05, 4.736099999999924e-05, 4.748600000000283e-05, 4.7431000000000556e-05, 4.7375000000002276e-05, 4.7945000000000626e-05, 4.78200000000005e-05, 4.729200000000086e-05, 4.766600000000176e-05, 4.7167000000000736e-05, 4.781999999999703e-05, 4.768000000000133e-05, 4.765199999999872e-05, 4.804100000000214e-05, 4.752799999999807e-05, 4.744400000000065e-05, 4.718000000000083e-05, 4.801400000000247e-05, 4.715199999999822e-05, 4.751400000000197e-05, 4.7639000000002096e-05, 4.747199999999979e-05, 4.799999999999943e-05, 4.756900000000078e-05, 4.713899999999813e-05, 4.7139000000001596e-05, 4.7667000000001236e-05, 4.755600000000068e-05, 4.71529999999977e-05, 4.755600000000068e-05, 4.7375000000002276e-05, 4.7181000000000306e-05, 4.737499999999881e-05, 4.7180999999996837e-05, 4.78330000000006e-05, 4.75000000000024e-05, 4.7236999999998586e-05, 4.73330000000001e-05, 4.723599999999911e-05, 4.7889000000002346e-05, 4.788899999999888e-05, 4.730500000000096e-05, 4.744400000000065e-05, 4.738899999999838e-05, 4.76940000000009e-05, 4.783400000000007e-05, 4.794400000000115e-05, 4.71940000000004e-05, 4.781900000000103e-05]</msg>
<status status="PASS" starttime="20201030 15:56:07.844" endtime="20201030 15:56:07.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.839" endtime="20201030 15:56:07.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:07.854" endtime="20201030 15:56:07.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.853" endtime="20201030 15:56:07.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.851" endtime="20201030 15:56:07.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.427" endtime="20201030 15:56:07.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.426" endtime="20201030 15:56:07.875"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.884" endtime="20201030 15:56:07.902"></status>
</kw>
<msg timestamp="20201030 15:56:07.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.883" endtime="20201030 15:56:07.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.904" endtime="20201030 15:56:07.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.907" endtime="20201030 15:56:07.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.880" endtime="20201030 15:56:07.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.878" endtime="20201030 15:56:07.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.917" endtime="20201030 15:56:08.205"></status>
</kw>
<msg timestamp="20201030 15:56:08.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020151153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020199917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.915" endtime="20201030 15:56:08.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020151153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020199917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.209" endtime="20201030 15:56:08.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.217" endtime="20201030 15:56:08.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.913" endtime="20201030 15:56:08.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.910" endtime="20201030 15:56:08.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:08.224" level="INFO">${RESULT} = [{'diff': 4.876399999999975e-05}, {'diff': 4.862500000000006e-05}, {'diff': 4.8486999999999836e-05}, {'diff': 4.872199999999757e-05}, {'diff': 4.874999999999671e-05}, {'diff': 4.905500000000271e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:08.221" endtime="20201030 15:56:08.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:08.230" level="INFO">${ACCURACY} = {'diff': [4.876399999999975e-05, 4.862500000000006e-05, 4.8486999999999836e-05, 4.872199999999757e-05, 4.874999999999671e-05, 4.905500000000271e-05, 4.847199999999732e-05, 4.869399999999843e-05, 4.818...</msg>
<status status="PASS" starttime="20201030 15:56:08.225" endtime="20201030 15:56:08.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.234" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 15:56:08.233" endtime="20201030 15:56:08.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.237" level="INFO">VALUE: [4.876399999999975e-05, 4.862500000000006e-05, 4.8486999999999836e-05, 4.872199999999757e-05, 4.874999999999671e-05, 4.905500000000271e-05, 4.847199999999732e-05, 4.869399999999843e-05, 4.818000000000183e-05, 4.897200000000129e-05, 4.827800000000229e-05, 4.86940000000019e-05, 4.836100000000024e-05, 4.827799999999882e-05, 4.888899999999988e-05, 4.831900000000153e-05, 4.868099999999834e-05, 4.875000000000018e-05, 4.831999999999753e-05, 4.8208999999996976e-05, 4.861100000000049e-05, 4.873600000000061e-05, 4.8722999999997046e-05, 4.830600000000143e-05, 4.858399999999735e-05, 4.90270000000001e-05, 4.83330000000011e-05, 4.8707999999998e-05, 4.875000000000018e-05, 4.867999999999886e-05, 4.869399999999843e-05, 4.902799999999957e-05, 4.811099999999999e-05, 4.9014e-05, 4.869399999999843e-05, 4.905500000000271e-05, 4.881899999999856e-05, 4.875000000000018e-05, 4.894499999999816e-05, 4.845800000000122e-05, 4.908300000000185e-05, 4.844399999999818e-05, 4.881899999999856e-05, 4.900000000000043e-05, 4.888899999999988e-05, 4.836100000000024e-05, 4.8431000000001556e-05, 4.83330000000011e-05, 4.824999999999968e-05, 4.808399999999685e-05]</msg>
<status status="PASS" starttime="20201030 15:56:08.235" endtime="20201030 15:56:08.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.230" endtime="20201030 15:56:08.238"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:08.242" endtime="20201030 15:56:08.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.241" endtime="20201030 15:56:08.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.239" endtime="20201030 15:56:08.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.876" endtime="20201030 15:56:08.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.876" endtime="20201030 15:56:08.263"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.272" endtime="20201030 15:56:08.290"></status>
</kw>
<msg timestamp="20201030 15:56:08.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.270" endtime="20201030 15:56:08.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.292" endtime="20201030 15:56:08.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.294" endtime="20201030 15:56:08.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.268" endtime="20201030 15:56:08.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.265" endtime="20201030 15:56:08.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.304" endtime="20201030 15:56:08.591"></status>
</kw>
<msg timestamp="20201030 15:56:08.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020242806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020292542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.302" endtime="20201030 15:56:08.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020242806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020292542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.595" endtime="20201030 15:56:08.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.604" endtime="20201030 15:56:08.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.299" endtime="20201030 15:56:08.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.297" endtime="20201030 15:56:08.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:08.610" level="INFO">${RESULT} = [{'diff': 4.973600000000161e-05}, {'diff': 4.977800000000032e-05}, {'diff': 4.916699999999927e-05}, {'diff': 4.9945000000002626e-05}, {'diff': 4.934799999999767e-05}, {'diff': 4.9707999999999e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:08.607" endtime="20201030 15:56:08.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:08.615" level="INFO">${ACCURACY} = {'diff': [4.973600000000161e-05, 4.977800000000032e-05, 4.916699999999927e-05, 4.9945000000002626e-05, 4.934799999999767e-05, 4.9707999999999e-05, 4.930599999999896e-05, 4.997200000000229e-05, 4.97360...</msg>
<status status="PASS" starttime="20201030 15:56:08.611" endtime="20201030 15:56:08.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.619" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 15:56:08.618" endtime="20201030 15:56:08.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.622" level="INFO">VALUE: [4.973600000000161e-05, 4.977800000000032e-05, 4.916699999999927e-05, 4.9945000000002626e-05, 4.934799999999767e-05, 4.9707999999999e-05, 4.930599999999896e-05, 4.997200000000229e-05, 4.973600000000161e-05, 5.00279999999971e-05, 4.961100000000149e-05, 4.923600000000111e-05, 4.983299999999913e-05, 4.906899999999881e-05, 4.920800000000197e-05, 4.944399999999918e-05, 4.980499999999999e-05, 4.988900000000088e-05, 4.981899999999956e-05, 4.930499999999949e-05, 5.006999999999928e-05, 5.002800000000057e-05, 4.995899999999873e-05, 4.975000000000118e-05, 4.968099999999934e-05, 4.93339999999981e-05, 4.956999999999878e-05, 4.926400000000025e-05, 4.980599999999946e-05, 4.920800000000197e-05, 4.975000000000118e-05, 4.916599999999979e-05, 4.986200000000121e-05, 4.983299999999913e-05, 4.969399999999943e-05, 4.977800000000032e-05, 4.942999999999961e-05, 4.994399999999968e-05, 4.973599999999814e-05, 4.980599999999946e-05, 4.95140000000005e-05, 5.001399999999753e-05, 4.979199999999989e-05, 4.9972999999998297e-05, 4.9667000000003236e-05, 4.922199999999807e-05, 4.913900000000013e-05, 4.948600000000136e-05, 5.008399999999885e-05, 4.988900000000088e-05]</msg>
<status status="PASS" starttime="20201030 15:56:08.621" endtime="20201030 15:56:08.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.616" endtime="20201030 15:56:08.623"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:08.627" endtime="20201030 15:56:08.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.626" endtime="20201030 15:56:08.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.624" endtime="20201030 15:56:08.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.264" endtime="20201030 15:56:08.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.263" endtime="20201030 15:56:08.648"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.657" endtime="20201030 15:56:08.677"></status>
</kw>
<msg timestamp="20201030 15:56:08.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.655" endtime="20201030 15:56:08.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.678" endtime="20201030 15:56:08.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.681" endtime="20201030 15:56:08.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.653" endtime="20201030 15:56:08.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.651" endtime="20201030 15:56:08.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.690" endtime="20201030 15:56:08.977"></status>
</kw>
<msg timestamp="20201030 15:56:08.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021376319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021426569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.689" endtime="20201030 15:56:08.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021376319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021426569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.981" endtime="20201030 15:56:08.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.990" endtime="20201030 15:56:08.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.686" endtime="20201030 15:56:08.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.684" endtime="20201030 15:56:08.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:08.996" level="INFO">${RESULT} = [{'diff': 5.024999999999821e-05}, {'diff': 5.10270000000021e-05}, {'diff': 5.088899999999841e-05}, {'diff': 5.018000000000036e-05}, {'diff': 5.019399999999993e-05}, {'diff': 5.036099999999877e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:08.993" endtime="20201030 15:56:08.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:09.001" level="INFO">${ACCURACY} = {'diff': [5.024999999999821e-05, 5.10270000000021e-05, 5.088899999999841e-05, 5.018000000000036e-05, 5.019399999999993e-05, 5.036099999999877e-05, 5.069400000000043e-05, 5.083300000000013e-05, 5.05420...</msg>
<status status="PASS" starttime="20201030 15:56:08.997" endtime="20201030 15:56:09.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.006" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 15:56:09.004" endtime="20201030 15:56:09.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.008" level="INFO">VALUE: [5.024999999999821e-05, 5.10270000000021e-05, 5.088899999999841e-05, 5.018000000000036e-05, 5.019399999999993e-05, 5.036099999999877e-05, 5.069400000000043e-05, 5.083300000000013e-05, 5.054200000000064e-05, 5.075000000000218e-05, 5.013900000000113e-05, 5.081900000000056e-05, 5.105600000000071e-05, 5.099999999999896e-05, 5.105600000000071e-05, 5.104199999999767e-05, 5.094500000000016e-05, 5.031999999999953e-05, 5.025000000000168e-05, 5.076399999999828e-05, 5.082000000000003e-05, 5.031999999999953e-05, 5.031999999999953e-05, 5.094500000000016e-05, 5.062499999999859e-05, 5.049999999999846e-05, 5.106899999999734e-05, 5.036099999999877e-05, 5.109699999999995e-05, 5.101399999999853e-05, 5.058299999999988e-05, 5.049999999999846e-05, 5.076399999999828e-05, 5.0943999999997214e-05, 5.068000000000086e-05, 5.080500000000099e-05, 5.06530000000012e-05, 5.104199999999767e-05, 5.050000000000193e-05, 5.081899999999709e-05, 5.031999999999953e-05, 5.100000000000243e-05, 5.076400000000175e-05, 5.083300000000013e-05, 5.080600000000046e-05, 5.031999999999953e-05, 5.018000000000036e-05, 5.070899999999948e-05, 5.076399999999828e-05, 5.049999999999846e-05]</msg>
<status status="PASS" starttime="20201030 15:56:09.007" endtime="20201030 15:56:09.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.002" endtime="20201030 15:56:09.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:09.014" endtime="20201030 15:56:09.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.013" endtime="20201030 15:56:09.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.012" endtime="20201030 15:56:09.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.649" endtime="20201030 15:56:09.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.648" endtime="20201030 15:56:09.035"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.044" endtime="20201030 15:56:09.062"></status>
</kw>
<msg timestamp="20201030 15:56:09.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.043" endtime="20201030 15:56:09.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.064" endtime="20201030 15:56:09.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.066" endtime="20201030 15:56:09.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.040" endtime="20201030 15:56:09.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.038" endtime="20201030 15:56:09.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.075" endtime="20201030 15:56:09.361"></status>
</kw>
<msg timestamp="20201030 15:56:09.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020278153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020330264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.074" endtime="20201030 15:56:09.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020278153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020330264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.365" endtime="20201030 15:56:09.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.374" endtime="20201030 15:56:09.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.071" endtime="20201030 15:56:09.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.069" endtime="20201030 15:56:09.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:09.381" level="INFO">${RESULT} = [{'diff': 5.211100000000052e-05}, {'diff': 5.130600000000096e-05}, {'diff': 5.183300000000113e-05}, {'diff': 5.144500000000066e-05}, {'diff': 5.201399999999953e-05}, {'diff': 5.137499999999934e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:09.377" endtime="20201030 15:56:09.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:09.386" level="INFO">${ACCURACY} = {'diff': [5.211100000000052e-05, 5.130600000000096e-05, 5.183300000000113e-05, 5.144500000000066e-05, 5.201399999999953e-05, 5.137499999999934e-05, 5.195899999999726e-05, 5.205600000000171e-05, 5.1374...</msg>
<status status="PASS" starttime="20201030 15:56:09.382" endtime="20201030 15:56:09.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.391" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 15:56:09.390" endtime="20201030 15:56:09.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.393" level="INFO">VALUE: [5.211100000000052e-05, 5.130600000000096e-05, 5.183300000000113e-05, 5.144500000000066e-05, 5.201399999999953e-05, 5.137499999999934e-05, 5.195899999999726e-05, 5.205600000000171e-05, 5.137499999999934e-05, 5.197299999999683e-05, 5.162499999999959e-05, 5.184800000000017e-05, 5.177800000000232e-05, 5.1707999999997534e-05, 5.123599999999964e-05, 5.155499999999827e-05, 5.136099999999977e-05, 5.199999999999996e-05, 5.195800000000125e-05, 5.124999999999921e-05, 5.116600000000179e-05, 5.183300000000113e-05, 5.130500000000149e-05, 5.187499999999984e-05, 5.181900000000156e-05, 5.115299999999823e-05, 5.138900000000238e-05, 5.162500000000306e-05, 5.113899999999866e-05, 5.168100000000134e-05, 5.174999999999971e-05, 5.138899999999891e-05, 5.181899999999809e-05, 5.195900000000073e-05, 5.180600000000146e-05, 5.137500000000281e-05, 5.1971999999997354e-05, 5.126299999999931e-05, 5.150000000000293e-05, 5.176399999999928e-05, 5.156900000000131e-05, 5.199999999999996e-05, 5.177800000000232e-05, 5.156900000000131e-05, 5.162499999999959e-05, 5.126399999999878e-05, 5.149999999999946e-05, 5.1929999999998644e-05, 5.156900000000131e-05, 5.124999999999921e-05]</msg>
<status status="PASS" starttime="20201030 15:56:09.392" endtime="20201030 15:56:09.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.387" endtime="20201030 15:56:09.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:09.403" endtime="20201030 15:56:09.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.402" endtime="20201030 15:56:09.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.401" endtime="20201030 15:56:09.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.036" endtime="20201030 15:56:09.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.035" endtime="20201030 15:56:09.424"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.433" endtime="20201030 15:56:09.451"></status>
</kw>
<msg timestamp="20201030 15:56:09.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.432" endtime="20201030 15:56:09.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.453" endtime="20201030 15:56:09.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.455" endtime="20201030 15:56:09.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.429" endtime="20201030 15:56:09.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.427" endtime="20201030 15:56:09.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.465" endtime="20201030 15:56:09.752"></status>
</kw>
<msg timestamp="20201030 15:56:09.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020221347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020273819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.463" endtime="20201030 15:56:09.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020221347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020273819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.756" endtime="20201030 15:56:09.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.765" endtime="20201030 15:56:09.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.461" endtime="20201030 15:56:09.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.459" endtime="20201030 15:56:09.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:09.772" level="INFO">${RESULT} = [{'diff': 5.2471999999997854e-05}, {'diff': 5.23470000000012e-05}, {'diff': 5.258299999999841e-05}, {'diff': 5.287499999999737e-05}, {'diff': 5.301400000000053e-05}, {'diff': 5.258300000000188e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:09.768" endtime="20201030 15:56:09.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:09.776" level="INFO">${ACCURACY} = {'diff': [5.2471999999997854e-05, 5.23470000000012e-05, 5.258299999999841e-05, 5.287499999999737e-05, 5.301400000000053e-05, 5.258300000000188e-05, 5.306900000000281e-05, 5.2430000000002613e-05, 5.212...</msg>
<status status="PASS" starttime="20201030 15:56:09.773" endtime="20201030 15:56:09.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.780" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 15:56:09.779" endtime="20201030 15:56:09.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.783" level="INFO">VALUE: [5.2471999999997854e-05, 5.23470000000012e-05, 5.258299999999841e-05, 5.287499999999737e-05, 5.301400000000053e-05, 5.258300000000188e-05, 5.306900000000281e-05, 5.2430000000002613e-05, 5.212500000000009e-05, 5.231899999999859e-05, 5.212500000000009e-05, 5.256999999999831e-05, 5.256999999999831e-05, 5.276400000000028e-05, 5.2971999999998354e-05, 5.232000000000153e-05, 5.308400000000185e-05, 5.269500000000191e-05, 5.212500000000009e-05, 5.219500000000141e-05, 5.262500000000059e-05, 5.298700000000087e-05, 5.2193999999998464e-05, 5.255499999999927e-05, 5.231899999999859e-05, 5.275000000000071e-05, 5.312499999999762e-05, 5.2735999999997674e-05, 5.241699999999905e-05, 5.212500000000009e-05, 5.223600000000064e-05, 5.281899999999909e-05, 5.251400000000003e-05, 5.248600000000089e-05, 5.269500000000191e-05, 5.266700000000277e-05, 5.25279999999996e-05, 5.219499999999794e-05, 5.2721999999998104e-05, 5.250000000000046e-05, 5.276400000000028e-05, 5.212500000000009e-05, 5.223600000000064e-05, 5.28609999999978e-05, 5.230599999999849e-05, 5.212500000000009e-05, 5.2179999999998894e-05, 5.294400000000268e-05, 5.275000000000071e-05, 5.288900000000041e-05]</msg>
<status status="PASS" starttime="20201030 15:56:09.782" endtime="20201030 15:56:09.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.777" endtime="20201030 15:56:09.784"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:09.788" endtime="20201030 15:56:09.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.787" endtime="20201030 15:56:09.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.785" endtime="20201030 15:56:09.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.425" endtime="20201030 15:56:09.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.424" endtime="20201030 15:56:09.809"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.818" endtime="20201030 15:56:09.839"></status>
</kw>
<msg timestamp="20201030 15:56:09.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.817" endtime="20201030 15:56:09.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.840" endtime="20201030 15:56:09.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.843" endtime="20201030 15:56:09.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.814" endtime="20201030 15:56:09.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.812" endtime="20201030 15:56:09.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.852" endtime="20201030 15:56:10.137"></status>
</kw>
<msg timestamp="20201030 15:56:10.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021269264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021322944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.851" endtime="20201030 15:56:10.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021269264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021322944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.141" endtime="20201030 15:56:10.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.150" endtime="20201030 15:56:10.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.848" endtime="20201030 15:56:10.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.846" endtime="20201030 15:56:10.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:10.158" level="INFO">${RESULT} = [{'diff': 5.3680000000000394e-05}, {'diff': 5.387500000000184e-05}, {'diff': 5.393100000000012e-05}, {'diff': 5.40410000000012e-05}, {'diff': 5.3985999999998924e-05}, {'diff': 5.3179999999999894e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:10.154" endtime="20201030 15:56:10.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:10.163" level="INFO">${ACCURACY} = {'diff': [5.3680000000000394e-05, 5.387500000000184e-05, 5.393100000000012e-05, 5.40410000000012e-05, 5.3985999999998924e-05, 5.3179999999999894e-05, 5.312500000000109e-05, 5.326400000000078e-05, 5.35...</msg>
<status status="PASS" starttime="20201030 15:56:10.159" endtime="20201030 15:56:10.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.167" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 15:56:10.166" endtime="20201030 15:56:10.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.170" level="INFO">VALUE: [5.3680000000000394e-05, 5.387500000000184e-05, 5.393100000000012e-05, 5.40410000000012e-05, 5.3985999999998924e-05, 5.3179999999999894e-05, 5.312500000000109e-05, 5.326400000000078e-05, 5.358299999999941e-05, 5.3485999999998424e-05, 5.4027999999997633e-05, 5.3693999999999964e-05, 5.3457999999999284e-05, 5.368099999999987e-05, 5.312499999999762e-05, 5.3513999999997564e-05, 5.35280000000006e-05, 5.390299999999751e-05, 5.369499999999944e-05, 5.361099999999855e-05, 5.357000000000278e-05, 5.358400000000235e-05, 5.394499999999969e-05, 5.3763999999997814e-05, 5.333299999999916e-05, 5.368099999999987e-05, 5.3999999999998494e-05, 5.331900000000306e-05, 5.3957999999999784e-05, 5.3693999999999964e-05, 5.3999999999998494e-05, 5.3999999999998494e-05, 5.312500000000109e-05, 5.3499999999997994e-05, 5.382000000000303e-05, 5.3693999999999964e-05, 5.331899999999959e-05, 5.3207999999999034e-05, 5.380599999999999e-05, 5.3999999999998494e-05, 5.318099999999937e-05, 5.409800000000242e-05, 5.406999999999981e-05, 5.336100000000177e-05, 5.404099999999773e-05, 5.358300000000288e-05, 5.387500000000184e-05, 5.380599999999999e-05, 5.348700000000137e-05, 5.3693999999999964e-05]</msg>
<status status="PASS" starttime="20201030 15:56:10.168" endtime="20201030 15:56:10.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.164" endtime="20201030 15:56:10.172"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:10.176" endtime="20201030 15:56:10.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.174" endtime="20201030 15:56:10.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.173" endtime="20201030 15:56:10.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.810" endtime="20201030 15:56:10.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.810" endtime="20201030 15:56:10.197"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.206" endtime="20201030 15:56:10.224"></status>
</kw>
<msg timestamp="20201030 15:56:10.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.204" endtime="20201030 15:56:10.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.226" endtime="20201030 15:56:10.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.228" endtime="20201030 15:56:10.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.202" endtime="20201030 15:56:10.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.199" endtime="20201030 15:56:10.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.238" endtime="20201030 15:56:10.524"></status>
</kw>
<msg timestamp="20201030 15:56:10.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02021975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020274278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:10.236" endtime="20201030 15:56:10.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02021975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020274278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:10.528" endtime="20201030 15:56:10.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.537" endtime="20201030 15:56:10.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.233" endtime="20201030 15:56:10.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.232" endtime="20201030 15:56:10.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:10.544" level="INFO">${RESULT} = [{'diff': 5.4527999999998134e-05}, {'diff': 5.482000000000056e-05}, {'diff': 5.482000000000056e-05}, {'diff': 5.469500000000044e-05}, {'diff': 5.4763999999998814e-05}, {'diff': 5.4235999999999174e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:10.540" endtime="20201030 15:56:10.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:10.549" level="INFO">${ACCURACY} = {'diff': [5.4527999999998134e-05, 5.482000000000056e-05, 5.482000000000056e-05, 5.469500000000044e-05, 5.4763999999998814e-05, 5.4235999999999174e-05, 5.46670000000013e-05, 5.412499999999862e-05, 5.49...</msg>
<status status="PASS" starttime="20201030 15:56:10.545" endtime="20201030 15:56:10.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.554" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 15:56:10.553" endtime="20201030 15:56:10.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.556" level="INFO">VALUE: [5.4527999999998134e-05, 5.482000000000056e-05, 5.482000000000056e-05, 5.469500000000044e-05, 5.4763999999998814e-05, 5.4235999999999174e-05, 5.46670000000013e-05, 5.412499999999862e-05, 5.4972000000000354e-05, 5.4944000000001214e-05, 5.4249999999998744e-05, 5.4402000000002004e-05, 5.462500000000259e-05, 5.456900000000084e-05, 5.508299999999744e-05, 5.4208000000000034e-05, 5.430600000000049e-05, 5.506899999999787e-05, 5.4999999999999494e-05, 5.430500000000102e-05, 5.4208000000000034e-05, 5.457000000000031e-05, 5.465299999999826e-05, 5.4263999999998314e-05, 5.4499999999998994e-05, 5.444500000000019e-05, 5.43609999999993e-05, 5.4429999999997675e-05, 5.4513999999998564e-05, 5.487499999999937e-05, 5.479200000000142e-05, 5.4958000000000784e-05, 5.411100000000252e-05, 5.487499999999937e-05, 5.4708000000000534e-05, 5.4263999999998314e-05, 5.4763999999998814e-05, 5.455599999999727e-05, 5.4735999999999674e-05, 5.4735999999999674e-05, 5.463899999999869e-05, 5.412499999999862e-05, 5.508299999999744e-05, 5.488900000000241e-05, 5.444500000000019e-05, 5.4777999999998384e-05, 5.4235999999999174e-05, 5.487499999999937e-05, 5.420900000000298e-05, 5.443099999999715e-05]</msg>
<status status="PASS" starttime="20201030 15:56:10.555" endtime="20201030 15:56:10.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.550" endtime="20201030 15:56:10.558"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:10.562" endtime="20201030 15:56:10.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.560" endtime="20201030 15:56:10.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.559" endtime="20201030 15:56:10.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.198" endtime="20201030 15:56:10.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.197" endtime="20201030 15:56:10.582"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.591" endtime="20201030 15:56:10.609"></status>
</kw>
<msg timestamp="20201030 15:56:10.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.590" endtime="20201030 15:56:10.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.611" endtime="20201030 15:56:10.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.614" endtime="20201030 15:56:10.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.587" endtime="20201030 15:56:10.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.585" endtime="20201030 15:56:10.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.623" endtime="20201030 15:56:10.910"></status>
</kw>
<msg timestamp="20201030 15:56:10.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020213069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020268542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.621" endtime="20201030 15:56:10.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020213069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020268542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.915" endtime="20201030 15:56:10.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.924" endtime="20201030 15:56:10.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.619" endtime="20201030 15:56:10.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.617" endtime="20201030 15:56:10.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:10.930" level="INFO">${RESULT} = [{'diff': 5.547300000000033e-05}, {'diff': 5.5486000000000424e-05}, {'diff': 5.5763999999999814e-05}, {'diff': 5.5763999999999814e-05}, {'diff': 5.5458000000001284e-05}, {'diff': 5.581900000000209e-05...</msg>
<status status="PASS" starttime="20201030 15:56:10.927" endtime="20201030 15:56:10.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:10.935" level="INFO">${ACCURACY} = {'diff': [5.547300000000033e-05, 5.5486000000000424e-05, 5.5763999999999814e-05, 5.5763999999999814e-05, 5.5458000000001284e-05, 5.581900000000209e-05, 5.529100000000245e-05, 5.590300000000298e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:56:10.931" endtime="20201030 15:56:10.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.939" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 15:56:10.938" endtime="20201030 15:56:10.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.942" level="INFO">VALUE: [5.547300000000033e-05, 5.5486000000000424e-05, 5.5763999999999814e-05, 5.5763999999999814e-05, 5.5458000000001284e-05, 5.581900000000209e-05, 5.529100000000245e-05, 5.590300000000298e-05, 5.562500000000012e-05, 5.5513999999999564e-05, 5.5694000000001964e-05, 5.5555999999998273e-05, 5.530499999999855e-05, 5.562500000000012e-05, 5.5944000000002214e-05, 5.583300000000166e-05, 5.581899999999862e-05, 5.594499999999822e-05, 5.51670000000018e-05, 5.544499999999772e-05, 5.530600000000149e-05, 5.53610000000003e-05, 5.587500000000037e-05, 5.5486000000000424e-05, 5.540300000000248e-05, 5.551300000000009e-05, 5.509799999999995e-05, 5.594499999999822e-05, 5.5888000000000465e-05, 5.529099999999898e-05, 5.5943999999998745e-05, 5.5180000000001894e-05, 5.5194000000001464e-05, 5.5207999999997565e-05, 5.537499999999987e-05, 5.5527999999999134e-05, 5.5513999999999564e-05, 5.518100000000137e-05, 5.5736000000000674e-05, 5.606900000000234e-05, 5.5750000000000244e-05, 5.5263999999999314e-05, 5.538899999999944e-05, 5.556999999999784e-05, 5.591700000000255e-05, 5.5513999999999564e-05, 5.6014000000000064e-05, 5.582000000000156e-05, 5.532000000000106e-05, 5.593099999999865e-05]</msg>
<status status="PASS" starttime="20201030 15:56:10.941" endtime="20201030 15:56:10.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.936" endtime="20201030 15:56:10.943"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:10.947" endtime="20201030 15:56:10.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.946" endtime="20201030 15:56:10.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.944" endtime="20201030 15:56:10.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.583" endtime="20201030 15:56:10.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.583" endtime="20201030 15:56:10.968"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.977" endtime="20201030 15:56:10.996"></status>
</kw>
<msg timestamp="20201030 15:56:10.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.975" endtime="20201030 15:56:10.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.997" endtime="20201030 15:56:10.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.000" endtime="20201030 15:56:11.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.973" endtime="20201030 15:56:11.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.971" endtime="20201030 15:56:11.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.010" endtime="20201030 15:56:11.296"></status>
</kw>
<msg timestamp="20201030 15:56:11.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021201444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021257819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.008" endtime="20201030 15:56:11.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021201444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021257819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.301" endtime="20201030 15:56:11.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.309" endtime="20201030 15:56:11.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.005" endtime="20201030 15:56:11.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.003" endtime="20201030 15:56:11.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:11.317" level="INFO">${RESULT} = [{'diff': 5.637500000000087e-05}, {'diff': 5.631899999999912e-05}, {'diff': 5.638900000000044e-05}, {'diff': 5.708299999999944e-05}, {'diff': 5.708299999999944e-05}, {'diff': 5.681899999999962e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:11.314" endtime="20201030 15:56:11.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:11.322" level="INFO">${ACCURACY} = {'diff': [5.637500000000087e-05, 5.631899999999912e-05, 5.638900000000044e-05, 5.708299999999944e-05, 5.708299999999944e-05, 5.681899999999962e-05, 5.6666000000000355e-05, 5.6179999999999425e-05, 5.66...</msg>
<status status="PASS" starttime="20201030 15:56:11.318" endtime="20201030 15:56:11.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.326" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 15:56:11.325" endtime="20201030 15:56:11.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.332" level="INFO">VALUE: [5.637500000000087e-05, 5.631899999999912e-05, 5.638900000000044e-05, 5.708299999999944e-05, 5.708299999999944e-05, 5.681899999999962e-05, 5.6666000000000355e-05, 5.6179999999999425e-05, 5.662499999999765e-05, 5.6902000000001035e-05, 5.6652000000000785e-05, 5.691700000000008e-05, 5.6264000000000314e-05, 5.663900000000069e-05, 5.615299999999976e-05, 5.612500000000062e-05, 5.66809999999994e-05, 5.7000000000001494e-05, 5.6791999999999954e-05, 5.6401999999997066e-05, 5.657000000000231e-05, 5.637500000000087e-05, 5.640300000000001e-05, 5.687500000000137e-05, 5.677700000000091e-05, 5.6500000000000994e-05, 5.611099999999758e-05, 5.6443999999999245e-05, 5.6778000000000384e-05, 5.6693999999999495e-05, 5.6708000000002534e-05, 5.7014000000001064e-05, 5.640300000000001e-05, 5.6194000000002464e-05, 5.669499999999897e-05, 5.612500000000062e-05, 5.669499999999897e-05, 5.6569999999998843e-05, 5.630600000000249e-05, 5.6764000000000814e-05, 5.6722000000002104e-05, 5.613900000000019e-05, 5.7069999999999343e-05, 5.66809999999994e-05, 5.7013999999997594e-05, 5.6319999999998593e-05, 5.676299999999787e-05, 5.6207999999998565e-05, 5.683299999999919e-05, 5.663900000000069e-05]</msg>
<status status="PASS" starttime="20201030 15:56:11.327" endtime="20201030 15:56:11.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.322" endtime="20201030 15:56:11.334"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:11.337" endtime="20201030 15:56:11.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.336" endtime="20201030 15:56:11.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.335" endtime="20201030 15:56:11.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.969" endtime="20201030 15:56:11.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.968" endtime="20201030 15:56:11.358"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.367" endtime="20201030 15:56:11.386"></status>
</kw>
<msg timestamp="20201030 15:56:11.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.366" endtime="20201030 15:56:11.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.388" endtime="20201030 15:56:11.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.390" endtime="20201030 15:56:11.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.363" endtime="20201030 15:56:11.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.361" endtime="20201030 15:56:11.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.400" endtime="20201030 15:56:11.686"></status>
</kw>
<msg timestamp="20201030 15:56:11.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020540347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020597583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.398" endtime="20201030 15:56:11.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020540347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020597583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.690" endtime="20201030 15:56:11.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.699" endtime="20201030 15:56:11.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.395" endtime="20201030 15:56:11.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.394" endtime="20201030 15:56:11.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:11.706" level="INFO">${RESULT} = [{'diff': 5.7235999999998705e-05}, {'diff': 5.73749999999984e-05}, {'diff': 5.7457999999999815e-05}, {'diff': 5.80689999999974e-05}, {'diff': 5.7792000000000954e-05}, {'diff': 5.7958000000000315e-05},...</msg>
<status status="PASS" starttime="20201030 15:56:11.703" endtime="20201030 15:56:11.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:11.758" level="INFO">${ACCURACY} = {'diff': [5.7235999999998705e-05, 5.73749999999984e-05, 5.7457999999999815e-05, 5.80689999999974e-05, 5.7792000000000954e-05, 5.7958000000000315e-05, 5.808300000000044e-05, 5.759699999999951e-05, 5.79...</msg>
<status status="PASS" starttime="20201030 15:56:11.707" endtime="20201030 15:56:11.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.763" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 15:56:11.762" endtime="20201030 15:56:11.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.766" level="INFO">VALUE: [5.7235999999998705e-05, 5.73749999999984e-05, 5.7457999999999815e-05, 5.80689999999974e-05, 5.7792000000000954e-05, 5.7958000000000315e-05, 5.808300000000044e-05, 5.759699999999951e-05, 5.7986000000002924e-05, 5.7444000000000245e-05, 5.740300000000101e-05, 5.784699999999976e-05, 5.744500000000319e-05, 5.743100000000015e-05, 5.766699999999736e-05, 5.794500000000022e-05, 5.7569999999999844e-05, 5.794500000000022e-05, 5.73749999999984e-05, 5.773699999999868e-05, 5.7943999999997275e-05, 5.8013999999998594e-05, 5.711100000000205e-05, 5.816700000000133e-05, 5.781900000000062e-05, 5.805499999999783e-05, 5.7694000000000495e-05, 5.7166000000000855e-05, 5.734699999999926e-05, 5.7250000000001744e-05, 5.763899999999822e-05, 5.73749999999984e-05, 5.7513999999998094e-05, 5.719499999999947e-05, 5.793100000000065e-05, 5.711100000000205e-05, 5.713900000000119e-05, 5.78749999999989e-05, 5.8013999999998594e-05, 5.709799999999848e-05, 5.7833999999999663e-05, 5.7999999999999025e-05, 5.7750000000002244e-05, 5.783300000000019e-05, 5.7679999999997456e-05, 5.763900000000169e-05, 5.7930000000001175e-05, 5.737500000000187e-05, 5.709699999999901e-05, 5.734699999999926e-05]</msg>
<status status="PASS" starttime="20201030 15:56:11.764" endtime="20201030 15:56:11.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.759" endtime="20201030 15:56:11.767"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:11.771" endtime="20201030 15:56:11.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.770" endtime="20201030 15:56:11.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.768" endtime="20201030 15:56:11.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.359" endtime="20201030 15:56:11.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.359" endtime="20201030 15:56:11.792"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.801" endtime="20201030 15:56:11.819"></status>
</kw>
<msg timestamp="20201030 15:56:11.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.799" endtime="20201030 15:56:11.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.821" endtime="20201030 15:56:11.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.823" endtime="20201030 15:56:11.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.797" endtime="20201030 15:56:11.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.794" endtime="20201030 15:56:11.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.833" endtime="20201030 15:56:12.118"></status>
</kw>
<msg timestamp="20201030 15:56:12.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020110806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020169333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.831" endtime="20201030 15:56:12.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020110806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020169333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.123" endtime="20201030 15:56:12.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.131" endtime="20201030 15:56:12.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.828" endtime="20201030 15:56:12.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.827" endtime="20201030 15:56:12.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:12.138" level="INFO">${RESULT} = [{'diff': 5.852700000000266e-05}, {'diff': 5.881900000000162e-05}, {'diff': 5.905499999999883e-05}, {'diff': 5.838900000000244e-05}, {'diff': 5.834700000000026e-05}, {'diff': 5.8694000000001495e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:12.134" endtime="20201030 15:56:12.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:12.142" level="INFO">${ACCURACY} = {'diff': [5.852700000000266e-05, 5.881900000000162e-05, 5.905499999999883e-05, 5.838900000000244e-05, 5.834700000000026e-05, 5.8694000000001495e-05, 5.8235999999999705e-05, 5.8528000000002134e-05, 5.8...</msg>
<status status="PASS" starttime="20201030 15:56:12.139" endtime="20201030 15:56:12.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.147" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 15:56:12.146" endtime="20201030 15:56:12.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.150" level="INFO">VALUE: [5.852700000000266e-05, 5.881900000000162e-05, 5.905499999999883e-05, 5.838900000000244e-05, 5.834700000000026e-05, 5.8694000000001495e-05, 5.8235999999999705e-05, 5.8528000000002134e-05, 5.8500000000002994e-05, 5.897299999999689e-05, 5.844500000000072e-05, 5.822299999999961e-05, 5.888899999999947e-05, 5.8250000000002744e-05, 5.86810000000014e-05, 5.8222000000000135e-05, 5.848699999999943e-05, 5.890299999999904e-05, 5.8194000000000995e-05, 5.8528000000002134e-05, 5.838900000000244e-05, 5.881899999999815e-05, 5.840299999999854e-05, 5.8679999999998456e-05, 5.8263999999998844e-05, 5.8249999999999275e-05, 5.836099999999983e-05, 5.8972000000000885e-05, 5.886100000000033e-05, 5.8306000000001024e-05, 5.8971999999997415e-05, 5.862499999999965e-05, 5.9069999999997874e-05, 5.8736000000000205e-05, 5.8083999999999913e-05, 5.861100000000008e-05, 5.8320000000000594e-05, 5.843099999999768e-05, 5.88749999999999e-05, 5.859700000000051e-05, 5.905499999999883e-05, 5.88749999999999e-05, 5.836099999999983e-05, 5.8778000000002384e-05, 5.861100000000008e-05, 5.8249999999999275e-05, 5.8958000000001315e-05, 5.8722000000000635e-05, 5.8222000000000135e-05, 5.8693999999998026e-05]</msg>
<status status="PASS" starttime="20201030 15:56:12.149" endtime="20201030 15:56:12.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.143" endtime="20201030 15:56:12.152"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:12.155" endtime="20201030 15:56:12.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.154" endtime="20201030 15:56:12.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.153" endtime="20201030 15:56:12.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.793" endtime="20201030 15:56:12.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.792" endtime="20201030 15:56:12.176"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.186" endtime="20201030 15:56:12.205"></status>
</kw>
<msg timestamp="20201030 15:56:12.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.185" endtime="20201030 15:56:12.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.207" endtime="20201030 15:56:12.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.210" endtime="20201030 15:56:12.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.182" endtime="20201030 15:56:12.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.179" endtime="20201030 15:56:12.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.219" endtime="20201030 15:56:12.506"></status>
</kw>
<msg timestamp="20201030 15:56:12.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218995, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:56:12.218" endtime="20201030 15:56:12.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021839917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218995, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:56:12.512" endtime="20201030 15:56:12.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.521" endtime="20201030 15:56:12.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.215" endtime="20201030 15:56:12.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.213" endtime="20201030 15:56:12.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:12.527" level="INFO">${RESULT} = [{'diff': 5.958299999999847e-05}, {'diff': 5.987499999999743e-05}, {'diff': 5.9527999999999665e-05}, {'diff': 5.9750000000000775e-05}, {'diff': 6.0028000000000165e-05}, {'diff': 5.963899999999675e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:12.524" endtime="20201030 15:56:12.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:12.533" level="INFO">${ACCURACY} = {'diff': [5.958299999999847e-05, 5.987499999999743e-05, 5.9527999999999665e-05, 5.9750000000000775e-05, 6.0028000000000165e-05, 5.963899999999675e-05, 5.9805999999999054e-05, 6.0000000000001025e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:56:12.528" endtime="20201030 15:56:12.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.537" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 15:56:12.536" endtime="20201030 15:56:12.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.540" level="INFO">VALUE: [5.958299999999847e-05, 5.987499999999743e-05, 5.9527999999999665e-05, 5.9750000000000775e-05, 6.0028000000000165e-05, 5.963899999999675e-05, 5.9805999999999054e-05, 6.0000000000001025e-05, 5.913899999999972e-05, 5.9334000000001164e-05, 5.981899999999915e-05, 5.968099999999893e-05, 5.981899999999915e-05, 5.9402000000000066e-05, 5.911100000000058e-05, 5.965299999999979e-05, 5.95689999999989e-05, 5.9486000000000955e-05, 5.9750000000000775e-05, 5.9263999999999845e-05, 5.944500000000172e-05, 5.9179999999998956e-05, 5.9236000000000705e-05, 6.0041999999999734e-05, 5.9277999999999414e-05, 5.945899999999782e-05, 5.9486000000000955e-05, 5.9833999999998194e-05, 5.9652000000000316e-05, 5.977699999999697e-05, 5.9194999999998e-05, 5.9443999999998776e-05, 5.9430000000002675e-05, 6.0056000000002774e-05, 5.9165999999999386e-05, 5.981899999999915e-05, 5.966700000000283e-05, 6.0000000000001025e-05, 5.963900000000022e-05, 5.9486000000000955e-05, 5.93750000000004e-05, 5.9458000000001815e-05, 5.98750000000009e-05, 5.96810000000024e-05, 5.945900000000129e-05, 5.9499999999997055e-05, 6.0013999999997125e-05, 5.9791999999999484e-05, 5.934700000000126e-05, 5.9527999999999665e-05]</msg>
<status status="PASS" starttime="20201030 15:56:12.538" endtime="20201030 15:56:12.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.533" endtime="20201030 15:56:12.541"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:12.545" endtime="20201030 15:56:12.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.543" endtime="20201030 15:56:12.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.542" endtime="20201030 15:56:12.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.177" endtime="20201030 15:56:12.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.177" endtime="20201030 15:56:12.566"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.575" endtime="20201030 15:56:12.593"></status>
</kw>
<msg timestamp="20201030 15:56:12.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.573" endtime="20201030 15:56:12.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.595" endtime="20201030 15:56:12.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.597" endtime="20201030 15:56:12.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.571" endtime="20201030 15:56:12.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.568" endtime="20201030 15:56:12.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.607" endtime="20201030 15:56:12.895"></status>
</kw>
<msg timestamp="20201030 15:56:12.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020204694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020265528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.605" endtime="20201030 15:56:12.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020204694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020265528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.899" endtime="20201030 15:56:12.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.907" endtime="20201030 15:56:12.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.602" endtime="20201030 15:56:12.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.601" endtime="20201030 15:56:12.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:12.915" level="INFO">${RESULT} = [{'diff': 6.0834000000002664e-05}, {'diff': 6.06949999999995e-05}, {'diff': 6.1014000000001595e-05}, {'diff': 6.0443999999999776e-05}, {'diff': 6.041700000000011e-05}, {'diff': 6.0207999999999096e-05}...</msg>
<status status="PASS" starttime="20201030 15:56:12.912" endtime="20201030 15:56:12.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:12.920" level="INFO">${ACCURACY} = {'diff': [6.0834000000002664e-05, 6.06949999999995e-05, 6.1014000000001595e-05, 6.0443999999999776e-05, 6.041700000000011e-05, 6.0207999999999096e-05, 6.0694000000000026e-05, 6.0806000000000054e-05, 6...</msg>
<status status="PASS" starttime="20201030 15:56:12.916" endtime="20201030 15:56:12.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.924" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 15:56:12.923" endtime="20201030 15:56:12.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.927" level="INFO">VALUE: [6.0834000000002664e-05, 6.06949999999995e-05, 6.1014000000001595e-05, 6.0443999999999776e-05, 6.041700000000011e-05, 6.0207999999999096e-05, 6.0694000000000026e-05, 6.0806000000000054e-05, 6.081899999999668e-05, 6.0819999999999624e-05, 6.0694000000000026e-05, 6.0930000000000706e-05, 6.0764000000001345e-05, 6.0930000000000706e-05, 6.063900000000122e-05, 6.10690000000004e-05, 6.0250000000001275e-05, 6.0513999999997625e-05, 6.0749999999998305e-05, 6.094499999999975e-05, 6.0514000000001095e-05, 6.0513999999997625e-05, 6.097299999999889e-05, 6.0485999999998485e-05, 6.0485999999998485e-05, 6.012500000000115e-05, 6.0750000000001775e-05, 6.0999999999998555e-05, 6.0250000000001275e-05, 6.0444000000003245e-05, 6.0320000000002594e-05, 6.081900000000015e-05, 6.108299999999997e-05, 6.015300000000029e-05, 6.0236000000001705e-05, 6.0250000000001275e-05, 6.0721999999999166e-05, 6.095900000000279e-05, 6.094499999999975e-05, 6.066700000000036e-05, 6.0999999999998555e-05, 6.044499999999925e-05, 6.0250000000001275e-05, 6.0542000000000235e-05, 6.0834000000002664e-05, 6.055500000000033e-05, 6.0806000000000054e-05, 6.0999999999998555e-05, 6.043099999999968e-05, 6.0249999999997805e-05]</msg>
<status status="PASS" starttime="20201030 15:56:12.926" endtime="20201030 15:56:12.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.921" endtime="20201030 15:56:12.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:12.932" endtime="20201030 15:56:12.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.931" endtime="20201030 15:56:12.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.930" endtime="20201030 15:56:12.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.567" endtime="20201030 15:56:12.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.566" endtime="20201030 15:56:12.953"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.962" endtime="20201030 15:56:12.982"></status>
</kw>
<msg timestamp="20201030 15:56:12.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.960" endtime="20201030 15:56:12.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.984" endtime="20201030 15:56:12.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.986" endtime="20201030 15:56:12.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.958" endtime="20201030 15:56:12.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.956" endtime="20201030 15:56:12.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.996" endtime="20201030 15:56:13.283"></status>
</kw>
<msg timestamp="20201030 15:56:13.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021235472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021297306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.994" endtime="20201030 15:56:13.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021235472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021297306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.288" endtime="20201030 15:56:13.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.296" endtime="20201030 15:56:13.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.991" endtime="20201030 15:56:13.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.990" endtime="20201030 15:56:13.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:13.303" level="INFO">${RESULT} = [{'diff': 6.18340000000002e-05}, {'diff': 6.17499999999993e-05}, {'diff': 6.165199999999885e-05}, {'diff': 6.187499999999943e-05}, {'diff': 6.181900000000115e-05}, {'diff': 6.129200000000098e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:13.300" endtime="20201030 15:56:13.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:13.307" level="INFO">${ACCURACY} = {'diff': [6.18340000000002e-05, 6.17499999999993e-05, 6.165199999999885e-05, 6.187499999999943e-05, 6.181900000000115e-05, 6.129200000000098e-05, 6.20829999999975e-05, 6.192999999999824e-05, 6.1290999...</msg>
<status status="PASS" starttime="20201030 15:56:13.304" endtime="20201030 15:56:13.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.313" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 15:56:13.311" endtime="20201030 15:56:13.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.316" level="INFO">VALUE: [6.18340000000002e-05, 6.17499999999993e-05, 6.165199999999885e-05, 6.187499999999943e-05, 6.181900000000115e-05, 6.129200000000098e-05, 6.20829999999975e-05, 6.192999999999824e-05, 6.129099999999804e-05, 6.14439999999973e-05, 6.137499999999893e-05, 6.187499999999943e-05, 6.183300000000072e-05, 6.186099999999986e-05, 6.134699999999979e-05, 6.158399999999994e-05, 6.143100000000068e-05, 6.186099999999986e-05, 6.16950000000005e-05, 6.20560000000013e-05, 6.176400000000234e-05, 6.194499999999728e-05, 6.197299999999989e-05, 6.207000000000087e-05, 6.20829999999975e-05, 6.145800000000035e-05, 6.12499999999988e-05, 6.181900000000115e-05, 6.127800000000141e-05, 6.129100000000151e-05, 6.152800000000166e-05, 6.126400000000184e-05, 6.204099999999879e-05, 6.173599999999974e-05, 6.116700000000086e-05, 6.165299999999832e-05, 6.118100000000043e-05, 6.17499999999993e-05, 6.115300000000129e-05, 6.155599999999734e-05, 6.136099999999936e-05, 6.118100000000043e-05, 6.151399999999863e-05, 6.168100000000093e-05, 6.187499999999943e-05, 6.194400000000128e-05, 6.12080000000001e-05, 6.170799999999713e-05, 6.111099999999911e-05, 6.19439999999978e-05]</msg>
<status status="PASS" starttime="20201030 15:56:13.314" endtime="20201030 15:56:13.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.308" endtime="20201030 15:56:13.318"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:13.322" endtime="20201030 15:56:13.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.320" endtime="20201030 15:56:13.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.319" endtime="20201030 15:56:13.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.954" endtime="20201030 15:56:13.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.953" endtime="20201030 15:56:13.342"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.351" endtime="20201030 15:56:13.370"></status>
</kw>
<msg timestamp="20201030 15:56:13.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.350" endtime="20201030 15:56:13.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.372" endtime="20201030 15:56:13.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.374" endtime="20201030 15:56:13.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.347" endtime="20201030 15:56:13.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.345" endtime="20201030 15:56:13.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.384" endtime="20201030 15:56:13.670"></status>
</kw>
<msg timestamp="20201030 15:56:13.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020204417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020267236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.382" endtime="20201030 15:56:13.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020204417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020267236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.675" endtime="20201030 15:56:13.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.683" endtime="20201030 15:56:13.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.379" endtime="20201030 15:56:13.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.377" endtime="20201030 15:56:13.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:13.690" level="INFO">${RESULT} = [{'diff': 6.281900000000215e-05}, {'diff': 6.231899999999818e-05}, {'diff': 6.255499999999886e-05}, {'diff': 6.276399999999988e-05}, {'diff': 6.286100000000086e-05}, {'diff': 6.237499999999993e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:13.686" endtime="20201030 15:56:13.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:13.695" level="INFO">${ACCURACY} = {'diff': [6.281900000000215e-05, 6.231899999999818e-05, 6.255499999999886e-05, 6.276399999999988e-05, 6.286100000000086e-05, 6.237499999999993e-05, 6.23750000000034e-05, 6.287500000000043e-05, 6.24170...</msg>
<status status="PASS" starttime="20201030 15:56:13.691" endtime="20201030 15:56:13.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.700" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 15:56:13.699" endtime="20201030 15:56:13.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.702" level="INFO">VALUE: [6.281900000000215e-05, 6.231899999999818e-05, 6.255499999999886e-05, 6.276399999999988e-05, 6.286100000000086e-05, 6.237499999999993e-05, 6.23750000000034e-05, 6.287500000000043e-05, 6.241700000000211e-05, 6.230599999999809e-05, 6.276399999999988e-05, 6.280599999999859e-05, 6.265199999999985e-05, 6.232000000000112e-05, 6.287500000000043e-05, 6.229199999999852e-05, 6.263899999999975e-05, 6.30279999999997e-05, 6.263900000000322e-05, 6.269399999999856e-05, 6.287500000000043e-05, 6.295799999999838e-05, 6.255500000000233e-05, 6.297199999999795e-05, 6.298600000000099e-05, 6.244500000000125e-05, 6.238900000000297e-05, 6.212499999999968e-05, 6.243100000000168e-05, 6.237499999999993e-05, 6.293100000000218e-05, 6.236199999999983e-05, 6.243099999999821e-05, 6.29439999999988e-05, 6.281899999999868e-05, 6.299999999999709e-05, 6.276399999999988e-05, 6.231900000000165e-05, 6.263899999999975e-05, 6.2889e-05, 6.220799999999763e-05, 6.22080000000011e-05, 6.24300000000022e-05, 6.29439999999988e-05, 6.276399999999988e-05, 6.2889e-05, 6.212499999999968e-05, 6.248600000000049e-05, 6.2889e-05, 6.273600000000074e-05]</msg>
<status status="PASS" starttime="20201030 15:56:13.701" endtime="20201030 15:56:13.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.696" endtime="20201030 15:56:13.704"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:13.707" endtime="20201030 15:56:13.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.706" endtime="20201030 15:56:13.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.705" endtime="20201030 15:56:13.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.343" endtime="20201030 15:56:13.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.343" endtime="20201030 15:56:13.728"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.737" endtime="20201030 15:56:13.756"></status>
</kw>
<msg timestamp="20201030 15:56:13.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.736" endtime="20201030 15:56:13.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.758" endtime="20201030 15:56:13.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.761" endtime="20201030 15:56:13.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.733" endtime="20201030 15:56:13.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.731" endtime="20201030 15:56:13.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.770" endtime="20201030 15:56:14.057"></status>
</kw>
<msg timestamp="20201030 15:56:14.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020354764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020418736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.769" endtime="20201030 15:56:14.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020354764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020418736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.062" endtime="20201030 15:56:14.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.070" endtime="20201030 15:56:14.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.766" endtime="20201030 15:56:14.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.764" endtime="20201030 15:56:14.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:14.077" level="INFO">${RESULT} = [{'diff': 6.397199999999895e-05}, {'diff': 6.404100000000079e-05}, {'diff': 6.367999999999999e-05}, {'diff': 6.326400000000038e-05}, {'diff': 6.405500000000036e-05}, {'diff': 6.313899999999678e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:14.074" endtime="20201030 15:56:14.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:14.082" level="INFO">${ACCURACY} = {'diff': [6.397199999999895e-05, 6.404100000000079e-05, 6.367999999999999e-05, 6.326400000000038e-05, 6.405500000000036e-05, 6.313899999999678e-05, 6.400000000000156e-05, 6.387500000000143e-05, 6.3250...</msg>
<status status="PASS" starttime="20201030 15:56:14.078" endtime="20201030 15:56:14.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.086" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 15:56:14.085" endtime="20201030 15:56:14.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.089" level="INFO">VALUE: [6.397199999999895e-05, 6.404100000000079e-05, 6.367999999999999e-05, 6.326400000000038e-05, 6.405500000000036e-05, 6.313899999999678e-05, 6.400000000000156e-05, 6.387500000000143e-05, 6.32500000000008e-05, 6.380599999999959e-05, 6.32219999999982e-05, 6.337500000000093e-05, 6.336100000000136e-05, 6.355599999999934e-05, 6.405599999999984e-05, 6.313900000000025e-05, 6.33890000000005e-05, 6.387499999999796e-05, 6.381899999999968e-05, 6.337500000000093e-05, 6.32500000000008e-05, 6.405500000000036e-05, 6.33890000000005e-05, 6.386100000000186e-05, 6.313900000000025e-05, 6.312500000000068e-05, 6.363900000000075e-05, 6.368099999999946e-05, 6.37089999999986e-05, 6.315299999999982e-05, 6.336100000000136e-05, 6.337500000000093e-05, 6.372200000000217e-05, 6.37500000000013e-05, 6.338799999999756e-05, 6.356899999999943e-05, 6.324999999999734e-05, 6.398599999999852e-05, 6.32500000000008e-05, 6.361099999999814e-05, 6.39439999999998e-05, 6.355499999999986e-05, 6.406899999999993e-05, 6.333300000000222e-05, 6.344400000000278e-05, 6.387500000000143e-05, 6.37219999999987e-05, 6.397199999999895e-05, 6.373599999999827e-05, 6.380600000000305e-05]</msg>
<status status="PASS" starttime="20201030 15:56:14.087" endtime="20201030 15:56:14.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.082" endtime="20201030 15:56:14.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:14.094" endtime="20201030 15:56:14.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.092" endtime="20201030 15:56:14.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.091" endtime="20201030 15:56:14.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.729" endtime="20201030 15:56:14.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.729" endtime="20201030 15:56:14.115"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.124" endtime="20201030 15:56:14.144"></status>
</kw>
<msg timestamp="20201030 15:56:14.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.123" endtime="20201030 15:56:14.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.146" endtime="20201030 15:56:14.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.148" endtime="20201030 15:56:14.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.120" endtime="20201030 15:56:14.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.118" endtime="20201030 15:56:14.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.158" endtime="20201030 15:56:14.444"></status>
</kw>
<msg timestamp="20201030 15:56:14.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021636792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217015, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:56:14.156" endtime="20201030 15:56:14.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021636792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217015, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:56:14.448" endtime="20201030 15:56:14.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.456" endtime="20201030 15:56:14.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.154" endtime="20201030 15:56:14.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.152" endtime="20201030 15:56:14.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:14.463" level="INFO">${RESULT} = [{'diff': 6.470800000000013e-05}, {'diff': 6.411099999999864e-05}, {'diff': 6.427800000000095e-05}, {'diff': 6.430600000000009e-05}, {'diff': 6.482000000000016e-05}, {'diff': 6.463900000000175e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:14.460" endtime="20201030 15:56:14.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:14.468" level="INFO">${ACCURACY} = {'diff': [6.470800000000013e-05, 6.411099999999864e-05, 6.427800000000095e-05, 6.430600000000009e-05, 6.482000000000016e-05, 6.463900000000175e-05, 6.412500000000168e-05, 6.415300000000082e-05, 6.4236...</msg>
<status status="PASS" starttime="20201030 15:56:14.464" endtime="20201030 15:56:14.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.472" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 15:56:14.471" endtime="20201030 15:56:14.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.476" level="INFO">VALUE: [6.470800000000013e-05, 6.411099999999864e-05, 6.427800000000095e-05, 6.430600000000009e-05, 6.482000000000016e-05, 6.463900000000175e-05, 6.412500000000168e-05, 6.415300000000082e-05, 6.423600000000224e-05, 6.487500000000243e-05, 6.42500000000018e-05, 6.427800000000095e-05, 6.413899999999778e-05, 6.47639999999984e-05, 6.477799999999798e-05, 6.436099999999889e-05, 6.445799999999988e-05, 6.437499999999846e-05, 6.450000000000206e-05, 6.486099999999939e-05, 6.413900000000125e-05, 6.480600000000059e-05, 6.494500000000028e-05, 6.50700000000004e-05, 6.493100000000071e-05, 6.451400000000163e-05, 6.423600000000224e-05, 6.426400000000138e-05, 6.500000000000256e-05, 6.420799999999963e-05, 6.447200000000292e-05, 6.420799999999963e-05, 6.498599999999952e-05, 6.459699999999957e-05, 6.476400000000188e-05, 6.488899999999853e-05, 6.462499999999871e-05, 6.449999999999859e-05, 6.456900000000043e-05, 6.449999999999859e-05, 6.431999999999966e-05, 6.491700000000114e-05, 6.482000000000016e-05, 6.462499999999871e-05, 6.455599999999687e-05, 6.437499999999846e-05, 6.430600000000009e-05, 6.482000000000016e-05, 6.463900000000175e-05, 6.413900000000125e-05]</msg>
<status status="PASS" starttime="20201030 15:56:14.473" endtime="20201030 15:56:14.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.468" endtime="20201030 15:56:14.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:14.487" endtime="20201030 15:56:14.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.485" endtime="20201030 15:56:14.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.484" endtime="20201030 15:56:14.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.116" endtime="20201030 15:56:14.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.115" endtime="20201030 15:56:14.508"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.518" endtime="20201030 15:56:14.537"></status>
</kw>
<msg timestamp="20201030 15:56:14.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.516" endtime="20201030 15:56:14.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.539" endtime="20201030 15:56:14.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.541" endtime="20201030 15:56:14.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.514" endtime="20201030 15:56:14.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.511" endtime="20201030 15:56:14.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.550" endtime="20201030 15:56:14.837"></status>
</kw>
<msg timestamp="20201030 15:56:14.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021823986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021889861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.549" endtime="20201030 15:56:14.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021823986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021889861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.841" endtime="20201030 15:56:14.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.849" endtime="20201030 15:56:14.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.546" endtime="20201030 15:56:14.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.544" endtime="20201030 15:56:14.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:14.856" level="INFO">${RESULT} = [{'diff': 6.587499999999996e-05}, {'diff': 6.529200000000152e-05}, {'diff': 6.562499999999971e-05}, {'diff': 6.547200000000045e-05}, {'diff': 6.534699999999685e-05}, {'diff': 6.59029999999991e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:14.853" endtime="20201030 15:56:14.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:14.861" level="INFO">${ACCURACY} = {'diff': [6.587499999999996e-05, 6.529200000000152e-05, 6.562499999999971e-05, 6.547200000000045e-05, 6.534699999999685e-05, 6.59029999999991e-05, 6.556899999999796e-05, 6.592999999999877e-05, 6.57360...</msg>
<status status="PASS" starttime="20201030 15:56:14.857" endtime="20201030 15:56:14.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.866" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 15:56:14.865" endtime="20201030 15:56:14.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.869" level="INFO">VALUE: [6.587499999999996e-05, 6.529200000000152e-05, 6.562499999999971e-05, 6.547200000000045e-05, 6.534699999999685e-05, 6.59029999999991e-05, 6.556899999999796e-05, 6.592999999999877e-05, 6.573600000000027e-05, 6.57639999999994e-05, 6.537499999999946e-05, 6.579199999999855e-05, 6.583400000000073e-05, 6.537499999999946e-05, 6.543100000000121e-05, 6.594500000000128e-05, 6.605599999999837e-05, 6.554099999999882e-05, 6.533300000000075e-05, 6.538899999999903e-05, 6.599999999999662e-05, 6.52220000000002e-05, 6.545800000000088e-05, 6.538899999999903e-05, 6.511099999999964e-05, 6.551399999999916e-05, 6.548600000000002e-05, 6.52500000000028e-05, 6.574999999999984e-05, 6.561100000000014e-05, 6.558400000000048e-05, 6.54029999999986e-05, 6.543099999999774e-05, 6.586100000000039e-05, 6.583400000000073e-05, 6.545900000000035e-05, 6.529100000000204e-05, 6.591699999999867e-05, 6.537499999999946e-05, 6.542999999999827e-05, 6.524999999999934e-05, 6.563899999999928e-05, 6.531900000000118e-05, 6.527800000000195e-05, 6.568000000000199e-05, 6.583300000000125e-05, 6.573600000000027e-05, 6.601399999999966e-05, 6.580600000000159e-05, 6.512499999999921e-05]</msg>
<status status="PASS" starttime="20201030 15:56:14.867" endtime="20201030 15:56:14.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.862" endtime="20201030 15:56:14.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:14.874" endtime="20201030 15:56:14.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.872" endtime="20201030 15:56:14.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.871" endtime="20201030 15:56:14.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.509" endtime="20201030 15:56:14.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.508" endtime="20201030 15:56:14.895"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.904" endtime="20201030 15:56:14.924"></status>
</kw>
<msg timestamp="20201030 15:56:14.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.902" endtime="20201030 15:56:14.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.925" endtime="20201030 15:56:14.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.928" endtime="20201030 15:56:14.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.899" endtime="20201030 15:56:14.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.897" endtime="20201030 15:56:14.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.937" endtime="20201030 15:56:15.227"></status>
</kw>
<msg timestamp="20201030 15:56:15.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020155514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020222097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.935" endtime="20201030 15:56:15.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020155514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020222097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:15.232" endtime="20201030 15:56:15.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.240" endtime="20201030 15:56:15.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.933" endtime="20201030 15:56:15.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.931" endtime="20201030 15:56:15.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:15.247" level="INFO">${RESULT} = [{'diff': 6.6583000000002e-05}, {'diff': 6.688900000000053e-05}, {'diff': 6.64029999999996e-05}, {'diff': 6.662500000000071e-05}, {'diff': 6.651400000000016e-05}, {'diff': 6.702800000000023e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:56:15.244" endtime="20201030 15:56:15.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:15.251" level="INFO">${ACCURACY} = {'diff': [6.6583000000002e-05, 6.688900000000053e-05, 6.64029999999996e-05, 6.662500000000071e-05, 6.651400000000016e-05, 6.702800000000023e-05, 6.697199999999848e-05, 6.655499999999939e-05, 6.6958000...</msg>
<status status="PASS" starttime="20201030 15:56:15.248" endtime="20201030 15:56:15.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.256" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 15:56:15.255" endtime="20201030 15:56:15.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.259" level="INFO">VALUE: [6.6583000000002e-05, 6.688900000000053e-05, 6.64029999999996e-05, 6.662500000000071e-05, 6.651400000000016e-05, 6.702800000000023e-05, 6.697199999999848e-05, 6.655499999999939e-05, 6.695800000000238e-05, 6.706999999999894e-05, 6.680599999999912e-05, 6.650000000000059e-05, 6.62639999999999e-05, 6.662500000000071e-05, 6.636200000000037e-05, 6.698599999999805e-05, 6.613899999999978e-05, 6.690200000000063e-05, 6.682000000000216e-05, 6.701400000000066e-05, 6.650000000000059e-05, 6.64029999999996e-05, 6.642999999999927e-05, 6.64029999999996e-05, 6.625000000000034e-05, 6.648599999999755e-05, 6.697199999999848e-05, 6.680599999999912e-05, 6.687500000000096e-05, 6.694499999999881e-05, 6.669500000000203e-05, 6.668099999999899e-05, 6.625000000000034e-05, 6.644500000000178e-05, 6.682000000000216e-05, 6.67640000000004e-05, 6.693099999999924e-05, 6.662500000000071e-05, 6.67640000000004e-05, 6.634699999999785e-05, 6.661100000000114e-05, 6.687500000000096e-05, 6.619400000000206e-05, 6.688900000000053e-05, 6.666699999999942e-05, 6.651400000000016e-05, 6.631999999999819e-05, 6.693099999999924e-05, 6.686100000000139e-05, 6.619400000000206e-05]</msg>
<status status="PASS" starttime="20201030 15:56:15.257" endtime="20201030 15:56:15.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.252" endtime="20201030 15:56:15.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:15.264" endtime="20201030 15:56:15.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.262" endtime="20201030 15:56:15.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.261" endtime="20201030 15:56:15.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.896" endtime="20201030 15:56:15.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.895" endtime="20201030 15:56:15.285"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.294" endtime="20201030 15:56:15.315"></status>
</kw>
<msg timestamp="20201030 15:56:15.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.292" endtime="20201030 15:56:15.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.317" endtime="20201030 15:56:15.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.319" endtime="20201030 15:56:15.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.289" endtime="20201030 15:56:15.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.287" endtime="20201030 15:56:15.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.329" endtime="20201030 15:56:15.614"></status>
</kw>
<msg timestamp="20201030 15:56:15.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021147139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021214792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:15.327" endtime="20201030 15:56:15.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021147139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021214792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:15.618" endtime="20201030 15:56:15.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.627" endtime="20201030 15:56:15.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.324" endtime="20201030 15:56:15.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.323" endtime="20201030 15:56:15.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:15.634" level="INFO">${RESULT} = [{'diff': 6.765300000000085e-05}, {'diff': 6.718100000000296e-05}, {'diff': 6.802700000000175e-05}, {'diff': 6.711099999999817e-05}, {'diff': 6.775000000000184e-05}, {'diff': 6.794400000000034e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:15.630" endtime="20201030 15:56:15.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:15.638" level="INFO">${ACCURACY} = {'diff': [6.765300000000085e-05, 6.718100000000296e-05, 6.802700000000175e-05, 6.711099999999817e-05, 6.775000000000184e-05, 6.794400000000034e-05, 6.737500000000146e-05, 6.784699999999935e-05, 6.7514...</msg>
<status status="PASS" starttime="20201030 15:56:15.635" endtime="20201030 15:56:15.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.642" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 15:56:15.641" endtime="20201030 15:56:15.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.645" level="INFO">VALUE: [6.765300000000085e-05, 6.718100000000296e-05, 6.802700000000175e-05, 6.711099999999817e-05, 6.775000000000184e-05, 6.794400000000034e-05, 6.737500000000146e-05, 6.784699999999935e-05, 6.751400000000116e-05, 6.733299999999928e-05, 6.770799999999966e-05, 6.805499999999742e-05, 6.744499999999931e-05, 6.716699999999992e-05, 6.781900000000021e-05, 6.715300000000035e-05, 6.788900000000153e-05, 6.722199999999873e-05, 6.783399999999926e-05, 6.730599999999962e-05, 6.790299999999763e-05, 6.781999999999969e-05, 6.72640000000009e-05, 6.719400000000306e-05, 6.775000000000184e-05, 6.73619999999979e-05, 6.784699999999935e-05, 6.751399999999769e-05, 6.773600000000227e-05, 6.795799999999991e-05, 6.713900000000078e-05, 6.801399999999819e-05, 6.738899999999756e-05, 6.726399999999744e-05, 6.801399999999819e-05, 6.775000000000184e-05, 6.737500000000146e-05, 6.736099999999842e-05, 6.804099999999785e-05, 6.731999999999919e-05, 6.711199999999765e-05, 6.73619999999979e-05, 6.729200000000005e-05, 6.726300000000143e-05, 6.766600000000095e-05, 6.756899999999996e-05, 6.743000000000027e-05, 6.793000000000077e-05, 6.805500000000089e-05, 6.729200000000005e-05]</msg>
<status status="PASS" starttime="20201030 15:56:15.644" endtime="20201030 15:56:15.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.639" endtime="20201030 15:56:15.647"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:15.651" endtime="20201030 15:56:15.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.650" endtime="20201030 15:56:15.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.648" endtime="20201030 15:56:15.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.285" endtime="20201030 15:56:15.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.285" endtime="20201030 15:56:15.672"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.681" endtime="20201030 15:56:15.701"></status>
</kw>
<msg timestamp="20201030 15:56:15.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.679" endtime="20201030 15:56:15.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.702" endtime="20201030 15:56:15.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.705" endtime="20201030 15:56:15.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.677" endtime="20201030 15:56:15.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.675" endtime="20201030 15:56:15.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.715" endtime="20201030 15:56:16.004"></status>
</kw>
<msg timestamp="20201030 15:56:16.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020426583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020494958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:15.714" endtime="20201030 15:56:16.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020426583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020494958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.008" endtime="20201030 15:56:16.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.017" endtime="20201030 15:56:16.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.710" endtime="20201030 15:56:16.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.708" endtime="20201030 15:56:16.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:16.024" level="INFO">${RESULT} = [{'diff': 6.837499999999899e-05}, {'diff': 6.851400000000216e-05}, {'diff': 6.820800000000016e-05}, {'diff': 6.905500000000189e-05}, {'diff': 6.906899999999799e-05}, {'diff': 6.827800000000148e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:16.020" endtime="20201030 15:56:16.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:16.029" level="INFO">${ACCURACY} = {'diff': [6.837499999999899e-05, 6.851400000000216e-05, 6.820800000000016e-05, 6.905500000000189e-05, 6.906899999999799e-05, 6.827800000000148e-05, 6.82359999999993e-05, 6.848599999999955e-05, 6.86389...</msg>
<status status="PASS" starttime="20201030 15:56:16.025" endtime="20201030 15:56:16.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.034" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 15:56:16.033" endtime="20201030 15:56:16.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.036" level="INFO">VALUE: [6.837499999999899e-05, 6.851400000000216e-05, 6.820800000000016e-05, 6.905500000000189e-05, 6.906899999999799e-05, 6.827800000000148e-05, 6.82359999999993e-05, 6.848599999999955e-05, 6.863899999999881e-05, 6.824999999999887e-05, 6.840199999999866e-05, 6.890299999999863e-05, 6.831900000000071e-05, 6.887499999999949e-05, 6.8584e-05, 6.897299999999995e-05, 6.841599999999823e-05, 6.901299999999971e-05, 6.89299999999983e-05, 6.868100000000099e-05, 6.822199999999973e-05, 6.843000000000127e-05, 6.858300000000053e-05, 6.812500000000221e-05, 6.880499999999817e-05, 6.824999999999887e-05, 6.826399999999844e-05, 6.843100000000074e-05, 6.901400000000266e-05, 6.88619999999994e-05, 6.877800000000198e-05, 6.869499999999709e-05, 6.90559999999979e-05, 6.880600000000112e-05, 6.87640000000024e-05, 6.881900000000121e-05, 6.895800000000091e-05, 6.87359999999998e-05, 6.893000000000177e-05, 6.89030000000021e-05, 6.880499999999817e-05, 6.820800000000016e-05, 6.870799999999719e-05, 6.838899999999856e-05, 6.844400000000084e-05, 6.833300000000028e-05, 6.822300000000267e-05, 6.880599999999765e-05, 6.857000000000044e-05, 6.845899999999988e-05]</msg>
<status status="PASS" starttime="20201030 15:56:16.035" endtime="20201030 15:56:16.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.030" endtime="20201030 15:56:16.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:16.041" endtime="20201030 15:56:16.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.040" endtime="20201030 15:56:16.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.039" endtime="20201030 15:56:16.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.673" endtime="20201030 15:56:16.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.672" endtime="20201030 15:56:16.062"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.071" endtime="20201030 15:56:16.091"></status>
</kw>
<msg timestamp="20201030 15:56:16.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.069" endtime="20201030 15:56:16.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.092" endtime="20201030 15:56:16.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.095" endtime="20201030 15:56:16.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.067" endtime="20201030 15:56:16.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.065" endtime="20201030 15:56:16.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.104" endtime="20201030 15:56:16.391"></status>
</kw>
<msg timestamp="20201030 15:56:16.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020337639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020407792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.103" endtime="20201030 15:56:16.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020337639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020407792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.396" endtime="20201030 15:56:16.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.404" endtime="20201030 15:56:16.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.100" endtime="20201030 15:56:16.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.098" endtime="20201030 15:56:16.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:16.411" level="INFO">${RESULT} = [{'diff': 7.015299999999988e-05}, {'diff': 6.966700000000242e-05}, {'diff': 6.938899999999956e-05}, {'diff': 6.970799999999819e-05}, {'diff': 6.913899999999931e-05}, {'diff': 6.951300000000021e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:16.408" endtime="20201030 15:56:16.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:16.415" level="INFO">${ACCURACY} = {'diff': [7.015299999999988e-05, 6.966700000000242e-05, 6.938899999999956e-05, 6.970799999999819e-05, 6.913899999999931e-05, 6.951300000000021e-05, 6.92640000000029e-05, 6.92909999999991e-05, 6.912499...</msg>
<status status="PASS" starttime="20201030 15:56:16.412" endtime="20201030 15:56:16.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.420" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 15:56:16.419" endtime="20201030 15:56:16.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.423" level="INFO">VALUE: [7.015299999999988e-05, 6.966700000000242e-05, 6.938899999999956e-05, 6.970799999999819e-05, 6.913899999999931e-05, 6.951300000000021e-05, 6.92640000000029e-05, 6.92909999999991e-05, 6.912499999999974e-05, 6.961100000000067e-05, 7.005499999999942e-05, 6.980599999999865e-05, 6.924999999999987e-05, 6.90970000000006e-05, 6.99030000000031e-05, 6.950000000000012e-05, 6.977799999999951e-05, 6.982000000000169e-05, 6.931999999999772e-05, 6.969400000000209e-05, 6.947199999999751e-05, 6.976399999999994e-05, 7.002700000000028e-05, 6.915199999999941e-05, 6.912499999999974e-05, 6.983299999999831e-05, 6.916599999999898e-05, 6.94299999999988e-05, 7.000000000000062e-05, 6.945800000000141e-05, 6.916700000000192e-05, 6.970799999999819e-05, 6.986099999999745e-05, 6.97909999999996e-05, 6.96109999999972e-05, 6.988900000000006e-05, 6.963899999999981e-05, 6.976399999999994e-05, 6.937499999999999e-05, 6.948599999999708e-05, 6.934700000000085e-05, 6.987500000000049e-05, 7.002700000000028e-05, 6.938899999999956e-05, 6.955499999999892e-05, 7.001400000000019e-05, 7.00970000000016e-05, 6.956899999999849e-05, 6.969499999999809e-05, 6.938899999999956e-05]</msg>
<status status="PASS" starttime="20201030 15:56:16.421" endtime="20201030 15:56:16.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.416" endtime="20201030 15:56:16.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:16.428" endtime="20201030 15:56:16.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.426" endtime="20201030 15:56:16.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.425" endtime="20201030 15:56:16.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.063" endtime="20201030 15:56:16.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.062" endtime="20201030 15:56:16.449"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.458" endtime="20201030 15:56:16.477"></status>
</kw>
<msg timestamp="20201030 15:56:16.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.456" endtime="20201030 15:56:16.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.479" endtime="20201030 15:56:16.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.482" endtime="20201030 15:56:16.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.453" endtime="20201030 15:56:16.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.451" endtime="20201030 15:56:16.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.491" endtime="20201030 15:56:16.775"></status>
</kw>
<msg timestamp="20201030 15:56:16.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021062167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021133014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.489" endtime="20201030 15:56:16.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021062167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021133014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.780" endtime="20201030 15:56:16.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.788" endtime="20201030 15:56:16.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.487" endtime="20201030 15:56:16.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.485" endtime="20201030 15:56:16.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:16.795" level="INFO">${RESULT} = [{'diff': 7.084699999999888e-05}, {'diff': 7.015299999999988e-05}, {'diff': 7.081999999999922e-05}, {'diff': 7.029200000000305e-05}, {'diff': 7.082000000000269e-05}, {'diff': 7.045799999999894e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:16.792" endtime="20201030 15:56:16.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:16.799" level="INFO">${ACCURACY} = {'diff': [7.084699999999888e-05, 7.015299999999988e-05, 7.081999999999922e-05, 7.029200000000305e-05, 7.082000000000269e-05, 7.045799999999894e-05, 7.068000000000005e-05, 7.013800000000084e-05, 7.0443...</msg>
<status status="PASS" starttime="20201030 15:56:16.796" endtime="20201030 15:56:16.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.804" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 15:56:16.803" endtime="20201030 15:56:16.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.806" level="INFO">VALUE: [7.084699999999888e-05, 7.015299999999988e-05, 7.081999999999922e-05, 7.029200000000305e-05, 7.082000000000269e-05, 7.045799999999894e-05, 7.068000000000005e-05, 7.013800000000084e-05, 7.044399999999937e-05, 7.02910000000001e-05, 7.036100000000142e-05, 7.050000000000112e-05, 7.034700000000185e-05, 7.09300000000003e-05, 7.06109999999982e-05, 7.057000000000244e-05, 7.037500000000099e-05, 7.090300000000063e-05, 7.009699999999813e-05, 7.025000000000087e-05, 7.041600000000023e-05, 7.098600000000205e-05, 7.10559999999999e-05, 7.027700000000053e-05, 7.062500000000124e-05, 7.090200000000116e-05, 7.048600000000155e-05, 7.07499999999979e-05, 7.083299999999931e-05, 7.069399999999962e-05, 7.095799999999944e-05, 7.016700000000292e-05, 7.048600000000155e-05, 7.090300000000063e-05, 7.072199999999876e-05, 7.084699999999888e-05, 7.05559999999994e-05, 7.094499999999934e-05, 7.080599999999965e-05, 7.057000000000244e-05, 7.030599999999915e-05, 7.012500000000074e-05, 7.062500000000124e-05, 7.061200000000115e-05, 7.1069e-05, 7.061100000000167e-05, 7.076400000000094e-05, 7.094399999999987e-05, 7.013900000000031e-05, 7.034699999999838e-05]</msg>
<status status="PASS" starttime="20201030 15:56:16.805" endtime="20201030 15:56:16.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.800" endtime="20201030 15:56:16.809"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:16.813" endtime="20201030 15:56:16.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.811" endtime="20201030 15:56:16.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.810" endtime="20201030 15:56:16.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.450" endtime="20201030 15:56:16.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.449" endtime="20201030 15:56:16.833"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.842" endtime="20201030 15:56:16.861"></status>
</kw>
<msg timestamp="20201030 15:56:16.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.841" endtime="20201030 15:56:16.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.863" endtime="20201030 15:56:16.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.865" endtime="20201030 15:56:16.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.838" endtime="20201030 15:56:16.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.836" endtime="20201030 15:56:16.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.875" endtime="20201030 15:56:17.161"></status>
</kw>
<msg timestamp="20201030 15:56:17.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020202778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020274569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.873" endtime="20201030 15:56:17.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020202778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020274569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.165" endtime="20201030 15:56:17.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.174" endtime="20201030 15:56:17.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.871" endtime="20201030 15:56:17.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.869" endtime="20201030 15:56:17.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:17.181" level="INFO">${RESULT} = [{'diff': 7.179099999999813e-05}, {'diff': 7.12499999999984e-05}, {'diff': 7.172199999999976e-05}, {'diff': 7.145799999999994e-05}, {'diff': 7.112500000000174e-05}, {'diff': 7.191599999999826e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:17.178" endtime="20201030 15:56:17.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:17.186" level="INFO">${ACCURACY} = {'diff': [7.179099999999813e-05, 7.12499999999984e-05, 7.172199999999976e-05, 7.145799999999994e-05, 7.112500000000174e-05, 7.191599999999826e-05, 7.199999999999915e-05, 7.195800000000044e-05, 7.15559...</msg>
<status status="PASS" starttime="20201030 15:56:17.182" endtime="20201030 15:56:17.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.191" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 15:56:17.190" endtime="20201030 15:56:17.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.193" level="INFO">VALUE: [7.179099999999813e-05, 7.12499999999984e-05, 7.172199999999976e-05, 7.145799999999994e-05, 7.112500000000174e-05, 7.191599999999826e-05, 7.199999999999915e-05, 7.195800000000044e-05, 7.155599999999693e-05, 7.163900000000181e-05, 7.149999999999865e-05, 7.137499999999852e-05, 7.16109999999992e-05, 7.143100000000027e-05, 7.147199999999951e-05, 7.188899999999859e-05, 7.145799999999994e-05, 7.179200000000108e-05, 7.133299999999981e-05, 7.118000000000055e-05, 7.119400000000012e-05, 7.134700000000285e-05, 7.195800000000044e-05, 7.131900000000024e-05, 7.112499999999827e-05, 7.208300000000056e-05, 7.117999999999708e-05, 7.125000000000187e-05, 7.11109999999987e-05, 7.118100000000002e-05, 7.19170000000012e-05, 7.163899999999834e-05, 7.126399999999797e-05, 7.144499999999984e-05, 7.140200000000166e-05, 7.12369999999983e-05, 7.190200000000216e-05, 7.119400000000012e-05, 7.137500000000199e-05, 7.137500000000199e-05, 7.201399999999872e-05, 7.152799999999779e-05, 7.165300000000138e-05, 7.14300000000008e-05, 7.145799999999994e-05, 7.177800000000151e-05, 7.156999999999997e-05, 7.148600000000255e-05, 7.11109999999987e-05, 7.168100000000052e-05]</msg>
<status status="PASS" starttime="20201030 15:56:17.192" endtime="20201030 15:56:17.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.187" endtime="20201030 15:56:17.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:17.199" endtime="20201030 15:56:17.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.197" endtime="20201030 15:56:17.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.196" endtime="20201030 15:56:17.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.834" endtime="20201030 15:56:17.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.834" endtime="20201030 15:56:17.219"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.229" endtime="20201030 15:56:17.248"></status>
</kw>
<msg timestamp="20201030 15:56:17.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.227" endtime="20201030 15:56:17.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.250" endtime="20201030 15:56:17.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.253" endtime="20201030 15:56:17.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.224" endtime="20201030 15:56:17.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.222" endtime="20201030 15:56:17.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.263" endtime="20201030 15:56:17.550"></status>
</kw>
<msg timestamp="20201030 15:56:17.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020487903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020560083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.261" endtime="20201030 15:56:17.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020487903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020560083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.554" endtime="20201030 15:56:17.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.563" endtime="20201030 15:56:17.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.258" endtime="20201030 15:56:17.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.256" endtime="20201030 15:56:17.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:17.569" level="INFO">${RESULT} = [{'diff': 7.218000000000155e-05}, {'diff': 7.301400000000319e-05}, {'diff': 7.29439999999984e-05}, {'diff': 7.300000000000015e-05}, {'diff': 7.251399999999922e-05}, {'diff': 7.269399999999815e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:17.566" endtime="20201030 15:56:17.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:17.574" level="INFO">${ACCURACY} = {'diff': [7.218000000000155e-05, 7.301400000000319e-05, 7.29439999999984e-05, 7.300000000000015e-05, 7.251399999999922e-05, 7.269399999999815e-05, 7.215299999999841e-05, 7.288899999999959e-05, 7.25559...</msg>
<status status="PASS" starttime="20201030 15:56:17.570" endtime="20201030 15:56:17.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.578" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 15:56:17.577" endtime="20201030 15:56:17.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.581" level="INFO">VALUE: [7.218000000000155e-05, 7.301400000000319e-05, 7.29439999999984e-05, 7.300000000000015e-05, 7.251399999999922e-05, 7.269399999999815e-05, 7.215299999999841e-05, 7.288899999999959e-05, 7.255599999999793e-05, 7.238899999999909e-05, 7.282000000000122e-05, 7.282000000000122e-05, 7.302699999999981e-05, 7.2763e-05, 7.306899999999852e-05, 7.234700000000038e-05, 7.305499999999895e-05, 7.263900000000281e-05, 7.226399999999897e-05, 7.259700000000063e-05, 7.256899999999802e-05, 7.258300000000106e-05, 7.213899999999884e-05, 7.286100000000045e-05, 7.250000000000312e-05, 7.212499999999927e-05, 7.21109999999997e-05, 7.213799999999937e-05, 7.238900000000256e-05, 7.307000000000147e-05, 7.294499999999787e-05, 7.248600000000008e-05, 7.22499999999994e-05, 7.248600000000008e-05, 7.248600000000008e-05, 7.277800000000251e-05, 7.277799999999904e-05, 7.245800000000094e-05, 7.301399999999972e-05, 7.284699999999741e-05, 7.216699999999798e-05, 7.298600000000058e-05, 7.277799999999904e-05, 7.223599999999983e-05, 7.213899999999884e-05, 7.21109999999997e-05, 7.227799999999854e-05, 7.311099999999723e-05, 7.244499999999737e-05, 7.232000000000072e-05]</msg>
<status status="PASS" starttime="20201030 15:56:17.580" endtime="20201030 15:56:17.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.575" endtime="20201030 15:56:17.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:17.586" endtime="20201030 15:56:17.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.585" endtime="20201030 15:56:17.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.583" endtime="20201030 15:56:17.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.220" endtime="20201030 15:56:17.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.220" endtime="20201030 15:56:17.607"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.616" endtime="20201030 15:56:17.637"></status>
</kw>
<msg timestamp="20201030 15:56:17.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.614" endtime="20201030 15:56:17.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.638" endtime="20201030 15:56:17.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.641" endtime="20201030 15:56:17.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.612" endtime="20201030 15:56:17.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.610" endtime="20201030 15:56:17.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.651" endtime="20201030 15:56:17.937"></status>
</kw>
<msg timestamp="20201030 15:56:17.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021293972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021368042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.649" endtime="20201030 15:56:17.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021293972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021368042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.942" endtime="20201030 15:56:17.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.950" endtime="20201030 15:56:17.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.646" endtime="20201030 15:56:17.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.644" endtime="20201030 15:56:17.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:17.957" level="INFO">${RESULT} = [{'diff': 7.4069999999999e-05}, {'diff': 7.313899999999984e-05}, {'diff': 7.341599999999976e-05}, {'diff': 7.34439999999989e-05}, {'diff': 7.381899999999927e-05}, {'diff': 7.32500000000004e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 15:56:17.954" endtime="20201030 15:56:17.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:17.961" level="INFO">${ACCURACY} = {'diff': [7.4069999999999e-05, 7.313899999999984e-05, 7.341599999999976e-05, 7.34439999999989e-05, 7.381899999999927e-05, 7.32500000000004e-05, 7.38049999999997e-05, 7.369399999999915e-05, 7.347199999...</msg>
<status status="PASS" starttime="20201030 15:56:17.958" endtime="20201030 15:56:17.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.966" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 15:56:17.965" endtime="20201030 15:56:17.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.969" level="INFO">VALUE: [7.4069999999999e-05, 7.313899999999984e-05, 7.341599999999976e-05, 7.34439999999989e-05, 7.381899999999927e-05, 7.32500000000004e-05, 7.38049999999997e-05, 7.369399999999915e-05, 7.347199999999804e-05, 7.39439999999994e-05, 7.312500000000027e-05, 7.399999999999768e-05, 7.365299999999991e-05, 7.404199999999986e-05, 7.320900000000116e-05, 7.307000000000147e-05, 7.388900000000059e-05, 7.4069999999999e-05, 7.381999999999875e-05, 7.400000000000115e-05, 7.387500000000102e-05, 7.365200000000044e-05, 7.34439999999989e-05, 7.312500000000027e-05, 7.383300000000231e-05, 7.35690000000025e-05, 7.4069000000003e-05, 7.32500000000004e-05, 7.356899999999902e-05, 7.3763999999997e-05, 7.406899999999952e-05, 7.382000000000222e-05, 7.350000000000065e-05, 7.369499999999862e-05, 7.348599999999761e-05, 7.345799999999847e-05, 7.35699999999985e-05, 7.401300000000124e-05, 7.383300000000231e-05, 7.34439999999989e-05, 7.404100000000038e-05, 7.401400000000072e-05, 7.362500000000077e-05, 7.340299999999966e-05, 7.39439999999994e-05, 7.337500000000052e-05, 7.39439999999994e-05, 7.348600000000108e-05, 7.408399999999857e-05, 7.368099999999905e-05]</msg>
<status status="PASS" starttime="20201030 15:56:17.967" endtime="20201030 15:56:17.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.962" endtime="20201030 15:56:17.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:17.975" endtime="20201030 15:56:17.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.973" endtime="20201030 15:56:17.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.972" endtime="20201030 15:56:17.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.608" endtime="20201030 15:56:17.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.607" endtime="20201030 15:56:17.995"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.005" endtime="20201030 15:56:18.025"></status>
</kw>
<msg timestamp="20201030 15:56:18.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.003" endtime="20201030 15:56:18.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.026" endtime="20201030 15:56:18.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.029" endtime="20201030 15:56:18.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.001" endtime="20201030 15:56:18.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.998" endtime="20201030 15:56:18.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.038" endtime="20201030 15:56:18.325"></status>
</kw>
<msg timestamp="20201030 15:56:18.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020455597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020530431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.037" endtime="20201030 15:56:18.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020455597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020530431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.329" endtime="20201030 15:56:18.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.337" endtime="20201030 15:56:18.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.034" endtime="20201030 15:56:18.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.032" endtime="20201030 15:56:18.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:18.344" level="INFO">${RESULT} = [{'diff': 7.483399999999932e-05}, {'diff': 7.468000000000058e-05}, {'diff': 7.476400000000147e-05}, {'diff': 7.431899999999977e-05}, {'diff': 7.491600000000126e-05}, {'diff': 7.440300000000066e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:18.341" endtime="20201030 15:56:18.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:18.349" level="INFO">${ACCURACY} = {'diff': [7.483399999999932e-05, 7.468000000000058e-05, 7.476400000000147e-05, 7.431899999999977e-05, 7.491600000000126e-05, 7.440300000000066e-05, 7.44439999999999e-05, 7.463899999999787e-05, 7.45969...</msg>
<status status="PASS" starttime="20201030 15:56:18.345" endtime="20201030 15:56:18.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.354" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 15:56:18.353" endtime="20201030 15:56:18.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.357" level="INFO">VALUE: [7.483399999999932e-05, 7.468000000000058e-05, 7.476400000000147e-05, 7.431899999999977e-05, 7.491600000000126e-05, 7.440300000000066e-05, 7.44439999999999e-05, 7.463899999999787e-05, 7.459699999999916e-05, 7.413900000000084e-05, 7.424999999999793e-05, 7.504200000000086e-05, 7.507e-05, 7.465300000000091e-05, 7.501400000000172e-05, 7.444499999999937e-05, 7.4763000000002e-05, 7.418000000000008e-05, 7.49440000000004e-05, 7.481900000000027e-05, 7.437499999999805e-05, 7.497199999999954e-05, 7.44439999999999e-05, 7.506900000000052e-05, 7.502800000000129e-05, 7.487499999999855e-05, 7.447200000000251e-05, 7.438900000000109e-05, 7.480600000000018e-05, 7.480600000000018e-05, 7.501400000000172e-05, 7.455599999999993e-05, 7.494499999999987e-05, 7.49310000000003e-05, 7.413900000000084e-05, 7.476400000000147e-05, 7.437500000000152e-05, 7.506900000000052e-05, 7.445799999999947e-05, 7.42500000000014e-05, 7.501400000000172e-05, 7.442999999999686e-05, 7.44439999999999e-05, 7.482000000000322e-05, 7.4763999999998e-05, 7.479200000000061e-05, 7.50830000000001e-05, 7.486099999999898e-05, 7.463900000000134e-05, 7.438900000000109e-05]</msg>
<status status="PASS" starttime="20201030 15:56:18.355" endtime="20201030 15:56:18.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.350" endtime="20201030 15:56:18.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:18.362" endtime="20201030 15:56:18.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.360" endtime="20201030 15:56:18.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.359" endtime="20201030 15:56:18.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.996" endtime="20201030 15:56:18.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.996" endtime="20201030 15:56:18.383"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.392" endtime="20201030 15:56:18.411"></status>
</kw>
<msg timestamp="20201030 15:56:18.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.390" endtime="20201030 15:56:18.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.413" endtime="20201030 15:56:18.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.415" endtime="20201030 15:56:18.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.388" endtime="20201030 15:56:18.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.385" endtime="20201030 15:56:18.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.425" endtime="20201030 15:56:18.715"></status>
</kw>
<msg timestamp="20201030 15:56:18.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020405653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020481167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.423" endtime="20201030 15:56:18.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020405653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020481167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.720" endtime="20201030 15:56:18.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.728" endtime="20201030 15:56:18.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.420" endtime="20201030 15:56:18.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.419" endtime="20201030 15:56:18.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:18.735" level="INFO">${RESULT} = [{'diff': 7.551400000000222e-05}, {'diff': 7.582000000000075e-05}, {'diff': 7.577700000000256e-05}, {'diff': 7.526400000000197e-05}, {'diff': 7.554099999999841e-05}, {'diff': 7.568099999999758e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:18.732" endtime="20201030 15:56:18.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:18.739" level="INFO">${ACCURACY} = {'diff': [7.551400000000222e-05, 7.582000000000075e-05, 7.577700000000256e-05, 7.526400000000197e-05, 7.554099999999841e-05, 7.568099999999758e-05, 7.567999999999811e-05, 7.519400000000065e-05, 7.5903...</msg>
<status status="PASS" starttime="20201030 15:56:18.736" endtime="20201030 15:56:18.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.744" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 15:56:18.743" endtime="20201030 15:56:18.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.747" level="INFO">VALUE: [7.551400000000222e-05, 7.582000000000075e-05, 7.577700000000256e-05, 7.526400000000197e-05, 7.554099999999841e-05, 7.568099999999758e-05, 7.567999999999811e-05, 7.519400000000065e-05, 7.590300000000216e-05, 7.606900000000152e-05, 7.606899999999805e-05, 7.586099999999998e-05, 7.530599999999721e-05, 7.606999999999753e-05, 7.55700000000005e-05, 7.577799999999857e-05, 7.599999999999968e-05, 7.605600000000143e-05, 7.518100000000055e-05, 7.552699999999885e-05, 7.541699999999776e-05, 7.569399999999768e-05, 7.59029999999987e-05, 7.59029999999987e-05, 7.5763999999999e-05, 7.60830000000011e-05, 7.568000000000158e-05, 7.608299999999762e-05, 7.556899999999755e-05, 7.563899999999887e-05, 7.59449999999974e-05, 7.532000000000025e-05, 7.577800000000204e-05, 7.520899999999969e-05, 7.55700000000005e-05, 7.555600000000093e-05, 7.540199999999872e-05, 7.515299999999794e-05, 7.606899999999805e-05, 7.595900000000044e-05, 7.568000000000158e-05, 7.56249999999993e-05, 7.605500000000195e-05, 7.566700000000148e-05, 7.605500000000195e-05, 7.592999999999836e-05, 7.537499999999905e-05, 7.516700000000098e-05, 7.583400000000032e-05, 7.598600000000011e-05]</msg>
<status status="PASS" starttime="20201030 15:56:18.745" endtime="20201030 15:56:18.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.740" endtime="20201030 15:56:18.748"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:18.752" endtime="20201030 15:56:18.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.750" endtime="20201030 15:56:18.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.749" endtime="20201030 15:56:18.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.384" endtime="20201030 15:56:18.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.383" endtime="20201030 15:56:18.773"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.782" endtime="20201030 15:56:18.803"></status>
</kw>
<msg timestamp="20201030 15:56:18.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.780" endtime="20201030 15:56:18.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.804" endtime="20201030 15:56:18.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.807" endtime="20201030 15:56:18.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.777" endtime="20201030 15:56:18.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.775" endtime="20201030 15:56:18.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.816" endtime="20201030 15:56:19.103"></status>
</kw>
<msg timestamp="20201030 15:56:19.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021300556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021376917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.814" endtime="20201030 15:56:19.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021300556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021376917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.107" endtime="20201030 15:56:19.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.116" endtime="20201030 15:56:19.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.812" endtime="20201030 15:56:19.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.810" endtime="20201030 15:56:19.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:19.123" level="INFO">${RESULT} = [{'diff': 7.636100000000048e-05}, {'diff': 7.613899999999937e-05}, {'diff': 7.641699999999876e-05}, {'diff': 7.613900000000284e-05}, {'diff': 7.706900000000252e-05}, {'diff': 7.700000000000068e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:19.120" endtime="20201030 15:56:19.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:19.128" level="INFO">${ACCURACY} = {'diff': [7.636100000000048e-05, 7.613899999999937e-05, 7.641699999999876e-05, 7.613900000000284e-05, 7.706900000000252e-05, 7.700000000000068e-05, 7.681900000000227e-05, 7.613899999999937e-05, 7.6208...</msg>
<status status="PASS" starttime="20201030 15:56:19.124" endtime="20201030 15:56:19.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.133" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 15:56:19.131" endtime="20201030 15:56:19.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.135" level="INFO">VALUE: [7.636100000000048e-05, 7.613899999999937e-05, 7.641699999999876e-05, 7.613900000000284e-05, 7.706900000000252e-05, 7.700000000000068e-05, 7.681900000000227e-05, 7.613899999999937e-05, 7.620800000000122e-05, 7.63189999999983e-05, 7.620799999999775e-05, 7.705599999999896e-05, 7.654199999999889e-05, 7.637500000000005e-05, 7.704199999999939e-05, 7.633400000000082e-05, 7.62500000000034e-05, 7.687500000000055e-05, 7.677799999999957e-05, 7.61249999999998e-05, 7.690199999999675e-05, 7.683300000000184e-05, 7.64440000000019e-05, 7.61249999999998e-05, 7.697199999999807e-05, 7.634700000000091e-05, 7.650000000000018e-05, 7.62639999999995e-05, 7.638899999999962e-05, 7.6764e-05, 7.618100000000155e-05, 7.677799999999957e-05, 7.637500000000005e-05, 7.666699999999901e-05, 7.637500000000005e-05, 7.641699999999876e-05, 7.638899999999962e-05, 7.61249999999998e-05, 7.624999999999993e-05, 7.683300000000184e-05, 7.692999999999936e-05, 7.620800000000122e-05, 7.617999999999861e-05, 7.680499999999923e-05, 7.633300000000134e-05, 7.623600000000036e-05, 7.659700000000116e-05, 7.636099999999701e-05, 7.677799999999957e-05, 7.645899999999747e-05]</msg>
<status status="PASS" starttime="20201030 15:56:19.134" endtime="20201030 15:56:19.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.129" endtime="20201030 15:56:19.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:19.141" endtime="20201030 15:56:19.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.140" endtime="20201030 15:56:19.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.138" endtime="20201030 15:56:19.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.773" endtime="20201030 15:56:19.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.773" endtime="20201030 15:56:19.162"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.171" endtime="20201030 15:56:19.190"></status>
</kw>
<msg timestamp="20201030 15:56:19.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.169" endtime="20201030 15:56:19.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.192" endtime="20201030 15:56:19.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.195" endtime="20201030 15:56:19.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.167" endtime="20201030 15:56:19.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.164" endtime="20201030 15:56:19.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.204" endtime="20201030 15:56:19.490"></status>
</kw>
<msg timestamp="20201030 15:56:19.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020172194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020249722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.202" endtime="20201030 15:56:19.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020172194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020249722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.495" endtime="20201030 15:56:19.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.503" endtime="20201030 15:56:19.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.200" endtime="20201030 15:56:19.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.198" endtime="20201030 15:56:19.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:19.510" level="INFO">${RESULT} = [{'diff': 7.752800000000032e-05}, {'diff': 7.804199999999692e-05}, {'diff': 7.779200000000014e-05}, {'diff': 7.770799999999925e-05}, {'diff': 7.748599999999814e-05}, {'diff': 7.798599999999864e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:19.507" endtime="20201030 15:56:19.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:19.516" level="INFO">${ACCURACY} = {'diff': [7.752800000000032e-05, 7.804199999999692e-05, 7.779200000000014e-05, 7.770799999999925e-05, 7.748599999999814e-05, 7.798599999999864e-05, 7.737500000000105e-05, 7.756999999999903e-05, 7.7513...</msg>
<status status="PASS" starttime="20201030 15:56:19.512" endtime="20201030 15:56:19.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.521" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 15:56:19.520" endtime="20201030 15:56:19.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.523" level="INFO">VALUE: [7.752800000000032e-05, 7.804199999999692e-05, 7.779200000000014e-05, 7.770799999999925e-05, 7.748599999999814e-05, 7.798599999999864e-05, 7.737500000000105e-05, 7.756999999999903e-05, 7.751399999999728e-05, 7.775000000000143e-05, 7.804100000000092e-05, 7.718100000000255e-05, 7.77770000000011e-05, 7.770799999999925e-05, 7.711100000000123e-05, 7.78189999999998e-05, 7.73189999999993e-05, 7.755499999999999e-05, 7.784699999999894e-05, 7.737500000000105e-05, 7.71250000000008e-05, 7.775000000000143e-05, 7.713900000000037e-05, 7.711100000000123e-05, 7.787499999999808e-05, 7.71250000000008e-05, 7.75839999999986e-05, 7.765300000000044e-05, 7.774999999999796e-05, 7.747199999999857e-05, 7.734699999999844e-05, 7.756899999999955e-05, 7.71250000000008e-05, 7.749999999999771e-05, 7.775000000000143e-05, 7.80969999999992e-05, 7.742999999999986e-05, 7.712499999999733e-05, 7.769399999999968e-05, 7.774999999999796e-05, 7.74310000000028e-05, 7.737500000000105e-05, 7.795899999999897e-05, 7.793099999999983e-05, 7.725000000000093e-05, 7.78189999999998e-05, 7.716699999999951e-05, 7.736199999999749e-05, 7.72770000000006e-05, 7.806900000000006e-05]</msg>
<status status="PASS" starttime="20201030 15:56:19.522" endtime="20201030 15:56:19.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.517" endtime="20201030 15:56:19.530"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:19.534" endtime="20201030 15:56:19.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.532" endtime="20201030 15:56:19.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.531" endtime="20201030 15:56:19.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.163" endtime="20201030 15:56:19.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.162" endtime="20201030 15:56:19.554"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.563" endtime="20201030 15:56:19.583"></status>
</kw>
<msg timestamp="20201030 15:56:19.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.562" endtime="20201030 15:56:19.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.585" endtime="20201030 15:56:19.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.587" endtime="20201030 15:56:19.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.559" endtime="20201030 15:56:19.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.557" endtime="20201030 15:56:19.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.597" endtime="20201030 15:56:19.895"></status>
</kw>
<msg timestamp="20201030 15:56:19.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020302681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020381306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.595" endtime="20201030 15:56:19.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020302681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020381306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.904" endtime="20201030 15:56:19.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.922" endtime="20201030 15:56:19.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.593" endtime="20201030 15:56:19.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.591" endtime="20201030 15:56:19.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:19.936" level="INFO">${RESULT} = [{'diff': 7.862499999999883e-05}, {'diff': 7.877699999999863e-05}, {'diff': 7.893000000000136e-05}, {'diff': 7.861099999999926e-05}, {'diff': 7.833300000000334e-05}, {'diff': 7.848599999999914e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:19.929" endtime="20201030 15:56:19.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:19.942" level="INFO">${ACCURACY} = {'diff': [7.862499999999883e-05, 7.877699999999863e-05, 7.893000000000136e-05, 7.861099999999926e-05, 7.833300000000334e-05, 7.848599999999914e-05, 7.908300000000063e-05, 7.811100000000223e-05, 7.8695...</msg>
<status status="PASS" starttime="20201030 15:56:19.938" endtime="20201030 15:56:19.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.946" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 15:56:19.945" endtime="20201030 15:56:19.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.949" level="INFO">VALUE: [7.862499999999883e-05, 7.877699999999863e-05, 7.893000000000136e-05, 7.861099999999926e-05, 7.833300000000334e-05, 7.848599999999914e-05, 7.908300000000063e-05, 7.811100000000223e-05, 7.869500000000015e-05, 7.81389999999979e-05, 7.89450000000004e-05, 7.85839999999996e-05, 7.900000000000268e-05, 7.884799999999942e-05, 7.899999999999921e-05, 7.833299999999987e-05, 7.836099999999901e-05, 7.852699999999838e-05, 7.849999999999871e-05, 7.831999999999978e-05, 7.887499999999908e-05, 7.905500000000149e-05, 7.834699999999944e-05, 7.840199999999825e-05, 7.856899999999709e-05, 7.811099999999876e-05, 7.893100000000083e-05, 7.833399999999935e-05, 7.834699999999944e-05, 7.84449999999999e-05, 7.86389999999984e-05, 7.869500000000015e-05, 7.862499999999883e-05, 7.891600000000179e-05, 7.819400000000018e-05, 7.844400000000043e-05, 7.837499999999858e-05, 7.838900000000162e-05, 7.837500000000205e-05, 7.822199999999932e-05, 7.89030000000017e-05, 7.841700000000076e-05, 7.855600000000046e-05, 7.901399999999878e-05, 7.85839999999996e-05, 7.880600000000071e-05, 7.824999999999846e-05, 7.84449999999999e-05, 7.863799999999893e-05, 7.825000000000193e-05]</msg>
<status status="PASS" starttime="20201030 15:56:19.947" endtime="20201030 15:56:19.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.943" endtime="20201030 15:56:19.950"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:19.954" endtime="20201030 15:56:19.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.952" endtime="20201030 15:56:19.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.951" endtime="20201030 15:56:19.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.555" endtime="20201030 15:56:19.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.555" endtime="20201030 15:56:19.974"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.983" endtime="20201030 15:56:20.004"></status>
</kw>
<msg timestamp="20201030 15:56:20.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.981" endtime="20201030 15:56:20.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.005" endtime="20201030 15:56:20.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.007" endtime="20201030 15:56:20.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.979" endtime="20201030 15:56:20.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.977" endtime="20201030 15:56:20.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.017" endtime="20201030 15:56:20.303"></status>
</kw>
<msg timestamp="20201030 15:56:20.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020550236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020629556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.015" endtime="20201030 15:56:20.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020550236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020629556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.307" endtime="20201030 15:56:20.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.315" endtime="20201030 15:56:20.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.012" endtime="20201030 15:56:20.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.011" endtime="20201030 15:56:20.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:20.322" level="INFO">${RESULT} = [{'diff': 7.932000000000078e-05}, {'diff': 7.933300000000088e-05}, {'diff': 7.933300000000088e-05}, {'diff': 7.99580000000015e-05}, {'diff': 7.98190000000018e-05}, {'diff': 7.955499999999852e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:20.319" endtime="20201030 15:56:20.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:20.326" level="INFO">${ACCURACY} = {'diff': [7.932000000000078e-05, 7.933300000000088e-05, 7.933300000000088e-05, 7.99580000000015e-05, 7.98190000000018e-05, 7.955499999999852e-05, 7.994400000000193e-05, 7.99580000000015e-05, 7.9222000...</msg>
<status status="PASS" starttime="20201030 15:56:20.323" endtime="20201030 15:56:20.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.330" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 15:56:20.329" endtime="20201030 15:56:20.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.333" level="INFO">VALUE: [7.932000000000078e-05, 7.933300000000088e-05, 7.933300000000088e-05, 7.99580000000015e-05, 7.98190000000018e-05, 7.955499999999852e-05, 7.994400000000193e-05, 7.99580000000015e-05, 7.922200000000032e-05, 7.93190000000013e-05, 7.994399999999846e-05, 7.976399999999953e-05, 7.918100000000108e-05, 7.968100000000158e-05, 7.976399999999953e-05, 7.919500000000065e-05, 7.919500000000065e-05, 7.994499999999793e-05, 7.91380000000029e-05, 8.000000000000021e-05, 7.99580000000015e-05, 7.9151999999999e-05, 7.938899999999915e-05, 7.929199999999817e-05, 8.011100000000076e-05, 7.937499999999958e-05, 7.938900000000262e-05, 7.930600000000121e-05, 7.938899999999915e-05, 7.948600000000014e-05, 7.966700000000201e-05, 7.962499999999983e-05, 7.957000000000103e-05, 7.94169999999983e-05, 7.923599999999989e-05, 7.94169999999983e-05, 7.912499999999933e-05, 7.970799999999778e-05, 7.998600000000064e-05, 8.005499999999902e-05, 8.008300000000163e-05, 7.937499999999958e-05, 7.956900000000156e-05, 7.982000000000128e-05, 8.005599999999849e-05, 7.955600000000146e-05, 8.007000000000153e-05, 7.983400000000085e-05, 7.990299999999922e-05, 8.00130000000003e-05]</msg>
<status status="PASS" starttime="20201030 15:56:20.331" endtime="20201030 15:56:20.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.327" endtime="20201030 15:56:20.335"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:20.338" endtime="20201030 15:56:20.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.337" endtime="20201030 15:56:20.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.336" endtime="20201030 15:56:20.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.975" endtime="20201030 15:56:20.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.975" endtime="20201030 15:56:20.359"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.368" endtime="20201030 15:56:20.387"></status>
</kw>
<msg timestamp="20201030 15:56:20.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.366" endtime="20201030 15:56:20.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.389" endtime="20201030 15:56:20.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.391" endtime="20201030 15:56:20.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.364" endtime="20201030 15:56:20.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.362" endtime="20201030 15:56:20.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.401" endtime="20201030 15:56:20.686"></status>
</kw>
<msg timestamp="20201030 15:56:20.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019633528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.399" endtime="20201030 15:56:20.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019633528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.690" endtime="20201030 15:56:20.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.698" endtime="20201030 15:56:20.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.396" endtime="20201030 15:56:20.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.395" endtime="20201030 15:56:20.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:20.704" level="INFO">${RESULT} = [{'diff': 8.090300000000022e-05}, {'diff': 8.042999999999939e-05}, {'diff': 8.069399999999921e-05}, {'diff': 8.048600000000114e-05}, {'diff': 8.063899999999694e-05}, {'diff': 8.06390000000004e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:20.701" endtime="20201030 15:56:20.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:20.709" level="INFO">${ACCURACY} = {'diff': [8.090300000000022e-05, 8.042999999999939e-05, 8.069399999999921e-05, 8.048600000000114e-05, 8.063899999999694e-05, 8.06390000000004e-05, 8.099999999999774e-05, 8.040299999999972e-05, 8.08330...</msg>
<status status="PASS" starttime="20201030 15:56:20.705" endtime="20201030 15:56:20.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.714" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 15:56:20.713" endtime="20201030 15:56:20.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.716" level="INFO">VALUE: [8.090300000000022e-05, 8.042999999999939e-05, 8.069399999999921e-05, 8.048600000000114e-05, 8.063899999999694e-05, 8.06390000000004e-05, 8.099999999999774e-05, 8.040299999999972e-05, 8.083300000000238e-05, 8.023700000000036e-05, 8.080599999999924e-05, 8.023600000000089e-05, 8.079199999999967e-05, 8.043099999999886e-05, 8.041599999999982e-05, 8.054199999999942e-05, 8.020799999999828e-05, 8.050000000000071e-05, 8.080499999999977e-05, 8.069399999999921e-05, 8.025000000000046e-05, 8.108299999999916e-05, 8.069400000000268e-05, 8.031899999999884e-05, 8.031899999999884e-05, 8.10130000000013e-05, 8.052799999999985e-05, 8.01109999999973e-05, 8.106999999999906e-05, 8.076400000000053e-05, 8.069500000000215e-05, 8.0458000000002e-05, 8.038800000000068e-05, 8.062500000000083e-05, 8.099999999999774e-05, 8.105500000000002e-05, 8.020799999999828e-05, 8.031999999999831e-05, 8.025000000000046e-05, 8.019399999999871e-05, 8.068100000000258e-05, 8.098600000000164e-05, 8.055600000000246e-05, 8.012500000000033e-05, 8.057000000000203e-05, 8.023599999999742e-05, 8.041599999999982e-05, 8.069500000000215e-05, 8.075000000000096e-05, 8.063800000000093e-05]</msg>
<status status="PASS" starttime="20201030 15:56:20.715" endtime="20201030 15:56:20.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.710" endtime="20201030 15:56:20.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:20.721" endtime="20201030 15:56:20.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.720" endtime="20201030 15:56:20.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.719" endtime="20201030 15:56:20.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.360" endtime="20201030 15:56:20.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.359" endtime="20201030 15:56:20.742"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.751" endtime="20201030 15:56:20.770"></status>
</kw>
<msg timestamp="20201030 15:56:20.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.749" endtime="20201030 15:56:20.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.772" endtime="20201030 15:56:20.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.774" endtime="20201030 15:56:20.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.746" endtime="20201030 15:56:20.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.744" endtime="20201030 15:56:20.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.783" endtime="20201030 15:56:21.071"></status>
</kw>
<msg timestamp="20201030 15:56:21.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019605569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019687069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.782" endtime="20201030 15:56:21.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019605569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019687069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.075" endtime="20201030 15:56:21.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.083" endtime="20201030 15:56:21.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.779" endtime="20201030 15:56:21.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.777" endtime="20201030 15:56:21.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:21.090" level="INFO">${RESULT} = [{'diff': 8.150000000000171e-05}, {'diff': 8.119399999999971e-05}, {'diff': 8.190299999999776e-05}, {'diff': 8.122199999999885e-05}, {'diff': 8.136100000000202e-05}, {'diff': 8.111100000000177e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:21.087" endtime="20201030 15:56:21.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:21.094" level="INFO">${ACCURACY} = {'diff': [8.150000000000171e-05, 8.119399999999971e-05, 8.190299999999776e-05, 8.122199999999885e-05, 8.136100000000202e-05, 8.111100000000177e-05, 8.169400000000021e-05, 8.106899999999959e-05, 8.1444...</msg>
<status status="PASS" starttime="20201030 15:56:21.091" endtime="20201030 15:56:21.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.098" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 15:56:21.097" endtime="20201030 15:56:21.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.101" level="INFO">VALUE: [8.150000000000171e-05, 8.119399999999971e-05, 8.190299999999776e-05, 8.122199999999885e-05, 8.136100000000202e-05, 8.111100000000177e-05, 8.169400000000021e-05, 8.106899999999959e-05, 8.144499999999943e-05, 8.184700000000295e-05, 8.145900000000247e-05, 8.130599999999974e-05, 8.202799999999788e-05, 8.205600000000049e-05, 8.183399999999938e-05, 8.137500000000158e-05, 8.138900000000115e-05, 8.176399999999806e-05, 8.19719999999996e-05, 8.18329999999999e-05, 8.106899999999959e-05, 8.166700000000054e-05, 8.207000000000006e-05, 8.124999999999799e-05, 8.194499999999993e-05, 8.116700000000004e-05, 8.174999999999849e-05, 8.131999999999931e-05, 8.169499999999968e-05, 8.176399999999806e-05, 8.12780000000006e-05, 8.165199999999803e-05, 8.187499999999862e-05, 8.133300000000288e-05, 8.144399999999996e-05, 8.162499999999837e-05, 8.137499999999812e-05, 8.124999999999799e-05, 8.143099999999986e-05, 8.206900000000059e-05, 8.134799999999845e-05, 8.131999999999931e-05, 8.170899999999925e-05, 8.133399999999888e-05, 8.124999999999799e-05, 8.144499999999943e-05, 8.136199999999802e-05, 8.125000000000146e-05, 8.144399999999996e-05, 8.144399999999996e-05]</msg>
<status status="PASS" starttime="20201030 15:56:21.099" endtime="20201030 15:56:21.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.095" endtime="20201030 15:56:21.102"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:21.106" endtime="20201030 15:56:21.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.104" endtime="20201030 15:56:21.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.103" endtime="20201030 15:56:21.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.743" endtime="20201030 15:56:21.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.742" endtime="20201030 15:56:21.126"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.135" endtime="20201030 15:56:21.155"></status>
</kw>
<msg timestamp="20201030 15:56:21.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.133" endtime="20201030 15:56:21.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.157" endtime="20201030 15:56:21.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.159" endtime="20201030 15:56:21.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.131" endtime="20201030 15:56:21.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.129" endtime="20201030 15:56:21.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.168" endtime="20201030 15:56:21.453"></status>
</kw>
<msg timestamp="20201030 15:56:21.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020603833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020686625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.167" endtime="20201030 15:56:21.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020603833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020686625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.457" endtime="20201030 15:56:21.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.466" endtime="20201030 15:56:21.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.164" endtime="20201030 15:56:21.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.163" endtime="20201030 15:56:21.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:21.472" level="INFO">${RESULT} = [{'diff': 8.279200000000167e-05}, {'diff': 8.219400000000071e-05}, {'diff': 8.232000000000031e-05}, {'diff': 8.26529999999985e-05}, {'diff': 8.248599999999967e-05}, {'diff': 8.21390000000019e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:21.469" endtime="20201030 15:56:21.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:21.476" level="INFO">${ACCURACY} = {'diff': [8.279200000000167e-05, 8.219400000000071e-05, 8.232000000000031e-05, 8.26529999999985e-05, 8.248599999999967e-05, 8.21390000000019e-05, 8.294500000000093e-05, 8.232000000000031e-05, 8.295800...</msg>
<status status="PASS" starttime="20201030 15:56:21.473" endtime="20201030 15:56:21.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.481" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 15:56:21.480" endtime="20201030 15:56:21.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.484" level="INFO">VALUE: [8.279200000000167e-05, 8.219400000000071e-05, 8.232000000000031e-05, 8.26529999999985e-05, 8.248599999999967e-05, 8.21390000000019e-05, 8.294500000000093e-05, 8.232000000000031e-05, 8.295800000000103e-05, 8.267999999999817e-05, 8.21109999999993e-05, 8.28049999999983e-05, 8.219400000000071e-05, 8.236099999999955e-05, 8.26529999999985e-05, 8.220799999999681e-05, 8.224999999999899e-05, 8.222199999999985e-05, 8.263899999999894e-05, 8.29309999999979e-05, 8.220899999999975e-05, 8.21109999999993e-05, 8.299999999999974e-05, 8.227799999999813e-05, 8.218000000000114e-05, 8.227700000000213e-05, 8.277699999999916e-05, 8.224999999999899e-05, 8.254199999999795e-05, 8.269400000000121e-05, 8.281899999999787e-05, 8.27780000000021e-05, 8.251399999999881e-05, 8.270799999999731e-05, 8.218100000000061e-05, 8.294500000000093e-05, 8.29590000000005e-05, 8.211199999999877e-05, 8.274999999999949e-05, 8.29590000000005e-05, 8.301299999999984e-05, 8.306899999999812e-05, 8.226400000000203e-05, 8.237500000000259e-05, 8.26109999999998e-05, 8.305499999999855e-05, 8.211100000000277e-05, 8.29309999999979e-05, 8.212500000000234e-05, 8.293100000000136e-05]</msg>
<status status="PASS" starttime="20201030 15:56:21.482" endtime="20201030 15:56:21.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.477" endtime="20201030 15:56:21.485"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:21.489" endtime="20201030 15:56:21.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.487" endtime="20201030 15:56:21.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.486" endtime="20201030 15:56:21.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.127" endtime="20201030 15:56:21.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.127" endtime="20201030 15:56:21.509"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.518" endtime="20201030 15:56:21.538"></status>
</kw>
<msg timestamp="20201030 15:56:21.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.517" endtime="20201030 15:56:21.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.540" endtime="20201030 15:56:21.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.542" endtime="20201030 15:56:21.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.514" endtime="20201030 15:56:21.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.512" endtime="20201030 15:56:21.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.551" endtime="20201030 15:56:21.836"></status>
</kw>
<msg timestamp="20201030 15:56:21.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019796014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.550" endtime="20201030 15:56:21.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019712472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019796014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.840" endtime="20201030 15:56:21.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.848" endtime="20201030 15:56:21.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.547" endtime="20201030 15:56:21.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.545" endtime="20201030 15:56:21.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:21.855" level="INFO">${RESULT} = [{'diff': 8.354199999999895e-05}, {'diff': 8.333400000000088e-05}, {'diff': 8.404200000000292e-05}, {'diff': 8.394499999999847e-05}, {'diff': 8.351399999999981e-05}, {'diff': 8.373600000000092e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:21.852" endtime="20201030 15:56:21.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:21.860" level="INFO">${ACCURACY} = {'diff': [8.354199999999895e-05, 8.333400000000088e-05, 8.404200000000292e-05, 8.394499999999847e-05, 8.351399999999981e-05, 8.373600000000092e-05, 8.350000000000024e-05, 8.3846999999998e-05, 8.312499...</msg>
<status status="PASS" starttime="20201030 15:56:21.856" endtime="20201030 15:56:21.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.864" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 15:56:21.863" endtime="20201030 15:56:21.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.866" level="INFO">VALUE: [8.354199999999895e-05, 8.333400000000088e-05, 8.404200000000292e-05, 8.394499999999847e-05, 8.351399999999981e-05, 8.373600000000092e-05, 8.350000000000024e-05, 8.3846999999998e-05, 8.312499999999987e-05, 8.37780000000031e-05, 8.376400000000006e-05, 8.369399999999874e-05, 8.316700000000204e-05, 8.40980000000012e-05, 8.408399999999816e-05, 8.327799999999913e-05, 8.357000000000156e-05, 8.309700000000073e-05, 8.329099999999923e-05, 8.362500000000037e-05, 8.401300000000084e-05, 8.350000000000024e-05, 8.400000000000074e-05, 8.318000000000214e-05, 8.376400000000006e-05, 8.338899999999969e-05, 8.319400000000171e-05, 8.326399999999956e-05, 8.320800000000128e-05, 8.362500000000037e-05, 8.395899999999804e-05, 8.345899999999754e-05, 8.402799999999988e-05, 8.380599999999877e-05, 8.405599999999902e-05, 8.408299999999869e-05, 8.344399999999849e-05, 8.387500000000062e-05, 8.408300000000216e-05, 8.402799999999988e-05, 8.394400000000246e-05, 8.405499999999955e-05, 8.333299999999794e-05, 8.362500000000037e-05, 8.377799999999963e-05, 8.316699999999858e-05, 8.316699999999858e-05, 8.375000000000049e-05, 8.327699999999966e-05, 8.36529999999995e-05]</msg>
<status status="PASS" starttime="20201030 15:56:21.865" endtime="20201030 15:56:21.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.860" endtime="20201030 15:56:21.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:21.871" endtime="20201030 15:56:21.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.870" endtime="20201030 15:56:21.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.869" endtime="20201030 15:56:21.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.510" endtime="20201030 15:56:21.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.510" endtime="20201030 15:56:21.892"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.901" endtime="20201030 15:56:21.921"></status>
</kw>
<msg timestamp="20201030 15:56:21.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.899" endtime="20201030 15:56:21.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.922" endtime="20201030 15:56:21.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.925" endtime="20201030 15:56:21.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.897" endtime="20201030 15:56:21.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.894" endtime="20201030 15:56:21.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.934" endtime="20201030 15:56:22.222"></status>
</kw>
<msg timestamp="20201030 15:56:22.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019609778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019694722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.932" endtime="20201030 15:56:22.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019609778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019694722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.226" endtime="20201030 15:56:22.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.234" endtime="20201030 15:56:22.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.930" endtime="20201030 15:56:22.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.928" endtime="20201030 15:56:22.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:22.241" level="INFO">${RESULT} = [{'diff': 8.494399999999999e-05}, {'diff': 8.497199999999913e-05}, {'diff': 8.470799999999931e-05}, {'diff': 8.43330000000024e-05}, {'diff': 8.477799999999716e-05}, {'diff': 8.498600000000217e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:22.238" endtime="20201030 15:56:22.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:22.245" level="INFO">${ACCURACY} = {'diff': [8.494399999999999e-05, 8.497199999999913e-05, 8.470799999999931e-05, 8.43330000000024e-05, 8.477799999999716e-05, 8.498600000000217e-05, 8.463900000000094e-05, 8.458399999999866e-05, 8.48890...</msg>
<status status="PASS" starttime="20201030 15:56:22.242" endtime="20201030 15:56:22.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.249" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 15:56:22.248" endtime="20201030 15:56:22.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.252" level="INFO">VALUE: [8.494399999999999e-05, 8.497199999999913e-05, 8.470799999999931e-05, 8.43330000000024e-05, 8.477799999999716e-05, 8.498600000000217e-05, 8.463900000000094e-05, 8.458399999999866e-05, 8.488900000000119e-05, 8.500000000000174e-05, 8.432000000000231e-05, 8.483299999999944e-05, 8.506900000000012e-05, 8.440300000000026e-05, 8.416699999999958e-05, 8.480499999999683e-05, 8.505500000000055e-05, 8.458299999999919e-05, 8.506999999999959e-05, 8.432000000000231e-05, 8.455599999999952e-05, 8.437500000000112e-05, 8.473599999999845e-05, 8.468099999999965e-05, 8.417999999999967e-05, 8.438800000000121e-05, 8.487499999999815e-05, 8.494399999999999e-05, 8.46110000000018e-05, 8.462500000000137e-05, 8.427800000000013e-05, 8.506900000000012e-05, 8.47920000000002e-05, 8.475000000000149e-05, 8.480599999999977e-05, 8.413900000000044e-05, 8.459799999999823e-05, 8.423600000000142e-05, 8.426400000000056e-05, 8.440199999999731e-05, 8.430500000000327e-05, 8.465200000000103e-05, 8.48050000000003e-05, 8.454100000000048e-05, 8.431899999999937e-05, 8.451400000000081e-05, 8.429200000000317e-05, 8.495799999999956e-05, 8.413900000000044e-05, 8.433400000000188e-05]</msg>
<status status="PASS" starttime="20201030 15:56:22.250" endtime="20201030 15:56:22.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.246" endtime="20201030 15:56:22.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:22.257" endtime="20201030 15:56:22.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.255" endtime="20201030 15:56:22.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.254" endtime="20201030 15:56:22.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.893" endtime="20201030 15:56:22.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.892" endtime="20201030 15:56:22.277"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.286" endtime="20201030 15:56:22.306"></status>
</kw>
<msg timestamp="20201030 15:56:22.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.284" endtime="20201030 15:56:22.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.308" endtime="20201030 15:56:22.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.310" endtime="20201030 15:56:22.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.282" endtime="20201030 15:56:22.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.280" endtime="20201030 15:56:22.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.320" endtime="20201030 15:56:22.605"></status>
</kw>
<msg timestamp="20201030 15:56:22.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020561944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020647153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.318" endtime="20201030 15:56:22.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020561944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020647153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.609" endtime="20201030 15:56:22.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.617" endtime="20201030 15:56:22.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.315" endtime="20201030 15:56:22.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.313" endtime="20201030 15:56:22.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:22.624" level="INFO">${RESULT} = [{'diff': 8.520900000000275e-05}, {'diff': 8.537499999999865e-05}, {'diff': 8.536100000000255e-05}, {'diff': 8.576400000000206e-05}, {'diff': 8.595800000000056e-05}, {'diff': 8.58189999999974e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:22.621" endtime="20201030 15:56:22.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:22.628" level="INFO">${ACCURACY} = {'diff': [8.520900000000275e-05, 8.537499999999865e-05, 8.536100000000255e-05, 8.576400000000206e-05, 8.595800000000056e-05, 8.58189999999974e-05, 8.595800000000056e-05, 8.544399999999702e-05, 8.54580...</msg>
<status status="PASS" starttime="20201030 15:56:22.625" endtime="20201030 15:56:22.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.632" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 15:56:22.631" endtime="20201030 15:56:22.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.635" level="INFO">VALUE: [8.520900000000275e-05, 8.537499999999865e-05, 8.536100000000255e-05, 8.576400000000206e-05, 8.595800000000056e-05, 8.58189999999974e-05, 8.595800000000056e-05, 8.544399999999702e-05, 8.545800000000006e-05, 8.556900000000062e-05, 8.595800000000056e-05, 8.544399999999702e-05, 8.572199999999988e-05, 8.5847e-05, 8.547199999999963e-05, 8.554200000000095e-05, 8.569500000000022e-05, 8.518100000000015e-05, 8.527700000000166e-05, 8.606999999999712e-05, 8.544400000000049e-05, 8.557000000000009e-05, 8.531900000000037e-05, 8.608299999999722e-05, 8.549999999999877e-05, 8.527800000000113e-05, 8.549999999999877e-05, 8.595800000000056e-05, 8.515299999999754e-05, 8.56249999999989e-05, 8.586100000000305e-05, 8.557000000000009e-05, 8.557000000000009e-05, 8.544499999999997e-05, 8.588799999999924e-05, 8.515200000000153e-05, 8.599999999999927e-05, 8.519499999999972e-05, 8.533299999999994e-05, 8.551399999999834e-05, 8.525000000000199e-05, 8.59310000000009e-05, 8.606899999999765e-05, 8.590299999999829e-05, 8.5847e-05, 8.538900000000169e-05, 8.526400000000156e-05, 8.549999999999877e-05, 8.594500000000047e-05, 8.609700000000026e-05]</msg>
<status status="PASS" starttime="20201030 15:56:22.633" endtime="20201030 15:56:22.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.629" endtime="20201030 15:56:22.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:22.641" endtime="20201030 15:56:22.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.639" endtime="20201030 15:56:22.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.638" endtime="20201030 15:56:22.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.278" endtime="20201030 15:56:22.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.278" endtime="20201030 15:56:22.661"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.670" endtime="20201030 15:56:22.690"></status>
</kw>
<msg timestamp="20201030 15:56:22.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.668" endtime="20201030 15:56:22.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.692" endtime="20201030 15:56:22.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.694" endtime="20201030 15:56:22.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.666" endtime="20201030 15:56:22.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.664" endtime="20201030 15:56:22.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.703" endtime="20201030 15:56:22.988"></status>
</kw>
<msg timestamp="20201030 15:56:22.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019631625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019717833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.702" endtime="20201030 15:56:22.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019631625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019717833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.992" endtime="20201030 15:56:23.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.000" endtime="20201030 15:56:23.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.699" endtime="20201030 15:56:23.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.697" endtime="20201030 15:56:23.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:23.007" level="INFO">${RESULT} = [{'diff': 8.620800000000081e-05}, {'diff': 8.69860000000007e-05}, {'diff': 8.661100000000033e-05}, {'diff': 8.644399999999802e-05}, {'diff': 8.675000000000002e-05}, {'diff': 8.69860000000007e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:23.004" endtime="20201030 15:56:23.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:23.012" level="INFO">${ACCURACY} = {'diff': [8.620800000000081e-05, 8.69860000000007e-05, 8.661100000000033e-05, 8.644399999999802e-05, 8.675000000000002e-05, 8.69860000000007e-05, 8.695900000000104e-05, 8.649999999999977e-05, 8.613900...</msg>
<status status="PASS" starttime="20201030 15:56:23.008" endtime="20201030 15:56:23.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.016" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 15:56:23.015" endtime="20201030 15:56:23.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.019" level="INFO">VALUE: [8.620800000000081e-05, 8.69860000000007e-05, 8.661100000000033e-05, 8.644399999999802e-05, 8.675000000000002e-05, 8.69860000000007e-05, 8.695900000000104e-05, 8.649999999999977e-05, 8.613900000000244e-05, 8.661100000000033e-05, 8.632000000000084e-05, 8.694399999999852e-05, 8.708399999999769e-05, 8.663899999999947e-05, 8.629099999999876e-05, 8.679100000000273e-05, 8.644400000000149e-05, 8.670800000000131e-05, 8.708300000000169e-05, 8.611099999999983e-05, 8.683299999999797e-05, 8.638899999999922e-05, 8.687499999999668e-05, 8.613899999999897e-05, 8.620900000000029e-05, 8.6847000000001e-05, 8.681900000000187e-05, 8.632000000000084e-05, 8.651299999999987e-05, 8.698700000000018e-05, 8.695800000000156e-05, 8.700000000000027e-05, 8.619400000000124e-05, 8.622200000000038e-05, 8.687500000000015e-05, 8.670800000000131e-05, 8.623599999999995e-05, 8.688899999999972e-05, 8.651400000000281e-05, 8.701399999999984e-05, 8.638899999999922e-05, 8.661100000000033e-05, 8.64449999999975e-05, 8.630499999999833e-05, 8.633299999999747e-05, 8.644399999999802e-05, 8.688899999999972e-05, 8.651399999999934e-05, 8.661100000000033e-05, 8.613899999999897e-05]</msg>
<status status="PASS" starttime="20201030 15:56:23.017" endtime="20201030 15:56:23.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.013" endtime="20201030 15:56:23.020"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:23.024" endtime="20201030 15:56:23.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.022" endtime="20201030 15:56:23.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.021" endtime="20201030 15:56:23.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.662" endtime="20201030 15:56:23.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.662" endtime="20201030 15:56:23.044"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.053" endtime="20201030 15:56:23.073"></status>
</kw>
<msg timestamp="20201030 15:56:23.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.051" endtime="20201030 15:56:23.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.074" endtime="20201030 15:56:23.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.077" endtime="20201030 15:56:23.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.049" endtime="20201030 15:56:23.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.047" endtime="20201030 15:56:23.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.086" endtime="20201030 15:56:23.372"></status>
</kw>
<msg timestamp="20201030 15:56:23.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019571375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019658806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.084" endtime="20201030 15:56:23.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019571375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019658806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.376" endtime="20201030 15:56:23.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.385" endtime="20201030 15:56:23.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.082" endtime="20201030 15:56:23.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.080" endtime="20201030 15:56:23.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:23.391" level="INFO">${RESULT} = [{'diff': 8.74310000000024e-05}, {'diff': 8.747200000000163e-05}, {'diff': 8.740200000000031e-05}, {'diff': 8.801400000000084e-05}, {'diff': 8.78189999999994e-05}, {'diff': 8.804199999999998e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:23.388" endtime="20201030 15:56:23.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:23.395" level="INFO">${ACCURACY} = {'diff': [8.74310000000024e-05, 8.747200000000163e-05, 8.740200000000031e-05, 8.801400000000084e-05, 8.78189999999994e-05, 8.804199999999998e-05, 8.737500000000065e-05, 8.800000000000127e-05, 8.730499...</msg>
<status status="PASS" starttime="20201030 15:56:23.392" endtime="20201030 15:56:23.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.400" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 15:56:23.399" endtime="20201030 15:56:23.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.402" level="INFO">VALUE: [8.74310000000024e-05, 8.747200000000163e-05, 8.740200000000031e-05, 8.801400000000084e-05, 8.78189999999994e-05, 8.804199999999998e-05, 8.737500000000065e-05, 8.800000000000127e-05, 8.730499999999933e-05, 8.775000000000102e-05, 8.775000000000102e-05, 8.801400000000084e-05, 8.74449999999985e-05, 8.805599999999955e-05, 8.781999999999887e-05, 8.750000000000077e-05, 8.76250000000009e-05, 8.719399999999877e-05, 8.715200000000006e-05, 8.804100000000051e-05, 8.776399999999712e-05, 8.763900000000047e-05, 8.769399999999927e-05, 8.73189999999989e-05, 8.71799999999992e-05, 8.784700000000201e-05, 8.768100000000265e-05, 8.786100000000158e-05, 8.755600000000252e-05, 8.7944999999999e-05, 8.726400000000009e-05, 8.737500000000065e-05, 8.730600000000227e-05, 8.752799999999991e-05, 8.71250000000004e-05, 8.765300000000004e-05, 8.78059999999993e-05, 8.786100000000158e-05, 8.805600000000302e-05, 8.802800000000041e-05, 8.758399999999819e-05, 8.761100000000133e-05, 8.763900000000047e-05, 8.719500000000172e-05, 8.779199999999973e-05, 8.776400000000059e-05, 8.725000000000052e-05, 8.738800000000074e-05, 8.740299999999979e-05, 8.805500000000008e-05]</msg>
<status status="PASS" starttime="20201030 15:56:23.401" endtime="20201030 15:56:23.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.396" endtime="20201030 15:56:23.403"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:23.407" endtime="20201030 15:56:23.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.405" endtime="20201030 15:56:23.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.404" endtime="20201030 15:56:23.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.045" endtime="20201030 15:56:23.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.045" endtime="20201030 15:56:23.427"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.436" endtime="20201030 15:56:23.457"></status>
</kw>
<msg timestamp="20201030 15:56:23.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.435" endtime="20201030 15:56:23.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.458" endtime="20201030 15:56:23.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.461" endtime="20201030 15:56:23.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.432" endtime="20201030 15:56:23.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.430" endtime="20201030 15:56:23.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.470" endtime="20201030 15:56:23.757"></status>
</kw>
<msg timestamp="20201030 15:56:23.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020596611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020685306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.468" endtime="20201030 15:56:23.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020596611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020685306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.761" endtime="20201030 15:56:23.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.769" endtime="20201030 15:56:23.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.466" endtime="20201030 15:56:23.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.464" endtime="20201030 15:56:23.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:23.776" level="INFO">${RESULT} = [{'diff': 8.869499999999975e-05}, {'diff': 8.90129999999989e-05}, {'diff': 8.858299999999972e-05}, {'diff': 8.83189999999999e-05}, {'diff': 8.855500000000058e-05}, {'diff': 8.901399999999837e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:23.772" endtime="20201030 15:56:23.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:23.780" level="INFO">${ACCURACY} = {'diff': [8.869499999999975e-05, 8.90129999999989e-05, 8.858299999999972e-05, 8.83189999999999e-05, 8.855500000000058e-05, 8.901399999999837e-05, 8.840300000000079e-05, 8.844400000000002e-05, 8.822200...</msg>
<status status="PASS" starttime="20201030 15:56:23.776" endtime="20201030 15:56:23.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.784" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 15:56:23.783" endtime="20201030 15:56:23.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.786" level="INFO">VALUE: [8.869499999999975e-05, 8.90129999999989e-05, 8.858299999999972e-05, 8.83189999999999e-05, 8.855500000000058e-05, 8.901399999999837e-05, 8.840300000000079e-05, 8.844400000000002e-05, 8.822200000000238e-05, 8.861100000000233e-05, 8.831999999999937e-05, 8.881999999999987e-05, 8.881999999999987e-05, 8.852800000000091e-05, 8.86670000000006e-05, 8.843099999999993e-05, 8.863900000000147e-05, 8.888900000000172e-05, 8.877800000000116e-05, 8.845799999999959e-05, 8.81389999999975e-05, 8.877800000000116e-05, 8.869400000000027e-05, 8.869500000000322e-05, 8.880599999999683e-05, 8.858399999999919e-05, 8.851400000000134e-05, 8.819499999999925e-05, 8.861100000000233e-05, 8.840200000000131e-05, 8.841600000000088e-05, 8.854100000000101e-05, 8.89999999999988e-05, 8.856900000000015e-05, 8.901399999999837e-05, 8.884699999999954e-05, 8.83189999999999e-05, 8.825000000000152e-05, 8.865300000000104e-05, 8.813900000000097e-05, 8.84449999999995e-05, 8.81250000000014e-05, 8.845800000000306e-05, 8.820899999999882e-05, 8.897299999999914e-05, 8.904100000000151e-05, 8.826400000000109e-05, 8.858299999999972e-05, 8.83189999999999e-05, 8.862499999999843e-05]</msg>
<status status="PASS" starttime="20201030 15:56:23.785" endtime="20201030 15:56:23.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.780" endtime="20201030 15:56:23.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:23.792" endtime="20201030 15:56:23.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.791" endtime="20201030 15:56:23.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.790" endtime="20201030 15:56:23.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.428" endtime="20201030 15:56:23.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.428" endtime="20201030 15:56:23.813"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.821" endtime="20201030 15:56:23.841"></status>
</kw>
<msg timestamp="20201030 15:56:23.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.820" endtime="20201030 15:56:23.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.842" endtime="20201030 15:56:23.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.845" endtime="20201030 15:56:23.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.817" endtime="20201030 15:56:23.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.815" endtime="20201030 15:56:23.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.854" endtime="20201030 15:56:24.139"></status>
</kw>
<msg timestamp="20201030 15:56:24.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019743972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.852" endtime="20201030 15:56:24.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019743972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.143" endtime="20201030 15:56:24.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.152" endtime="20201030 15:56:24.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.850" endtime="20201030 15:56:24.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.848" endtime="20201030 15:56:24.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:24.158" level="INFO">${RESULT} = [{'diff': 8.998600000000023e-05}, {'diff': 8.986100000000011e-05}, {'diff': 8.969400000000127e-05}, {'diff': 8.98190000000014e-05}, {'diff': 8.987499999999968e-05}, {'diff': 8.9638999999999e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:56:24.155" endtime="20201030 15:56:24.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:24.163" level="INFO">${ACCURACY} = {'diff': [8.998600000000023e-05, 8.986100000000011e-05, 8.969400000000127e-05, 8.98190000000014e-05, 8.987499999999968e-05, 8.9638999999999e-05, 8.926400000000209e-05, 9.001400000000284e-05, 9.0042000...</msg>
<status status="PASS" starttime="20201030 15:56:24.159" endtime="20201030 15:56:24.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.167" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 15:56:24.166" endtime="20201030 15:56:24.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.170" level="INFO">VALUE: [8.998600000000023e-05, 8.986100000000011e-05, 8.969400000000127e-05, 8.98190000000014e-05, 8.987499999999968e-05, 8.9638999999999e-05, 8.926400000000209e-05, 9.001400000000284e-05, 9.004200000000198e-05, 8.952799999999844e-05, 9.004099999999904e-05, 8.913799999999902e-05, 8.991599999999891e-05, 8.919400000000077e-05, 8.988899999999925e-05, 8.967999999999823e-05, 8.93190000000009e-05, 8.993100000000143e-05, 9.002800000000241e-05, 8.919500000000025e-05, 8.96670000000016e-05, 8.961099999999986e-05, 8.940300000000179e-05, 8.909799999999926e-05, 8.973599999999998e-05, 8.986199999999958e-05, 8.970799999999737e-05, 8.956900000000115e-05, 8.9638999999999e-05, 8.924999999999905e-05, 8.954200000000148e-05, 8.969400000000127e-05, 8.963799999999952e-05, 8.987499999999968e-05, 8.924999999999905e-05, 8.919500000000025e-05, 8.984800000000001e-05, 8.986100000000011e-05, 8.947299999999964e-05, 8.950000000000277e-05, 8.970800000000084e-05, 8.990299999999882e-05, 8.919400000000077e-05, 8.995800000000109e-05, 8.974999999999955e-05, 8.987499999999968e-05, 8.911099999999936e-05, 8.937499999999918e-05, 8.91250000000024e-05, 8.934700000000004e-05]</msg>
<status status="PASS" starttime="20201030 15:56:24.169" endtime="20201030 15:56:24.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.164" endtime="20201030 15:56:24.171"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:24.175" endtime="20201030 15:56:24.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.173" endtime="20201030 15:56:24.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.172" endtime="20201030 15:56:24.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.814" endtime="20201030 15:56:24.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.813" endtime="20201030 15:56:24.195"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.204" endtime="20201030 15:56:24.224"></status>
</kw>
<msg timestamp="20201030 15:56:24.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.202" endtime="20201030 15:56:24.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.225" endtime="20201030 15:56:24.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.228" endtime="20201030 15:56:24.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.200" endtime="20201030 15:56:24.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.198" endtime="20201030 15:56:24.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.236" endtime="20201030 15:56:24.524"></status>
</kw>
<msg timestamp="20201030 15:56:24.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019608319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019698778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.235" endtime="20201030 15:56:24.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019608319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019698778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.528" endtime="20201030 15:56:24.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.536" endtime="20201030 15:56:24.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.232" endtime="20201030 15:56:24.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.231" endtime="20201030 15:56:24.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:24.542" level="INFO">${RESULT} = [{'diff': 9.045900000000107e-05}, {'diff': 9.095900000000157e-05}, {'diff': 9.086200000000058e-05}, {'diff': 9.013800000000002e-05}, {'diff': 9.08879999999973e-05}, {'diff': 9.012499999999993e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:24.539" endtime="20201030 15:56:24.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:24.546" level="INFO">${ACCURACY} = {'diff': [9.045900000000107e-05, 9.095900000000157e-05, 9.086200000000058e-05, 9.013800000000002e-05, 9.08879999999973e-05, 9.012499999999993e-05, 9.08190000000024e-05, 9.108299999999875e-05, 9.105499...</msg>
<status status="PASS" starttime="20201030 15:56:24.543" endtime="20201030 15:56:24.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.551" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 15:56:24.550" endtime="20201030 15:56:24.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.553" level="INFO">VALUE: [9.045900000000107e-05, 9.095900000000157e-05, 9.086200000000058e-05, 9.013800000000002e-05, 9.08879999999973e-05, 9.012499999999993e-05, 9.08190000000024e-05, 9.108299999999875e-05, 9.105499999999961e-05, 9.10000000000008e-05, 9.095799999999862e-05, 9.048599999999726e-05, 9.106999999999865e-05, 9.076400000000012e-05, 9.104199999999951e-05, 9.087499999999721e-05, 9.080599999999883e-05, 9.025000000000005e-05, 9.06939999999988e-05, 9.059700000000129e-05, 9.10000000000008e-05, 9.05000000000003e-05, 9.106899999999918e-05, 9.026399999999962e-05, 9.023600000000048e-05, 9.020799999999787e-05, 9.038899999999975e-05, 9.025000000000005e-05, 9.10000000000008e-05, 9.080500000000283e-05, 9.069499999999828e-05, 9.025000000000005e-05, 9.045800000000159e-05, 9.062500000000043e-05, 9.045800000000159e-05, 9.044400000000202e-05, 9.101400000000037e-05, 9.061099999999739e-05, 9.054199999999901e-05, 9.093100000000243e-05, 9.101400000000037e-05, 9.090299999999982e-05, 9.069499999999828e-05, 9.08060000000023e-05, 9.072200000000141e-05, 9.03199999999979e-05, 9.056999999999815e-05, 9.034699999999757e-05, 9.017999999999873e-05, 9.041600000000288e-05]</msg>
<status status="PASS" starttime="20201030 15:56:24.552" endtime="20201030 15:56:24.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.547" endtime="20201030 15:56:24.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:24.563" endtime="20201030 15:56:24.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.561" endtime="20201030 15:56:24.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.560" endtime="20201030 15:56:24.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.196" endtime="20201030 15:56:24.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.196" endtime="20201030 15:56:24.583"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.592" endtime="20201030 15:56:24.613"></status>
</kw>
<msg timestamp="20201030 15:56:24.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.590" endtime="20201030 15:56:24.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.614" endtime="20201030 15:56:24.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.617" endtime="20201030 15:56:24.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.588" endtime="20201030 15:56:24.619"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.586" endtime="20201030 15:56:24.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.626" endtime="20201030 15:56:24.917"></status>
</kw>
<msg timestamp="20201030 15:56:24.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020570764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020662194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.624" endtime="20201030 15:56:24.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020570764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020662194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.926" endtime="20201030 15:56:24.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.945" endtime="20201030 15:56:24.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.622" endtime="20201030 15:56:24.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.620" endtime="20201030 15:56:24.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:24.958" level="INFO">${RESULT} = [{'diff': 9.142999999999998e-05}, {'diff': 9.130499999999986e-05}, {'diff': 9.176399999999765e-05}, {'diff': 9.161100000000186e-05}, {'diff': 9.111100000000136e-05}, {'diff': 9.176400000000112e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:24.952" endtime="20201030 15:56:24.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:24.967" level="INFO">${ACCURACY} = {'diff': [9.142999999999998e-05, 9.130499999999986e-05, 9.176399999999765e-05, 9.161100000000186e-05, 9.111100000000136e-05, 9.176400000000112e-05, 9.113899999999703e-05, 9.112499999999746e-05, 9.2098...</msg>
<status status="PASS" starttime="20201030 15:56:24.960" endtime="20201030 15:56:24.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.976" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 15:56:24.974" endtime="20201030 15:56:24.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.983" level="INFO">VALUE: [9.142999999999998e-05, 9.130499999999986e-05, 9.176399999999765e-05, 9.161100000000186e-05, 9.111100000000136e-05, 9.176400000000112e-05, 9.113899999999703e-05, 9.112499999999746e-05, 9.209800000000226e-05, 9.18199999999994e-05, 9.205600000000008e-05, 9.194499999999953e-05, 9.14589999999986e-05, 9.11939999999993e-05, 9.119500000000225e-05, 9.1332999999999e-05, 9.155500000000011e-05, 9.176399999999765e-05, 9.20139999999979e-05, 9.20000000000018e-05, 9.125000000000105e-05, 9.126400000000062e-05, 9.126400000000062e-05, 9.177800000000069e-05, 9.1639000000001e-05, 9.112500000000093e-05, 9.156999999999915e-05, 9.177799999999722e-05, 9.20000000000018e-05, 9.147200000000216e-05, 9.20139999999979e-05, 9.16939999999998e-05, 9.1332999999999e-05, 9.191700000000039e-05, 9.190300000000082e-05, 9.194400000000005e-05, 9.205500000000061e-05, 9.126399999999715e-05, 9.138899999999728e-05, 9.190300000000082e-05, 9.172300000000189e-05, 9.173700000000146e-05, 9.111200000000083e-05, 9.195799999999962e-05, 9.179100000000079e-05, 9.194400000000005e-05, 9.126400000000062e-05, 9.141600000000041e-05, 9.188900000000125e-05, 9.176399999999765e-05]</msg>
<status status="PASS" starttime="20201030 15:56:24.978" endtime="20201030 15:56:24.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.969" endtime="20201030 15:56:24.985"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:24.991" endtime="20201030 15:56:25.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.990" endtime="20201030 15:56:25.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.987" endtime="20201030 15:56:25.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.584" endtime="20201030 15:56:25.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.584" endtime="20201030 15:56:25.012"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.020" endtime="20201030 15:56:25.041"></status>
</kw>
<msg timestamp="20201030 15:56:25.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.019" endtime="20201030 15:56:25.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.042" endtime="20201030 15:56:25.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.044" endtime="20201030 15:56:25.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.016" endtime="20201030 15:56:25.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.014" endtime="20201030 15:56:25.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.053" endtime="20201030 15:56:25.339"></status>
</kw>
<msg timestamp="20201030 15:56:25.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019739278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.052" endtime="20201030 15:56:25.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019739278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.343" endtime="20201030 15:56:25.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.352" endtime="20201030 15:56:25.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.049" endtime="20201030 15:56:25.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.048" endtime="20201030 15:56:25.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:25.358" level="INFO">${RESULT} = [{'diff': 9.31529999999986e-05}, {'diff': 9.293000000000148e-05}, {'diff': 9.2639000000002e-05}, {'diff': 9.226400000000162e-05}, {'diff': 9.274999999999908e-05}, {'diff': 9.281900000000093e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:56:25.355" endtime="20201030 15:56:25.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:25.363" level="INFO">${ACCURACY} = {'diff': [9.31529999999986e-05, 9.293000000000148e-05, 9.2639000000002e-05, 9.226400000000162e-05, 9.274999999999908e-05, 9.281900000000093e-05, 9.274999999999908e-05, 9.233399999999947e-05, 9.2431000...</msg>
<status status="PASS" starttime="20201030 15:56:25.359" endtime="20201030 15:56:25.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.368" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 15:56:25.367" endtime="20201030 15:56:25.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.371" level="INFO">VALUE: [9.31529999999986e-05, 9.293000000000148e-05, 9.2639000000002e-05, 9.226400000000162e-05, 9.274999999999908e-05, 9.281900000000093e-05, 9.274999999999908e-05, 9.233399999999947e-05, 9.243100000000046e-05, 9.244500000000003e-05, 9.230600000000033e-05, 9.277800000000169e-05, 9.212499999999846e-05, 9.227699999999825e-05, 9.220799999999987e-05, 9.305499999999814e-05, 9.302800000000194e-05, 9.305600000000108e-05, 9.281899999999746e-05, 9.263899999999853e-05, 9.306900000000118e-05, 9.213899999999803e-05, 9.222299999999892e-05, 9.298599999999976e-05, 9.238900000000175e-05, 9.237499999999871e-05, 9.274999999999908e-05, 9.25139999999984e-05, 9.263800000000252e-05, 9.248600000000273e-05, 9.236099999999914e-05, 9.251400000000187e-05, 9.286100000000311e-05, 9.255599999999711e-05, 9.218100000000021e-05, 9.25139999999984e-05, 9.223600000000248e-05, 9.308400000000022e-05, 9.261099999999939e-05, 9.240300000000132e-05, 9.311099999999989e-05, 9.298699999999924e-05, 9.245800000000012e-05, 9.269399999999733e-05, 9.306999999999718e-05, 9.245800000000012e-05, 9.281900000000093e-05, 9.287499999999921e-05, 9.277799999999822e-05, 9.223599999999901e-05]</msg>
<status status="PASS" starttime="20201030 15:56:25.369" endtime="20201030 15:56:25.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.364" endtime="20201030 15:56:25.372"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:25.376" endtime="20201030 15:56:25.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.375" endtime="20201030 15:56:25.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.373" endtime="20201030 15:56:25.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.013" endtime="20201030 15:56:25.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.012" endtime="20201030 15:56:25.397"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.406" endtime="20201030 15:56:25.426"></status>
</kw>
<msg timestamp="20201030 15:56:25.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.404" endtime="20201030 15:56:25.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.427" endtime="20201030 15:56:25.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.430" endtime="20201030 15:56:25.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.402" endtime="20201030 15:56:25.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.400" endtime="20201030 15:56:25.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.439" endtime="20201030 15:56:25.728"></status>
</kw>
<msg timestamp="20201030 15:56:25.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019685319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019779139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.437" endtime="20201030 15:56:25.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019685319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019779139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:25.732" endtime="20201030 15:56:25.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.740" endtime="20201030 15:56:25.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.435" endtime="20201030 15:56:25.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.433" endtime="20201030 15:56:25.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:25.747" level="INFO">${RESULT} = [{'diff': 9.38200000000014e-05}, {'diff': 9.380599999999836e-05}, {'diff': 9.39590000000011e-05}, {'diff': 9.369500000000128e-05}, {'diff': 9.398600000000076e-05}, {'diff': 9.326400000000262e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:25.744" endtime="20201030 15:56:25.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:25.751" level="INFO">${ACCURACY} = {'diff': [9.38200000000014e-05, 9.380599999999836e-05, 9.39590000000011e-05, 9.369500000000128e-05, 9.398600000000076e-05, 9.326400000000262e-05, 9.398600000000076e-05, 9.35139999999994e-05, 9.3693999...</msg>
<status status="PASS" starttime="20201030 15:56:25.748" endtime="20201030 15:56:25.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.755" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 15:56:25.754" endtime="20201030 15:56:25.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.758" level="INFO">VALUE: [9.38200000000014e-05, 9.380599999999836e-05, 9.39590000000011e-05, 9.369500000000128e-05, 9.398600000000076e-05, 9.326400000000262e-05, 9.398600000000076e-05, 9.35139999999994e-05, 9.369399999999833e-05, 9.362499999999996e-05, 9.394400000000205e-05, 9.383299999999803e-05, 9.349999999999983e-05, 9.363899999999953e-05, 9.356899999999821e-05, 9.381999999999793e-05, 9.318100000000121e-05, 9.390299999999935e-05, 9.404199999999904e-05, 9.404100000000304e-05, 9.356999999999768e-05, 9.33879999999998e-05, 9.344400000000155e-05, 9.38880000000003e-05, 9.394399999999858e-05, 9.317999999999826e-05, 9.388899999999978e-05, 9.400000000000033e-05, 9.395800000000162e-05, 9.393100000000196e-05, 9.326399999999915e-05, 9.311099999999989e-05, 9.383400000000097e-05, 9.375000000000008e-05, 9.326399999999915e-05, 9.400000000000033e-05, 9.363899999999953e-05, 9.316699999999817e-05, 9.400000000000033e-05, 9.349999999999983e-05, 9.344399999999808e-05, 9.35139999999994e-05, 9.404199999999904e-05, 9.363899999999953e-05, 9.341700000000189e-05, 9.329199999999829e-05, 9.312499999999946e-05, 9.319500000000078e-05, 9.394400000000205e-05, 9.331900000000143e-05]</msg>
<status status="PASS" starttime="20201030 15:56:25.756" endtime="20201030 15:56:25.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.752" endtime="20201030 15:56:25.759"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:25.763" endtime="20201030 15:56:25.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.761" endtime="20201030 15:56:25.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.760" endtime="20201030 15:56:25.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.398" endtime="20201030 15:56:25.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.397" endtime="20201030 15:56:25.783"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.792" endtime="20201030 15:56:25.812"></status>
</kw>
<msg timestamp="20201030 15:56:25.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.790" endtime="20201030 15:56:25.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:25.814" endtime="20201030 15:56:25.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.816" endtime="20201030 15:56:25.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.788" endtime="20201030 15:56:25.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.786" endtime="20201030 15:56:25.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:25.825" endtime="20201030 15:56:26.110"></status>
</kw>
<msg timestamp="20201030 15:56:26.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02046675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020561347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:25.824" endtime="20201030 15:56:26.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02046675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020561347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:26.114" endtime="20201030 15:56:26.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.123" endtime="20201030 15:56:26.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.821" endtime="20201030 15:56:26.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.819" endtime="20201030 15:56:26.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:26.130" level="INFO">${RESULT} = [{'diff': 9.459700000000182e-05}, {'diff': 9.413900000000003e-05}, {'diff': 9.411099999999742e-05}, {'diff': 9.409699999999785e-05}, {'diff': 9.431899999999896e-05}, {'diff': 9.440299999999985e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:26.126" endtime="20201030 15:56:26.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:26.134" level="INFO">${ACCURACY} = {'diff': [9.459700000000182e-05, 9.413900000000003e-05, 9.411099999999742e-05, 9.409699999999785e-05, 9.431899999999896e-05, 9.440299999999985e-05, 9.498600000000176e-05, 9.43200000000019e-05, 9.50969...</msg>
<status status="PASS" starttime="20201030 15:56:26.131" endtime="20201030 15:56:26.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.138" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 15:56:26.137" endtime="20201030 15:56:26.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.141" level="INFO">VALUE: [9.459700000000182e-05, 9.413900000000003e-05, 9.411099999999742e-05, 9.409699999999785e-05, 9.431899999999896e-05, 9.440299999999985e-05, 9.498600000000176e-05, 9.43200000000019e-05, 9.509699999999885e-05, 9.450000000000083e-05, 9.422200000000144e-05, 9.469399999999933e-05, 9.481899999999946e-05, 9.470800000000237e-05, 9.459699999999835e-05, 9.473600000000151e-05, 9.440299999999985e-05, 9.474999999999761e-05, 9.487500000000121e-05, 9.480599999999936e-05, 9.469500000000228e-05, 9.470899999999838e-05, 9.454199999999954e-05, 9.458300000000225e-05, 9.451299999999746e-05, 9.501300000000143e-05, 9.426400000000015e-05, 9.427700000000025e-05, 9.486100000000164e-05, 9.431900000000243e-05, 9.481899999999946e-05, 9.495799999999915e-05, 9.487500000000121e-05, 9.437500000000071e-05, 9.452799999999997e-05, 9.431999999999843e-05, 9.470899999999838e-05, 9.431999999999843e-05, 9.476300000000118e-05, 9.479100000000032e-05, 9.494399999999958e-05, 9.442999999999951e-05, 9.469399999999933e-05, 9.495799999999915e-05, 9.505599999999961e-05, 9.494500000000253e-05, 9.469500000000228e-05, 9.49590000000021e-05, 9.425000000000058e-05, 9.470899999999838e-05]</msg>
<status status="PASS" starttime="20201030 15:56:26.139" endtime="20201030 15:56:26.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.135" endtime="20201030 15:56:26.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:26.146" endtime="20201030 15:56:26.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.145" endtime="20201030 15:56:26.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.144" endtime="20201030 15:56:26.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.784" endtime="20201030 15:56:26.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.784" endtime="20201030 15:56:26.167"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.175" endtime="20201030 15:56:26.196"></status>
</kw>
<msg timestamp="20201030 15:56:26.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.174" endtime="20201030 15:56:26.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.198" endtime="20201030 15:56:26.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.200" endtime="20201030 15:56:26.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.171" endtime="20201030 15:56:26.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.169" endtime="20201030 15:56:26.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.214" endtime="20201030 15:56:26.520"></status>
</kw>
<msg timestamp="20201030 15:56:26.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019524347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019619569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:26.212" endtime="20201030 15:56:26.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019524347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019619569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:26.524" endtime="20201030 15:56:26.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.532" endtime="20201030 15:56:26.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.209" endtime="20201030 15:56:26.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.207" endtime="20201030 15:56:26.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:26.539" level="INFO">${RESULT} = [{'diff': 9.522199999999897e-05}, {'diff': 9.52079999999994e-05}, {'diff': 9.562499999999849e-05}, {'diff': 9.558299999999978e-05}, {'diff': 9.512500000000146e-05}, {'diff': 9.533299999999953e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:26.536" endtime="20201030 15:56:26.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:26.544" level="INFO">${ACCURACY} = {'diff': [9.522199999999897e-05, 9.52079999999994e-05, 9.562499999999849e-05, 9.558299999999978e-05, 9.512500000000146e-05, 9.533299999999953e-05, 9.549999999999836e-05, 9.51799999999968e-05, 9.527800...</msg>
<status status="PASS" starttime="20201030 15:56:26.540" endtime="20201030 15:56:26.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.549" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 15:56:26.548" endtime="20201030 15:56:26.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.551" level="INFO">VALUE: [9.522199999999897e-05, 9.52079999999994e-05, 9.562499999999849e-05, 9.558299999999978e-05, 9.512500000000146e-05, 9.533299999999953e-05, 9.549999999999836e-05, 9.51799999999968e-05, 9.527800000000072e-05, 9.530599999999986e-05, 9.60140000000019e-05, 9.558399999999925e-05, 9.607000000000018e-05, 9.608399999999975e-05, 9.522199999999897e-05, 9.613899999999856e-05, 9.563900000000153e-05, 9.57079999999999e-05, 9.574999999999861e-05, 9.556900000000021e-05, 9.587499999999874e-05, 9.573599999999904e-05, 9.537499999999824e-05, 9.51530000000006e-05, 9.576400000000165e-05, 9.556999999999968e-05, 9.5333999999999e-05, 9.605600000000061e-05, 9.604100000000157e-05, 9.556900000000021e-05, 9.555499999999717e-05, 9.608399999999975e-05, 9.550000000000183e-05, 9.55140000000014e-05, 9.512499999999799e-05, 9.608300000000028e-05, 9.583300000000003e-05, 9.587500000000221e-05, 9.518099999999974e-05, 9.594500000000006e-05, 9.565299999999763e-05, 9.562499999999849e-05, 9.543000000000051e-05, 9.601399999999843e-05, 9.538899999999781e-05, 9.597199999999972e-05, 9.541700000000042e-05, 9.573599999999904e-05, 9.547199999999922e-05, 9.606900000000071e-05]</msg>
<status status="PASS" starttime="20201030 15:56:26.550" endtime="20201030 15:56:26.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.545" endtime="20201030 15:56:26.552"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:26.556" endtime="20201030 15:56:26.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.554" endtime="20201030 15:56:26.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.553" endtime="20201030 15:56:26.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.168" endtime="20201030 15:56:26.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.167" endtime="20201030 15:56:26.577"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.585" endtime="20201030 15:56:26.605"></status>
</kw>
<msg timestamp="20201030 15:56:26.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.584" endtime="20201030 15:56:26.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.607" endtime="20201030 15:56:26.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.609" endtime="20201030 15:56:26.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.581" endtime="20201030 15:56:26.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.579" endtime="20201030 15:56:26.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.618" endtime="20201030 15:56:26.905"></status>
</kw>
<msg timestamp="20201030 15:56:26.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019578486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019675542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:26.617" endtime="20201030 15:56:26.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019578486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019675542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:26.910" endtime="20201030 15:56:26.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.918" endtime="20201030 15:56:26.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.614" endtime="20201030 15:56:26.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.612" endtime="20201030 15:56:26.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:26.925" level="INFO">${RESULT} = [{'diff': 9.705600000000161e-05}, {'diff': 9.708400000000075e-05}, {'diff': 9.688900000000278e-05}, {'diff': 9.608300000000028e-05}, {'diff': 9.618000000000126e-05}, {'diff': 9.655499999999817e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:26.922" endtime="20201030 15:56:26.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:26.929" level="INFO">${ACCURACY} = {'diff': [9.705600000000161e-05, 9.708400000000075e-05, 9.688900000000278e-05, 9.608300000000028e-05, 9.618000000000126e-05, 9.655499999999817e-05, 9.641699999999795e-05, 9.613899999999856e-05, 9.6139...</msg>
<status status="PASS" starttime="20201030 15:56:26.926" endtime="20201030 15:56:26.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.933" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 15:56:26.932" endtime="20201030 15:56:26.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.936" level="INFO">VALUE: [9.705600000000161e-05, 9.708400000000075e-05, 9.688900000000278e-05, 9.608300000000028e-05, 9.618000000000126e-05, 9.655499999999817e-05, 9.641699999999795e-05, 9.613899999999856e-05, 9.613900000000203e-05, 9.707000000000118e-05, 9.65140000000024e-05, 9.707000000000118e-05, 9.644500000000056e-05, 9.648600000000326e-05, 9.636100000000314e-05, 9.641700000000142e-05, 9.615199999999866e-05, 9.631899999999749e-05, 9.688899999999931e-05, 9.644400000000108e-05, 9.701399999999943e-05, 9.697200000000072e-05, 9.661099999999992e-05, 9.62920000000013e-05, 9.688900000000278e-05, 9.683399999999703e-05, 9.682000000000093e-05, 9.697200000000072e-05, 9.698599999999682e-05, 9.63059999999974e-05, 9.651299999999946e-05, 9.62080000000004e-05, 9.697200000000072e-05, 9.644400000000108e-05, 9.619400000000083e-05, 9.67920000000018e-05, 9.695799999999768e-05, 9.674999999999961e-05, 9.680600000000136e-05, 9.609699999999985e-05, 9.623599999999954e-05, 9.649999999999936e-05, 9.677800000000222e-05, 9.659700000000035e-05, 9.622199999999997e-05, 9.681899999999799e-05, 9.622199999999997e-05, 9.674999999999961e-05, 9.627799999999825e-05, 9.612499999999899e-05]</msg>
<status status="PASS" starttime="20201030 15:56:26.934" endtime="20201030 15:56:26.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.930" endtime="20201030 15:56:26.937"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:26.941" endtime="20201030 15:56:26.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.939" endtime="20201030 15:56:26.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.938" endtime="20201030 15:56:26.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.577" endtime="20201030 15:56:26.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.577" endtime="20201030 15:56:26.961"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.970" endtime="20201030 15:56:26.991"></status>
</kw>
<msg timestamp="20201030 15:56:26.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.968" endtime="20201030 15:56:26.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.992" endtime="20201030 15:56:26.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.995" endtime="20201030 15:56:26.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.966" endtime="20201030 15:56:26.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.964" endtime="20201030 15:56:26.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.004" endtime="20201030 15:56:27.290"></status>
</kw>
<msg timestamp="20201030 15:56:27.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020484042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020581403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.002" endtime="20201030 15:56:27.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020484042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020581403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.294" endtime="20201030 15:56:27.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.302" endtime="20201030 15:56:27.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.999" endtime="20201030 15:56:27.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.998" endtime="20201030 15:56:27.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:27.309" level="INFO">${RESULT} = [{'diff': 9.736100000000067e-05}, {'diff': 9.73059999999984e-05}, {'diff': 9.743099999999852e-05}, {'diff': 9.719499999999784e-05}, {'diff': 9.737500000000024e-05}, {'diff': 9.751399999999993e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:27.306" endtime="20201030 15:56:27.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:27.313" level="INFO">${ACCURACY} = {'diff': [9.736100000000067e-05, 9.73059999999984e-05, 9.743099999999852e-05, 9.719499999999784e-05, 9.737500000000024e-05, 9.751399999999993e-05, 9.776299999999724e-05, 9.737500000000024e-05, 9.71799...</msg>
<status status="PASS" starttime="20201030 15:56:27.310" endtime="20201030 15:56:27.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.317" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 15:56:27.316" endtime="20201030 15:56:27.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.320" level="INFO">VALUE: [9.736100000000067e-05, 9.73059999999984e-05, 9.743099999999852e-05, 9.719499999999784e-05, 9.737500000000024e-05, 9.751399999999993e-05, 9.776299999999724e-05, 9.737500000000024e-05, 9.71799999999988e-05, 9.740299999999938e-05, 9.795800000000215e-05, 9.762499999999702e-05, 9.797199999999825e-05, 9.768099999999877e-05, 9.705600000000161e-05, 9.726399999999968e-05, 9.78059999999989e-05, 9.74019999999999e-05, 9.73470000000011e-05, 9.715200000000312e-05, 9.762500000000049e-05, 9.8028e-05, 9.756899999999874e-05, 9.76799999999993e-05, 9.769399999999887e-05, 9.73470000000011e-05, 9.747200000000122e-05, 9.793100000000249e-05, 9.737500000000024e-05, 9.783299999999856e-05, 9.794500000000206e-05, 9.774999999999714e-05, 9.76669999999992e-05, 9.765200000000016e-05, 9.730499999999892e-05, 9.763900000000006e-05, 9.79999999999974e-05, 9.727799999999925e-05, 9.704100000000257e-05, 9.755499999999917e-05, 9.722200000000097e-05, 9.751399999999993e-05, 9.741700000000242e-05, 9.801400000000043e-05, 9.782000000000193e-05, 9.794400000000258e-05, 9.808299999999881e-05, 9.768099999999877e-05, 9.711100000000042e-05, 9.763900000000006e-05]</msg>
<status status="PASS" starttime="20201030 15:56:27.318" endtime="20201030 15:56:27.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.314" endtime="20201030 15:56:27.322"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:27.326" endtime="20201030 15:56:27.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.324" endtime="20201030 15:56:27.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.323" endtime="20201030 15:56:27.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.962" endtime="20201030 15:56:27.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.962" endtime="20201030 15:56:27.346"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.355" endtime="20201030 15:56:27.376"></status>
</kw>
<msg timestamp="20201030 15:56:27.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.353" endtime="20201030 15:56:27.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.377" endtime="20201030 15:56:27.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.380" endtime="20201030 15:56:27.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.351" endtime="20201030 15:56:27.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.349" endtime="20201030 15:56:27.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.389" endtime="20201030 15:56:27.675"></status>
</kw>
<msg timestamp="20201030 15:56:27.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019574097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019672625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.387" endtime="20201030 15:56:27.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019574097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019672625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.681" endtime="20201030 15:56:27.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.689" endtime="20201030 15:56:27.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.385" endtime="20201030 15:56:27.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.383" endtime="20201030 15:56:27.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:27.696" level="INFO">${RESULT} = [{'diff': 9.85280000000005e-05}, {'diff': 9.85280000000005e-05}, {'diff': 9.819499999999884e-05}, {'diff': 9.843099999999952e-05}, {'diff': 9.845899999999866e-05}, {'diff': 9.904099999999763e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:27.693" endtime="20201030 15:56:27.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:27.701" level="INFO">${ACCURACY} = {'diff': [9.85280000000005e-05, 9.85280000000005e-05, 9.819499999999884e-05, 9.843099999999952e-05, 9.845899999999866e-05, 9.904099999999763e-05, 9.909699999999938e-05, 9.838900000000081e-05, 9.879100...</msg>
<status status="PASS" starttime="20201030 15:56:27.697" endtime="20201030 15:56:27.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.705" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 15:56:27.704" endtime="20201030 15:56:27.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.708" level="INFO">VALUE: [9.85280000000005e-05, 9.85280000000005e-05, 9.819499999999884e-05, 9.843099999999952e-05, 9.845899999999866e-05, 9.904099999999763e-05, 9.909699999999938e-05, 9.838900000000081e-05, 9.879100000000085e-05, 9.84860000000018e-05, 9.844399999999962e-05, 9.862500000000149e-05, 9.906900000000024e-05, 9.844399999999962e-05, 9.856999999999921e-05, 9.875000000000161e-05, 9.908399999999928e-05, 9.827800000000025e-05, 9.874999999999814e-05, 9.906900000000024e-05, 9.906900000000024e-05, 9.826400000000068e-05, 9.834699999999863e-05, 9.869399999999987e-05, 9.900000000000186e-05, 9.823600000000154e-05, 9.872200000000247e-05, 9.882000000000293e-05, 9.858400000000225e-05, 9.83470000000021e-05, 9.822300000000145e-05, 9.908399999999928e-05, 9.845799999999919e-05, 9.897199999999926e-05, 9.833299999999906e-05, 9.855500000000017e-05, 9.868100000000324e-05, 9.831900000000296e-05, 9.9028000000001e-05, 9.870799999999944e-05, 9.85280000000005e-05, 9.858399999999878e-05, 9.845899999999866e-05, 9.813900000000056e-05, 9.83059999999994e-05, 9.818099999999927e-05, 9.898599999999882e-05, 9.833299999999906e-05, 9.830499999999992e-05, 9.875000000000161e-05]</msg>
<status status="PASS" starttime="20201030 15:56:27.706" endtime="20201030 15:56:27.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.702" endtime="20201030 15:56:27.709"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:27.713" endtime="20201030 15:56:27.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.711" endtime="20201030 15:56:27.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.710" endtime="20201030 15:56:27.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.347" endtime="20201030 15:56:27.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.347" endtime="20201030 15:56:27.733"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.742" endtime="20201030 15:56:27.762"></status>
</kw>
<msg timestamp="20201030 15:56:27.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.741" endtime="20201030 15:56:27.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:27.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:27.764" endtime="20201030 15:56:27.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.766" endtime="20201030 15:56:27.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.738" endtime="20201030 15:56:27.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.736" endtime="20201030 15:56:27.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:27.775" endtime="20201030 15:56:28.062"></status>
</kw>
<msg timestamp="20201030 15:56:28.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:27.774" endtime="20201030 15:56:28.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019722125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:28.066" endtime="20201030 15:56:28.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.075" endtime="20201030 15:56:28.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.771" endtime="20201030 15:56:28.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.769" endtime="20201030 15:56:28.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:28.081" level="INFO">${RESULT} = [{'diff': 9.923599999999907e-05}, {'diff': 0.00010009700000000038}, {'diff': 9.911099999999895e-05}, {'diff': 9.945800000000019e-05}, {'diff': 9.948599999999932e-05}, {'diff': 9.916599999999776e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:56:28.078" endtime="20201030 15:56:28.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:28.085" level="INFO">${ACCURACY} = {'diff': [9.923599999999907e-05, 0.00010009700000000038, 9.911099999999895e-05, 9.945800000000019e-05, 9.948599999999932e-05, 9.916599999999776e-05, 9.957000000000021e-05, 9.924999999999864e-05, 9.919...</msg>
<status status="PASS" starttime="20201030 15:56:28.082" endtime="20201030 15:56:28.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.090" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 15:56:28.088" endtime="20201030 15:56:28.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.092" level="INFO">VALUE: [9.923599999999907e-05, 0.00010009700000000038, 9.911099999999895e-05, 9.945800000000019e-05, 9.948599999999932e-05, 9.916599999999776e-05, 9.957000000000021e-05, 9.924999999999864e-05, 9.919400000000037e-05, 9.919400000000037e-05, 0.00010001399999999896, 9.916599999999776e-05, 9.994399999999765e-05, 9.933300000000006e-05, 9.993100000000102e-05, 9.944500000000009e-05, 9.93060000000004e-05, 0.000100028000000002, 9.944500000000009e-05, 9.99999999999994e-05, 9.941700000000095e-05, 9.980500000000142e-05, 9.956900000000074e-05, 9.924999999999864e-05, 9.924999999999864e-05, 9.940300000000138e-05, 9.980500000000142e-05, 9.993100000000102e-05, 9.919400000000037e-05, 9.951400000000193e-05, 9.991700000000145e-05, 9.965299999999816e-05, 9.980599999999742e-05, 9.976399999999871e-05, 9.962499999999902e-05, 9.944400000000062e-05, 9.965299999999816e-05, 9.959699999999988e-05, 9.917999999999733e-05, 0.00010009700000000038, 9.99999999999994e-05, 0.00010008299999999734, 9.933300000000006e-05, 0.00010001399999999896, 0.00010008400000000028, 9.962500000000249e-05, 9.918100000000027e-05, 9.994500000000059e-05, 9.955600000000064e-05, 9.976299999999924e-05]</msg>
<status status="PASS" starttime="20201030 15:56:28.091" endtime="20201030 15:56:28.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.086" endtime="20201030 15:56:28.093"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:28.097" endtime="20201030 15:56:28.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.095" endtime="20201030 15:56:28.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.094" endtime="20201030 15:56:28.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.734" endtime="20201030 15:56:28.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:27.734" endtime="20201030 15:56:28.118"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.126" endtime="20201030 15:56:28.148"></status>
</kw>
<msg timestamp="20201030 15:56:28.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:28.125" endtime="20201030 15:56:28.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:28.149" endtime="20201030 15:56:28.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.152" endtime="20201030 15:56:28.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.122" endtime="20201030 15:56:28.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.120" endtime="20201030 15:56:28.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.161" endtime="20201030 15:56:28.446"></status>
</kw>
<msg timestamp="20201030 15:56:28.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020544681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020644889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:28.159" endtime="20201030 15:56:28.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020544681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020644889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:28.451" endtime="20201030 15:56:28.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.459" endtime="20201030 15:56:28.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.156" endtime="20201030 15:56:28.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.155" endtime="20201030 15:56:28.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:28.465" level="INFO">${RESULT} = [{'diff': 0.00010020800000000094}, {'diff': 0.00010112499999999705}, {'diff': 0.00010075000000000014}, {'diff': 0.00010107000000000171}, {'diff': 0.00010081899999999852}, {'diff': 0.000100262999999999...</msg>
<status status="PASS" starttime="20201030 15:56:28.462" endtime="20201030 15:56:28.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:28.469" level="INFO">${ACCURACY} = {'diff': [0.00010020800000000094, 0.00010112499999999705, 0.00010075000000000014, 0.00010107000000000171, 0.00010081899999999852, 0.00010026299999999974, 0.00010079099999999938, 0.00010023600000000008...</msg>
<status status="PASS" starttime="20201030 15:56:28.466" endtime="20201030 15:56:28.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.473" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 15:56:28.472" endtime="20201030 15:56:28.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.476" level="INFO">VALUE: [0.00010020800000000094, 0.00010112499999999705, 0.00010075000000000014, 0.00010107000000000171, 0.00010081899999999852, 0.00010026299999999974, 0.00010079099999999938, 0.00010023600000000008, 0.00010037499999999977, 0.0001006939999999984, 0.00010056899999999827, 0.000100819999999998, 0.00010069400000000187, 0.00010044499999999762, 0.00010088899999999984, 0.00010052799999999903, 0.00010030500000000192, 0.00010052700000000303, 0.00010101300000000049, 0.00010013900000000256, 0.00010095799999999822, 0.00010062500000000002, 0.00010081899999999852, 0.00010048600000000033, 0.00010062500000000002, 0.00010075000000000014, 0.00010094500000000159, 0.00010058400000000078, 0.00010057000000000121, 0.00010062500000000002, 0.00010077699999999981, 0.00010084700000000113, 0.00010099999999999693, 0.00010077800000000275, 0.00010108300000000181, 0.00010095799999999822, 0.00010076399999999971, 0.00010093099999999855, 0.00010088899999999984, 0.00010097300000000073, 0.00010023600000000008, 0.00010088899999999984, 0.00010087500000000027, 0.00010082000000000146, 0.00010059699999999741, 0.00010012499999999952, 0.000100415999999999, 0.00010031900000000149, 0.00010106899999999877, 0.00010106900000000224]</msg>
<status status="PASS" starttime="20201030 15:56:28.474" endtime="20201030 15:56:28.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.470" endtime="20201030 15:56:28.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:28.481" endtime="20201030 15:56:28.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.480" endtime="20201030 15:56:28.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.479" endtime="20201030 15:56:28.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.118" endtime="20201030 15:56:28.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.118" endtime="20201030 15:56:28.502"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.511" endtime="20201030 15:56:28.532"></status>
</kw>
<msg timestamp="20201030 15:56:28.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:28.509" endtime="20201030 15:56:28.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:28.533" endtime="20201030 15:56:28.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.535" endtime="20201030 15:56:28.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.507" endtime="20201030 15:56:28.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.505" endtime="20201030 15:56:28.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.544" endtime="20201030 15:56:28.830"></status>
</kw>
<msg timestamp="20201030 15:56:28.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019779194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019880556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:28.543" endtime="20201030 15:56:28.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019779194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019880556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:28.834" endtime="20201030 15:56:28.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.842" endtime="20201030 15:56:28.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.540" endtime="20201030 15:56:28.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.539" endtime="20201030 15:56:28.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:28.848" level="INFO">${RESULT} = [{'diff': 0.00010136200000000067}, {'diff': 0.00010131900000000249}, {'diff': 0.00010206899999999977}, {'diff': 0.00010206899999999977}, {'diff': 0.00010144399999999915}, {'diff': 0.000102041000000000...</msg>
<status status="PASS" starttime="20201030 15:56:28.845" endtime="20201030 15:56:28.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:28.853" level="INFO">${ACCURACY} = {'diff': [0.00010136200000000067, 0.00010131900000000249, 0.00010206899999999977, 0.00010206899999999977, 0.00010144399999999915, 0.00010204100000000063, 0.00010154100000000013, 0.00010208399999999881...</msg>
<status status="PASS" starttime="20201030 15:56:28.849" endtime="20201030 15:56:28.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.857" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 15:56:28.856" endtime="20201030 15:56:28.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.860" level="INFO">VALUE: [0.00010136200000000067, 0.00010131900000000249, 0.00010206899999999977, 0.00010206899999999977, 0.00010144399999999915, 0.00010204100000000063, 0.00010154100000000013, 0.00010208399999999881, 0.00010167999999999983, 0.00010133299999999859, 0.00010183400000000203, 0.00010186099999999823, 0.0001020139999999975, 0.00010158300000000231, 0.00010125000000000065, 0.0001014870000000008, 0.00010211099999999848, 0.00010111100000000095, 0.00010206899999999977, 0.00010202800000000053, 0.00010176400000000071, 0.00010198599999999836, 0.00010127799999999978, 0.00010177799999999682, 0.00010194499999999912, 0.0001013610000000012, 0.00010118100000000227, 0.00010133300000000206, 0.0001011809999999988, 0.00010195800000000269, 0.00010113900000000009, 0.00010181900000000299, 0.00010147199999999829, 0.00010108300000000181, 0.0001016939999999994, 0.000101819999999999, 0.00010193099999999955, 0.00010183400000000203, 0.00010129199999999935, 0.00010126299999999727, 0.00010122300000000098, 0.00010175000000000115, 0.00010201400000000097, 0.00010167999999999983, 0.00010172199999999854, 0.00010194399999999965, 0.00010193099999999955, 0.00010190300000000041, 0.00010188900000000084, 0.0001020139999999975]</msg>
<status status="PASS" starttime="20201030 15:56:28.859" endtime="20201030 15:56:28.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.854" endtime="20201030 15:56:28.861"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:28.865" endtime="20201030 15:56:28.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.863" endtime="20201030 15:56:28.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.862" endtime="20201030 15:56:28.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.503" endtime="20201030 15:56:28.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.502" endtime="20201030 15:56:28.885"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.894" endtime="20201030 15:56:28.914"></status>
</kw>
<msg timestamp="20201030 15:56:28.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:28.892" endtime="20201030 15:56:28.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:28.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:28.916" endtime="20201030 15:56:28.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.918" endtime="20201030 15:56:28.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.890" endtime="20201030 15:56:28.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.888" endtime="20201030 15:56:28.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:28.927" endtime="20201030 15:56:29.216"></status>
</kw>
<msg timestamp="20201030 15:56:29.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019637181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019740056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:28.926" endtime="20201030 15:56:29.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019637181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019740056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:29.220" endtime="20201030 15:56:29.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.228" endtime="20201030 15:56:29.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.923" endtime="20201030 15:56:29.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.921" endtime="20201030 15:56:29.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:29.234" level="INFO">${RESULT} = [{'diff': 0.0001028749999999988}, {'diff': 0.00010276299999999877}, {'diff': 0.00010212499999999805}, {'diff': 0.00010294400000000065}, {'diff': 0.00010286099999999923}, {'diff': 0.0001027780000000012...</msg>
<status status="PASS" starttime="20201030 15:56:29.231" endtime="20201030 15:56:29.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:29.238" level="INFO">${ACCURACY} = {'diff': [0.0001028749999999988, 0.00010276299999999877, 0.00010212499999999805, 0.00010294400000000065, 0.00010286099999999923, 0.00010277800000000128, 0.00010308300000000034, 0.00010248599999999886,...</msg>
<status status="PASS" starttime="20201030 15:56:29.235" endtime="20201030 15:56:29.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.243" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 15:56:29.242" endtime="20201030 15:56:29.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.245" level="INFO">VALUE: [0.0001028749999999988, 0.00010276299999999877, 0.00010212499999999805, 0.00010294400000000065, 0.00010286099999999923, 0.00010277800000000128, 0.00010308300000000034, 0.00010248599999999886, 0.00010259699999999941, 0.0001025420000000006, 0.00010262499999999855, 0.00010238900000000134, 0.00010290300000000141, 0.000102416000000001, 0.00010268000000000083, 0.0001023749999999983, 0.00010302700000000206, 0.00010265300000000116, 0.00010225000000000165, 0.00010243000000000058, 0.00010240300000000091, 0.0001022359999999986, 0.00010295899999999969, 0.00010219499999999937, 0.00010230599999999992, 0.00010288899999999837, 0.00010226399999999775, 0.00010295799999999675, 0.00010294400000000065, 0.00010241700000000048, 0.00010212500000000152, 0.00010213900000000109, 0.00010308299999999687, 0.0001030139999999985, 0.00010262499999999855, 0.00010295899999999969, 0.00010238900000000134, 0.00010282, 0.00010287500000000227, 0.0001028749999999988, 0.0001026940000000004, 0.00010284699999999966, 0.00010247199999999929, 0.00010295800000000022, 0.00010224999999999818, 0.00010244399999999668, 0.00010288900000000184, 0.00010280600000000042, 0.00010290300000000141, 0.00010262500000000202]</msg>
<status status="PASS" starttime="20201030 15:56:29.244" endtime="20201030 15:56:29.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.239" endtime="20201030 15:56:29.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:29.250" endtime="20201030 15:56:29.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.249" endtime="20201030 15:56:29.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.247" endtime="20201030 15:56:29.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.886" endtime="20201030 15:56:29.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:28.886" endtime="20201030 15:56:29.271"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.279" endtime="20201030 15:56:29.301"></status>
</kw>
<msg timestamp="20201030 15:56:29.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:29.278" endtime="20201030 15:56:29.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:29.302" endtime="20201030 15:56:29.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.305" endtime="20201030 15:56:29.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.275" endtime="20201030 15:56:29.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.273" endtime="20201030 15:56:29.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.314" endtime="20201030 15:56:29.598"></status>
</kw>
<msg timestamp="20201030 15:56:29.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020457944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020561792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:29.312" endtime="20201030 15:56:29.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020457944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020561792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:29.602" endtime="20201030 15:56:29.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.610" endtime="20201030 15:56:29.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.310" endtime="20201030 15:56:29.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.308" endtime="20201030 15:56:29.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:29.617" level="INFO">${RESULT} = [{'diff': 0.00010384800000000013}, {'diff': 0.00010322300000000298}, {'diff': 0.00010390299999999894}, {'diff': 0.00010340199999999897}, {'diff': 0.00010401300000000002}, {'diff': 0.000104069000000001...</msg>
<status status="PASS" starttime="20201030 15:56:29.614" endtime="20201030 15:56:29.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:29.621" level="INFO">${ACCURACY} = {'diff': [0.00010384800000000013, 0.00010322300000000298, 0.00010390299999999894, 0.00010340199999999897, 0.00010401300000000002, 0.00010406900000000177, 0.00010406900000000177, 0.00010365299999999869...</msg>
<status status="PASS" starttime="20201030 15:56:29.618" endtime="20201030 15:56:29.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.625" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 15:56:29.624" endtime="20201030 15:56:29.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.628" level="INFO">VALUE: [0.00010384800000000013, 0.00010322300000000298, 0.00010390299999999894, 0.00010340199999999897, 0.00010401300000000002, 0.00010406900000000177, 0.00010406900000000177, 0.00010365299999999869, 0.00010377799999999882, 0.00010380499999999848, 0.00010327799999999832, 0.00010340300000000191, 0.00010386100000000023, 0.00010338899999999887, 0.00010319500000000037, 0.00010408400000000081, 0.000103820000000001, 0.00010386100000000023, 0.0001037079999999975, 0.00010312499999999905, 0.00010374999999999968, 0.00010338899999999887, 0.0001035550000000017, 0.00010374999999999968, 0.00010312500000000252, 0.00010352800000000204, 0.00010376399999999925, 0.00010327800000000179, 0.00010402699999999959, 0.00010324999999999918, 0.00010336099999999973, 0.0001040139999999995, 0.00010383299999999762, 0.00010399999999999993, 0.00010361099999999998, 0.00010311100000000295, 0.00010370800000000097, 0.00010354199999999814, 0.0001031810000000008, 0.00010395900000000069, 0.00010345900000000019, 0.00010356999999999728, 0.00010340200000000244, 0.0001040139999999995, 0.00010330500000000145, 0.0001033749999999993, 0.00010359700000000041, 0.0001032359999999996, 0.00010313899999999862, 0.00010394399999999818]</msg>
<status status="PASS" starttime="20201030 15:56:29.626" endtime="20201030 15:56:29.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.622" endtime="20201030 15:56:29.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:29.637" endtime="20201030 15:56:29.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.636" endtime="20201030 15:56:29.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.635" endtime="20201030 15:56:29.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.272" endtime="20201030 15:56:29.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.271" endtime="20201030 15:56:29.658"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.667" endtime="20201030 15:56:29.687"></status>
</kw>
<msg timestamp="20201030 15:56:29.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:29.665" endtime="20201030 15:56:29.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:29.689" endtime="20201030 15:56:29.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.691" endtime="20201030 15:56:29.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.663" endtime="20201030 15:56:29.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.661" endtime="20201030 15:56:29.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.700" endtime="20201030 15:56:29.986"></status>
</kw>
<msg timestamp="20201030 15:56:29.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019580014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019684333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:29.699" endtime="20201030 15:56:29.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:29.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019580014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019684333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:29.990" endtime="20201030 15:56:29.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:29.998" endtime="20201030 15:56:30.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.696" endtime="20201030 15:56:30.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.695" endtime="20201030 15:56:30.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:30.005" level="INFO">${RESULT} = [{'diff': 0.00010431899999999855}, {'diff': 0.00010450000000000043}, {'diff': 0.00010475000000000068}, {'diff': 0.00010472300000000101}, {'diff': 0.00010413899999999962}, {'diff': 0.000104098000000000...</msg>
<status status="PASS" starttime="20201030 15:56:30.002" endtime="20201030 15:56:30.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:30.010" level="INFO">${ACCURACY} = {'diff': [0.00010431899999999855, 0.00010450000000000043, 0.00010475000000000068, 0.00010472300000000101, 0.00010413899999999962, 0.00010409800000000038, 0.00010494399999999918, 0.00010483300000000209...</msg>
<status status="PASS" starttime="20201030 15:56:30.006" endtime="20201030 15:56:30.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.014" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 15:56:30.013" endtime="20201030 15:56:30.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.017" level="INFO">VALUE: [0.00010431899999999855, 0.00010450000000000043, 0.00010475000000000068, 0.00010472300000000101, 0.00010413899999999962, 0.00010409800000000038, 0.00010494399999999918, 0.00010483300000000209, 0.00010440199999999997, 0.00010412500000000005, 0.00010497199999999832, 0.00010501399999999703, 0.00010443100000000205, 0.0001042360000000006, 0.00010459800000000088, 0.00010436100000000073, 0.00010481999999999853, 0.00010473700000000058, 0.00010483299999999862, 0.00010440199999999997, 0.00010455499999999923, 0.000104514, 0.00010458300000000184, 0.00010500000000000093, 0.00010444400000000215, 0.00010440299999999944, 0.00010412500000000005, 0.00010488900000000037, 0.0001046949999999984, 0.00010420900000000094, 0.0001043750000000003, 0.00010469399999999893, 0.00010476400000000025, 0.0001048750000000008, 0.00010502800000000007, 0.000104514, 0.00010415299999999919, 0.00010452800000000304, 0.00010427800000000279, 0.00010458399999999785, 0.0001045420000000026, 0.00010427799999999932, 0.00010436099999999726, 0.0001048880000000009, 0.00010481999999999853, 0.00010476400000000025, 0.00010483299999999862, 0.00010463900000000012, 0.00010433299999999812, 0.00010422199999999757]</msg>
<status status="PASS" starttime="20201030 15:56:30.015" endtime="20201030 15:56:30.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.010" endtime="20201030 15:56:30.018"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:30.022" endtime="20201030 15:56:30.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.020" endtime="20201030 15:56:30.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.019" endtime="20201030 15:56:30.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.659" endtime="20201030 15:56:30.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:29.658" endtime="20201030 15:56:30.042"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.051" endtime="20201030 15:56:30.072"></status>
</kw>
<msg timestamp="20201030 15:56:30.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:30.049" endtime="20201030 15:56:30.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:30.073" endtime="20201030 15:56:30.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.075" endtime="20201030 15:56:30.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.047" endtime="20201030 15:56:30.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.045" endtime="20201030 15:56:30.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.084" endtime="20201030 15:56:30.371"></status>
</kw>
<msg timestamp="20201030 15:56:30.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019715986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019822083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:30.083" endtime="20201030 15:56:30.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019715986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019822083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:30.375" endtime="20201030 15:56:30.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.383" endtime="20201030 15:56:30.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.080" endtime="20201030 15:56:30.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.079" endtime="20201030 15:56:30.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:30.389" level="INFO">${RESULT} = [{'diff': 0.00010609699999999944}, {'diff': 0.00010580599999999996}, {'diff': 0.00010526399999999728}, {'diff': 0.00010531899999999955}, {'diff': 0.00010522200000000204}, {'diff': 0.000105291999999999...</msg>
<status status="PASS" starttime="20201030 15:56:30.386" endtime="20201030 15:56:30.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:30.393" level="INFO">${ACCURACY} = {'diff': [0.00010609699999999944, 0.00010580599999999996, 0.00010526399999999728, 0.00010531899999999955, 0.00010522200000000204, 0.00010529199999999989, 0.0001060560000000002, 0.00010565300000000069,...</msg>
<status status="PASS" starttime="20201030 15:56:30.390" endtime="20201030 15:56:30.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.398" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 15:56:30.397" endtime="20201030 15:56:30.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.400" level="INFO">VALUE: [0.00010609699999999944, 0.00010580599999999996, 0.00010526399999999728, 0.00010531899999999955, 0.00010522200000000204, 0.00010529199999999989, 0.0001060560000000002, 0.00010565300000000069, 0.00010606999999999978, 0.00010530599999999946, 0.00010547200000000229, 0.00010581900000000005, 0.00010558299999999937, 0.0001055689999999998, 0.00010547199999999882, 0.00010562499999999808, 0.00010584700000000266, 0.00010519500000000237, 0.00010513900000000062, 0.00010579100000000091, 0.00010563900000000112, 0.00010590300000000094, 0.00010556999999999928, 0.00010545800000000272, 0.00010512500000000105, 0.000105207999999999, 0.00010600000000000193, 0.00010520800000000247, 0.00010550000000000143, 0.00010529199999999989, 0.00010586100000000223, 0.00010540299999999697, 0.00010555500000000023, 0.0001060560000000002, 0.00010583299999999962, 0.00010602800000000107, 0.00010576400000000125, 0.00010540300000000044, 0.00010581900000000005, 0.00010558299999999937, 0.00010562500000000155, 0.00010602800000000107, 0.0001060279999999976, 0.00010595899999999922, 0.0001053750000000013, 0.0001060560000000002, 0.00010533299999999912, 0.00010544399999999968, 0.0001052360000000016, 0.00010575000000000168]</msg>
<status status="PASS" starttime="20201030 15:56:30.399" endtime="20201030 15:56:30.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.394" endtime="20201030 15:56:30.401"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:30.405" endtime="20201030 15:56:30.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.404" endtime="20201030 15:56:30.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.402" endtime="20201030 15:56:30.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.043" endtime="20201030 15:56:30.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.043" endtime="20201030 15:56:30.426"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.435" endtime="20201030 15:56:30.457"></status>
</kw>
<msg timestamp="20201030 15:56:30.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:30.433" endtime="20201030 15:56:30.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:30.458" endtime="20201030 15:56:30.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.461" endtime="20201030 15:56:30.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.430" endtime="20201030 15:56:30.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.428" endtime="20201030 15:56:30.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.470" endtime="20201030 15:56:30.761"></status>
</kw>
<msg timestamp="20201030 15:56:30.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021049181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021156111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:30.468" endtime="20201030 15:56:30.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021049181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021156111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:30.770" endtime="20201030 15:56:30.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.788" endtime="20201030 15:56:30.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.466" endtime="20201030 15:56:30.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.464" endtime="20201030 15:56:30.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:30.801" level="INFO">${RESULT} = [{'diff': 0.00010692999999999814}, {'diff': 0.00010658300000000037}, {'diff': 0.0001070829999999974}, {'diff': 0.00010623599999999914}, {'diff': 0.0001068750000000028}, {'diff': 0.00010682000000000053...</msg>
<status status="PASS" starttime="20201030 15:56:30.795" endtime="20201030 15:56:30.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:30.810" level="INFO">${ACCURACY} = {'diff': [0.00010692999999999814, 0.00010658300000000037, 0.0001070829999999974, 0.00010623599999999914, 0.0001068750000000028, 0.00010682000000000053, 0.00010620899999999947, 0.00010673599999999964, ...</msg>
<status status="PASS" starttime="20201030 15:56:30.803" endtime="20201030 15:56:30.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.819" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 15:56:30.817" endtime="20201030 15:56:30.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.824" level="INFO">VALUE: [0.00010692999999999814, 0.00010658300000000037, 0.0001070829999999974, 0.00010623599999999914, 0.0001068750000000028, 0.00010682000000000053, 0.00010620899999999947, 0.00010673599999999964, 0.00010622299999999904, 0.00010659699999999994, 0.00010699999999999946, 0.0001065690000000008, 0.00010654100000000166, 0.0001068889999999989, 0.00010676400000000225, 0.00010643099999999711, 0.00010677800000000182, 0.0001061949999999999, 0.00010632000000000003, 0.00010631900000000055, 0.00010708300000000087, 0.00010644500000000015, 0.00010697200000000032, 0.00010669399999999746, 0.00010702800000000207, 0.0001065690000000008, 0.000106208, 0.00010673599999999964, 0.00010676399999999878, 0.00010676399999999878, 0.00010707000000000078, 0.00010690299999999847, 0.00010687499999999933, 0.00010615300000000119, 0.00010709699999999697, 0.00010615300000000119, 0.00010641600000000154, 0.00010659699999999994, 0.00010681899999999758, 0.00010658300000000037, 0.00010684700000000019, 0.0001068750000000028, 0.00010615300000000119, 0.0001070279999999986, 0.00010655500000000123, 0.00010632000000000003, 0.00010701299999999955, 0.00010684700000000019, 0.00010645800000000025, 0.00010701399999999903]</msg>
<status status="PASS" starttime="20201030 15:56:30.821" endtime="20201030 15:56:30.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.812" endtime="20201030 15:56:30.828"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:30.836" endtime="20201030 15:56:30.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.833" endtime="20201030 15:56:30.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.830" endtime="20201030 15:56:30.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.427" endtime="20201030 15:56:30.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.426" endtime="20201030 15:56:30.857"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.866" endtime="20201030 15:56:30.887"></status>
</kw>
<msg timestamp="20201030 15:56:30.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:30.864" endtime="20201030 15:56:30.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:30.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:30.889" endtime="20201030 15:56:30.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.891" endtime="20201030 15:56:30.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.862" endtime="20201030 15:56:30.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.860" endtime="20201030 15:56:30.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:30.900" endtime="20201030 15:56:31.186"></status>
</kw>
<msg timestamp="20201030 15:56:31.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019719958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:30.898" endtime="20201030 15:56:31.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019612444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019719958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:31.190" endtime="20201030 15:56:31.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.198" endtime="20201030 15:56:31.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.896" endtime="20201030 15:56:31.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.894" endtime="20201030 15:56:31.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:31.204" level="INFO">${RESULT} = [{'diff': 0.00010751399999999953}, {'diff': 0.000107514000000003}, {'diff': 0.00010730500000000198}, {'diff': 0.00010808300000000187}, {'diff': 0.00010715299999999872}, {'diff': 0.00010777799999999935...</msg>
<status status="PASS" starttime="20201030 15:56:31.201" endtime="20201030 15:56:31.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:31.209" level="INFO">${ACCURACY} = {'diff': [0.00010751399999999953, 0.000107514000000003, 0.00010730500000000198, 0.00010808300000000187, 0.00010715299999999872, 0.00010777799999999935, 0.00010765299999999922, 0.0001077500000000002, 0...</msg>
<status status="PASS" starttime="20201030 15:56:31.205" endtime="20201030 15:56:31.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.214" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 15:56:31.213" endtime="20201030 15:56:31.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.216" level="INFO">VALUE: [0.00010751399999999953, 0.000107514000000003, 0.00010730500000000198, 0.00010808300000000187, 0.00010715299999999872, 0.00010777799999999935, 0.00010765299999999922, 0.0001077500000000002, 0.00010736100000000026, 0.00010712500000000305, 0.00010763800000000018, 0.00010730499999999851, 0.00010726399999999928, 0.00010748600000000039, 0.00010729199999999842, 0.00010766699999999879, 0.00010762500000000008, 0.00010799999999999699, 0.00010726399999999928, 0.00010776399999999978, 0.00010748600000000039, 0.0001072499999999997, 0.00010763800000000018, 0.00010740299999999897, 0.00010726399999999928, 0.00010767999999999889, 0.00010726399999999928, 0.00010731900000000155, 0.00010737499999999983, 0.00010765299999999922, 0.00010720900000000047, 0.00010772300000000054, 0.00010743099999999811, 0.00010758300000000137, 0.00010774999999999674, 0.00010800000000000046, 0.00010731900000000155, 0.0001075279999999991, 0.0001078889999999999, 0.00010716700000000176, 0.00010783300000000162, 0.00010745900000000072, 0.00010723600000000014, 0.00010776399999999978, 0.00010757000000000128, 0.00010805599999999874, 0.00010783300000000162, 0.00010740299999999897, 0.00010756899999999833, 0.0001077500000000002]</msg>
<status status="PASS" starttime="20201030 15:56:31.215" endtime="20201030 15:56:31.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.210" endtime="20201030 15:56:31.217"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:31.221" endtime="20201030 15:56:31.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.219" endtime="20201030 15:56:31.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.218" endtime="20201030 15:56:31.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.858" endtime="20201030 15:56:31.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:30.857" endtime="20201030 15:56:31.242"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.250" endtime="20201030 15:56:31.271"></status>
</kw>
<msg timestamp="20201030 15:56:31.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:31.249" endtime="20201030 15:56:31.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:31.273" endtime="20201030 15:56:31.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.275" endtime="20201030 15:56:31.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.246" endtime="20201030 15:56:31.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.244" endtime="20201030 15:56:31.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.284" endtime="20201030 15:56:31.578"></status>
</kw>
<msg timestamp="20201030 15:56:31.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019670639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019779222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:31.283" endtime="20201030 15:56:31.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019670639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019779222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:31.587" endtime="20201030 15:56:31.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.605" endtime="20201030 15:56:31.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.280" endtime="20201030 15:56:31.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.278" endtime="20201030 15:56:31.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:31.618" level="INFO">${RESULT} = [{'diff': 0.0001085829999999989}, {'diff': 0.00010875000000000121}, {'diff': 0.00010854199999999967}, {'diff': 0.00010861100000000151}, {'diff': 0.00010906899999999983}, {'diff': 0.0001083610000000012...</msg>
<status status="PASS" starttime="20201030 15:56:31.612" endtime="20201030 15:56:31.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:31.627" level="INFO">${ACCURACY} = {'diff': [0.0001085829999999989, 0.00010875000000000121, 0.00010854199999999967, 0.00010861100000000151, 0.00010906899999999983, 0.00010836100000000126, 0.00010862500000000108, 0.00010850000000000096,...</msg>
<status status="PASS" starttime="20201030 15:56:31.620" endtime="20201030 15:56:31.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.636" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 15:56:31.634" endtime="20201030 15:56:31.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.641" level="INFO">VALUE: [0.0001085829999999989, 0.00010875000000000121, 0.00010854199999999967, 0.00010861100000000151, 0.00010906899999999983, 0.00010836100000000126, 0.00010862500000000108, 0.00010850000000000096, 0.00010837500000000083, 0.00010863800000000118, 0.00010841600000000007, 0.00010836100000000126, 0.00010904100000000069, 0.00010823600000000114, 0.00010833300000000212, 0.00010850000000000096, 0.00010891700000000004, 0.00010815299999999972, 0.00010808399999999788, 0.00010852699999999715, 0.00010837499999999736, 0.0001084020000000005, 0.00010845799999999878, 0.0001082500000000007, 0.00010895799999999928, 0.00010901399999999756, 0.0001082500000000007, 0.00010811100000000101, 0.0001082500000000007, 0.00010895899999999875, 0.00010840299999999997, 0.00010877800000000035, 0.00010863900000000065, 0.00010884699999999872, 0.00010836099999999779, 0.00010906899999999983, 0.00010881900000000305, 0.00010813900000000015, 0.00010826400000000028, 0.00010905500000000026, 0.00010848699999999739, 0.00010838800000000093, 0.00010813900000000015, 0.00010841600000000007, 0.00010855499999999976, 0.00010842999999999964, 0.00010887499999999786, 0.00010813900000000015, 0.00010891700000000004, 0.00010819400000000243]</msg>
<status status="PASS" starttime="20201030 15:56:31.638" endtime="20201030 15:56:31.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.629" endtime="20201030 15:56:31.644"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:31.651" endtime="20201030 15:56:31.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.648" endtime="20201030 15:56:31.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.646" endtime="20201030 15:56:31.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.242" endtime="20201030 15:56:31.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.242" endtime="20201030 15:56:31.672"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.680" endtime="20201030 15:56:31.701"></status>
</kw>
<msg timestamp="20201030 15:56:31.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:31.679" endtime="20201030 15:56:31.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:31.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:31.703" endtime="20201030 15:56:31.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.705" endtime="20201030 15:56:31.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.676" endtime="20201030 15:56:31.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.674" endtime="20201030 15:56:31.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:31.714" endtime="20201030 15:56:32.000"></status>
</kw>
<msg timestamp="20201030 15:56:32.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020588875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020698597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:31.713" endtime="20201030 15:56:32.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020588875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020698597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:32.004" endtime="20201030 15:56:32.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.012" endtime="20201030 15:56:32.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.710" endtime="20201030 15:56:32.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.709" endtime="20201030 15:56:32.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:32.019" level="INFO">${RESULT} = [{'diff': 0.0001097219999999996}, {'diff': 0.0001100549999999978}, {'diff': 0.00010984699999999972}, {'diff': 0.00010927800000000085}, {'diff': 0.00010965299999999775}, {'diff': 0.0001095699999999998}...</msg>
<status status="PASS" starttime="20201030 15:56:32.015" endtime="20201030 15:56:32.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:32.022" level="INFO">${ACCURACY} = {'diff': [0.0001097219999999996, 0.0001100549999999978, 0.00010984699999999972, 0.00010927800000000085, 0.00010965299999999775, 0.0001095699999999998, 0.00010958399999999938, 0.00010977800000000135, 0...</msg>
<status status="PASS" starttime="20201030 15:56:32.019" endtime="20201030 15:56:32.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.027" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 15:56:32.026" endtime="20201030 15:56:32.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.030" level="INFO">VALUE: [0.0001097219999999996, 0.0001100549999999978, 0.00010984699999999972, 0.00010927800000000085, 0.00010965299999999775, 0.0001095699999999998, 0.00010958399999999938, 0.00010977800000000135, 0.00010963900000000165, 0.00010931900000000008, 0.00011009699999999997, 0.00010984699999999972, 0.00010919399999999996, 0.00010933299999999965, 0.00010956900000000033, 0.00010983300000000015, 0.00010913900000000115, 0.00010990300000000147, 0.00011005600000000074, 0.00010952799999999763, 0.00010980600000000049, 0.00010949999999999849, 0.00010994399999999724, 0.00010950000000000196, 0.00010945800000000325, 0.00011006899999999736, 0.0001095829999999999, 0.00010950000000000196, 0.00010983399999999963, 0.00010987499999999886, 0.00010963900000000165, 0.00010916700000000029, 0.0001093340000000026, 0.00010912499999999811, 0.00010945800000000325, 0.0001093890000000014, 0.00010926399999999781, 0.00011001399999999856, 0.00010911100000000201, 0.00010918000000000039, 0.00010955600000000024, 0.00011009799999999945, 0.00010945899999999925, 0.000109208999999999, 0.00011002700000000212, 0.00010931999999999956, 0.00010951400000000153, 0.00010948599999999892, 0.00010915300000000072, 0.0001095829999999999]</msg>
<status status="PASS" starttime="20201030 15:56:32.028" endtime="20201030 15:56:32.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.023" endtime="20201030 15:56:32.031"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:32.035" endtime="20201030 15:56:32.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.033" endtime="20201030 15:56:32.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.032" endtime="20201030 15:56:32.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.672" endtime="20201030 15:56:32.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:31.672" endtime="20201030 15:56:32.056"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.064" endtime="20201030 15:56:32.085"></status>
</kw>
<msg timestamp="20201030 15:56:32.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:32.063" endtime="20201030 15:56:32.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:32.087" endtime="20201030 15:56:32.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.090" endtime="20201030 15:56:32.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.060" endtime="20201030 15:56:32.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.058" endtime="20201030 15:56:32.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.098" endtime="20201030 15:56:32.391"></status>
</kw>
<msg timestamp="20201030 15:56:32.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019643403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019754486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:32.097" endtime="20201030 15:56:32.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019643403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019754486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:32.400" endtime="20201030 15:56:32.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.418" endtime="20201030 15:56:32.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.094" endtime="20201030 15:56:32.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.093" endtime="20201030 15:56:32.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:32.431" level="INFO">${RESULT} = [{'diff': 0.0001110830000000014}, {'diff': 0.00011081899999999811}, {'diff': 0.00011013899999999868}, {'diff': 0.00011038899999999893}, {'diff': 0.00011019500000000043}, {'diff': 0.0001104309999999976...</msg>
<status status="PASS" starttime="20201030 15:56:32.425" endtime="20201030 15:56:32.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:32.442" level="INFO">${ACCURACY} = {'diff': [0.0001110830000000014, 0.00011081899999999811, 0.00011013899999999868, 0.00011038899999999893, 0.00011019500000000043, 0.00011043099999999764, 0.00011095799999999781, 0.00011034700000000022,...</msg>
<status status="PASS" starttime="20201030 15:56:32.433" endtime="20201030 15:56:32.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.451" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 15:56:32.449" endtime="20201030 15:56:32.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.456" level="INFO">VALUE: [0.0001110830000000014, 0.00011081899999999811, 0.00011013899999999868, 0.00011038899999999893, 0.00011019500000000043, 0.00011043099999999764, 0.00011095799999999781, 0.00011034700000000022, 0.00011019400000000096, 0.00011020800000000053, 0.00011108299999999793, 0.00011061100000000004, 0.00011079200000000192, 0.00011012499999999911, 0.00011099999999999999, 0.00011019499999999696, 0.00011062499999999961, 0.00011051399999999906, 0.00011101399999999956, 0.00011012499999999911, 0.00011079099999999897, 0.00011105500000000226, 0.00011077799999999888, 0.00011073600000000017, 0.00011077799999999888, 0.00011068099999999789, 0.00011074999999999974, 0.00011062499999999961, 0.0001105700000000008, 0.00011068099999999789, 0.00011012500000000258, 0.00011084700000000072, 0.00011105500000000226, 0.00011051400000000253, 0.00011059700000000047, 0.00011070799999999756, 0.00011063899999999918, 0.00011063899999999918, 0.00011049999999999949, 0.00011032000000000056, 0.00011020800000000053, 0.00011019399999999749, 0.00011074999999999974, 0.00011023599999999967, 0.00011031900000000108, 0.00011062499999999961, 0.00011034700000000022, 0.00011029199999999795, 0.00011098600000000042, 0.00011097200000000085]</msg>
<status status="PASS" starttime="20201030 15:56:32.453" endtime="20201030 15:56:32.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.443" endtime="20201030 15:56:32.459"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:32.464" endtime="20201030 15:56:32.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.462" endtime="20201030 15:56:32.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.460" endtime="20201030 15:56:32.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.056" endtime="20201030 15:56:32.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.056" endtime="20201030 15:56:32.484"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.493" endtime="20201030 15:56:32.515"></status>
</kw>
<msg timestamp="20201030 15:56:32.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:32.492" endtime="20201030 15:56:32.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:32.516" endtime="20201030 15:56:32.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.519" endtime="20201030 15:56:32.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.489" endtime="20201030 15:56:32.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.487" endtime="20201030 15:56:32.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.527" endtime="20201030 15:56:32.816"></status>
</kw>
<msg timestamp="20201030 15:56:32.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019736111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019848125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:32.526" endtime="20201030 15:56:32.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019736111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019848125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:32.820" endtime="20201030 15:56:32.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.828" endtime="20201030 15:56:32.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.523" endtime="20201030 15:56:32.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.522" endtime="20201030 15:56:32.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:32.835" level="INFO">${RESULT} = [{'diff': 0.00011201400000000056}, {'diff': 0.00011202800000000013}, {'diff': 0.00011145800000000178}, {'diff': 0.00011148600000000092}, {'diff': 0.00011158400000000138}, {'diff': 0.000111944999999998...</msg>
<status status="PASS" starttime="20201030 15:56:32.832" endtime="20201030 15:56:32.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:32.839" level="INFO">${ACCURACY} = {'diff': [0.00011201400000000056, 0.00011202800000000013, 0.00011145800000000178, 0.00011148600000000092, 0.00011158400000000138, 0.00011194499999999871, 0.000111903, 0.00011126300000000033, 0.0001113...</msg>
<status status="PASS" starttime="20201030 15:56:32.836" endtime="20201030 15:56:32.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.843" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 15:56:32.842" endtime="20201030 15:56:32.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.845" level="INFO">VALUE: [0.00011201400000000056, 0.00011202800000000013, 0.00011145800000000178, 0.00011148600000000092, 0.00011158400000000138, 0.00011194499999999871, 0.000111903, 0.00011126300000000033, 0.00011138899999999993, 0.00011125000000000024, 0.00011167999999999942, 0.00011127799999999938, 0.00011198600000000142, 0.00011138899999999993, 0.00011144500000000168, 0.00011169499999999846, 0.00011195900000000175, 0.00011118099999999839, 0.00011127799999999938, 0.00011120800000000153, 0.00011147200000000135, 0.00011118000000000239, 0.00011115299999999925, 0.00011176400000000031, 0.00011119399999999849, 0.00011183299999999868, 0.00011163900000000018, 0.00011193099999999914, 0.00011145899999999778, 0.00011120799999999806, 0.00011113899999999968, 0.00011125000000000024, 0.00011187500000000086, 0.00011148599999999745, 0.00011125000000000024, 0.00011200000000000099, 0.00011158299999999843, 0.00011198599999999795, 0.00011148600000000092, 0.00011119499999999796, 0.00011202800000000013, 0.00011198600000000142, 0.00011186200000000077, 0.00011138800000000046, 0.000111903, 0.00011194399999999924, 0.00011176400000000031, 0.00011208299999999893, 0.00011140300000000297, 0.00011202800000000013]</msg>
<status status="PASS" starttime="20201030 15:56:32.844" endtime="20201030 15:56:32.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.840" endtime="20201030 15:56:32.847"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:32.850" endtime="20201030 15:56:32.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.849" endtime="20201030 15:56:32.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.848" endtime="20201030 15:56:32.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.485" endtime="20201030 15:56:32.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.485" endtime="20201030 15:56:32.871"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.880" endtime="20201030 15:56:32.901"></status>
</kw>
<msg timestamp="20201030 15:56:32.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:32.878" endtime="20201030 15:56:32.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:32.903" endtime="20201030 15:56:32.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.905" endtime="20201030 15:56:32.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.875" endtime="20201030 15:56:32.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.873" endtime="20201030 15:56:32.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.914" endtime="20201030 15:56:33.207"></status>
</kw>
<msg timestamp="20201030 15:56:33.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020473694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020586222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:32.913" endtime="20201030 15:56:33.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020473694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020586222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:33.216" endtime="20201030 15:56:33.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.234" endtime="20201030 15:56:33.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.910" endtime="20201030 15:56:33.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.908" endtime="20201030 15:56:33.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:33.247" level="INFO">${RESULT} = [{'diff': 0.00011252800000000063}, {'diff': 0.00011269399999999999}, {'diff': 0.00011258299999999943}, {'diff': 0.00011299999999999852}, {'diff': 0.000112290999999997}, {'diff': 0.00011231999999999909...</msg>
<status status="PASS" starttime="20201030 15:56:33.241" endtime="20201030 15:56:33.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:33.256" level="INFO">${ACCURACY} = {'diff': [0.00011252800000000063, 0.00011269399999999999, 0.00011258299999999943, 0.00011299999999999852, 0.000112290999999997, 0.00011231999999999909, 0.00011287500000000186, 0.00011274999999999827, ...</msg>
<status status="PASS" starttime="20201030 15:56:33.250" endtime="20201030 15:56:33.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.265" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 15:56:33.263" endtime="20201030 15:56:33.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.268" level="INFO">VALUE: [0.00011252800000000063, 0.00011269399999999999, 0.00011258299999999943, 0.00011299999999999852, 0.000112290999999997, 0.00011231999999999909, 0.00011287500000000186, 0.00011274999999999827, 0.00011272199999999913, 0.00011213900000000068, 0.00011274999999999827, 0.00011295799999999981, 0.00011236100000000179, 0.00011215300000000025, 0.00011222199999999863, 0.00011222199999999863, 0.00011301400000000156, 0.00011226400000000081, 0.00011220899999999853, 0.00011301299999999861, 0.00011276300000000183, 0.00011279100000000097, 0.00011283299999999968, 0.00011241700000000007, 0.00011219399999999949, 0.0001122359999999982, 0.00011301400000000156, 0.00011212499999999764, 0.0001123619999999978, 0.00011252799999999716, 0.00011245799999999931, 0.00011281900000000011, 0.00011233300000000265, 0.00011250000000000149, 0.00011295799999999981, 0.00011293000000000067, 0.00011251400000000106, 0.00011256899999999986, 0.00011276399999999784, 0.00011227800000000038, 0.00011294499999999971, 0.00011262500000000161, 0.00011219399999999949, 0.00011249999999999802, 0.00011212500000000111, 0.00011247199999999888, 0.00011209700000000197, 0.00011230500000000004, 0.00011256899999999986, 0.00011229199999999995]</msg>
<status status="PASS" starttime="20201030 15:56:33.267" endtime="20201030 15:56:33.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.258" endtime="20201030 15:56:33.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:33.274" endtime="20201030 15:56:33.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.272" endtime="20201030 15:56:33.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.271" endtime="20201030 15:56:33.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.872" endtime="20201030 15:56:33.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.871" endtime="20201030 15:56:33.294"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.303" endtime="20201030 15:56:33.324"></status>
</kw>
<msg timestamp="20201030 15:56:33.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:33.301" endtime="20201030 15:56:33.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:33.325" endtime="20201030 15:56:33.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.328" endtime="20201030 15:56:33.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.299" endtime="20201030 15:56:33.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.297" endtime="20201030 15:56:33.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.337" endtime="20201030 15:56:33.622"></status>
</kw>
<msg timestamp="20201030 15:56:33.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019576292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019690111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:33.335" endtime="20201030 15:56:33.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019576292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019690111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:33.626" endtime="20201030 15:56:33.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.634" endtime="20201030 15:56:33.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.333" endtime="20201030 15:56:33.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.331" endtime="20201030 15:56:33.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:33.640" level="INFO">${RESULT} = [{'diff': 0.00011381900000000111}, {'diff': 0.00011313900000000168}, {'diff': 0.00011330499999999757}, {'diff': 0.0001134030000000015}, {'diff': 0.00011380600000000102}, {'diff': 0.0001137639999999988...</msg>
<status status="PASS" starttime="20201030 15:56:33.637" endtime="20201030 15:56:33.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:33.645" level="INFO">${ACCURACY} = {'diff': [0.00011381900000000111, 0.00011313900000000168, 0.00011330499999999757, 0.0001134030000000015, 0.00011380600000000102, 0.00011376399999999884, 0.00011386099999999982, 0.00011394500000000071,...</msg>
<status status="PASS" starttime="20201030 15:56:33.641" endtime="20201030 15:56:33.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.649" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 15:56:33.648" endtime="20201030 15:56:33.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.652" level="INFO">VALUE: [0.00011381900000000111, 0.00011313900000000168, 0.00011330499999999757, 0.0001134030000000015, 0.00011380600000000102, 0.00011376399999999884, 0.00011386099999999982, 0.00011394500000000071, 0.0001140970000000005, 0.00011363899999999871, 0.00011394400000000124, 0.00011313900000000168, 0.00011331899999999714, 0.00011377799999999841, 0.00011355600000000077, 0.00011394500000000071, 0.0001135420000000012, 0.00011394500000000071, 0.00011379100000000197, 0.00011319499999999996, 0.00011347199999999988, 0.00011331900000000061, 0.00011391700000000157, 0.00011369399999999752, 0.00011408299999999746, 0.00011401399999999909, 0.00011337500000000236, 0.0001138749999999994, 0.0001140559999999978, 0.00011318100000000039, 0.00011308399999999941, 0.00011407000000000084, 0.00011338799999999899, 0.00011345800000000031, 0.0001133749999999989, 0.00011312499999999864, 0.00011333300000000018, 0.00011402799999999866, 0.00011402800000000213, 0.00011374999999999927, 0.00011340299999999803, 0.00011357000000000034, 0.0001134169999999976, 0.00011368100000000089, 0.00011334699999999975, 0.00011311099999999907, 0.00011369400000000099, 0.0001139169999999981, 0.00011404199999999823, 0.00011352799999999816]</msg>
<status status="PASS" starttime="20201030 15:56:33.651" endtime="20201030 15:56:33.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.646" endtime="20201030 15:56:33.653"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:33.657" endtime="20201030 15:56:33.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.655" endtime="20201030 15:56:33.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.654" endtime="20201030 15:56:33.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.295" endtime="20201030 15:56:33.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.295" endtime="20201030 15:56:33.677"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.686" endtime="20201030 15:56:33.709"></status>
</kw>
<msg timestamp="20201030 15:56:33.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:33.684" endtime="20201030 15:56:33.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:33.711" endtime="20201030 15:56:33.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.713" endtime="20201030 15:56:33.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.682" endtime="20201030 15:56:33.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.680" endtime="20201030 15:56:33.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.722" endtime="20201030 15:56:34.009"></status>
</kw>
<msg timestamp="20201030 15:56:34.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020847167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020962069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:33.721" endtime="20201030 15:56:34.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020847167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020962069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:34.013" endtime="20201030 15:56:34.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.021" endtime="20201030 15:56:34.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.718" endtime="20201030 15:56:34.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.716" endtime="20201030 15:56:34.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:34.027" level="INFO">${RESULT} = [{'diff': 0.00011490200000000006}, {'diff': 0.00011482000000000159}, {'diff': 0.00011450000000000002}, {'diff': 0.00011508300000000193}, {'diff': 0.00011445799999999784}, {'diff': 0.000114430000000002...</msg>
<status status="PASS" starttime="20201030 15:56:34.024" endtime="20201030 15:56:34.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:34.031" level="INFO">${ACCURACY} = {'diff': [0.00011490200000000006, 0.00011482000000000159, 0.00011450000000000002, 0.00011508300000000193, 0.00011445799999999784, 0.00011443000000000217, 0.00011481899999999864, 0.00011466699999999885...</msg>
<status status="PASS" starttime="20201030 15:56:34.028" endtime="20201030 15:56:34.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.036" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 15:56:34.035" endtime="20201030 15:56:34.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.038" level="INFO">VALUE: [0.00011490200000000006, 0.00011482000000000159, 0.00011450000000000002, 0.00011508300000000193, 0.00011445799999999784, 0.00011443000000000217, 0.00011481899999999864, 0.00011466699999999885, 0.00011497200000000138, 0.00011451400000000306, 0.00011419500000000096, 0.00011462500000000014, 0.00011475000000000027, 0.00011413899999999921, 0.00011413899999999921, 0.00011482000000000159, 0.00011480499999999907, 0.00011501400000000009, 0.00011415300000000225, 0.00011463899999999971, 0.00011483299999999821, 0.00011461200000000005, 0.00011508400000000141, 0.00011469499999999799, 0.0001142360000000002, 0.00011432000000000109, 0.00011440199999999956, 0.00011451399999999959, 0.00011486100000000082, 0.00011455499999999882, 0.00011451399999999959, 0.00011458300000000143, 0.00011493100000000214, 0.00011470799999999809, 0.00011483400000000116, 0.00011502799999999966, 0.00011432000000000109, 0.00011469499999999799, 0.00011480500000000254, 0.00011451300000000011, 0.00011470900000000103, 0.0001143749999999999, 0.00011431899999999814, 0.00011413900000000268, 0.000114903000000003, 0.00011482000000000159, 0.00011501400000000009, 0.00011477799999999941, 0.00011463899999999971, 0.00011508299999999846]</msg>
<status status="PASS" starttime="20201030 15:56:34.037" endtime="20201030 15:56:34.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.032" endtime="20201030 15:56:34.040"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:34.043" endtime="20201030 15:56:34.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.042" endtime="20201030 15:56:34.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.040" endtime="20201030 15:56:34.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.678" endtime="20201030 15:56:34.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.678" endtime="20201030 15:56:34.064"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.072" endtime="20201030 15:56:34.094"></status>
</kw>
<msg timestamp="20201030 15:56:34.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:34.071" endtime="20201030 15:56:34.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:34.096" endtime="20201030 15:56:34.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.098" endtime="20201030 15:56:34.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.068" endtime="20201030 15:56:34.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.066" endtime="20201030 15:56:34.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.107" endtime="20201030 15:56:34.393"></status>
</kw>
<msg timestamp="20201030 15:56:34.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020433417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020549194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:34.106" endtime="20201030 15:56:34.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020433417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020549194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:34.397" endtime="20201030 15:56:34.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.405" endtime="20201030 15:56:34.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.103" endtime="20201030 15:56:34.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.102" endtime="20201030 15:56:34.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:34.411" level="INFO">${RESULT} = [{'diff': 0.00011577700000000093}, {'diff': 0.00011600000000000152}, {'diff': 0.0001157910000000005}, {'diff': 0.00011588900000000096}, {'diff': 0.00011558299999999896}, {'diff': 0.0001159860000000019...</msg>
<status status="PASS" starttime="20201030 15:56:34.408" endtime="20201030 15:56:34.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:34.415" level="INFO">${ACCURACY} = {'diff': [0.00011577700000000093, 0.00011600000000000152, 0.0001157910000000005, 0.00011588900000000096, 0.00011558299999999896, 0.00011598600000000195, 0.00011598600000000195, 0.00011583400000000216,...</msg>
<status status="PASS" starttime="20201030 15:56:34.412" endtime="20201030 15:56:34.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.420" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 15:56:34.419" endtime="20201030 15:56:34.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.422" level="INFO">VALUE: [0.00011577700000000093, 0.00011600000000000152, 0.0001157910000000005, 0.00011588900000000096, 0.00011558299999999896, 0.00011598600000000195, 0.00011598600000000195, 0.00011583400000000216, 0.00011563900000000071, 0.00011563899999999724, 0.00011519499999999849, 0.00011608399999999894, 0.00011587499999999792, 0.00011515200000000031, 0.00011533300000000218, 0.00011515299999999978, 0.00011586099999999835, 0.00011602800000000066, 0.00011512499999999717, 0.00011602800000000066, 0.00011544500000000221, 0.00011569499999999899, 0.00011576399999999737, 0.00011548599999999798, 0.00011540200000000056, 0.00011556900000000286, 0.00011519399999999902, 0.00011602800000000066, 0.00011555499999999982, 0.00011533299999999871, 0.00011584699999999878, 0.00011563900000000071, 0.00011606999999999937, 0.00011602799999999719, 0.00011576400000000084, 0.00011580500000000007, 0.00011511200000000055, 0.00011555499999999982, 0.00011547199999999841, 0.00011584699999999878, 0.00011552800000000016, 0.00011587499999999792, 0.0001157499999999978, 0.00011569499999999899, 0.00011545900000000178, 0.00011557000000000234, 0.00011566699999999985, 0.00011519499999999849, 0.00011522200000000163, 0.00011576400000000084]</msg>
<status status="PASS" starttime="20201030 15:56:34.421" endtime="20201030 15:56:34.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.416" endtime="20201030 15:56:34.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:34.428" endtime="20201030 15:56:34.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.426" endtime="20201030 15:56:34.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.425" endtime="20201030 15:56:34.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.065" endtime="20201030 15:56:34.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.064" endtime="20201030 15:56:34.449"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.457" endtime="20201030 15:56:34.477"></status>
</kw>
<msg timestamp="20201030 15:56:34.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:34.456" endtime="20201030 15:56:34.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:34.479" endtime="20201030 15:56:34.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.481" endtime="20201030 15:56:34.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.453" endtime="20201030 15:56:34.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.451" endtime="20201030 15:56:34.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.490" endtime="20201030 15:56:34.777"></status>
</kw>
<msg timestamp="20201030 15:56:34.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019889222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:34.489" endtime="20201030 15:56:34.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019772083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019889222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:34.781" endtime="20201030 15:56:34.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:34.789" endtime="20201030 15:56:34.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.486" endtime="20201030 15:56:34.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.484" endtime="20201030 15:56:34.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:34.795" level="INFO">${RESULT} = [{'diff': 0.00011713900000000221}, {'diff': 0.00011651400000000159}, {'diff': 0.00011708300000000046}, {'diff': 0.00011675000000000227}, {'diff': 0.00011613900000000121}, {'diff': 0.000116777999999997...</msg>
<status status="PASS" starttime="20201030 15:56:34.792" endtime="20201030 15:56:34.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:34.800" level="INFO">${ACCURACY} = {'diff': [0.00011713900000000221, 0.00011651400000000159, 0.00011708300000000046, 0.00011675000000000227, 0.00011613900000000121, 0.00011677799999999794, 0.00011623599999999873, 0.00011611100000000207...</msg>
<status status="PASS" starttime="20201030 15:56:34.796" endtime="20201030 15:56:34.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.804" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 15:56:34.803" endtime="20201030 15:56:34.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.807" level="INFO">VALUE: [0.00011713900000000221, 0.00011651400000000159, 0.00011708300000000046, 0.00011675000000000227, 0.00011613900000000121, 0.00011677799999999794, 0.00011623599999999873, 0.00011611100000000207, 0.00011708399999999994, 0.00011619400000000002, 0.0001170690000000009, 0.0001169300000000012, 0.00011612500000000164, 0.00011679200000000098, 0.00011700000000000252, 0.00011662500000000214, 0.00011654200000000073, 0.00011707000000000037, 0.00011658399999999944, 0.00011694500000000024, 0.00011701299999999915, 0.00011681900000000064, 0.00011612500000000164, 0.0001164170000000006, 0.0001170690000000009, 0.00011662500000000214, 0.00011640300000000103, 0.00011677800000000141, 0.00011697199999999991, 0.00011669499999999999, 0.00011658399999999944, 0.00011613799999999827, 0.0001168750000000024, 0.00011619400000000002, 0.00011694400000000077, 0.00011620799999999959, 0.00011688900000000196, 0.00011701399999999862, 0.00011613900000000121, 0.00011682000000000012, 0.00011644499999999974, 0.00011640300000000103, 0.0001162499999999983, 0.00011688800000000249, 0.00011708300000000046, 0.00011612500000000164, 0.0001171109999999996, 0.00011651400000000159, 0.00011683300000000021, 0.00011631900000000014]</msg>
<status status="PASS" starttime="20201030 15:56:34.805" endtime="20201030 15:56:34.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.801" endtime="20201030 15:56:34.814"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:34.817" endtime="20201030 15:56:34.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.816" endtime="20201030 15:56:34.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.815" endtime="20201030 15:56:34.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.450" endtime="20201030 15:56:34.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.449" endtime="20201030 15:56:34.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.867" endtime="20201030 15:56:34.838"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:55.796" endtime="20201030 15:56:34.839" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:55:14.671" endtime="20201030 15:56:34.842"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:56:34.895" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:56:34.903" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:56:35.895" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:56:34.894" endtime="20201030 15:56:35.896"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:56:36.898" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201030 15:56:35.897" endtime="20201030 15:56:36.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.893" endtime="20201030 15:56:36.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:36.905" endtime="20201030 15:56:37.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:36.902" endtime="20201030 15:56:37.178"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.191" endtime="20201030 15:56:37.213"></status>
</kw>
<msg timestamp="20201030 15:56:37.213" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:37.189" endtime="20201030 15:56:37.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:37.216" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:37.214" endtime="20201030 15:56:37.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:37.219" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:37.217" endtime="20201030 15:56:37.219"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:37.187" endtime="20201030 15:56:37.220"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:37.184" endtime="20201030 15:56:37.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.183" endtime="20201030 15:56:37.221"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:37.225" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:37.224" endtime="20201030 15:56:37.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.222" endtime="20201030 15:56:37.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.182" endtime="20201030 15:56:37.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.182" endtime="20201030 15:56:37.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.226" endtime="20201030 15:56:37.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.180" endtime="20201030 15:56:37.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.229" endtime="20201030 15:56:37.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.179" endtime="20201030 15:56:37.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:34.892" endtime="20201030 15:56:37.231"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:37.237" endtime="20201030 15:56:37.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.236" endtime="20201030 15:56:37.257"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.270" endtime="20201030 15:56:37.289"></status>
</kw>
<msg timestamp="20201030 15:56:37.290" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:37.269" endtime="20201030 15:56:37.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:37.293" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:37.291" endtime="20201030 15:56:37.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:37.296" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:37.295" endtime="20201030 15:56:37.298"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:37.266" endtime="20201030 15:56:37.298"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:37.264" endtime="20201030 15:56:37.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.262" endtime="20201030 15:56:37.299"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:37.304" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:37.303" endtime="20201030 15:56:37.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.300" endtime="20201030 15:56:37.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.262" endtime="20201030 15:56:37.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.261" endtime="20201030 15:56:37.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.307" endtime="20201030 15:56:37.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.260" endtime="20201030 15:56:37.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.258" endtime="20201030 15:56:37.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.235" endtime="20201030 15:56:37.310"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:37.319" endtime="20201030 15:56:43.447"></status>
</kw>
<msg timestamp="20201030 15:56:43.448" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:37.317" endtime="20201030 15:56:43.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.454" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:43.451" endtime="20201030 15:56:43.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.456" endtime="20201030 15:56:43.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.314" endtime="20201030 15:56:43.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.312" endtime="20201030 15:56:43.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:43.466" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201030 15:56:43.463" endtime="20201030 15:56:43.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.476" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:43.474" endtime="20201030 15:56:43.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.480" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:43.478" endtime="20201030 15:56:43.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.468" endtime="20201030 15:56:43.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.490" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:43.488" endtime="20201030 15:56:43.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.495" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:43.493" endtime="20201030 15:56:43.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.483" endtime="20201030 15:56:43.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.504" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:43.502" endtime="20201030 15:56:43.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.509" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 15:56:43.507" endtime="20201030 15:56:43.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.498" endtime="20201030 15:56:43.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.524" endtime="20201030 15:56:43.821"></status>
</kw>
<msg timestamp="20201030 15:56:43.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073552222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.173582514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:43.521" endtime="20201030 15:56:43.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073552222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.173582514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:43.824" endtime="20201030 15:56:43.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.831" endtime="20201030 15:56:43.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.515" endtime="20201030 15:56:43.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.512" endtime="20201030 15:56:43.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:43.837" level="INFO">${FILTERED} = [{'diff': 0.10003029199999999}, {'diff': 5.419999999922709e-07}, {'diff': 0.10000919400000002}, {'diff': 0.10000867999999996}, {'diff': 0.100009236}, {'diff': 0.10000920899999999}, {'diff': 5.41999999...</msg>
<status status="PASS" starttime="20201030 15:56:43.834" endtime="20201030 15:56:43.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:43.841" level="INFO">${RESULT} = {'diff': [0.10003029199999999, 5.419999999922709e-07, 0.10000919400000002, 0.10000867999999996, 0.100009236, 0.10000920899999999, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 0...</msg>
<status status="PASS" starttime="20201030 15:56:43.838" endtime="20201030 15:56:43.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.845" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:43.844" endtime="20201030 15:56:43.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.848" level="INFO">VALUE: [0.10003029199999999, 5.419999999922709e-07, 0.10000919400000002, 0.10000867999999996, 0.100009236, 0.10000920899999999, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 0.10000919500000016, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 0.10000918000000003, 0.10000919400000008, 0.100008667, 0.10000869499999965, 0.10000916699999962, 0.100008667, 0.10000918099999989, 0.10000869400000001, 0.10000919400000008, 0.10000865300000017, 0.10000868099999982, 0.10000919499999972, 0.10000868100000027, 0.10000919400000008, 5.419999999922709e-07, 5.419999995481817e-07, 0.10000917999999981, 0.10000919400000008, 0.10000920900000043, 5.419999995481817e-07, 5.409999994654413e-07, 0.10000920800000035]</msg>
<status status="PASS" starttime="20201030 15:56:43.846" endtime="20201030 15:56:43.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.842" endtime="20201030 15:56:43.849"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:43.852" endtime="20201030 15:56:43.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.851" endtime="20201030 15:56:43.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.849" endtime="20201030 15:56:43.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:37.311" endtime="20201030 15:56:43.873"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:37.232" endtime="20201030 15:56:43.874" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:43.881" endtime="20201030 15:56:43.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.879" endtime="20201030 15:56:43.901"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.915" endtime="20201030 15:56:43.934"></status>
</kw>
<msg timestamp="20201030 15:56:43.934" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:43.914" endtime="20201030 15:56:43.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.937" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:43.935" endtime="20201030 15:56:43.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:43.940" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:43.938" endtime="20201030 15:56:43.940"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:43.910" endtime="20201030 15:56:43.941"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:43.908" endtime="20201030 15:56:43.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.906" endtime="20201030 15:56:43.942"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:43.946" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:43.945" endtime="20201030 15:56:43.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.943" endtime="20201030 15:56:43.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.905" endtime="20201030 15:56:43.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.905" endtime="20201030 15:56:43.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.947" endtime="20201030 15:56:43.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.903" endtime="20201030 15:56:43.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.902" endtime="20201030 15:56:43.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.878" endtime="20201030 15:56:43.950"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:43.959" endtime="20201030 15:56:50.086"></status>
</kw>
<msg timestamp="20201030 15:56:50.087" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:43.957" endtime="20201030 15:56:50.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.092" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:50.089" endtime="20201030 15:56:50.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.095" endtime="20201030 15:56:50.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.954" endtime="20201030 15:56:50.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.952" endtime="20201030 15:56:50.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:50.107" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201030 15:56:50.103" endtime="20201030 15:56:50.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.116" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:50.113" endtime="20201030 15:56:50.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.120" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:50.118" endtime="20201030 15:56:50.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.109" endtime="20201030 15:56:50.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.131" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:50.128" endtime="20201030 15:56:50.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.135" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:50.133" endtime="20201030 15:56:50.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.124" endtime="20201030 15:56:50.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.146" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:50.143" endtime="20201030 15:56:50.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.150" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 15:56:50.148" endtime="20201030 15:56:50.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.138" endtime="20201030 15:56:50.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.169" endtime="20201030 15:56:50.455"></status>
</kw>
<msg timestamp="20201030 15:56:50.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067361667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167387986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:50.165" endtime="20201030 15:56:50.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067361667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167387986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:50.458" endtime="20201030 15:56:50.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.465" endtime="20201030 15:56:50.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.157" endtime="20201030 15:56:50.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.153" endtime="20201030 15:56:50.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:50.471" level="INFO">${FILTERED} = [{'diff': 0.10002631899999999}, {'diff': 0.10000870799999997}, {'diff': 0.100009236}, {'diff': 0.10000919400000008}, {'diff': 0.10000922299999992}, {'diff': 5.419999999922709e-07}, {'diff': 0.10000920...</msg>
<status status="PASS" starttime="20201030 15:56:50.468" endtime="20201030 15:56:50.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:50.475" level="INFO">${RESULT} = {'diff': [0.10002631899999999, 0.10000870799999997, 0.100009236, 0.10000919400000008, 0.10000922299999992, 5.419999999922709e-07, 0.1000092079999999, 5.419999999922709e-07, 0.10000920800000013, 5.4099...</msg>
<status status="PASS" starttime="20201030 15:56:50.472" endtime="20201030 15:56:50.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.479" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:50.478" endtime="20201030 15:56:50.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.481" level="INFO">VALUE: [0.10002631899999999, 0.10000870799999997, 0.100009236, 0.10000919400000008, 0.10000922299999992, 5.419999999922709e-07, 0.1000092079999999, 5.419999999922709e-07, 0.10000920800000013, 5.409999999095305e-07, 0.10000918000000003, 0.10000918000000003, 0.10000867999999996, 0.1000092079999999, 0.10000918099999989, 0.10000870799999984, 0.10000929100000011, 5.419999999922709e-07, 0.10000916599999998, 0.10000869400000001, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000918099999989, 0.10000918100000034, 0.10000866599999991, 0.100008667, 0.10000925000000027, 0.1000092230000007, 5.419999995481817e-07, 5.420000004363601e-07, 0.10000919500000016, 0.100008667, 5.419999995481817e-07, 0.10000919399999919]</msg>
<status status="PASS" starttime="20201030 15:56:50.480" endtime="20201030 15:56:50.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.475" endtime="20201030 15:56:50.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:50.486" endtime="20201030 15:56:50.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.485" endtime="20201030 15:56:50.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.484" endtime="20201030 15:56:50.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:43.951" endtime="20201030 15:56:50.507"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:43.875" endtime="20201030 15:56:50.508" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:50.514" endtime="20201030 15:56:50.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.513" endtime="20201030 15:56:50.534"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.549" endtime="20201030 15:56:50.567"></status>
</kw>
<msg timestamp="20201030 15:56:50.568" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:50.547" endtime="20201030 15:56:50.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.571" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:50.569" endtime="20201030 15:56:50.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:50.574" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:50.572" endtime="20201030 15:56:50.574"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:50.545" endtime="20201030 15:56:50.575"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:50.542" endtime="20201030 15:56:50.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.541" endtime="20201030 15:56:50.576"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:50.580" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:50.579" endtime="20201030 15:56:50.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.577" endtime="20201030 15:56:50.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.540" endtime="20201030 15:56:50.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.538" endtime="20201030 15:56:50.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.581" endtime="20201030 15:56:50.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.537" endtime="20201030 15:56:50.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.535" endtime="20201030 15:56:50.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.511" endtime="20201030 15:56:50.584"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:50.593" endtime="20201030 15:56:56.720"></status>
</kw>
<msg timestamp="20201030 15:56:56.721" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:50.591" endtime="20201030 15:56:56.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.726" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:56.723" endtime="20201030 15:56:56.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.729" endtime="20201030 15:56:56.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.588" endtime="20201030 15:56:56.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.586" endtime="20201030 15:56:56.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:56.741" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201030 15:56:56.737" endtime="20201030 15:56:56.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.750" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:56.747" endtime="20201030 15:56:56.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.754" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:56.752" endtime="20201030 15:56:56.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.742" endtime="20201030 15:56:56.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.767" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:56.762" endtime="20201030 15:56:56.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.772" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:56.770" endtime="20201030 15:56:56.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.757" endtime="20201030 15:56:56.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.782" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:56.780" endtime="20201030 15:56:56.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:56.787" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 15:56:56.785" endtime="20201030 15:56:56.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.775" endtime="20201030 15:56:56.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:56.803" endtime="20201030 15:56:57.084"></status>
</kw>
<msg timestamp="20201030 15:56:57.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068018347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168045917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:56.800" endtime="20201030 15:56:57.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:57.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068018347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.168045917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:57.087" endtime="20201030 15:56:57.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:57.093" endtime="20201030 15:56:57.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.794" endtime="20201030 15:56:57.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:56.790" endtime="20201030 15:56:57.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:57.099" level="INFO">${FILTERED} = [{'diff': 0.10002756999999998}, {'diff': 0.100009195}, {'diff': 0.10000874999999998}, {'diff': 0.1000092640000001}, {'diff': 0.10000915300000002}, {'diff': 0.10000926399999988}, {'diff': 0.10000920899...</msg>
<status status="PASS" starttime="20201030 15:56:57.096" endtime="20201030 15:56:57.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:57.103" level="INFO">${RESULT} = {'diff': [0.10002756999999998, 0.100009195, 0.10000874999999998, 0.1000092640000001, 0.10000915300000002, 0.10000926399999988, 0.10000920899999999, 0.10000870899999992, 5.419999999922709e-07, 0.100009...</msg>
<status status="PASS" starttime="20201030 15:56:57.100" endtime="20201030 15:56:57.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:57.107" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:57.106" endtime="20201030 15:56:57.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:57.109" level="INFO">VALUE: [0.10002756999999998, 0.100009195, 0.10000874999999998, 0.1000092640000001, 0.10000915300000002, 0.10000926399999988, 0.10000920899999999, 0.10000870899999992, 5.419999999922709e-07, 0.10000919400000008, 0.10000919499999994, 0.10000866599999991, 0.10000867999999974, 0.10000919400000008, 0.10000919400000008, 0.10000918099999989, 0.10000916700000007, 0.10000868099999982, 5.419999999922709e-07, 0.10000911099999987, 0.10000868000000018, 0.10000919400000008, 0.10000918099999989, 0.10000919499999972, 5.420000004363601e-07, 0.10000915300000024, 0.100008667, 0.10000920800000035, 0.100008667, 0.10000915200000016, 5.420000004363601e-07, 0.10000926399999965]</msg>
<status status="PASS" starttime="20201030 15:56:57.108" endtime="20201030 15:56:57.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.104" endtime="20201030 15:56:57.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:57.115" endtime="20201030 15:56:57.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.113" endtime="20201030 15:56:57.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.112" endtime="20201030 15:56:57.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:50.585" endtime="20201030 15:56:57.136"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:50.509" endtime="20201030 15:56:57.137" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:57.144" endtime="20201030 15:56:57.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.142" endtime="20201030 15:56:57.164"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:57.178" endtime="20201030 15:56:57.194"></status>
</kw>
<msg timestamp="20201030 15:56:57.195" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:57.176" endtime="20201030 15:56:57.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:57.197" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:57.196" endtime="20201030 15:56:57.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:57.200" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:57.198" endtime="20201030 15:56:57.201"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:57.174" endtime="20201030 15:56:57.201"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:57.171" endtime="20201030 15:56:57.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.170" endtime="20201030 15:56:57.202"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:57.206" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:57.206" endtime="20201030 15:56:57.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.203" endtime="20201030 15:56:57.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.169" endtime="20201030 15:56:57.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.168" endtime="20201030 15:56:57.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:57.208" endtime="20201030 15:56:57.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.167" endtime="20201030 15:56:57.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.165" endtime="20201030 15:56:57.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.141" endtime="20201030 15:56:57.211"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:57.221" endtime="20201030 15:57:03.347"></status>
</kw>
<msg timestamp="20201030 15:57:03.348" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:57.218" endtime="20201030 15:57:03.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.354" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:03.350" endtime="20201030 15:57:03.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.357" endtime="20201030 15:57:03.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.215" endtime="20201030 15:57:03.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.213" endtime="20201030 15:57:03.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:03.368" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201030 15:57:03.364" endtime="20201030 15:57:03.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.377" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:57:03.375" endtime="20201030 15:57:03.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.382" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:57:03.380" endtime="20201030 15:57:03.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.370" endtime="20201030 15:57:03.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.392" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:57:03.390" endtime="20201030 15:57:03.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.397" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:57:03.395" endtime="20201030 15:57:03.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.385" endtime="20201030 15:57:03.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.407" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:57:03.405" endtime="20201030 15:57:03.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.412" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 15:57:03.410" endtime="20201030 15:57:03.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.400" endtime="20201030 15:57:03.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.428" endtime="20201030 15:57:03.718"></status>
</kw>
<msg timestamp="20201030 15:57:03.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065997264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166025, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:57:03.425" endtime="20201030 15:57:03.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065997264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166025, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:57:03.721" endtime="20201030 15:57:03.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.728" endtime="20201030 15:57:03.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.419" endtime="20201030 15:57:03.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.415" endtime="20201030 15:57:03.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:57:03.734" level="INFO">${FILTERED} = [{'diff': 0.100027736}, {'diff': 5.42000000047782e-07}, {'diff': 0.10000920899999999}, {'diff': 5.419999999922709e-07}, {'diff': 0.10000919500000005}, {'diff': 5.419999999922709e-07}, {'diff': 5.41999...</msg>
<status status="PASS" starttime="20201030 15:57:03.731" endtime="20201030 15:57:03.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:03.739" level="INFO">${RESULT} = {'diff': [0.100027736, 5.42000000047782e-07, 0.10000920899999999, 5.419999999922709e-07, 0.10000919500000005, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000919499999994, 0.10000866600000013, 0....</msg>
<status status="PASS" starttime="20201030 15:57:03.735" endtime="20201030 15:57:03.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.743" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:57:03.742" endtime="20201030 15:57:03.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.745" level="INFO">VALUE: [0.100027736, 5.42000000047782e-07, 0.10000920899999999, 5.419999999922709e-07, 0.10000919500000005, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000919499999994, 0.10000866600000013, 0.100008667, 0.10000874999999998, 0.10000920800000013, 0.10000865299999995, 0.10000920899999999, 0.10000868100000004, 5.419999999922709e-07, 0.10000922199999973, 0.10000918099999989, 0.10000919400000008, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 0.10000919500000016, 0.10000868099999982, 5.419999999922709e-07, 0.10000918099999989, 0.10000918099999989, 0.10000866600000036, 0.10000917999999981, 0.100008667, 5.419999995481817e-07, 0.10000922299999981, 5.419999995481817e-07, 0.10000922299999981, 0.10000918099999989]</msg>
<status status="PASS" starttime="20201030 15:57:03.744" endtime="20201030 15:57:03.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.740" endtime="20201030 15:57:03.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:03.751" endtime="20201030 15:57:03.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.749" endtime="20201030 15:57:03.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.748" endtime="20201030 15:57:03.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:57.212" endtime="20201030 15:57:03.771"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:57.139" endtime="20201030 15:57:03.772" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:03.778" endtime="20201030 15:57:03.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.777" endtime="20201030 15:57:03.799"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.812" endtime="20201030 15:57:03.829"></status>
</kw>
<msg timestamp="20201030 15:57:03.830" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:03.811" endtime="20201030 15:57:03.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.832" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:03.831" endtime="20201030 15:57:03.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:57:03.835" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:57:03.833" endtime="20201030 15:57:03.836"></status>
</kw>
<status status="FAIL" starttime="20201030 15:57:03.808" endtime="20201030 15:57:03.836"></status>
</kw>
<status status="FAIL" starttime="20201030 15:57:03.805" endtime="20201030 15:57:03.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.804" endtime="20201030 15:57:03.837"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:57:03.841" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:57:03.840" endtime="20201030 15:57:03.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.838" endtime="20201030 15:57:03.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.803" endtime="20201030 15:57:03.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.803" endtime="20201030 15:57:03.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.843" endtime="20201030 15:57:03.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.801" endtime="20201030 15:57:03.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.799" endtime="20201030 15:57:03.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.776" endtime="20201030 15:57:03.846"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:03.856" endtime="20201030 15:57:09.983"></status>
</kw>
<msg timestamp="20201030 15:57:09.984" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:03.854" endtime="20201030 15:57:09.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:09.990" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:09.986" endtime="20201030 15:57:09.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:09.993" endtime="20201030 15:57:09.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.851" endtime="20201030 15:57:09.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.848" endtime="20201030 15:57:09.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:10.004" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201030 15:57:10.001" endtime="20201030 15:57:10.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.013" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:57:10.011" endtime="20201030 15:57:10.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.018" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:57:10.016" endtime="20201030 15:57:10.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.006" endtime="20201030 15:57:10.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.028" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:57:10.026" endtime="20201030 15:57:10.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.033" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:57:10.031" endtime="20201030 15:57:10.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.021" endtime="20201030 15:57:10.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.043" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:57:10.041" endtime="20201030 15:57:10.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.048" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 15:57:10.046" endtime="20201030 15:57:10.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.036" endtime="20201030 15:57:10.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:10.064" endtime="20201030 15:57:10.351"></status>
</kw>
<msg timestamp="20201030 15:57:10.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066734569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166760764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:10.061" endtime="20201030 15:57:10.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066734569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166760764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:10.354" endtime="20201030 15:57:10.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:10.361" endtime="20201030 15:57:10.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.055" endtime="20201030 15:57:10.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.051" endtime="20201030 15:57:10.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:57:10.367" level="INFO">${FILTERED} = [{'diff': 0.10002619500000001}, {'diff': 0.10000866600000002}, {'diff': 0.10000922200000001}, {'diff': 0.10000919499999994}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': ...</msg>
<status status="PASS" starttime="20201030 15:57:10.364" endtime="20201030 15:57:10.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:10.372" level="INFO">${RESULT} = {'diff': [0.10002619500000001, 0.10000866600000002, 0.10000922200000001, 0.10000919499999994, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000919399999997, 5.409999999095305e-07, 0.10000919399999...</msg>
<status status="PASS" starttime="20201030 15:57:10.368" endtime="20201030 15:57:10.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.376" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:57:10.375" endtime="20201030 15:57:10.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.379" level="INFO">VALUE: [0.10002619500000001, 0.10000866600000002, 0.10000922200000001, 0.10000919499999994, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000919399999997, 5.409999999095305e-07, 0.10000919399999986, 5.419999999922709e-07, 0.10000922199999995, 0.10000919499999994, 0.10000866599999991, 0.10000865300000017, 0.10000872300000019, 5.419999999922709e-07, 0.10000922200000018, 5.419999999922709e-07, 0.1000092079999999, 0.10000868000000018, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000919400000008, 0.100008667, 5.419999999922709e-07, 0.10000920899999999, 0.10000919400000008, 0.10000868000000018, 0.10000922200000062, 0.10000919400000008, 0.100008667, 0.10000920800000035, 5.410000003536197e-07, 0.10000917999999981, 0.10000865299999973]</msg>
<status status="PASS" starttime="20201030 15:57:10.377" endtime="20201030 15:57:10.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.373" endtime="20201030 15:57:10.380"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:10.384" endtime="20201030 15:57:10.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.382" endtime="20201030 15:57:10.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.381" endtime="20201030 15:57:10.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:03.846" endtime="20201030 15:57:10.404"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 15:57:03.773" endtime="20201030 15:57:10.405" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:10.412" endtime="20201030 15:57:10.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.410" endtime="20201030 15:57:10.432"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:10.445" endtime="20201030 15:57:10.463"></status>
</kw>
<msg timestamp="20201030 15:57:10.463" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:10.444" endtime="20201030 15:57:10.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.466" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:10.464" endtime="20201030 15:57:10.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:57:10.469" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:57:10.467" endtime="20201030 15:57:10.469"></status>
</kw>
<status status="FAIL" starttime="20201030 15:57:10.441" endtime="20201030 15:57:10.470"></status>
</kw>
<status status="FAIL" starttime="20201030 15:57:10.438" endtime="20201030 15:57:10.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.437" endtime="20201030 15:57:10.471"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:57:10.475" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:57:10.474" endtime="20201030 15:57:10.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.472" endtime="20201030 15:57:10.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.436" endtime="20201030 15:57:10.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.436" endtime="20201030 15:57:10.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:10.477" endtime="20201030 15:57:10.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.434" endtime="20201030 15:57:10.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.432" endtime="20201030 15:57:10.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.409" endtime="20201030 15:57:10.480"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:10.488" endtime="20201030 15:57:16.614"></status>
</kw>
<msg timestamp="20201030 15:57:16.615" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:10.486" endtime="20201030 15:57:16.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.621" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:16.618" endtime="20201030 15:57:16.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:16.624" endtime="20201030 15:57:16.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.484" endtime="20201030 15:57:16.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.482" endtime="20201030 15:57:16.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:16.635" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201030 15:57:16.632" endtime="20201030 15:57:16.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.644" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:57:16.642" endtime="20201030 15:57:16.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.649" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:57:16.647" endtime="20201030 15:57:16.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.637" endtime="20201030 15:57:16.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.660" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:57:16.657" endtime="20201030 15:57:16.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.664" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:57:16.662" endtime="20201030 15:57:16.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.652" endtime="20201030 15:57:16.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.675" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:57:16.673" endtime="20201030 15:57:16.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.679" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 15:57:16.677" endtime="20201030 15:57:16.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.667" endtime="20201030 15:57:16.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:16.698" endtime="20201030 15:57:16.979"></status>
</kw>
<msg timestamp="20201030 15:57:16.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065911181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165937097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:16.692" endtime="20201030 15:57:16.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:16.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065911181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165937097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:16.982" endtime="20201030 15:57:16.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:16.989" endtime="20201030 15:57:16.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.686" endtime="20201030 15:57:16.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.683" endtime="20201030 15:57:16.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:57:16.995" level="INFO">${FILTERED} = [{'diff': 0.100025916}, {'diff': 5.419999999922709e-07}, {'diff': 0.10000916700000001}, {'diff': 0.10000867999999996}, {'diff': 0.10000920899999999}, {'diff': 0.10000929199999997}, {'diff': 0.10000922...</msg>
<status status="PASS" starttime="20201030 15:57:16.992" endtime="20201030 15:57:16.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:16.998" level="INFO">${RESULT} = {'diff': [0.100025916, 5.419999999922709e-07, 0.10000916700000001, 0.10000867999999996, 0.10000920899999999, 0.10000929199999997, 0.10000922300000004, 0.10000920899999999, 0.100008667, 5.4199999999227...</msg>
<status status="PASS" starttime="20201030 15:57:16.996" endtime="20201030 15:57:16.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:17.003" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:57:17.002" endtime="20201030 15:57:17.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:17.005" level="INFO">VALUE: [0.100025916, 5.419999999922709e-07, 0.10000916700000001, 0.10000867999999996, 0.10000920899999999, 0.10000929199999997, 0.10000922300000004, 0.10000920899999999, 0.100008667, 5.419999999922709e-07, 0.10000919400000008, 0.10000866599999991, 0.10000868100000004, 5.419999999922709e-07, 0.10000919499999972, 5.419999999922709e-07, 0.1000092079999999, 0.10000919500000016, 0.10000918099999989, 0.10000870899999992, 5.419999999922709e-07, 5.409999999095305e-07, 0.10000916599999998, 5.409999999095305e-07, 0.10000915200000016, 5.419999999922709e-07, 0.10000919500000016, 0.100008667, 0.10000868000000018, 0.10000922199999973, 5.410000003536197e-07, 0.10000919400000008, 0.10000868100000027, 0.10000926399999965]</msg>
<status status="PASS" starttime="20201030 15:57:17.004" endtime="20201030 15:57:17.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:16.999" endtime="20201030 15:57:17.007"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:17.011" endtime="20201030 15:57:17.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.009" endtime="20201030 15:57:17.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:17.008" endtime="20201030 15:57:17.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:10.480" endtime="20201030 15:57:17.031"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201030 15:57:10.406" endtime="20201030 15:57:17.032" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:56:34.852" endtime="20201030 15:57:17.039"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 15:54:28.534" endtime="20201030 15:57:17.072"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
