<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 12:46:19.823" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.409" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:46:20.417" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:46:21.445" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:46:20.408" endtime="20201029 12:46:21.446"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.449" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 12:46:21.447" endtime="20201029 12:46:22.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.407" endtime="20201029 12:46:22.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:22.456" endtime="20201029 12:46:22.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.452" endtime="20201029 12:46:22.714"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.726" endtime="20201029 12:46:22.747"></status>
</kw>
<msg timestamp="20201029 12:46:22.747" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.725" endtime="20201029 12:46:22.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.751" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.749" endtime="20201029 12:46:22.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.756" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:22.752" endtime="20201029 12:46:22.757"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:22.722" endtime="20201029 12:46:22.758"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:22.720" endtime="20201029 12:46:22.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.719" endtime="20201029 12:46:22.759"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:22.765" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:22.764" endtime="20201029 12:46:22.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.760" endtime="20201029 12:46:22.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.718" endtime="20201029 12:46:22.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.717" endtime="20201029 12:46:22.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.769" endtime="20201029 12:46:22.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.716" endtime="20201029 12:46:22.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.772" endtime="20201029 12:46:22.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.714" endtime="20201029 12:46:22.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.405" endtime="20201029 12:46:22.774"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:22.780" endtime="20201029 12:46:22.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.779" endtime="20201029 12:46:22.800"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.814" endtime="20201029 12:46:22.829"></status>
</kw>
<msg timestamp="20201029 12:46:22.830" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.812" endtime="20201029 12:46:22.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.832" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.831" endtime="20201029 12:46:22.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.835" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:22.833" endtime="20201029 12:46:22.836"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:22.809" endtime="20201029 12:46:22.836"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:22.807" endtime="20201029 12:46:22.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.805" endtime="20201029 12:46:22.837"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:22.841" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:22.840" endtime="20201029 12:46:22.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.838" endtime="20201029 12:46:22.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.804" endtime="20201029 12:46:22.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.804" endtime="20201029 12:46:22.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.843" endtime="20201029 12:46:22.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.802" endtime="20201029 12:46:22.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.801" endtime="20201029 12:46:22.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.778" endtime="20201029 12:46:22.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.854" endtime="20201029 12:46:22.867"></status>
</kw>
<msg timestamp="20201029 12:46:22.868" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.851" endtime="20201029 12:46:22.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.870" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.869" endtime="20201029 12:46:22.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.871" endtime="20201029 12:46:22.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.849" endtime="20201029 12:46:22.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.847" endtime="20201029 12:46:22.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.878" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 12:46:22.877" endtime="20201029 12:46:22.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.880" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 12:46:22.879" endtime="20201029 12:46:22.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.875" endtime="20201029 12:46:22.881"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:22.775" endtime="20201029 12:46:22.882" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:46:19.935" endtime="20201029 12:46:22.884"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.936" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:46:22.944" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:46:23.943" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:46:22.935" endtime="20201029 12:46:23.944"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.948" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 12:46:23.945" endtime="20201029 12:46:24.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.934" endtime="20201029 12:46:24.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:24.957" endtime="20201029 12:46:25.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.953" endtime="20201029 12:46:25.217"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.229" endtime="20201029 12:46:25.251"></status>
</kw>
<msg timestamp="20201029 12:46:25.251" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.228" endtime="20201029 12:46:25.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.254" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.252" endtime="20201029 12:46:25.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.257" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:25.255" endtime="20201029 12:46:25.257"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:25.226" endtime="20201029 12:46:25.258"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:25.223" endtime="20201029 12:46:25.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.222" endtime="20201029 12:46:25.259"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:25.263" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:25.262" endtime="20201029 12:46:25.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.260" endtime="20201029 12:46:25.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.221" endtime="20201029 12:46:25.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.221" endtime="20201029 12:46:25.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.264" endtime="20201029 12:46:25.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.219" endtime="20201029 12:46:25.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.267" endtime="20201029 12:46:25.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.218" endtime="20201029 12:46:25.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.932" endtime="20201029 12:46:25.270"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:25.276" endtime="20201029 12:46:25.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.274" endtime="20201029 12:46:25.297"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.311" endtime="20201029 12:46:25.327"></status>
</kw>
<msg timestamp="20201029 12:46:25.327" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.309" endtime="20201029 12:46:25.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.330" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.329" endtime="20201029 12:46:25.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.333" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:25.331" endtime="20201029 12:46:25.334"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:25.306" endtime="20201029 12:46:25.334"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:25.304" endtime="20201029 12:46:25.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.303" endtime="20201029 12:46:25.335"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:25.339" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:25.338" endtime="20201029 12:46:25.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.336" endtime="20201029 12:46:25.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.302" endtime="20201029 12:46:25.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.301" endtime="20201029 12:46:25.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.341" endtime="20201029 12:46:25.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.299" endtime="20201029 12:46:25.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.297" endtime="20201029 12:46:25.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.273" endtime="20201029 12:46:25.343"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.352" endtime="20201029 12:46:25.367"></status>
</kw>
<msg timestamp="20201029 12:46:25.368" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.351" endtime="20201029 12:46:25.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.371" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.369" endtime="20201029 12:46:25.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.372" endtime="20201029 12:46:25.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.348" endtime="20201029 12:46:25.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.346" endtime="20201029 12:46:25.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.381" endtime="20201029 12:46:25.654"></status>
</kw>
<msg timestamp="20201029 12:46:25.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066141444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066145847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:25.379" endtime="20201029 12:46:25.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066141444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066145847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:25.657" endtime="20201029 12:46:25.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.663" endtime="20201029 12:46:25.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.377" endtime="20201029 12:46:25.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.375" endtime="20201029 12:46:25.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:25.669" level="INFO">${RESULT} = [{'diff': 4.403000000000046e-06}, {'diff': 6.930000000002212e-06}, {'diff': 7.05600000000528e-06}, {'diff': 1.0347999999993363e-05}, {'diff': 1.1083999999994543e-05}, {'diff': 9.499999999995623e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:46:25.666" endtime="20201029 12:46:25.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:25.673" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.403000000000046e-06, 6.930000000002212e-06, 7.05600000000528e-06, 1.0347999999993363e-05, 1.1083999999994543e-05, 9.499999999995623e-06, 9.151999999998384e-06, 7.652999999996357e-06, 8.069...</msg>
<status status="PASS" starttime="20201029 12:46:25.670" endtime="20201029 12:46:25.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.677" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:25.676" endtime="20201029 12:46:25.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.679" level="INFO">VALUE: [4.403000000000046e-06, 6.930000000002212e-06, 7.05600000000528e-06, 1.0347999999993363e-05, 1.1083999999994543e-05, 9.499999999995623e-06, 9.151999999998384e-06, 7.652999999996357e-06, 8.069999999998911e-06, 1.0778000000002952e-05, 7.763999999993443e-06, 1.0402000000006573e-05, 7.2640000000068206e-06, 1.0403000000006046e-05, 4.971999999991983e-06, 9.223000000002646e-06, 1.0541000000002798e-05, 8.332999999999258e-06, 7.416999999995677e-06, 1.0971999999997983e-05, 8.222999999987768e-06, 6.235999999992803e-06, 1.0750000000003812e-05, 5.943999999993843e-06, 7.471999999994483e-06]</msg>
<status status="PASS" starttime="20201029 12:46:25.678" endtime="20201029 12:46:25.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.673" endtime="20201029 12:46:25.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.345" endtime="20201029 12:46:25.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.345" endtime="20201029 12:46:25.681"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.689" endtime="20201029 12:46:25.703"></status>
</kw>
<msg timestamp="20201029 12:46:25.703" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.687" endtime="20201029 12:46:25.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.706" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.704" endtime="20201029 12:46:25.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.707" endtime="20201029 12:46:25.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.685" endtime="20201029 12:46:25.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.683" endtime="20201029 12:46:25.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.717" endtime="20201029 12:46:26.008"></status>
</kw>
<msg timestamp="20201029 12:46:26.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066141444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066145847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:25.716" endtime="20201029 12:46:26.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066141444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066145847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:26.013" endtime="20201029 12:46:26.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.021" endtime="20201029 12:46:26.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.713" endtime="20201029 12:46:26.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.711" endtime="20201029 12:46:26.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:26.028" level="INFO">${RESULT} = [{'diff': 4.403000000000046e-06}, {'diff': 6.930000000002212e-06}, {'diff': 7.05600000000528e-06}, {'diff': 1.0347999999993363e-05}, {'diff': 1.1083999999994543e-05}, {'diff': 9.499999999995623e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:46:26.025" endtime="20201029 12:46:26.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:26.032" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.403000000000046e-06, 6.930000000002212e-06, 7.05600000000528e-06, 1.0347999999993363e-05, 1.1083999999994543e-05, 9.499999999995623e-06, 9.151999999998384e-06, 7.652999999996357e-06, 8.069...</msg>
<status status="PASS" starttime="20201029 12:46:26.029" endtime="20201029 12:46:26.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.037" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:26.036" endtime="20201029 12:46:26.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.040" level="INFO">VALUE: [4.403000000000046e-06, 6.930000000002212e-06, 7.05600000000528e-06, 1.0347999999993363e-05, 1.1083999999994543e-05, 9.499999999995623e-06, 9.151999999998384e-06, 7.652999999996357e-06, 8.069999999998911e-06, 1.0778000000002952e-05, 7.763999999993443e-06, 1.0402000000006573e-05, 7.2640000000068206e-06, 1.0403000000006046e-05, 4.971999999991983e-06, 9.223000000002646e-06, 1.0541000000002798e-05, 8.332999999999258e-06, 7.416999999995677e-06, 1.0971999999997983e-05, 8.222999999987768e-06, 6.235999999992803e-06, 1.0750000000003812e-05, 5.943999999993843e-06, 7.471999999994483e-06, 0.325918333, 8.388999999997537e-06, 7.152999999981979e-06, 9.25000000001619e-06, 7.972999999994457e-06, 9.721999999989794e-06, 1.0264000000037576e-05, 9.193999999990154e-06, 9.90299999997779e-06, 7.513000000014536e-06, 8.180000000024279e-06, 9.527999999980885e-06, 8.208000000009541e-06, 6.986000000042125e-06, 1.0903000000006546e-05, 7.028000000020018e-06, 6.971999999993983e-06, 1.0971999999997983e-05, 1.0429999999950201e-05, 6.290999999991609e-06, 6.541999999998271e-06, 4.8329999999818796e-06, 9.611000000020464e-06, 9.597000000027833e-06, 7.917000000023933e-06]</msg>
<status status="PASS" starttime="20201029 12:46:26.038" endtime="20201029 12:46:26.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.033" endtime="20201029 12:46:26.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.682" endtime="20201029 12:46:26.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.681" endtime="20201029 12:46:26.042"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.050" endtime="20201029 12:46:26.064"></status>
</kw>
<msg timestamp="20201029 12:46:26.065" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.048" endtime="20201029 12:46:26.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.067" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.066" endtime="20201029 12:46:26.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.068" endtime="20201029 12:46:26.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.046" endtime="20201029 12:46:26.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.044" endtime="20201029 12:46:26.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.078" endtime="20201029 12:46:26.377"></status>
</kw>
<msg timestamp="20201029 12:46:26.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066328944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.066338792, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:26.076" endtime="20201029 12:46:26.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066328944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.066338792, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:26.382" endtime="20201029 12:46:26.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.392" endtime="20201029 12:46:26.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.073" endtime="20201029 12:46:26.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.072" endtime="20201029 12:46:26.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:26.399" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.2640000000068206e-06}, {'diff': 1.0403000000006046e-05}, {'diff': 4.971999999991983e-06}, {'diff': 9.223000000002646e-06}, {'diff': 1.0541000000002798e-05}, {'diff': 8.3329999...</msg>
<status status="PASS" starttime="20201029 12:46:26.395" endtime="20201029 12:46:26.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:26.404" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.2640000000068206e-06, 1.0403000000006046e-05, 4.971999999991983e-06, 9.223000000002646e-06, 1.0541000000002798e-05, 8.332999999999258e-06, 7.416999999995677e-06, 1.0971999999997983e-05,...</msg>
<status status="PASS" starttime="20201029 12:46:26.400" endtime="20201029 12:46:26.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.408" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:26.407" endtime="20201029 12:46:26.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.412" level="INFO">VALUE: [0, 7.2640000000068206e-06, 1.0403000000006046e-05, 4.971999999991983e-06, 9.223000000002646e-06, 1.0541000000002798e-05, 8.332999999999258e-06, 7.416999999995677e-06, 1.0971999999997983e-05, 8.222999999987768e-06, 6.235999999992803e-06, 1.0750000000003812e-05, 5.943999999993843e-06, 7.471999999994483e-06, 0.325918333, 8.388999999997537e-06, 7.152999999981979e-06, 9.25000000001619e-06, 7.972999999994457e-06, 9.721999999989794e-06, 1.0264000000037576e-05, 9.193999999990154e-06, 9.90299999997779e-06, 7.513000000014536e-06, 8.180000000024279e-06, 9.527999999980885e-06, 8.208000000009541e-06, 6.986000000042125e-06, 1.0903000000006546e-05, 7.028000000020018e-06, 6.971999999993983e-06, 1.0971999999997983e-05, 1.0429999999950201e-05, 6.290999999991609e-06, 6.541999999998271e-06, 4.8329999999818796e-06, 9.611000000020464e-06, 9.597000000027833e-06, 7.917000000023933e-06, 0.348904431, 8.486000000029748e-06, 4.8469999999189994e-06, 9.77800000001583e-06, 6.624999999926828e-06, 8.097000000040211e-06, 6.52800000000564e-06, 7.832999999957124e-06, 9.513999999932743e-06, 1.13470000000504e-05, 4.959000000082092e-06, 8.763999999938932e-06, 6.500000000020378e-06, 5.708999999964881e-06, 7.152999999981979e-06, 8.569000000013816e-06, 9.58399999995141e-06, 1.0653000000027113e-05, 1.1112000000035316e-05, 6.264000000033576e-06, 7.153000000093002e-06, 8.818999999937738e-06, 9.903000000033302e-06, 5.4579999999582185e-06, 6.653000000023113e-06]</msg>
<status status="PASS" starttime="20201029 12:46:26.410" endtime="20201029 12:46:26.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.405" endtime="20201029 12:46:26.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.043" endtime="20201029 12:46:26.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.042" endtime="20201029 12:46:26.413"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.421" endtime="20201029 12:46:26.436"></status>
</kw>
<msg timestamp="20201029 12:46:26.436" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.420" endtime="20201029 12:46:26.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.439" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.437" endtime="20201029 12:46:26.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.440" endtime="20201029 12:46:26.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.417" endtime="20201029 12:46:26.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.415" endtime="20201029 12:46:26.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.449" endtime="20201029 12:46:26.753"></status>
</kw>
<msg timestamp="20201029 12:46:26.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.392653278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.392659306, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:26.448" endtime="20201029 12:46:26.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.392653278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.392659306, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:26.758" endtime="20201029 12:46:26.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.768" endtime="20201029 12:46:26.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.445" endtime="20201029 12:46:26.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.443" endtime="20201029 12:46:26.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:26.775" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.208000000009541e-06}, {'diff': 6.986000000042125e-06}, {'diff': 1.0903000000006546e-05}, {'diff': 7.028000000020018e-06}, {'diff': 6.971999999993983e-06}, {'diff': 1.097199999...</msg>
<status status="PASS" starttime="20201029 12:46:26.771" endtime="20201029 12:46:26.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:26.780" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.208000000009541e-06, 6.986000000042125e-06, 1.0903000000006546e-05, 7.028000000020018e-06, 6.971999999993983e-06, 1.0971999999997983e-05, 1.0429999999950201e-05, 6.290999999991609e-06, ...</msg>
<status status="PASS" starttime="20201029 12:46:26.776" endtime="20201029 12:46:26.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.785" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:26.783" endtime="20201029 12:46:26.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.787" level="INFO">VALUE: [0, 8.208000000009541e-06, 6.986000000042125e-06, 1.0903000000006546e-05, 7.028000000020018e-06, 6.971999999993983e-06, 1.0971999999997983e-05, 1.0429999999950201e-05, 6.290999999991609e-06, 6.541999999998271e-06, 4.8329999999818796e-06, 9.611000000020464e-06, 9.597000000027833e-06, 7.917000000023933e-06, 0.348904431, 8.486000000029748e-06, 4.8469999999189994e-06, 9.77800000001583e-06, 6.624999999926828e-06, 8.097000000040211e-06, 6.52800000000564e-06, 7.832999999957124e-06, 9.513999999932743e-06, 1.13470000000504e-05, 4.959000000082092e-06, 8.763999999938932e-06, 6.500000000020378e-06, 5.708999999964881e-06, 7.152999999981979e-06, 8.569000000013816e-06, 9.58399999995141e-06, 1.0653000000027113e-05, 1.1112000000035316e-05, 6.264000000033576e-06, 7.153000000093002e-06, 8.818999999937738e-06, 9.903000000033302e-06, 5.4579999999582185e-06, 6.653000000023113e-06, 0.36076041699999994, 8.111000000088353e-06, 9.028000000022018e-06, 5.012999999998158e-06, 6.7219999999590385e-06, 8.903000000115568e-06, 9.625000000124118e-06, 8.138999999962593e-06, 9.13900000010237e-06, 7.70799999982863e-06, 8.847000000145044e-06, 8.347000000075155e-06, 9.98700000010011e-06, 7.45800000001573e-06, 5.776999999929089e-06, 8.721999999794505e-06, 8.74999999989079e-06, 5.736000000089447e-06, 7.917000000023933e-06, 9.860999999888875e-06, 1.1457999999908708e-05, 5.27799999994194e-06, 7.652999999940846e-06, 9.208000000038297e-06, 9.38899999991527e-06]</msg>
<status status="PASS" starttime="20201029 12:46:26.786" endtime="20201029 12:46:26.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.781" endtime="20201029 12:46:26.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.414" endtime="20201029 12:46:26.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.413" endtime="20201029 12:46:26.789"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.798" endtime="20201029 12:46:26.812"></status>
</kw>
<msg timestamp="20201029 12:46:26.813" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.795" endtime="20201029 12:46:26.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:26.815" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:26.814" endtime="20201029 12:46:26.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.816" endtime="20201029 12:46:26.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.792" endtime="20201029 12:46:26.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.791" endtime="20201029 12:46:26.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:26.826" endtime="20201029 12:46:27.129"></status>
</kw>
<msg timestamp="20201029 12:46:27.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.741952361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.741962472, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:26.824" endtime="20201029 12:46:27.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.741952361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.741962472, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:27.134" endtime="20201029 12:46:27.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.144" endtime="20201029 12:46:27.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.821" endtime="20201029 12:46:27.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.820" endtime="20201029 12:46:27.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:27.151" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 6.500000000020378e-06}, {'diff': 5.708999999964881e-06}, {'diff': 7.152999999981979e-06}, {'diff': 8.569000000013816e-06}, {'diff': 9.58399999995141e-06}, {'diff': 1.06530000000...</msg>
<status status="PASS" starttime="20201029 12:46:27.148" endtime="20201029 12:46:27.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:27.157" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 6.500000000020378e-06, 5.708999999964881e-06, 7.152999999981979e-06, 8.569000000013816e-06, 9.58399999995141e-06, 1.0653000000027113e-05, 1.1112000000035316e-05, 6.264000000033576e-06, 7....</msg>
<status status="PASS" starttime="20201029 12:46:27.152" endtime="20201029 12:46:27.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.161" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:27.160" endtime="20201029 12:46:27.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.164" level="INFO">VALUE: [0, 6.500000000020378e-06, 5.708999999964881e-06, 7.152999999981979e-06, 8.569000000013816e-06, 9.58399999995141e-06, 1.0653000000027113e-05, 1.1112000000035316e-05, 6.264000000033576e-06, 7.153000000093002e-06, 8.818999999937738e-06, 9.903000000033302e-06, 5.4579999999582185e-06, 6.653000000023113e-06, 0.36076041699999994, 8.111000000088353e-06, 9.028000000022018e-06, 5.012999999998158e-06, 6.7219999999590385e-06, 8.903000000115568e-06, 9.625000000124118e-06, 8.138999999962593e-06, 9.13900000010237e-06, 7.70799999982863e-06, 8.847000000145044e-06, 8.347000000075155e-06, 9.98700000010011e-06, 7.45800000001573e-06, 5.776999999929089e-06, 8.721999999794505e-06, 8.74999999989079e-06, 5.736000000089447e-06, 7.917000000023933e-06, 9.860999999888875e-06, 1.1457999999908708e-05, 5.27799999994194e-06, 7.652999999940846e-06, 9.208000000038297e-06, 9.38899999991527e-06, 0.36526020800000003, 8.028000000104285e-06, 1.1138999999937838e-05, 6.8469999998654885e-06, 8.263999999869043e-06, 9.471999999899339e-06, 6.084000000017298e-06, 7.264000000173354e-06, 1.127799999989243e-05, 4.971999999936472e-06, 5.207999999923274e-06, 6.06900000010846e-06, 8.750000000112834e-06, 6.278000000081718e-06, 7.292000000047594e-06, 1.0223000000086913e-05, 6.555000000130207e-06, 6.513999999846476e-06, 7.848000000088007e-06, 7.791999999895438e-06, 5.903000000140324e-06, 7.625000000066606e-06, 6.651999999940372e-06, 6.750000000055323e-06, 1.0861000000028653e-05]</msg>
<status status="PASS" starttime="20201029 12:46:27.162" endtime="20201029 12:46:27.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.158" endtime="20201029 12:46:27.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.790" endtime="20201029 12:46:27.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:26.789" endtime="20201029 12:46:27.165"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.173" endtime="20201029 12:46:27.187"></status>
</kw>
<msg timestamp="20201029 12:46:27.188" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.172" endtime="20201029 12:46:27.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.190" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.189" endtime="20201029 12:46:27.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.191" endtime="20201029 12:46:27.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.169" endtime="20201029 12:46:27.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.167" endtime="20201029 12:46:27.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.207" endtime="20201029 12:46:27.517"></status>
</kw>
<msg timestamp="20201029 12:46:27.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.103101861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.103108069, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:27.203" endtime="20201029 12:46:27.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.103101861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.103108069, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:27.522" endtime="20201029 12:46:27.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.532" endtime="20201029 12:46:27.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.198" endtime="20201029 12:46:27.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.195" endtime="20201029 12:46:27.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:27.543" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.98700000010011e-06}, {'diff': 7.45800000001573e-06}, {'diff': 5.776999999929089e-06}, {'diff': 8.721999999794505e-06}, {'diff': 8.74999999989079e-06}, {'diff': 5.7360000000894...</msg>
<status status="PASS" starttime="20201029 12:46:27.536" endtime="20201029 12:46:27.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:27.554" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.98700000010011e-06, 7.45800000001573e-06, 5.776999999929089e-06, 8.721999999794505e-06, 8.74999999989079e-06, 5.736000000089447e-06, 7.917000000023933e-06, 9.860999999888875e-06, 1.1457...</msg>
<status status="PASS" starttime="20201029 12:46:27.548" endtime="20201029 12:46:27.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.561" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:27.560" endtime="20201029 12:46:27.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.565" level="INFO">VALUE: [0, 9.98700000010011e-06, 7.45800000001573e-06, 5.776999999929089e-06, 8.721999999794505e-06, 8.74999999989079e-06, 5.736000000089447e-06, 7.917000000023933e-06, 9.860999999888875e-06, 1.1457999999908708e-05, 5.27799999994194e-06, 7.652999999940846e-06, 9.208000000038297e-06, 9.38899999991527e-06, 0.36526020800000003, 8.028000000104285e-06, 1.1138999999937838e-05, 6.8469999998654885e-06, 8.263999999869043e-06, 9.471999999899339e-06, 6.084000000017298e-06, 7.264000000173354e-06, 1.127799999989243e-05, 4.971999999936472e-06, 5.207999999923274e-06, 6.06900000010846e-06, 8.750000000112834e-06, 6.278000000081718e-06, 7.292000000047594e-06, 1.0223000000086913e-05, 6.555000000130207e-06, 6.513999999846476e-06, 7.848000000088007e-06, 7.791999999895438e-06, 5.903000000140324e-06, 7.625000000066606e-06, 6.651999999940372e-06, 6.750000000055323e-06, 1.0861000000028653e-05, 0.36581958299999995, 5.4579999999582185e-06, 1.1014000000031388e-05, 8.041999999930383e-06, 5.778000000011829e-06, 8.000000000008e-06, 7.77800000006934e-06, 8.457999999933463e-06, 8.72200000001655e-06, 5.583999999947409e-06, 7.611000000018464e-06, 6.777999999929563e-06, 7.20800000020283e-06, 9.402999999963413e-06, 9.208999999898992e-06, 9.04099999998742e-06, 1.156899999998906e-05, 6.2219999998891495e-06, 8.402000000184984e-06, 7.443999999967588e-06, 7.77800000006934e-06, 5.709000000075903e-06, 7.58400000000492e-06, 7.5700000001788226e-06, 9.208000000038297e-06]</msg>
<status status="PASS" starttime="20201029 12:46:27.563" endtime="20201029 12:46:27.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.555" endtime="20201029 12:46:27.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.166" endtime="20201029 12:46:27.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.166" endtime="20201029 12:46:27.568"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.577" endtime="20201029 12:46:27.591"></status>
</kw>
<msg timestamp="20201029 12:46:27.592" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.575" endtime="20201029 12:46:27.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.594" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.593" endtime="20201029 12:46:27.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.596" endtime="20201029 12:46:27.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.572" endtime="20201029 12:46:27.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.571" endtime="20201029 12:46:27.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.605" endtime="20201029 12:46:27.911"></status>
</kw>
<msg timestamp="20201029 12:46:27.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.468752, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.468759153, 'source': 'DUT_IC', 'event': 'RISIN...</msg>
<status status="PASS" starttime="20201029 12:46:27.603" endtime="20201029 12:46:27.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.468752, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.468759153, 'source': 'DUT_IC', 'event': 'RISIN...</msg>
<status status="PASS" starttime="20201029 12:46:27.917" endtime="20201029 12:46:27.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.927" endtime="20201029 12:46:27.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.601" endtime="20201029 12:46:27.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.599" endtime="20201029 12:46:27.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:27.934" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.750000000112834e-06}, {'diff': 6.278000000081718e-06}, {'diff': 7.292000000047594e-06}, {'diff': 1.0223000000086913e-05}, {'diff': 6.555000000130207e-06}, {'diff': 6.513999999...</msg>
<status status="PASS" starttime="20201029 12:46:27.930" endtime="20201029 12:46:27.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:27.939" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.750000000112834e-06, 6.278000000081718e-06, 7.292000000047594e-06, 1.0223000000086913e-05, 6.555000000130207e-06, 6.513999999846476e-06, 7.848000000088007e-06, 7.791999999895438e-06, 5....</msg>
<status status="PASS" starttime="20201029 12:46:27.935" endtime="20201029 12:46:27.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.943" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:27.942" endtime="20201029 12:46:27.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.946" level="INFO">VALUE: [0, 8.750000000112834e-06, 6.278000000081718e-06, 7.292000000047594e-06, 1.0223000000086913e-05, 6.555000000130207e-06, 6.513999999846476e-06, 7.848000000088007e-06, 7.791999999895438e-06, 5.903000000140324e-06, 7.625000000066606e-06, 6.651999999940372e-06, 6.750000000055323e-06, 1.0861000000028653e-05, 0.36581958299999995, 5.4579999999582185e-06, 1.1014000000031388e-05, 8.041999999930383e-06, 5.778000000011829e-06, 8.000000000008e-06, 7.77800000006934e-06, 8.457999999933463e-06, 8.72200000001655e-06, 5.583999999947409e-06, 7.611000000018464e-06, 6.777999999929563e-06, 7.20800000020283e-06, 9.402999999963413e-06, 9.208999999898992e-06, 9.04099999998742e-06, 1.156899999998906e-05, 6.2219999998891495e-06, 8.402000000184984e-06, 7.443999999967588e-06, 7.77800000006934e-06, 5.709000000075903e-06, 7.58400000000492e-06, 7.5700000001788226e-06, 9.208000000038297e-06, 0.3932405269999999, 6.707999999910896e-06, 5.014000000080898e-06, 1.0097999999736373e-05, 8.97199999982945e-06, 7.569999999734733e-06, 8.153000000010735e-06, 5.389000000022293e-06, 8.333000000249058e-06, 9.041999999848116e-06, 1.0667000000186277e-05, 7.388999999857759e-06, 1.0458000000213019e-05, 8.652999999636535e-06, 1.0528000000231685e-05, 8.209000000203304e-06, 8.66600000026807e-06, 8.596999999888055e-06, 6.1389999999050815e-06, 5.666999999931477e-06, 1.0292000000244883e-05, 9.973000000051968e-06, 9.582999999757646e-06, 1.1208000000095808e-05, 1.1139000000159882e-05]</msg>
<status status="PASS" starttime="20201029 12:46:27.944" endtime="20201029 12:46:27.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.940" endtime="20201029 12:46:27.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.569" endtime="20201029 12:46:27.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.569" endtime="20201029 12:46:27.947"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.956" endtime="20201029 12:46:27.971"></status>
</kw>
<msg timestamp="20201029 12:46:27.971" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.955" endtime="20201029 12:46:27.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:27.974" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:27.972" endtime="20201029 12:46:27.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.975" endtime="20201029 12:46:27.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.951" endtime="20201029 12:46:27.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.950" endtime="20201029 12:46:27.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:27.984" endtime="20201029 12:46:28.311"></status>
</kw>
<msg timestamp="20201029 12:46:28.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.834950097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.834960625, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:27.982" endtime="20201029 12:46:28.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.834950097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.834960625, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:28.316" endtime="20201029 12:46:28.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.326" endtime="20201029 12:46:28.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.980" endtime="20201029 12:46:28.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.978" endtime="20201029 12:46:28.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:28.334" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.20800000020283e-06}, {'diff': 9.402999999963413e-06}, {'diff': 9.208999999898992e-06}, {'diff': 9.04099999998742e-06}, {'diff': 1.156899999998906e-05}, {'diff': 6.221999999889...</msg>
<status status="PASS" starttime="20201029 12:46:28.330" endtime="20201029 12:46:28.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:28.340" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.20800000020283e-06, 9.402999999963413e-06, 9.208999999898992e-06, 9.04099999998742e-06, 1.156899999998906e-05, 6.2219999998891495e-06, 8.402000000184984e-06, 7.443999999967588e-06, 7.77...</msg>
<status status="PASS" starttime="20201029 12:46:28.335" endtime="20201029 12:46:28.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.345" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:28.344" endtime="20201029 12:46:28.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.348" level="INFO">VALUE: [0, 7.20800000020283e-06, 9.402999999963413e-06, 9.208999999898992e-06, 9.04099999998742e-06, 1.156899999998906e-05, 6.2219999998891495e-06, 8.402000000184984e-06, 7.443999999967588e-06, 7.77800000006934e-06, 5.709000000075903e-06, 7.58400000000492e-06, 7.5700000001788226e-06, 9.208000000038297e-06, 0.3932405269999999, 6.707999999910896e-06, 5.014000000080898e-06, 1.0097999999736373e-05, 8.97199999982945e-06, 7.569999999734733e-06, 8.153000000010735e-06, 5.389000000022293e-06, 8.333000000249058e-06, 9.041999999848116e-06, 1.0667000000186277e-05, 7.388999999857759e-06, 1.0458000000213019e-05, 8.652999999636535e-06, 1.0528000000231685e-05, 8.209000000203304e-06, 8.66600000026807e-06, 8.596999999888055e-06, 6.1389999999050815e-06, 5.666999999931477e-06, 1.0292000000244883e-05, 9.973000000051968e-06, 9.582999999757646e-06, 1.1208000000095808e-05, 1.1139000000159882e-05, 0.37022115300000014, 6.069999999969156e-06, 1.001399999989161e-05, 8.764000000383021e-06, 7.83399999981782e-06, 1.0069000000001438e-05, 8.37500000017144e-06, 4.915999999965948e-06, 1.0222000000226217e-05, 5.459000000040959e-06, 9.528000000091907e-06, 5.875000000266084e-06, 6.236000000381381e-06, 6.361000000065786e-06, 8.388999999997537e-06, 8.818999999604671e-06, 6.971999999993983e-06, 6.3469999997955995e-06, 6.8890000002319596e-06, 9.903000000033302e-06, 6.958999999806537e-06, 7.708000000050674e-06, 8.526999999869389e-06, 7.1660000000584034e-06, 1.0153000000290291e-05]</msg>
<status status="PASS" starttime="20201029 12:46:28.346" endtime="20201029 12:46:28.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.341" endtime="20201029 12:46:28.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.948" endtime="20201029 12:46:28.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:27.948" endtime="20201029 12:46:28.349"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.357" endtime="20201029 12:46:28.372"></status>
</kw>
<msg timestamp="20201029 12:46:28.372" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.356" endtime="20201029 12:46:28.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.375" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.373" endtime="20201029 12:46:28.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.376" endtime="20201029 12:46:28.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.353" endtime="20201029 12:46:28.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.351" endtime="20201029 12:46:28.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.385" endtime="20201029 12:46:28.701"></status>
</kw>
<msg timestamp="20201029 12:46:28.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.228587139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.228594806, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:28.384" endtime="20201029 12:46:28.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.228587139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.228594806, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:28.706" endtime="20201029 12:46:28.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.716" endtime="20201029 12:46:28.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.381" endtime="20201029 12:46:28.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.379" endtime="20201029 12:46:28.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:28.723" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0458000000213019e-05}, {'diff': 8.652999999636535e-06}, {'diff': 1.0528000000231685e-05}, {'diff': 8.209000000203304e-06}, {'diff': 8.66600000026807e-06}, {'diff': 8.596999999...</msg>
<status status="PASS" starttime="20201029 12:46:28.719" endtime="20201029 12:46:28.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:28.729" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0458000000213019e-05, 8.652999999636535e-06, 1.0528000000231685e-05, 8.209000000203304e-06, 8.66600000026807e-06, 8.596999999888055e-06, 6.1389999999050815e-06, 5.666999999931477e-06, 1...</msg>
<status status="PASS" starttime="20201029 12:46:28.724" endtime="20201029 12:46:28.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.733" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:28.732" endtime="20201029 12:46:28.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.736" level="INFO">VALUE: [0, 1.0458000000213019e-05, 8.652999999636535e-06, 1.0528000000231685e-05, 8.209000000203304e-06, 8.66600000026807e-06, 8.596999999888055e-06, 6.1389999999050815e-06, 5.666999999931477e-06, 1.0292000000244883e-05, 9.973000000051968e-06, 9.582999999757646e-06, 1.1208000000095808e-05, 1.1139000000159882e-05, 0.37022115300000014, 6.069999999969156e-06, 1.001399999989161e-05, 8.764000000383021e-06, 7.83399999981782e-06, 1.0069000000001438e-05, 8.37500000017144e-06, 4.915999999965948e-06, 1.0222000000226217e-05, 5.459000000040959e-06, 9.528000000091907e-06, 5.875000000266084e-06, 6.236000000381381e-06, 6.361000000065786e-06, 8.388999999997537e-06, 8.818999999604671e-06, 6.971999999993983e-06, 6.3469999997955995e-06, 6.8890000002319596e-06, 9.903000000033302e-06, 6.958999999806537e-06, 7.708000000050674e-06, 8.526999999869389e-06, 7.1660000000584034e-06, 1.0153000000290291e-05, 0.3908220140000003, 7.860999999831364e-06, 8.166000000198181e-06, 9.903000000033302e-06, 9.292000000105105e-06, 8.889000000067426e-06, 8.902999999893524e-06, 9.193999999990154e-06, 8.221999999946661e-06, 9.583999999840387e-06, 6.319000000143404e-06, 7.402000000045206e-06, 1.065300000036018e-05, 7.652999999940846e-06, 9.652999999776313e-06, 8.320000000061611e-06, 7.070000000108934e-06, 9.207999999816252e-06, 9.388999999693226e-06, 6.334000000052242e-06, 4.820000000016478e-06, 1.020799999995603e-05, 9.638999999950215e-06, 5.722000000041305e-06, 4.333000000134035e-06]</msg>
<status status="PASS" starttime="20201029 12:46:28.734" endtime="20201029 12:46:28.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.730" endtime="20201029 12:46:28.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.350" endtime="20201029 12:46:28.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.350" endtime="20201029 12:46:28.738"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.746" endtime="20201029 12:46:28.760"></status>
</kw>
<msg timestamp="20201029 12:46:28.760" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.744" endtime="20201029 12:46:28.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.763" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.761" endtime="20201029 12:46:28.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.764" endtime="20201029 12:46:28.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.741" endtime="20201029 12:46:28.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.740" endtime="20201029 12:46:28.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.774" endtime="20201029 12:46:29.095"></status>
</kw>
<msg timestamp="20201029 12:46:29.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.599222569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.599231528, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:28.772" endtime="20201029 12:46:29.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.599222569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.599231528, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:29.099" endtime="20201029 12:46:29.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.109" endtime="20201029 12:46:29.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.769" endtime="20201029 12:46:29.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.767" endtime="20201029 12:46:29.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:29.117" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 6.236000000381381e-06}, {'diff': 6.361000000065786e-06}, {'diff': 8.388999999997537e-06}, {'diff': 8.818999999604671e-06}, {'diff': 6.971999999993983e-06}, {'diff': 6.3469999997...</msg>
<status status="PASS" starttime="20201029 12:46:29.113" endtime="20201029 12:46:29.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:29.121" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 6.236000000381381e-06, 6.361000000065786e-06, 8.388999999997537e-06, 8.818999999604671e-06, 6.971999999993983e-06, 6.3469999997955995e-06, 6.8890000002319596e-06, 9.903000000033302e-06, 6...</msg>
<status status="PASS" starttime="20201029 12:46:29.118" endtime="20201029 12:46:29.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.126" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:29.125" endtime="20201029 12:46:29.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.129" level="INFO">VALUE: [0, 6.236000000381381e-06, 6.361000000065786e-06, 8.388999999997537e-06, 8.818999999604671e-06, 6.971999999993983e-06, 6.3469999997955995e-06, 6.8890000002319596e-06, 9.903000000033302e-06, 6.958999999806537e-06, 7.708000000050674e-06, 8.526999999869389e-06, 7.1660000000584034e-06, 1.0153000000290291e-05, 0.3908220140000003, 7.860999999831364e-06, 8.166000000198181e-06, 9.903000000033302e-06, 9.292000000105105e-06, 8.889000000067426e-06, 8.902999999893524e-06, 9.193999999990154e-06, 8.221999999946661e-06, 9.583999999840387e-06, 6.319000000143404e-06, 7.402000000045206e-06, 1.065300000036018e-05, 7.652999999940846e-06, 9.652999999776313e-06, 8.320000000061611e-06, 7.070000000108934e-06, 9.207999999816252e-06, 9.388999999693226e-06, 6.334000000052242e-06, 4.820000000016478e-06, 1.020799999995603e-05, 9.638999999950215e-06, 5.722000000041305e-06, 4.333000000134035e-06, 0.37768340300000025, 1.0152999999846202e-05, 7.209000000063526e-06, 6.777999999929563e-06, 7.041000000373998e-06, 1.1917000000138955e-05, 7.58400000000492e-06, 1.0277999999974696e-05, 7.987000000042599e-06, 4.208000000005541e-06, 9.096999999957944e-06, 6.374999999891884e-06, 9.374999999867129e-06, 1.011099999992382e-05, 8.72200000001655e-06, 4.90200000013985e-06, 8.986999999738288e-06, 5.735999999867403e-06, 7.958000000307663e-06, 7.903000000197835e-06, 7.903000000197835e-06, 6.9580000001678854e-06, 6.707999999910896e-06, 8.041999999708338e-06, 7.375000000031662e-06]</msg>
<status status="PASS" starttime="20201029 12:46:29.127" endtime="20201029 12:46:29.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.123" endtime="20201029 12:46:29.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.738" endtime="20201029 12:46:29.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.738" endtime="20201029 12:46:29.131"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.139" endtime="20201029 12:46:29.154"></status>
</kw>
<msg timestamp="20201029 12:46:29.154" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.138" endtime="20201029 12:46:29.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.157" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.155" endtime="20201029 12:46:29.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.158" endtime="20201029 12:46:29.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.135" endtime="20201029 12:46:29.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.133" endtime="20201029 12:46:29.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.167" endtime="20201029 12:46:29.486"></status>
</kw>
<msg timestamp="20201029 12:46:29.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.990437208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.990443111, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:29.166" endtime="20201029 12:46:29.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.990437208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.990443111, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:29.491" endtime="20201029 12:46:29.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.501" endtime="20201029 12:46:29.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.163" endtime="20201029 12:46:29.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.161" endtime="20201029 12:46:29.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:29.508" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.065300000036018e-05}, {'diff': 7.652999999940846e-06}, {'diff': 9.652999999776313e-06}, {'diff': 8.320000000061611e-06}, {'diff': 7.070000000108934e-06}, {'diff': 9.2079999998...</msg>
<status status="PASS" starttime="20201029 12:46:29.504" endtime="20201029 12:46:29.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:29.513" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.065300000036018e-05, 7.652999999940846e-06, 9.652999999776313e-06, 8.320000000061611e-06, 7.070000000108934e-06, 9.207999999816252e-06, 9.388999999693226e-06, 6.334000000052242e-06, 4.8...</msg>
<status status="PASS" starttime="20201029 12:46:29.509" endtime="20201029 12:46:29.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.518" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:29.517" endtime="20201029 12:46:29.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.521" level="INFO">VALUE: [0, 1.065300000036018e-05, 7.652999999940846e-06, 9.652999999776313e-06, 8.320000000061611e-06, 7.070000000108934e-06, 9.207999999816252e-06, 9.388999999693226e-06, 6.334000000052242e-06, 4.820000000016478e-06, 1.020799999995603e-05, 9.638999999950215e-06, 5.722000000041305e-06, 4.333000000134035e-06, 0.37768340300000025, 1.0152999999846202e-05, 7.209000000063526e-06, 6.777999999929563e-06, 7.041000000373998e-06, 1.1917000000138955e-05, 7.58400000000492e-06, 1.0277999999974696e-05, 7.987000000042599e-06, 4.208000000005541e-06, 9.096999999957944e-06, 6.374999999891884e-06, 9.374999999867129e-06, 1.011099999992382e-05, 8.72200000001655e-06, 4.90200000013985e-06, 8.986999999738288e-06, 5.735999999867403e-06, 7.958000000307663e-06, 7.903000000197835e-06, 7.903000000197835e-06, 6.9580000001678854e-06, 6.707999999910896e-06, 8.041999999708338e-06, 7.375000000031662e-06, 0.38440841699999995, 6.153000000175268e-06, 1.0417000000373378e-05, 8.805000000222662e-06, 6.485999999750192e-06, 7.861000000275453e-06, 9.208999999898992e-06, 8.958000000003352e-06, 6.8469999998654885e-06, 7.026999999659722e-06, 6.0279999996026845e-06, 1.0055999999813992e-05, 7.249999999903167e-06, 7.472000000063872e-06, 9.792000000174994e-06, 8.02799999988224e-06, 7.887999999844908e-06, 7.458999999876426e-06, 6.1389999999050815e-06, 8.889000000067426e-06, 8.319999999617522e-06, 7.569000000096082e-06, 5.943999999757921e-06, 9.583000000201736e-06, 7.222999999889623e-06]</msg>
<status status="PASS" starttime="20201029 12:46:29.519" endtime="20201029 12:46:29.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.515" endtime="20201029 12:46:29.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.132" endtime="20201029 12:46:29.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.131" endtime="20201029 12:46:29.522"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.530" endtime="20201029 12:46:29.545"></status>
</kw>
<msg timestamp="20201029 12:46:29.546" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.529" endtime="20201029 12:46:29.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.548" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.547" endtime="20201029 12:46:29.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.549" endtime="20201029 12:46:29.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.526" endtime="20201029 12:46:29.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.524" endtime="20201029 12:46:29.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.559" endtime="20201029 12:46:29.874"></status>
</kw>
<msg timestamp="20201029 12:46:29.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.3685125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.368520153, 'source': 'DUT_IC', 'event': 'RISI...</msg>
<status status="PASS" starttime="20201029 12:46:29.557" endtime="20201029 12:46:29.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.3685125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.368520153, 'source': 'DUT_IC', 'event': 'RISI...</msg>
<status status="PASS" starttime="20201029 12:46:29.879" endtime="20201029 12:46:29.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.889" endtime="20201029 12:46:29.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.554" endtime="20201029 12:46:29.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.553" endtime="20201029 12:46:29.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:29.897" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.374999999867129e-06}, {'diff': 1.011099999992382e-05}, {'diff': 8.72200000001655e-06}, {'diff': 4.90200000013985e-06}, {'diff': 8.986999999738288e-06}, {'diff': 5.735999999867...</msg>
<status status="PASS" starttime="20201029 12:46:29.893" endtime="20201029 12:46:29.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:29.901" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.374999999867129e-06, 1.011099999992382e-05, 8.72200000001655e-06, 4.90200000013985e-06, 8.986999999738288e-06, 5.735999999867403e-06, 7.958000000307663e-06, 7.903000000197835e-06, 7.903...</msg>
<status status="PASS" starttime="20201029 12:46:29.898" endtime="20201029 12:46:29.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.906" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:29.905" endtime="20201029 12:46:29.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.910" level="INFO">VALUE: [0, 9.374999999867129e-06, 1.011099999992382e-05, 8.72200000001655e-06, 4.90200000013985e-06, 8.986999999738288e-06, 5.735999999867403e-06, 7.958000000307663e-06, 7.903000000197835e-06, 7.903000000197835e-06, 6.9580000001678854e-06, 6.707999999910896e-06, 8.041999999708338e-06, 7.375000000031662e-06, 0.38440841699999995, 6.153000000175268e-06, 1.0417000000373378e-05, 8.805000000222662e-06, 6.485999999750192e-06, 7.861000000275453e-06, 9.208999999898992e-06, 8.958000000003352e-06, 6.8469999998654885e-06, 7.026999999659722e-06, 6.0279999996026845e-06, 1.0055999999813992e-05, 7.249999999903167e-06, 7.472000000063872e-06, 9.792000000174994e-06, 8.02799999988224e-06, 7.887999999844908e-06, 7.458999999876426e-06, 6.1389999999050815e-06, 8.889000000067426e-06, 8.319999999617522e-06, 7.569000000096082e-06, 5.943999999757921e-06, 9.583000000201736e-06, 7.222999999889623e-06, 0.3805863060000001, 6.070000000413245e-06, 1.040300000010319e-05, 6.167000000445455e-06, 7.847000000005266e-06, 5.833999999538264e-06, 8.082999999992069e-06, 7.527999999368262e-06, 8.847000000145044e-06, 6.903000000058057e-06, 9.902999999589213e-06, 9.152999999706424e-06, 7.708999999245236e-06, 4.235999999657736e-06, 7.2080000004248745e-06, 1.0333999999723176e-05, 8.207999999676474e-06, 8.722999999655201e-06, 1.0417000000373378e-05, 8.139000000184637e-06, 6.457999999653907e-06, 9.291000000466454e-06, 7.833000000623258e-06, 1.011200000000656e-05, 7.791999999895438e-06]</msg>
<status status="PASS" starttime="20201029 12:46:29.907" endtime="20201029 12:46:29.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.903" endtime="20201029 12:46:29.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.523" endtime="20201029 12:46:29.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.523" endtime="20201029 12:46:29.913"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.926" endtime="20201029 12:46:29.942"></status>
</kw>
<msg timestamp="20201029 12:46:29.942" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.922" endtime="20201029 12:46:29.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.945" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.943" endtime="20201029 12:46:29.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.946" endtime="20201029 12:46:29.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.919" endtime="20201029 12:46:29.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.916" endtime="20201029 12:46:29.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.955" endtime="20201029 12:46:30.273"></status>
</kw>
<msg timestamp="20201029 12:46:30.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.753305653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.753315944, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:29.954" endtime="20201029 12:46:30.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.753305653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.753315944, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:30.278" endtime="20201029 12:46:30.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.288" endtime="20201029 12:46:30.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.951" endtime="20201029 12:46:30.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.949" endtime="20201029 12:46:30.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:30.295" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.249999999903167e-06}, {'diff': 7.472000000063872e-06}, {'diff': 9.792000000174994e-06}, {'diff': 8.02799999988224e-06}, {'diff': 7.887999999844908e-06}, {'diff': 7.45899999987...</msg>
<status status="PASS" starttime="20201029 12:46:30.291" endtime="20201029 12:46:30.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:30.300" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.249999999903167e-06, 7.472000000063872e-06, 9.792000000174994e-06, 8.02799999988224e-06, 7.887999999844908e-06, 7.458999999876426e-06, 6.1389999999050815e-06, 8.889000000067426e-06, 8.3...</msg>
<status status="PASS" starttime="20201029 12:46:30.296" endtime="20201029 12:46:30.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.305" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:30.304" endtime="20201029 12:46:30.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.308" level="INFO">VALUE: [0, 7.249999999903167e-06, 7.472000000063872e-06, 9.792000000174994e-06, 8.02799999988224e-06, 7.887999999844908e-06, 7.458999999876426e-06, 6.1389999999050815e-06, 8.889000000067426e-06, 8.319999999617522e-06, 7.569000000096082e-06, 5.943999999757921e-06, 9.583000000201736e-06, 7.222999999889623e-06, 0.3805863060000001, 6.070000000413245e-06, 1.040300000010319e-05, 6.167000000445455e-06, 7.847000000005266e-06, 5.833999999538264e-06, 8.082999999992069e-06, 7.527999999368262e-06, 8.847000000145044e-06, 6.903000000058057e-06, 9.902999999589213e-06, 9.152999999706424e-06, 7.708999999245236e-06, 4.235999999657736e-06, 7.2080000004248745e-06, 1.0333999999723176e-05, 8.207999999676474e-06, 8.722999999655201e-06, 1.0417000000373378e-05, 8.139000000184637e-06, 6.457999999653907e-06, 9.291000000466454e-06, 7.833000000623258e-06, 1.011200000000656e-05, 7.791999999895438e-06, 0.3850985419999997, 1.0985999999491014e-05, 7.513999999986254e-06, 1.065300000036018e-05, 8.37500000017144e-06, 9.957999999699041e-06, 8.403000000711813e-06, 8.458000000821642e-06, 4.611000000487309e-06, 1.030600000007098e-05, 8.042000000152427e-06, 4.986000000428703e-06, 8.77799999976503e-06, 1.0679999999929635e-05, 8.847000000145044e-06, 9.389000000581404e-06, 5.833000000343702e-06, 9.721999999712239e-06, 5.540999999276153e-06, 7.528000000256441e-06, 6.180999999827463e-06, 8.87499999979724e-06, 9.055000000479652e-06, 8.832999999874858e-06, 1.0430999999755386e-05]</msg>
<status status="PASS" starttime="20201029 12:46:30.306" endtime="20201029 12:46:30.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.302" endtime="20201029 12:46:30.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.914" endtime="20201029 12:46:30.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.913" endtime="20201029 12:46:30.309"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.317" endtime="20201029 12:46:30.332"></status>
</kw>
<msg timestamp="20201029 12:46:30.332" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.316" endtime="20201029 12:46:30.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.335" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.333" endtime="20201029 12:46:30.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.336" endtime="20201029 12:46:30.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.313" endtime="20201029 12:46:30.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.311" endtime="20201029 12:46:30.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.345" endtime="20201029 12:46:30.657"></status>
</kw>
<msg timestamp="20201029 12:46:30.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.134278417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.134284444, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:30.344" endtime="20201029 12:46:30.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.134278417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.134284444, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:30.662" endtime="20201029 12:46:30.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.672" endtime="20201029 12:46:30.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.341" endtime="20201029 12:46:30.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.339" endtime="20201029 12:46:30.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:30.679" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.708999999245236e-06}, {'diff': 4.235999999657736e-06}, {'diff': 7.2080000004248745e-06}, {'diff': 1.0333999999723176e-05}, {'diff': 8.207999999676474e-06}, {'diff': 8.72299999...</msg>
<status status="PASS" starttime="20201029 12:46:30.675" endtime="20201029 12:46:30.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:30.684" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.708999999245236e-06, 4.235999999657736e-06, 7.2080000004248745e-06, 1.0333999999723176e-05, 8.207999999676474e-06, 8.722999999655201e-06, 1.0417000000373378e-05, 8.139000000184637e-06, ...</msg>
<status status="PASS" starttime="20201029 12:46:30.680" endtime="20201029 12:46:30.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.689" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:30.688" endtime="20201029 12:46:30.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.692" level="INFO">VALUE: [0, 7.708999999245236e-06, 4.235999999657736e-06, 7.2080000004248745e-06, 1.0333999999723176e-05, 8.207999999676474e-06, 8.722999999655201e-06, 1.0417000000373378e-05, 8.139000000184637e-06, 6.457999999653907e-06, 9.291000000466454e-06, 7.833000000623258e-06, 1.011200000000656e-05, 7.791999999895438e-06, 0.3850985419999997, 1.0985999999491014e-05, 7.513999999986254e-06, 1.065300000036018e-05, 8.37500000017144e-06, 9.957999999699041e-06, 8.403000000711813e-06, 8.458000000821642e-06, 4.611000000487309e-06, 1.030600000007098e-05, 8.042000000152427e-06, 4.986000000428703e-06, 8.77799999976503e-06, 1.0679999999929635e-05, 8.847000000145044e-06, 9.389000000581404e-06, 5.833000000343702e-06, 9.721999999712239e-06, 5.540999999276153e-06, 7.528000000256441e-06, 6.180999999827463e-06, 8.87499999979724e-06, 9.055000000479652e-06, 8.832999999874858e-06, 1.0430999999755386e-05, 0.3812355690000002, 6.901999999975317e-06, 5.333000000717902e-06, 8.611000000158242e-06, 9.139000000324415e-06, 4.875000000126306e-06, 8.695000000003006e-06, 1.0527000000593034e-05, 9.80500000036244e-06, 7.791000000700876e-06, 9.777999999904807e-06, 5.679999999230745e-06, 7.861000000275453e-06, 6.471999999924094e-06, 8.527000000313478e-06, 5.888999999648092e-06, 7.347000000379467e-06, 8.292000000409416e-06, 8.457999999933463e-06, 8.33299999936088e-06, 9.95800000058722e-06, 9.778000000792986e-06, 8.27800000013923e-06, 9.01400000064001e-06, 1.0097000000541811e-05]</msg>
<status status="PASS" starttime="20201029 12:46:30.690" endtime="20201029 12:46:30.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.686" endtime="20201029 12:46:30.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.310" endtime="20201029 12:46:30.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.310" endtime="20201029 12:46:30.693"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.701" endtime="20201029 12:46:30.716"></status>
</kw>
<msg timestamp="20201029 12:46:30.717" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.700" endtime="20201029 12:46:30.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.719" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.718" endtime="20201029 12:46:30.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.720" endtime="20201029 12:46:30.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.697" endtime="20201029 12:46:30.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.695" endtime="20201029 12:46:30.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.730" endtime="20201029 12:46:31.046"></status>
</kw>
<msg timestamp="20201029 12:46:31.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.519781764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.5197895, 'source': 'DUT_IC', 'event': 'RISI...</msg>
<status status="PASS" starttime="20201029 12:46:30.728" endtime="20201029 12:46:31.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.519781764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.5197895, 'source': 'DUT_IC', 'event': 'RISI...</msg>
<status status="PASS" starttime="20201029 12:46:31.051" endtime="20201029 12:46:31.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.061" endtime="20201029 12:46:31.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.725" endtime="20201029 12:46:31.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.724" endtime="20201029 12:46:31.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:31.068" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.77799999976503e-06}, {'diff': 1.0679999999929635e-05}, {'diff': 8.847000000145044e-06}, {'diff': 9.389000000581404e-06}, {'diff': 5.833000000343702e-06}, {'diff': 9.7219999997...</msg>
<status status="PASS" starttime="20201029 12:46:31.064" endtime="20201029 12:46:31.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:31.073" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.77799999976503e-06, 1.0679999999929635e-05, 8.847000000145044e-06, 9.389000000581404e-06, 5.833000000343702e-06, 9.721999999712239e-06, 5.540999999276153e-06, 7.528000000256441e-06, 6.1...</msg>
<status status="PASS" starttime="20201029 12:46:31.069" endtime="20201029 12:46:31.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.078" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:31.077" endtime="20201029 12:46:31.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.080" level="INFO">VALUE: [0, 8.77799999976503e-06, 1.0679999999929635e-05, 8.847000000145044e-06, 9.389000000581404e-06, 5.833000000343702e-06, 9.721999999712239e-06, 5.540999999276153e-06, 7.528000000256441e-06, 6.180999999827463e-06, 8.87499999979724e-06, 9.055000000479652e-06, 8.832999999874858e-06, 1.0430999999755386e-05, 0.3812355690000002, 6.901999999975317e-06, 5.333000000717902e-06, 8.611000000158242e-06, 9.139000000324415e-06, 4.875000000126306e-06, 8.695000000003006e-06, 1.0527000000593034e-05, 9.80500000036244e-06, 7.791000000700876e-06, 9.777999999904807e-06, 5.679999999230745e-06, 7.861000000275453e-06, 6.471999999924094e-06, 8.527000000313478e-06, 5.888999999648092e-06, 7.347000000379467e-06, 8.292000000409416e-06, 8.457999999933463e-06, 8.33299999936088e-06, 9.95800000058722e-06, 9.778000000792986e-06, 8.27800000013923e-06, 9.01400000064001e-06, 1.0097000000541811e-05, 0.3734445280000003, 6.958999999362447e-06, 8.096999999374077e-06, 6.819000000213293e-06, 8.778000000653208e-06, 9.473000000426168e-06, 7.737000000673788e-06, 6.222000000555283e-06, 9.387999999610486e-06, 1.08470000004246e-05, 7.83399999981782e-06, 8.708999999385014e-06, 7.458999999876426e-06, 7.013999999472276e-06, 1.0458000000213019e-05, 9.792000000174994e-06, 1.0278000000418785e-05, 5.639000000279282e-06, 6.124999999634895e-06, 6.111000000252886e-06, 9.638999999950215e-06, 9.834000000097376e-06, 6.2500000002074785e-06, 9.388999999693226e-06, 6.9160000002455035e-06]</msg>
<status status="PASS" starttime="20201029 12:46:31.079" endtime="20201029 12:46:31.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.074" endtime="20201029 12:46:31.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.694" endtime="20201029 12:46:31.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.694" endtime="20201029 12:46:31.082"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.091" endtime="20201029 12:46:31.105"></status>
</kw>
<msg timestamp="20201029 12:46:31.105" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.089" endtime="20201029 12:46:31.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.108" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.106" endtime="20201029 12:46:31.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.109" endtime="20201029 12:46:31.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.086" endtime="20201029 12:46:31.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.084" endtime="20201029 12:46:31.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.118" endtime="20201029 12:46:31.429"></status>
</kw>
<msg timestamp="20201029 12:46:31.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.901421972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.90142775, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201029 12:46:31.117" endtime="20201029 12:46:31.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.901421972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.90142775, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201029 12:46:31.433" endtime="20201029 12:46:31.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.443" endtime="20201029 12:46:31.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.114" endtime="20201029 12:46:31.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.112" endtime="20201029 12:46:31.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:31.450" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.861000000275453e-06}, {'diff': 6.471999999924094e-06}, {'diff': 8.527000000313478e-06}, {'diff': 5.888999999648092e-06}, {'diff': 7.347000000379467e-06}, {'diff': 8.2920000004...</msg>
<status status="PASS" starttime="20201029 12:46:31.447" endtime="20201029 12:46:31.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:31.456" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.861000000275453e-06, 6.471999999924094e-06, 8.527000000313478e-06, 5.888999999648092e-06, 7.347000000379467e-06, 8.292000000409416e-06, 8.457999999933463e-06, 8.33299999936088e-06, 9.95...</msg>
<status status="PASS" starttime="20201029 12:46:31.451" endtime="20201029 12:46:31.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.461" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:31.460" endtime="20201029 12:46:31.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.463" level="INFO">VALUE: [0, 7.861000000275453e-06, 6.471999999924094e-06, 8.527000000313478e-06, 5.888999999648092e-06, 7.347000000379467e-06, 8.292000000409416e-06, 8.457999999933463e-06, 8.33299999936088e-06, 9.95800000058722e-06, 9.778000000792986e-06, 8.27800000013923e-06, 9.01400000064001e-06, 1.0097000000541811e-05, 0.3734445280000003, 6.958999999362447e-06, 8.096999999374077e-06, 6.819000000213293e-06, 8.778000000653208e-06, 9.473000000426168e-06, 7.737000000673788e-06, 6.222000000555283e-06, 9.387999999610486e-06, 1.08470000004246e-05, 7.83399999981782e-06, 8.708999999385014e-06, 7.458999999876426e-06, 7.013999999472276e-06, 1.0458000000213019e-05, 9.792000000174994e-06, 1.0278000000418785e-05, 5.639000000279282e-06, 6.124999999634895e-06, 6.111000000252886e-06, 9.638999999950215e-06, 9.834000000097376e-06, 6.2500000002074785e-06, 9.388999999693226e-06, 6.9160000002455035e-06, 0.3789397079999999, 9.528000000535997e-06, 9.458000000073241e-06, 9.889000000207204e-06, 8.082999999992069e-06, 6.445000000354639e-06, 6.277000000665112e-06, 8.77799999976503e-06, 8.651999999997884e-06, 1.0347999999993363e-05, 1.011200000000656e-05, 6.028000000490863e-06, 8.777000000570467e-06, 9.5699999995702e-06, 8.097000000262256e-06, 8.333000000249058e-06, 8.013999999612054e-06, 8.846999999256866e-06, 7.721999999432683e-06, 7.569000000096082e-06, 7.042000000012649e-06, 6.652999999801068e-06, 6.583000000226491e-06, 7.819000000353071e-06, 6.277999999859674e-06]</msg>
<status status="PASS" starttime="20201029 12:46:31.462" endtime="20201029 12:46:31.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.457" endtime="20201029 12:46:31.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.083" endtime="20201029 12:46:31.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.082" endtime="20201029 12:46:31.465"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.473" endtime="20201029 12:46:31.488"></status>
</kw>
<msg timestamp="20201029 12:46:31.488" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.471" endtime="20201029 12:46:31.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.491" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.489" endtime="20201029 12:46:31.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.492" endtime="20201029 12:46:31.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.469" endtime="20201029 12:46:31.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.467" endtime="20201029 12:46:31.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.501" endtime="20201029 12:46:31.815"></status>
</kw>
<msg timestamp="20201029 12:46:31.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.275260292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.275267194, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:31.499" endtime="20201029 12:46:31.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.275260292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.275267194, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:31.820" endtime="20201029 12:46:31.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.830" endtime="20201029 12:46:31.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.497" endtime="20201029 12:46:31.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.495" endtime="20201029 12:46:31.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:31.839" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.458999999876426e-06}, {'diff': 7.013999999472276e-06}, {'diff': 1.0458000000213019e-05}, {'diff': 9.792000000174994e-06}, {'diff': 1.0278000000418785e-05}, {'diff': 5.63900000...</msg>
<status status="PASS" starttime="20201029 12:46:31.834" endtime="20201029 12:46:31.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:31.843" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.458999999876426e-06, 7.013999999472276e-06, 1.0458000000213019e-05, 9.792000000174994e-06, 1.0278000000418785e-05, 5.639000000279282e-06, 6.124999999634895e-06, 6.111000000252886e-06, 9...</msg>
<status status="PASS" starttime="20201029 12:46:31.840" endtime="20201029 12:46:31.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.848" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:31.847" endtime="20201029 12:46:31.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.851" level="INFO">VALUE: [0, 7.458999999876426e-06, 7.013999999472276e-06, 1.0458000000213019e-05, 9.792000000174994e-06, 1.0278000000418785e-05, 5.639000000279282e-06, 6.124999999634895e-06, 6.111000000252886e-06, 9.638999999950215e-06, 9.834000000097376e-06, 6.2500000002074785e-06, 9.388999999693226e-06, 6.9160000002455035e-06, 0.3789397079999999, 9.528000000535997e-06, 9.458000000073241e-06, 9.889000000207204e-06, 8.082999999992069e-06, 6.445000000354639e-06, 6.277000000665112e-06, 8.77799999976503e-06, 8.651999999997884e-06, 1.0347999999993363e-05, 1.011200000000656e-05, 6.028000000490863e-06, 8.777000000570467e-06, 9.5699999995702e-06, 8.097000000262256e-06, 8.333000000249058e-06, 8.013999999612054e-06, 8.846999999256866e-06, 7.721999999432683e-06, 7.569000000096082e-06, 7.042000000012649e-06, 6.652999999801068e-06, 6.583000000226491e-06, 7.819000000353071e-06, 6.277999999859674e-06, 0.3709759589999999, 6.499999999576289e-06, 9.889000000207204e-06, 1.0027000000079056e-05, 6.583000000226491e-06, 6.861000000135675e-06, 9.76399999963462e-06, 9.055999999674214e-06, 7.722000000320861e-06, 9.028000000022018e-06, 9.110999999784042e-06, 6.652999999801068e-06, 8.223000000029401e-06, 5.082999999572735e-06, 7.749999999973056e-06, 5.402000000209739e-06, 7.403000000572035e-06, 6.597000000496678e-06, 6.708999999993637e-06, 7.513999999986254e-06, 1.0528000000675775e-05, 8.333000000249058e-06, 8.151999999483905e-06, 6.473000000006834e-06, 6.778000000373652e-06]</msg>
<status status="PASS" starttime="20201029 12:46:31.849" endtime="20201029 12:46:31.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.845" endtime="20201029 12:46:31.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.466" endtime="20201029 12:46:31.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.465" endtime="20201029 12:46:31.852"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.860" endtime="20201029 12:46:31.874"></status>
</kw>
<msg timestamp="20201029 12:46:31.875" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.859" endtime="20201029 12:46:31.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.877" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.876" endtime="20201029 12:46:31.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.878" endtime="20201029 12:46:31.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.856" endtime="20201029 12:46:31.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.854" endtime="20201029 12:46:31.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.889" endtime="20201029 12:46:32.205"></status>
</kw>
<msg timestamp="20201029 12:46:32.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.654588139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.654597042, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:31.887" endtime="20201029 12:46:32.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.654588139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.654597042, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:32.210" endtime="20201029 12:46:32.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.220" endtime="20201029 12:46:32.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.883" endtime="20201029 12:46:32.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.882" endtime="20201029 12:46:32.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:32.227" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.777000000570467e-06}, {'diff': 9.5699999995702e-06}, {'diff': 8.097000000262256e-06}, {'diff': 8.333000000249058e-06}, {'diff': 8.013999999612054e-06}, {'diff': 8.846999999256...</msg>
<status status="PASS" starttime="20201029 12:46:32.223" endtime="20201029 12:46:32.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:32.232" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.777000000570467e-06, 9.5699999995702e-06, 8.097000000262256e-06, 8.333000000249058e-06, 8.013999999612054e-06, 8.846999999256866e-06, 7.721999999432683e-06, 7.569000000096082e-06, 7.042...</msg>
<status status="PASS" starttime="20201029 12:46:32.228" endtime="20201029 12:46:32.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.237" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:32.235" endtime="20201029 12:46:32.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.240" level="INFO">VALUE: [0, 8.777000000570467e-06, 9.5699999995702e-06, 8.097000000262256e-06, 8.333000000249058e-06, 8.013999999612054e-06, 8.846999999256866e-06, 7.721999999432683e-06, 7.569000000096082e-06, 7.042000000012649e-06, 6.652999999801068e-06, 6.583000000226491e-06, 7.819000000353071e-06, 6.277999999859674e-06, 0.3709759589999999, 6.499999999576289e-06, 9.889000000207204e-06, 1.0027000000079056e-05, 6.583000000226491e-06, 6.861000000135675e-06, 9.76399999963462e-06, 9.055999999674214e-06, 7.722000000320861e-06, 9.028000000022018e-06, 9.110999999784042e-06, 6.652999999801068e-06, 8.223000000029401e-06, 5.082999999572735e-06, 7.749999999973056e-06, 5.402000000209739e-06, 7.403000000572035e-06, 6.597000000496678e-06, 6.708999999993637e-06, 7.513999999986254e-06, 1.0528000000675775e-05, 8.333000000249058e-06, 8.151999999483905e-06, 6.473000000006834e-06, 6.778000000373652e-06, 0.37701508299999986, 9.458000000073241e-06, 9.61100000029802e-06, 7.985999999959859e-06, 6.847999999948229e-06, 6.026999999519944e-06, 8.27700000005649e-06, 9.291999999661016e-06, 1.1527999999927374e-05, 4.598000000299862e-06, 7.651999999858106e-06, 5.833000000343702e-06, 1.1027000000218834e-05, 8.153000000454824e-06, 9.47199999945525e-06, 5.15300000003549e-06, 5.332999999829724e-06, 8.055000000339874e-06, 8.263999999869043e-06, 1.0430999999755386e-05, 6.083999999795253e-06, 8.097000000262256e-06, 9.931000000129586e-06, 8.957999999559263e-06, 9.22199999919826e-06]</msg>
<status status="PASS" starttime="20201029 12:46:32.238" endtime="20201029 12:46:32.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.233" endtime="20201029 12:46:32.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.853" endtime="20201029 12:46:32.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.853" endtime="20201029 12:46:32.241"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.249" endtime="20201029 12:46:32.263"></status>
</kw>
<msg timestamp="20201029 12:46:32.264" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.248" endtime="20201029 12:46:32.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.266" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.265" endtime="20201029 12:46:32.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.267" endtime="20201029 12:46:32.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.245" endtime="20201029 12:46:32.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.243" endtime="20201029 12:46:32.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.277" endtime="20201029 12:46:32.591"></status>
</kw>
<msg timestamp="20201029 12:46:32.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.025961806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.025970944, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:32.275" endtime="20201029 12:46:32.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.025961806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.025970944, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:32.596" endtime="20201029 12:46:32.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.606" endtime="20201029 12:46:32.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.272" endtime="20201029 12:46:32.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.271" endtime="20201029 12:46:32.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:32.613" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.223000000029401e-06}, {'diff': 5.082999999572735e-06}, {'diff': 7.749999999973056e-06}, {'diff': 5.402000000209739e-06}, {'diff': 7.403000000572035e-06}, {'diff': 6.5970000004...</msg>
<status status="PASS" starttime="20201029 12:46:32.610" endtime="20201029 12:46:32.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:32.619" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.223000000029401e-06, 5.082999999572735e-06, 7.749999999973056e-06, 5.402000000209739e-06, 7.403000000572035e-06, 6.597000000496678e-06, 6.708999999993637e-06, 7.513999999986254e-06, 1.0...</msg>
<status status="PASS" starttime="20201029 12:46:32.614" endtime="20201029 12:46:32.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.624" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:32.623" endtime="20201029 12:46:32.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.626" level="INFO">VALUE: [0, 8.223000000029401e-06, 5.082999999572735e-06, 7.749999999973056e-06, 5.402000000209739e-06, 7.403000000572035e-06, 6.597000000496678e-06, 6.708999999993637e-06, 7.513999999986254e-06, 1.0528000000675775e-05, 8.333000000249058e-06, 8.151999999483905e-06, 6.473000000006834e-06, 6.778000000373652e-06, 0.37701508299999986, 9.458000000073241e-06, 9.61100000029802e-06, 7.985999999959859e-06, 6.847999999948229e-06, 6.026999999519944e-06, 8.27700000005649e-06, 9.291999999661016e-06, 1.1527999999927374e-05, 4.598000000299862e-06, 7.651999999858106e-06, 5.833000000343702e-06, 1.1027000000218834e-05, 8.153000000454824e-06, 9.47199999945525e-06, 5.15300000003549e-06, 5.332999999829724e-06, 8.055000000339874e-06, 8.263999999869043e-06, 1.0430999999755386e-05, 6.083999999795253e-06, 8.097000000262256e-06, 9.931000000129586e-06, 8.957999999559263e-06, 9.22199999919826e-06, 0.3777153059999998, 7.458999999876426e-06, 7.958000000307663e-06, 8.612000000240982e-06, 8.776999999682289e-06, 7.790999999812698e-06, 8.832999999874858e-06, 6.8469999998654885e-06, 8.139000000184637e-06, 8.084000000074809e-06, 9.624999999680028e-06, 7.374999999143483e-06, 7.709000000133415e-06, 8.082999999992069e-06, 1.0291999999800794e-05, 8.653000000080624e-06, 8.082999999992069e-06, 1.1208000000095808e-05, 5.583000000086713e-06, 9.749999999364434e-06, 7.791999999895438e-06, 8.082999999992069e-06, 9.000000000369823e-06, 7.541999999638449e-06, 6.459000000624826e-06]</msg>
<status status="PASS" starttime="20201029 12:46:32.625" endtime="20201029 12:46:32.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.620" endtime="20201029 12:46:32.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.242" endtime="20201029 12:46:32.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.242" endtime="20201029 12:46:32.628"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.636" endtime="20201029 12:46:32.650"></status>
</kw>
<msg timestamp="20201029 12:46:32.650" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.634" endtime="20201029 12:46:32.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.653" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.651" endtime="20201029 12:46:32.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.654" endtime="20201029 12:46:32.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.632" endtime="20201029 12:46:32.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.630" endtime="20201029 12:46:32.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.663" endtime="20201029 12:46:32.976"></status>
</kw>
<msg timestamp="20201029 12:46:32.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.403372819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.403377667, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:32.661" endtime="20201029 12:46:32.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.403372819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.403377667, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:46:32.981" endtime="20201029 12:46:32.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.991" endtime="20201029 12:46:32.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.659" endtime="20201029 12:46:32.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.657" endtime="20201029 12:46:32.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:32.998" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.1027000000218834e-05}, {'diff': 8.153000000454824e-06}, {'diff': 9.47199999945525e-06}, {'diff': 5.15300000003549e-06}, {'diff': 5.332999999829724e-06}, {'diff': 8.05500000033...</msg>
<status status="PASS" starttime="20201029 12:46:32.994" endtime="20201029 12:46:32.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:33.003" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.1027000000218834e-05, 8.153000000454824e-06, 9.47199999945525e-06, 5.15300000003549e-06, 5.332999999829724e-06, 8.055000000339874e-06, 8.263999999869043e-06, 1.0430999999755386e-05, 6.0...</msg>
<status status="PASS" starttime="20201029 12:46:32.999" endtime="20201029 12:46:33.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.014" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:46:33.013" endtime="20201029 12:46:33.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.017" level="INFO">VALUE: [0, 1.1027000000218834e-05, 8.153000000454824e-06, 9.47199999945525e-06, 5.15300000003549e-06, 5.332999999829724e-06, 8.055000000339874e-06, 8.263999999869043e-06, 1.0430999999755386e-05, 6.083999999795253e-06, 8.097000000262256e-06, 9.931000000129586e-06, 8.957999999559263e-06, 9.22199999919826e-06, 0.3777153059999998, 7.458999999876426e-06, 7.958000000307663e-06, 8.612000000240982e-06, 8.776999999682289e-06, 7.790999999812698e-06, 8.832999999874858e-06, 6.8469999998654885e-06, 8.139000000184637e-06, 8.084000000074809e-06, 9.624999999680028e-06, 7.374999999143483e-06, 7.709000000133415e-06, 8.082999999992069e-06, 1.0291999999800794e-05, 8.653000000080624e-06, 8.082999999992069e-06, 1.1208000000095808e-05, 5.583000000086713e-06, 9.749999999364434e-06, 7.791999999895438e-06, 8.082999999992069e-06, 9.000000000369823e-06, 7.541999999638449e-06, 6.459000000624826e-06, 0.377234348, 8.459000000016204e-06, 1.001399999989161e-05, 7.709000000133415e-06, 7.402999999683857e-06, 9.096999999513855e-06, 1.0389000000721182e-05, 1.115299999998598e-05, 5.541000000164331e-06, 8.33299999936088e-06, 1.0139000000464193e-05, 8.304999999708684e-06, 4.4309999998048966e-06, 7.458999999876426e-06, 9.555000000105451e-06, 6.527000000033922e-06, 8.457999999933463e-06, 8.707999999302274e-06, 8.514000000126032e-06, 8.528000000396219e-06, 5.610999999738908e-06, 8.763999999494843e-06, 5.860999999995897e-06, 5.596999999468721e-06, 7.902999999309657e-06]</msg>
<status status="PASS" starttime="20201029 12:46:33.015" endtime="20201029 12:46:33.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.011" endtime="20201029 12:46:33.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.629" endtime="20201029 12:46:33.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.628" endtime="20201029 12:46:33.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.344" endtime="20201029 12:46:33.019"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:25.270" endtime="20201029 12:46:33.019" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:33.026" endtime="20201029 12:46:33.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.025" endtime="20201029 12:46:33.046"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.060" endtime="20201029 12:46:33.079"></status>
</kw>
<msg timestamp="20201029 12:46:33.079" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.059" endtime="20201029 12:46:33.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.082" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.081" endtime="20201029 12:46:33.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.085" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:33.083" endtime="20201029 12:46:33.086"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:33.056" endtime="20201029 12:46:33.086"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:33.054" endtime="20201029 12:46:33.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.052" endtime="20201029 12:46:33.087"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:33.091" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:33.090" endtime="20201029 12:46:33.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.088" endtime="20201029 12:46:33.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.052" endtime="20201029 12:46:33.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.051" endtime="20201029 12:46:33.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.093" endtime="20201029 12:46:33.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.049" endtime="20201029 12:46:33.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.047" endtime="20201029 12:46:33.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.023" endtime="20201029 12:46:33.095"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.105" endtime="20201029 12:46:33.121"></status>
</kw>
<msg timestamp="20201029 12:46:33.121" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.103" endtime="20201029 12:46:33.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.124" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.122" endtime="20201029 12:46:33.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.125" endtime="20201029 12:46:33.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.100" endtime="20201029 12:46:33.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.099" endtime="20201029 12:46:33.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.135" endtime="20201029 12:46:33.425"></status>
</kw>
<msg timestamp="20201029 12:46:33.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067982958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068005944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.133" endtime="20201029 12:46:33.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067982958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068005944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.429" endtime="20201029 12:46:33.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.438" endtime="20201029 12:46:33.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.130" endtime="20201029 12:46:33.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.128" endtime="20201029 12:46:33.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:33.445" level="INFO">${RESULT} = [{'diff': 2.2986000000002615e-05}, {'diff': 1.1389999999972256e-06}, {'diff': 1.1810000000028742e-06}, {'diff': 1.1810000000028742e-06}, {'diff': 1.1809999999889964e-06}, {'diff': 1.1520000000042607e-...</msg>
<status status="PASS" starttime="20201029 12:46:33.441" endtime="20201029 12:46:33.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:33.449" level="INFO">${OVERHEAD} = {'diff': [2.2986000000002615e-05, 1.1389999999972256e-06, 1.1810000000028742e-06, 1.1810000000028742e-06, 1.1809999999889964e-06, 1.1520000000042607e-06, 1.0839999999984196e-06, 1.1669999999963654e-06...</msg>
<status status="PASS" starttime="20201029 12:46:33.446" endtime="20201029 12:46:33.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.453" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:33.452" endtime="20201029 12:46:33.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.456" level="INFO">VALUE: [2.2986000000002615e-05, 1.1389999999972256e-06, 1.1810000000028742e-06, 1.1810000000028742e-06, 1.1809999999889964e-06, 1.1520000000042607e-06, 1.0839999999984196e-06, 1.1669999999963654e-06, 1.1659999999968917e-06, 1.1809999999889964e-06, 1.1669999999963654e-06, 1.1810000000028742e-06, 1.1669999999963654e-06, 1.1529999999898566e-06, 1.1530000000037344e-06, 1.1660000000107695e-06, 1.1529999999898566e-06, 1.1530000000037344e-06, 1.1390000000111034e-06, 1.1810000000028742e-06, 1.1529999999898566e-06, 1.1810000000028742e-06, 1.1389999999972256e-06, 1.1669999999963654e-06, 1.1530000000037344e-06, 1.1659999999968917e-06, 1.1530000000037344e-06, 1.1670000000102432e-06, 1.137999999997752e-06, 1.1669999999963654e-06, 1.1669999999963654e-06, 1.1669999999963654e-06, 1.1669999999963654e-06, 1.1380000000116297e-06, 1.1669999999963654e-06, 1.151999999990383e-06, 1.2080000000025404e-06, 1.1669999999963654e-06, 1.1659999999968917e-06, 1.1670000000102432e-06, 1.1669999999963654e-06, 1.1659999999968917e-06, 1.1669999999963654e-06, 1.1799999999895228e-06, 1.1670000000102432e-06, 1.1530000000037344e-06, 1.1529999999898566e-06, 1.0839999999984196e-06, 1.1389999999972256e-06, 1.1530000000037344e-06]</msg>
<status status="PASS" starttime="20201029 12:46:33.454" endtime="20201029 12:46:33.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.450" endtime="20201029 12:46:33.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.097" endtime="20201029 12:46:33.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.097" endtime="20201029 12:46:33.457"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.467" endtime="20201029 12:46:33.482"></status>
</kw>
<msg timestamp="20201029 12:46:33.482" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.464" endtime="20201029 12:46:33.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.485" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.483" endtime="20201029 12:46:33.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.486" endtime="20201029 12:46:33.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.462" endtime="20201029 12:46:33.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.460" endtime="20201029 12:46:33.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.495" endtime="20201029 12:46:33.805"></status>
</kw>
<msg timestamp="20201029 12:46:33.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068189653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068190861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.494" endtime="20201029 12:46:33.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068189653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068190861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.810" endtime="20201029 12:46:33.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.820" endtime="20201029 12:46:33.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.491" endtime="20201029 12:46:33.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.489" endtime="20201029 12:46:33.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:33.828" level="INFO">${RESULT} = [{'diff': 1.2080000000025404e-06}, {'diff': 1.1669999999963654e-06}, {'diff': 1.1659999999968917e-06}, {'diff': 1.1670000000102432e-06}, {'diff': 1.1669999999963654e-06}, {'diff': 1.1659999999968917e-...</msg>
<status status="PASS" starttime="20201029 12:46:33.824" endtime="20201029 12:46:33.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:33.833" level="INFO">${OVERHEAD} = {'diff': [1.2080000000025404e-06, 1.1669999999963654e-06, 1.1659999999968917e-06, 1.1670000000102432e-06, 1.1669999999963654e-06, 1.1659999999968917e-06, 1.1669999999963654e-06, 1.1799999999895228e-06...</msg>
<status status="PASS" starttime="20201029 12:46:33.829" endtime="20201029 12:46:33.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.837" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:33.836" endtime="20201029 12:46:33.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.840" level="INFO">VALUE: [1.2080000000025404e-06, 1.1669999999963654e-06, 1.1659999999968917e-06, 1.1670000000102432e-06, 1.1669999999963654e-06, 1.1659999999968917e-06, 1.1669999999963654e-06, 1.1799999999895228e-06, 1.1670000000102432e-06, 1.1530000000037344e-06, 1.1529999999898566e-06, 1.0839999999984196e-06, 1.1389999999972256e-06, 1.1530000000037344e-06, 1.15300000003149e-06, 1.1520000000042607e-06, 1.167000000024121e-06, 1.181000000016752e-06, 1.1799999999895228e-06, 1.181000000016752e-06, 1.1799999999895228e-06, 1.1389999999833478e-06, 1.15300000003149e-06, 1.1799999999895228e-06, 1.1669999999686098e-06, 1.1389999999833478e-06, 1.1669999999686098e-06, 1.15300000003149e-06, 1.1659999999968917e-06, 1.1669999999686098e-06, 1.1659999999968917e-06, 1.1669999999686098e-06, 1.1109999999980857e-06, 1.181000000016752e-06, 1.167000000024121e-06, 1.1799999999895228e-06, 1.167000000024121e-06, 1.1659999999968917e-06, 1.15300000003149e-06, 1.1799999999895228e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.167000000024121e-06, 1.166000000052403e-06, 1.1799999999895228e-06, 1.1809999999612408e-06, 1.1389999999833478e-06, 1.1529999999759788e-06, 1.1659999999968917e-06, 1.15300000003149e-06, 1.1249999999907168e-06, 1.15300000003149e-06, 1.167000000024121e-06, 1.1520000000042607e-06, 1.167000000024121e-06, 1.1659999999968917e-06, 1.1659999999968917e-06, 1.1669999999686098e-06, 1.167000000024121e-06, 1.1809999999612408e-06, 1.1659999999968917e-06, 1.181000000016752e-06, 1.0970000000054547e-06, 1.2219999999674158e-06]</msg>
<status status="PASS" starttime="20201029 12:46:33.839" endtime="20201029 12:46:33.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.834" endtime="20201029 12:46:33.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.459" endtime="20201029 12:46:33.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.458" endtime="20201029 12:46:33.842"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.850" endtime="20201029 12:46:33.866"></status>
</kw>
<msg timestamp="20201029 12:46:33.867" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.849" endtime="20201029 12:46:33.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.869" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.868" endtime="20201029 12:46:33.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.870" endtime="20201029 12:46:33.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.846" endtime="20201029 12:46:33.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.844" endtime="20201029 12:46:33.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.880" endtime="20201029 12:46:34.194"></status>
</kw>
<msg timestamp="20201029 12:46:34.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.418432847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.418433972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.878" endtime="20201029 12:46:34.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.418432847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.418433972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.200" endtime="20201029 12:46:34.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.212" endtime="20201029 12:46:34.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.875" endtime="20201029 12:46:34.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.874" endtime="20201029 12:46:34.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:34.221" level="INFO">${RESULT} = [{'diff': 1.1249999999907168e-06}, {'diff': 1.15300000003149e-06}, {'diff': 1.167000000024121e-06}, {'diff': 1.1520000000042607e-06}, {'diff': 1.167000000024121e-06}, {'diff': 1.1659999999968917e-06},...</msg>
<status status="PASS" starttime="20201029 12:46:34.217" endtime="20201029 12:46:34.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:34.229" level="INFO">${OVERHEAD} = {'diff': [1.1249999999907168e-06, 1.15300000003149e-06, 1.167000000024121e-06, 1.1520000000042607e-06, 1.167000000024121e-06, 1.1659999999968917e-06, 1.1659999999968917e-06, 1.1669999999686098e-06, 1....</msg>
<status status="PASS" starttime="20201029 12:46:34.222" endtime="20201029 12:46:34.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.234" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:34.233" endtime="20201029 12:46:34.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.236" level="INFO">VALUE: [1.1249999999907168e-06, 1.15300000003149e-06, 1.167000000024121e-06, 1.1520000000042607e-06, 1.167000000024121e-06, 1.1659999999968917e-06, 1.1659999999968917e-06, 1.1669999999686098e-06, 1.167000000024121e-06, 1.1809999999612408e-06, 1.1659999999968917e-06, 1.181000000016752e-06, 1.0970000000054547e-06, 1.2219999999674158e-06, 1.2499999999526779e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.1659999999968917e-06, 1.1659999999968917e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.1659999999968917e-06, 1.125000000046228e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.15300000003149e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.15300000003149e-06, 1.2079999999192736e-06, 1.1659999999968917e-06, 1.1389999999833478e-06, 1.1659999999968917e-06, 1.1669999999686098e-06, 1.1389999999833478e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.1520000000597719e-06, 1.1799999999340116e-06, 1.15300000003149e-06, 1.1670000000796321e-06, 1.098000000032684e-06, 1.1670000000796321e-06, 1.180000000045034e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.1939999999821538e-06, 1.13900000009437e-06, 1.1659999999968917e-06, 1.1670000000796321e-06, 1.180000000045034e-06, 1.180000000045034e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.15300000003149e-06, 1.1389999999833478e-06, 1.1529999999204676e-06, 1.1659999999968917e-06, 1.15300000003149e-06, 1.1669999999686098e-06, 1.1389999999833478e-06, 1.1670000000796321e-06, 1.15300000003149e-06]</msg>
<status status="PASS" starttime="20201029 12:46:34.235" endtime="20201029 12:46:34.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.230" endtime="20201029 12:46:34.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.843" endtime="20201029 12:46:34.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.842" endtime="20201029 12:46:34.238"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.246" endtime="20201029 12:46:34.261"></status>
</kw>
<msg timestamp="20201029 12:46:34.262" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.244" endtime="20201029 12:46:34.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.264" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.263" endtime="20201029 12:46:34.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.265" endtime="20201029 12:46:34.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.242" endtime="20201029 12:46:34.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.240" endtime="20201029 12:46:34.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.274" endtime="20201029 12:46:34.608"></status>
</kw>
<msg timestamp="20201029 12:46:34.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.7909225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.790923667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:34.273" endtime="20201029 12:46:34.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.7909225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.790923667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:34.613" endtime="20201029 12:46:34.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.623" endtime="20201029 12:46:34.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.270" endtime="20201029 12:46:34.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.268" endtime="20201029 12:46:34.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:34.630" level="INFO">${RESULT} = [{'diff': 1.1670000000796321e-06}, {'diff': 1.180000000045034e-06}, {'diff': 1.180000000045034e-06}, {'diff': 1.1669999999686098e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.15300000003149e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:46:34.626" endtime="20201029 12:46:34.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:34.635" level="INFO">${OVERHEAD} = {'diff': [1.1670000000796321e-06, 1.180000000045034e-06, 1.180000000045034e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.15300000003149e-06, 1.1389999999833478e-06, 1.1529999999204676e-06, 1.1...</msg>
<status status="PASS" starttime="20201029 12:46:34.631" endtime="20201029 12:46:34.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.639" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:34.638" endtime="20201029 12:46:34.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.642" level="INFO">VALUE: [1.1670000000796321e-06, 1.180000000045034e-06, 1.180000000045034e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.15300000003149e-06, 1.1389999999833478e-06, 1.1529999999204676e-06, 1.1659999999968917e-06, 1.15300000003149e-06, 1.1669999999686098e-06, 1.1389999999833478e-06, 1.1670000000796321e-06, 1.15300000003149e-06, 1.1529999999204676e-06, 1.1380000000116297e-06, 1.166000000107914e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.2220000000784381e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.1799999999340116e-06, 1.1669999999686098e-06, 1.1530000001425122e-06, 1.1669999999686098e-06, 1.1800000001560562e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.1939999999821538e-06, 1.1799999999340116e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.1520000000597719e-06, 1.1530000001425122e-06, 1.1529999999204676e-06, 1.1520000000597719e-06, 1.2220000000784381e-06, 1.1669999999686098e-06, 1.166000000107914e-06, 1.0970000001719882e-06, 1.1519999998377273e-06, 1.1669999999686098e-06, 1.166000000107914e-06, 1.13900000009437e-06, 1.1530000001425122e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.2229999999391339e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1.166000000107914e-06, 1.1800000001560562e-06, 1.1529999999204676e-06, 1.1659999998858694e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1659999998858694e-06, 1.1659999998858694e-06, 1.1520000000597719e-06, 1.1529999999204676e-06, 1.181000000016752e-06]</msg>
<status status="PASS" starttime="20201029 12:46:34.640" endtime="20201029 12:46:34.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.636" endtime="20201029 12:46:34.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.239" endtime="20201029 12:46:34.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.239" endtime="20201029 12:46:34.644"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.652" endtime="20201029 12:46:34.668"></status>
</kw>
<msg timestamp="20201029 12:46:34.668" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.651" endtime="20201029 12:46:34.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.671" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.669" endtime="20201029 12:46:34.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.672" endtime="20201029 12:46:34.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.647" endtime="20201029 12:46:34.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.646" endtime="20201029 12:46:34.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.681" endtime="20201029 12:46:34.986"></status>
</kw>
<msg timestamp="20201029 12:46:34.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.176717819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.176719042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.680" endtime="20201029 12:46:34.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.176717819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.176719042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.991" endtime="20201029 12:46:35.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.001" endtime="20201029 12:46:35.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.677" endtime="20201029 12:46:35.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.675" endtime="20201029 12:46:35.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:35.008" level="INFO">${RESULT} = [{'diff': 1.2229999999391339e-06}, {'diff': 1.166000000107914e-06}, {'diff': 1.1670000001906544e-06}, {'diff': 1.166000000107914e-06}, {'diff': 1.1800000001560562e-06}, {'diff': 1.1529999999204676e-06...</msg>
<status status="PASS" starttime="20201029 12:46:35.004" endtime="20201029 12:46:35.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:35.013" level="INFO">${OVERHEAD} = {'diff': [1.2229999999391339e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1.166000000107914e-06, 1.1800000001560562e-06, 1.1529999999204676e-06, 1.1659999998858694e-06, 1.181000000016752e-06, 1...</msg>
<status status="PASS" starttime="20201029 12:46:35.009" endtime="20201029 12:46:35.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.018" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:35.017" endtime="20201029 12:46:35.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.020" level="INFO">VALUE: [1.2229999999391339e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1.166000000107914e-06, 1.1800000001560562e-06, 1.1529999999204676e-06, 1.1659999998858694e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1659999998858694e-06, 1.1659999998858694e-06, 1.1520000000597719e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.1530000001425122e-06, 1.13900000009437e-06, 1.1669999999686098e-06, 1.1389999998723255e-06, 1.1120000000808261e-06, 1.1669999999686098e-06, 1.1530000001425122e-06, 1.181000000016752e-06, 1.1389999998723255e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1519999998377273e-06, 1.1950000000648942e-06, 1.13900000009437e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.1380000000116297e-06, 1.1529999999204676e-06, 1.1520000000597719e-06, 1.181000000016752e-06, 1.1530000001425122e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.166000000107914e-06, 1.1669999999686098e-06, 1.1530000001425122e-06, 1.1529999999204676e-06, 1.166000000107914e-06, 1.166000000107914e-06, 1.1530000001425122e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.13900000009437e-06, 1.1659999998858694e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.166000000107914e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.1530000001425122e-06, 1.1669999999686098e-06, 1.2089999998909917e-06]</msg>
<status status="PASS" starttime="20201029 12:46:35.019" endtime="20201029 12:46:35.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.014" endtime="20201029 12:46:35.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.644" endtime="20201029 12:46:35.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.644" endtime="20201029 12:46:35.022"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.030" endtime="20201029 12:46:35.046"></status>
</kw>
<msg timestamp="20201029 12:46:35.046" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.029" endtime="20201029 12:46:35.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.049" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.047" endtime="20201029 12:46:35.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.050" endtime="20201029 12:46:35.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.026" endtime="20201029 12:46:35.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.024" endtime="20201029 12:46:35.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.059" endtime="20201029 12:46:35.362"></status>
</kw>
<msg timestamp="20201029 12:46:35.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.573241389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.573242556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.057" endtime="20201029 12:46:35.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.573241389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.573242556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.367" endtime="20201029 12:46:35.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.377" endtime="20201029 12:46:35.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.055" endtime="20201029 12:46:35.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.053" endtime="20201029 12:46:35.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:35.384" level="INFO">${RESULT} = [{'diff': 1.1669999999686098e-06}, {'diff': 1.166000000107914e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.1659999998858694e-06}, {'diff': 1.166000000107914e-06},...</msg>
<status status="PASS" starttime="20201029 12:46:35.380" endtime="20201029 12:46:35.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:35.390" level="INFO">${OVERHEAD} = {'diff': [1.1669999999686098e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.13900000009437e-06, 1.1659999998858694e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.166000000107914e-06, 1.1...</msg>
<status status="PASS" starttime="20201029 12:46:35.385" endtime="20201029 12:46:35.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.394" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:35.393" endtime="20201029 12:46:35.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.397" level="INFO">VALUE: [1.1669999999686098e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.13900000009437e-06, 1.1659999998858694e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.166000000107914e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.1530000001425122e-06, 1.1669999999686098e-06, 1.2089999998909917e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.1950000000648942e-06, 1.083000000123846e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1659999998858694e-06, 1.1530000001425122e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1530000001425122e-06, 1.166000000107914e-06, 1.1659999998858694e-06, 1.1389999998723255e-06, 1.1519999998377273e-06, 1.1799999999340116e-06, 1.1669999999686098e-06, 1.1389999998723255e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.2499999999526779e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1799999999340116e-06, 1.1389999998723255e-06, 1.1669999999686098e-06, 1.1389999998723255e-06, 1.1799999999340116e-06, 1.1669999999686098e-06, 1.166000000107914e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.1800000001560562e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.1529999999204676e-06]</msg>
<status status="PASS" starttime="20201029 12:46:35.395" endtime="20201029 12:46:35.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.391" endtime="20201029 12:46:35.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.023" endtime="20201029 12:46:35.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.023" endtime="20201029 12:46:35.399"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.410" endtime="20201029 12:46:35.427"></status>
</kw>
<msg timestamp="20201029 12:46:35.427" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.408" endtime="20201029 12:46:35.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.431" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.429" endtime="20201029 12:46:35.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.432" endtime="20201029 12:46:35.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.404" endtime="20201029 12:46:35.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.402" endtime="20201029 12:46:35.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.444" endtime="20201029 12:46:35.754"></status>
</kw>
<msg timestamp="20201029 12:46:35.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.941269333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.9412705, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:35.441" endtime="20201029 12:46:35.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.941269333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.9412705, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:35.759" endtime="20201029 12:46:35.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.769" endtime="20201029 12:46:35.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.438" endtime="20201029 12:46:35.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.436" endtime="20201029 12:46:35.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:35.776" level="INFO">${RESULT} = [{'diff': 1.1669999999686098e-06}, {'diff': 1.1389999998723255e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1669999999686098e-06}, {'diff': 1.166000000107914e-06}, {'diff': 1.1669999999686098e-0...</msg>
<status status="PASS" starttime="20201029 12:46:35.772" endtime="20201029 12:46:35.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:35.781" level="INFO">${OVERHEAD} = {'diff': [1.1669999999686098e-06, 1.1389999998723255e-06, 1.1799999999340116e-06, 1.1669999999686098e-06, 1.166000000107914e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.1669999999686098e-06,...</msg>
<status status="PASS" starttime="20201029 12:46:35.777" endtime="20201029 12:46:35.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.785" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:35.784" endtime="20201029 12:46:35.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.788" level="INFO">VALUE: [1.1669999999686098e-06, 1.1389999998723255e-06, 1.1799999999340116e-06, 1.1669999999686098e-06, 1.166000000107914e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.1800000001560562e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1249999998241833e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1530000003645569e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.223000000383223e-06, 1.1669999997465652e-06, 1.1519999998377273e-06, 1.1530000003645569e-06, 1.1529999999204676e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.1949999998428495e-06, 1.1669999997465652e-06, 1.1670000001906544e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.1799999999340116e-06, 1.1670000001906544e-06, 1.1389999996502809e-06, 1.2090000001130363e-06, 1.1669999997465652e-06, 1.1670000001906544e-06, 1.1670000001906544e-06, 1.1800000003781008e-06, 1.1519999998377273e-06, 1.1529999999204676e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.2219999998563935e-06, 1.1669999997465652e-06, 1.1249999998241833e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1529999999204676e-06, 1.13900000009437e-06, 1.1669999997465652e-06]</msg>
<status status="PASS" starttime="20201029 12:46:35.786" endtime="20201029 12:46:35.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.782" endtime="20201029 12:46:35.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.400" endtime="20201029 12:46:35.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.399" endtime="20201029 12:46:35.790"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.799" endtime="20201029 12:46:35.815"></status>
</kw>
<msg timestamp="20201029 12:46:35.815" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.797" endtime="20201029 12:46:35.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.818" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.816" endtime="20201029 12:46:35.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.819" endtime="20201029 12:46:35.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.794" endtime="20201029 12:46:35.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.792" endtime="20201029 12:46:35.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.829" endtime="20201029 12:46:36.156"></status>
</kw>
<msg timestamp="20201029 12:46:36.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.311864833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.311866, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:35.827" endtime="20201029 12:46:36.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.311864833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.311866, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:36.163" endtime="20201029 12:46:36.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.177" endtime="20201029 12:46:36.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.824" endtime="20201029 12:46:36.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.822" endtime="20201029 12:46:36.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:36.189" level="INFO">${RESULT} = [{'diff': 1.1670000001906544e-06}, {'diff': 1.1800000003781008e-06}, {'diff': 1.1519999998377273e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1799999999340116e-...</msg>
<status status="PASS" starttime="20201029 12:46:36.183" endtime="20201029 12:46:36.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:36.197" level="INFO">${OVERHEAD} = {'diff': [1.1670000001906544e-06, 1.1800000003781008e-06, 1.1519999998377273e-06, 1.1529999999204676e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.2219999998563935e-06, 1.1669999997465652e-06...</msg>
<status status="PASS" starttime="20201029 12:46:36.190" endtime="20201029 12:46:36.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.204" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:36.202" endtime="20201029 12:46:36.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.209" level="INFO">VALUE: [1.1670000001906544e-06, 1.1800000003781008e-06, 1.1519999998377273e-06, 1.1529999999204676e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.2219999998563935e-06, 1.1669999997465652e-06, 1.1249999998241833e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1529999999204676e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.1519999998377273e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.2229999999391339e-06, 1.1529999999204676e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.1670000001906544e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1529999999204676e-06, 1.1519999998377273e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1800000003781008e-06, 1.1670000001906544e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1249999998241833e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.166000000107914e-06, 1.1529999999204676e-06]</msg>
<status status="PASS" starttime="20201029 12:46:36.206" endtime="20201029 12:46:36.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.198" endtime="20201029 12:46:36.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.791" endtime="20201029 12:46:36.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.790" endtime="20201029 12:46:36.213"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.227" endtime="20201029 12:46:36.243"></status>
</kw>
<msg timestamp="20201029 12:46:36.244" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.224" endtime="20201029 12:46:36.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.248" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.246" endtime="20201029 12:46:36.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.250" endtime="20201029 12:46:36.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.219" endtime="20201029 12:46:36.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.216" endtime="20201029 12:46:36.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.264" endtime="20201029 12:46:36.574"></status>
</kw>
<msg timestamp="20201029 12:46:36.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.689671944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.689673111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.262" endtime="20201029 12:46:36.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.689671944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.689673111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.579" endtime="20201029 12:46:36.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.589" endtime="20201029 12:46:36.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.259" endtime="20201029 12:46:36.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.256" endtime="20201029 12:46:36.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:36.597" level="INFO">${RESULT} = [{'diff': 1.1669999997465652e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1530000003645569e-06}, {'diff': 1.1669999997465652e-0...</msg>
<status status="PASS" starttime="20201029 12:46:36.592" endtime="20201029 12:46:36.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:36.602" level="INFO">${OVERHEAD} = {'diff': [1.1669999997465652e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1...</msg>
<status status="PASS" starttime="20201029 12:46:36.598" endtime="20201029 12:46:36.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.606" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:36.605" endtime="20201029 12:46:36.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.610" level="INFO">VALUE: [1.1669999997465652e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.13900000009437e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.0970000001719882e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.13900000009437e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1799999999340116e-06, 1.1670000001906544e-06, 1.1669999997465652e-06, 1.1519999998377273e-06, 1.1669999997465652e-06, 1.1529999999204676e-06, 1.166000000107914e-06, 1.13900000009437e-06, 1.1670000001906544e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.1659999996638248e-06, 1.1670000001906544e-06, 1.1659999996638248e-06, 1.1389999996502809e-06, 1.13900000009437e-06, 1.1529999999204676e-06, 1.1659999996638248e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.13900000009437e-06, 1.166000000107914e-06, 1.1250000002682725e-06, 1.1389999996502809e-06, 1.181000000016752e-06, 1.2219999998563935e-06, 1.1519999998377273e-06, 1.13900000009437e-06, 1.1529999999204676e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1.1250000002682725e-06, 1.1670000001906544e-06, 1.181000000016752e-06, 1.166000000107914e-06]</msg>
<status status="PASS" starttime="20201029 12:46:36.608" endtime="20201029 12:46:36.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.603" endtime="20201029 12:46:36.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.214" endtime="20201029 12:46:36.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.213" endtime="20201029 12:46:36.613"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.625" endtime="20201029 12:46:36.642"></status>
</kw>
<msg timestamp="20201029 12:46:36.642" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.622" endtime="20201029 12:46:36.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.645" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.643" endtime="20201029 12:46:36.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.646" endtime="20201029 12:46:36.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.619" endtime="20201029 12:46:36.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.616" endtime="20201029 12:46:36.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.656" endtime="20201029 12:46:36.951"></status>
</kw>
<msg timestamp="20201029 12:46:36.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.107466542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.107467708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.655" endtime="20201029 12:46:36.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.107466542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.107467708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.957" endtime="20201029 12:46:36.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.967" endtime="20201029 12:46:36.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.651" endtime="20201029 12:46:36.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.649" endtime="20201029 12:46:36.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:36.974" level="INFO">${RESULT} = [{'diff': 1.166000000107914e-06}, {'diff': 1.1250000002682725e-06}, {'diff': 1.1389999996502809e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.2219999998563935e-06}, {'diff': 1.1519999998377273e-06...</msg>
<status status="PASS" starttime="20201029 12:46:36.970" endtime="20201029 12:46:36.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:36.979" level="INFO">${OVERHEAD} = {'diff': [1.166000000107914e-06, 1.1250000002682725e-06, 1.1389999996502809e-06, 1.181000000016752e-06, 1.2219999998563935e-06, 1.1519999998377273e-06, 1.13900000009437e-06, 1.1529999999204676e-06, 1....</msg>
<status status="PASS" starttime="20201029 12:46:36.975" endtime="20201029 12:46:36.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.984" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:36.982" endtime="20201029 12:46:36.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.987" level="INFO">VALUE: [1.166000000107914e-06, 1.1250000002682725e-06, 1.1389999996502809e-06, 1.181000000016752e-06, 1.2219999998563935e-06, 1.1519999998377273e-06, 1.13900000009437e-06, 1.1529999999204676e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1.1250000002682725e-06, 1.1670000001906544e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.13900000009437e-06, 1.0829999999018014e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.1519999998377273e-06, 1.1529999999204676e-06, 1.1249999998241833e-06, 1.1669999997465652e-06, 1.1670000001906544e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1.13900000009437e-06, 1.0829999999018014e-06, 1.1529999999204676e-06, 1.1519999998377273e-06, 1.1670000001906544e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.235999999682491e-06, 1.166000000107914e-06, 1.13900000009437e-06, 1.1670000001906544e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1529999999204676e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.1659999996638248e-06, 1.1529999999204676e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.1670000001906544e-06, 1.1669999997465652e-06, 1.2219999998563935e-06, 1.181000000016752e-06, 1.2090000001130363e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.181000000016752e-06]</msg>
<status status="PASS" starttime="20201029 12:46:36.985" endtime="20201029 12:46:36.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.980" endtime="20201029 12:46:36.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.614" endtime="20201029 12:46:36.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.613" endtime="20201029 12:46:36.989"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.997" endtime="20201029 12:46:37.012"></status>
</kw>
<msg timestamp="20201029 12:46:37.012" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.995" endtime="20201029 12:46:37.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.015" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.013" endtime="20201029 12:46:37.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.016" endtime="20201029 12:46:37.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.992" endtime="20201029 12:46:37.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.991" endtime="20201029 12:46:37.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.026" endtime="20201029 12:46:37.338"></status>
</kw>
<msg timestamp="20201029 12:46:37.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.496523333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.496524486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.024" endtime="20201029 12:46:37.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.496523333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.496524486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.343" endtime="20201029 12:46:37.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.353" endtime="20201029 12:46:37.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.021" endtime="20201029 12:46:37.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.020" endtime="20201029 12:46:37.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:37.360" level="INFO">${RESULT} = [{'diff': 1.1530000003645569e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1659999996638248e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.1659999996638248e-06}, {'diff': 1.1530000003645569e-...</msg>
<status status="PASS" starttime="20201029 12:46:37.356" endtime="20201029 12:46:37.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:37.366" level="INFO">${OVERHEAD} = {'diff': [1.1530000003645569e-06, 1.1799999999340116e-06, 1.1659999996638248e-06, 1.1529999999204676e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.1670000001906544e-06, 1.1669999997465652e-06...</msg>
<status status="PASS" starttime="20201029 12:46:37.361" endtime="20201029 12:46:37.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.370" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:37.369" endtime="20201029 12:46:37.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.373" level="INFO">VALUE: [1.1530000003645569e-06, 1.1799999999340116e-06, 1.1659999996638248e-06, 1.1529999999204676e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.1670000001906544e-06, 1.1669999997465652e-06, 1.2219999998563935e-06, 1.181000000016752e-06, 1.2090000001130363e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1669999997465652e-06, 1.166000000107914e-06, 1.1799999999340116e-06, 1.166000000107914e-06, 1.1249999998241833e-06, 1.2229999999391339e-06, 1.1519999998377273e-06, 1.1529999999204676e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.2090000001130363e-06, 1.13900000009437e-06, 1.1529999999204676e-06, 1.1530000003645569e-06, 1.1520000002818165e-06, 1.1799999999340116e-06, 1.0689999996316146e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1659999996638248e-06, 1.1670000001906544e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.208000000030296e-06, 1.1799999999340116e-06, 1.1520000002818165e-06, 1.1530000003645569e-06, 1.1249999998241833e-06, 1.1250000002682725e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.1669999997465652e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1519999998377273e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1519999998377273e-06, 1.1799999999340116e-06, 1.1670000001906544e-06]</msg>
<status status="PASS" starttime="20201029 12:46:37.371" endtime="20201029 12:46:37.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.367" endtime="20201029 12:46:37.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.989" endtime="20201029 12:46:37.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.989" endtime="20201029 12:46:37.375"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.383" endtime="20201029 12:46:37.399"></status>
</kw>
<msg timestamp="20201029 12:46:37.399" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.381" endtime="20201029 12:46:37.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.403" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.401" endtime="20201029 12:46:37.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.405" endtime="20201029 12:46:37.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.378" endtime="20201029 12:46:37.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.377" endtime="20201029 12:46:37.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.417" endtime="20201029 12:46:37.727"></status>
</kw>
<msg timestamp="20201029 12:46:37.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.8585205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.858521653, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:37.416" endtime="20201029 12:46:37.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.8585205, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.858521653, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:37.732" endtime="20201029 12:46:37.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.742" endtime="20201029 12:46:37.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.413" endtime="20201029 12:46:37.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.410" endtime="20201029 12:46:37.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:37.749" level="INFO">${RESULT} = [{'diff': 1.1529999999204676e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1670000001906544e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.181000000016752e-06...</msg>
<status status="PASS" starttime="20201029 12:46:37.745" endtime="20201029 12:46:37.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:37.754" level="INFO">${OVERHEAD} = {'diff': [1.1529999999204676e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.1669999997465652e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1519999998377273e-06, 1.1670000001906544e-06, ...</msg>
<status status="PASS" starttime="20201029 12:46:37.750" endtime="20201029 12:46:37.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.758" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:37.757" endtime="20201029 12:46:37.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.760" level="INFO">VALUE: [1.1529999999204676e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.1669999997465652e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1519999998377273e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1519999998377273e-06, 1.1799999999340116e-06, 1.1670000001906544e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.1520000002818165e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.1659999996638248e-06, 1.1660000005520033e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1660000005520033e-06, 1.1389999992061917e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1520000002818165e-06, 1.1669999997465652e-06, 1.1529999994763784e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.1660000005520033e-06, 1.1529999994763784e-06, 1.1389999992061917e-06, 1.181000000016752e-06, 1.1529999994763784e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.151999999393638e-06, 1.181000000016752e-06, 1.1529999994763784e-06, 1.181000000016752e-06, 1.2079999995862067e-06, 1.1670000006347436e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.1529999994763784e-06]</msg>
<status status="PASS" starttime="20201029 12:46:37.759" endtime="20201029 12:46:37.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.754" endtime="20201029 12:46:37.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.375" endtime="20201029 12:46:37.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.375" endtime="20201029 12:46:37.762"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.771" endtime="20201029 12:46:37.787"></status>
</kw>
<msg timestamp="20201029 12:46:37.788" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.769" endtime="20201029 12:46:37.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.790" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.789" endtime="20201029 12:46:37.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.791" endtime="20201029 12:46:37.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.766" endtime="20201029 12:46:37.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.765" endtime="20201029 12:46:37.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.800" endtime="20201029 12:46:38.112"></status>
</kw>
<msg timestamp="20201029 12:46:38.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.235329403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.235330556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.799" endtime="20201029 12:46:38.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.235329403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.235330556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.117" endtime="20201029 12:46:38.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.127" endtime="20201029 12:46:38.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.796" endtime="20201029 12:46:38.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.795" endtime="20201029 12:46:38.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:38.134" level="INFO">${RESULT} = [{'diff': 1.1530000003645569e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.1530000003645569e-06}, {'diff': 1.151999999393638e-06}, {'diff': 1.181000000016752e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:46:38.131" endtime="20201029 12:46:38.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:38.140" level="INFO">${OVERHEAD} = {'diff': [1.1530000003645569e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.151999999393638e-06, 1.181000000016752e-06, 1.1529999994763784e-06, 1.181000000016752e-06, 1.207...</msg>
<status status="PASS" starttime="20201029 12:46:38.135" endtime="20201029 12:46:38.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.144" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:38.143" endtime="20201029 12:46:38.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.147" level="INFO">VALUE: [1.1530000003645569e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.151999999393638e-06, 1.181000000016752e-06, 1.1529999994763784e-06, 1.181000000016752e-06, 1.2079999995862067e-06, 1.1670000006347436e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1659999996638248e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.1520000002818165e-06, 1.1529999994763784e-06, 1.1670000006347436e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.1520000002818165e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1669999997465652e-06, 1.1529999994763784e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1670000006347436e-06, 1.1529999994763784e-06]</msg>
<status status="PASS" starttime="20201029 12:46:38.145" endtime="20201029 12:46:38.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.141" endtime="20201029 12:46:38.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.763" endtime="20201029 12:46:38.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.763" endtime="20201029 12:46:38.153"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.161" endtime="20201029 12:46:38.176"></status>
</kw>
<msg timestamp="20201029 12:46:38.177" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.160" endtime="20201029 12:46:38.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.179" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.178" endtime="20201029 12:46:38.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.180" endtime="20201029 12:46:38.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.157" endtime="20201029 12:46:38.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.155" endtime="20201029 12:46:38.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.190" endtime="20201029 12:46:38.512"></status>
</kw>
<msg timestamp="20201029 12:46:38.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.614183028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.614184167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.188" endtime="20201029 12:46:38.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.614183028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.614184167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.517" endtime="20201029 12:46:38.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.526" endtime="20201029 12:46:38.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.185" endtime="20201029 12:46:38.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.183" endtime="20201029 12:46:38.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:38.533" level="INFO">${RESULT} = [{'diff': 1.13900000009437e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1659999996638248e-06}, {'diff': 1.1669999997465652e-06...</msg>
<status status="PASS" starttime="20201029 12:46:38.530" endtime="20201029 12:46:38.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:38.539" level="INFO">${OVERHEAD} = {'diff': [1.13900000009437e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1669999997465652e-06, ...</msg>
<status status="PASS" starttime="20201029 12:46:38.534" endtime="20201029 12:46:38.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.543" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:38.542" endtime="20201029 12:46:38.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.545" level="INFO">VALUE: [1.13900000009437e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1669999997465652e-06, 1.1529999994763784e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1670000006347436e-06, 1.1529999994763784e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.1670000006347436e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.111000000442175e-06, 1.1520000002818165e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.1799999999340116e-06, 1.0980000002547285e-06, 1.1530000003645569e-06, 1.18000000082219e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1940000002041984e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.1659999996638248e-06, 1.1670000006347436e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1659999996638248e-06, 1.13900000009437e-06, 1.151999999393638e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.2360000001265803e-06, 1.1529999994763784e-06, 1.1529999994763784e-06, 1.1520000002818165e-06, 1.13900000009437e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.069000000519793e-06, 1.1530000003645569e-06, 1.1660000005520033e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.13900000009437e-06]</msg>
<status status="PASS" starttime="20201029 12:46:38.544" endtime="20201029 12:46:38.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.540" endtime="20201029 12:46:38.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.154" endtime="20201029 12:46:38.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.153" endtime="20201029 12:46:38.547"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.555" endtime="20201029 12:46:38.570"></status>
</kw>
<msg timestamp="20201029 12:46:38.571" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.553" endtime="20201029 12:46:38.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.573" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.572" endtime="20201029 12:46:38.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.574" endtime="20201029 12:46:38.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.551" endtime="20201029 12:46:38.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.549" endtime="20201029 12:46:38.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.583" endtime="20201029 12:46:38.909"></status>
</kw>
<msg timestamp="20201029 12:46:38.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.995083708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.995084861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.581" endtime="20201029 12:46:38.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.995083708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.995084861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.914" endtime="20201029 12:46:38.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.924" endtime="20201029 12:46:38.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.579" endtime="20201029 12:46:38.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.577" endtime="20201029 12:46:38.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:38.931" level="INFO">${RESULT} = [{'diff': 1.1529999994763784e-06}, {'diff': 1.1529999994763784e-06}, {'diff': 1.1520000002818165e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.1659999996638248e-06}, {'diff': 1.1799999999340116e-06...</msg>
<status status="PASS" starttime="20201029 12:46:38.927" endtime="20201029 12:46:38.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:38.936" level="INFO">${OVERHEAD} = {'diff': [1.1529999994763784e-06, 1.1529999994763784e-06, 1.1520000002818165e-06, 1.13900000009437e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.069000000519793e-06, 1....</msg>
<status status="PASS" starttime="20201029 12:46:38.932" endtime="20201029 12:46:38.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.940" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:38.939" endtime="20201029 12:46:38.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.942" level="INFO">VALUE: [1.1529999994763784e-06, 1.1529999994763784e-06, 1.1520000002818165e-06, 1.13900000009437e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.069000000519793e-06, 1.1530000003645569e-06, 1.1660000005520033e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.151999999393638e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1660000005520033e-06, 1.1380000000116297e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1670000006347436e-06, 1.0970000001719882e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1660000005520033e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.1670000006347436e-06, 1.1249999998241833e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1520000002818165e-06, 1.2080000004743852e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.13900000009437e-06, 1.1529999994763784e-06, 1.1660000005520033e-06, 1.1109999995539965e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1809999991285736e-06, 1.1660000005520033e-06, 1.1249999998241833e-06, 1.2229999999391339e-06, 1.19399999931602e-06, 1.1529999994763784e-06, 1.1520000002818165e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1669999997465652e-06]</msg>
<status status="PASS" starttime="20201029 12:46:38.941" endtime="20201029 12:46:38.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.936" endtime="20201029 12:46:38.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.548" endtime="20201029 12:46:38.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.548" endtime="20201029 12:46:38.944"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.953" endtime="20201029 12:46:38.968"></status>
</kw>
<msg timestamp="20201029 12:46:38.968" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.951" endtime="20201029 12:46:38.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.971" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.969" endtime="20201029 12:46:38.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.972" endtime="20201029 12:46:38.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.948" endtime="20201029 12:46:38.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.946" endtime="20201029 12:46:38.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.981" endtime="20201029 12:46:39.292"></status>
</kw>
<msg timestamp="20201029 12:46:39.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.378864611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.378865764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.979" endtime="20201029 12:46:39.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.378864611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.378865764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.297" endtime="20201029 12:46:39.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.307" endtime="20201029 12:46:39.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.977" endtime="20201029 12:46:39.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.975" endtime="20201029 12:46:39.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:39.314" level="INFO">${RESULT} = [{'diff': 1.1530000003645569e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1530000003645569e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1809999991285736e-06}, {'diff': 1.1660000005520033e-...</msg>
<status status="PASS" starttime="20201029 12:46:39.310" endtime="20201029 12:46:39.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:39.319" level="INFO">${OVERHEAD} = {'diff': [1.1530000003645569e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1809999991285736e-06, 1.1660000005520033e-06, 1.1249999998241833e-06, 1.2229999999391339e-06...</msg>
<status status="PASS" starttime="20201029 12:46:39.315" endtime="20201029 12:46:39.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.323" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:39.322" endtime="20201029 12:46:39.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.326" level="INFO">VALUE: [1.1530000003645569e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1809999991285736e-06, 1.1660000005520033e-06, 1.1249999998241833e-06, 1.2229999999391339e-06, 1.19399999931602e-06, 1.1529999994763784e-06, 1.1520000002818165e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.2079999995862067e-06, 1.1799999999340116e-06, 1.1529999994763784e-06, 1.1809999991285736e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1659999996638248e-06, 1.13900000009437e-06, 1.1250000007123617e-06, 1.1669999997465652e-06, 1.151999999393638e-06, 1.1529999994763784e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1660000005520033e-06, 1.1530000003645569e-06, 1.1670000006347436e-06, 1.1530000003645569e-06, 1.1670000006347436e-06, 1.1529999994763784e-06, 1.151999999393638e-06, 1.1669999997465652e-06, 1.1529999994763784e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.1520000002818165e-06, 1.1529999994763784e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.1529999994763784e-06, 1.1520000002818165e-06, 1.2219999998563935e-06, 1.151999999393638e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.2219999998563935e-06, 1.1659999996638248e-06, 1.1529999994763784e-06, 1.1530000003645569e-06, 1.1520000002818165e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1660000005520033e-06, 1.1660000005520033e-06]</msg>
<status status="PASS" starttime="20201029 12:46:39.324" endtime="20201029 12:46:39.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.320" endtime="20201029 12:46:39.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.945" endtime="20201029 12:46:39.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.945" endtime="20201029 12:46:39.328"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.336" endtime="20201029 12:46:39.351"></status>
</kw>
<msg timestamp="20201029 12:46:39.351" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.334" endtime="20201029 12:46:39.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.353" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.352" endtime="20201029 12:46:39.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.354" endtime="20201029 12:46:39.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.331" endtime="20201029 12:46:39.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.330" endtime="20201029 12:46:39.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.363" endtime="20201029 12:46:39.676"></status>
</kw>
<msg timestamp="20201029 12:46:39.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.765521292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.765522472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.362" endtime="20201029 12:46:39.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.765521292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.765522472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.680" endtime="20201029 12:46:39.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.690" endtime="20201029 12:46:39.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.359" endtime="20201029 12:46:39.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.358" endtime="20201029 12:46:39.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:39.697" level="INFO">${RESULT} = [{'diff': 1.1799999999340116e-06}, {'diff': 1.2219999998563935e-06}, {'diff': 1.1659999996638248e-06}, {'diff': 1.1529999994763784e-06}, {'diff': 1.1530000003645569e-06}, {'diff': 1.1520000002818165e-...</msg>
<status status="PASS" starttime="20201029 12:46:39.693" endtime="20201029 12:46:39.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:39.703" level="INFO">${OVERHEAD} = {'diff': [1.1799999999340116e-06, 1.2219999998563935e-06, 1.1659999996638248e-06, 1.1529999994763784e-06, 1.1530000003645569e-06, 1.1520000002818165e-06, 1.1670000006347436e-06, 1.1669999997465652e-06...</msg>
<status status="PASS" starttime="20201029 12:46:39.698" endtime="20201029 12:46:39.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.707" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:39.706" endtime="20201029 12:46:39.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.709" level="INFO">VALUE: [1.1799999999340116e-06, 1.2219999998563935e-06, 1.1659999996638248e-06, 1.1529999994763784e-06, 1.1530000003645569e-06, 1.1520000002818165e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1660000005520033e-06, 1.1660000005520033e-06, 1.1670000006347436e-06, 1.1530000003645569e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1389999992061917e-06, 1.1669999997465652e-06, 1.0970000001719882e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1659999996638248e-06, 1.1249999998241833e-06, 1.1799999999340116e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1949999993987603e-06, 1.1529999994763784e-06, 1.1529999994763784e-06, 1.181000000016752e-06, 1.2229999999391339e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.222000000744572e-06, 1.2360000001265803e-06, 1.111000000442175e-06, 1.1799999999340116e-06, 1.1249999998241833e-06, 1.2219999998563935e-06, 1.1530000003645569e-06, 1.1660000005520033e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.13900000009437e-06, 1.1659999996638248e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.0829999999018014e-06, 1.1799999999340116e-06, 1.1670000006347436e-06]</msg>
<status status="PASS" starttime="20201029 12:46:39.708" endtime="20201029 12:46:39.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.704" endtime="20201029 12:46:39.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.328" endtime="20201029 12:46:39.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.328" endtime="20201029 12:46:39.711"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.719" endtime="20201029 12:46:39.735"></status>
</kw>
<msg timestamp="20201029 12:46:39.735" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.717" endtime="20201029 12:46:39.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.737" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.736" endtime="20201029 12:46:39.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.738" endtime="20201029 12:46:39.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.715" endtime="20201029 12:46:39.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.713" endtime="20201029 12:46:39.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.748" endtime="20201029 12:46:40.062"></status>
</kw>
<msg timestamp="20201029 12:46:40.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.136580431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.136581597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.747" endtime="20201029 12:46:40.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.136580431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.136581597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.067" endtime="20201029 12:46:40.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.077" endtime="20201029 12:46:40.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.743" endtime="20201029 12:46:40.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.742" endtime="20201029 12:46:40.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:40.084" level="INFO">${RESULT} = [{'diff': 1.1660000005520033e-06}, {'diff': 1.1940000002041984e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1520000002818165e-06}, {'diff': 1.1670000006347436e-06}, {'diff': 1.1669999997465652e-...</msg>
<status status="PASS" starttime="20201029 12:46:40.080" endtime="20201029 12:46:40.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:40.089" level="INFO">${OVERHEAD} = {'diff': [1.1660000005520033e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.13900000009437e-06, ...</msg>
<status status="PASS" starttime="20201029 12:46:40.085" endtime="20201029 12:46:40.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.093" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:40.092" endtime="20201029 12:46:40.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.096" level="INFO">VALUE: [1.1660000005520033e-06, 1.1940000002041984e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.13900000009437e-06, 1.1659999996638248e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.0829999999018014e-06, 1.1799999999340116e-06, 1.1670000006347436e-06, 1.1659999996638248e-06, 1.1659999996638248e-06, 1.1940000002041984e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.1659999996638248e-06, 1.1520000002818165e-06, 1.1109999995539965e-06, 1.181000000016752e-06, 1.1670000006347436e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.1670000006347436e-06, 1.1520000002818165e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.19399999931602e-06, 1.1530000003645569e-06, 1.2219999998563935e-06, 1.1529999994763784e-06, 1.1660000005520033e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.1670000006347436e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.1659999996638248e-06, 1.1660000005520033e-06, 1.1660000005520033e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.1529999994763784e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1799999999340116e-06, 1.1529999994763784e-06, 1.1799999999340116e-06]</msg>
<status status="PASS" starttime="20201029 12:46:40.094" endtime="20201029 12:46:40.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.089" endtime="20201029 12:46:40.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.712" endtime="20201029 12:46:40.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.712" endtime="20201029 12:46:40.098"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.106" endtime="20201029 12:46:40.121"></status>
</kw>
<msg timestamp="20201029 12:46:40.122" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.104" endtime="20201029 12:46:40.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.124" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.123" endtime="20201029 12:46:40.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.125" endtime="20201029 12:46:40.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.101" endtime="20201029 12:46:40.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.100" endtime="20201029 12:46:40.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.135" endtime="20201029 12:46:40.456"></status>
</kw>
<msg timestamp="20201029 12:46:40.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.510882236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.510883403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.133" endtime="20201029 12:46:40.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.510882236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.510883403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.461" endtime="20201029 12:46:40.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.470" endtime="20201029 12:46:40.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.130" endtime="20201029 12:46:40.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.128" endtime="20201029 12:46:40.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:40.477" level="INFO">${RESULT} = [{'diff': 1.1670000006347436e-06}, {'diff': 1.1659999996638248e-06}, {'diff': 1.1660000005520033e-06}, {'diff': 1.1660000005520033e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.181000000016752e-0...</msg>
<status status="PASS" starttime="20201029 12:46:40.474" endtime="20201029 12:46:40.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:40.482" level="INFO">${OVERHEAD} = {'diff': [1.1670000006347436e-06, 1.1659999996638248e-06, 1.1660000005520033e-06, 1.1660000005520033e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.1529999994763784e-06, 1...</msg>
<status status="PASS" starttime="20201029 12:46:40.478" endtime="20201029 12:46:40.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.487" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:40.486" endtime="20201029 12:46:40.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.489" level="INFO">VALUE: [1.1670000006347436e-06, 1.1659999996638248e-06, 1.1660000005520033e-06, 1.1660000005520033e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.1529999994763784e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1799999999340116e-06, 1.1529999994763784e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1670000006347436e-06, 1.13900000009437e-06, 1.1380000000116297e-06, 1.2219999998563935e-06, 1.181000000016752e-06, 1.1670000006347436e-06, 1.1660000005520033e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1950000002869388e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.2219999998563935e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.2359999992384019e-06, 1.1799999999340116e-06, 1.151999999393638e-06, 1.2229999999391339e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1670000006347436e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1249999998241833e-06, 1.1669999997465652e-06, 1.1389999992061917e-06, 1.1799999999340116e-06, 1.1380000000116297e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1660000005520033e-06]</msg>
<status status="PASS" starttime="20201029 12:46:40.488" endtime="20201029 12:46:40.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.483" endtime="20201029 12:46:40.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.099" endtime="20201029 12:46:40.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.098" endtime="20201029 12:46:40.491"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.499" endtime="20201029 12:46:40.514"></status>
</kw>
<msg timestamp="20201029 12:46:40.515" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.497" endtime="20201029 12:46:40.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.517" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.516" endtime="20201029 12:46:40.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.518" endtime="20201029 12:46:40.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.495" endtime="20201029 12:46:40.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.493" endtime="20201029 12:46:40.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.528" endtime="20201029 12:46:40.842"></status>
</kw>
<msg timestamp="20201029 12:46:40.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.887520306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.887521458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.526" endtime="20201029 12:46:40.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.887520306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.887521458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.846" endtime="20201029 12:46:40.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.856" endtime="20201029 12:46:40.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.523" endtime="20201029 12:46:40.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.522" endtime="20201029 12:46:40.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:40.863" level="INFO">${RESULT} = [{'diff': 1.1520000002818165e-06}, {'diff': 1.1670000006347436e-06}, {'diff': 1.1659999996638248e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.1669999997465652e-...</msg>
<status status="PASS" starttime="20201029 12:46:40.860" endtime="20201029 12:46:40.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:40.868" level="INFO">${OVERHEAD} = {'diff': [1.1520000002818165e-06, 1.1670000006347436e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1249999998241833e-06, 1.1669999997465652e-06, 1.1389999992061917e-06, 1.1799999999340116e-06...</msg>
<status status="PASS" starttime="20201029 12:46:40.864" endtime="20201029 12:46:40.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.872" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:46:40.871" endtime="20201029 12:46:40.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.874" level="INFO">VALUE: [1.1520000002818165e-06, 1.1670000006347436e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1249999998241833e-06, 1.1669999997465652e-06, 1.1389999992061917e-06, 1.1799999999340116e-06, 1.1380000000116297e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1660000005520033e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.1949999993987603e-06, 1.1940000002041984e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.1809999991285736e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1660000005520033e-06, 1.1389999992061917e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.1529999994763784e-06, 1.13900000009437e-06, 1.1670000006347436e-06, 1.1659999996638248e-06, 1.1659999996638248e-06, 1.2090000005571255e-06, 1.1660000005520033e-06, 1.1660000005520033e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.1529999994763784e-06, 1.1520000002818165e-06, 1.1670000006347436e-06, 1.1529999994763784e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.1660000005520033e-06, 1.1669999997465652e-06, 1.1660000005520033e-06, 1.13900000009437e-06, 1.1520000002818165e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.1520000002818165e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.2219999998563935e-06, 1.1660000005520033e-06, 1.181000000016752e-06]</msg>
<status status="PASS" starttime="20201029 12:46:40.873" endtime="20201029 12:46:40.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.869" endtime="20201029 12:46:40.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.492" endtime="20201029 12:46:40.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.492" endtime="20201029 12:46:40.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.096" endtime="20201029 12:46:40.876"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:33.021" endtime="20201029 12:46:40.877" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:40.883" endtime="20201029 12:46:40.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.882" endtime="20201029 12:46:40.903"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.919" endtime="20201029 12:46:40.937"></status>
</kw>
<msg timestamp="20201029 12:46:40.937" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.917" endtime="20201029 12:46:40.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.940" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.938" endtime="20201029 12:46:40.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.943" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:40.941" endtime="20201029 12:46:40.943"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:40.915" endtime="20201029 12:46:40.944"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:40.913" endtime="20201029 12:46:40.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.911" endtime="20201029 12:46:40.945"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:40.948" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:40.948" endtime="20201029 12:46:40.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.945" endtime="20201029 12:46:40.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.911" endtime="20201029 12:46:40.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.910" endtime="20201029 12:46:40.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.950" endtime="20201029 12:46:40.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.906" endtime="20201029 12:46:40.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.904" endtime="20201029 12:46:40.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.881" endtime="20201029 12:46:40.953"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.961" endtime="20201029 12:46:40.982"></status>
</kw>
<msg timestamp="20201029 12:46:40.983" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.959" endtime="20201029 12:46:40.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.986" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.984" endtime="20201029 12:46:40.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.987" endtime="20201029 12:46:40.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.957" endtime="20201029 12:46:40.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.955" endtime="20201029 12:46:40.990"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.992" endtime="20201029 12:46:40.993"></status>
</kw>
<msg timestamp="20201029 12:46:40.994" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:46:40.990" endtime="20201029 12:46:40.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.998" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:46:40.997" endtime="20201029 12:46:40.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.001" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:46:40.999" endtime="20201029 12:46:41.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.994" endtime="20201029 12:46:41.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.006" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:46:41.005" endtime="20201029 12:46:41.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.008" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:46:41.007" endtime="20201029 12:46:41.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.002" endtime="20201029 12:46:41.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.015" endtime="20201029 12:46:41.300"></status>
</kw>
<msg timestamp="20201029 12:46:41.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067418, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067424125, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:41.013" endtime="20201029 12:46:41.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067418, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067424125, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:41.304" endtime="20201029 12:46:41.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.312" endtime="20201029 12:46:41.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.011" endtime="20201029 12:46:41.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.009" endtime="20201029 12:46:41.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:41.318" level="INFO">${RESULT} = [{'diff': 6.124999999995717e-06}, {'diff': 7.013999999999632e-06}, {'diff': 6.999999999993123e-06}, {'diff': 6.958000000001352e-06}, {'diff': 7.013999999999632e-06}, {'diff': 7.013999999999632e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:46:41.315" endtime="20201029 12:46:41.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:41.322" level="INFO">${OVERHEAD} = {'diff': [6.124999999995717e-06, 7.013999999999632e-06, 6.999999999993123e-06, 6.958000000001352e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.0280000000061404e-06, 7.013999999999632e-06, 7.000...</msg>
<status status="PASS" starttime="20201029 12:46:41.319" endtime="20201029 12:46:41.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.328" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 12:46:41.327" endtime="20201029 12:46:41.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.330" level="INFO">VALUE: [6.124999999995717e-06, 7.013999999999632e-06, 6.999999999993123e-06, 6.958000000001352e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.0280000000061404e-06, 7.013999999999632e-06, 7.000000000007001e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.054999999991929e-06, 6.943999999994843e-06, 7.0419999999987715e-06, 6.958000000001352e-06, 7.026999999992789e-06, 7.0140000000135094e-06, 7.0280000000061404e-06, 7.000000000007001e-06, 7.068999999998438e-06, 7.068999999998438e-06, 6.972999999993457e-06, 7.013999999999632e-06, 7.013999999999632e-06, 6.9730000000073344e-06, 6.986000000000492e-06, 7.013999999999632e-06, 7.0280000000061404e-06, 6.999999999993123e-06, 7.000000000007001e-06, 7.0690000000123154e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.000000000007001e-06, 6.999999999993123e-06, 7.055000000005807e-06, 7.013999999999632e-06, 7.000000000007001e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.0280000000061404e-06, 7.0830000000049465e-06, 6.986000000000492e-06, 7.013999999999632e-06, 7.0559999999914025e-06, 6.999999999993123e-06, 7.013999999999632e-06, 6.999999999993123e-06, 6.9869999999999655e-06, 7.013999999999632e-06]</msg>
<status status="PASS" starttime="20201029 12:46:41.329" endtime="20201029 12:46:41.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.323" endtime="20201029 12:46:41.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.953" endtime="20201029 12:46:41.332"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:40.878" endtime="20201029 12:46:41.332" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:41.339" endtime="20201029 12:46:41.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.338" endtime="20201029 12:46:41.359"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.372" endtime="20201029 12:46:41.388"></status>
</kw>
<msg timestamp="20201029 12:46:41.389" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.370" endtime="20201029 12:46:41.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.391" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.390" endtime="20201029 12:46:41.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.394" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:41.392" endtime="20201029 12:46:41.395"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:41.368" endtime="20201029 12:46:41.395"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:41.365" endtime="20201029 12:46:41.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.364" endtime="20201029 12:46:41.396"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:41.400" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:41.399" endtime="20201029 12:46:41.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.397" endtime="20201029 12:46:41.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.363" endtime="20201029 12:46:41.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.363" endtime="20201029 12:46:41.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.401" endtime="20201029 12:46:41.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.361" endtime="20201029 12:46:41.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.360" endtime="20201029 12:46:41.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.337" endtime="20201029 12:46:41.404"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.413" endtime="20201029 12:46:41.466"></status>
</kw>
<msg timestamp="20201029 12:46:41.466" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.411" endtime="20201029 12:46:41.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.469" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.467" endtime="20201029 12:46:41.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.470" endtime="20201029 12:46:41.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.408" endtime="20201029 12:46:41.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.406" endtime="20201029 12:46:41.472"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.475" endtime="20201029 12:46:41.477"></status>
</kw>
<msg timestamp="20201029 12:46:41.477" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:46:41.473" endtime="20201029 12:46:41.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.481" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:46:41.480" endtime="20201029 12:46:41.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.483" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:46:41.482" endtime="20201029 12:46:41.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.478" endtime="20201029 12:46:41.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.488" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:46:41.487" endtime="20201029 12:46:41.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.490" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:46:41.489" endtime="20201029 12:46:41.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.484" endtime="20201029 12:46:41.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.497" endtime="20201029 12:46:41.784"></status>
</kw>
<msg timestamp="20201029 12:46:41.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064924931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064938653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.495" endtime="20201029 12:46:41.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064924931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064938653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.788" endtime="20201029 12:46:41.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.796" endtime="20201029 12:46:41.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.493" endtime="20201029 12:46:41.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.491" endtime="20201029 12:46:41.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:41.802" level="INFO">${RESULT} = [{'diff': 1.3721999999993795e-05}, {'diff': 2.238899999999766e-05}, {'diff': 2.2402000000004696e-05}, {'diff': 2.237500000000503e-05}, {'diff': 2.236099999999852e-05}, {'diff': 2.240300000000417e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:41.799" endtime="20201029 12:46:41.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:41.807" level="INFO">${OVERHEAD} = {'diff': [1.3721999999993795e-05, 2.238899999999766e-05, 2.2402000000004696e-05, 2.237500000000503e-05, 2.236099999999852e-05, 2.240300000000417e-05, 2.2361999999997995e-05, 2.2401999999990818e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:46:41.803" endtime="20201029 12:46:41.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.812" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 12:46:41.811" endtime="20201029 12:46:41.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.814" level="INFO">VALUE: [1.3721999999993795e-05, 2.238899999999766e-05, 2.2402000000004696e-05, 2.237500000000503e-05, 2.236099999999852e-05, 2.240300000000417e-05, 2.2361999999997995e-05, 2.2401999999990818e-05, 2.240300000000417e-05, 2.237500000000503e-05, 2.2346999999992012e-05, 2.2387999999998187e-05, 2.238899999999766e-05, 2.236099999999852e-05, 2.243100000000331e-05, 2.2361999999997995e-05, 2.238899999999766e-05, 2.240300000000417e-05, 2.2402000000004696e-05, 2.238899999999766e-05, 2.2348000000005364e-05, 2.24169999999968e-05, 2.2374999999991152e-05, 2.233299999999938e-05, 2.2416000000011205e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.238900000001154e-05, 2.238899999999766e-05, 2.2387999999998187e-05, 2.237500000000503e-05, 2.238899999999766e-05, 2.240300000000417e-05, 2.238899999999766e-05, 2.240300000000417e-05, 2.2374999999991152e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.2374999999991152e-05, 2.2361999999997995e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.2402999999990292e-05, 2.2402999999990292e-05, 2.240300000000417e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.238899999999766e-05]</msg>
<status status="PASS" starttime="20201029 12:46:41.813" endtime="20201029 12:46:41.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.808" endtime="20201029 12:46:41.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.404" endtime="20201029 12:46:41.816"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:41.334" endtime="20201029 12:46:41.817" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:41.823" endtime="20201029 12:46:41.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.822" endtime="20201029 12:46:41.843"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.856" endtime="20201029 12:46:41.874"></status>
</kw>
<msg timestamp="20201029 12:46:41.874" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.854" endtime="20201029 12:46:41.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.877" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.875" endtime="20201029 12:46:41.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.880" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:41.878" endtime="20201029 12:46:41.880"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:41.852" endtime="20201029 12:46:41.881"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:41.849" endtime="20201029 12:46:41.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.848" endtime="20201029 12:46:41.881"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:41.885" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:41.884" endtime="20201029 12:46:41.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.882" endtime="20201029 12:46:41.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.848" endtime="20201029 12:46:41.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.847" endtime="20201029 12:46:41.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.888" endtime="20201029 12:46:41.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.846" endtime="20201029 12:46:41.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.844" endtime="20201029 12:46:41.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.821" endtime="20201029 12:46:41.891"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.899" endtime="20201029 12:46:42.032"></status>
</kw>
<msg timestamp="20201029 12:46:42.032" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.898" endtime="20201029 12:46:42.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.035" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.033" endtime="20201029 12:46:42.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.036" endtime="20201029 12:46:42.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.895" endtime="20201029 12:46:42.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.893" endtime="20201029 12:46:42.039"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.041" endtime="20201029 12:46:42.043"></status>
</kw>
<msg timestamp="20201029 12:46:42.043" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:46:42.039" endtime="20201029 12:46:42.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.047" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:46:42.046" endtime="20201029 12:46:42.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.049" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:46:42.048" endtime="20201029 12:46:42.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.044" endtime="20201029 12:46:42.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.054" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:46:42.053" endtime="20201029 12:46:42.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.056" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:46:42.055" endtime="20201029 12:46:42.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.051" endtime="20201029 12:46:42.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.063" endtime="20201029 12:46:42.359"></status>
</kw>
<msg timestamp="20201029 12:46:42.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067143875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067168764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.062" endtime="20201029 12:46:42.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067143875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067168764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.363" endtime="20201029 12:46:42.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.371" endtime="20201029 12:46:42.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.059" endtime="20201029 12:46:42.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.057" endtime="20201029 12:46:42.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:42.378" level="INFO">${RESULT} = [{'diff': 2.488900000000016e-05}, {'diff': 4.1402999999995416e-05}, {'diff': 4.1402999999995416e-05}, {'diff': 4.1389000000002785e-05}, {'diff': 4.143100000000843e-05}, {'diff': 4.140199999999594e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:42.374" endtime="20201029 12:46:42.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:42.382" level="INFO">${OVERHEAD} = {'diff': [2.488900000000016e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.1389000000002785e-05, 4.143100000000843e-05, 4.140199999999594e-05, 4.1403000000009293e-05, 4.148599999999336e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:46:42.379" endtime="20201029 12:46:42.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.387" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 12:46:42.386" endtime="20201029 12:46:42.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.390" level="INFO">VALUE: [2.488900000000016e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.1389000000002785e-05, 4.143100000000843e-05, 4.140199999999594e-05, 4.1403000000009293e-05, 4.148599999999336e-05, 4.1361000000003645e-05, 4.143000000000896e-05, 4.140199999999594e-05, 4.1389000000002785e-05, 4.141599999998857e-05, 4.1402999999995416e-05, 4.1417000000001924e-05, 4.133299999999063e-05, 4.140199999999594e-05, 4.1402999999995416e-05, 4.142999999999508e-05, 4.147200000000073e-05, 4.143100000000843e-05, 4.141600000000245e-05, 4.1403000000009293e-05, 4.1402999999995416e-05, 4.1403000000009293e-05, 4.147200000000073e-05, 4.143100000000843e-05, 4.143100000000843e-05, 4.138800000000331e-05, 4.1402999999995416e-05, 4.1387999999975555e-05, 4.1402999999995416e-05, 4.13749999999824e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.14170000000158e-05, 4.138899999997503e-05, 4.14170000000158e-05, 4.1375000000010154e-05, 4.141699999998805e-05, 4.141599999998857e-05, 4.136100000001752e-05, 4.133400000000398e-05, 4.143000000000896e-05, 4.1389000000002785e-05, 4.136100000001752e-05, 4.131899999998412e-05, 4.140199999999594e-05, 4.1389000000002785e-05]</msg>
<status status="PASS" starttime="20201029 12:46:42.388" endtime="20201029 12:46:42.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.383" endtime="20201029 12:46:42.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.891" endtime="20201029 12:46:42.391"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:41.818" endtime="20201029 12:46:42.391" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:42.399" endtime="20201029 12:46:42.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.397" endtime="20201029 12:46:42.418"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.432" endtime="20201029 12:46:42.449"></status>
</kw>
<msg timestamp="20201029 12:46:42.449" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.430" endtime="20201029 12:46:42.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.452" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.450" endtime="20201029 12:46:42.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.455" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:42.453" endtime="20201029 12:46:42.455"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:42.427" endtime="20201029 12:46:42.456"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:42.425" endtime="20201029 12:46:42.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.423" endtime="20201029 12:46:42.457"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:42.460" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:42.460" endtime="20201029 12:46:42.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.458" endtime="20201029 12:46:42.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.423" endtime="20201029 12:46:42.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.422" endtime="20201029 12:46:42.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.462" endtime="20201029 12:46:42.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.421" endtime="20201029 12:46:42.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.419" endtime="20201029 12:46:42.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.396" endtime="20201029 12:46:42.465"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.473" endtime="20201029 12:46:42.495"></status>
</kw>
<msg timestamp="20201029 12:46:42.496" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.471" endtime="20201029 12:46:42.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.498" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.497" endtime="20201029 12:46:42.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.499" endtime="20201029 12:46:42.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.469" endtime="20201029 12:46:42.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.467" endtime="20201029 12:46:42.502"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.504" endtime="20201029 12:46:42.505"></status>
</kw>
<msg timestamp="20201029 12:46:42.506" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:46:42.503" endtime="20201029 12:46:42.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.510" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:46:42.509" endtime="20201029 12:46:42.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.512" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:46:42.512" endtime="20201029 12:46:42.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.507" endtime="20201029 12:46:42.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.517" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:46:42.516" endtime="20201029 12:46:42.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.519" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:46:42.518" endtime="20201029 12:46:42.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.514" endtime="20201029 12:46:42.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.528" endtime="20201029 12:46:42.815"></status>
</kw>
<msg timestamp="20201029 12:46:42.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064663861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064668444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.526" endtime="20201029 12:46:42.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064663861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064668444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.819" endtime="20201029 12:46:42.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.827" endtime="20201029 12:46:42.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.522" endtime="20201029 12:46:42.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.520" endtime="20201029 12:46:42.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:42.834" level="INFO">${RESULT} = [{'diff': 4.583000000002446e-06}, {'diff': 4.570000000009289e-06}, {'diff': 4.597000000008955e-06}, {'diff': 4.569999999995411e-06}, {'diff': 4.568999999995937e-06}, {'diff': 4.569999999995411e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:46:42.831" endtime="20201029 12:46:42.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:42.838" level="INFO">${OVERHEAD} = {'diff': [4.583000000002446e-06, 4.570000000009289e-06, 4.597000000008955e-06, 4.569999999995411e-06, 4.568999999995937e-06, 4.569999999995411e-06, 4.58400000000192e-06, 4.583000000002446e-06, 4.56899...</msg>
<status status="PASS" starttime="20201029 12:46:42.835" endtime="20201029 12:46:42.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.843" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 12:46:42.842" endtime="20201029 12:46:42.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.845" level="INFO">VALUE: [4.583000000002446e-06, 4.570000000009289e-06, 4.597000000008955e-06, 4.569999999995411e-06, 4.568999999995937e-06, 4.569999999995411e-06, 4.58400000000192e-06, 4.583000000002446e-06, 4.568999999995937e-06, 4.583000000002446e-06, 4.569999999995411e-06, 4.55600000000278e-06, 4.597000000008955e-06, 4.513999999997131e-06, 4.596999999995077e-06, 4.568999999995937e-06, 4.541999999996271e-06, 4.568999999995937e-06, 4.611000000001586e-06, 4.583000000002446e-06, 4.570000000009289e-06, 4.583000000002446e-06, 4.583000000002446e-06, 4.5829999999885684e-06, 4.58400000000192e-06, 4.542000000010149e-06, 4.569000000009815e-06, 4.568999999995937e-06, 4.5829999999885684e-06, 4.583000000002446e-06, 4.569000000009815e-06, 4.597000000008955e-06, 4.569000000009815e-06, 4.569000000009815e-06, 4.597999999994551e-06, 4.583000000002446e-06, 4.610999999987708e-06, 4.52800000000364e-06, 4.541999999996271e-06, 4.653000000007235e-06, 4.55600000000278e-06, 4.55600000000278e-06, 4.569999999995411e-06, 4.542000000010149e-06, 4.58400000000192e-06, 4.569999999995411e-06, 4.596999999995077e-06, 4.569999999995411e-06, 4.583000000002446e-06, 4.569999999995411e-06]</msg>
<status status="PASS" starttime="20201029 12:46:42.844" endtime="20201029 12:46:42.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.839" endtime="20201029 12:46:42.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.465" endtime="20201029 12:46:42.847"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:42.393" endtime="20201029 12:46:42.847" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:42.854" endtime="20201029 12:46:42.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.853" endtime="20201029 12:46:42.874"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.888" endtime="20201029 12:46:42.907"></status>
</kw>
<msg timestamp="20201029 12:46:42.908" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.887" endtime="20201029 12:46:42.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.912" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.910" endtime="20201029 12:46:42.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.917" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:42.914" endtime="20201029 12:46:42.918"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:42.884" endtime="20201029 12:46:42.918"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:42.882" endtime="20201029 12:46:42.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.881" endtime="20201029 12:46:42.919"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:42.926" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:42.925" endtime="20201029 12:46:42.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.921" endtime="20201029 12:46:42.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.880" endtime="20201029 12:46:42.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.879" endtime="20201029 12:46:42.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.929" endtime="20201029 12:46:42.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.878" endtime="20201029 12:46:42.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.875" endtime="20201029 12:46:42.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.851" endtime="20201029 12:46:42.934"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.944" endtime="20201029 12:46:42.998"></status>
</kw>
<msg timestamp="20201029 12:46:42.998" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.942" endtime="20201029 12:46:42.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.001" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.999" endtime="20201029 12:46:43.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.002" endtime="20201029 12:46:43.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.940" endtime="20201029 12:46:43.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.937" endtime="20201029 12:46:43.004"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.006" endtime="20201029 12:46:43.009"></status>
</kw>
<msg timestamp="20201029 12:46:43.009" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:46:43.005" endtime="20201029 12:46:43.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.014" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:46:43.013" endtime="20201029 12:46:43.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.016" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:46:43.015" endtime="20201029 12:46:43.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.011" endtime="20201029 12:46:43.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.021" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:46:43.020" endtime="20201029 12:46:43.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.023" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:46:43.022" endtime="20201029 12:46:43.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.017" endtime="20201029 12:46:43.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.030" endtime="20201029 12:46:43.338"></status>
</kw>
<msg timestamp="20201029 12:46:43.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080689486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080704069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.029" endtime="20201029 12:46:43.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080689486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.080704069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.342" endtime="20201029 12:46:43.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.350" endtime="20201029 12:46:43.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.026" endtime="20201029 12:46:43.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.024" endtime="20201029 12:46:43.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:43.357" level="INFO">${RESULT} = [{'diff': 1.458299999999857e-05}, {'diff': 1.4570000000005412e-05}, {'diff': 1.4597000000005078e-05}, {'diff': 1.458299999999857e-05}, {'diff': 1.4555999999998903e-05}, {'diff': 1.458400000001192e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:43.354" endtime="20201029 12:46:43.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:43.362" level="INFO">${OVERHEAD} = {'diff': [1.458299999999857e-05, 1.4570000000005412e-05, 1.4597000000005078e-05, 1.458299999999857e-05, 1.4555999999998903e-05, 1.458400000001192e-05, 1.4569000000005938e-05, 1.4583999999998043e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:46:43.358" endtime="20201029 12:46:43.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.367" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 12:46:43.366" endtime="20201029 12:46:43.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.369" level="INFO">VALUE: [1.458299999999857e-05, 1.4570000000005412e-05, 1.4597000000005078e-05, 1.458299999999857e-05, 1.4555999999998903e-05, 1.458400000001192e-05, 1.4569000000005938e-05, 1.4583999999998043e-05, 1.4638999999996849e-05, 1.4569999999991534e-05, 1.4597000000005078e-05, 1.458299999999857e-05, 1.458299999999857e-05, 1.458299999999857e-05, 1.458299999999857e-05, 1.4542000000006272e-05, 1.4597000000005078e-05, 1.4583999999998043e-05, 1.4569000000005938e-05, 1.4597000000005078e-05, 1.4569999999991534e-05, 1.4597000000005078e-05, 1.45969999999912e-05, 1.456899999999206e-05, 1.458299999999857e-05, 1.4597000000005078e-05, 1.4527999999999763e-05, 1.4541000000006798e-05, 1.4625000000004218e-05, 1.458299999999857e-05, 1.458299999999857e-05, 1.4598000000004552e-05, 1.458299999999857e-05, 1.458299999999857e-05, 1.456899999999206e-05, 1.458299999999857e-05, 1.4583000000012447e-05, 1.4583999999998043e-05, 1.45969999999912e-05, 1.456899999999206e-05, 1.45969999999912e-05, 1.4542000000006272e-05, 1.4583999999998043e-05, 1.4569000000005938e-05, 1.4570000000005412e-05, 1.4625000000004218e-05, 1.4638999999996849e-05, 1.45969999999912e-05, 1.4611000000011587e-05, 1.458299999999857e-05]</msg>
<status status="PASS" starttime="20201029 12:46:43.368" endtime="20201029 12:46:43.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.363" endtime="20201029 12:46:43.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.935" endtime="20201029 12:46:43.370"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:42.849" endtime="20201029 12:46:43.371" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:46.002" endtime="20201029 12:46:46.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.998" endtime="20201029 12:46:46.025"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.052" endtime="20201029 12:46:46.077"></status>
</kw>
<msg timestamp="20201029 12:46:46.078" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.049" endtime="20201029 12:46:46.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.084" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.081" endtime="20201029 12:46:46.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.090" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:46.086" endtime="20201029 12:46:46.090"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:46.043" endtime="20201029 12:46:46.092"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:46.039" endtime="20201029 12:46:46.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.036" endtime="20201029 12:46:46.094"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:46.099" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:46.098" endtime="20201029 12:46:46.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.096" endtime="20201029 12:46:46.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.034" endtime="20201029 12:46:46.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.033" endtime="20201029 12:46:46.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.100" endtime="20201029 12:46:46.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.030" endtime="20201029 12:46:46.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.027" endtime="20201029 12:46:46.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.996" endtime="20201029 12:46:46.103"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.115" endtime="20201029 12:46:46.249"></status>
</kw>
<msg timestamp="20201029 12:46:46.249" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.113" endtime="20201029 12:46:46.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.252" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.250" endtime="20201029 12:46:46.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.253" endtime="20201029 12:46:46.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.110" endtime="20201029 12:46:46.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.105" endtime="20201029 12:46:46.255"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.257" endtime="20201029 12:46:46.259"></status>
</kw>
<msg timestamp="20201029 12:46:46.259" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:46:46.256" endtime="20201029 12:46:46.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.264" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:46:46.263" endtime="20201029 12:46:46.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.266" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:46:46.265" endtime="20201029 12:46:46.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.260" endtime="20201029 12:46:46.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.271" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:46:46.270" endtime="20201029 12:46:46.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.273" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:46:46.272" endtime="20201029 12:46:46.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.267" endtime="20201029 12:46:46.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.280" endtime="20201029 12:46:46.575"></status>
</kw>
<msg timestamp="20201029 12:46:46.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.103428375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.103451097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.278" endtime="20201029 12:46:46.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.103428375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.103451097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.580" endtime="20201029 12:46:46.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.591" endtime="20201029 12:46:46.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.276" endtime="20201029 12:46:46.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.274" endtime="20201029 12:46:46.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:46.600" level="INFO">${RESULT} = [{'diff': 2.2722000000002796e-05}, {'diff': 2.266700000000399e-05}, {'diff': 2.269499999998925e-05}, {'diff': 2.2722000000002796e-05}, {'diff': 2.2694000000003656e-05}, {'diff': 2.2721999999988918e-05...</msg>
<status status="PASS" starttime="20201029 12:46:46.597" endtime="20201029 12:46:46.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:46:46.605" level="INFO">${OVERHEAD} = {'diff': [2.2722000000002796e-05, 2.266700000000399e-05, 2.269499999998925e-05, 2.2722000000002796e-05, 2.2694000000003656e-05, 2.2721999999988918e-05, 2.2708000000010164e-05, 2.270899999999576e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:46:46.601" endtime="20201029 12:46:46.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.610" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 12:46:46.609" endtime="20201029 12:46:46.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.613" level="INFO">VALUE: [2.2722000000002796e-05, 2.266700000000399e-05, 2.269499999998925e-05, 2.2722000000002796e-05, 2.2694000000003656e-05, 2.2721999999988918e-05, 2.2708000000010164e-05, 2.270899999999576e-05, 2.270899999999576e-05, 2.268099999999662e-05, 2.2694000000017533e-05, 2.270799999998241e-05, 2.2722000000002796e-05, 2.2735999999995427e-05, 2.2708000000010164e-05, 2.2708000000010164e-05, 2.2722000000002796e-05, 2.2722000000002796e-05, 2.2693999999989778e-05, 2.2735999999995427e-05, 2.2722000000002796e-05, 2.270799999998241e-05, 2.270799999998241e-05, 2.2722000000002796e-05, 2.2708000000010164e-05, 2.2735999999995427e-05, 2.2709000000009638e-05, 2.2722000000002796e-05, 2.2695000000017007e-05, 2.2735999999995427e-05, 2.2722000000002796e-05, 2.272300000000227e-05, 2.266700000000399e-05, 2.2722000000002796e-05, 2.2722000000002796e-05, 2.2735999999995427e-05, 2.2694000000017533e-05, 2.2735999999995427e-05, 2.2708999999981883e-05, 2.272300000000227e-05, 2.2735999999995427e-05, 2.269499999998925e-05, 2.2722000000002796e-05, 2.2708999999981883e-05, 2.2737000000022656e-05, 2.2708000000010164e-05, 2.2750000000015813e-05, 2.2749999999988058e-05, 2.2735999999995427e-05, 2.272300000000227e-05]</msg>
<status status="PASS" starttime="20201029 12:46:46.611" endtime="20201029 12:46:46.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.606" endtime="20201029 12:46:46.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.103" endtime="20201029 12:46:46.614"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:45.990" endtime="20201029 12:46:46.614" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:46.622" endtime="20201029 12:46:46.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.620" endtime="20201029 12:46:46.642"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.656" endtime="20201029 12:46:46.673"></status>
</kw>
<msg timestamp="20201029 12:46:46.674" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.654" endtime="20201029 12:46:46.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.676" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.675" endtime="20201029 12:46:46.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.680" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:46.677" endtime="20201029 12:46:46.681"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:46.652" endtime="20201029 12:46:46.681"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:46.649" endtime="20201029 12:46:46.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.648" endtime="20201029 12:46:46.682"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:46.686" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:46.685" endtime="20201029 12:46:46.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.683" endtime="20201029 12:46:46.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.647" endtime="20201029 12:46:46.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.647" endtime="20201029 12:46:46.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.688" endtime="20201029 12:46:46.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.645" endtime="20201029 12:46:46.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.643" endtime="20201029 12:46:46.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.619" endtime="20201029 12:46:46.691"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.694" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:46:46.702" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:46:47.886" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:46:46.693" endtime="20201029 12:46:47.887"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.893" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 12:46:47.889" endtime="20201029 12:46:48.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.691" endtime="20201029 12:46:48.895"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:48.902" endtime="20201029 12:46:48.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.899" endtime="20201029 12:46:48.926"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.944" endtime="20201029 12:46:48.959"></status>
</kw>
<msg timestamp="20201029 12:46:48.960" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.941" endtime="20201029 12:46:48.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.965" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.962" endtime="20201029 12:46:48.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.968" endtime="20201029 12:46:48.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.935" endtime="20201029 12:46:48.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.930" endtime="20201029 12:46:48.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.004" endtime="20201029 12:46:49.305"></status>
</kw>
<msg timestamp="20201029 12:46:49.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031548833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031568417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.996" endtime="20201029 12:46:49.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031548833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031568417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.309" endtime="20201029 12:46:49.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.317" endtime="20201029 12:46:49.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.985" endtime="20201029 12:46:49.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.976" endtime="20201029 12:46:49.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:49.324" level="INFO">${PHILIP_RES} = [{'diff': 1.9584000000003043e-05}, {'diff': 6.165999999994953e-06}, {'diff': 6.181000000000936e-06}, {'diff': 6.153000000001796e-06}, {'diff': 6.181000000000936e-06}, {'diff': 6.166999999994427e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:46:49.321" endtime="20201029 12:46:49.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:49.330" level="INFO">${RESULT} = {'diff': [1.9584000000003043e-05, 6.165999999994953e-06, 6.181000000000936e-06, 6.153000000001796e-06, 6.181000000000936e-06, 6.166999999994427e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.208...</msg>
<status status="PASS" starttime="20201029 12:46:49.325" endtime="20201029 12:46:49.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.334" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:49.333" endtime="20201029 12:46:49.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.337" level="INFO">VALUE: [1.9584000000003043e-05, 6.165999999994953e-06, 6.181000000000936e-06, 6.153000000001796e-06, 6.181000000000936e-06, 6.166999999994427e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.208000000000602e-06, 6.193999999994093e-06, 6.195000000000506e-06, 6.180000000001462e-06, 6.194000000001032e-06, 6.152999999994857e-06, 6.194000000001032e-06, 6.181000000000936e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.153000000001796e-06, 6.180000000001462e-06, 6.166999999994427e-06, 6.180000000001462e-06, 6.153000000001796e-06, 6.249999999999312e-06, 6.1379999999958135e-06, 6.181000000000936e-06, 6.153000000001796e-06, 6.181000000000936e-06, 6.166999999994427e-06, 6.180000000001462e-06, 6.181000000000936e-06, 6.153000000001796e-06, 6.180999999993997e-06, 6.181000000000936e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.152999999994857e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.166000000001892e-06, 6.166999999994427e-06, 6.167000000001366e-06, 6.152000000002322e-06, 6.181000000000936e-06, 6.179999999994523e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.194000000001032e-06, 6.195000000000506e-06, 6.125000000002656e-06]</msg>
<status status="PASS" starttime="20201029 12:46:49.335" endtime="20201029 12:46:49.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.330" endtime="20201029 12:46:49.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.927" endtime="20201029 12:46:49.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.898" endtime="20201029 12:46:49.338"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:49.341" endtime="20201029 12:46:49.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.339" endtime="20201029 12:46:49.361"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.369" endtime="20201029 12:46:49.380"></status>
</kw>
<msg timestamp="20201029 12:46:49.380" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.367" endtime="20201029 12:46:49.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.383" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.381" endtime="20201029 12:46:49.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.384" endtime="20201029 12:46:49.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.365" endtime="20201029 12:46:49.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.363" endtime="20201029 12:46:49.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.394" endtime="20201029 12:46:49.681"></status>
</kw>
<msg timestamp="20201029 12:46:49.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017023083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017032236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.392" endtime="20201029 12:46:49.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017023083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017032236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.686" endtime="20201029 12:46:49.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.695" endtime="20201029 12:46:49.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.389" endtime="20201029 12:46:49.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.388" endtime="20201029 12:46:49.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:49.703" level="INFO">${PHILIP_RES} = [{'diff': 9.152999999997857e-06}, {'diff': 8.889000000001507e-06}, {'diff': 8.901999999998134e-06}, {'diff': 8.819000000000188e-06}, {'diff': 8.889000000001507e-06}, {'diff': 8.903000000001077e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:46:49.700" endtime="20201029 12:46:49.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:49.708" level="INFO">${RESULT} = {'diff': [9.152999999997857e-06, 8.889000000001507e-06, 8.901999999998134e-06, 8.819000000000188e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.916999999997177e-06, 8.9440...</msg>
<status status="PASS" starttime="20201029 12:46:49.704" endtime="20201029 12:46:49.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.712" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:49.711" endtime="20201029 12:46:49.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.715" level="INFO">VALUE: [9.152999999997857e-06, 8.889000000001507e-06, 8.901999999998134e-06, 8.819000000000188e-06, 8.889000000001507e-06, 8.903000000001077e-06, 8.889000000001507e-06, 8.916999999997177e-06, 8.944000000000313e-06, 8.917000000000647e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.903000000001077e-06, 8.902999999997607e-06, 8.874999999998467e-06, 8.819000000000188e-06, 8.903000000001077e-06, 8.888000000002033e-06, 8.903000000001077e-06, 8.833999999999231e-06, 8.901999999998134e-06, 8.903000000001077e-06, 8.931000000000217e-06, 8.888999999998037e-06, 8.958999999999356e-06, 8.902999999997607e-06, 8.903000000001077e-06, 8.888999999998037e-06, 8.819000000000188e-06, 8.944000000000313e-06, 8.888999999998037e-06, 8.832999999999758e-06, 8.929999999997273e-06, 8.888000000002033e-06, 8.917000000000647e-06, 8.860999999998898e-06, 8.901999999998134e-06, 8.902999999997607e-06, 8.903000000001077e-06, 8.806000000000092e-06, 8.889000000001507e-06, 8.902999999997607e-06, 8.930000000000743e-06, 8.889000000001507e-06, 8.917000000000647e-06, 8.819999999999661e-06, 8.915999999997704e-06, 8.917000000000647e-06, 8.903000000001077e-06]</msg>
<status status="PASS" starttime="20201029 12:46:49.713" endtime="20201029 12:46:49.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.708" endtime="20201029 12:46:49.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.361" endtime="20201029 12:46:49.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.339" endtime="20201029 12:46:49.716"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:49.719" endtime="20201029 12:46:49.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.717" endtime="20201029 12:46:49.739"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.748" endtime="20201029 12:46:49.759"></status>
</kw>
<msg timestamp="20201029 12:46:49.759" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.745" endtime="20201029 12:46:49.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.762" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.760" endtime="20201029 12:46:49.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.763" endtime="20201029 12:46:49.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.743" endtime="20201029 12:46:49.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.741" endtime="20201029 12:46:49.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.773" endtime="20201029 12:46:50.058"></status>
</kw>
<msg timestamp="20201029 12:46:50.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01804225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018054431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:49.771" endtime="20201029 12:46:50.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01804225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018054431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:50.062" endtime="20201029 12:46:50.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.071" endtime="20201029 12:46:50.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.769" endtime="20201029 12:46:50.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.767" endtime="20201029 12:46:50.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:50.078" level="INFO">${PHILIP_RES} = [{'diff': 1.2180999999999997e-05}, {'diff': 1.1861000000001898e-05}, {'diff': 1.1860999999998428e-05}, {'diff': 1.1764000000000913e-05}, {'diff': 1.1846999999998858e-05}, {'diff': 1.1846999999998858e-...</msg>
<status status="PASS" starttime="20201029 12:46:50.074" endtime="20201029 12:46:50.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:50.082" level="INFO">${RESULT} = {'diff': [1.2180999999999997e-05, 1.1861000000001898e-05, 1.1860999999998428e-05, 1.1764000000000913e-05, 1.1846999999998858e-05, 1.1846999999998858e-05, 1.1846999999998858e-05, 1.1860999999998428e-05...</msg>
<status status="PASS" starttime="20201029 12:46:50.079" endtime="20201029 12:46:50.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.086" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:50.085" endtime="20201029 12:46:50.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.090" level="INFO">VALUE: [1.2180999999999997e-05, 1.1861000000001898e-05, 1.1860999999998428e-05, 1.1764000000000913e-05, 1.1846999999998858e-05, 1.1846999999998858e-05, 1.1846999999998858e-05, 1.1860999999998428e-05, 1.1848000000001802e-05, 1.1805999999999622e-05, 1.1861000000001898e-05, 1.1860999999998428e-05, 1.1846999999998858e-05, 1.1861000000001898e-05, 1.1833999999998762e-05, 1.1861000000001898e-05, 1.1860999999998428e-05, 1.1846999999998858e-05, 1.1861000000001898e-05, 1.1874999999997998e-05, 1.1848000000001802e-05, 1.1875000000001468e-05, 1.1846999999998858e-05, 1.1833000000002758e-05, 1.1832999999999289e-05, 1.1833999999998762e-05, 1.1861000000001898e-05, 1.1846999999998858e-05, 1.1833000000002758e-05, 1.1888999999997568e-05, 1.1875000000001468e-05, 1.1834000000002232e-05, 1.1846999999998858e-05, 1.1847000000002328e-05, 1.1860999999998428e-05, 1.1846999999998858e-05, 1.1792000000000052e-05, 1.1833999999998762e-05, 1.1903000000000608e-05, 1.1860999999998428e-05, 1.1846999999998858e-05, 1.1834000000002232e-05, 1.1847999999998332e-05, 1.1820000000002662e-05, 1.1846999999998858e-05, 1.1832999999999289e-05, 1.1847000000002328e-05, 1.1860999999998428e-05, 1.1834000000002232e-05, 1.1805999999999622e-05]</msg>
<status status="PASS" starttime="20201029 12:46:50.088" endtime="20201029 12:46:50.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.083" endtime="20201029 12:46:50.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.739" endtime="20201029 12:46:50.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.717" endtime="20201029 12:46:50.091"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:50.094" endtime="20201029 12:46:50.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.092" endtime="20201029 12:46:50.114"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.122" endtime="20201029 12:46:50.133"></status>
</kw>
<msg timestamp="20201029 12:46:50.133" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.121" endtime="20201029 12:46:50.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.136" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.135" endtime="20201029 12:46:50.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.138" endtime="20201029 12:46:50.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.118" endtime="20201029 12:46:50.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.116" endtime="20201029 12:46:50.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.147" endtime="20201029 12:46:50.433"></status>
</kw>
<msg timestamp="20201029 12:46:50.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017048264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017063542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.145" endtime="20201029 12:46:50.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017048264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017063542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.437" endtime="20201029 12:46:50.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.447" endtime="20201029 12:46:50.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.143" endtime="20201029 12:46:50.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.141" endtime="20201029 12:46:50.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:50.456" level="INFO">${PHILIP_RES} = [{'diff': 1.5278000000000513e-05}, {'diff': 1.5028000000000263e-05}, {'diff': 1.502700000000079e-05}, {'diff': 1.5028000000000263e-05}, {'diff': 1.511099999999821e-05}, {'diff': 1.5027999999996794e-05...</msg>
<status status="PASS" starttime="20201029 12:46:50.452" endtime="20201029 12:46:50.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:50.463" level="INFO">${RESULT} = {'diff': [1.5278000000000513e-05, 1.5028000000000263e-05, 1.502700000000079e-05, 1.5028000000000263e-05, 1.511099999999821e-05, 1.5027999999996794e-05, 1.5028000000000263e-05, 1.4985999999998084e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:50.458" endtime="20201029 12:46:50.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.469" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:50.468" endtime="20201029 12:46:50.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.472" level="INFO">VALUE: [1.5278000000000513e-05, 1.5028000000000263e-05, 1.502700000000079e-05, 1.5028000000000263e-05, 1.511099999999821e-05, 1.5027999999996794e-05, 1.5028000000000263e-05, 1.4985999999998084e-05, 1.5027999999996794e-05, 1.502700000000079e-05, 1.5014000000000693e-05, 1.5070000000002443e-05, 1.5028000000000263e-05, 1.5055999999999403e-05, 1.5028000000000263e-05, 1.5000000000001124e-05, 1.5028000000000263e-05, 1.504100000000036e-05, 1.502700000000079e-05, 1.5055999999999403e-05, 1.5041999999999833e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.502700000000079e-05, 1.511099999999821e-05, 1.502699999999732e-05, 1.4985999999998084e-05, 1.4999999999997654e-05, 1.5013999999997224e-05, 1.4985999999998084e-05, 1.5013999999997224e-05, 1.50689999999995e-05, 1.5027999999996794e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5055999999999403e-05, 1.5014000000000693e-05, 1.5041999999999833e-05, 1.4973000000001457e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5041999999999833e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.4985999999998084e-05, 1.502699999999732e-05]</msg>
<status status="PASS" starttime="20201029 12:46:50.471" endtime="20201029 12:46:50.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.465" endtime="20201029 12:46:50.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.114" endtime="20201029 12:46:50.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.092" endtime="20201029 12:46:50.474"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:50.477" endtime="20201029 12:46:50.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.475" endtime="20201029 12:46:50.497"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.506" endtime="20201029 12:46:50.519"></status>
</kw>
<msg timestamp="20201029 12:46:50.520" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.504" endtime="20201029 12:46:50.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.523" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.521" endtime="20201029 12:46:50.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.524" endtime="20201029 12:46:50.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.501" endtime="20201029 12:46:50.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.499" endtime="20201029 12:46:50.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.533" endtime="20201029 12:46:50.819"></status>
</kw>
<msg timestamp="20201029 12:46:50.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017200597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017219264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.532" endtime="20201029 12:46:50.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017200597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017219264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.823" endtime="20201029 12:46:50.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.832" endtime="20201029 12:46:50.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.529" endtime="20201029 12:46:50.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.527" endtime="20201029 12:46:50.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:50.839" level="INFO">${PHILIP_RES} = [{'diff': 1.866699999999999e-05}, {'diff': 1.843099999999931e-05}, {'diff': 1.8416000000000265e-05}, {'diff': 1.8429999999999835e-05}, {'diff': 1.841699999999974e-05}, {'diff': 1.843099999999931e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:50.836" endtime="20201029 12:46:50.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:50.844" level="INFO">${RESULT} = {'diff': [1.866699999999999e-05, 1.843099999999931e-05, 1.8416000000000265e-05, 1.8429999999999835e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8458000000002445e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:46:50.840" endtime="20201029 12:46:50.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.848" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:50.847" endtime="20201029 12:46:50.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.851" level="INFO">VALUE: [1.866699999999999e-05, 1.843099999999931e-05, 1.8416000000000265e-05, 1.8429999999999835e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8458000000002445e-05, 1.843100000000278e-05, 1.840300000000017e-05, 1.841699999999974e-05, 1.837499999999756e-05, 1.83890000000006e-05, 1.843099999999931e-05, 1.843099999999931e-05, 1.8486000000001584e-05, 1.843100000000278e-05, 1.841699999999974e-05, 1.8443999999999405e-05, 1.8429999999999835e-05, 1.8430000000003305e-05, 1.841699999999974e-05, 1.841699999999974e-05, 1.8443999999999405e-05, 1.8444000000002875e-05, 1.841699999999974e-05, 1.840300000000017e-05, 1.8429999999999835e-05, 1.8429999999999835e-05, 1.8499999999997685e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.8444000000002875e-05, 1.833300000000232e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8444000000002875e-05, 1.836100000000146e-05, 1.845899999999845e-05, 1.841699999999974e-05, 1.8401999999997226e-05, 1.841699999999974e-05, 1.840300000000017e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8443999999999405e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8416000000000265e-05]</msg>
<status status="PASS" starttime="20201029 12:46:50.849" endtime="20201029 12:46:50.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.845" endtime="20201029 12:46:50.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.498" endtime="20201029 12:46:50.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.474" endtime="20201029 12:46:50.852"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:50.855" endtime="20201029 12:46:50.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.853" endtime="20201029 12:46:50.875"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.884" endtime="20201029 12:46:50.897"></status>
</kw>
<msg timestamp="20201029 12:46:50.898" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.882" endtime="20201029 12:46:50.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.900" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.899" endtime="20201029 12:46:50.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.901" endtime="20201029 12:46:50.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.879" endtime="20201029 12:46:50.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.877" endtime="20201029 12:46:50.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.912" endtime="20201029 12:46:51.198"></status>
</kw>
<msg timestamp="20201029 12:46:51.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017616153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017638431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.910" endtime="20201029 12:46:51.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017616153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017638431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.202" endtime="20201029 12:46:51.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.210" endtime="20201029 12:46:51.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.907" endtime="20201029 12:46:51.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.906" endtime="20201029 12:46:51.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:51.217" level="INFO">${PHILIP_RES} = [{'diff': 2.2278000000000575e-05}, {'diff': 2.209700000000217e-05}, {'diff': 2.2040999999996952e-05}, {'diff': 2.213900000000088e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.2070000000002504e-05...</msg>
<status status="PASS" starttime="20201029 12:46:51.214" endtime="20201029 12:46:51.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:51.222" level="INFO">${RESULT} = {'diff': [2.2278000000000575e-05, 2.209700000000217e-05, 2.2040999999996952e-05, 2.213900000000088e-05, 2.2041999999999895e-05, 2.2070000000002504e-05, 2.2069999999999035e-05, 2.2055999999999465e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:51.218" endtime="20201029 12:46:51.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.226" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:51.225" endtime="20201029 12:46:51.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.229" level="INFO">VALUE: [2.2278000000000575e-05, 2.209700000000217e-05, 2.2040999999996952e-05, 2.213900000000088e-05, 2.2041999999999895e-05, 2.2070000000002504e-05, 2.2069999999999035e-05, 2.2055999999999465e-05, 2.204100000000042e-05, 2.205499999999999e-05, 2.205499999999999e-05, 2.2069999999999035e-05, 2.2041999999999895e-05, 2.2056000000002934e-05, 2.2055999999999465e-05, 2.205499999999999e-05, 2.206899999999956e-05, 2.212499999999784e-05, 2.2041999999999895e-05, 2.2069999999999035e-05, 2.2070000000002504e-05, 2.2055999999999465e-05, 2.204100000000042e-05, 2.205499999999999e-05, 2.205499999999999e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.2055999999999465e-05, 2.2041999999999895e-05, 2.206899999999956e-05, 2.204100000000042e-05, 2.206899999999956e-05, 2.2069999999999035e-05, 2.2083999999998605e-05, 2.2013999999997286e-05, 2.2055999999999465e-05, 2.206899999999956e-05, 2.204100000000042e-05, 2.205499999999999e-05, 2.2014000000000755e-05, 2.2055999999999465e-05, 2.2069999999999035e-05, 2.2028000000000325e-05, 2.206899999999956e-05, 2.205499999999999e-05, 2.204100000000042e-05, 2.1972000000002045e-05, 2.2055999999999465e-05, 2.2069999999999035e-05, 2.209700000000217e-05]</msg>
<status status="PASS" starttime="20201029 12:46:51.227" endtime="20201029 12:46:51.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.222" endtime="20201029 12:46:51.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.875" endtime="20201029 12:46:51.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.853" endtime="20201029 12:46:51.231"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:51.233" endtime="20201029 12:46:51.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.232" endtime="20201029 12:46:51.253"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.262" endtime="20201029 12:46:51.275"></status>
</kw>
<msg timestamp="20201029 12:46:51.276" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.261" endtime="20201029 12:46:51.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.278" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.277" endtime="20201029 12:46:51.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.279" endtime="20201029 12:46:51.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.258" endtime="20201029 12:46:51.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.256" endtime="20201029 12:46:51.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.289" endtime="20201029 12:46:51.575"></status>
</kw>
<msg timestamp="20201029 12:46:51.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017535153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017561319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.287" endtime="20201029 12:46:51.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017535153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017561319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.579" endtime="20201029 12:46:51.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.587" endtime="20201029 12:46:51.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.284" endtime="20201029 12:46:51.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.282" endtime="20201029 12:46:51.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:51.594" level="INFO">${PHILIP_RES} = [{'diff': 2.6165999999997608e-05}, {'diff': 2.590300000000073e-05}, {'diff': 2.590299999999726e-05}, {'diff': 2.590299999999726e-05}, {'diff': 2.588899999999769e-05}, {'diff': 2.584700000000245e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:51.591" endtime="20201029 12:46:51.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:51.599" level="INFO">${RESULT} = {'diff': [2.6165999999997608e-05, 2.590300000000073e-05, 2.590299999999726e-05, 2.590299999999726e-05, 2.588899999999769e-05, 2.584700000000245e-05, 2.5846999999998982e-05, 2.5902000000001257e-05, 2.5...</msg>
<status status="PASS" starttime="20201029 12:46:51.595" endtime="20201029 12:46:51.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.604" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:51.603" endtime="20201029 12:46:51.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.606" level="INFO">VALUE: [2.6165999999997608e-05, 2.590300000000073e-05, 2.590299999999726e-05, 2.590299999999726e-05, 2.588899999999769e-05, 2.584700000000245e-05, 2.5846999999998982e-05, 2.5902000000001257e-05, 2.590300000000073e-05, 2.59170000000003e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.5902000000001257e-05, 2.5916000000000827e-05, 2.5916000000000827e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.588900000000116e-05, 2.588900000000116e-05, 2.5902000000001257e-05, 2.588900000000116e-05, 2.590300000000073e-05, 2.5860999999998552e-05, 2.590300000000073e-05, 2.59170000000003e-05, 2.5818999999999842e-05, 2.5901999999997788e-05, 2.590299999999726e-05, 2.590299999999726e-05, 2.5957999999999537e-05, 2.588900000000116e-05, 2.590300000000073e-05, 2.5916000000000827e-05, 2.5902000000001257e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.59170000000003e-05, 2.590300000000073e-05, 2.5902000000001257e-05, 2.5902000000001257e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.59170000000003e-05, 2.590300000000073e-05, 2.590300000000073e-05, 2.5902000000001257e-05, 2.588899999999769e-05, 2.590300000000073e-05, 2.588899999999769e-05]</msg>
<status status="PASS" starttime="20201029 12:46:51.605" endtime="20201029 12:46:51.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.600" endtime="20201029 12:46:51.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.254" endtime="20201029 12:46:51.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.231" endtime="20201029 12:46:51.608"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:51.610" endtime="20201029 12:46:51.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.609" endtime="20201029 12:46:51.630"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.639" endtime="20201029 12:46:51.652"></status>
</kw>
<msg timestamp="20201029 12:46:51.652" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.637" endtime="20201029 12:46:51.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.655" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.653" endtime="20201029 12:46:51.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.656" endtime="20201029 12:46:51.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.635" endtime="20201029 12:46:51.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.632" endtime="20201029 12:46:51.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.665" endtime="20201029 12:46:51.955"></status>
</kw>
<msg timestamp="20201029 12:46:51.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017560056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017590264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.664" endtime="20201029 12:46:51.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017560056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017590264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.959" endtime="20201029 12:46:51.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.968" endtime="20201029 12:46:51.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.661" endtime="20201029 12:46:51.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.659" endtime="20201029 12:46:51.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:51.975" level="INFO">${PHILIP_RES} = [{'diff': 3.0208000000000318e-05}, {'diff': 2.994499999999997e-05}, {'diff': 2.9986000000002677e-05}, {'diff': 2.9985999999999208e-05}, {'diff': 2.997300000000258e-05}, {'diff': 2.9930000000000928e-05...</msg>
<status status="PASS" starttime="20201029 12:46:51.971" endtime="20201029 12:46:51.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:51.979" level="INFO">${RESULT} = {'diff': [3.0208000000000318e-05, 2.994499999999997e-05, 2.9986000000002677e-05, 2.9985999999999208e-05, 2.997300000000258e-05, 2.9930000000000928e-05, 3.0040999999998014e-05, 3.0028000000001387e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:51.976" endtime="20201029 12:46:51.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.983" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:51.982" endtime="20201029 12:46:51.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.986" level="INFO">VALUE: [3.0208000000000318e-05, 2.994499999999997e-05, 2.9986000000002677e-05, 2.9985999999999208e-05, 2.997300000000258e-05, 2.9930000000000928e-05, 3.0040999999998014e-05, 3.0028000000001387e-05, 2.9985999999999208e-05, 2.994499999999997e-05, 3.0013999999998348e-05, 2.9944000000000498e-05, 2.9985999999999208e-05, 3.0014000000001817e-05, 2.9971999999999638e-05, 3.0000000000002247e-05, 2.9985999999999208e-05, 2.9986000000002677e-05, 2.9985999999999208e-05, 2.9944000000000498e-05, 2.9971999999999638e-05, 3.0013999999998348e-05, 2.9971999999999638e-05, 2.997299999999911e-05, 2.9971999999999638e-05, 2.9999999999998778e-05, 2.9986000000002677e-05, 2.9985999999999208e-05, 2.9972000000003107e-05, 2.994499999999997e-05, 3.0041999999997487e-05, 2.9999999999998778e-05, 2.9889000000001692e-05, 2.9971999999999638e-05, 2.9985999999999208e-05, 3.0013999999998348e-05, 2.9903000000001262e-05, 2.995899999999954e-05, 2.9944000000000498e-05, 2.9985999999999208e-05, 2.998699999999868e-05, 2.9971999999999638e-05, 2.9958000000000068e-05, 2.9958000000000068e-05, 2.9958000000000068e-05, 2.9971999999999638e-05, 3.0013999999998348e-05, 2.9985999999999208e-05, 3.0014000000001817e-05, 2.9971999999999638e-05]</msg>
<status status="PASS" starttime="20201029 12:46:51.985" endtime="20201029 12:46:51.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.980" endtime="20201029 12:46:51.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.631" endtime="20201029 12:46:51.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.608" endtime="20201029 12:46:51.988"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:51.990" endtime="20201029 12:46:52.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.988" endtime="20201029 12:46:52.011"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.021" endtime="20201029 12:46:52.033"></status>
</kw>
<msg timestamp="20201029 12:46:52.034" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.019" endtime="20201029 12:46:52.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.036" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.035" endtime="20201029 12:46:52.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.038" endtime="20201029 12:46:52.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.016" endtime="20201029 12:46:52.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.014" endtime="20201029 12:46:52.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.048" endtime="20201029 12:46:52.334"></status>
</kw>
<msg timestamp="20201029 12:46:52.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019406139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019440681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.046" endtime="20201029 12:46:52.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019406139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019440681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.338" endtime="20201029 12:46:52.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.347" endtime="20201029 12:46:52.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.043" endtime="20201029 12:46:52.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.042" endtime="20201029 12:46:52.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:52.354" level="INFO">${PHILIP_RES} = [{'diff': 3.454200000000199e-05}, {'diff': 3.429199999999827e-05}, {'diff': 3.429199999999827e-05}, {'diff': 3.4290999999998795e-05}, {'diff': 3.422200000000042e-05}, {'diff': 3.429200000000174e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:52.350" endtime="20201029 12:46:52.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:52.358" level="INFO">${RESULT} = {'diff': [3.454200000000199e-05, 3.429199999999827e-05, 3.429199999999827e-05, 3.4290999999998795e-05, 3.422200000000042e-05, 3.429200000000174e-05, 3.4290999999998795e-05, 3.42779999999987e-05, 3.427...</msg>
<status status="PASS" starttime="20201029 12:46:52.355" endtime="20201029 12:46:52.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.362" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:52.361" endtime="20201029 12:46:52.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.365" level="INFO">VALUE: [3.454200000000199e-05, 3.429199999999827e-05, 3.429199999999827e-05, 3.4290999999998795e-05, 3.422200000000042e-05, 3.429200000000174e-05, 3.4290999999998795e-05, 3.42779999999987e-05, 3.427800000000217e-05, 3.4291000000002264e-05, 3.422200000000042e-05, 3.42779999999987e-05, 3.426399999999913e-05, 3.42640000000026e-05, 3.42779999999987e-05, 3.4262999999999655e-05, 3.426399999999913e-05, 3.427800000000217e-05, 3.427800000000217e-05, 3.42779999999987e-05, 3.426399999999913e-05, 3.426399999999913e-05, 3.430600000000131e-05, 3.426399999999913e-05, 3.422299999999989e-05, 3.427800000000217e-05, 3.427800000000217e-05, 3.42779999999987e-05, 3.429199999999827e-05, 3.42779999999987e-05, 3.4291000000002264e-05, 3.429200000000174e-05, 3.429199999999827e-05, 3.4290999999998795e-05, 3.422200000000042e-05, 3.419400000000128e-05, 3.42779999999987e-05, 3.426399999999913e-05, 3.430600000000131e-05, 3.4291000000002264e-05, 3.42779999999987e-05, 3.430599999999784e-05, 3.424999999999956e-05, 3.42640000000026e-05, 3.426399999999913e-05, 3.42779999999987e-05, 3.426399999999913e-05, 3.430600000000131e-05, 3.4291000000002264e-05, 3.430600000000131e-05]</msg>
<status status="PASS" starttime="20201029 12:46:52.363" endtime="20201029 12:46:52.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.359" endtime="20201029 12:46:52.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.012" endtime="20201029 12:46:52.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.988" endtime="20201029 12:46:52.367"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:52.370" endtime="20201029 12:46:52.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.369" endtime="20201029 12:46:52.390"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.398" endtime="20201029 12:46:52.412"></status>
</kw>
<msg timestamp="20201029 12:46:52.413" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.397" endtime="20201029 12:46:52.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.415" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.414" endtime="20201029 12:46:52.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.417" endtime="20201029 12:46:52.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.394" endtime="20201029 12:46:52.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.392" endtime="20201029 12:46:52.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.426" endtime="20201029 12:46:52.713"></status>
</kw>
<msg timestamp="20201029 12:46:52.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017039028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017078083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.424" endtime="20201029 12:46:52.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017039028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017078083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.717" endtime="20201029 12:46:52.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.726" endtime="20201029 12:46:52.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.422" endtime="20201029 12:46:52.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.420" endtime="20201029 12:46:52.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:52.733" level="INFO">${PHILIP_RES} = [{'diff': 3.9054999999999646e-05}, {'diff': 3.8847000000001575e-05}, {'diff': 3.881999999999844e-05}, {'diff': 3.880599999999887e-05}, {'diff': 3.8804999999999396e-05}, {'diff': 3.8777000000000256e-05...</msg>
<status status="PASS" starttime="20201029 12:46:52.730" endtime="20201029 12:46:52.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:52.739" level="INFO">${RESULT} = {'diff': [3.9054999999999646e-05, 3.8847000000001575e-05, 3.881999999999844e-05, 3.880599999999887e-05, 3.8804999999999396e-05, 3.8777000000000256e-05, 3.880599999999887e-05, 3.87919999999993e-05, 3.8...</msg>
<status status="PASS" starttime="20201029 12:46:52.734" endtime="20201029 12:46:52.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.743" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:52.742" endtime="20201029 12:46:52.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.746" level="INFO">VALUE: [3.9054999999999646e-05, 3.8847000000001575e-05, 3.881999999999844e-05, 3.880599999999887e-05, 3.8804999999999396e-05, 3.8777000000000256e-05, 3.880599999999887e-05, 3.87919999999993e-05, 3.8804999999999396e-05, 3.8804999999999396e-05, 3.8818999999998965e-05, 3.880599999999887e-05, 3.879200000000277e-05, 3.8861000000001145e-05, 3.875000000000059e-05, 3.876400000000016e-05, 3.880599999999887e-05, 3.8804999999999396e-05, 3.8804999999999396e-05, 3.87919999999993e-05, 3.880600000000234e-05, 3.877799999999973e-05, 3.8861000000001145e-05, 3.8832999999998535e-05, 3.875000000000059e-05, 3.880599999999887e-05, 3.8790999999999826e-05, 3.8874999999997245e-05, 3.880600000000234e-05, 3.880599999999887e-05, 3.8804999999999396e-05, 3.8804999999999396e-05, 3.8819000000002435e-05, 3.880599999999887e-05, 3.881999999999844e-05, 3.8804999999999396e-05, 3.8804999999999396e-05, 3.8832999999998535e-05, 3.877799999999973e-05, 3.8804999999999396e-05, 3.8804999999999396e-05, 3.87919999999993e-05, 3.883399999999801e-05, 3.879200000000277e-05, 3.8833000000002005e-05, 3.87919999999993e-05, 3.87919999999993e-05, 3.877799999999973e-05, 3.87919999999993e-05, 3.8818999999998965e-05]</msg>
<status status="PASS" starttime="20201029 12:46:52.745" endtime="20201029 12:46:52.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.740" endtime="20201029 12:46:52.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.391" endtime="20201029 12:46:52.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.367" endtime="20201029 12:46:52.748"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:52.751" endtime="20201029 12:46:52.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.749" endtime="20201029 12:46:52.770"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.779" endtime="20201029 12:46:52.793"></status>
</kw>
<msg timestamp="20201029 12:46:52.793" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.777" endtime="20201029 12:46:52.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.796" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.794" endtime="20201029 12:46:52.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.797" endtime="20201029 12:46:52.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.775" endtime="20201029 12:46:52.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.773" endtime="20201029 12:46:52.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.806" endtime="20201029 12:46:53.091"></status>
</kw>
<msg timestamp="20201029 12:46:53.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017040097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017083958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.805" endtime="20201029 12:46:53.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017040097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017083958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.096" endtime="20201029 12:46:53.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.104" endtime="20201029 12:46:53.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.802" endtime="20201029 12:46:53.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.800" endtime="20201029 12:46:53.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:53.112" level="INFO">${PHILIP_RES} = [{'diff': 4.3860999999999206e-05}, {'diff': 4.356999999999972e-05}, {'diff': 4.3596999999999386e-05}, {'diff': 4.355600000000015e-05}, {'diff': 4.354200000000058e-05}, {'diff': 4.3555000000000677e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:53.109" endtime="20201029 12:46:53.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:53.116" level="INFO">${RESULT} = {'diff': [4.3860999999999206e-05, 4.356999999999972e-05, 4.3596999999999386e-05, 4.355600000000015e-05, 4.354200000000058e-05, 4.3555000000000677e-05, 4.3569000000000246e-05, 4.354200000000058e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:46:53.113" endtime="20201029 12:46:53.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.121" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:53.120" endtime="20201029 12:46:53.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.123" level="INFO">VALUE: [4.3860999999999206e-05, 4.356999999999972e-05, 4.3596999999999386e-05, 4.355600000000015e-05, 4.354200000000058e-05, 4.3555000000000677e-05, 4.3569000000000246e-05, 4.354200000000058e-05, 4.356899999999678e-05, 4.355600000000015e-05, 4.348599999999883e-05, 4.3569000000000246e-05, 4.34999999999984e-05, 4.354200000000058e-05, 4.3569000000000246e-05, 4.3555000000000677e-05, 4.355600000000015e-05, 4.3597000000002856e-05, 4.352700000000154e-05, 4.355600000000015e-05, 4.352800000000101e-05, 4.3569000000000246e-05, 4.355600000000015e-05, 4.354200000000058e-05, 4.352699999999807e-05, 4.355600000000015e-05, 4.351399999999797e-05, 4.3541000000001107e-05, 4.3569000000000246e-05, 4.356999999999972e-05, 4.3541000000001107e-05, 4.3582999999999816e-05, 4.359799999999886e-05, 4.350000000000187e-05, 4.3555000000000677e-05, 4.34999999999984e-05, 4.354200000000058e-05, 4.3555000000000677e-05, 4.355600000000015e-05, 4.3569000000000246e-05, 4.354099999999764e-05, 4.354200000000058e-05, 4.3624999999998526e-05, 4.3555000000000677e-05, 4.354199999999711e-05, 4.354200000000058e-05, 4.3555000000000677e-05, 4.3596999999999386e-05, 4.354200000000058e-05, 4.3555000000000677e-05]</msg>
<status status="PASS" starttime="20201029 12:46:53.122" endtime="20201029 12:46:53.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.117" endtime="20201029 12:46:53.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.771" endtime="20201029 12:46:53.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.748" endtime="20201029 12:46:53.125"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:53.128" endtime="20201029 12:46:53.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.126" endtime="20201029 12:46:53.147"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.156" endtime="20201029 12:46:53.171"></status>
</kw>
<msg timestamp="20201029 12:46:53.171" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.154" endtime="20201029 12:46:53.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.174" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.172" endtime="20201029 12:46:53.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.175" endtime="20201029 12:46:53.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.152" endtime="20201029 12:46:53.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.150" endtime="20201029 12:46:53.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.185" endtime="20201029 12:46:53.472"></status>
</kw>
<msg timestamp="20201029 12:46:53.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017039694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017088514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.183" endtime="20201029 12:46:53.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017039694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017088514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.476" endtime="20201029 12:46:53.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.484" endtime="20201029 12:46:53.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.181" endtime="20201029 12:46:53.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.179" endtime="20201029 12:46:53.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:53.491" level="INFO">${PHILIP_RES} = [{'diff': 4.881999999999803e-05}, {'diff': 4.85139999999995e-05}, {'diff': 4.852799999999907e-05}, {'diff': 4.854200000000211e-05}, {'diff': 4.854100000000264e-05}, {'diff': 4.85139999999995e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:53.488" endtime="20201029 12:46:53.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:53.495" level="INFO">${RESULT} = {'diff': [4.881999999999803e-05, 4.85139999999995e-05, 4.852799999999907e-05, 4.854200000000211e-05, 4.854100000000264e-05, 4.85139999999995e-05, 4.854199999999864e-05, 4.854099999999917e-05, 4.852799...</msg>
<status status="PASS" starttime="20201029 12:46:53.492" endtime="20201029 12:46:53.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.500" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:53.499" endtime="20201029 12:46:53.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.502" level="INFO">VALUE: [4.881999999999803e-05, 4.85139999999995e-05, 4.852799999999907e-05, 4.854200000000211e-05, 4.854100000000264e-05, 4.85139999999995e-05, 4.854199999999864e-05, 4.854099999999917e-05, 4.852799999999907e-05, 4.852799999999907e-05, 4.854199999999864e-05, 4.854199999999864e-05, 4.85269999999996e-05, 4.852800000000254e-05, 4.852800000000254e-05, 4.85139999999995e-05, 4.85139999999995e-05, 4.85269999999996e-05, 4.85139999999995e-05, 4.854199999999864e-05, 4.848600000000036e-05, 4.85139999999995e-05, 4.854100000000264e-05, 4.849999999999993e-05, 4.85139999999995e-05, 4.85269999999996e-05, 4.854199999999864e-05, 4.85269999999996e-05, 4.854199999999864e-05, 4.855600000000168e-05, 4.845800000000122e-05, 4.852800000000254e-05, 4.849999999999993e-05, 4.852799999999907e-05, 4.85139999999995e-05, 4.855599999999821e-05, 4.847200000000079e-05, 4.852799999999907e-05, 4.852800000000254e-05, 4.852800000000254e-05, 4.85269999999996e-05, 4.852800000000254e-05, 4.854199999999864e-05, 4.854199999999864e-05, 4.85269999999996e-05, 4.85269999999996e-05, 4.852800000000254e-05, 4.852800000000254e-05, 4.854199999999864e-05, 4.852799999999907e-05]</msg>
<status status="PASS" starttime="20201029 12:46:53.501" endtime="20201029 12:46:53.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.496" endtime="20201029 12:46:53.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.148" endtime="20201029 12:46:53.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.126" endtime="20201029 12:46:53.505"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:53.507" endtime="20201029 12:46:53.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.506" endtime="20201029 12:46:53.527"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.536" endtime="20201029 12:46:53.551"></status>
</kw>
<msg timestamp="20201029 12:46:53.551" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.534" endtime="20201029 12:46:53.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.554" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.552" endtime="20201029 12:46:53.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.555" endtime="20201029 12:46:53.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.531" endtime="20201029 12:46:53.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.529" endtime="20201029 12:46:53.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.564" endtime="20201029 12:46:53.850"></status>
</kw>
<msg timestamp="20201029 12:46:53.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017096556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017150556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.563" endtime="20201029 12:46:53.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017096556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017150556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.856" endtime="20201029 12:46:53.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.866" endtime="20201029 12:46:53.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.560" endtime="20201029 12:46:53.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.558" endtime="20201029 12:46:53.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:53.874" level="INFO">${PHILIP_RES} = [{'diff': 5.400000000000196e-05}, {'diff': 5.372300000000205e-05}, {'diff': 5.370899999999901e-05}, {'diff': 5.3707999999999534e-05}, {'diff': 5.3735999999998674e-05}, {'diff': 5.3721999999999104e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:53.870" endtime="20201029 12:46:53.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:53.881" level="INFO">${RESULT} = {'diff': [5.400000000000196e-05, 5.372300000000205e-05, 5.370899999999901e-05, 5.3707999999999534e-05, 5.3735999999998674e-05, 5.3721999999999104e-05, 5.3735999999998674e-05, 5.3666000000000824e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:46:53.876" endtime="20201029 12:46:53.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.885" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:53.884" endtime="20201029 12:46:53.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.888" level="INFO">VALUE: [5.400000000000196e-05, 5.372300000000205e-05, 5.370899999999901e-05, 5.3707999999999534e-05, 5.3735999999998674e-05, 5.3721999999999104e-05, 5.3735999999998674e-05, 5.3666000000000824e-05, 5.3721999999999104e-05, 5.3749999999998244e-05, 5.373699999999815e-05, 5.381900000000009e-05, 5.376400000000128e-05, 5.368099999999987e-05, 5.372200000000257e-05, 5.3708000000003e-05, 5.372200000000257e-05, 5.373600000000214e-05, 5.3749999999998244e-05, 5.373600000000214e-05, 5.375000000000171e-05, 5.3735999999998674e-05, 5.3749999999998244e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.377800000000085e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.3665999999997355e-05, 5.373600000000214e-05, 5.373700000000162e-05, 5.372300000000205e-05, 5.379100000000095e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.3777999999997383e-05, 5.3721999999999104e-05, 5.3707999999999534e-05, 5.3666000000000824e-05, 5.3721999999999104e-05, 5.372299999999858e-05, 5.373699999999815e-05, 5.3735999999998674e-05, 5.36670000000003e-05, 5.3735999999998674e-05, 5.3735999999998674e-05, 5.3707999999999534e-05, 5.3707999999999534e-05, 5.3721999999999104e-05, 5.373600000000214e-05]</msg>
<status status="PASS" starttime="20201029 12:46:53.886" endtime="20201029 12:46:53.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.882" endtime="20201029 12:46:53.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.528" endtime="20201029 12:46:53.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.505" endtime="20201029 12:46:53.890"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:53.892" endtime="20201029 12:46:53.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.891" endtime="20201029 12:46:53.912"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.921" endtime="20201029 12:46:53.936"></status>
</kw>
<msg timestamp="20201029 12:46:53.937" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.919" endtime="20201029 12:46:53.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.939" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.938" endtime="20201029 12:46:53.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.940" endtime="20201029 12:46:53.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.916" endtime="20201029 12:46:53.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.914" endtime="20201029 12:46:53.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.950" endtime="20201029 12:46:54.236"></status>
</kw>
<msg timestamp="20201029 12:46:54.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017225097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017284514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.948" endtime="20201029 12:46:54.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017225097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017284514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.240" endtime="20201029 12:46:54.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.248" endtime="20201029 12:46:54.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.945" endtime="20201029 12:46:54.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.944" endtime="20201029 12:46:54.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:54.256" level="INFO">${PHILIP_RES} = [{'diff': 5.941699999999911e-05}, {'diff': 5.916699999999886e-05}, {'diff': 5.9151999999999816e-05}, {'diff': 5.918099999999843e-05}, {'diff': 5.916700000000233e-05}, {'diff': 5.915299999999929e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:54.253" endtime="20201029 12:46:54.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:54.260" level="INFO">${RESULT} = {'diff': [5.941699999999911e-05, 5.916699999999886e-05, 5.9151999999999816e-05, 5.918099999999843e-05, 5.916700000000233e-05, 5.915299999999929e-05, 5.915299999999929e-05, 5.9151999999999816e-05, 5.91...</msg>
<status status="PASS" starttime="20201029 12:46:54.257" endtime="20201029 12:46:54.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.265" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:54.264" endtime="20201029 12:46:54.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.267" level="INFO">VALUE: [5.941699999999911e-05, 5.916699999999886e-05, 5.9151999999999816e-05, 5.918099999999843e-05, 5.916700000000233e-05, 5.915299999999929e-05, 5.915299999999929e-05, 5.9151999999999816e-05, 5.915299999999929e-05, 5.915300000000276e-05, 5.915300000000276e-05, 5.9166000000002855e-05, 5.9151999999999816e-05, 5.909699999999754e-05, 5.913899999999972e-05, 5.915299999999929e-05, 5.915299999999929e-05, 5.9151999999999816e-05, 5.915299999999929e-05, 5.913899999999972e-05, 5.916699999999886e-05, 5.9194000000001995e-05, 5.915299999999929e-05, 5.916699999999886e-05, 5.915299999999929e-05, 5.9193999999998526e-05, 5.9151999999999816e-05, 5.916699999999886e-05, 5.915299999999929e-05, 5.918099999999843e-05, 5.915299999999929e-05, 5.9193999999998526e-05, 5.912500000000015e-05, 5.915299999999929e-05, 5.916699999999886e-05, 5.915299999999929e-05, 5.911100000000058e-05, 5.922299999999714e-05, 5.916699999999886e-05, 5.916699999999886e-05, 5.915300000000276e-05, 5.911100000000058e-05, 5.915300000000276e-05, 5.912500000000015e-05, 5.913899999999972e-05, 5.911099999999711e-05, 5.915299999999929e-05, 5.91810000000019e-05, 5.912500000000015e-05, 5.915299999999929e-05]</msg>
<status status="PASS" starttime="20201029 12:46:54.266" endtime="20201029 12:46:54.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.261" endtime="20201029 12:46:54.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.913" endtime="20201029 12:46:54.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.890" endtime="20201029 12:46:54.275"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:54.277" endtime="20201029 12:46:54.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.276" endtime="20201029 12:46:54.297"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.306" endtime="20201029 12:46:54.322"></status>
</kw>
<msg timestamp="20201029 12:46:54.322" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.304" endtime="20201029 12:46:54.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.325" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.323" endtime="20201029 12:46:54.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.326" endtime="20201029 12:46:54.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.301" endtime="20201029 12:46:54.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.299" endtime="20201029 12:46:54.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.336" endtime="20201029 12:46:54.622"></status>
</kw>
<msg timestamp="20201029 12:46:54.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017112319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017177403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.335" endtime="20201029 12:46:54.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017112319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017177403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.626" endtime="20201029 12:46:54.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.634" endtime="20201029 12:46:54.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.332" endtime="20201029 12:46:54.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.330" endtime="20201029 12:46:54.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:54.641" level="INFO">${PHILIP_RES} = [{'diff': 6.508399999999998e-05}, {'diff': 6.480499999999764e-05}, {'diff': 6.477700000000197e-05}, {'diff': 6.480599999999712e-05}, {'diff': 6.473599999999927e-05}, {'diff': 6.479100000000154e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:54.638" endtime="20201029 12:46:54.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:54.645" level="INFO">${RESULT} = {'diff': [6.508399999999998e-05, 6.480499999999764e-05, 6.477700000000197e-05, 6.480599999999712e-05, 6.473599999999927e-05, 6.479100000000154e-05, 6.481899999999721e-05, 6.482000000000016e-05, 6.4790...</msg>
<status status="PASS" starttime="20201029 12:46:54.642" endtime="20201029 12:46:54.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.650" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:54.649" endtime="20201029 12:46:54.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.652" level="INFO">VALUE: [6.508399999999998e-05, 6.480499999999764e-05, 6.477700000000197e-05, 6.480599999999712e-05, 6.473599999999927e-05, 6.479100000000154e-05, 6.481899999999721e-05, 6.482000000000016e-05, 6.479099999999807e-05, 6.47639999999984e-05, 6.482000000000016e-05, 6.47769999999985e-05, 6.474999999999884e-05, 6.482000000000016e-05, 6.477799999999798e-05, 6.479100000000154e-05, 6.482000000000016e-05, 6.479200000000102e-05, 6.47219999999997e-05, 6.47639999999984e-05, 6.480600000000059e-05, 6.47769999999985e-05, 6.479200000000102e-05, 6.477800000000145e-05, 6.479099999999807e-05, 6.477800000000145e-05, 6.479200000000102e-05, 6.480500000000111e-05, 6.47639999999984e-05, 6.480599999999712e-05, 6.47769999999985e-05, 6.480500000000111e-05, 6.480599999999712e-05, 6.480600000000059e-05, 6.47639999999984e-05, 6.480600000000059e-05, 6.481900000000068e-05, 6.480499999999764e-05, 6.480600000000059e-05, 6.473700000000221e-05, 6.479099999999807e-05, 6.477800000000145e-05, 6.482000000000016e-05, 6.480500000000111e-05, 6.480600000000059e-05, 6.482000000000016e-05, 6.480500000000111e-05, 6.47639999999984e-05, 6.480600000000059e-05, 6.480500000000111e-05]</msg>
<status status="PASS" starttime="20201029 12:46:54.651" endtime="20201029 12:46:54.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.646" endtime="20201029 12:46:54.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.298" endtime="20201029 12:46:54.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.275" endtime="20201029 12:46:54.655"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:54.658" endtime="20201029 12:46:54.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.656" endtime="20201029 12:46:54.678"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.686" endtime="20201029 12:46:54.703"></status>
</kw>
<msg timestamp="20201029 12:46:54.704" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.684" endtime="20201029 12:46:54.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.706" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.705" endtime="20201029 12:46:54.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.708" endtime="20201029 12:46:54.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.682" endtime="20201029 12:46:54.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.680" endtime="20201029 12:46:54.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.717" endtime="20201029 12:46:55.003"></status>
</kw>
<msg timestamp="20201029 12:46:55.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01709525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017166181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:54.715" endtime="20201029 12:46:55.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01709525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017166181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:55.007" endtime="20201029 12:46:55.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.015" endtime="20201029 12:46:55.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.713" endtime="20201029 12:46:55.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.711" endtime="20201029 12:46:55.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:55.024" level="INFO">${PHILIP_RES} = [{'diff': 7.093099999999977e-05}, {'diff': 7.063900000000081e-05}, {'diff': 7.069399999999962e-05}, {'diff': 7.068099999999952e-05}, {'diff': 7.069499999999909e-05}, {'diff': 7.068000000000005e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:55.020" endtime="20201029 12:46:55.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:55.029" level="INFO">${RESULT} = {'diff': [7.093099999999977e-05, 7.063900000000081e-05, 7.069399999999962e-05, 7.068099999999952e-05, 7.069499999999909e-05, 7.068000000000005e-05, 7.066600000000048e-05, 7.068099999999952e-05, 7.0736...</msg>
<status status="PASS" starttime="20201029 12:46:55.025" endtime="20201029 12:46:55.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.033" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:55.032" endtime="20201029 12:46:55.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.036" level="INFO">VALUE: [7.093099999999977e-05, 7.063900000000081e-05, 7.069399999999962e-05, 7.068099999999952e-05, 7.069499999999909e-05, 7.068000000000005e-05, 7.066600000000048e-05, 7.068099999999952e-05, 7.07360000000018e-05, 7.069399999999962e-05, 7.068000000000005e-05, 7.068000000000005e-05, 7.070899999999866e-05, 7.068099999999952e-05, 7.068000000000005e-05, 7.069399999999962e-05, 7.068099999999952e-05, 7.069499999999909e-05, 7.068000000000005e-05, 7.065300000000038e-05, 7.066699999999995e-05, 7.066699999999995e-05, 7.076400000000094e-05, 7.068000000000005e-05, 7.069399999999962e-05, 7.069499999999909e-05, 7.066699999999995e-05, 7.066600000000048e-05, 7.068000000000005e-05, 7.068099999999952e-05, 7.06109999999982e-05, 7.069399999999962e-05, 7.069399999999962e-05, 7.065300000000038e-05, 7.068099999999952e-05, 7.063899999999734e-05, 7.068000000000005e-05, 7.068000000000005e-05, 7.068099999999952e-05, 7.075000000000137e-05, 7.068099999999952e-05, 7.068000000000005e-05, 7.068000000000005e-05, 7.069499999999909e-05, 7.068099999999952e-05, 7.068000000000005e-05, 7.07360000000018e-05, 7.068099999999952e-05, 7.068099999999952e-05, 7.066600000000048e-05]</msg>
<status status="PASS" starttime="20201029 12:46:55.034" endtime="20201029 12:46:55.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.030" endtime="20201029 12:46:55.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.678" endtime="20201029 12:46:55.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.656" endtime="20201029 12:46:55.038"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:55.040" endtime="20201029 12:46:55.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.039" endtime="20201029 12:46:55.060"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.069" endtime="20201029 12:46:55.086"></status>
</kw>
<msg timestamp="20201029 12:46:55.087" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.067" endtime="20201029 12:46:55.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.089" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.088" endtime="20201029 12:46:55.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.090" endtime="20201029 12:46:55.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.064" endtime="20201029 12:46:55.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.062" endtime="20201029 12:46:55.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.100" endtime="20201029 12:46:55.386"></status>
</kw>
<msg timestamp="20201029 12:46:55.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017136639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017213694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.098" endtime="20201029 12:46:55.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017136639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017213694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.390" endtime="20201029 12:46:55.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.398" endtime="20201029 12:46:55.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.095" endtime="20201029 12:46:55.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.094" endtime="20201029 12:46:55.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:55.405" level="INFO">${PHILIP_RES} = [{'diff': 7.705500000000295e-05}, {'diff': 7.677800000000304e-05}, {'diff': 7.684699999999794e-05}, {'diff': 7.6764e-05}, {'diff': 7.679199999999914e-05}, {'diff': 7.6764e-05}, {'diff': 7.6764e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:55.401" endtime="20201029 12:46:55.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:55.409" level="INFO">${RESULT} = {'diff': [7.705500000000295e-05, 7.677800000000304e-05, 7.684699999999794e-05, 7.6764e-05, 7.679199999999914e-05, 7.6764e-05, 7.6764e-05, 7.680600000000218e-05, 7.6764e-05, 7.679200000000261e-05, 7.68...</msg>
<status status="PASS" starttime="20201029 12:46:55.406" endtime="20201029 12:46:55.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.413" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:55.412" endtime="20201029 12:46:55.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.416" level="INFO">VALUE: [7.705500000000295e-05, 7.677800000000304e-05, 7.684699999999794e-05, 7.6764e-05, 7.679199999999914e-05, 7.6764e-05, 7.6764e-05, 7.680600000000218e-05, 7.6764e-05, 7.679200000000261e-05, 7.682000000000175e-05, 7.680599999999871e-05, 7.679099999999967e-05, 7.676300000000053e-05, 7.679099999999967e-05, 7.683300000000184e-05, 7.681900000000227e-05, 7.673599999999739e-05, 7.677800000000304e-05, 7.677799999999957e-05, 7.672200000000129e-05, 7.679199999999914e-05, 7.672200000000129e-05, 7.6764e-05, 7.6764e-05, 7.673599999999739e-05, 7.679099999999967e-05, 7.67770000000001e-05, 7.680499999999923e-05, 7.67770000000001e-05, 7.675000000000043e-05, 7.677799999999957e-05, 7.6764e-05, 7.673599999999739e-05, 7.673599999999739e-05, 7.6764e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.679199999999914e-05, 7.6764e-05, 7.675000000000043e-05, 7.677799999999957e-05, 7.67770000000001e-05, 7.679099999999967e-05, 7.683300000000184e-05, 7.68189999999988e-05, 7.6764e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.6764e-05]</msg>
<status status="PASS" starttime="20201029 12:46:55.414" endtime="20201029 12:46:55.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.410" endtime="20201029 12:46:55.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.061" endtime="20201029 12:46:55.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.038" endtime="20201029 12:46:55.418"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:55.420" endtime="20201029 12:46:55.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.419" endtime="20201029 12:46:55.440"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.452" endtime="20201029 12:46:55.472"></status>
</kw>
<msg timestamp="20201029 12:46:55.472" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.450" endtime="20201029 12:46:55.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.475" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.473" endtime="20201029 12:46:55.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.476" endtime="20201029 12:46:55.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.445" endtime="20201029 12:46:55.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.442" endtime="20201029 12:46:55.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.486" endtime="20201029 12:46:55.773"></status>
</kw>
<msg timestamp="20201029 12:46:55.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021871097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.485" endtime="20201029 12:46:55.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021871097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.778" endtime="20201029 12:46:55.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.786" endtime="20201029 12:46:55.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.482" endtime="20201029 12:46:55.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.480" endtime="20201029 12:46:55.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:55.793" level="INFO">${PHILIP_RES} = [{'diff': 8.336100000000055e-05}, {'diff': 8.312500000000334e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.31110000000003e-05}, {'diff': 8.31110000000003e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 12:46:55.789" endtime="20201029 12:46:55.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:55.797" level="INFO">${RESULT} = {'diff': [8.336100000000055e-05, 8.312500000000334e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.311199999999977e-05, 8.313899999999944e-05, 8.30980000...</msg>
<status status="PASS" starttime="20201029 12:46:55.794" endtime="20201029 12:46:55.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.801" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:55.800" endtime="20201029 12:46:55.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.804" level="INFO">VALUE: [8.336100000000055e-05, 8.312500000000334e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.311199999999977e-05, 8.313899999999944e-05, 8.30980000000002e-05, 8.31110000000003e-05, 8.308400000000063e-05, 8.305500000000202e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.309700000000073e-05, 8.308400000000063e-05, 8.31110000000003e-05, 8.312499999999987e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.312499999999987e-05, 8.312499999999987e-05, 8.313899999999944e-05, 8.311099999999683e-05, 8.304199999999845e-05, 8.315300000000247e-05, 8.315199999999953e-05, 8.309700000000073e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.309700000000073e-05, 8.305499999999855e-05, 8.311199999999977e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.308300000000116e-05, 8.31110000000003e-05, 8.312499999999987e-05, 8.309700000000073e-05, 8.308400000000063e-05, 8.313899999999944e-05, 8.31110000000003e-05, 8.31110000000003e-05, 8.313799999999996e-05, 8.309700000000073e-05, 8.311099999999683e-05, 8.311100000000377e-05]</msg>
<status status="PASS" starttime="20201029 12:46:55.803" endtime="20201029 12:46:55.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.798" endtime="20201029 12:46:55.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.441" endtime="20201029 12:46:55.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.418" endtime="20201029 12:46:55.807"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:55.809" endtime="20201029 12:46:55.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.808" endtime="20201029 12:46:55.829"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.837" endtime="20201029 12:46:55.857"></status>
</kw>
<msg timestamp="20201029 12:46:55.857" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.836" endtime="20201029 12:46:55.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.860" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.859" endtime="20201029 12:46:55.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.861" endtime="20201029 12:46:55.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.833" endtime="20201029 12:46:55.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.831" endtime="20201029 12:46:55.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.870" endtime="20201029 12:46:56.156"></status>
</kw>
<msg timestamp="20201029 12:46:56.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017017972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017107903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.869" endtime="20201029 12:46:56.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017017972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017107903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.160" endtime="20201029 12:46:56.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.168" endtime="20201029 12:46:56.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.866" endtime="20201029 12:46:56.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.864" endtime="20201029 12:46:56.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:56.175" level="INFO">${PHILIP_RES} = [{'diff': 8.993100000000143e-05}, {'diff': 8.9638999999999e-05}, {'diff': 8.96800000000017e-05}, {'diff': 8.965299999999857e-05}, {'diff': 8.958300000000072e-05}, {'diff': 8.9638999999999e-05}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:46:56.172" endtime="20201029 12:46:56.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:56.180" level="INFO">${RESULT} = {'diff': [8.993100000000143e-05, 8.9638999999999e-05, 8.96800000000017e-05, 8.965299999999857e-05, 8.958300000000072e-05, 8.9638999999999e-05, 8.9638999999999e-05, 8.96250000000029e-05, 8.972200000000...</msg>
<status status="PASS" starttime="20201029 12:46:56.176" endtime="20201029 12:46:56.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.185" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:56.184" endtime="20201029 12:46:56.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.187" level="INFO">VALUE: [8.993100000000143e-05, 8.9638999999999e-05, 8.96800000000017e-05, 8.965299999999857e-05, 8.958300000000072e-05, 8.9638999999999e-05, 8.9638999999999e-05, 8.96250000000029e-05, 8.972200000000041e-05, 8.965300000000204e-05, 8.9638999999999e-05, 8.96800000000017e-05, 8.966699999999814e-05, 8.965299999999857e-05, 8.961099999999986e-05, 8.965299999999857e-05, 8.96670000000016e-05, 8.966699999999814e-05, 8.966600000000213e-05, 8.965299999999857e-05, 8.965300000000204e-05, 8.968099999999771e-05, 8.96670000000016e-05, 8.958399999999672e-05, 8.966699999999814e-05, 8.96670000000016e-05, 8.965299999999857e-05, 8.966600000000213e-05, 8.965299999999857e-05, 8.963900000000247e-05, 8.965299999999857e-05, 8.966599999999866e-05, 8.965300000000204e-05, 8.965299999999857e-05, 8.968100000000118e-05, 8.973599999999998e-05, 8.968100000000118e-05, 8.969500000000075e-05, 8.96670000000016e-05, 8.96519999999991e-05, 8.9638999999999e-05, 8.9638999999999e-05, 8.9638999999999e-05, 8.96519999999991e-05, 8.968099999999771e-05, 8.96670000000016e-05, 8.965299999999857e-05, 8.96250000000029e-05, 8.965299999999857e-05, 8.965300000000204e-05]</msg>
<status status="PASS" starttime="20201029 12:46:56.186" endtime="20201029 12:46:56.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.181" endtime="20201029 12:46:56.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.830" endtime="20201029 12:46:56.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.807" endtime="20201029 12:46:56.189"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:56.192" endtime="20201029 12:46:56.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.190" endtime="20201029 12:46:56.212"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.220" endtime="20201029 12:46:56.240"></status>
</kw>
<msg timestamp="20201029 12:46:56.240" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.218" endtime="20201029 12:46:56.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.243" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.241" endtime="20201029 12:46:56.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.244" endtime="20201029 12:46:56.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.216" endtime="20201029 12:46:56.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.214" endtime="20201029 12:46:56.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.253" endtime="20201029 12:46:56.539"></status>
</kw>
<msg timestamp="20201029 12:46:56.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017054444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017151139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.252" endtime="20201029 12:46:56.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017054444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017151139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.543" endtime="20201029 12:46:56.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.552" endtime="20201029 12:46:56.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.249" endtime="20201029 12:46:56.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.247" endtime="20201029 12:46:56.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:56.559" level="INFO">${PHILIP_RES} = [{'diff': 9.669500000000081e-05}, {'diff': 9.643100000000099e-05}, {'diff': 9.643000000000151e-05}, {'diff': 9.649999999999936e-05}, {'diff': 9.643000000000151e-05}, {'diff': 9.641700000000142e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:56.556" endtime="20201029 12:46:56.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:56.564" level="INFO">${RESULT} = {'diff': [9.669500000000081e-05, 9.643100000000099e-05, 9.643000000000151e-05, 9.649999999999936e-05, 9.643000000000151e-05, 9.641700000000142e-05, 9.643100000000099e-05, 9.643099999999752e-05, 9.6347...</msg>
<status status="PASS" starttime="20201029 12:46:56.560" endtime="20201029 12:46:56.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.568" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:56.567" endtime="20201029 12:46:56.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.571" level="INFO">VALUE: [9.669500000000081e-05, 9.643100000000099e-05, 9.643000000000151e-05, 9.649999999999936e-05, 9.643000000000151e-05, 9.641700000000142e-05, 9.643100000000099e-05, 9.643099999999752e-05, 9.63470000000001e-05, 9.644400000000108e-05, 9.640300000000185e-05, 9.645800000000065e-05, 9.644400000000108e-05, 9.643100000000099e-05, 9.645900000000013e-05, 9.644500000000056e-05, 9.644399999999761e-05, 9.648600000000326e-05, 9.641600000000194e-05, 9.643000000000151e-05, 9.645800000000065e-05, 9.643100000000099e-05, 9.643100000000099e-05, 9.644499999999709e-05, 9.644399999999761e-05, 9.642999999999805e-05, 9.645800000000065e-05, 9.643100000000099e-05, 9.643100000000099e-05, 9.641700000000142e-05, 9.643100000000099e-05, 9.644500000000056e-05, 9.642999999999805e-05, 9.644399999999761e-05, 9.644400000000108e-05, 9.643100000000099e-05, 9.643100000000099e-05, 9.640300000000185e-05, 9.644500000000056e-05, 9.644399999999761e-05, 9.642999999999805e-05, 9.642999999999805e-05, 9.637499999999924e-05, 9.643100000000099e-05, 9.637499999999924e-05, 9.645900000000013e-05, 9.641700000000142e-05, 9.640299999999838e-05, 9.642999999999805e-05, 9.640299999999838e-05]</msg>
<status status="PASS" starttime="20201029 12:46:56.569" endtime="20201029 12:46:56.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.565" endtime="20201029 12:46:56.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.212" endtime="20201029 12:46:56.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.190" endtime="20201029 12:46:56.573"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:56.575" endtime="20201029 12:46:56.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.574" endtime="20201029 12:46:56.595"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.603" endtime="20201029 12:46:56.624"></status>
</kw>
<msg timestamp="20201029 12:46:56.624" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.602" endtime="20201029 12:46:56.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.627" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.626" endtime="20201029 12:46:56.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.628" endtime="20201029 12:46:56.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.599" endtime="20201029 12:46:56.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.597" endtime="20201029 12:46:56.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.638" endtime="20201029 12:46:56.924"></status>
</kw>
<msg timestamp="20201029 12:46:56.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017021167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017124847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.637" endtime="20201029 12:46:56.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017021167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017124847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.928" endtime="20201029 12:46:56.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.936" endtime="20201029 12:46:56.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.634" endtime="20201029 12:46:56.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.632" endtime="20201029 12:46:56.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:56.943" level="INFO">${PHILIP_RES} = [{'diff': 0.00010367999999999836}, {'diff': 0.00010342999999999811}, {'diff': 0.00010343099999999758}, {'diff': 0.00010343099999999758}, {'diff': 0.00010342999999999811}, {'diff': 0.000103443999999997...</msg>
<status status="PASS" starttime="20201029 12:46:56.940" endtime="20201029 12:46:56.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:56.947" level="INFO">${RESULT} = {'diff': [0.00010367999999999836, 0.00010342999999999811, 0.00010343099999999758, 0.00010343099999999758, 0.00010342999999999811, 0.00010344399999999768, 0.00010343100000000105, 0.00010341700000000148...</msg>
<status status="PASS" starttime="20201029 12:46:56.944" endtime="20201029 12:46:56.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.951" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:56.950" endtime="20201029 12:46:56.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.954" level="INFO">VALUE: [0.00010367999999999836, 0.00010342999999999811, 0.00010343099999999758, 0.00010343099999999758, 0.00010342999999999811, 0.00010344399999999768, 0.00010343100000000105, 0.00010341700000000148, 0.00010343100000000105, 0.00010343000000000158, 0.00010343000000000158, 0.00010341700000000148, 0.00010348599999999986, 0.00010343000000000158, 0.0001033610000000032, 0.00010344500000000062, 0.00010345900000000019, 0.00010348599999999986, 0.00010344399999999768, 0.00010342999999999811, 0.00010349999999999943, 0.00010344500000000062, 0.00010343000000000158, 0.00010343000000000158, 0.00010343100000000105, 0.00010345900000000019, 0.00010341700000000148, 0.000103416000000002, 0.00010344400000000115, 0.00010341700000000148, 0.00010345900000000019, 0.00010342999999999811, 0.00010342999999999811, 0.00010343099999999758, 0.00010343099999999758, 0.00010342999999999811, 0.00010343000000000158, 0.00010344400000000115, 0.00010343100000000105, 0.00010344500000000062, 0.00010343000000000158, 0.00010344400000000115, 0.00010344500000000062, 0.00010345900000000019, 0.00010345800000000072, 0.00010344399999999768, 0.000103513999999999, 0.00010344499999999715, 0.00010341699999999801, 0.00010344399999999768]</msg>
<status status="PASS" starttime="20201029 12:46:56.952" endtime="20201029 12:46:56.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.948" endtime="20201029 12:46:56.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.596" endtime="20201029 12:46:56.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.573" endtime="20201029 12:46:56.957"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:56.959" endtime="20201029 12:46:56.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.958" endtime="20201029 12:46:56.979"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.987" endtime="20201029 12:46:57.008"></status>
</kw>
<msg timestamp="20201029 12:46:57.009" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.986" endtime="20201029 12:46:57.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.011" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.010" endtime="20201029 12:46:57.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.012" endtime="20201029 12:46:57.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.983" endtime="20201029 12:46:57.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.981" endtime="20201029 12:46:57.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.022" endtime="20201029 12:46:57.306"></status>
</kw>
<msg timestamp="20201029 12:46:57.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017051903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017162819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.020" endtime="20201029 12:46:57.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017051903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017162819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.310" endtime="20201029 12:46:57.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.318" endtime="20201029 12:46:57.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.017" endtime="20201029 12:46:57.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.016" endtime="20201029 12:46:57.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:57.328" level="INFO">${PHILIP_RES} = [{'diff': 0.0001109159999999991}, {'diff': 0.00011066699999999832}, {'diff': 0.00011066600000000232}, {'diff': 0.00011062499999999961}, {'diff': 0.00011066599999999885}, {'diff': 0.0001106529999999987...</msg>
<status status="PASS" starttime="20201029 12:46:57.322" endtime="20201029 12:46:57.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:57.335" level="INFO">${RESULT} = {'diff': [0.0001109159999999991, 0.00011066699999999832, 0.00011066600000000232, 0.00011062499999999961, 0.00011066599999999885, 0.00011065299999999875, 0.00011070800000000103, 0.0001107220000000006, ...</msg>
<status status="PASS" starttime="20201029 12:46:57.329" endtime="20201029 12:46:57.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.341" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:57.339" endtime="20201029 12:46:57.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.345" level="INFO">VALUE: [0.0001109159999999991, 0.00011066699999999832, 0.00011066600000000232, 0.00011062499999999961, 0.00011066599999999885, 0.00011065299999999875, 0.00011070800000000103, 0.0001107220000000006, 0.00011065299999999875, 0.00011065300000000222, 0.00011066600000000232, 0.00011065299999999875, 0.00011065299999999875, 0.00011068100000000136, 0.00011062499999999961, 0.00011065299999999875, 0.00011073600000000017, 0.00011066700000000179, 0.00011065299999999875, 0.00011066599999999885, 0.00011062499999999961, 0.00011066600000000232, 0.00011066699999999832, 0.00011065199999999928, 0.00011065299999999875, 0.00011068000000000189, 0.00011063899999999918, 0.00011067999999999842, 0.00011070800000000103, 0.00011065199999999928, 0.00011065299999999875, 0.00011065199999999928, 0.00011068100000000136, 0.00011063799999999971, 0.00011063899999999918, 0.00011065200000000275, 0.00011065299999999875, 0.00011066599999999885, 0.00011068100000000136, 0.00011065300000000222, 0.00011068100000000136, 0.00011067999999999842, 0.00011065300000000222, 0.00011063900000000265, 0.00011066699999999832, 0.00011063899999999918, 0.00011062499999999961, 0.00011066700000000179, 0.00011066699999999832, 0.00011066699999999832]</msg>
<status status="PASS" starttime="20201029 12:46:57.343" endtime="20201029 12:46:57.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.336" endtime="20201029 12:46:57.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.980" endtime="20201029 12:46:57.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.957" endtime="20201029 12:46:57.348"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:57.353" endtime="20201029 12:46:57.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.350" endtime="20201029 12:46:57.373"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.381" endtime="20201029 12:46:57.402"></status>
</kw>
<msg timestamp="20201029 12:46:57.403" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.379" endtime="20201029 12:46:57.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.405" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.404" endtime="20201029 12:46:57.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.406" endtime="20201029 12:46:57.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.377" endtime="20201029 12:46:57.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.375" endtime="20201029 12:46:57.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.415" endtime="20201029 12:46:57.718"></status>
</kw>
<msg timestamp="20201029 12:46:57.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016733403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016851764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.414" endtime="20201029 12:46:57.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016733403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016851764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.722" endtime="20201029 12:46:57.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.730" endtime="20201029 12:46:57.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.411" endtime="20201029 12:46:57.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.409" endtime="20201029 12:46:57.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:57.736" level="INFO">${PHILIP_RES} = [{'diff': 0.00011836100000000085}, {'diff': 0.0001181110000000006}, {'diff': 0.0001181110000000006}, {'diff': 0.00011809699999999757}, {'diff': 0.0001181110000000006}, {'diff': 0.00011812500000000017}...</msg>
<status status="PASS" starttime="20201029 12:46:57.733" endtime="20201029 12:46:57.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:57.740" level="INFO">${RESULT} = {'diff': [0.00011836100000000085, 0.0001181110000000006, 0.0001181110000000006, 0.00011809699999999757, 0.0001181110000000006, 0.00011812500000000017, 0.00011813899999999974, 0.00011816700000000235, 0...</msg>
<status status="PASS" starttime="20201029 12:46:57.737" endtime="20201029 12:46:57.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.744" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:57.743" endtime="20201029 12:46:57.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.747" level="INFO">VALUE: [0.00011836100000000085, 0.0001181110000000006, 0.0001181110000000006, 0.00011809699999999757, 0.0001181110000000006, 0.00011812500000000017, 0.00011813899999999974, 0.00011816700000000235, 0.00011811099999999713, 0.00011808300000000146, 0.00011806899999999843, 0.00011805599999999833, 0.00011816699999999888, 0.00011816699999999888, 0.0001181110000000006, 0.00011805599999999833, 0.00011813899999999974, 0.0001181110000000006, 0.0001181110000000006, 0.00011809699999999757, 0.0001181110000000006, 0.0001181110000000006, 0.00011809700000000103, 0.000118082999999998, 0.0001181110000000006, 0.0001181110000000006, 0.0001181110000000006, 0.00011815299999999931, 0.00011808300000000146, 0.00011819399999999855, 0.00011812500000000017, 0.00011809699999999757, 0.0001180690000000019, 0.00011812500000000017, 0.0001181110000000006, 0.0001180560000000018, 0.00011809700000000103, 0.0001181110000000006, 0.0001181110000000006, 0.00011811099999999713, 0.00011805500000000232, 0.00011809700000000103, 0.00011812500000000017, 0.00011809699999999757, 0.00011809700000000103, 0.0001181110000000006, 0.00011812500000000017, 0.00011809699999999757, 0.00011816699999999888, 0.0001181110000000006]</msg>
<status status="PASS" starttime="20201029 12:46:57.746" endtime="20201029 12:46:57.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.741" endtime="20201029 12:46:57.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.373" endtime="20201029 12:46:57.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.349" endtime="20201029 12:46:57.749"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:57.751" endtime="20201029 12:46:57.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.750" endtime="20201029 12:46:57.771"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.779" endtime="20201029 12:46:57.804"></status>
</kw>
<msg timestamp="20201029 12:46:57.805" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.778" endtime="20201029 12:46:57.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.807" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.806" endtime="20201029 12:46:57.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.809" endtime="20201029 12:46:57.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.775" endtime="20201029 12:46:57.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.773" endtime="20201029 12:46:57.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.819" endtime="20201029 12:46:58.105"></status>
</kw>
<msg timestamp="20201029 12:46:58.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016822917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016948917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.817" endtime="20201029 12:46:58.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016822917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016948917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.108" endtime="20201029 12:46:58.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.116" endtime="20201029 12:46:58.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.815" endtime="20201029 12:46:58.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.813" endtime="20201029 12:46:58.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:58.122" level="INFO">${PHILIP_RES} = [{'diff': 0.0001260000000000011}, {'diff': 0.00012577700000000053}, {'diff': 0.00012580599999999914}, {'diff': 0.000125778}, {'diff': 0.0001257910000000001}, {'diff': 0.00012576400000000043}, {'diff':...</msg>
<status status="PASS" starttime="20201029 12:46:58.119" endtime="20201029 12:46:58.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:58.126" level="INFO">${RESULT} = {'diff': [0.0001260000000000011, 0.00012577700000000053, 0.00012580599999999914, 0.000125778, 0.0001257910000000001, 0.00012576400000000043, 0.00012572200000000172, 0.000125778, 0.0001257910000000001,...</msg>
<status status="PASS" starttime="20201029 12:46:58.123" endtime="20201029 12:46:58.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.131" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:58.130" endtime="20201029 12:46:58.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.133" level="INFO">VALUE: [0.0001260000000000011, 0.00012577700000000053, 0.00012580599999999914, 0.000125778, 0.0001257910000000001, 0.00012576400000000043, 0.00012572200000000172, 0.000125778, 0.0001257910000000001, 0.00012576399999999696, 0.000125778, 0.00012576400000000043, 0.00012576400000000043, 0.000125778, 0.0001257910000000001, 0.000125778, 0.00012580599999999914, 0.00012577700000000053, 0.00012580499999999967, 0.0001258060000000026, 0.00012573700000000076, 0.0001257360000000013, 0.00012575000000000086, 0.000125778, 0.0001257910000000001, 0.000125778, 0.00012586100000000142, 0.0001258329999999988, 0.00012579199999999957, 0.00012580599999999914, 0.00012579199999999957, 0.0001257360000000013, 0.00012579199999999957, 0.000125778, 0.0001257910000000001, 0.000125778, 0.00012579199999999957, 0.00012580499999999967, 0.0001257499999999974, 0.00012572200000000172, 0.00012579199999999957, 0.00012579199999999957, 0.00012573599999999782, 0.00012579199999999957, 0.0001257910000000001, 0.00012579199999999957, 0.0001257360000000013, 0.00012577700000000053, 0.0001257360000000013, 0.00012580599999999914]</msg>
<status status="PASS" starttime="20201029 12:46:58.132" endtime="20201029 12:46:58.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.127" endtime="20201029 12:46:58.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.772" endtime="20201029 12:46:58.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.749" endtime="20201029 12:46:58.136"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:58.138" endtime="20201029 12:46:58.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.137" endtime="20201029 12:46:58.158"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.166" endtime="20201029 12:46:58.189"></status>
</kw>
<msg timestamp="20201029 12:46:58.190" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.164" endtime="20201029 12:46:58.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.192" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.191" endtime="20201029 12:46:58.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.193" endtime="20201029 12:46:58.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.162" endtime="20201029 12:46:58.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.160" endtime="20201029 12:46:58.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.202" endtime="20201029 12:46:58.502"></status>
</kw>
<msg timestamp="20201029 12:46:58.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016823986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016957931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.200" endtime="20201029 12:46:58.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016823986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016957931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.506" endtime="20201029 12:46:58.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.514" endtime="20201029 12:46:58.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.198" endtime="20201029 12:46:58.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.196" endtime="20201029 12:46:58.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:58.520" level="INFO">${PHILIP_RES} = [{'diff': 0.0001339449999999999}, {'diff': 0.00013369400000000017}, {'diff': 0.00013368100000000008}, {'diff': 0.0001336800000000006}, {'diff': 0.0001337090000000027}, {'diff': 0.00013369400000000017}...</msg>
<status status="PASS" starttime="20201029 12:46:58.517" endtime="20201029 12:46:58.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:58.525" level="INFO">${RESULT} = {'diff': [0.0001339449999999999, 0.00013369400000000017, 0.00013368100000000008, 0.0001336800000000006, 0.0001337090000000027, 0.00013369400000000017, 0.00013369400000000017, 0.00013368100000000008, 0...</msg>
<status status="PASS" starttime="20201029 12:46:58.521" endtime="20201029 12:46:58.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.530" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:58.529" endtime="20201029 12:46:58.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.532" level="INFO">VALUE: [0.0001339449999999999, 0.00013369400000000017, 0.00013368100000000008, 0.0001336800000000006, 0.0001337090000000027, 0.00013369400000000017, 0.00013369400000000017, 0.00013368100000000008, 0.00013366599999999756, 0.0001337229999999988, 0.00013365300000000094, 0.00013369499999999965, 0.00013369500000000312, 0.0001336670000000005, 0.00013369500000000312, 0.00013365300000000094, 0.00013369500000000312, 0.00013370799999999974, 0.00013369400000000017, 0.0001336670000000005, 0.00013369400000000017, 0.00013369499999999965, 0.00013369400000000017, 0.00013369499999999965, 0.00013368100000000008, 0.0001336800000000006, 0.00013368100000000008, 0.00013366600000000103, 0.00013369499999999965, 0.00013368100000000008, 0.0001336670000000005, 0.00013368100000000008, 0.0001336800000000006, 0.00013365299999999747, 0.00013366600000000103, 0.00013369400000000017, 0.00013369499999999965, 0.0001336800000000006, 0.00013369499999999965, 0.0001337080000000032, 0.00013368100000000008, 0.00013370799999999974, 0.0001336800000000006, 0.00013368100000000008, 0.0001336800000000006, 0.00013376399999999802, 0.00013370799999999974, 0.00013368100000000008, 0.00013369499999999965, 0.0001336800000000006]</msg>
<status status="PASS" starttime="20201029 12:46:58.531" endtime="20201029 12:46:58.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.526" endtime="20201029 12:46:58.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.158" endtime="20201029 12:46:58.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.136" endtime="20201029 12:46:58.534"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:58.536" endtime="20201029 12:46:58.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.535" endtime="20201029 12:46:58.556"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.564" endtime="20201029 12:46:58.588"></status>
</kw>
<msg timestamp="20201029 12:46:58.589" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.562" endtime="20201029 12:46:58.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.591" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.590" endtime="20201029 12:46:58.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.592" endtime="20201029 12:46:58.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.560" endtime="20201029 12:46:58.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.558" endtime="20201029 12:46:58.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.601" endtime="20201029 12:46:58.890"></status>
</kw>
<msg timestamp="20201029 12:46:58.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01650125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016643333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:58.600" endtime="20201029 12:46:58.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01650125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016643333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:58.894" endtime="20201029 12:46:58.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.901" endtime="20201029 12:46:58.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.597" endtime="20201029 12:46:58.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.595" endtime="20201029 12:46:58.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:58.908" level="INFO">${PHILIP_RES} = [{'diff': 0.00014208300000000118}, {'diff': 0.00014177799999999866}, {'diff': 0.00014186100000000007}, {'diff': 0.0001418050000000018}, {'diff': 0.00014184699999999703}, {'diff': 0.0001418199999999973...</msg>
<status status="PASS" starttime="20201029 12:46:58.905" endtime="20201029 12:46:58.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:58.912" level="INFO">${RESULT} = {'diff': [0.00014208300000000118, 0.00014177799999999866, 0.00014186100000000007, 0.0001418050000000018, 0.00014184699999999703, 0.00014181999999999736, 0.0001418050000000018, 0.0001418050000000018, 0...</msg>
<status status="PASS" starttime="20201029 12:46:58.909" endtime="20201029 12:46:58.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.916" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:58.915" endtime="20201029 12:46:58.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.918" level="INFO">VALUE: [0.00014208300000000118, 0.00014177799999999866, 0.00014186100000000007, 0.0001418050000000018, 0.00014184699999999703, 0.00014181999999999736, 0.0001418050000000018, 0.0001418050000000018, 0.0001418059999999978, 0.0001418189999999979, 0.00014186199999999954, 0.00014182000000000083, 0.00014179099999999875, 0.0001418189999999979, 0.00014182000000000083, 0.00014181900000000136, 0.0001418189999999979, 0.00014181999999999736, 0.0001418050000000018, 0.0001418050000000018, 0.00014180600000000126, 0.00014177799999999866, 0.0001418050000000018, 0.00014180600000000126, 0.00014179199999999823, 0.00014183300000000093, 0.00014180600000000126, 0.00014180600000000126, 0.0001418889999999992, 0.00014176399999999909, 0.00014182000000000083, 0.00014186100000000007, 0.0001418059999999978, 0.00014180600000000126, 0.00014177800000000212, 0.0001417920000000017, 0.0001418059999999978, 0.00014180499999999832, 0.00014174999999999952, 0.00014176399999999909, 0.00014180499999999832, 0.00014186199999999954, 0.00014180600000000126, 0.00014181900000000136, 0.00014177799999999866, 0.00014177800000000212, 0.00014183300000000093, 0.00014181900000000136, 0.0001418340000000004, 0.00014186100000000007]</msg>
<status status="PASS" starttime="20201029 12:46:58.917" endtime="20201029 12:46:58.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.912" endtime="20201029 12:46:58.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.556" endtime="20201029 12:46:58.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.534" endtime="20201029 12:46:58.920"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:58.922" endtime="20201029 12:46:58.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.921" endtime="20201029 12:46:58.942"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.950" endtime="20201029 12:46:58.975"></status>
</kw>
<msg timestamp="20201029 12:46:58.975" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.949" endtime="20201029 12:46:58.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.978" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.976" endtime="20201029 12:46:58.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.979" endtime="20201029 12:46:58.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.946" endtime="20201029 12:46:58.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.944" endtime="20201029 12:46:58.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.989" endtime="20201029 12:46:59.274"></status>
</kw>
<msg timestamp="20201029 12:46:59.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016618389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016768792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.987" endtime="20201029 12:46:59.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016618389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016768792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.278" endtime="20201029 12:46:59.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.286" endtime="20201029 12:46:59.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.985" endtime="20201029 12:46:59.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.983" endtime="20201029 12:46:59.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:59.292" level="INFO">${PHILIP_RES} = [{'diff': 0.00015040300000000034}, {'diff': 0.00015020800000000237}, {'diff': 0.0001501530000000001}, {'diff': 0.00015016699999999966}, {'diff': 0.0001501530000000001}, {'diff': 0.0001501660000000002}...</msg>
<status status="PASS" starttime="20201029 12:46:59.289" endtime="20201029 12:46:59.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:59.296" level="INFO">${RESULT} = {'diff': [0.00015040300000000034, 0.00015020800000000237, 0.0001501530000000001, 0.00015016699999999966, 0.0001501530000000001, 0.0001501660000000002, 0.0001501660000000002, 0.00015011100000000138, 0....</msg>
<status status="PASS" starttime="20201029 12:46:59.293" endtime="20201029 12:46:59.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.300" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:59.299" endtime="20201029 12:46:59.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.302" level="INFO">VALUE: [0.00015040300000000034, 0.00015020800000000237, 0.0001501530000000001, 0.00015016699999999966, 0.0001501530000000001, 0.0001501660000000002, 0.0001501660000000002, 0.00015011100000000138, 0.00015011100000000138, 0.0001501660000000002, 0.00015012500000000095, 0.00015017999999999976, 0.00015025000000000108, 0.0001501530000000001, 0.00015012500000000095, 0.00015016699999999966, 0.00015013900000000052, 0.00015016699999999966, 0.00015018099999999923, 0.0001501530000000001, 0.0001502079999999989, 0.00015011100000000138, 0.00015016699999999966, 0.00015013900000000052, 0.0001502079999999989, 0.0001501530000000001, 0.0001502079999999989, 0.0001502079999999989, 0.0001501530000000001, 0.0001501530000000001, 0.00015015200000000062, 0.00015013800000000105, 0.0001501660000000002, 0.00015015199999999715, 0.00015009699999999834, 0.0001501660000000002, 0.00015017999999999976, 0.0001501940000000028, 0.00015016699999999966, 0.0001501660000000002, 0.00015016700000000313, 0.0001501109999999979, 0.00015016699999999966, 0.0001501949999999988, 0.00015011100000000138, 0.0001501530000000001, 0.00015012500000000095, 0.00015016699999999966, 0.00015016699999999966, 0.00015018099999999923]</msg>
<status status="PASS" starttime="20201029 12:46:59.301" endtime="20201029 12:46:59.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.297" endtime="20201029 12:46:59.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.943" endtime="20201029 12:46:59.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.920" endtime="20201029 12:46:59.305"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:59.308" endtime="20201029 12:46:59.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.306" endtime="20201029 12:46:59.328"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.336" endtime="20201029 12:46:59.362"></status>
</kw>
<msg timestamp="20201029 12:46:59.362" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.334" endtime="20201029 12:46:59.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.364" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.363" endtime="20201029 12:46:59.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.366" endtime="20201029 12:46:59.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.332" endtime="20201029 12:46:59.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.330" endtime="20201029 12:46:59.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.374" endtime="20201029 12:46:59.663"></status>
</kw>
<msg timestamp="20201029 12:46:59.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016698472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016857472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.373" endtime="20201029 12:46:59.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016698472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016857472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.667" endtime="20201029 12:46:59.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.674" endtime="20201029 12:46:59.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.370" endtime="20201029 12:46:59.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.369" endtime="20201029 12:46:59.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:46:59.681" level="INFO">${PHILIP_RES} = [{'diff': 0.00015899999999999942}, {'diff': 0.0001587359999999996}, {'diff': 0.00015874999999999917}, {'diff': 0.0001587359999999996}, {'diff': 0.0001587359999999996}, {'diff': 0.00015873699999999907}...</msg>
<status status="PASS" starttime="20201029 12:46:59.678" endtime="20201029 12:46:59.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:59.686" level="INFO">${RESULT} = {'diff': [0.00015899999999999942, 0.0001587359999999996, 0.00015874999999999917, 0.0001587359999999996, 0.0001587359999999996, 0.00015873699999999907, 0.00015874999999999917, 0.00015868000000000132, 0...</msg>
<status status="PASS" starttime="20201029 12:46:59.682" endtime="20201029 12:46:59.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.691" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 12:46:59.690" endtime="20201029 12:46:59.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.693" level="INFO">VALUE: [0.00015899999999999942, 0.0001587359999999996, 0.00015874999999999917, 0.0001587359999999996, 0.0001587359999999996, 0.00015873699999999907, 0.00015874999999999917, 0.00015868000000000132, 0.00015872200000000003, 0.0001587359999999996, 0.00015872200000000003, 0.00015874999999999917, 0.00015874999999999917, 0.00015872200000000003, 0.00015875000000000264, 0.00015875000000000264, 0.0001587359999999996, 0.00015876399999999874, 0.0001587359999999996, 0.0001587359999999996, 0.00015870800000000046, 0.0001587909999999984, 0.0001587359999999996, 0.00015877699999999884, 0.00015874999999999917, 0.0001587229999999995, 0.00015875000000000264, 0.00015872200000000003, 0.0001587359999999996, 0.00015870800000000046, 0.00015881900000000101, 0.00015879200000000135, 0.0001587359999999996, 0.00015870800000000046, 0.00015873699999999907, 0.00015872200000000003, 0.00015874999999999917, 0.00015874999999999917, 0.00015866600000000175, 0.00015874999999999917, 0.00015867999999999785, 0.00015875000000000264, 0.00015874999999999917, 0.00015874999999999917, 0.00015872200000000003, 0.00015874999999999917, 0.00015872200000000003, 0.00015873699999999907, 0.00015869500000000036, 0.0001587359999999996]</msg>
<status status="PASS" starttime="20201029 12:46:59.692" endtime="20201029 12:46:59.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.687" endtime="20201029 12:46:59.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.328" endtime="20201029 12:46:59.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.306" endtime="20201029 12:46:59.695"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:59.698" endtime="20201029 12:46:59.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.696" endtime="20201029 12:46:59.718"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.726" endtime="20201029 12:46:59.752"></status>
</kw>
<msg timestamp="20201029 12:46:59.752" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.724" endtime="20201029 12:46:59.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.755" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.753" endtime="20201029 12:46:59.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.756" endtime="20201029 12:46:59.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.722" endtime="20201029 12:46:59.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.720" endtime="20201029 12:46:59.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.765" endtime="20201029 12:47:00.069"></status>
</kw>
<msg timestamp="20201029 12:47:00.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017200667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017368472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.764" endtime="20201029 12:47:00.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017200667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017368472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.073" endtime="20201029 12:47:00.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.081" endtime="20201029 12:47:00.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.761" endtime="20201029 12:47:00.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.759" endtime="20201029 12:47:00.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:00.087" level="INFO">${PHILIP_RES} = [{'diff': 0.00016780500000000004}, {'diff': 0.00016754100000000022}, {'diff': 0.0001675419999999997}, {'diff': 0.00016752800000000012}, {'diff': 0.0001675419999999997}, {'diff': 0.00016759800000000144...</msg>
<status status="PASS" starttime="20201029 12:47:00.084" endtime="20201029 12:47:00.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:00.091" level="INFO">${RESULT} = {'diff': [0.00016780500000000004, 0.00016754100000000022, 0.0001675419999999997, 0.00016752800000000012, 0.0001675419999999997, 0.00016759800000000144, 0.0001675700000000023, 0.0001675419999999997, 0....</msg>
<status status="PASS" starttime="20201029 12:47:00.088" endtime="20201029 12:47:00.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.096" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:00.095" endtime="20201029 12:47:00.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.098" level="INFO">VALUE: [0.00016780500000000004, 0.00016754100000000022, 0.0001675419999999997, 0.00016752800000000012, 0.0001675419999999997, 0.00016759800000000144, 0.0001675700000000023, 0.0001675419999999997, 0.0001675549999999998, 0.00016750000000000098, 0.0001675419999999997, 0.00016751400000000055, 0.00016755600000000273, 0.00016751399999999708, 0.0001674999999999975, 0.00016754100000000022, 0.0001675419999999997, 0.00016755599999999926, 0.00016755599999999926, 0.00016754200000000316, 0.00016752800000000012, 0.0001675549999999998, 0.00016752700000000065, 0.00016758299999999893, 0.0001675419999999997, 0.00016752800000000012, 0.0001675419999999997, 0.00016752800000000012, 0.00016755500000000326, 0.0001675549999999998, 0.0001675419999999997, 0.00016754100000000022, 0.0001675419999999997, 0.00016752800000000012, 0.00016754200000000316, 0.00016754099999999675, 0.00016752699999999718, 0.0001674999999999975, 0.0001675419999999997, 0.00016752800000000012, 0.0001675419999999997, 0.0001675419999999997, 0.00016747200000000184, 0.00016752800000000012, 0.00016751400000000055, 0.00016752800000000012, 0.0001675560000000062, 0.0001675419999999997, 0.00016755599999999926, 0.0001674860000000014]</msg>
<status status="PASS" starttime="20201029 12:47:00.097" endtime="20201029 12:47:00.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.092" endtime="20201029 12:47:00.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.718" endtime="20201029 12:47:00.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.696" endtime="20201029 12:47:00.100"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:00.103" endtime="20201029 12:47:00.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.101" endtime="20201029 12:47:00.123"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.131" endtime="20201029 12:47:00.158"></status>
</kw>
<msg timestamp="20201029 12:47:00.159" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.130" endtime="20201029 12:47:00.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.161" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.160" endtime="20201029 12:47:00.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.163" endtime="20201029 12:47:00.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.127" endtime="20201029 12:47:00.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.125" endtime="20201029 12:47:00.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.173" endtime="20201029 12:47:00.459"></status>
</kw>
<msg timestamp="20201029 12:47:00.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017165361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017342167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.171" endtime="20201029 12:47:00.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017165361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017342167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.463" endtime="20201029 12:47:00.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.471" endtime="20201029 12:47:00.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.169" endtime="20201029 12:47:00.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.167" endtime="20201029 12:47:00.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:00.478" level="INFO">${PHILIP_RES} = [{'diff': 0.0001768059999999981}, {'diff': 0.00017651399999999914}, {'diff': 0.0001765140000000026}, {'diff': 0.00017649999999999957}, {'diff': 0.0001765700000000009}, {'diff': 0.00017655599999999785}...</msg>
<status status="PASS" starttime="20201029 12:47:00.474" endtime="20201029 12:47:00.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:00.482" level="INFO">${RESULT} = {'diff': [0.0001768059999999981, 0.00017651399999999914, 0.0001765140000000026, 0.00017649999999999957, 0.0001765700000000009, 0.00017655599999999785, 0.00017658400000000046, 0.00017655599999999785, 0...</msg>
<status status="PASS" starttime="20201029 12:47:00.479" endtime="20201029 12:47:00.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.486" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:00.485" endtime="20201029 12:47:00.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.489" level="INFO">VALUE: [0.0001768059999999981, 0.00017651399999999914, 0.0001765140000000026, 0.00017649999999999957, 0.0001765700000000009, 0.00017655599999999785, 0.00017658400000000046, 0.00017655599999999785, 0.0001765700000000009, 0.000176583999999997, 0.00017658400000000046, 0.00017655599999999785, 0.00017656900000000142, 0.0001765700000000009, 0.00017654200000000175, 0.00017656899999999795, 0.00017654199999999828, 0.00017661100000000013, 0.00017649999999999957, 0.00017654200000000175, 0.00017656899999999795, 0.000176583000000001, 0.0001765409999999988, 0.000176583000000001, 0.00017656899999999795, 0.00017655500000000185, 0.00017656899999999795, 0.00017655500000000185, 0.00017655500000000185, 0.00017659700000000056, 0.000176583000000001, 0.0001765700000000009, 0.00017655600000000132, 0.00017655599999999785, 0.0001765700000000009, 0.00017655599999999785, 0.00017652800000000218, 0.00017655599999999785, 0.00017658400000000046, 0.0001765700000000009, 0.00017655600000000132, 0.00017655600000000132, 0.00017658400000000046, 0.00017658400000000046, 0.00017655600000000132, 0.0001764999999999961, 0.00017654200000000175, 0.00017655600000000132, 0.00017652800000000218, 0.00017656899999999448]</msg>
<status status="PASS" starttime="20201029 12:47:00.487" endtime="20201029 12:47:00.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.483" endtime="20201029 12:47:00.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.123" endtime="20201029 12:47:00.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.101" endtime="20201029 12:47:00.491"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:00.494" endtime="20201029 12:47:00.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.492" endtime="20201029 12:47:00.514"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.522" endtime="20201029 12:47:00.550"></status>
</kw>
<msg timestamp="20201029 12:47:00.550" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.521" endtime="20201029 12:47:00.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.553" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.551" endtime="20201029 12:47:00.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.554" endtime="20201029 12:47:00.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.518" endtime="20201029 12:47:00.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.516" endtime="20201029 12:47:00.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.564" endtime="20201029 12:47:00.849"></status>
</kw>
<msg timestamp="20201029 12:47:00.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017136625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017322694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.562" endtime="20201029 12:47:00.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017136625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017322694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.853" endtime="20201029 12:47:00.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.861" endtime="20201029 12:47:00.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.559" endtime="20201029 12:47:00.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.558" endtime="20201029 12:47:00.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:00.868" level="INFO">${PHILIP_RES} = [{'diff': 0.0001860690000000005}, {'diff': 0.0001857920000000006}, {'diff': 0.00018581999999999974}, {'diff': 0.00018581999999999974}, {'diff': 0.00018581999999999974}, {'diff': 0.00018581900000000026...</msg>
<status status="PASS" starttime="20201029 12:47:00.865" endtime="20201029 12:47:00.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:00.873" level="INFO">${RESULT} = {'diff': [0.0001860690000000005, 0.0001857920000000006, 0.00018581999999999974, 0.00018581999999999974, 0.00018581999999999974, 0.00018581900000000026, 0.0001858050000000007, 0.0001858050000000007, 0....</msg>
<status status="PASS" starttime="20201029 12:47:00.869" endtime="20201029 12:47:00.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.878" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:00.877" endtime="20201029 12:47:00.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.880" level="INFO">VALUE: [0.0001860690000000005, 0.0001857920000000006, 0.00018581999999999974, 0.00018581999999999974, 0.00018581999999999974, 0.00018581900000000026, 0.0001858050000000007, 0.0001858050000000007, 0.00018581900000000026, 0.00018575000000000189, 0.00018580600000000017, 0.0001858339999999993, 0.0001858339999999993, 0.00018580600000000017, 0.0001858189999999968, 0.00018587499999999854, 0.00018581900000000026, 0.00018581900000000026, 0.00018581900000000026, 0.00018581999999999974, 0.00018580600000000017, 0.000185875000000002, 0.00018579199999999713, 0.0001858050000000007, 0.0001858050000000007, 0.0001858050000000007, 0.00018583299999999983, 0.00018581999999999974, 0.0001858339999999993, 0.00018580600000000017, 0.00018580600000000017, 0.00018583299999999983, 0.00018581900000000026, 0.0001858889999999981, 0.00018581900000000026, 0.0001858469999999994, 0.0001858200000000032, 0.00018577800000000103, 0.0001858059999999967, 0.00018580500000000416, 0.00018580499999999722, 0.00018581900000000373, 0.00018580499999999722, 0.00018580600000000363, 0.00018581999999999627, 0.0001858200000000032, 0.0001858200000000032, 0.0001858330000000033, 0.0001858330000000033, 0.000185875000000002]</msg>
<status status="PASS" starttime="20201029 12:47:00.879" endtime="20201029 12:47:00.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.874" endtime="20201029 12:47:00.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.514" endtime="20201029 12:47:00.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.492" endtime="20201029 12:47:00.882"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:00.885" endtime="20201029 12:47:00.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.883" endtime="20201029 12:47:00.905"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.913" endtime="20201029 12:47:00.942"></status>
</kw>
<msg timestamp="20201029 12:47:00.942" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.911" endtime="20201029 12:47:00.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.945" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.943" endtime="20201029 12:47:00.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.946" endtime="20201029 12:47:00.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.909" endtime="20201029 12:47:00.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.907" endtime="20201029 12:47:00.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.955" endtime="20201029 12:47:01.243"></status>
</kw>
<msg timestamp="20201029 12:47:01.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017007986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017203583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.953" endtime="20201029 12:47:01.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017007986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017203583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.248" endtime="20201029 12:47:01.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.256" endtime="20201029 12:47:01.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.951" endtime="20201029 12:47:01.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.949" endtime="20201029 12:47:01.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:01.262" level="INFO">${PHILIP_RES} = [{'diff': 0.0001955970000000022}, {'diff': 0.00019527800000000012}, {'diff': 0.00019529099999999674}, {'diff': 0.0001952919999999997}, {'diff': 0.00019529100000000021}, {'diff': 0.00019533299999999892...</msg>
<status status="PASS" starttime="20201029 12:47:01.259" endtime="20201029 12:47:01.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:01.266" level="INFO">${RESULT} = {'diff': [0.0001955970000000022, 0.00019527800000000012, 0.00019529099999999674, 0.0001952919999999997, 0.00019529100000000021, 0.00019533299999999892, 0.00019529100000000021, 0.00019530499999999978, ...</msg>
<status status="PASS" starttime="20201029 12:47:01.263" endtime="20201029 12:47:01.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.270" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:01.269" endtime="20201029 12:47:01.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.272" level="INFO">VALUE: [0.0001955970000000022, 0.00019527800000000012, 0.00019529099999999674, 0.0001952919999999997, 0.00019529100000000021, 0.00019533299999999892, 0.00019529100000000021, 0.00019530499999999978, 0.00019531999999999883, 0.0001953330000000024, 0.0001952919999999997, 0.00019529100000000021, 0.00019527800000000012, 0.00019529200000000316, 0.00019529100000000021, 0.0001952919999999997, 0.00019527800000000012, 0.0001952919999999997, 0.0001952919999999997, 0.00019527700000000064, 0.0001952919999999997, 0.00019530499999999978, 0.00019530600000000273, 0.0001953200000000023, 0.00019531899999999935, 0.0001952919999999997, 0.00019530499999999978, 0.0001952919999999997, 0.00019527800000000012, 0.00019534700000000196, 0.0001952919999999997, 0.00019522199999999837, 0.00019522199999999837, 0.00019527800000000012, 0.00019530499999999978, 0.0001952919999999997, 0.00019529100000000021, 0.00019527800000000012, 0.00019529100000000021, 0.00019530599999999926, 0.0001952919999999997, 0.00019529100000000021, 0.00019526400000000055, 0.0001952360000000014, 0.0001952919999999997, 0.00019530599999999926, 0.0001952360000000014, 0.0001952919999999997, 0.00019529100000000021, 0.0001952919999999997]</msg>
<status status="PASS" starttime="20201029 12:47:01.271" endtime="20201029 12:47:01.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.267" endtime="20201029 12:47:01.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.905" endtime="20201029 12:47:01.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.882" endtime="20201029 12:47:01.274"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:01.277" endtime="20201029 12:47:01.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.275" endtime="20201029 12:47:01.297"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.304" endtime="20201029 12:47:01.333"></status>
</kw>
<msg timestamp="20201029 12:47:01.334" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.303" endtime="20201029 12:47:01.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.336" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.335" endtime="20201029 12:47:01.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.337" endtime="20201029 12:47:01.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.300" endtime="20201029 12:47:01.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.298" endtime="20201029 12:47:01.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.347" endtime="20201029 12:47:01.644"></status>
</kw>
<msg timestamp="20201029 12:47:01.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016492625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016697875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.345" endtime="20201029 12:47:01.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016492625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016697875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.649" endtime="20201029 12:47:01.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.656" endtime="20201029 12:47:01.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.343" endtime="20201029 12:47:01.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.341" endtime="20201029 12:47:01.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:01.663" level="INFO">${PHILIP_RES} = [{'diff': 0.00020525000000000057}, {'diff': 0.00020504099999999956}, {'diff': 0.00020498600000000075}, {'diff': 0.00020500000000000032}, {'diff': 0.00020500000000000032}, {'diff': 0.000204986000000000...</msg>
<status status="PASS" starttime="20201029 12:47:01.660" endtime="20201029 12:47:01.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:01.667" level="INFO">${RESULT} = {'diff': [0.00020525000000000057, 0.00020504099999999956, 0.00020498600000000075, 0.00020500000000000032, 0.00020500000000000032, 0.00020498600000000075, 0.00020500000000000032, 0.00020500000000000032...</msg>
<status status="PASS" starttime="20201029 12:47:01.664" endtime="20201029 12:47:01.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.671" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:01.670" endtime="20201029 12:47:01.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.673" level="INFO">VALUE: [0.00020525000000000057, 0.00020504099999999956, 0.00020498600000000075, 0.00020500000000000032, 0.00020500000000000032, 0.00020498600000000075, 0.00020500000000000032, 0.00020500000000000032, 0.00020500000000000032, 0.00020498600000000075, 0.00020500000000000032, 0.00020500000000000032, 0.00020498600000000075, 0.00020494500000000151, 0.00020499999999999685, 0.00020499999999999685, 0.00020498599999999728, 0.0002049719999999977, 0.00020499999999999685, 0.00020498599999999728, 0.000205027, 0.00020498599999999728, 0.0002050139999999999, 0.00020501300000000042, 0.00020500000000000032, 0.0002050139999999999, 0.0002050139999999999, 0.0002050139999999999, 0.00020500000000000032, 0.00020498600000000075, 0.00020494499999999805, 0.00020497200000000118, 0.00020497300000000065, 0.00020498700000000022, 0.00020498600000000075, 0.00020497200000000118, 0.0002050420000000025, 0.00020498599999999728, 0.00020495799999999814, 0.00020494499999999805, 0.00020499999999999685, 0.00020501399999999642, 0.00020499999999999685, 0.0002050420000000025, 0.00020499999999999685, 0.00020491599999999943, 0.0002050420000000025, 0.00020498599999999728, 0.00020498599999999728, 0.00020494499999999805]</msg>
<status status="PASS" starttime="20201029 12:47:01.672" endtime="20201029 12:47:01.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.668" endtime="20201029 12:47:01.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.297" endtime="20201029 12:47:01.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.275" endtime="20201029 12:47:01.676"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:01.678" endtime="20201029 12:47:01.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.677" endtime="20201029 12:47:01.698"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.706" endtime="20201029 12:47:01.736"></status>
</kw>
<msg timestamp="20201029 12:47:01.736" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.705" endtime="20201029 12:47:01.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.739" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.737" endtime="20201029 12:47:01.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.740" endtime="20201029 12:47:01.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.702" endtime="20201029 12:47:01.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.700" endtime="20201029 12:47:01.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.749" endtime="20201029 12:47:02.034"></status>
</kw>
<msg timestamp="20201029 12:47:02.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016616556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01683175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:01.747" endtime="20201029 12:47:02.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016616556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01683175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:02.038" endtime="20201029 12:47:02.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.046" endtime="20201029 12:47:02.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.745" endtime="20201029 12:47:02.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.743" endtime="20201029 12:47:02.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:02.052" level="INFO">${PHILIP_RES} = [{'diff': 0.00021519399999999841}, {'diff': 0.00021493100000000154}, {'diff': 0.00021494399999999816}, {'diff': 0.00021490299999999893}, {'diff': 0.0002149299999999986}, {'diff': 0.0002149169999999985...</msg>
<status status="PASS" starttime="20201029 12:47:02.049" endtime="20201029 12:47:02.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:02.057" level="INFO">${RESULT} = {'diff': [0.00021519399999999841, 0.00021493100000000154, 0.00021494399999999816, 0.00021490299999999893, 0.0002149299999999986, 0.0002149169999999985, 0.00021491700000000197, 0.00021491599999999902, ...</msg>
<status status="PASS" starttime="20201029 12:47:02.053" endtime="20201029 12:47:02.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.061" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:02.060" endtime="20201029 12:47:02.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.064" level="INFO">VALUE: [0.00021519399999999841, 0.00021493100000000154, 0.00021494399999999816, 0.00021490299999999893, 0.0002149299999999986, 0.0002149169999999985, 0.00021491700000000197, 0.00021491599999999902, 0.00021491700000000197, 0.0002149030000000024, 0.00021493099999999807, 0.00021491700000000197, 0.00021490299999999893, 0.00021484800000000012, 0.0002149299999999986, 0.00021493099999999807, 0.0002149160000000025, 0.00021497300000000025, 0.00021491700000000197, 0.0002149450000000011, 0.0002149169999999985, 0.00021483300000000108, 0.0002149169999999985, 0.0002148619999999997, 0.00021495900000000068, 0.0002149169999999985, 0.00021493000000000206, 0.00021484700000000065, 0.0002149160000000025, 0.0002149169999999985, 0.00021493100000000154, 0.00021491700000000197, 0.0002149169999999985, 0.0002149160000000025, 0.00021490299999999893, 0.0002149030000000024, 0.0002149030000000024, 0.00021491700000000197, 0.0002149439999999947, 0.00021493100000000154, 0.0002149160000000025, 0.0002149309999999946, 0.00021490200000000292, 0.00021498600000000034, 0.00021491700000000197, 0.00021492999999999512, 0.00021491700000000197, 0.00021491700000000197, 0.00021491699999999503, 0.00021491700000000197]</msg>
<status status="PASS" starttime="20201029 12:47:02.062" endtime="20201029 12:47:02.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.058" endtime="20201029 12:47:02.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.699" endtime="20201029 12:47:02.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.676" endtime="20201029 12:47:02.066"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:02.068" endtime="20201029 12:47:02.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.067" endtime="20201029 12:47:02.088"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.096" endtime="20201029 12:47:02.126"></status>
</kw>
<msg timestamp="20201029 12:47:02.127" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.094" endtime="20201029 12:47:02.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.129" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.128" endtime="20201029 12:47:02.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.130" endtime="20201029 12:47:02.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.092" endtime="20201029 12:47:02.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.090" endtime="20201029 12:47:02.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.139" endtime="20201029 12:47:02.443"></status>
</kw>
<msg timestamp="20201029 12:47:02.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016596014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016821306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.138" endtime="20201029 12:47:02.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016596014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016821306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.448" endtime="20201029 12:47:02.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.455" endtime="20201029 12:47:02.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.135" endtime="20201029 12:47:02.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.133" endtime="20201029 12:47:02.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:02.462" level="INFO">${PHILIP_RES} = [{'diff': 0.00022529200000000194}, {'diff': 0.00022508300000000092}, {'diff': 0.00022506900000000135}, {'diff': 0.00022505599999999779}, {'diff': 0.00022504099999999874}, {'diff': 0.000225056000000001...</msg>
<status status="PASS" starttime="20201029 12:47:02.459" endtime="20201029 12:47:02.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:02.466" level="INFO">${RESULT} = {'diff': [0.00022529200000000194, 0.00022508300000000092, 0.00022506900000000135, 0.00022505599999999779, 0.00022504099999999874, 0.00022505600000000126, 0.0002249999999999995, 0.0002250840000000004, ...</msg>
<status status="PASS" starttime="20201029 12:47:02.463" endtime="20201029 12:47:02.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.471" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:02.470" endtime="20201029 12:47:02.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.473" level="INFO">VALUE: [0.00022529200000000194, 0.00022508300000000092, 0.00022506900000000135, 0.00022505599999999779, 0.00022504099999999874, 0.00022505600000000126, 0.0002249999999999995, 0.0002250840000000004, 0.00022506899999999788, 0.00022506899999999788, 0.00022506900000000135, 0.00022507000000000082, 0.00022506900000000135, 0.0002250970000000005, 0.00022498599999999994, 0.00022506900000000135, 0.00022508300000000092, 0.00022515299999999877, 0.00022505600000000126, 0.00022506900000000135, 0.0002250840000000004, 0.0002250549999999983, 0.00022506999999999736, 0.00022506899999999788, 0.00022509799999999996, 0.00022506899999999788, 0.00022508399999999693, 0.00022506899999999788, 0.00022508299999999745, 0.00022506899999999788, 0.00022507000000000082, 0.00022506900000000135, 0.00022505600000000126, 0.00022501400000000255, 0.00022504200000000169, 0.00022505600000000126, 0.00022506900000000135, 0.00022504200000000169, 0.00022505500000000178, 0.0002250840000000004, 0.00022506900000000135, 0.0002250840000000004, 0.00022506900000000135, 0.00022507000000000082, 0.00022501400000000255, 0.00022504200000000169, 0.00022506900000000135, 0.00022507000000000082, 0.00022505500000000178, 0.00022507000000000082]</msg>
<status status="PASS" starttime="20201029 12:47:02.472" endtime="20201029 12:47:02.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.467" endtime="20201029 12:47:02.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.088" endtime="20201029 12:47:02.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.066" endtime="20201029 12:47:02.475"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:02.477" endtime="20201029 12:47:02.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.476" endtime="20201029 12:47:02.497"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.506" endtime="20201029 12:47:02.538"></status>
</kw>
<msg timestamp="20201029 12:47:02.539" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.504" endtime="20201029 12:47:02.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.541" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.540" endtime="20201029 12:47:02.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.542" endtime="20201029 12:47:02.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.501" endtime="20201029 12:47:02.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.499" endtime="20201029 12:47:02.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.552" endtime="20201029 12:47:02.838"></status>
</kw>
<msg timestamp="20201029 12:47:02.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016965611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017201319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.551" endtime="20201029 12:47:02.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016965611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017201319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.842" endtime="20201029 12:47:02.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.850" endtime="20201029 12:47:02.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.548" endtime="20201029 12:47:02.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.546" endtime="20201029 12:47:02.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:02.857" level="INFO">${PHILIP_RES} = [{'diff': 0.00023570800000000114}, {'diff': 0.00023542999999999828}, {'diff': 0.00023543099999999775}, {'diff': 0.00023544399999999785}, {'diff': 0.00023544499999999732}, {'diff': 0.000235457999999997...</msg>
<status status="PASS" starttime="20201029 12:47:02.854" endtime="20201029 12:47:02.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:02.861" level="INFO">${RESULT} = {'diff': [0.00023570800000000114, 0.00023542999999999828, 0.00023543099999999775, 0.00023544399999999785, 0.00023544499999999732, 0.00023545799999999742, 0.0002354589999999969, 0.00023542999999999828,...</msg>
<status status="PASS" starttime="20201029 12:47:02.858" endtime="20201029 12:47:02.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.865" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:02.864" endtime="20201029 12:47:02.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.868" level="INFO">VALUE: [0.00023570800000000114, 0.00023542999999999828, 0.00023543099999999775, 0.00023544399999999785, 0.00023544499999999732, 0.00023545799999999742, 0.0002354589999999969, 0.00023542999999999828, 0.00023537499999999947, 0.0002354580000000009, 0.00023542999999999828, 0.00023543100000000122, 0.00023548600000000003, 0.0002354450000000008, 0.00023544400000000132, 0.00023541700000000165, 0.00023548600000000003, 0.00023547200000000046, 0.0002354450000000008, 0.00023544400000000132, 0.0002354450000000008, 0.00023548600000000003, 0.00023545900000000036, 0.00023543000000000175, 0.00023544400000000132, 0.0002354580000000009, 0.00023544400000000132, 0.0002354450000000008, 0.00023544400000000132, 0.0002354450000000008, 0.0002354580000000009, 0.0002354450000000008, 0.00023544400000000132, 0.0002354999999999996, 0.0002354020000000026, 0.00023543000000000175, 0.0002354450000000008, 0.00023544400000000132, 0.0002354450000000008, 0.00023543000000000175, 0.0002354450000000008, 0.00023543000000000175, 0.0002354450000000008, 0.0002354450000000008, 0.0002354580000000009, 0.0002354450000000008, 0.00023544400000000132, 0.00023544499999999385, 0.00023541600000000218, 0.00023543099999999428]</msg>
<status status="PASS" starttime="20201029 12:47:02.867" endtime="20201029 12:47:02.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.862" endtime="20201029 12:47:02.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.498" endtime="20201029 12:47:02.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.475" endtime="20201029 12:47:02.871"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:02.874" endtime="20201029 12:47:02.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.872" endtime="20201029 12:47:02.894"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.902" endtime="20201029 12:47:02.935"></status>
</kw>
<msg timestamp="20201029 12:47:02.935" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.901" endtime="20201029 12:47:02.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.938" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.936" endtime="20201029 12:47:02.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.939" endtime="20201029 12:47:02.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.898" endtime="20201029 12:47:02.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.896" endtime="20201029 12:47:02.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.948" endtime="20201029 12:47:03.235"></status>
</kw>
<msg timestamp="20201029 12:47:03.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017185903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017432208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.947" endtime="20201029 12:47:03.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017185903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017432208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.239" endtime="20201029 12:47:03.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.247" endtime="20201029 12:47:03.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.944" endtime="20201029 12:47:03.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.942" endtime="20201029 12:47:03.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:03.253" level="INFO">${PHILIP_RES} = [{'diff': 0.0002463050000000022}, {'diff': 0.0002460970000000007}, {'diff': 0.00024605600000000144}, {'diff': 0.0002460419999999984}, {'diff': 0.00024605599999999797}, {'diff': 0.00024602799999999883}...</msg>
<status status="PASS" starttime="20201029 12:47:03.250" endtime="20201029 12:47:03.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:03.258" level="INFO">${RESULT} = {'diff': [0.0002463050000000022, 0.0002460970000000007, 0.00024605600000000144, 0.0002460419999999984, 0.00024605599999999797, 0.00024602799999999883, 0.00024605500000000197, 0.0002460410000000024, 0....</msg>
<status status="PASS" starttime="20201029 12:47:03.254" endtime="20201029 12:47:03.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.263" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:03.262" endtime="20201029 12:47:03.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.265" level="INFO">VALUE: [0.0002463050000000022, 0.0002460970000000007, 0.00024605600000000144, 0.0002460419999999984, 0.00024605599999999797, 0.00024602799999999883, 0.00024605500000000197, 0.0002460410000000024, 0.0002460280000000023, 0.00024609800000000015, 0.0002460419999999984, 0.0002461249999999998, 0.00024602699999999936, 0.0002459860000000001, 0.00024605500000000197, 0.0002460840000000006, 0.0002460840000000006, 0.00024604200000000187, 0.00024602799999999883, 0.00024602799999999883, 0.00024604099999999893, 0.0002459860000000001, 0.00024605600000000144, 0.0002460280000000023, 0.00024606899999999807, 0.00024604099999999893, 0.00024604099999999893, 0.00024606900000000154, 0.00024604200000000187, 0.0002460139999999958, 0.0002460689999999946, 0.0002460139999999958, 0.00024601400000000273, 0.0002460410000000024, 0.00024604200000000187, 0.00024604200000000187, 0.00024605600000000144, 0.00024605500000000197, 0.00024605500000000197, 0.0002460410000000024, 0.00024605500000000197, 0.00024602799999999536, 0.0002460840000000006, 0.0002460559999999945, 0.00024605499999999503, 0.00024605500000000197, 0.00024611100000000025, 0.00024604200000000187, 0.00024605600000000144, 0.0002460280000000023]</msg>
<status status="PASS" starttime="20201029 12:47:03.264" endtime="20201029 12:47:03.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.259" endtime="20201029 12:47:03.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.895" endtime="20201029 12:47:03.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.871" endtime="20201029 12:47:03.267"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:03.270" endtime="20201029 12:47:03.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.268" endtime="20201029 12:47:03.290"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.298" endtime="20201029 12:47:03.331"></status>
</kw>
<msg timestamp="20201029 12:47:03.332" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.296" endtime="20201029 12:47:03.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.334" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.333" endtime="20201029 12:47:03.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.335" endtime="20201029 12:47:03.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.294" endtime="20201029 12:47:03.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.292" endtime="20201029 12:47:03.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.345" endtime="20201029 12:47:03.633"></status>
</kw>
<msg timestamp="20201029 12:47:03.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017091694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017348861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.343" endtime="20201029 12:47:03.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017091694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017348861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.637" endtime="20201029 12:47:03.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.645" endtime="20201029 12:47:03.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.340" endtime="20201029 12:47:03.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.339" endtime="20201029 12:47:03.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:03.651" level="INFO">${PHILIP_RES} = [{'diff': 0.0002571669999999991}, {'diff': 0.0002568610000000006}, {'diff': 0.00025688899999999973}, {'diff': 0.0002568610000000006}, {'diff': 0.0002568609999999971}, {'diff': 0.00025687500000000016},...</msg>
<status status="PASS" starttime="20201029 12:47:03.648" endtime="20201029 12:47:03.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:03.655" level="INFO">${RESULT} = {'diff': [0.0002571669999999991, 0.0002568610000000006, 0.00025688899999999973, 0.0002568610000000006, 0.0002568609999999971, 0.00025687500000000016, 0.00025687500000000016, 0.00025688899999999973, 0....</msg>
<status status="PASS" starttime="20201029 12:47:03.652" endtime="20201029 12:47:03.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.660" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:03.659" endtime="20201029 12:47:03.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.662" level="INFO">VALUE: [0.0002571669999999991, 0.0002568610000000006, 0.00025688899999999973, 0.0002568610000000006, 0.0002568609999999971, 0.00025687500000000016, 0.00025687500000000016, 0.00025688899999999973, 0.0002568610000000006, 0.00025687500000000016, 0.00025687500000000016, 0.00025688899999999973, 0.00025687500000000016, 0.00025687500000000016, 0.0002568890000000032, 0.00025687500000000016, 0.00025687500000000016, 0.00025688899999999973, 0.00025687500000000016, 0.00025687500000000016, 0.00025688899999999973, 0.00025690300000000277, 0.0002568610000000006, 0.0002568610000000006, 0.00025687500000000016, 0.00025688899999999973, 0.0002569450000000015, 0.00025683300000000145, 0.000256944000000002, 0.00025686100000000406, 0.0002568749999999967, 0.0002569299999999955, 0.0002568749999999967, 0.0002568050000000058, 0.00025684699999999755, 0.00025693099999999497, 0.0002568609999999971, 0.00025686100000000406, 0.00025686100000000406, 0.00025687500000000363, 0.0002568609999999971, 0.0002568749999999967, 0.00025687500000000363, 0.00025687500000000363, 0.00025687500000000363, 0.0002568609999999971, 0.0002568749999999967, 0.0002568470000000045, 0.0002568890000000032, 0.0002568749999999967]</msg>
<status status="PASS" starttime="20201029 12:47:03.661" endtime="20201029 12:47:03.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.656" endtime="20201029 12:47:03.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.290" endtime="20201029 12:47:03.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.268" endtime="20201029 12:47:03.664"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:03.667" endtime="20201029 12:47:03.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.665" endtime="20201029 12:47:03.687"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.695" endtime="20201029 12:47:03.729"></status>
</kw>
<msg timestamp="20201029 12:47:03.730" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.693" endtime="20201029 12:47:03.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.732" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.731" endtime="20201029 12:47:03.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.733" endtime="20201029 12:47:03.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.691" endtime="20201029 12:47:03.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.689" endtime="20201029 12:47:03.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.744" endtime="20201029 12:47:04.030"></status>
</kw>
<msg timestamp="20201029 12:47:04.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017292569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01756075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:03.742" endtime="20201029 12:47:04.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017292569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01756075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:04.036" endtime="20201029 12:47:04.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.044" endtime="20201029 12:47:04.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.739" endtime="20201029 12:47:04.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.738" endtime="20201029 12:47:04.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:04.051" level="INFO">${PHILIP_RES} = [{'diff': 0.0002681809999999993}, {'diff': 0.0002680000000000009}, {'diff': 0.00026793099999999903}, {'diff': 0.00026793099999999903}, {'diff': 0.00026791699999999946}, {'diff': 0.00026791700000000293...</msg>
<status status="PASS" starttime="20201029 12:47:04.047" endtime="20201029 12:47:04.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:04.055" level="INFO">${RESULT} = {'diff': [0.0002681809999999993, 0.0002680000000000009, 0.00026793099999999903, 0.00026793099999999903, 0.00026791699999999946, 0.00026791700000000293, 0.00026791699999999946, 0.00026792999999999956, ...</msg>
<status status="PASS" starttime="20201029 12:47:04.052" endtime="20201029 12:47:04.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.059" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:04.058" endtime="20201029 12:47:04.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.062" level="INFO">VALUE: [0.0002681809999999993, 0.0002680000000000009, 0.00026793099999999903, 0.00026793099999999903, 0.00026791699999999946, 0.00026791700000000293, 0.00026791699999999946, 0.00026792999999999956, 0.00026792999999999956, 0.0002679440000000026, 0.00026791699999999946, 0.000267916, 0.00026791600000000346, 0.0002680000000000009, 0.000267916, 0.0002679020000000004, 0.0002679440000000026, 0.00026792999999999956, 0.00026792999999999956, 0.00026792999999999956, 0.00026792999999999956, 0.0002679020000000004, 0.00026798599999999784, 0.000267916, 0.000267916, 0.000267916, 0.0002679029999999999, 0.00026791600000000346, 0.00026791699999999946, 0.00026791699999999946, 0.00026791699999999946, 0.0002679029999999999, 0.00026791699999999946, 0.0002679029999999999, 0.00026791699999999946, 0.0002679029999999999, 0.00026793099999999903, 0.00026787500000000075, 0.00026791699999999946, 0.0002678890000000003, 0.00026793099999999903, 0.00026793100000000597, 0.0002678890000000003, 0.00026791699999999946, 0.00026793099999999903, 0.00026791699999999946, 0.0002679449999999986, 0.00026791699999999946, 0.00026798599999999784, 0.0002679449999999986]</msg>
<status status="PASS" starttime="20201029 12:47:04.060" endtime="20201029 12:47:04.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.056" endtime="20201029 12:47:04.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.687" endtime="20201029 12:47:04.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.665" endtime="20201029 12:47:04.064"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:04.067" endtime="20201029 12:47:04.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.065" endtime="20201029 12:47:04.087"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.095" endtime="20201029 12:47:04.131"></status>
</kw>
<msg timestamp="20201029 12:47:04.131" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.093" endtime="20201029 12:47:04.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.134" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.132" endtime="20201029 12:47:04.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.135" endtime="20201029 12:47:04.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.091" endtime="20201029 12:47:04.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.089" endtime="20201029 12:47:04.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.144" endtime="20201029 12:47:04.443"></status>
</kw>
<msg timestamp="20201029 12:47:04.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017137347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017416792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.143" endtime="20201029 12:47:04.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017137347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017416792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.455" endtime="20201029 12:47:04.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.473" endtime="20201029 12:47:04.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.140" endtime="20201029 12:47:04.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.138" endtime="20201029 12:47:04.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:04.487" level="INFO">${PHILIP_RES} = [{'diff': 0.0002794449999999997}, {'diff': 0.0002792220000000026}, {'diff': 0.00027919399999999997}, {'diff': 0.00027920799999999954}, {'diff': 0.00027920799999999954}, {'diff': 0.00027916599999999736...</msg>
<status status="PASS" starttime="20201029 12:47:04.480" endtime="20201029 12:47:04.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:04.492" level="INFO">${RESULT} = {'diff': [0.0002794449999999997, 0.0002792220000000026, 0.00027919399999999997, 0.00027920799999999954, 0.00027920799999999954, 0.00027916599999999736, 0.0002791800000000004, 0.00027919399999999997, 0...</msg>
<status status="PASS" starttime="20201029 12:47:04.488" endtime="20201029 12:47:04.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.496" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:04.495" endtime="20201029 12:47:04.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.499" level="INFO">VALUE: [0.0002794449999999997, 0.0002792220000000026, 0.00027919399999999997, 0.00027920799999999954, 0.00027920799999999954, 0.00027916599999999736, 0.0002791800000000004, 0.00027919399999999997, 0.00027920799999999954, 0.00027922300000000205, 0.00027919499999999944, 0.0002792219999999991, 0.0002791809999999999, 0.00027919399999999997, 0.00027919399999999997, 0.00027919399999999997, 0.00027920799999999954, 0.00027919399999999997, 0.00027919399999999997, 0.00027919499999999944, 0.0002791950000000029, 0.0002791389999999977, 0.00027919499999999944, 0.0002792359999999987, 0.00027917999999999693, 0.00027923600000000215, 0.0002792640000000013, 0.000279208000000003, 0.0002791939999999965, 0.000279208000000003, 0.0002792090000000025, 0.000279194999999996, 0.0002791950000000029, 0.0002792090000000025, 0.0002791939999999965, 0.00027919400000000344, 0.0002791939999999965, 0.00027919400000000344, 0.0002792640000000013, 0.00027922199999999564, 0.00027919400000000344, 0.0002791950000000029, 0.000279194999999996, 0.0002791950000000029, 0.000279194999999996, 0.00027920799999999607, 0.000279208000000003, 0.00027917999999999693, 0.00027919400000000344, 0.0002791939999999965]</msg>
<status status="PASS" starttime="20201029 12:47:04.497" endtime="20201029 12:47:04.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.493" endtime="20201029 12:47:04.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.087" endtime="20201029 12:47:04.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.065" endtime="20201029 12:47:04.507"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:04.510" endtime="20201029 12:47:04.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.508" endtime="20201029 12:47:04.530"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.539" endtime="20201029 12:47:04.575"></status>
</kw>
<msg timestamp="20201029 12:47:04.576" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.537" endtime="20201029 12:47:04.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.578" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.577" endtime="20201029 12:47:04.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.580" endtime="20201029 12:47:04.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.534" endtime="20201029 12:47:04.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.532" endtime="20201029 12:47:04.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.590" endtime="20201029 12:47:04.877"></status>
</kw>
<msg timestamp="20201029 12:47:04.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01728175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017572722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:04.588" endtime="20201029 12:47:04.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01728175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017572722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:04.881" endtime="20201029 12:47:04.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.889" endtime="20201029 12:47:04.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.585" endtime="20201029 12:47:04.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.583" endtime="20201029 12:47:04.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:04.896" level="INFO">${PHILIP_RES} = [{'diff': 0.00029097200000000045}, {'diff': 0.00029070800000000063}, {'diff': 0.000290679999999998}, {'diff': 0.00029069400000000106}, {'diff': 0.0002906249999999992}, {'diff': 0.00029069400000000106}...</msg>
<status status="PASS" starttime="20201029 12:47:04.892" endtime="20201029 12:47:04.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:04.900" level="INFO">${RESULT} = {'diff': [0.00029097200000000045, 0.00029070800000000063, 0.000290679999999998, 0.00029069400000000106, 0.0002906249999999992, 0.00029069400000000106, 0.000290679999999998, 0.0002906800000000015, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:04.897" endtime="20201029 12:47:04.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.905" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:04.904" endtime="20201029 12:47:04.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.908" level="INFO">VALUE: [0.00029097200000000045, 0.00029070800000000063, 0.000290679999999998, 0.00029069400000000106, 0.0002906249999999992, 0.00029069400000000106, 0.000290679999999998, 0.0002906800000000015, 0.0002907220000000002, 0.00029061099999999965, 0.00029073599999999977, 0.00029069400000000106, 0.0002907220000000002, 0.0002907220000000002, 0.00029072199999999673, 0.00029070800000000063, 0.00029072199999999673, 0.00029070800000000063, 0.00029070799999999716, 0.0002907220000000002, 0.0002906939999999976, 0.00029070800000000063, 0.000290679999999998, 0.00029069400000000106, 0.0002906669999999979, 0.00029070799999999716, 0.00029069400000000106, 0.0002907220000000002, 0.00029062499999999575, 0.00029062499999999575, 0.0002906670000000014, 0.0002906670000000014, 0.0002906670000000014, 0.0002906939999999941, 0.0002907220000000002, 0.0002907220000000002, 0.0002906670000000014, 0.0002906939999999941, 0.00029070800000000063, 0.0002906530000000018, 0.00029069400000000106, 0.0002907090000000001, 0.00029069400000000106, 0.00029069400000000106, 0.00029069400000000106, 0.0002907229999999997, 0.00029068100000000097, 0.00029069400000000106, 0.00029069400000000106, 0.0002907090000000001]</msg>
<status status="PASS" starttime="20201029 12:47:04.906" endtime="20201029 12:47:04.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.901" endtime="20201029 12:47:04.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.531" endtime="20201029 12:47:04.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.508" endtime="20201029 12:47:04.910"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:04.913" endtime="20201029 12:47:04.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.911" endtime="20201029 12:47:04.933"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.941" endtime="20201029 12:47:04.978"></status>
</kw>
<msg timestamp="20201029 12:47:04.978" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.940" endtime="20201029 12:47:04.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.981" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.979" endtime="20201029 12:47:04.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.982" endtime="20201029 12:47:04.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.937" endtime="20201029 12:47:04.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.935" endtime="20201029 12:47:04.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.992" endtime="20201029 12:47:05.277"></status>
</kw>
<msg timestamp="20201029 12:47:05.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017120236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017422931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.991" endtime="20201029 12:47:05.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017120236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017422931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.281" endtime="20201029 12:47:05.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.289" endtime="20201029 12:47:05.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.988" endtime="20201029 12:47:05.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.986" endtime="20201029 12:47:05.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:05.296" level="INFO">${PHILIP_RES} = [{'diff': 0.00030269499999999866}, {'diff': 0.00030241699999999927}, {'diff': 0.00030244399999999894}, {'diff': 0.0003024159999999998}, {'diff': 0.0003024579999999985}, {'diff': 0.0003024860000000011}...</msg>
<status status="PASS" starttime="20201029 12:47:05.293" endtime="20201029 12:47:05.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:05.300" level="INFO">${RESULT} = {'diff': [0.00030269499999999866, 0.00030241699999999927, 0.00030244399999999894, 0.0003024159999999998, 0.0003024579999999985, 0.0003024860000000011, 0.00030244399999999894, 0.00030241699999999927, 0...</msg>
<status status="PASS" starttime="20201029 12:47:05.297" endtime="20201029 12:47:05.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.305" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:05.304" endtime="20201029 12:47:05.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.307" level="INFO">VALUE: [0.00030269499999999866, 0.00030241699999999927, 0.00030244399999999894, 0.0003024159999999998, 0.0003024579999999985, 0.0003024860000000011, 0.00030244399999999894, 0.00030241699999999927, 0.00030243099999999884, 0.00030243099999999884, 0.00030242999999999937, 0.00030243099999999884, 0.0003024449999999984, 0.00030242999999999937, 0.00030244399999999894, 0.00030241699999999927, 0.0003023749999999971, 0.0003024860000000011, 0.00030241699999999927, 0.00030237500000000056, 0.0003024579999999985, 0.00030247200000000155, 0.00030238900000000013, 0.00030243099999999884, 0.00030242999999999937, 0.0003024310000000058, 0.00030250000000000415, 0.00030242999999999937, 0.0003024020000000002, 0.000302472000000005, 0.00030244500000000535, 0.00030245800000000544, 0.0003024860000000046, 0.00030248599999999765, 0.0003024170000000062, 0.00030242999999999937, 0.0003024310000000058, 0.00030243099999999884, 0.0003024300000000063, 0.0003024159999999998, 0.0003024310000000058, 0.0003024029999999997, 0.0003024300000000063, 0.0003024310000000058, 0.00030244500000000535, 0.0003024159999999998, 0.0003024159999999998, 0.0003024170000000062, 0.0003024310000000058, 0.0003024159999999998]</msg>
<status status="PASS" starttime="20201029 12:47:05.306" endtime="20201029 12:47:05.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.301" endtime="20201029 12:47:05.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.933" endtime="20201029 12:47:05.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.910" endtime="20201029 12:47:05.310"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:05.312" endtime="20201029 12:47:05.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.311" endtime="20201029 12:47:05.332"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.341" endtime="20201029 12:47:05.378"></status>
</kw>
<msg timestamp="20201029 12:47:05.379" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.339" endtime="20201029 12:47:05.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.381" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.380" endtime="20201029 12:47:05.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.382" endtime="20201029 12:47:05.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.336" endtime="20201029 12:47:05.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.334" endtime="20201029 12:47:05.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.392" endtime="20201029 12:47:05.677"></status>
</kw>
<msg timestamp="20201029 12:47:05.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017059958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017374583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.390" endtime="20201029 12:47:05.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017059958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017374583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.681" endtime="20201029 12:47:05.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.689" endtime="20201029 12:47:05.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.387" endtime="20201029 12:47:05.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.386" endtime="20201029 12:47:05.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:05.696" level="INFO">${PHILIP_RES} = [{'diff': 0.00031462499999999893}, {'diff': 0.00031437500000000215}, {'diff': 0.0003143060000000003}, {'diff': 0.0003143749999999987}, {'diff': 0.00031438899999999825}, {'diff': 0.00031437500000000215...</msg>
<status status="PASS" starttime="20201029 12:47:05.693" endtime="20201029 12:47:05.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:05.701" level="INFO">${RESULT} = {'diff': [0.00031462499999999893, 0.00031437500000000215, 0.0003143060000000003, 0.0003143749999999987, 0.00031438899999999825, 0.00031437500000000215, 0.0003143199999999999, 0.0003143749999999987, 0....</msg>
<status status="PASS" starttime="20201029 12:47:05.697" endtime="20201029 12:47:05.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.705" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:05.704" endtime="20201029 12:47:05.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.708" level="INFO">VALUE: [0.00031462499999999893, 0.00031437500000000215, 0.0003143060000000003, 0.0003143749999999987, 0.00031438899999999825, 0.00031437500000000215, 0.0003143199999999999, 0.0003143749999999987, 0.0003143749999999987, 0.0003143749999999987, 0.00031437500000000215, 0.0003143609999999991, 0.0003143749999999987, 0.0003143609999999991, 0.0003144030000000013, 0.0003144030000000013, 0.0003143749999999987, 0.00031438899999999825, 0.00031437500000000215, 0.0003144030000000013, 0.00031433399999999945, 0.0003143749999999987, 0.0003143609999999991, 0.0003143890000000017, 0.0003143199999999999, 0.0003143750000000056, 0.00031438899999999825, 0.00031438899999999825, 0.0003143609999999991, 0.00031444399999999706, 0.0003143749999999987, 0.0003143749999999987, 0.00031438899999999825, 0.0003143750000000056, 0.0003143749999999987, 0.0003144029999999978, 0.0003143609999999991, 0.0003143609999999991, 0.0003143890000000052, 0.0003143749999999987, 0.000314333, 0.0003143749999999987, 0.0003143879999999988, 0.000314333, 0.0003143749999999987, 0.0003144299999999975, 0.0003143750000000056, 0.00031438899999999825, 0.0003143749999999987, 0.0003143609999999991]</msg>
<status status="PASS" starttime="20201029 12:47:05.707" endtime="20201029 12:47:05.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.702" endtime="20201029 12:47:05.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.333" endtime="20201029 12:47:05.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.310" endtime="20201029 12:47:05.710"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:05.712" endtime="20201029 12:47:05.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.711" endtime="20201029 12:47:05.732"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.741" endtime="20201029 12:47:05.780"></status>
</kw>
<msg timestamp="20201029 12:47:05.780" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.739" endtime="20201029 12:47:05.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.783" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.781" endtime="20201029 12:47:05.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.784" endtime="20201029 12:47:05.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.736" endtime="20201029 12:47:05.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.734" endtime="20201029 12:47:05.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.793" endtime="20201029 12:47:06.081"></status>
</kw>
<msg timestamp="20201029 12:47:06.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017035389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017362222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.792" endtime="20201029 12:47:06.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017035389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017362222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.085" endtime="20201029 12:47:06.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.093" endtime="20201029 12:47:06.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.789" endtime="20201029 12:47:06.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.787" endtime="20201029 12:47:06.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:06.099" level="INFO">${PHILIP_RES} = [{'diff': 0.0003268329999999986}, {'diff': 0.00032658299999999835}, {'diff': 0.0003265830000000018}, {'diff': 0.0003265830000000018}, {'diff': 0.0003265549999999992}, {'diff': 0.0003265559999999987}, ...</msg>
<status status="PASS" starttime="20201029 12:47:06.096" endtime="20201029 12:47:06.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:06.103" level="INFO">${RESULT} = {'diff': [0.0003268329999999986, 0.00032658299999999835, 0.0003265830000000018, 0.0003265830000000018, 0.0003265549999999992, 0.0003265559999999987, 0.00032652799999999954, 0.0003265419999999991, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:06.100" endtime="20201029 12:47:06.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.108" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:06.107" endtime="20201029 12:47:06.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.110" level="INFO">VALUE: [0.0003268329999999986, 0.00032658299999999835, 0.0003265830000000018, 0.0003265830000000018, 0.0003265549999999992, 0.0003265559999999987, 0.00032652799999999954, 0.0003265419999999991, 0.0003265000000000004, 0.0003265550000000027, 0.0003265979999999974, 0.0003265549999999992, 0.0003265700000000017, 0.0003265550000000027, 0.00032648600000000083, 0.0003265549999999992, 0.0003265419999999991, 0.0003265840000000013, 0.00032656900000000225, 0.0003265000000000004, 0.0003265549999999992, 0.0003265559999999987, 0.0003265549999999992, 0.00032655600000000215, 0.00032651399999999997, 0.0003265419999999991, 0.0003265549999999992, 0.0003265559999999987, 0.0003265559999999987, 0.0003265689999999988, 0.000326625000000004, 0.00032648600000000083, 0.0003265559999999987, 0.00032647200000000126, 0.0003265559999999987, 0.0003265549999999992, 0.00032656999999999825, 0.0003265419999999991, 0.0003265559999999987, 0.00032658400000000476, 0.0003266110000000044, 0.0003265560000000056, 0.0003265549999999992, 0.0003265559999999987, 0.00032652700000000007, 0.00032658299999999835, 0.0003265969999999979, 0.0003265559999999987, 0.0003265419999999991, 0.0003265559999999987]</msg>
<status status="PASS" starttime="20201029 12:47:06.109" endtime="20201029 12:47:06.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.104" endtime="20201029 12:47:06.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.733" endtime="20201029 12:47:06.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.710" endtime="20201029 12:47:06.112"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:06.114" endtime="20201029 12:47:06.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.113" endtime="20201029 12:47:06.135"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.143" endtime="20201029 12:47:06.183"></status>
</kw>
<msg timestamp="20201029 12:47:06.183" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.141" endtime="20201029 12:47:06.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.186" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.184" endtime="20201029 12:47:06.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.187" endtime="20201029 12:47:06.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.139" endtime="20201029 12:47:06.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.137" endtime="20201029 12:47:06.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.197" endtime="20201029 12:47:06.483"></status>
</kw>
<msg timestamp="20201029 12:47:06.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017051194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017390417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.196" endtime="20201029 12:47:06.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017051194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017390417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.487" endtime="20201029 12:47:06.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.495" endtime="20201029 12:47:06.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.193" endtime="20201029 12:47:06.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.191" endtime="20201029 12:47:06.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:06.501" level="INFO">${PHILIP_RES} = [{'diff': 0.0003392229999999996}, {'diff': 0.00033895799999999685}, {'diff': 0.000338887999999999}, {'diff': 0.0003388749999999989}, {'diff': 0.0003389580000000003}, {'diff': 0.0003389580000000003}, {...</msg>
<status status="PASS" starttime="20201029 12:47:06.498" endtime="20201029 12:47:06.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:06.506" level="INFO">${RESULT} = {'diff': [0.0003392229999999996, 0.00033895799999999685, 0.000338887999999999, 0.0003388749999999989, 0.0003389580000000003, 0.0003389580000000003, 0.0003389589999999998, 0.0003389170000000011, 0.0003...</msg>
<status status="PASS" starttime="20201029 12:47:06.502" endtime="20201029 12:47:06.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.510" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:06.509" endtime="20201029 12:47:06.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.513" level="INFO">VALUE: [0.0003392229999999996, 0.00033895799999999685, 0.000338887999999999, 0.0003388749999999989, 0.0003389580000000003, 0.0003389580000000003, 0.0003389589999999998, 0.0003389170000000011, 0.0003389719999999999, 0.00033902799999999816, 0.00033895799999999685, 0.000338999999999999, 0.0003389589999999998, 0.0003389580000000003, 0.0003390000000000025, 0.0003389589999999998, 0.00033894400000000074, 0.0003389719999999999, 0.0003389589999999998, 0.0003389580000000003, 0.0003389450000000002, 0.0003389309999999972, 0.0003389439999999973, 0.0003389719999999999, 0.0003389580000000003, 0.0003389719999999999, 0.0003389589999999998, 0.0003389449999999933, 0.0003389580000000003, 0.0003389589999999998, 0.0003389589999999998, 0.0003389580000000003, 0.0003389719999999999, 0.0003389450000000002, 0.0003389300000000012, 0.0003389719999999999, 0.0003389580000000003, 0.0003389719999999999, 0.0003389450000000002, 0.00033888900000000194, 0.00033894400000000074, 0.00033897299999999936, 0.00033894400000000074, 0.0003389580000000003, 0.0003389450000000002, 0.0003389580000000003, 0.0003389580000000003, 0.0003389030000000015, 0.0003389580000000003, 0.0003389580000000003]</msg>
<status status="PASS" starttime="20201029 12:47:06.511" endtime="20201029 12:47:06.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.507" endtime="20201029 12:47:06.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.135" endtime="20201029 12:47:06.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.112" endtime="20201029 12:47:06.515"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:06.518" endtime="20201029 12:47:06.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.516" endtime="20201029 12:47:06.538"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.546" endtime="20201029 12:47:06.587"></status>
</kw>
<msg timestamp="20201029 12:47:06.587" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.545" endtime="20201029 12:47:06.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.590" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.588" endtime="20201029 12:47:06.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.591" endtime="20201029 12:47:06.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.542" endtime="20201029 12:47:06.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.540" endtime="20201029 12:47:06.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.600" endtime="20201029 12:47:06.886"></status>
</kw>
<msg timestamp="20201029 12:47:06.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017067111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017418958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.599" endtime="20201029 12:47:06.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017067111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017418958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.890" endtime="20201029 12:47:06.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.898" endtime="20201029 12:47:06.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.596" endtime="20201029 12:47:06.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.594" endtime="20201029 12:47:06.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:06.904" level="INFO">${PHILIP_RES} = [{'diff': 0.0003518469999999989}, {'diff': 0.00035158399999999854}, {'diff': 0.00035158299999999906}, {'diff': 0.00035162500000000124}, {'diff': 0.00035159699999999863}, {'diff': 0.0003515689999999995...</msg>
<status status="PASS" starttime="20201029 12:47:06.901" endtime="20201029 12:47:06.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:06.909" level="INFO">${RESULT} = {'diff': [0.0003518469999999989, 0.00035158399999999854, 0.00035158299999999906, 0.00035162500000000124, 0.00035159699999999863, 0.0003515689999999995, 0.0003515970000000021, 0.00035159699999999863, 0...</msg>
<status status="PASS" starttime="20201029 12:47:06.905" endtime="20201029 12:47:06.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.914" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:06.913" endtime="20201029 12:47:06.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.916" level="INFO">VALUE: [0.0003518469999999989, 0.00035158399999999854, 0.00035158299999999906, 0.00035162500000000124, 0.00035159699999999863, 0.0003515689999999995, 0.0003515970000000021, 0.00035159699999999863, 0.00035156999999999897, 0.00035158300000000253, 0.0003515419999999998, 0.00035158299999999906, 0.00035158300000000253, 0.00035159699999999863, 0.0003515689999999995, 0.0003515559999999994, 0.00035158299999999906, 0.0003516390000000008, 0.0003516109999999982, 0.0003515689999999995, 0.000351584000000002, 0.0003515689999999995, 0.0003516109999999982, 0.00035156900000000296, 0.0003515699999999955, 0.00035155599999999593, 0.00035158300000000253, 0.000351584000000002, 0.00035159699999999516, 0.000351584000000002, 0.000351568999999996, 0.00035159699999999516, 0.00035162500000000124, 0.00035158300000000253, 0.0003516119999999942, 0.0003516530000000004, 0.000351584000000002, 0.00035159699999999516, 0.00035158300000000253, 0.00035155600000000287, 0.00035159699999999516, 0.000351584000000002, 0.00035158300000000253, 0.0003515699999999955, 0.0003515970000000021, 0.00035158300000000253, 0.00035161099999999473, 0.00035158300000000253, 0.000351584000000002, 0.0003515829999999956]</msg>
<status status="PASS" starttime="20201029 12:47:06.915" endtime="20201029 12:47:06.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.910" endtime="20201029 12:47:06.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.538" endtime="20201029 12:47:06.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.516" endtime="20201029 12:47:06.918"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:06.921" endtime="20201029 12:47:06.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.919" endtime="20201029 12:47:06.941"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.949" endtime="20201029 12:47:06.991"></status>
</kw>
<msg timestamp="20201029 12:47:06.992" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.948" endtime="20201029 12:47:06.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.994" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.993" endtime="20201029 12:47:06.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.995" endtime="20201029 12:47:06.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.945" endtime="20201029 12:47:06.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.943" endtime="20201029 12:47:06.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.005" endtime="20201029 12:47:07.292"></status>
</kw>
<msg timestamp="20201029 12:47:07.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017489458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017854097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.003" endtime="20201029 12:47:07.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017489458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017854097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.296" endtime="20201029 12:47:07.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.304" endtime="20201029 12:47:07.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.000" endtime="20201029 12:47:07.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.999" endtime="20201029 12:47:07.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:07.311" level="INFO">${PHILIP_RES} = [{'diff': 0.00036463899999999994}, {'diff': 0.00036440299999999926}, {'diff': 0.00036450000000000024}, {'diff': 0.0003644300000000024}, {'diff': 0.00036438900000000315}, {'diff': 0.0003644310000000018...</msg>
<status status="PASS" starttime="20201029 12:47:07.308" endtime="20201029 12:47:07.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:07.315" level="INFO">${RESULT} = {'diff': [0.00036463899999999994, 0.00036440299999999926, 0.00036450000000000024, 0.0003644300000000024, 0.00036438900000000315, 0.00036443100000000186, 0.00036444400000000196, 0.0003644439999999985, ...</msg>
<status status="PASS" starttime="20201029 12:47:07.312" endtime="20201029 12:47:07.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.319" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:07.318" endtime="20201029 12:47:07.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.322" level="INFO">VALUE: [0.00036463899999999994, 0.00036440299999999926, 0.00036450000000000024, 0.0003644300000000024, 0.00036438900000000315, 0.00036443100000000186, 0.00036444400000000196, 0.0003644439999999985, 0.00036440299999999926, 0.0003644439999999985, 0.0003644299999999989, 0.0003644309999999984, 0.00036444500000000143, 0.0003644299999999989, 0.0003644300000000024, 0.0003644169999999988, 0.0003643750000000001, 0.0003644299999999989, 0.00036444500000000143, 0.0003644309999999984, 0.0003644160000000028, 0.0003644169999999988, 0.0003643889999999997, 0.00036444400000000543, 0.0003644439999999985, 0.00036449999999999677, 0.0003644309999999984, 0.00036440299999999926, 0.0003644299999999989, 0.0003644309999999984, 0.0003644309999999984, 0.0003644299999999989, 0.0003644450000000049, 0.0003644309999999984, 0.0003644439999999985, 0.0003644299999999989, 0.00036441700000000576, 0.0003644439999999985, 0.00036440299999999926, 0.0003644309999999984, 0.000364458000000005, 0.00036441599999999935, 0.0003644439999999985, 0.0003644309999999984, 0.0003644299999999989, 0.0003644439999999985, 0.0003644309999999984, 0.0003644309999999984, 0.0003644299999999989, 0.00036441700000000576]</msg>
<status status="PASS" starttime="20201029 12:47:07.320" endtime="20201029 12:47:07.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.316" endtime="20201029 12:47:07.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.941" endtime="20201029 12:47:07.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.919" endtime="20201029 12:47:07.324"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:07.326" endtime="20201029 12:47:07.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.325" endtime="20201029 12:47:07.346"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.355" endtime="20201029 12:47:07.398"></status>
</kw>
<msg timestamp="20201029 12:47:07.398" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.353" endtime="20201029 12:47:07.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.401" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.399" endtime="20201029 12:47:07.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.402" endtime="20201029 12:47:07.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.350" endtime="20201029 12:47:07.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.348" endtime="20201029 12:47:07.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.412" endtime="20201029 12:47:07.697"></status>
</kw>
<msg timestamp="20201029 12:47:07.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017141278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017519083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.410" endtime="20201029 12:47:07.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017141278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017519083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.701" endtime="20201029 12:47:07.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.709" endtime="20201029 12:47:07.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.408" endtime="20201029 12:47:07.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.406" endtime="20201029 12:47:07.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:07.716" level="INFO">${PHILIP_RES} = [{'diff': 0.0003778050000000019}, {'diff': 0.00037751399999999893}, {'diff': 0.0003775279999999985}, {'diff': 0.00037750000000000283}, {'diff': 0.00037749999999999936}, {'diff': 0.0003775140000000024}...</msg>
<status status="PASS" starttime="20201029 12:47:07.713" endtime="20201029 12:47:07.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:07.720" level="INFO">${RESULT} = {'diff': [0.0003778050000000019, 0.00037751399999999893, 0.0003775279999999985, 0.00037750000000000283, 0.00037749999999999936, 0.0003775140000000024, 0.0003775279999999985, 0.0003775140000000024, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:07.717" endtime="20201029 12:47:07.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.725" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:07.724" endtime="20201029 12:47:07.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.727" level="INFO">VALUE: [0.0003778050000000019, 0.00037751399999999893, 0.0003775279999999985, 0.00037750000000000283, 0.00037749999999999936, 0.0003775140000000024, 0.0003775279999999985, 0.0003775140000000024, 0.00037749999999999936, 0.00037751399999999893, 0.00037752699999999903, 0.00037751399999999893, 0.00037749999999999936, 0.0003775419999999981, 0.0003775140000000024, 0.00037749999999999936, 0.0003775140000000024, 0.00037749999999999936, 0.0003775279999999985, 0.000377528000000002, 0.0003775140000000024, 0.00037747199999999675, 0.00037750000000000283, 0.0003775140000000024, 0.0003774999999999959, 0.000377512999999996, 0.0003775140000000024, 0.00037744500000000403, 0.00037751399999999546, 0.00037750000000000283, 0.00037750000000000283, 0.0003775140000000024, 0.00037752799999999503, 0.00037750000000000283, 0.0003775140000000024, 0.0003774999999999959, 0.00037756899999999427, 0.0003774580000000041, 0.0003775140000000024, 0.00037751399999999546, 0.0003775270000000025, 0.00037750000000000283, 0.0003774999999999959, 0.00037750000000000283, 0.000377528000000002, 0.0003775270000000025, 0.00037752799999999503, 0.00037754200000000154, 0.00037754200000000154, 0.00037751399999999546]</msg>
<status status="PASS" starttime="20201029 12:47:07.726" endtime="20201029 12:47:07.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.721" endtime="20201029 12:47:07.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.347" endtime="20201029 12:47:07.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.324" endtime="20201029 12:47:07.730"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:07.732" endtime="20201029 12:47:07.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.731" endtime="20201029 12:47:07.752"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.761" endtime="20201029 12:47:07.806"></status>
</kw>
<msg timestamp="20201029 12:47:07.806" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.759" endtime="20201029 12:47:07.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.809" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.807" endtime="20201029 12:47:07.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.810" endtime="20201029 12:47:07.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.757" endtime="20201029 12:47:07.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.754" endtime="20201029 12:47:07.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.819" endtime="20201029 12:47:08.127"></status>
</kw>
<msg timestamp="20201029 12:47:08.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017954, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018345097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:07.818" endtime="20201029 12:47:08.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017954, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018345097, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:08.131" endtime="20201029 12:47:08.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.139" endtime="20201029 12:47:08.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.815" endtime="20201029 12:47:08.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.813" endtime="20201029 12:47:08.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:08.145" level="INFO">${PHILIP_RES} = [{'diff': 0.00039109699999999997}, {'diff': 0.00039080499999999754}, {'diff': 0.000390790999999998}, {'diff': 0.0003907920000000009}, {'diff': 0.0003908060000000005}, {'diff': 0.0003908060000000005}, ...</msg>
<status status="PASS" starttime="20201029 12:47:08.142" endtime="20201029 12:47:08.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:08.150" level="INFO">${RESULT} = {'diff': [0.00039109699999999997, 0.00039080499999999754, 0.000390790999999998, 0.0003907920000000009, 0.0003908060000000005, 0.0003908060000000005, 0.00039082000000000006, 0.0003908060000000005, 0.00...</msg>
<status status="PASS" starttime="20201029 12:47:08.146" endtime="20201029 12:47:08.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.155" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:08.154" endtime="20201029 12:47:08.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.157" level="INFO">VALUE: [0.00039109699999999997, 0.00039080499999999754, 0.000390790999999998, 0.0003907920000000009, 0.0003908060000000005, 0.0003908060000000005, 0.00039082000000000006, 0.0003908060000000005, 0.0003907920000000009, 0.0003908190000000006, 0.000390805000000001, 0.00039074999999999874, 0.0003908609999999993, 0.00039073599999999917, 0.0003908609999999993, 0.0003908060000000005, 0.00039074999999999874, 0.0003907640000000018, 0.00039079100000000144, 0.0003908049999999941, 0.00039083300000000015, 0.0003908190000000006, 0.00039077800000000135, 0.00039077800000000135, 0.0003907920000000009, 0.0003908609999999993, 0.0003908469999999997, 0.0003908190000000006, 0.000390805000000001, 0.0003907920000000009, 0.0003908339999999996, 0.0003908060000000005, 0.0003908060000000005, 0.00039077800000000135, 0.0003908190000000006, 0.0003908190000000006, 0.000390805000000001, 0.0003908190000000006, 0.00039086199999999877, 0.00039086100000000623, 0.00039082000000000006, 0.00039082000000000006, 0.000390805000000001, 0.0003908190000000006, 0.00039079100000000144, 0.0003908190000000006, 0.0003908479999999992, 0.0003907920000000009, 0.0003908060000000005, 0.0003907920000000009]</msg>
<status status="PASS" starttime="20201029 12:47:08.156" endtime="20201029 12:47:08.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.151" endtime="20201029 12:47:08.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.753" endtime="20201029 12:47:08.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.730" endtime="20201029 12:47:08.159"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:08.162" endtime="20201029 12:47:08.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.160" endtime="20201029 12:47:08.181"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.190" endtime="20201029 12:47:08.235"></status>
</kw>
<msg timestamp="20201029 12:47:08.235" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.188" endtime="20201029 12:47:08.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.238" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:08.236" endtime="20201029 12:47:08.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.239" endtime="20201029 12:47:08.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.186" endtime="20201029 12:47:08.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.184" endtime="20201029 12:47:08.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.248" endtime="20201029 12:47:08.534"></status>
</kw>
<msg timestamp="20201029 12:47:08.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017159847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017564458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:08.247" endtime="20201029 12:47:08.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017159847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017564458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:08.539" endtime="20201029 12:47:08.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:08.547" endtime="20201029 12:47:08.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.244" endtime="20201029 12:47:08.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.242" endtime="20201029 12:47:08.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:47:08.553" level="INFO">${PHILIP_RES} = [{'diff': 0.00040461100000000264}, {'diff': 0.0004043190000000002}, {'diff': 0.0004043610000000024}, {'diff': 0.0004043479999999988}, {'diff': 0.00040433399999999925}, {'diff': 0.0004043329999999998},...</msg>
<status status="PASS" starttime="20201029 12:47:08.550" endtime="20201029 12:47:08.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:08.557" level="INFO">${RESULT} = {'diff': [0.00040461100000000264, 0.0004043190000000002, 0.0004043610000000024, 0.0004043479999999988, 0.00040433399999999925, 0.0004043329999999998, 0.0004043329999999998, 0.00040434699999999935, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:08.554" endtime="20201029 12:47:08.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.562" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 12:47:08.561" endtime="20201029 12:47:08.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.564" level="INFO">VALUE: [0.00040461100000000264, 0.0004043190000000002, 0.0004043610000000024, 0.0004043479999999988, 0.00040433399999999925, 0.0004043329999999998, 0.0004043329999999998, 0.00040434699999999935, 0.0004043609999999989, 0.00040434699999999935, 0.0004043190000000002, 0.0004043199999999997, 0.0004043329999999998, 0.0004043329999999998, 0.00040434699999999935, 0.0004043190000000002, 0.0004043060000000001, 0.0004043199999999997, 0.00040434699999999935, 0.0004043470000000028, 0.00040433399999999925, 0.0004043060000000001, 0.0004043329999999998, 0.0004043329999999998, 0.00040434699999999935, 0.00040433399999999925, 0.0004043329999999998, 0.0004043190000000002, 0.0004043749999999985, 0.0004043479999999988, 0.00040434699999999935, 0.00040431899999999327, 0.0004043749999999985, 0.0004043060000000001, 0.00040434699999999935, 0.0004043329999999998, 0.0004043329999999998, 0.0004043329999999998, 0.0004043199999999997, 0.0004043329999999998, 0.00040429200000000054, 0.00040433399999999925, 0.00040433399999999925, 0.0004043329999999998, 0.0004043329999999998, 0.00040434699999999935, 0.00040429200000000054, 0.00040434699999999935, 0.0004043329999999998, 0.0004043329999999998]</msg>
<status status="PASS" starttime="20201029 12:47:08.563" endtime="20201029 12:47:08.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.558" endtime="20201029 12:47:08.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.182" endtime="20201029 12:47:08.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.159" endtime="20201029 12:47:08.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.896" endtime="20201029 12:47:08.566"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:46.616" endtime="20201029 12:47:08.567" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:46:22.890" endtime="20201029 12:47:08.576"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:47:08.649" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:47:08.657" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:47:09.750" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:47:08.647" endtime="20201029 12:47:09.751"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:47:10.754" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 12:47:09.752" endtime="20201029 12:47:10.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.646" endtime="20201029 12:47:10.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:10.761" endtime="20201029 12:47:11.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:10.758" endtime="20201029 12:47:11.044"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.057" endtime="20201029 12:47:11.077"></status>
</kw>
<msg timestamp="20201029 12:47:11.077" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.055" endtime="20201029 12:47:11.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.080" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.078" endtime="20201029 12:47:11.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.083" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:11.081" endtime="20201029 12:47:11.083"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:11.053" endtime="20201029 12:47:11.084"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:11.051" endtime="20201029 12:47:11.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.049" endtime="20201029 12:47:11.085"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:11.090" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:11.089" endtime="20201029 12:47:11.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.086" endtime="20201029 12:47:11.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.049" endtime="20201029 12:47:11.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.048" endtime="20201029 12:47:11.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.092" endtime="20201029 12:47:11.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.047" endtime="20201029 12:47:11.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.095" endtime="20201029 12:47:11.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.045" endtime="20201029 12:47:11.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:08.645" endtime="20201029 12:47:11.097"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:11.103" endtime="20201029 12:47:11.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.102" endtime="20201029 12:47:11.123"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.137" endtime="20201029 12:47:11.155"></status>
</kw>
<msg timestamp="20201029 12:47:11.156" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.135" endtime="20201029 12:47:11.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.158" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.157" endtime="20201029 12:47:11.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.161" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:11.159" endtime="20201029 12:47:11.162"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:11.133" endtime="20201029 12:47:11.162"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:11.130" endtime="20201029 12:47:11.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.129" endtime="20201029 12:47:11.163"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:11.167" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:11.166" endtime="20201029 12:47:11.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.164" endtime="20201029 12:47:11.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.128" endtime="20201029 12:47:11.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.128" endtime="20201029 12:47:11.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.169" endtime="20201029 12:47:11.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.126" endtime="20201029 12:47:11.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.124" endtime="20201029 12:47:11.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.100" endtime="20201029 12:47:11.171"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.183" endtime="20201029 12:47:11.201"></status>
</kw>
<msg timestamp="20201029 12:47:11.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.181" endtime="20201029 12:47:11.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.202" endtime="20201029 12:47:11.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.205" endtime="20201029 12:47:11.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.177" endtime="20201029 12:47:11.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.175" endtime="20201029 12:47:11.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.214" endtime="20201029 12:47:11.504"></status>
</kw>
<msg timestamp="20201029 12:47:11.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069769639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069792472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.213" endtime="20201029 12:47:11.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069769639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069792472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.509" endtime="20201029 12:47:11.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.517" endtime="20201029 12:47:11.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.210" endtime="20201029 12:47:11.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.208" endtime="20201029 12:47:11.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:11.527" level="INFO">${RESULT} = [{'diff': 2.283299999999988e-05}, {'diff': 1.434699999999789e-05}, {'diff': 1.4180000000002524e-05}, {'diff': 1.4110999999997209e-05}, {'diff': 1.354099999999192e-05}, {'diff': 1.3917000000002178e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:11.523" endtime="20201029 12:47:11.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:11.534" level="INFO">${ACCURACY} = {'diff': [2.283299999999988e-05, 1.434699999999789e-05, 1.4180000000002524e-05, 1.4110999999997209e-05, 1.354099999999192e-05, 1.3917000000002178e-05, 1.4097000000004578e-05, 1.3957999999994475e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:47:11.530" endtime="20201029 12:47:11.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.544" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 12:47:11.542" endtime="20201029 12:47:11.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.549" level="INFO">VALUE: [2.283299999999988e-05, 1.434699999999789e-05, 1.4180000000002524e-05, 1.4110999999997209e-05, 1.354099999999192e-05, 1.3917000000002178e-05, 1.4097000000004578e-05, 1.3957999999994475e-05, 1.3723000000007146e-05, 1.3930999999994809e-05, 1.4361000000004398e-05, 1.412499999998984e-05, 1.4181000000001998e-05, 1.3917000000002178e-05, 1.4236000000000804e-05, 1.4042000000005772e-05, 1.4417000000002678e-05, 1.4457999999994975e-05, 1.3806000000005092e-05, 1.4181000000001998e-05, 1.3986000000007492e-05, 1.4361000000004398e-05, 1.3721999999993795e-05, 1.4041999999991894e-05, 1.4388000000004064e-05, 1.4374999999997029e-05, 1.3736000000000304e-05, 1.4027999999999263e-05, 1.3861000000003898e-05, 1.3819999999997723e-05, 1.3917000000002178e-05, 1.4222000000008173e-05, 1.4223000000007646e-05, 1.361200000001006e-05, 1.4209000000001137e-05, 1.3736999999999777e-05, 1.4027999999999263e-05, 1.356899999999106e-05, 1.4291999999999083e-05, 1.4111999999996683e-05, 1.3723000000007146e-05, 1.4166000000009893e-05, 1.3639000000009727e-05, 1.4193999999995155e-05, 1.3972000000000984e-05, 1.4416000000003204e-05, 1.438899999998966e-05, 1.4305000000006118e-05, 1.4181000000001998e-05, 1.379099999999911e-05]</msg>
<status status="PASS" starttime="20201029 12:47:11.546" endtime="20201029 12:47:11.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.536" endtime="20201029 12:47:11.550"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:11.555" endtime="20201029 12:47:11.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.553" endtime="20201029 12:47:11.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.552" endtime="20201029 12:47:11.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.173" endtime="20201029 12:47:11.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.173" endtime="20201029 12:47:11.576"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.585" endtime="20201029 12:47:11.602"></status>
</kw>
<msg timestamp="20201029 12:47:11.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.583" endtime="20201029 12:47:11.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.604" endtime="20201029 12:47:11.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.606" endtime="20201029 12:47:11.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.581" endtime="20201029 12:47:11.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.578" endtime="20201029 12:47:11.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.616" endtime="20201029 12:47:11.902"></status>
</kw>
<msg timestamp="20201029 12:47:11.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019922611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019936417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.614" endtime="20201029 12:47:11.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019922611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019936417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.906" endtime="20201029 12:47:11.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.915" endtime="20201029 12:47:11.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.611" endtime="20201029 12:47:11.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.610" endtime="20201029 12:47:11.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:11.921" level="INFO">${RESULT} = [{'diff': 1.3806000000001623e-05}, {'diff': 1.3874999999999998e-05}, {'diff': 1.431899999999875e-05}, {'diff': 1.3680000000002024e-05}, {'diff': 1.3666999999998458e-05}, {'diff': 1.3987000000000027e-0...</msg>
<status status="PASS" starttime="20201029 12:47:11.918" endtime="20201029 12:47:11.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:11.927" level="INFO">${ACCURACY} = {'diff': [1.3806000000001623e-05, 1.3874999999999998e-05, 1.431899999999875e-05, 1.3680000000002024e-05, 1.3666999999998458e-05, 1.3987000000000027e-05, 1.3722999999996738e-05, 1.3986000000000554e-05,...</msg>
<status status="PASS" starttime="20201029 12:47:11.922" endtime="20201029 12:47:11.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.931" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 12:47:11.930" endtime="20201029 12:47:11.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.934" level="INFO">VALUE: [1.3806000000001623e-05, 1.3874999999999998e-05, 1.431899999999875e-05, 1.3680000000002024e-05, 1.3666999999998458e-05, 1.3987000000000027e-05, 1.3722999999996738e-05, 1.3986000000000554e-05, 1.4415999999999735e-05, 1.4471999999998014e-05, 1.3958000000001414e-05, 1.404099999999936e-05, 1.4486000000001054e-05, 1.3874999999999998e-05, 1.430499999999918e-05, 1.3679999999998554e-05, 1.402699999999979e-05, 1.3833000000001289e-05, 1.4361000000000929e-05, 1.3916000000002704e-05, 1.4485999999997584e-05, 1.3736000000000304e-05, 1.4402999999999638e-05, 1.4361000000000929e-05, 1.3680000000002024e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.3611000000000179e-05, 1.4320000000001692e-05, 1.3888999999999568e-05, 1.4471999999998014e-05, 1.3625000000003218e-05, 1.4416999999999208e-05, 1.3555999999997903e-05, 1.3708000000001164e-05, 1.3583000000001039e-05, 1.4222000000001234e-05, 1.4013999999999693e-05, 1.3916999999998708e-05, 1.4041999999998833e-05, 1.4181000000001998e-05, 1.4236000000000804e-05, 1.4430999999998778e-05, 1.4027999999999263e-05, 1.4236000000000804e-05, 1.3806000000001623e-05, 1.4416999999999208e-05, 1.4056000000001873e-05, 1.4360999999997459e-05, 1.4166999999998958e-05]</msg>
<status status="PASS" starttime="20201029 12:47:11.933" endtime="20201029 12:47:11.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.928" endtime="20201029 12:47:11.935"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:11.939" endtime="20201029 12:47:11.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.937" endtime="20201029 12:47:11.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.936" endtime="20201029 12:47:11.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.577" endtime="20201029 12:47:11.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.576" endtime="20201029 12:47:11.959"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.968" endtime="20201029 12:47:11.986"></status>
</kw>
<msg timestamp="20201029 12:47:11.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.967" endtime="20201029 12:47:11.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:11.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:11.988" endtime="20201029 12:47:11.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:11.990" endtime="20201029 12:47:11.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.964" endtime="20201029 12:47:11.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.962" endtime="20201029 12:47:11.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.000" endtime="20201029 12:47:12.287"></status>
</kw>
<msg timestamp="20201029 12:47:12.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019730875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:11.999" endtime="20201029 12:47:12.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019730875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.291" endtime="20201029 12:47:12.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.300" endtime="20201029 12:47:12.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.996" endtime="20201029 12:47:12.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.994" endtime="20201029 12:47:12.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:12.307" level="INFO">${RESULT} = [{'diff': 1.4152999999999388e-05}, {'diff': 1.4111000000000679e-05}, {'diff': 1.4027999999999263e-05}, {'diff': 1.3778000000002483e-05}, {'diff': 1.4486000000001054e-05}, {'diff': 1.3569999999997473e-...</msg>
<status status="PASS" starttime="20201029 12:47:12.303" endtime="20201029 12:47:12.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:12.311" level="INFO">${ACCURACY} = {'diff': [1.4152999999999388e-05, 1.4111000000000679e-05, 1.4027999999999263e-05, 1.3778000000002483e-05, 1.4486000000001054e-05, 1.3569999999997473e-05, 1.3597000000000609e-05, 1.3721999999997264e-05...</msg>
<status status="PASS" starttime="20201029 12:47:12.308" endtime="20201029 12:47:12.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.316" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 12:47:12.314" endtime="20201029 12:47:12.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.318" level="INFO">VALUE: [1.4152999999999388e-05, 1.4111000000000679e-05, 1.4027999999999263e-05, 1.3778000000002483e-05, 1.4486000000001054e-05, 1.3569999999997473e-05, 1.3597000000000609e-05, 1.3721999999997264e-05, 1.3736000000000304e-05, 1.3861000000000429e-05, 1.4000000000000123e-05, 1.4125000000000248e-05, 1.4263999999999943e-05, 1.3986000000000554e-05, 1.3916999999998708e-05, 1.3681000000001498e-05, 1.4013999999999693e-05, 1.4112000000000152e-05, 1.4292000000002553e-05, 1.4055999999998403e-05, 1.3929999999998804e-05, 1.4152999999999388e-05, 1.380499999999868e-05, 1.3902999999999138e-05, 1.4429999999999304e-05, 1.4042000000002303e-05, 1.3597000000000609e-05, 1.4027000000003259e-05, 1.4444999999998348e-05, 1.4360999999997459e-05, 1.434699999999789e-05, 1.4222000000001234e-05, 1.4472000000001484e-05, 1.3624999999999748e-05, 1.3651999999999415e-05, 1.3694000000001594e-05, 1.4471999999998014e-05, 1.3930000000002274e-05, 1.3736000000000304e-05, 1.4000000000000123e-05, 1.4486000000001054e-05, 1.434699999999789e-05, 1.3985999999997084e-05, 1.431899999999875e-05, 1.3888999999999568e-05, 1.4000000000000123e-05, 1.3681000000001498e-05, 1.4485999999997584e-05, 1.3958000000001414e-05, 1.4097000000001109e-05]</msg>
<status status="PASS" starttime="20201029 12:47:12.317" endtime="20201029 12:47:12.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.312" endtime="20201029 12:47:12.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:12.323" endtime="20201029 12:47:12.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.321" endtime="20201029 12:47:12.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.320" endtime="20201029 12:47:12.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.960" endtime="20201029 12:47:12.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.960" endtime="20201029 12:47:12.343"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.353" endtime="20201029 12:47:12.371"></status>
</kw>
<msg timestamp="20201029 12:47:12.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.351" endtime="20201029 12:47:12.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.373" endtime="20201029 12:47:12.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.376" endtime="20201029 12:47:12.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.348" endtime="20201029 12:47:12.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.346" endtime="20201029 12:47:12.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.385" endtime="20201029 12:47:12.671"></status>
</kw>
<msg timestamp="20201029 12:47:12.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020792111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020806208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.384" endtime="20201029 12:47:12.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020792111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020806208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.675" endtime="20201029 12:47:12.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.684" endtime="20201029 12:47:12.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.381" endtime="20201029 12:47:12.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.379" endtime="20201029 12:47:12.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:12.691" level="INFO">${RESULT} = [{'diff': 1.4097000000001109e-05}, {'diff': 1.3763999999999443e-05}, {'diff': 1.3915999999999235e-05}, {'diff': 1.3915999999999235e-05}, {'diff': 1.3611000000000179e-05}, {'diff': 1.3513999999999193e-...</msg>
<status status="PASS" starttime="20201029 12:47:12.687" endtime="20201029 12:47:12.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:12.695" level="INFO">${ACCURACY} = {'diff': [1.4097000000001109e-05, 1.3763999999999443e-05, 1.3915999999999235e-05, 1.3915999999999235e-05, 1.3611000000000179e-05, 1.3513999999999193e-05, 1.4097000000001109e-05, 1.3861000000000429e-05...</msg>
<status status="PASS" starttime="20201029 12:47:12.692" endtime="20201029 12:47:12.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.700" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 12:47:12.699" endtime="20201029 12:47:12.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.702" level="INFO">VALUE: [1.4097000000001109e-05, 1.3763999999999443e-05, 1.3915999999999235e-05, 1.3915999999999235e-05, 1.3611000000000179e-05, 1.3513999999999193e-05, 1.4097000000001109e-05, 1.3861000000000429e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.3651999999999415e-05, 1.4361000000000929e-05, 1.3874999999999998e-05, 1.4389000000000068e-05, 1.4250000000000373e-05, 1.404099999999936e-05, 1.4209000000001137e-05, 1.381899999999825e-05, 1.384699999999739e-05, 1.4207999999998194e-05, 1.4042000000002303e-05, 1.4111000000000679e-05, 1.4166999999998958e-05, 1.4250000000000373e-05, 1.3722000000000734e-05, 1.3902999999999138e-05, 1.4361000000000929e-05, 1.3667000000001928e-05, 1.4181000000001998e-05, 1.4486000000001054e-05, 1.3611000000000179e-05, 1.402699999999979e-05, 1.4221999999997764e-05, 1.3666999999998458e-05, 1.4110999999997209e-05, 1.4000000000000123e-05, 1.4471999999998014e-05, 1.4250000000000373e-05, 1.3791999999998583e-05, 1.4306000000002123e-05, 1.4083999999997543e-05, 1.4472000000001484e-05, 1.3611000000000179e-05, 1.409699999999764e-05, 1.4042000000002303e-05, 1.3513999999999193e-05, 1.4181000000001998e-05, 1.3680999999998028e-05, 1.3597000000000609e-05, 1.3624999999999748e-05]</msg>
<status status="PASS" starttime="20201029 12:47:12.701" endtime="20201029 12:47:12.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.696" endtime="20201029 12:47:12.704"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:12.708" endtime="20201029 12:47:12.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.706" endtime="20201029 12:47:12.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.705" endtime="20201029 12:47:12.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.344" endtime="20201029 12:47:12.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.344" endtime="20201029 12:47:12.729"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.738" endtime="20201029 12:47:12.755"></status>
</kw>
<msg timestamp="20201029 12:47:12.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.736" endtime="20201029 12:47:12.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.757" endtime="20201029 12:47:12.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.760" endtime="20201029 12:47:12.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.733" endtime="20201029 12:47:12.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.731" endtime="20201029 12:47:12.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.769" endtime="20201029 12:47:13.057"></status>
</kw>
<msg timestamp="20201029 12:47:13.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020406486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020420236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:12.767" endtime="20201029 12:47:13.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020406486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020420236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.061" endtime="20201029 12:47:13.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.070" endtime="20201029 12:47:13.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.765" endtime="20201029 12:47:13.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.763" endtime="20201029 12:47:13.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:13.077" level="INFO">${RESULT} = [{'diff': 1.3749999999999873e-05}, {'diff': 1.3792000000002053e-05}, {'diff': 1.4070000000001442e-05}, {'diff': 1.4098000000000582e-05}, {'diff': 1.4069000000001969e-05}, {'diff': 1.4165999999999485e-...</msg>
<status status="PASS" starttime="20201029 12:47:13.073" endtime="20201029 12:47:13.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:13.082" level="INFO">${ACCURACY} = {'diff': [1.3749999999999873e-05, 1.3792000000002053e-05, 1.4070000000001442e-05, 1.4098000000000582e-05, 1.4069000000001969e-05, 1.4165999999999485e-05, 1.434699999999789e-05, 1.4111000000000679e-05,...</msg>
<status status="PASS" starttime="20201029 12:47:13.078" endtime="20201029 12:47:13.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.086" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 12:47:13.085" endtime="20201029 12:47:13.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.089" level="INFO">VALUE: [1.3749999999999873e-05, 1.3792000000002053e-05, 1.4070000000001442e-05, 1.4098000000000582e-05, 1.4069000000001969e-05, 1.4165999999999485e-05, 1.434699999999789e-05, 1.4111000000000679e-05, 1.3624999999999748e-05, 1.3749999999999873e-05, 1.4429999999999304e-05, 1.3651999999999415e-05, 1.4125000000000248e-05, 1.3791999999998583e-05, 1.429099999999961e-05, 1.4375000000000498e-05, 1.355499999999843e-05, 1.4263999999999943e-05, 1.3681000000001498e-05, 1.4333000000001789e-05, 1.4181000000001998e-05, 1.3958000000001414e-05, 1.3986000000000554e-05, 1.4416999999999208e-05, 1.3736000000000304e-05, 1.4402999999999638e-05, 1.3624999999999748e-05, 1.3763999999999443e-05, 1.4000000000000123e-05, 1.3666999999998458e-05, 1.3916999999998708e-05, 1.4320000000001692e-05, 1.3749999999999873e-05, 1.3721999999997264e-05, 1.4291999999999083e-05, 1.4431000000002248e-05, 1.381899999999825e-05, 1.3542000000001803e-05, 1.4291999999999083e-05, 1.4527999999999763e-05, 1.4180999999998528e-05, 1.4084000000001012e-05, 1.4084000000001012e-05, 1.4430999999998778e-05, 1.4402999999999638e-05, 1.4361000000000929e-05, 1.4195000000001567e-05, 1.4416999999999208e-05, 1.3693999999998124e-05, 1.4473000000000957e-05]</msg>
<status status="PASS" starttime="20201029 12:47:13.088" endtime="20201029 12:47:13.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.083" endtime="20201029 12:47:13.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:13.094" endtime="20201029 12:47:13.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.092" endtime="20201029 12:47:13.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.091" endtime="20201029 12:47:13.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.729" endtime="20201029 12:47:13.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.729" endtime="20201029 12:47:13.115"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.124" endtime="20201029 12:47:13.142"></status>
</kw>
<msg timestamp="20201029 12:47:13.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.122" endtime="20201029 12:47:13.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.144" endtime="20201029 12:47:13.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.146" endtime="20201029 12:47:13.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.120" endtime="20201029 12:47:13.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.118" endtime="20201029 12:47:13.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.156" endtime="20201029 12:47:13.442"></status>
</kw>
<msg timestamp="20201029 12:47:13.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020342903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020357278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.154" endtime="20201029 12:47:13.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020342903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020357278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.447" endtime="20201029 12:47:13.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.455" endtime="20201029 12:47:13.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.151" endtime="20201029 12:47:13.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.149" endtime="20201029 12:47:13.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:13.462" level="INFO">${RESULT} = [{'diff': 1.4375000000000498e-05}, {'diff': 1.4306000000002123e-05}, {'diff': 1.3695000000001067e-05}, {'diff': 1.4445000000001817e-05}, {'diff': 1.4361000000000929e-05}, {'diff': 1.4375000000000498e-...</msg>
<status status="PASS" starttime="20201029 12:47:13.459" endtime="20201029 12:47:13.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:13.466" level="INFO">${ACCURACY} = {'diff': [1.4375000000000498e-05, 1.4306000000002123e-05, 1.3695000000001067e-05, 1.4445000000001817e-05, 1.4361000000000929e-05, 1.4375000000000498e-05, 1.4179999999999054e-05, 1.3611000000000179e-05...</msg>
<status status="PASS" starttime="20201029 12:47:13.463" endtime="20201029 12:47:13.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.471" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 12:47:13.470" endtime="20201029 12:47:13.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.473" level="INFO">VALUE: [1.4375000000000498e-05, 1.4306000000002123e-05, 1.3695000000001067e-05, 1.4445000000001817e-05, 1.4361000000000929e-05, 1.4375000000000498e-05, 1.4179999999999054e-05, 1.3611000000000179e-05, 1.4137999999996875e-05, 1.3861000000000429e-05, 1.4180999999998528e-05, 1.355499999999843e-05, 1.3972000000000984e-05, 1.4013999999999693e-05, 1.3986000000000554e-05, 1.4444000000002344e-05, 1.4180000000002524e-05, 1.3736000000000304e-05, 1.4222000000001234e-05, 1.3611000000000179e-05, 1.3611000000000179e-05, 1.4415999999999735e-05, 1.4111000000000679e-05, 1.4165999999999485e-05, 1.3915999999999235e-05, 1.404099999999936e-05, 1.4221999999997764e-05, 1.3860999999996959e-05, 1.3722000000000734e-05, 1.3597000000000609e-05, 1.3820000000001192e-05, 1.4041999999998833e-05, 1.3833000000001289e-05, 1.4000000000000123e-05, 1.3888000000000095e-05, 1.3916999999998708e-05, 1.4180999999998528e-05, 1.4167000000002428e-05, 1.3611000000000179e-05, 1.3597000000000609e-05, 1.4278000000002983e-05, 1.3694999999997598e-05, 1.3542000000001803e-05, 1.3806000000001623e-05, 1.3596999999997139e-05, 1.4291999999999083e-05, 1.3681000000001498e-05, 1.4431000000002248e-05, 1.433299999999832e-05, 1.3820000000001192e-05]</msg>
<status status="PASS" starttime="20201029 12:47:13.472" endtime="20201029 12:47:13.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.467" endtime="20201029 12:47:13.474"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:13.479" endtime="20201029 12:47:13.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.477" endtime="20201029 12:47:13.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.475" endtime="20201029 12:47:13.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.115" endtime="20201029 12:47:13.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.115" endtime="20201029 12:47:13.499"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.508" endtime="20201029 12:47:13.527"></status>
</kw>
<msg timestamp="20201029 12:47:13.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.507" endtime="20201029 12:47:13.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.529" endtime="20201029 12:47:13.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.531" endtime="20201029 12:47:13.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.504" endtime="20201029 12:47:13.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.502" endtime="20201029 12:47:13.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.541" endtime="20201029 12:47:13.833"></status>
</kw>
<msg timestamp="20201029 12:47:13.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020817347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020831069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.539" endtime="20201029 12:47:13.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020817347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020831069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.842" endtime="20201029 12:47:13.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.860" endtime="20201029 12:47:13.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.536" endtime="20201029 12:47:13.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.535" endtime="20201029 12:47:13.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:13.874" level="INFO">${RESULT} = [{'diff': 1.3722000000000734e-05}, {'diff': 1.3777999999999013e-05}, {'diff': 1.409699999999764e-05}, {'diff': 1.352699999999929e-05}, {'diff': 1.3903000000002608e-05}, {'diff': 1.3624999999999748e-05...</msg>
<status status="PASS" starttime="20201029 12:47:13.867" endtime="20201029 12:47:13.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:13.882" level="INFO">${ACCURACY} = {'diff': [1.3722000000000734e-05, 1.3777999999999013e-05, 1.409699999999764e-05, 1.352699999999929e-05, 1.3903000000002608e-05, 1.3624999999999748e-05, 1.3833000000001289e-05, 1.352699999999929e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:47:13.876" endtime="20201029 12:47:13.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.891" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 12:47:13.889" endtime="20201029 12:47:13.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.898" level="INFO">VALUE: [1.3722000000000734e-05, 1.3777999999999013e-05, 1.409699999999764e-05, 1.352699999999929e-05, 1.3903000000002608e-05, 1.3624999999999748e-05, 1.3833000000001289e-05, 1.352699999999929e-05, 1.3986000000000554e-05, 1.354099999999886e-05, 1.351299999999972e-05, 1.3597000000000609e-05, 1.3930000000002274e-05, 1.434699999999789e-05, 1.3847000000000859e-05, 1.4485999999997584e-05, 1.4429999999999304e-05, 1.3763999999999443e-05, 1.3888999999999568e-05, 1.3861000000000429e-05, 1.3973000000000457e-05, 1.4223000000000707e-05, 1.4402999999999638e-05, 1.4389000000000068e-05, 1.4486000000001054e-05, 1.4263999999999943e-05, 1.4070000000001442e-05, 1.3917000000002178e-05, 1.3542000000001803e-05, 1.4125000000000248e-05, 1.3930999999998278e-05, 1.3666999999998458e-05, 1.3847999999996863e-05, 1.3681000000001498e-05, 1.3791999999998583e-05, 1.3597000000000609e-05, 1.433299999999832e-05, 1.4236000000000804e-05, 1.4083000000001539e-05, 1.3986000000000554e-05, 1.3861000000000429e-05, 1.4013999999999693e-05, 1.3778000000002483e-05, 1.3806000000001623e-05, 1.3570000000000942e-05, 1.3666999999998458e-05, 1.3723000000000207e-05, 1.4028000000002733e-05, 1.3680999999998028e-05, 1.3736999999999777e-05]</msg>
<status status="PASS" starttime="20201029 12:47:13.895" endtime="20201029 12:47:13.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.884" endtime="20201029 12:47:13.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:13.908" endtime="20201029 12:47:13.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.906" endtime="20201029 12:47:13.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.904" endtime="20201029 12:47:13.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.500" endtime="20201029 12:47:13.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.500" endtime="20201029 12:47:13.929"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.937" endtime="20201029 12:47:13.955"></status>
</kw>
<msg timestamp="20201029 12:47:13.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.935" endtime="20201029 12:47:13.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:13.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:13.956" endtime="20201029 12:47:13.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.959" endtime="20201029 12:47:13.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.933" endtime="20201029 12:47:13.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.931" endtime="20201029 12:47:13.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:13.968" endtime="20201029 12:47:14.253"></status>
</kw>
<msg timestamp="20201029 12:47:14.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019171375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019185167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:13.966" endtime="20201029 12:47:14.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019171375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019185167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.257" endtime="20201029 12:47:14.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.265" endtime="20201029 12:47:14.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.963" endtime="20201029 12:47:14.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.962" endtime="20201029 12:47:14.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:14.272" level="INFO">${RESULT} = [{'diff': 1.3791999999998583e-05}, {'diff': 1.4291999999999083e-05}, {'diff': 1.3916999999998708e-05}, {'diff': 1.380499999999868e-05}, {'diff': 1.4389000000000068e-05}, {'diff': 1.4291999999999083e-0...</msg>
<status status="PASS" starttime="20201029 12:47:14.269" endtime="20201029 12:47:14.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:14.277" level="INFO">${ACCURACY} = {'diff': [1.3791999999998583e-05, 1.4291999999999083e-05, 1.3916999999998708e-05, 1.380499999999868e-05, 1.4389000000000068e-05, 1.4291999999999083e-05, 1.3611000000000179e-05, 1.4278000000002983e-05,...</msg>
<status status="PASS" starttime="20201029 12:47:14.273" endtime="20201029 12:47:14.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.281" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 12:47:14.280" endtime="20201029 12:47:14.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.284" level="INFO">VALUE: [1.3791999999998583e-05, 1.4291999999999083e-05, 1.3916999999998708e-05, 1.380499999999868e-05, 1.4389000000000068e-05, 1.4291999999999083e-05, 1.3611000000000179e-05, 1.4278000000002983e-05, 1.4041999999998833e-05, 1.408299999999807e-05, 1.3915999999999235e-05, 1.3847000000000859e-05, 1.4500000000000624e-05, 1.3929999999998804e-05, 1.3958000000001414e-05, 1.4402000000000165e-05, 1.4250000000000373e-05, 1.404099999999936e-05, 1.380499999999868e-05, 1.3611000000000179e-05, 1.3986000000000554e-05, 1.40689999999985e-05, 1.3611000000000179e-05, 1.4125000000000248e-05, 1.4263999999999943e-05, 1.4055000000002399e-05, 1.380499999999868e-05, 1.3528000000002233e-05, 1.3527999999998763e-05, 1.4000000000000123e-05, 1.4180999999998528e-05, 1.4471999999998014e-05, 1.3708000000001164e-05, 1.4097000000001109e-05, 1.4263999999999943e-05, 1.4402999999999638e-05, 1.4236000000000804e-05, 1.4236000000000804e-05, 1.3695000000001067e-05, 1.4180999999998528e-05, 1.3555999999997903e-05, 1.4486000000001054e-05, 1.3986000000000554e-05, 1.3930999999998278e-05, 1.3707999999997694e-05, 1.3986000000000554e-05, 1.4236000000000804e-05, 1.4111000000000679e-05, 1.3527999999998763e-05, 1.4027999999999263e-05]</msg>
<status status="PASS" starttime="20201029 12:47:14.282" endtime="20201029 12:47:14.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.278" endtime="20201029 12:47:14.285"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:14.289" endtime="20201029 12:47:14.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.287" endtime="20201029 12:47:14.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.286" endtime="20201029 12:47:14.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.929" endtime="20201029 12:47:14.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:13.929" endtime="20201029 12:47:14.309"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.318" endtime="20201029 12:47:14.335"></status>
</kw>
<msg timestamp="20201029 12:47:14.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.316" endtime="20201029 12:47:14.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.337" endtime="20201029 12:47:14.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.339" endtime="20201029 12:47:14.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.314" endtime="20201029 12:47:14.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.312" endtime="20201029 12:47:14.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.348" endtime="20201029 12:47:14.640"></status>
</kw>
<msg timestamp="20201029 12:47:14.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019162403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019175917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.346" endtime="20201029 12:47:14.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019162403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019175917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.650" endtime="20201029 12:47:14.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.668" endtime="20201029 12:47:14.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.344" endtime="20201029 12:47:14.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.342" endtime="20201029 12:47:14.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:14.682" level="INFO">${RESULT} = [{'diff': 1.3513999999999193e-05}, {'diff': 1.3791999999998583e-05}, {'diff': 1.3861000000000429e-05}, {'diff': 1.3736000000000304e-05}, {'diff': 1.3792000000002053e-05}, {'diff': 1.3527999999998763e-...</msg>
<status status="PASS" starttime="20201029 12:47:14.675" endtime="20201029 12:47:14.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:14.691" level="INFO">${ACCURACY} = {'diff': [1.3513999999999193e-05, 1.3791999999998583e-05, 1.3861000000000429e-05, 1.3736000000000304e-05, 1.3792000000002053e-05, 1.3527999999998763e-05, 1.4111000000000679e-05, 1.4431000000002248e-05...</msg>
<status status="PASS" starttime="20201029 12:47:14.684" endtime="20201029 12:47:14.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.700" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 12:47:14.698" endtime="20201029 12:47:14.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.706" level="INFO">VALUE: [1.3513999999999193e-05, 1.3791999999998583e-05, 1.3861000000000429e-05, 1.3736000000000304e-05, 1.3792000000002053e-05, 1.3527999999998763e-05, 1.4111000000000679e-05, 1.4431000000002248e-05, 1.4027999999999263e-05, 1.4389000000000068e-05, 1.4277999999999513e-05, 1.4070000000001442e-05, 1.3819000000001719e-05, 1.4207999999998194e-05, 1.3848000000000332e-05, 1.358299999999757e-05, 1.381899999999825e-05, 1.3847000000000859e-05, 1.3737000000003247e-05, 1.4179999999999054e-05, 1.4041999999998833e-05, 1.4165999999999485e-05, 1.4291999999999083e-05, 1.4250000000000373e-05, 1.429099999999961e-05, 1.4250000000000373e-05, 1.3722000000000734e-05, 1.3652000000002884e-05, 1.352699999999929e-05, 1.4347000000001359e-05, 1.4165999999999485e-05, 1.355499999999843e-05, 1.3805000000002149e-05, 1.4472000000001484e-05, 1.4055000000002399e-05, 1.427700000000004e-05, 1.4429999999999304e-05, 1.4389000000000068e-05, 1.4444000000002344e-05, 1.4416999999999208e-05, 1.3986000000000554e-05, 1.3874999999999998e-05, 1.4347000000001359e-05, 1.4291999999999083e-05, 1.4319000000002219e-05, 1.3944000000001844e-05, 1.3542000000001803e-05, 1.4209000000001137e-05, 1.3749999999999873e-05, 1.3541999999998333e-05]</msg>
<status status="PASS" starttime="20201029 12:47:14.703" endtime="20201029 12:47:14.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.693" endtime="20201029 12:47:14.709"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:14.716" endtime="20201029 12:47:14.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.713" endtime="20201029 12:47:14.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.711" endtime="20201029 12:47:14.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.310" endtime="20201029 12:47:14.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.310" endtime="20201029 12:47:14.737"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.746" endtime="20201029 12:47:14.767"></status>
</kw>
<msg timestamp="20201029 12:47:14.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.744" endtime="20201029 12:47:14.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:14.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:14.768" endtime="20201029 12:47:14.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.771" endtime="20201029 12:47:14.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.742" endtime="20201029 12:47:14.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.740" endtime="20201029 12:47:14.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:14.780" endtime="20201029 12:47:15.075"></status>
</kw>
<msg timestamp="20201029 12:47:15.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022542069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022556194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:14.778" endtime="20201029 12:47:15.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022542069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022556194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.079" endtime="20201029 12:47:15.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.087" endtime="20201029 12:47:15.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.776" endtime="20201029 12:47:15.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.774" endtime="20201029 12:47:15.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:15.095" level="INFO">${RESULT} = [{'diff': 1.4125000000000248e-05}, {'diff': 1.4221999999997764e-05}, {'diff': 1.4165999999999485e-05}, {'diff': 1.4402999999999638e-05}, {'diff': 1.3986000000000554e-05}, {'diff': 1.4347000000001359e-...</msg>
<status status="PASS" starttime="20201029 12:47:15.090" endtime="20201029 12:47:15.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:15.099" level="INFO">${ACCURACY} = {'diff': [1.4125000000000248e-05, 1.4221999999997764e-05, 1.4165999999999485e-05, 1.4402999999999638e-05, 1.3986000000000554e-05, 1.4347000000001359e-05, 1.404099999999936e-05, 1.3541000000002329e-05,...</msg>
<status status="PASS" starttime="20201029 12:47:15.096" endtime="20201029 12:47:15.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.103" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 12:47:15.102" endtime="20201029 12:47:15.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.106" level="INFO">VALUE: [1.4125000000000248e-05, 1.4221999999997764e-05, 1.4165999999999485e-05, 1.4402999999999638e-05, 1.3986000000000554e-05, 1.4347000000001359e-05, 1.404099999999936e-05, 1.3541000000002329e-05, 1.3651999999999415e-05, 1.3624999999999748e-05, 1.3805000000002149e-05, 1.4415999999999735e-05, 1.4472000000001484e-05, 1.4375000000000498e-05, 1.3736000000000304e-05, 1.3763999999999443e-05, 1.3513999999999193e-05, 1.3874999999999998e-05, 1.4165999999999485e-05, 1.3888999999999568e-05, 1.3861000000000429e-05, 1.4250000000000373e-05, 1.4471999999998014e-05, 1.3624999999999748e-05, 1.4360999999997459e-05, 1.3666999999998458e-05, 1.4263999999999943e-05, 1.3777999999999013e-05, 1.3986000000000554e-05, 1.3527999999998763e-05, 1.4138999999999818e-05, 1.4110999999997209e-05, 1.3667000000001928e-05, 1.3986000000000554e-05, 1.4069999999997973e-05, 1.3681000000001498e-05, 1.3624999999999748e-05, 1.434699999999789e-05, 1.3542000000001803e-05, 1.3916999999998708e-05, 1.4472000000001484e-05, 1.4181000000001998e-05, 1.3819999999997723e-05, 1.3805999999998153e-05, 1.4111000000000679e-05, 1.431899999999875e-05, 1.4486000000001054e-05, 1.4291999999999083e-05, 1.3986000000000554e-05, 1.3624999999999748e-05]</msg>
<status status="PASS" starttime="20201029 12:47:15.104" endtime="20201029 12:47:15.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.100" endtime="20201029 12:47:15.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:15.111" endtime="20201029 12:47:15.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.110" endtime="20201029 12:47:15.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.109" endtime="20201029 12:47:15.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.738" endtime="20201029 12:47:15.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:14.738" endtime="20201029 12:47:15.132"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.140" endtime="20201029 12:47:15.158"></status>
</kw>
<msg timestamp="20201029 12:47:15.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.139" endtime="20201029 12:47:15.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.160" endtime="20201029 12:47:15.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.162" endtime="20201029 12:47:15.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.136" endtime="20201029 12:47:15.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.134" endtime="20201029 12:47:15.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.171" endtime="20201029 12:47:15.465"></status>
</kw>
<msg timestamp="20201029 12:47:15.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019308306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019322861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.169" endtime="20201029 12:47:15.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019308306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019322861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.474" endtime="20201029 12:47:15.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.493" endtime="20201029 12:47:15.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.167" endtime="20201029 12:47:15.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.165" endtime="20201029 12:47:15.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:15.507" level="INFO">${RESULT} = [{'diff': 1.455499999999943e-05}, {'diff': 1.541700000000021e-05}, {'diff': 1.5250000000001374e-05}, {'diff': 1.4958000000002414e-05}, {'diff': 1.5166999999999958e-05}, {'diff': 1.536100000000193e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:15.500" endtime="20201029 12:47:15.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:15.518" level="INFO">${ACCURACY} = {'diff': [1.455499999999943e-05, 1.541700000000021e-05, 1.5250000000001374e-05, 1.4958000000002414e-05, 1.5166999999999958e-05, 1.536100000000193e-05, 1.5486000000002054e-05, 1.533300000000279e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:47:15.509" endtime="20201029 12:47:15.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.527" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 12:47:15.525" endtime="20201029 12:47:15.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.529" level="INFO">VALUE: [1.455499999999943e-05, 1.541700000000021e-05, 1.5250000000001374e-05, 1.4958000000002414e-05, 1.5166999999999958e-05, 1.536100000000193e-05, 1.5486000000002054e-05, 1.533300000000279e-05, 1.5250000000001374e-05, 1.5292000000000083e-05, 1.5457999999999444e-05, 1.4625000000000749e-05, 1.4958000000002414e-05, 1.4542000000002803e-05, 1.4555999999998903e-05, 1.5235999999998334e-05, 1.4514000000000193e-05, 1.4791999999999583e-05, 1.4624999999997279e-05, 1.4541999999999333e-05, 1.504100000000036e-05, 1.4625000000000749e-05, 1.5041999999999833e-05, 1.5458999999998918e-05, 1.537499999999803e-05, 1.5236999999997808e-05, 1.5388000000001595e-05, 1.5292000000000083e-05, 1.4791999999999583e-05, 1.5333999999998793e-05, 1.5319999999999223e-05, 1.5208000000002664e-05, 1.4569999999998473e-05, 1.4750000000000874e-05, 1.5499999999998154e-05, 1.530500000000018e-05, 1.4778000000000013e-05, 1.4652000000000415e-05, 1.508299999999907e-05, 1.5250000000001374e-05, 1.4763999999996974e-05, 1.5429999999996835e-05, 1.531899999999975e-05, 1.4583000000002039e-05, 1.5236000000001804e-05, 1.509699999999864e-05, 1.508299999999907e-05, 1.4985999999998084e-05, 1.536099999999846e-05, 1.4943999999999374e-05]</msg>
<status status="PASS" starttime="20201029 12:47:15.528" endtime="20201029 12:47:15.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.519" endtime="20201029 12:47:15.530"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:15.534" endtime="20201029 12:47:15.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.532" endtime="20201029 12:47:15.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.531" endtime="20201029 12:47:15.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.133" endtime="20201029 12:47:15.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.132" endtime="20201029 12:47:15.555"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.563" endtime="20201029 12:47:15.581"></status>
</kw>
<msg timestamp="20201029 12:47:15.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.562" endtime="20201029 12:47:15.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.582" endtime="20201029 12:47:15.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.585" endtime="20201029 12:47:15.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.559" endtime="20201029 12:47:15.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.557" endtime="20201029 12:47:15.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.594" endtime="20201029 12:47:15.880"></status>
</kw>
<msg timestamp="20201029 12:47:15.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019328222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019344625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.592" endtime="20201029 12:47:15.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019328222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019344625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.884" endtime="20201029 12:47:15.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.893" endtime="20201029 12:47:15.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.590" endtime="20201029 12:47:15.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.588" endtime="20201029 12:47:15.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:15.900" level="INFO">${RESULT} = [{'diff': 1.640300000000164e-05}, {'diff': 1.6195000000000098e-05}, {'diff': 1.608300000000007e-05}, {'diff': 1.5944000000000375e-05}, {'diff': 1.5985999999999084e-05}, {'diff': 1.561100000000218e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:15.897" endtime="20201029 12:47:15.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:15.904" level="INFO">${ACCURACY} = {'diff': [1.640300000000164e-05, 1.6195000000000098e-05, 1.608300000000007e-05, 1.5944000000000375e-05, 1.5985999999999084e-05, 1.561100000000218e-05, 1.5764000000001444e-05, 1.591700000000071e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:47:15.901" endtime="20201029 12:47:15.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.908" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 12:47:15.907" endtime="20201029 12:47:15.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.911" level="INFO">VALUE: [1.640300000000164e-05, 1.6195000000000098e-05, 1.608300000000007e-05, 1.5944000000000375e-05, 1.5985999999999084e-05, 1.561100000000218e-05, 1.5764000000001444e-05, 1.591700000000071e-05, 1.561099999999871e-05, 1.5721999999999264e-05, 1.5778000000001013e-05, 1.563899999999785e-05, 1.566700000000046e-05, 1.5944999999999848e-05, 1.609699999999964e-05, 1.6472000000000014e-05, 1.5555999999999903e-05, 1.5972999999998988e-05, 1.641700000000121e-05, 1.6278000000001513e-05, 1.6262999999999e-05, 1.6042000000000833e-05, 1.613899999999835e-05, 1.6249999999998904e-05, 1.555500000000043e-05, 1.565300000000089e-05, 1.6486999999999058e-05, 1.6249999999998904e-05, 1.584699999999939e-05, 1.5944000000000375e-05, 1.584699999999939e-05, 1.6250000000002374e-05, 1.5681000000000028e-05, 1.627699999999857e-05, 1.5680000000000555e-05, 1.605499999999746e-05, 1.605500000000093e-05, 1.562499999999828e-05, 1.634699999999989e-05, 1.6208000000000194e-05, 1.590300000000114e-05, 1.6236000000002804e-05, 1.580500000000068e-05, 1.5806000000000153e-05, 1.584699999999939e-05, 1.5916000000001235e-05, 1.640299999999817e-05, 1.6042000000000833e-05, 1.566700000000046e-05, 1.6221999999999764e-05]</msg>
<status status="PASS" starttime="20201029 12:47:15.909" endtime="20201029 12:47:15.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.905" endtime="20201029 12:47:15.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:15.916" endtime="20201029 12:47:15.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.914" endtime="20201029 12:47:15.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.913" endtime="20201029 12:47:15.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.556" endtime="20201029 12:47:15.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.555" endtime="20201029 12:47:15.945"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.957" endtime="20201029 12:47:15.976"></status>
</kw>
<msg timestamp="20201029 12:47:15.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.956" endtime="20201029 12:47:15.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.978" endtime="20201029 12:47:15.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.980" endtime="20201029 12:47:15.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.953" endtime="20201029 12:47:15.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.949" endtime="20201029 12:47:15.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.989" endtime="20201029 12:47:16.276"></status>
</kw>
<msg timestamp="20201029 12:47:16.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032747875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032764917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:15.988" endtime="20201029 12:47:16.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032747875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032764917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.281" endtime="20201029 12:47:16.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.289" endtime="20201029 12:47:16.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.985" endtime="20201029 12:47:16.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.983" endtime="20201029 12:47:16.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:16.295" level="INFO">${RESULT} = [{'diff': 1.7041999999994895e-05}, {'diff': 1.7264000000002944e-05}, {'diff': 1.6736000000003304e-05}, {'diff': 1.712499999999978e-05}, {'diff': 1.6791999999994645e-05}, {'diff': 1.7056000000001403e-0...</msg>
<status status="PASS" starttime="20201029 12:47:16.292" endtime="20201029 12:47:16.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:16.300" level="INFO">${ACCURACY} = {'diff': [1.7041999999994895e-05, 1.7264000000002944e-05, 1.6736000000003304e-05, 1.712499999999978e-05, 1.6791999999994645e-05, 1.7056000000001403e-05, 1.7348000000000363e-05, 1.737500000000003e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:16.296" endtime="20201029 12:47:16.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.304" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 12:47:16.303" endtime="20201029 12:47:16.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.307" level="INFO">VALUE: [1.7041999999994895e-05, 1.7264000000002944e-05, 1.6736000000003304e-05, 1.712499999999978e-05, 1.6791999999994645e-05, 1.7056000000001403e-05, 1.7348000000000363e-05, 1.737500000000003e-05, 1.7236000000003804e-05, 1.7193999999998155e-05, 1.655500000000143e-05, 1.686099999999996e-05, 1.6666000000005454e-05, 1.7415999999999265e-05, 1.709700000000064e-05, 1.681900000000125e-05, 1.687499999999953e-05, 1.711100000000021e-05, 1.6972000000003984e-05, 1.737500000000003e-05, 1.658300000000057e-05, 1.684700000000039e-05, 1.7513999999996255e-05, 1.6597999999999613e-05, 1.6903000000005608e-05, 1.659700000000014e-05, 1.6569000000001e-05, 1.712499999999978e-05, 1.7042000000001833e-05, 1.6972000000003984e-05, 1.711100000000021e-05, 1.7249999999996435e-05, 1.6971999999997045e-05, 1.6791999999994645e-05, 1.708300000000107e-05, 1.6500000000002624e-05, 1.6999999999996185e-05, 1.7235999999996865e-05, 1.6527999999994825e-05, 1.6778000000002014e-05, 1.7193999999998155e-05, 1.7429999999998835e-05, 1.72089999999972e-05, 1.7235999999996865e-05, 1.695899999999695e-05, 1.6735999999996365e-05, 1.7236000000003804e-05, 1.691699999999824e-05, 1.7235999999996865e-05, 1.7235999999996865e-05]</msg>
<status status="PASS" starttime="20201029 12:47:16.305" endtime="20201029 12:47:16.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.300" endtime="20201029 12:47:16.314"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:16.318" endtime="20201029 12:47:16.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.317" endtime="20201029 12:47:16.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.315" endtime="20201029 12:47:16.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.946" endtime="20201029 12:47:16.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.945" endtime="20201029 12:47:16.339"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.347" endtime="20201029 12:47:16.365"></status>
</kw>
<msg timestamp="20201029 12:47:16.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.346" endtime="20201029 12:47:16.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.367" endtime="20201029 12:47:16.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.369" endtime="20201029 12:47:16.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.343" endtime="20201029 12:47:16.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.341" endtime="20201029 12:47:16.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.378" endtime="20201029 12:47:16.664"></status>
</kw>
<msg timestamp="20201029 12:47:16.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019494861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019513194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.377" endtime="20201029 12:47:16.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019494861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019513194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.669" endtime="20201029 12:47:16.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.677" endtime="20201029 12:47:16.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.374" endtime="20201029 12:47:16.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.372" endtime="20201029 12:47:16.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:16.683" level="INFO">${RESULT} = [{'diff': 1.833300000000232e-05}, {'diff': 1.7735999999997365e-05}, {'diff': 1.8208000000002195e-05}, {'diff': 1.8486000000001584e-05}, {'diff': 1.781899999999878e-05}, {'diff': 1.7985999999997615e-05...</msg>
<status status="PASS" starttime="20201029 12:47:16.680" endtime="20201029 12:47:16.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:16.688" level="INFO">${ACCURACY} = {'diff': [1.833300000000232e-05, 1.7735999999997365e-05, 1.8208000000002195e-05, 1.8486000000001584e-05, 1.781899999999878e-05, 1.7985999999997615e-05, 1.8166000000000015e-05, 1.786100000000096e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:47:16.684" endtime="20201029 12:47:16.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.693" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 12:47:16.692" endtime="20201029 12:47:16.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.695" level="INFO">VALUE: [1.833300000000232e-05, 1.7735999999997365e-05, 1.8208000000002195e-05, 1.8486000000001584e-05, 1.781899999999878e-05, 1.7985999999997615e-05, 1.8166000000000015e-05, 1.786100000000096e-05, 1.811099999999774e-05, 1.7735999999997365e-05, 1.7665999999999515e-05, 1.7721999999997795e-05, 1.762500000000028e-05, 1.8014000000000224e-05, 1.787500000000053e-05, 1.7777999999999544e-05, 1.787500000000053e-05, 1.8041999999999364e-05, 1.8000000000000654e-05, 1.791699999999924e-05, 1.8320000000002223e-05, 1.83890000000006e-05, 1.8250000000000904e-05, 1.7736000000000834e-05, 1.7721999999997795e-05, 1.8236000000001334e-05, 1.766699999999899e-05, 1.8292000000003084e-05, 1.8499999999997685e-05, 1.818099999999906e-05, 1.82089999999982e-05, 1.7721999999997795e-05, 1.7542000000002334e-05, 1.834699999999842e-05, 1.8306000000002653e-05, 1.841699999999974e-05, 1.78890000000001e-05, 1.8362000000000933e-05, 1.768100000000203e-05, 1.818099999999906e-05, 1.8291999999999614e-05, 1.7556000000001903e-05, 1.78890000000001e-05, 1.8152000000000446e-05, 1.830499999999971e-05, 1.78890000000001e-05, 1.7527999999999294e-05, 1.7723000000000738e-05, 1.790299999999967e-05, 1.829100000000014e-05]</msg>
<status status="PASS" starttime="20201029 12:47:16.694" endtime="20201029 12:47:16.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.689" endtime="20201029 12:47:16.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:16.700" endtime="20201029 12:47:16.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.699" endtime="20201029 12:47:16.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.698" endtime="20201029 12:47:16.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.340" endtime="20201029 12:47:16.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.339" endtime="20201029 12:47:16.721"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.730" endtime="20201029 12:47:16.747"></status>
</kw>
<msg timestamp="20201029 12:47:16.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.728" endtime="20201029 12:47:16.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:16.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:16.748" endtime="20201029 12:47:16.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.751" endtime="20201029 12:47:16.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.725" endtime="20201029 12:47:16.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.723" endtime="20201029 12:47:16.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:16.760" endtime="20201029 12:47:17.052"></status>
</kw>
<msg timestamp="20201029 12:47:17.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019502125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019521444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:16.758" endtime="20201029 12:47:17.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019502125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019521444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.057" endtime="20201029 12:47:17.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.067" endtime="20201029 12:47:17.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.756" endtime="20201029 12:47:17.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.754" endtime="20201029 12:47:17.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:17.074" level="INFO">${RESULT} = [{'diff': 1.931900000000028e-05}, {'diff': 1.8749999999997935e-05}, {'diff': 1.9277999999997575e-05}, {'diff': 1.919499999999963e-05}, {'diff': 1.9306000000000184e-05}, {'diff': 1.9194000000000155e-05...</msg>
<status status="PASS" starttime="20201029 12:47:17.071" endtime="20201029 12:47:17.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:17.093" level="INFO">${ACCURACY} = {'diff': [1.931900000000028e-05, 1.8749999999997935e-05, 1.9277999999997575e-05, 1.919499999999963e-05, 1.9306000000000184e-05, 1.9194000000000155e-05, 1.943100000000031e-05, 1.8651999999997476e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:47:17.075" endtime="20201029 12:47:17.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.097" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 12:47:17.096" endtime="20201029 12:47:17.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.100" level="INFO">VALUE: [1.931900000000028e-05, 1.8749999999997935e-05, 1.9277999999997575e-05, 1.919499999999963e-05, 1.9306000000000184e-05, 1.9194000000000155e-05, 1.943100000000031e-05, 1.8651999999997476e-05, 1.88890000000011e-05, 1.8999999999998185e-05, 1.895899999999895e-05, 1.9444000000000405e-05, 1.9429999999997366e-05, 1.862499999999781e-05, 1.9430000000000835e-05, 1.905500000000046e-05, 1.8666000000000516e-05, 1.933299999999985e-05, 1.8971999999999045e-05, 1.934699999999942e-05, 1.912500000000178e-05, 1.90829999999996e-05, 1.9416000000001266e-05, 1.8778000000000544e-05, 1.9430000000000835e-05, 1.930500000000071e-05, 1.886099999999849e-05, 1.943100000000031e-05, 1.9292000000000614e-05, 1.8555999999999434e-05, 1.9430000000000835e-05, 1.9055999999999934e-05, 1.9264000000001474e-05, 1.8985999999998615e-05, 1.9292000000000614e-05, 1.8764000000000974e-05, 1.943100000000031e-05, 1.9236000000002335e-05, 1.937499999999856e-05, 1.861099999999824e-05, 1.8555999999999434e-05, 1.915299999999745e-05, 1.9042000000000364e-05, 1.8778000000000544e-05, 1.887500000000153e-05, 1.934699999999942e-05, 1.919499999999963e-05, 1.8583999999998574e-05, 1.8778000000000544e-05, 1.8723000000001738e-05]</msg>
<status status="PASS" starttime="20201029 12:47:17.098" endtime="20201029 12:47:17.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.094" endtime="20201029 12:47:17.101"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:17.105" endtime="20201029 12:47:17.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.103" endtime="20201029 12:47:17.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.102" endtime="20201029 12:47:17.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.722" endtime="20201029 12:47:17.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:16.721" endtime="20201029 12:47:17.126"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.134" endtime="20201029 12:47:17.153"></status>
</kw>
<msg timestamp="20201029 12:47:17.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.133" endtime="20201029 12:47:17.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.155" endtime="20201029 12:47:17.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.157" endtime="20201029 12:47:17.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.130" endtime="20201029 12:47:17.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.128" endtime="20201029 12:47:17.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.167" endtime="20201029 12:47:17.452"></status>
</kw>
<msg timestamp="20201029 12:47:17.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020604042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020624319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.165" endtime="20201029 12:47:17.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020604042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020624319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.457" endtime="20201029 12:47:17.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.465" endtime="20201029 12:47:17.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.162" endtime="20201029 12:47:17.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.161" endtime="20201029 12:47:17.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:17.471" level="INFO">${RESULT} = [{'diff': 2.02769999999991e-05}, {'diff': 1.9527999999997825e-05}, {'diff': 1.965300000000142e-05}, {'diff': 1.962499999999881e-05}, {'diff': 1.97089999999997e-05}, {'diff': 2.004099999999842e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:17.468" endtime="20201029 12:47:17.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:17.476" level="INFO">${ACCURACY} = {'diff': [2.02769999999991e-05, 1.9527999999997825e-05, 1.965300000000142e-05, 1.962499999999881e-05, 1.97089999999997e-05, 2.004099999999842e-05, 2.0097999999999644e-05, 1.9750000000002405e-05, 2.023...</msg>
<status status="PASS" starttime="20201029 12:47:17.472" endtime="20201029 12:47:17.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.480" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 12:47:17.479" endtime="20201029 12:47:17.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.482" level="INFO">VALUE: [2.02769999999991e-05, 1.9527999999997825e-05, 1.965300000000142e-05, 1.962499999999881e-05, 1.97089999999997e-05, 2.004099999999842e-05, 2.0097999999999644e-05, 1.9750000000002405e-05, 2.0235999999999865e-05, 1.9986000000003085e-05, 1.979099999999817e-05, 1.9666000000001516e-05, 2.030499999999824e-05, 1.980500000000121e-05, 1.9929999999997866e-05, 2.0179999999998116e-05, 1.9721999999999795e-05, 1.9750000000002405e-05, 2.0499999999999685e-05, 2.0429999999998366e-05, 2.0208000000000725e-05, 1.9985999999999615e-05, 1.9735999999999365e-05, 1.991700000000124e-05, 1.9750000000002405e-05, 1.962499999999881e-05, 2.011099999999974e-05, 2.0306000000001184e-05, 1.9777999999998075e-05, 2.0027999999998325e-05, 1.9556000000000434e-05, 2.036099999999999e-05, 2.016699999999802e-05, 1.966700000000099e-05, 2.0306000000001184e-05, 1.959699999999967e-05, 1.979099999999817e-05, 2.016699999999802e-05, 1.9985999999999615e-05, 2.011099999999974e-05, 2.036099999999999e-05, 2.043099999999784e-05, 2.0013999999998755e-05, 1.995899999999995e-05, 2.0097999999999644e-05, 2.016700000000149e-05, 2.037499999999956e-05, 2.0207999999997256e-05, 2.0500000000003155e-05, 2.004100000000189e-05]</msg>
<status status="PASS" starttime="20201029 12:47:17.481" endtime="20201029 12:47:17.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.476" endtime="20201029 12:47:17.485"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:17.488" endtime="20201029 12:47:17.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.487" endtime="20201029 12:47:17.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.486" endtime="20201029 12:47:17.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.127" endtime="20201029 12:47:17.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.126" endtime="20201029 12:47:17.509"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.517" endtime="20201029 12:47:17.534"></status>
</kw>
<msg timestamp="20201029 12:47:17.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.516" endtime="20201029 12:47:17.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.535" endtime="20201029 12:47:17.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.538" endtime="20201029 12:47:17.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.513" endtime="20201029 12:47:17.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.511" endtime="20201029 12:47:17.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.547" endtime="20201029 12:47:17.833"></status>
</kw>
<msg timestamp="20201029 12:47:17.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019480028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019500833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.545" endtime="20201029 12:47:17.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019480028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019500833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.837" endtime="20201029 12:47:17.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.845" endtime="20201029 12:47:17.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.543" endtime="20201029 12:47:17.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.541" endtime="20201029 12:47:17.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:17.852" level="INFO">${RESULT} = [{'diff': 2.080499999999874e-05}, {'diff': 2.1000000000000185e-05}, {'diff': 2.1000000000000185e-05}, {'diff': 2.086100000000049e-05}, {'diff': 2.1000000000000185e-05}, {'diff': 2.079099999999917e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:17.848" endtime="20201029 12:47:17.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:17.857" level="INFO">${ACCURACY} = {'diff': [2.080499999999874e-05, 2.1000000000000185e-05, 2.1000000000000185e-05, 2.086100000000049e-05, 2.1000000000000185e-05, 2.079099999999917e-05, 2.113899999999988e-05, 2.1000000000000185e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:47:17.853" endtime="20201029 12:47:17.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.861" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 12:47:17.860" endtime="20201029 12:47:17.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.864" level="INFO">VALUE: [2.080499999999874e-05, 2.1000000000000185e-05, 2.1000000000000185e-05, 2.086100000000049e-05, 2.1000000000000185e-05, 2.079099999999917e-05, 2.113899999999988e-05, 2.1000000000000185e-05, 2.134699999999795e-05, 2.134700000000142e-05, 2.109700000000117e-05, 2.138900000000013e-05, 2.1236000000000865e-05, 2.10830000000016e-05, 2.131899999999881e-05, 2.118099999999859e-05, 2.120899999999773e-05, 2.1070000000001504e-05, 2.08890000000031e-05, 2.0527999999998825e-05, 2.111099999999727e-05, 2.1305999999998715e-05, 2.1236000000000865e-05, 2.141699999999927e-05, 2.116699999999902e-05, 2.0722000000000795e-05, 2.0598000000000144e-05, 2.1250000000000435e-05, 2.1250000000000435e-05, 2.084699999999745e-05, 2.14029999999997e-05, 2.1499999999997216e-05, 2.091699999999877e-05, 2.047300000000002e-05, 2.056899999999806e-05, 2.1112000000000214e-05, 2.081900000000178e-05, 2.111100000000074e-05, 2.145899999999798e-05, 2.123699999999687e-05, 2.104099999999942e-05, 2.0513999999999255e-05, 2.0665999999999046e-05, 2.1486000000001115e-05, 2.084700000000092e-05, 2.056900000000153e-05, 2.1179999999999116e-05, 2.106900000000203e-05, 2.0944000000001906e-05, 2.10830000000016e-05]</msg>
<status status="PASS" starttime="20201029 12:47:17.862" endtime="20201029 12:47:17.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.858" endtime="20201029 12:47:17.865"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:17.869" endtime="20201029 12:47:17.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.867" endtime="20201029 12:47:17.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.866" endtime="20201029 12:47:17.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.510" endtime="20201029 12:47:17.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.509" endtime="20201029 12:47:17.889"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.898" endtime="20201029 12:47:17.914"></status>
</kw>
<msg timestamp="20201029 12:47:17.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.896" endtime="20201029 12:47:17.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:17.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:17.916" endtime="20201029 12:47:17.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.918" endtime="20201029 12:47:17.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.894" endtime="20201029 12:47:17.920"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.892" endtime="20201029 12:47:17.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:17.927" endtime="20201029 12:47:18.216"></status>
</kw>
<msg timestamp="20201029 12:47:18.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019504444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019526639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:17.926" endtime="20201029 12:47:18.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019504444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019526639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:18.220" endtime="20201029 12:47:18.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.228" endtime="20201029 12:47:18.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.923" endtime="20201029 12:47:18.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.921" endtime="20201029 12:47:18.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:18.235" level="INFO">${RESULT} = [{'diff': 2.219499999999916e-05}, {'diff': 2.229100000000067e-05}, {'diff': 2.165299999999995e-05}, {'diff': 2.2472000000002545e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.215300000000045e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:18.231" endtime="20201029 12:47:18.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:18.239" level="INFO">${ACCURACY} = {'diff': [2.219499999999916e-05, 2.229100000000067e-05, 2.165299999999995e-05, 2.2472000000002545e-05, 2.205499999999999e-05, 2.215300000000045e-05, 2.187500000000106e-05, 2.1749999999997466e-05, 2.20...</msg>
<status status="PASS" starttime="20201029 12:47:18.236" endtime="20201029 12:47:18.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.243" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 12:47:18.242" endtime="20201029 12:47:18.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.246" level="INFO">VALUE: [2.219499999999916e-05, 2.229100000000067e-05, 2.165299999999995e-05, 2.2472000000002545e-05, 2.205499999999999e-05, 2.215300000000045e-05, 2.187500000000106e-05, 2.1749999999997466e-05, 2.2055999999999465e-05, 2.1971999999998576e-05, 2.2292000000000145e-05, 2.1929999999999866e-05, 2.1805999999999215e-05, 2.180499999999974e-05, 2.1805999999999215e-05, 2.237499999999809e-05, 2.2471999999999076e-05, 2.19030000000002e-05, 2.2457999999999506e-05, 2.1736000000001365e-05, 2.208299999999913e-05, 2.184699999999845e-05, 2.236099999999852e-05, 2.191699999999977e-05, 2.1749999999997466e-05, 2.236099999999852e-05, 2.191699999999977e-05, 2.191700000000324e-05, 2.226300000000153e-05, 2.20830000000026e-05, 2.166699999999952e-05, 2.193099999999934e-05, 2.172300000000127e-05, 2.245899999999898e-05, 2.193099999999934e-05, 2.181899999999931e-05, 2.161100000000124e-05, 2.211100000000174e-05, 2.184699999999845e-05, 2.1736000000001365e-05, 2.154099999999992e-05, 2.1722000000001795e-05, 2.211100000000174e-05, 2.2014000000000755e-05, 2.154099999999992e-05, 2.1666000000000046e-05, 2.161100000000124e-05, 2.2471999999999076e-05, 2.2250000000001435e-05, 2.1679999999999616e-05]</msg>
<status status="PASS" starttime="20201029 12:47:18.244" endtime="20201029 12:47:18.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.239" endtime="20201029 12:47:18.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:18.250" endtime="20201029 12:47:18.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.249" endtime="20201029 12:47:18.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.248" endtime="20201029 12:47:18.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.890" endtime="20201029 12:47:18.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:17.890" endtime="20201029 12:47:18.271"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.280" endtime="20201029 12:47:18.299"></status>
</kw>
<msg timestamp="20201029 12:47:18.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.278" endtime="20201029 12:47:18.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.300" endtime="20201029 12:47:18.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.303" endtime="20201029 12:47:18.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.276" endtime="20201029 12:47:18.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.273" endtime="20201029 12:47:18.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.312" endtime="20201029 12:47:18.622"></status>
</kw>
<msg timestamp="20201029 12:47:18.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022738181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227615, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:18.310" endtime="20201029 12:47:18.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022738181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227615, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:18.627" endtime="20201029 12:47:18.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.635" endtime="20201029 12:47:18.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.308" endtime="20201029 12:47:18.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.306" endtime="20201029 12:47:18.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:18.642" level="INFO">${RESULT} = [{'diff': 2.331900000000081e-05}, {'diff': 2.288900000000163e-05}, {'diff': 2.3097999999999175e-05}, {'diff': 2.2792000000000645e-05}, {'diff': 2.263900000000138e-05}, {'diff': 2.293100000000034e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:18.639" endtime="20201029 12:47:18.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:18.646" level="INFO">${ACCURACY} = {'diff': [2.331900000000081e-05, 2.288900000000163e-05, 2.3097999999999175e-05, 2.2792000000000645e-05, 2.263900000000138e-05, 2.293100000000034e-05, 2.283299999999988e-05, 2.2556000000003434e-05, 2.2...</msg>
<status status="PASS" starttime="20201029 12:47:18.643" endtime="20201029 12:47:18.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.651" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 12:47:18.650" endtime="20201029 12:47:18.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.653" level="INFO">VALUE: [2.331900000000081e-05, 2.288900000000163e-05, 2.3097999999999175e-05, 2.2792000000000645e-05, 2.263900000000138e-05, 2.293100000000034e-05, 2.283299999999988e-05, 2.2556000000003434e-05, 2.2749999999998466e-05, 2.269499999999966e-05, 2.291700000000077e-05, 2.27229999999988e-05, 2.3056000000000465e-05, 2.3097999999999175e-05, 2.255500000000049e-05, 2.336099999999952e-05, 2.3250000000002435e-05, 2.316700000000102e-05, 2.3290999999998202e-05, 2.2916000000001296e-05, 2.279100000000117e-05, 2.2944000000000436e-05, 2.344500000000041e-05, 2.30969999999997e-05, 2.2958000000000006e-05, 2.3430000000001366e-05, 2.2666000000001046e-05, 2.305500000000099e-05, 2.336099999999952e-05, 2.2652000000001477e-05, 2.3430000000001366e-05, 2.255500000000049e-05, 2.3040999999997952e-05, 2.2764000000001505e-05, 2.2749999999998466e-05, 2.2778000000001075e-05, 2.265300000000095e-05, 2.2499999999998216e-05, 2.305500000000099e-05, 2.311099999999927e-05, 2.336099999999952e-05, 2.268100000000009e-05, 2.34030000000017e-05, 2.3458000000000506e-05, 2.2749999999998466e-05, 2.2735999999998896e-05, 2.315300000000145e-05, 2.3499999999999216e-05, 2.287500000000206e-05, 2.3320000000000285e-05]</msg>
<status status="PASS" starttime="20201029 12:47:18.652" endtime="20201029 12:47:18.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.647" endtime="20201029 12:47:18.655"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:18.659" endtime="20201029 12:47:18.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.658" endtime="20201029 12:47:18.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.656" endtime="20201029 12:47:18.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.272" endtime="20201029 12:47:18.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.271" endtime="20201029 12:47:18.680"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.689" endtime="20201029 12:47:18.706"></status>
</kw>
<msg timestamp="20201029 12:47:18.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.687" endtime="20201029 12:47:18.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.708" endtime="20201029 12:47:18.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.710" endtime="20201029 12:47:18.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.685" endtime="20201029 12:47:18.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.682" endtime="20201029 12:47:18.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.720" endtime="20201029 12:47:19.005"></status>
</kw>
<msg timestamp="20201029 12:47:19.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019952431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019976, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:18.718" endtime="20201029 12:47:19.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019952431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019976, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:19.010" endtime="20201029 12:47:19.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.018" endtime="20201029 12:47:19.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.716" endtime="20201029 12:47:19.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.714" endtime="20201029 12:47:19.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:19.025" level="INFO">${RESULT} = [{'diff': 2.356900000000106e-05}, {'diff': 2.4306000000001715e-05}, {'diff': 2.4305999999998246e-05}, {'diff': 2.4013999999999286e-05}, {'diff': 2.386100000000002e-05}, {'diff': 2.3777999999998606e-05...</msg>
<status status="PASS" starttime="20201029 12:47:19.021" endtime="20201029 12:47:19.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:19.030" level="INFO">${ACCURACY} = {'diff': [2.356900000000106e-05, 2.4306000000001715e-05, 2.4305999999998246e-05, 2.4013999999999286e-05, 2.386100000000002e-05, 2.3777999999998606e-05, 2.4137999999999937e-05, 2.3957999999997537e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:19.026" endtime="20201029 12:47:19.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.035" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 12:47:19.033" endtime="20201029 12:47:19.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.037" level="INFO">VALUE: [2.356900000000106e-05, 2.4306000000001715e-05, 2.4305999999998246e-05, 2.4013999999999286e-05, 2.386100000000002e-05, 2.3777999999998606e-05, 2.4137999999999937e-05, 2.3957999999997537e-05, 2.3972000000000576e-05, 2.368100000000109e-05, 2.412499999999984e-05, 2.416700000000202e-05, 2.368099999999762e-05, 2.362499999999934e-05, 2.4028000000002325e-05, 2.3806000000001215e-05, 2.4083999999997135e-05, 2.3749999999999466e-05, 2.4194000000001686e-05, 2.390299999999873e-05, 2.4472000000001076e-05, 2.391700000000177e-05, 2.3749999999999466e-05, 2.4221999999997357e-05, 2.3679999999998147e-05, 2.4304999999998772e-05, 2.4500000000000216e-05, 2.3929999999998397e-05, 2.384700000000045e-05, 2.354100000000192e-05, 2.415299999999898e-05, 2.4486000000000646e-05, 2.3972000000000576e-05, 2.4179999999998647e-05, 2.4541999999998926e-05, 2.4513999999999786e-05, 2.362499999999934e-05, 2.3584000000000105e-05, 2.436100000000052e-05, 2.431900000000181e-05, 2.369500000000066e-05, 2.369500000000066e-05, 2.3999999999999716e-05, 2.4471999999997607e-05, 2.443100000000184e-05, 2.386100000000002e-05, 2.4208000000001256e-05, 2.366699999999805e-05, 2.4319999999997816e-05, 2.3749999999999466e-05]</msg>
<status status="PASS" starttime="20201029 12:47:19.036" endtime="20201029 12:47:19.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.031" endtime="20201029 12:47:19.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:19.042" endtime="20201029 12:47:19.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.041" endtime="20201029 12:47:19.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.040" endtime="20201029 12:47:19.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.681" endtime="20201029 12:47:19.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.680" endtime="20201029 12:47:19.063"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.072" endtime="20201029 12:47:19.090"></status>
</kw>
<msg timestamp="20201029 12:47:19.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.071" endtime="20201029 12:47:19.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.092" endtime="20201029 12:47:19.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.094" endtime="20201029 12:47:19.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.068" endtime="20201029 12:47:19.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.066" endtime="20201029 12:47:19.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.104" endtime="20201029 12:47:19.392"></status>
</kw>
<msg timestamp="20201029 12:47:19.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020363097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020388375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.102" endtime="20201029 12:47:19.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020363097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020388375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.396" endtime="20201029 12:47:19.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.405" endtime="20201029 12:47:19.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.099" endtime="20201029 12:47:19.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.098" endtime="20201029 12:47:19.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:19.412" level="INFO">${RESULT} = [{'diff': 2.5278000000000106e-05}, {'diff': 2.4471999999997607e-05}, {'diff': 2.519500000000216e-05}, {'diff': 2.5250000000000966e-05}, {'diff': 2.5236000000001396e-05}, {'diff': 2.458300000000163e-05...</msg>
<status status="PASS" starttime="20201029 12:47:19.408" endtime="20201029 12:47:19.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:19.416" level="INFO">${ACCURACY} = {'diff': [2.5278000000000106e-05, 2.4471999999997607e-05, 2.519500000000216e-05, 2.5250000000000966e-05, 2.5236000000001396e-05, 2.458300000000163e-05, 2.4569999999998066e-05, 2.519500000000216e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:47:19.413" endtime="20201029 12:47:19.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.421" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 12:47:19.420" endtime="20201029 12:47:19.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.423" level="INFO">VALUE: [2.5278000000000106e-05, 2.4471999999997607e-05, 2.519500000000216e-05, 2.5250000000000966e-05, 2.5236000000001396e-05, 2.458300000000163e-05, 2.4569999999998066e-05, 2.519500000000216e-05, 2.50970000000017e-05, 2.493100000000234e-05, 2.5416000000000327e-05, 2.536100000000152e-05, 2.4513999999999786e-05, 2.4598000000000675e-05, 2.466699999999905e-05, 2.4693999999998717e-05, 2.540300000000023e-05, 2.4527999999999356e-05, 2.4986000000001146e-05, 2.4929999999999397e-05, 2.4862000000000495e-05, 2.468099999999862e-05, 2.4860999999997552e-05, 2.4750000000000466e-05, 2.4693999999998717e-05, 2.4610999999997302e-05, 2.512500000000084e-05, 2.483300000000188e-05, 2.4764000000000036e-05, 2.5054999999999522e-05, 2.5027999999999856e-05, 2.540300000000023e-05, 2.5250000000000966e-05, 2.5443999999999467e-05, 2.4679999999999147e-05, 2.4736000000000896e-05, 2.486100000000102e-05, 2.512499999999737e-05, 2.5193999999999217e-05, 2.4555999999998496e-05, 2.5042000000002895e-05, 2.4764000000000036e-05, 2.462500000000034e-05, 2.4846999999997982e-05, 2.466699999999905e-05, 2.5110999999997802e-05, 2.515299999999998e-05, 2.4972000000001576e-05, 2.5500000000001216e-05, 2.5263000000001062e-05]</msg>
<status status="PASS" starttime="20201029 12:47:19.422" endtime="20201029 12:47:19.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.417" endtime="20201029 12:47:19.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:19.428" endtime="20201029 12:47:19.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.427" endtime="20201029 12:47:19.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.426" endtime="20201029 12:47:19.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.064" endtime="20201029 12:47:19.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.064" endtime="20201029 12:47:19.449"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.458" endtime="20201029 12:47:19.476"></status>
</kw>
<msg timestamp="20201029 12:47:19.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.456" endtime="20201029 12:47:19.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.477" endtime="20201029 12:47:19.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.480" endtime="20201029 12:47:19.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.454" endtime="20201029 12:47:19.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.451" endtime="20201029 12:47:19.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.489" endtime="20201029 12:47:19.776"></status>
</kw>
<msg timestamp="20201029 12:47:19.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021151139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021176958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.488" endtime="20201029 12:47:19.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021151139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021176958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.780" endtime="20201029 12:47:19.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.788" endtime="20201029 12:47:19.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.485" endtime="20201029 12:47:19.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.483" endtime="20201029 12:47:19.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:19.795" level="INFO">${RESULT} = [{'diff': 2.5818999999999842e-05}, {'diff': 2.5736000000001896e-05}, {'diff': 2.6319000000000342e-05}, {'diff': 2.5707999999999287e-05}, {'diff': 2.5832999999999412e-05}, {'diff': 2.6096999999999232e-...</msg>
<status status="PASS" starttime="20201029 12:47:19.792" endtime="20201029 12:47:19.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:19.799" level="INFO">${ACCURACY} = {'diff': [2.5818999999999842e-05, 2.5736000000001896e-05, 2.6319000000000342e-05, 2.5707999999999287e-05, 2.5832999999999412e-05, 2.6096999999999232e-05, 2.5805000000000272e-05, 2.5930000000000397e-05...</msg>
<status status="PASS" starttime="20201029 12:47:19.796" endtime="20201029 12:47:19.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.804" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 12:47:19.803" endtime="20201029 12:47:19.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.807" level="INFO">VALUE: [2.5818999999999842e-05, 2.5736000000001896e-05, 2.6319000000000342e-05, 2.5707999999999287e-05, 2.5832999999999412e-05, 2.6096999999999232e-05, 2.5805000000000272e-05, 2.5930000000000397e-05, 2.5624999999997872e-05, 2.5651999999997538e-05, 2.5791000000000702e-05, 2.5957999999999537e-05, 2.6250000000001966e-05, 2.638899999999819e-05, 2.640300000000123e-05, 2.5985999999998677e-05, 2.6374999999998622e-05, 2.6444000000000467e-05, 2.5708000000002756e-05, 2.5847999999998456e-05, 2.5693999999999717e-05, 2.622299999999883e-05, 2.6291999999997206e-05, 2.6124999999998372e-05, 2.618100000000012e-05, 2.5846999999998982e-05, 2.5819999999999316e-05, 2.618100000000012e-05, 2.5750000000001466e-05, 2.620899999999926e-05, 2.597300000000205e-05, 2.563900000000091e-05, 2.6278000000001106e-05, 2.6236000000002396e-05, 2.5819999999999316e-05, 2.59170000000003e-05, 2.6318999999996873e-05, 2.640299999999776e-05, 2.6306000000000246e-05, 2.6096999999999232e-05, 2.6471999999999607e-05, 2.6110999999998802e-05, 2.5916000000000827e-05, 2.562500000000134e-05, 2.5985999999998677e-05, 2.5764000000001036e-05, 2.5666000000000577e-05, 2.6194000000000217e-05, 2.6430000000000897e-05, 2.565300000000048e-05]</msg>
<status status="PASS" starttime="20201029 12:47:19.805" endtime="20201029 12:47:19.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.800" endtime="20201029 12:47:19.809"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:19.813" endtime="20201029 12:47:19.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.811" endtime="20201029 12:47:19.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.810" endtime="20201029 12:47:19.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.450" endtime="20201029 12:47:19.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.449" endtime="20201029 12:47:19.833"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.842" endtime="20201029 12:47:19.859"></status>
</kw>
<msg timestamp="20201029 12:47:19.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.841" endtime="20201029 12:47:19.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:19.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:19.861" endtime="20201029 12:47:19.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.863" endtime="20201029 12:47:19.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.838" endtime="20201029 12:47:19.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.836" endtime="20201029 12:47:19.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:19.873" endtime="20201029 12:47:20.159"></status>
</kw>
<msg timestamp="20201029 12:47:20.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019895111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019921778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:19.871" endtime="20201029 12:47:20.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019895111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019921778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.164" endtime="20201029 12:47:20.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.172" endtime="20201029 12:47:20.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.868" endtime="20201029 12:47:20.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.867" endtime="20201029 12:47:20.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:20.179" level="INFO">${RESULT} = [{'diff': 2.666700000000105e-05}, {'diff': 2.6986000000003146e-05}, {'diff': 2.7041999999997957e-05}, {'diff': 2.7069000000001092e-05}, {'diff': 2.7347999999999956e-05}, {'diff': 2.7124999999999372e-0...</msg>
<status status="PASS" starttime="20201029 12:47:20.175" endtime="20201029 12:47:20.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:20.184" level="INFO">${ACCURACY} = {'diff': [2.666700000000105e-05, 2.6986000000003146e-05, 2.7041999999997957e-05, 2.7069000000001092e-05, 2.7347999999999956e-05, 2.7124999999999372e-05, 2.6944000000000967e-05, 2.7319000000001342e-05,...</msg>
<status status="PASS" starttime="20201029 12:47:20.180" endtime="20201029 12:47:20.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.189" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 12:47:20.188" endtime="20201029 12:47:20.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.191" level="INFO">VALUE: [2.666700000000105e-05, 2.6986000000003146e-05, 2.7041999999997957e-05, 2.7069000000001092e-05, 2.7347999999999956e-05, 2.7124999999999372e-05, 2.6944000000000967e-05, 2.7319000000001342e-05, 2.6930000000001397e-05, 2.6541000000001452e-05, 2.6665999999998108e-05, 2.7110999999999802e-05, 2.7318999999997873e-05, 2.7179999999998178e-05, 2.6985999999999677e-05, 2.7165999999998608e-05, 2.6596999999999732e-05, 2.6569000000000592e-05, 2.6860999999999552e-05, 2.7069000000001092e-05, 2.6708000000000287e-05, 2.7110999999999802e-05, 2.7083000000000662e-05, 2.6542000000000926e-05, 2.6888999999998692e-05, 2.7084000000000136e-05, 2.6556000000000496e-05, 2.6542000000000926e-05, 2.7513999999999317e-05, 2.7472000000000607e-05, 2.6860999999999552e-05, 2.7320000000000816e-05, 2.6471999999999607e-05, 2.6972000000000107e-05, 2.6860999999999552e-05, 2.718100000000112e-05, 2.744500000000094e-05, 2.6749999999998997e-05, 2.7111999999999276e-05, 2.7112000000002745e-05, 2.6570000000000066e-05, 2.7374999999999622e-05, 2.6985999999999677e-05, 2.6833999999999886e-05, 2.668100000000062e-05, 2.6999999999999247e-05, 2.665300000000148e-05, 2.6721999999999857e-05, 2.7166000000002077e-05, 2.6972000000000107e-05]</msg>
<status status="PASS" starttime="20201029 12:47:20.190" endtime="20201029 12:47:20.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.185" endtime="20201029 12:47:20.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:20.196" endtime="20201029 12:47:20.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.195" endtime="20201029 12:47:20.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.194" endtime="20201029 12:47:20.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.834" endtime="20201029 12:47:20.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:19.834" endtime="20201029 12:47:20.217"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.226" endtime="20201029 12:47:20.244"></status>
</kw>
<msg timestamp="20201029 12:47:20.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.224" endtime="20201029 12:47:20.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.246" endtime="20201029 12:47:20.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.248" endtime="20201029 12:47:20.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.222" endtime="20201029 12:47:20.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.220" endtime="20201029 12:47:20.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.257" endtime="20201029 12:47:20.546"></status>
</kw>
<msg timestamp="20201029 12:47:20.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019980264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.256" endtime="20201029 12:47:20.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019951972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019980264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.550" endtime="20201029 12:47:20.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.559" endtime="20201029 12:47:20.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.253" endtime="20201029 12:47:20.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.251" endtime="20201029 12:47:20.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:20.566" level="INFO">${RESULT} = [{'diff': 2.8292000000002676e-05}, {'diff': 2.7722000000000857e-05}, {'diff': 2.766700000000205e-05}, {'diff': 2.8291999999999207e-05}, {'diff': 2.8000000000000247e-05}, {'diff': 2.815300000000298e-05...</msg>
<status status="PASS" starttime="20201029 12:47:20.562" endtime="20201029 12:47:20.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:20.570" level="INFO">${ACCURACY} = {'diff': [2.8292000000002676e-05, 2.7722000000000857e-05, 2.766700000000205e-05, 2.8291999999999207e-05, 2.8000000000000247e-05, 2.815300000000298e-05, 2.8305999999998777e-05, 2.8527999999999887e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:20.567" endtime="20201029 12:47:20.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.574" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 12:47:20.573" endtime="20201029 12:47:20.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.577" level="INFO">VALUE: [2.8292000000002676e-05, 2.7722000000000857e-05, 2.766700000000205e-05, 2.8291999999999207e-05, 2.8000000000000247e-05, 2.815300000000298e-05, 2.8305999999998777e-05, 2.8527999999999887e-05, 2.791699999999883e-05, 2.8472000000001607e-05, 2.7792000000002176e-05, 2.7861000000000552e-05, 2.8348000000000956e-05, 2.8402999999999762e-05, 2.8000000000000247e-05, 2.7902999999999262e-05, 2.8112000000000276e-05, 2.816700000000255e-05, 2.7818999999998373e-05, 2.7888999999999692e-05, 2.7722000000000857e-05, 2.8026999999999913e-05, 2.8054999999999053e-05, 2.8111000000000802e-05, 2.7651999999999538e-05, 2.8374999999997152e-05, 2.8179999999999178e-05, 2.8222000000001357e-05, 2.8389000000000192e-05, 2.8236000000000927e-05, 2.7929999999998928e-05, 2.7540999999998983e-05, 2.7722000000000857e-05, 2.8041999999998957e-05, 2.8221999999997888e-05, 2.7875000000000122e-05, 2.7875000000000122e-05, 2.8098000000000706e-05, 2.7736000000000427e-05, 2.8375000000000622e-05, 2.8402999999999762e-05, 2.8000000000000247e-05, 2.7541999999998457e-05, 2.8277999999999637e-05, 2.7986000000000677e-05, 2.7790999999999233e-05, 2.8096999999997763e-05, 2.7888999999999692e-05, 2.7611000000000302e-05, 2.8304999999999303e-05]</msg>
<status status="PASS" starttime="20201029 12:47:20.576" endtime="20201029 12:47:20.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.571" endtime="20201029 12:47:20.578"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:20.582" endtime="20201029 12:47:20.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.581" endtime="20201029 12:47:20.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.579" endtime="20201029 12:47:20.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.218" endtime="20201029 12:47:20.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.218" endtime="20201029 12:47:20.603"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.612" endtime="20201029 12:47:20.630"></status>
</kw>
<msg timestamp="20201029 12:47:20.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.610" endtime="20201029 12:47:20.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.632" endtime="20201029 12:47:20.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.635" endtime="20201029 12:47:20.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.608" endtime="20201029 12:47:20.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.605" endtime="20201029 12:47:20.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.644" endtime="20201029 12:47:20.930"></status>
</kw>
<msg timestamp="20201029 12:47:20.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021154792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021183778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.642" endtime="20201029 12:47:20.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021154792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021183778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:20.934" endtime="20201029 12:47:20.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.942" endtime="20201029 12:47:20.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.640" endtime="20201029 12:47:20.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.638" endtime="20201029 12:47:20.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:20.949" level="INFO">${RESULT} = [{'diff': 2.8986000000001677e-05}, {'diff': 2.9360999999998583e-05}, {'diff': 2.9041999999999957e-05}, {'diff': 2.8805999999999277e-05}, {'diff': 2.8874999999997653e-05}, {'diff': 2.9055999999999527e-...</msg>
<status status="PASS" starttime="20201029 12:47:20.946" endtime="20201029 12:47:20.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:20.953" level="INFO">${ACCURACY} = {'diff': [2.8986000000001677e-05, 2.9360999999998583e-05, 2.9041999999999957e-05, 2.8805999999999277e-05, 2.8874999999997653e-05, 2.9055999999999527e-05, 2.94309999999999e-05, 2.8666999999999582e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:20.950" endtime="20201029 12:47:20.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.958" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 12:47:20.957" endtime="20201029 12:47:20.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:20.960" level="INFO">VALUE: [2.8986000000001677e-05, 2.9360999999998583e-05, 2.9041999999999957e-05, 2.8805999999999277e-05, 2.8874999999997653e-05, 2.9055999999999527e-05, 2.94309999999999e-05, 2.8666999999999582e-05, 2.9500000000001747e-05, 2.9471999999999138e-05, 2.9166999999996612e-05, 2.8875000000001122e-05, 2.919500000000269e-05, 2.9014000000000817e-05, 2.9000000000001247e-05, 2.8653000000000012e-05, 2.8584000000001636e-05, 2.894500000000244e-05, 2.895900000000201e-05, 2.8666999999999582e-05, 2.9083000000002662e-05, 2.9249999999998028e-05, 2.8736000000001427e-05, 2.9070000000002566e-05, 2.9139000000000942e-05, 2.9055000000000053e-05, 2.9055000000000053e-05, 2.8597000000001732e-05, 2.8554999999999553e-05, 2.9250000000001497e-05, 2.8846999999998513e-05, 2.9403000000000762e-05, 2.8583000000002162e-05, 2.8903000000000262e-05, 2.9221999999998888e-05, 2.8804999999999803e-05, 2.9443999999999998e-05, 2.9153000000000512e-05, 2.9041999999999957e-05, 2.9139000000000942e-05, 2.9417000000000332e-05, 2.9041999999999957e-05, 2.8666999999999582e-05, 2.9499999999998278e-05, 2.9235999999998458e-05, 2.8527999999999887e-05, 2.9250000000001497e-05, 2.9292000000000207e-05, 2.8569999999998597e-05, 2.9375000000001622e-05]</msg>
<status status="PASS" starttime="20201029 12:47:20.959" endtime="20201029 12:47:20.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.954" endtime="20201029 12:47:20.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:20.967" endtime="20201029 12:47:20.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.965" endtime="20201029 12:47:20.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.964" endtime="20201029 12:47:20.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.604" endtime="20201029 12:47:20.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.603" endtime="20201029 12:47:20.987"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:20.996" endtime="20201029 12:47:21.015"></status>
</kw>
<msg timestamp="20201029 12:47:21.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:20.995" endtime="20201029 12:47:21.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.016" endtime="20201029 12:47:21.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.019" endtime="20201029 12:47:21.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.992" endtime="20201029 12:47:21.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.990" endtime="20201029 12:47:21.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.028" endtime="20201029 12:47:21.314"></status>
</kw>
<msg timestamp="20201029 12:47:21.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019876292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019906361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.026" endtime="20201029 12:47:21.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019876292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019906361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.318" endtime="20201029 12:47:21.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.327" endtime="20201029 12:47:21.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.024" endtime="20201029 12:47:21.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.022" endtime="20201029 12:47:21.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:21.333" level="INFO">${RESULT} = [{'diff': 3.0069000000000623e-05}, {'diff': 2.9610999999998833e-05}, {'diff': 3.0320000000000347e-05}, {'diff': 2.9778000000001137e-05}, {'diff': 2.9999999999998778e-05}, {'diff': 2.9708000000003287e-...</msg>
<status status="PASS" starttime="20201029 12:47:21.330" endtime="20201029 12:47:21.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:21.338" level="INFO">${ACCURACY} = {'diff': [3.0069000000000623e-05, 2.9610999999998833e-05, 3.0320000000000347e-05, 2.9778000000001137e-05, 2.9999999999998778e-05, 2.9708000000003287e-05, 3.0070000000000097e-05, 2.9917000000000832e-05...</msg>
<status status="PASS" starttime="20201029 12:47:21.334" endtime="20201029 12:47:21.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.343" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 12:47:21.342" endtime="20201029 12:47:21.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.346" level="INFO">VALUE: [3.0069000000000623e-05, 2.9610999999998833e-05, 3.0320000000000347e-05, 2.9778000000001137e-05, 2.9999999999998778e-05, 2.9708000000003287e-05, 3.0070000000000097e-05, 2.9917000000000832e-05, 2.9680000000000678e-05, 2.9624999999998403e-05, 3.0513999999998848e-05, 3.0042000000000957e-05, 3.0388999999998723e-05, 3.0110999999999333e-05, 2.9735999999998958e-05, 3.0249999999999028e-05, 3.0028000000001387e-05, 3.02370000000024e-05, 2.9624999999998403e-05, 2.9764000000001567e-05, 3.0512999999999374e-05, 2.972300000000233e-05, 3.0472000000000138e-05, 2.9499999999998278e-05, 3.017999999999771e-05, 3.0360999999999583e-05, 2.9819000000000373e-05, 2.9790999999997764e-05, 2.9680000000000678e-05, 3.0055000000001053e-05, 3.0388999999998723e-05, 3.0347000000000013e-05, 3.0374999999999153e-05, 2.9707999999999818e-05, 2.9999999999998778e-05, 3.0235999999999458e-05, 2.9735999999998958e-05, 2.9681000000000152e-05, 2.9846999999999513e-05, 3.0486000000003177e-05, 2.9778000000001137e-05, 2.9860999999999083e-05, 2.9917000000000832e-05, 3.019500000000022e-05, 3.0042000000000957e-05, 2.9805999999996807e-05, 3.048699999999918e-05, 2.969499999999972e-05, 2.9806000000000277e-05, 2.9931000000000402e-05]</msg>
<status status="PASS" starttime="20201029 12:47:21.344" endtime="20201029 12:47:21.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.339" endtime="20201029 12:47:21.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:21.356" endtime="20201029 12:47:21.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.354" endtime="20201029 12:47:21.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.353" endtime="20201029 12:47:21.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.988" endtime="20201029 12:47:21.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:20.988" endtime="20201029 12:47:21.376"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.385" endtime="20201029 12:47:21.403"></status>
</kw>
<msg timestamp="20201029 12:47:21.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.384" endtime="20201029 12:47:21.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.405" endtime="20201029 12:47:21.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.408" endtime="20201029 12:47:21.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.381" endtime="20201029 12:47:21.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.379" endtime="20201029 12:47:21.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.417" endtime="20201029 12:47:21.704"></status>
</kw>
<msg timestamp="20201029 12:47:21.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019978278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.416" endtime="20201029 12:47:21.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019947653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019978278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.708" endtime="20201029 12:47:21.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.716" endtime="20201029 12:47:21.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.413" endtime="20201029 12:47:21.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.411" endtime="20201029 12:47:21.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:21.723" level="INFO">${RESULT} = [{'diff': 3.06249999999994e-05}, {'diff': 3.066700000000158e-05}, {'diff': 3.094500000000097e-05}, {'diff': 3.129199999999874e-05}, {'diff': 3.145800000000157e-05}, {'diff': 3.148600000000071e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:21.720" endtime="20201029 12:47:21.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:21.727" level="INFO">${ACCURACY} = {'diff': [3.06249999999994e-05, 3.066700000000158e-05, 3.094500000000097e-05, 3.129199999999874e-05, 3.145800000000157e-05, 3.148600000000071e-05, 3.136100000000058e-05, 3.093000000000193e-05, 3.12769...</msg>
<status status="PASS" starttime="20201029 12:47:21.724" endtime="20201029 12:47:21.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.732" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 12:47:21.731" endtime="20201029 12:47:21.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.735" level="INFO">VALUE: [3.06249999999994e-05, 3.066700000000158e-05, 3.094500000000097e-05, 3.129199999999874e-05, 3.145800000000157e-05, 3.148600000000071e-05, 3.136100000000058e-05, 3.093000000000193e-05, 3.1276999999999694e-05, 3.119400000000175e-05, 3.099999999999978e-05, 3.055500000000155e-05, 3.151399999999985e-05, 3.0568999999997654e-05, 3.069399999999778e-05, 3.073599999999996e-05, 3.072200000000039e-05, 3.091700000000183e-05, 3.14579999999981e-05, 3.138899999999972e-05, 3.143099999999843e-05, 3.099999999999978e-05, 3.148600000000071e-05, 3.087499999999965e-05, 3.115199999999957e-05, 3.098600000000021e-05, 3.136100000000058e-05, 3.138899999999972e-05, 3.059700000000026e-05, 3.079199999999824e-05, 3.065299999999854e-05, 3.0750000000003e-05, 3.102799999999892e-05, 3.070900000000029e-05, 3.055599999999756e-05, 3.148700000000018e-05, 3.129199999999874e-05, 3.141599999999939e-05, 3.125000000000003e-05, 3.106999999999763e-05, 3.074999999999953e-05, 3.055500000000155e-05, 3.0582999999997224e-05, 3.068000000000168e-05, 3.123600000000046e-05, 3.144399999999853e-05, 3.136100000000058e-05, 3.0540999999998514e-05, 3.115199999999957e-05, 3.1054999999998584e-05]</msg>
<status status="PASS" starttime="20201029 12:47:21.733" endtime="20201029 12:47:21.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.728" endtime="20201029 12:47:21.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:21.740" endtime="20201029 12:47:21.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.738" endtime="20201029 12:47:21.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.737" endtime="20201029 12:47:21.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.377" endtime="20201029 12:47:21.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.377" endtime="20201029 12:47:21.760"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.770" endtime="20201029 12:47:21.789"></status>
</kw>
<msg timestamp="20201029 12:47:21.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.768" endtime="20201029 12:47:21.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:21.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:21.791" endtime="20201029 12:47:21.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.793" endtime="20201029 12:47:21.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.765" endtime="20201029 12:47:21.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.763" endtime="20201029 12:47:21.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:21.803" endtime="20201029 12:47:22.090"></status>
</kw>
<msg timestamp="20201029 12:47:22.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023572917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023605319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:21.801" endtime="20201029 12:47:22.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023572917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023605319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.095" endtime="20201029 12:47:22.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.103" endtime="20201029 12:47:22.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.798" endtime="20201029 12:47:22.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.797" endtime="20201029 12:47:22.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:22.110" level="INFO">${RESULT} = [{'diff': 3.240200000000082e-05}, {'diff': 3.2555000000000084e-05}, {'diff': 3.173600000000096e-05}, {'diff': 3.191699999999936e-05}, {'diff': 3.19440000000025e-05}, {'diff': 3.247300000000161e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:22.106" endtime="20201029 12:47:22.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:22.114" level="INFO">${ACCURACY} = {'diff': [3.240200000000082e-05, 3.2555000000000084e-05, 3.173600000000096e-05, 3.191699999999936e-05, 3.19440000000025e-05, 3.247300000000161e-05, 3.165200000000007e-05, 3.200000000000078e-05, 3.1915...</msg>
<status status="PASS" starttime="20201029 12:47:22.111" endtime="20201029 12:47:22.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.119" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 12:47:22.118" endtime="20201029 12:47:22.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.121" level="INFO">VALUE: [3.240200000000082e-05, 3.2555000000000084e-05, 3.173600000000096e-05, 3.191699999999936e-05, 3.19440000000025e-05, 3.247300000000161e-05, 3.165200000000007e-05, 3.200000000000078e-05, 3.191599999999989e-05, 3.198600000000121e-05, 3.172200000000139e-05, 3.1610999999997363e-05, 3.220800000000232e-05, 3.1610999999997363e-05, 3.152799999999942e-05, 3.2096999999998294e-05, 3.192999999999946e-05, 3.180599999999881e-05, 3.155599999999856e-05, 3.220799999999885e-05, 3.229199999999974e-05, 3.230599999999931e-05, 3.19449999999985e-05, 3.19310000000024e-05, 3.182000000000185e-05, 3.222200000000189e-05, 3.202799999999992e-05, 3.238800000000125e-05, 3.165299999999954e-05, 3.233399999999845e-05, 3.236100000000158e-05, 3.198600000000121e-05, 3.172200000000139e-05, 3.16250000000004e-05, 3.225000000000103e-05, 3.220899999999832e-05, 3.23050000000033e-05, 3.163899999999997e-05, 3.190299999999979e-05, 3.175000000000053e-05, 3.237500000000115e-05, 3.1818999999998904e-05, 3.179199999999924e-05, 3.2291000000000264e-05, 3.193099999999893e-05, 3.217999999999971e-05, 3.237500000000115e-05, 3.227800000000017e-05, 3.193000000000293e-05, 3.211100000000133e-05]</msg>
<status status="PASS" starttime="20201029 12:47:22.120" endtime="20201029 12:47:22.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.115" endtime="20201029 12:47:22.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:22.127" endtime="20201029 12:47:22.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.126" endtime="20201029 12:47:22.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.124" endtime="20201029 12:47:22.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.761" endtime="20201029 12:47:22.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:21.761" endtime="20201029 12:47:22.148"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.158" endtime="20201029 12:47:22.176"></status>
</kw>
<msg timestamp="20201029 12:47:22.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.156" endtime="20201029 12:47:22.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.177" endtime="20201029 12:47:22.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.180" endtime="20201029 12:47:22.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.153" endtime="20201029 12:47:22.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.151" endtime="20201029 12:47:22.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.189" endtime="20201029 12:47:22.475"></status>
</kw>
<msg timestamp="20201029 12:47:22.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021222306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021255361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.187" endtime="20201029 12:47:22.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021222306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021255361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.479" endtime="20201029 12:47:22.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.488" endtime="20201029 12:47:22.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.185" endtime="20201029 12:47:22.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.183" endtime="20201029 12:47:22.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:22.495" level="INFO">${RESULT} = [{'diff': 3.3055000000000584e-05}, {'diff': 3.263900000000097e-05}, {'diff': 3.329199999999727e-05}, {'diff': 3.326399999999813e-05}, {'diff': 3.327800000000117e-05}, {'diff': 3.315299999999757e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:22.491" endtime="20201029 12:47:22.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:22.500" level="INFO">${ACCURACY} = {'diff': [3.3055000000000584e-05, 3.263900000000097e-05, 3.329199999999727e-05, 3.326399999999813e-05, 3.327800000000117e-05, 3.315299999999757e-05, 3.276399999999763e-05, 3.269499999999925e-05, 3.269...</msg>
<status status="PASS" starttime="20201029 12:47:22.496" endtime="20201029 12:47:22.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.505" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 12:47:22.503" endtime="20201029 12:47:22.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.507" level="INFO">VALUE: [3.3055000000000584e-05, 3.263900000000097e-05, 3.329199999999727e-05, 3.326399999999813e-05, 3.327800000000117e-05, 3.315299999999757e-05, 3.276399999999763e-05, 3.269499999999925e-05, 3.269399999999978e-05, 3.29579999999996e-05, 3.337500000000215e-05, 3.31250000000019e-05, 3.269499999999925e-05, 3.316700000000061e-05, 3.2610999999998364e-05, 3.299999999999831e-05, 3.2763000000001624e-05, 3.290300000000079e-05, 3.268099999999968e-05, 3.3124999999998433e-05, 3.3041000000001014e-05, 3.298600000000221e-05, 3.297200000000264e-05, 3.293000000000046e-05, 3.298599999999874e-05, 3.3346999999999544e-05, 3.344400000000053e-05, 3.291600000000089e-05, 3.340300000000129e-05, 3.3291000000001264e-05, 3.275000000000153e-05, 3.3055000000000584e-05, 3.3110999999998864e-05, 3.318100000000018e-05, 3.330600000000031e-05, 3.336199999999859e-05, 3.255599999999956e-05, 3.2874999999998183e-05, 3.298600000000221e-05, 3.255599999999956e-05, 3.326399999999813e-05, 3.273599999999849e-05, 3.343100000000043e-05, 3.252800000000042e-05, 3.331999999999988e-05, 3.298599999999874e-05, 3.282000000000285e-05, 3.341699999999739e-05, 3.26250000000014e-05, 3.293099999999993e-05]</msg>
<status status="PASS" starttime="20201029 12:47:22.506" endtime="20201029 12:47:22.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.501" endtime="20201029 12:47:22.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:22.512" endtime="20201029 12:47:22.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.511" endtime="20201029 12:47:22.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.509" endtime="20201029 12:47:22.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.149" endtime="20201029 12:47:22.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.148" endtime="20201029 12:47:22.533"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.542" endtime="20201029 12:47:22.559"></status>
</kw>
<msg timestamp="20201029 12:47:22.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.540" endtime="20201029 12:47:22.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.561" endtime="20201029 12:47:22.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.564" endtime="20201029 12:47:22.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.538" endtime="20201029 12:47:22.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.535" endtime="20201029 12:47:22.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.573" endtime="20201029 12:47:22.859"></status>
</kw>
<msg timestamp="20201029 12:47:22.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019917403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019951347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.571" endtime="20201029 12:47:22.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019917403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019951347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.864" endtime="20201029 12:47:22.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.872" endtime="20201029 12:47:22.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.569" endtime="20201029 12:47:22.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.567" endtime="20201029 12:47:22.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:22.879" level="INFO">${RESULT} = [{'diff': 3.394400000000103e-05}, {'diff': 3.422200000000042e-05}, {'diff': 3.422200000000042e-05}, {'diff': 3.390300000000179e-05}, {'diff': 3.4110999999999864e-05}, {'diff': 3.444499999999753e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:22.876" endtime="20201029 12:47:22.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:22.883" level="INFO">${ACCURACY} = {'diff': [3.394400000000103e-05, 3.422200000000042e-05, 3.422200000000042e-05, 3.390300000000179e-05, 3.4110999999999864e-05, 3.444499999999753e-05, 3.374999999999906e-05, 3.390300000000179e-05, 3.426...</msg>
<status status="PASS" starttime="20201029 12:47:22.880" endtime="20201029 12:47:22.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.888" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 12:47:22.887" endtime="20201029 12:47:22.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.890" level="INFO">VALUE: [3.394400000000103e-05, 3.422200000000042e-05, 3.422200000000042e-05, 3.390300000000179e-05, 3.4110999999999864e-05, 3.444499999999753e-05, 3.374999999999906e-05, 3.390300000000179e-05, 3.426399999999913e-05, 3.443100000000143e-05, 3.426399999999913e-05, 3.429199999999827e-05, 3.388900000000222e-05, 3.391699999999789e-05, 3.441699999999839e-05, 3.4361000000000114e-05, 3.4110999999999864e-05, 3.3888999999998753e-05, 3.418100000000118e-05, 3.399999999999931e-05, 3.397299999999964e-05, 3.419399999999781e-05, 3.4374999999999684e-05, 3.3804999999997865e-05, 3.398600000000321e-05, 3.447300000000014e-05, 3.4069000000001154e-05, 3.373599999999949e-05, 3.422200000000042e-05, 3.4041000000002014e-05, 3.3847000000000044e-05, 3.4138999999999003e-05, 3.3583000000000224e-05, 3.355600000000056e-05, 3.420900000000032e-05, 3.418000000000171e-05, 3.376399999999863e-05, 3.373599999999949e-05, 3.361100000000283e-05, 3.3568999999997184e-05, 3.391699999999789e-05, 3.424999999999956e-05, 3.393099999999746e-05, 3.3860999999999614e-05, 3.4361000000000114e-05, 3.393099999999746e-05, 3.379200000000124e-05, 3.354200000000099e-05, 3.366700000000111e-05, 3.422199999999695e-05]</msg>
<status status="PASS" starttime="20201029 12:47:22.889" endtime="20201029 12:47:22.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.884" endtime="20201029 12:47:22.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:22.895" endtime="20201029 12:47:22.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.894" endtime="20201029 12:47:22.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.893" endtime="20201029 12:47:22.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.534" endtime="20201029 12:47:22.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.533" endtime="20201029 12:47:22.916"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.925" endtime="20201029 12:47:22.943"></status>
</kw>
<msg timestamp="20201029 12:47:22.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.923" endtime="20201029 12:47:22.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:22.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:22.944" endtime="20201029 12:47:22.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.947" endtime="20201029 12:47:22.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.921" endtime="20201029 12:47:22.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.919" endtime="20201029 12:47:22.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:22.956" endtime="20201029 12:47:23.241"></status>
</kw>
<msg timestamp="20201029 12:47:23.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020959167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020994069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:22.954" endtime="20201029 12:47:23.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020959167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020994069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.245" endtime="20201029 12:47:23.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.254" endtime="20201029 12:47:23.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.952" endtime="20201029 12:47:23.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.950" endtime="20201029 12:47:23.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:23.261" level="INFO">${RESULT} = [{'diff': 3.490199999999985e-05}, {'diff': 3.544399999999906e-05}, {'diff': 3.520800000000185e-05}, {'diff': 3.544399999999906e-05}, {'diff': 3.466599999999917e-05}, {'diff': 3.470800000000135e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:23.257" endtime="20201029 12:47:23.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:23.265" level="INFO">${ACCURACY} = {'diff': [3.490199999999985e-05, 3.544399999999906e-05, 3.520800000000185e-05, 3.544399999999906e-05, 3.466599999999917e-05, 3.470800000000135e-05, 3.49580000000016e-05, 3.51520000000001e-05, 3.506899...</msg>
<status status="PASS" starttime="20201029 12:47:23.262" endtime="20201029 12:47:23.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.270" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 12:47:23.269" endtime="20201029 12:47:23.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.272" level="INFO">VALUE: [3.490199999999985e-05, 3.544399999999906e-05, 3.520800000000185e-05, 3.544399999999906e-05, 3.466599999999917e-05, 3.470800000000135e-05, 3.49580000000016e-05, 3.51520000000001e-05, 3.5068999999998685e-05, 3.452799999999895e-05, 3.523599999999752e-05, 3.480599999999834e-05, 3.494399999999856e-05, 3.49719999999977e-05, 3.4875000000000184e-05, 3.516700000000261e-05, 3.5416999999999393e-05, 3.480600000000181e-05, 3.467999999999874e-05, 3.480599999999834e-05, 3.5332999999998504e-05, 3.49450000000015e-05, 3.547300000000114e-05, 3.5360999999997644e-05, 3.491700000000236e-05, 3.5125000000000434e-05, 3.493099999999846e-05, 3.47779999999992e-05, 3.505599999999859e-05, 3.534800000000102e-05, 3.494399999999856e-05, 3.5040999999999545e-05, 3.4861000000000614e-05, 3.4611000000000364e-05, 3.526400000000013e-05, 3.517999999999924e-05, 3.5124999999996964e-05, 3.523600000000099e-05, 3.515300000000304e-05, 3.4847000000001044e-05, 3.473600000000049e-05, 3.5318999999998935e-05, 3.548600000000124e-05, 3.504200000000249e-05, 3.545799999999863e-05, 3.550000000000081e-05, 3.530600000000231e-05, 3.479199999999877e-05, 3.5111000000000864e-05, 3.470799999999788e-05]</msg>
<status status="PASS" starttime="20201029 12:47:23.271" endtime="20201029 12:47:23.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.266" endtime="20201029 12:47:23.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:23.278" endtime="20201029 12:47:23.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.277" endtime="20201029 12:47:23.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.276" endtime="20201029 12:47:23.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.917" endtime="20201029 12:47:23.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:22.917" endtime="20201029 12:47:23.299"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.308" endtime="20201029 12:47:23.325"></status>
</kw>
<msg timestamp="20201029 12:47:23.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.306" endtime="20201029 12:47:23.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.327" endtime="20201029 12:47:23.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.329" endtime="20201029 12:47:23.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.304" endtime="20201029 12:47:23.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.301" endtime="20201029 12:47:23.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.339" endtime="20201029 12:47:23.624"></status>
</kw>
<msg timestamp="20201029 12:47:23.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019852139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019888472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.337" endtime="20201029 12:47:23.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019852139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019888472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:23.628" endtime="20201029 12:47:23.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.636" endtime="20201029 12:47:23.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.334" endtime="20201029 12:47:23.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.333" endtime="20201029 12:47:23.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:23.643" level="INFO">${RESULT} = [{'diff': 3.6332999999999505e-05}, {'diff': 3.593099999999946e-05}, {'diff': 3.6110999999998394e-05}, {'diff': 3.6180999999999713e-05}, {'diff': 3.568100000000268e-05}, {'diff': 3.625000000000156e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:23.640" endtime="20201029 12:47:23.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:23.648" level="INFO">${ACCURACY} = {'diff': [3.6332999999999505e-05, 3.593099999999946e-05, 3.6110999999998394e-05, 3.6180999999999713e-05, 3.568100000000268e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.6111000000001864e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:47:23.644" endtime="20201029 12:47:23.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.653" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 12:47:23.652" endtime="20201029 12:47:23.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.655" level="INFO">VALUE: [3.6332999999999505e-05, 3.593099999999946e-05, 3.6110999999998394e-05, 3.6180999999999713e-05, 3.568100000000268e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.6111000000001864e-05, 3.572300000000139e-05, 3.592999999999999e-05, 3.6276999999997755e-05, 3.6139000000001004e-05, 3.572200000000192e-05, 3.6290999999997325e-05, 3.6291000000000795e-05, 3.5804999999999865e-05, 3.570800000000235e-05, 3.5804999999999865e-05, 3.6041000000000545e-05, 3.6360999999998644e-05, 3.592999999999999e-05, 3.605599999999959e-05, 3.582000000000238e-05, 3.570800000000235e-05, 3.598599999999827e-05, 3.575000000000106e-05, 3.630600000000331e-05, 3.6082999999999255e-05, 3.580599999999934e-05, 3.555600000000256e-05, 3.602800000000045e-05, 3.5777000000000725e-05, 3.62780000000007e-05, 3.650000000000181e-05, 3.5624999999997464e-05, 3.601399999999741e-05, 3.5903000000000324e-05, 3.5653000000000074e-05, 3.6417000000000394e-05, 3.623600000000199e-05, 3.6291000000000795e-05, 3.6305000000000365e-05, 3.5568999999999185e-05, 3.5861000000001614e-05, 3.625000000000156e-05, 3.6291000000000795e-05, 3.6055000000000115e-05, 3.6291000000000795e-05, 3.5804999999999865e-05, 3.5611000000001364e-05]</msg>
<status status="PASS" starttime="20201029 12:47:23.654" endtime="20201029 12:47:23.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.649" endtime="20201029 12:47:23.657"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:23.661" endtime="20201029 12:47:23.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.659" endtime="20201029 12:47:23.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.658" endtime="20201029 12:47:23.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.300" endtime="20201029 12:47:23.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.299" endtime="20201029 12:47:23.681"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.690" endtime="20201029 12:47:23.708"></status>
</kw>
<msg timestamp="20201029 12:47:23.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.689" endtime="20201029 12:47:23.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:23.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:23.710" endtime="20201029 12:47:23.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.712" endtime="20201029 12:47:23.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.686" endtime="20201029 12:47:23.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.684" endtime="20201029 12:47:23.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:23.721" endtime="20201029 12:47:24.009"></status>
</kw>
<msg timestamp="20201029 12:47:24.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0199275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019964667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:23.720" endtime="20201029 12:47:24.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0199275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019964667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:24.013" endtime="20201029 12:47:24.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.021" endtime="20201029 12:47:24.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.717" endtime="20201029 12:47:24.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.715" endtime="20201029 12:47:24.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.028" level="INFO">${RESULT} = [{'diff': 3.7166999999997674e-05}, {'diff': 3.722199999999995e-05}, {'diff': 3.7167000000001144e-05}, {'diff': 3.6762999999998686e-05}, {'diff': 3.72780000000017e-05}, {'diff': 3.6624999999998464e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:24.025" endtime="20201029 12:47:24.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:24.032" level="INFO">${ACCURACY} = {'diff': [3.7166999999997674e-05, 3.722199999999995e-05, 3.7167000000001144e-05, 3.6762999999998686e-05, 3.72780000000017e-05, 3.6624999999998464e-05, 3.74720000000002e-05, 3.6639000000001504e-05, 3.7...</msg>
<status status="PASS" starttime="20201029 12:47:24.029" endtime="20201029 12:47:24.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.036" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 12:47:24.035" endtime="20201029 12:47:24.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.039" level="INFO">VALUE: [3.7166999999997674e-05, 3.722199999999995e-05, 3.7167000000001144e-05, 3.6762999999998686e-05, 3.72780000000017e-05, 3.6624999999998464e-05, 3.74720000000002e-05, 3.6639000000001504e-05, 3.7082999999996785e-05, 3.7304999999997895e-05, 3.7276999999998756e-05, 3.7319000000000935e-05, 3.72780000000017e-05, 3.69719999999997e-05, 3.669400000000031e-05, 3.655600000000009e-05, 3.747299999999967e-05, 3.7347000000000075e-05, 3.7347000000000075e-05, 3.6681000000000213e-05, 3.7138999999998534e-05, 3.6582999999999755e-05, 3.724999999999909e-05, 3.6596999999999325e-05, 3.722199999999995e-05, 3.708399999999973e-05, 3.7124999999998964e-05, 3.6624999999998464e-05, 3.6902999999997854e-05, 3.6931000000000463e-05, 3.749999999999934e-05, 3.693000000000099e-05, 3.690200000000185e-05, 3.7124999999998964e-05, 3.7110999999999394e-05, 3.724999999999909e-05, 3.7347000000000075e-05, 3.7110999999999394e-05, 3.6610999999998894e-05, 3.7040999999998075e-05, 3.749999999999934e-05, 3.6874999999998714e-05, 3.7333000000000505e-05, 3.723599999999952e-05, 3.6681000000000213e-05, 3.749999999999934e-05, 3.707000000000016e-05, 3.654200000000052e-05, 3.679200000000077e-05, 3.7139000000002004e-05]</msg>
<status status="PASS" starttime="20201029 12:47:24.037" endtime="20201029 12:47:24.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.033" endtime="20201029 12:47:24.040"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:24.043" endtime="20201029 12:47:24.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.042" endtime="20201029 12:47:24.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.041" endtime="20201029 12:47:24.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.682" endtime="20201029 12:47:24.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:23.682" endtime="20201029 12:47:24.064"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.078" endtime="20201029 12:47:24.099"></status>
</kw>
<msg timestamp="20201029 12:47:24.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.074" endtime="20201029 12:47:24.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.100" endtime="20201029 12:47:24.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.103" endtime="20201029 12:47:24.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.070" endtime="20201029 12:47:24.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.066" endtime="20201029 12:47:24.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.119" endtime="20201029 12:47:24.415"></status>
</kw>
<msg timestamp="20201029 12:47:24.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026834861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026872681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.116" endtime="20201029 12:47:24.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026834861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026872681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.420" endtime="20201029 12:47:24.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.429" endtime="20201029 12:47:24.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.110" endtime="20201029 12:47:24.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.107" endtime="20201029 12:47:24.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.437" level="INFO">${RESULT} = [{'diff': 3.781999999999744e-05}, {'diff': 3.773600000000002e-05}, {'diff': 3.774999999999959e-05}, {'diff': 3.8416999999998924e-05}, {'diff': 3.823699999999999e-05}, {'diff': 3.7888999999999284e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:24.433" endtime="20201029 12:47:24.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:24.441" level="INFO">${ACCURACY} = {'diff': [3.781999999999744e-05, 3.773600000000002e-05, 3.774999999999959e-05, 3.8416999999998924e-05, 3.823699999999999e-05, 3.7888999999999284e-05, 3.794400000000156e-05, 3.7555000000001615e-05, 3.8...</msg>
<status status="PASS" starttime="20201029 12:47:24.438" endtime="20201029 12:47:24.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.445" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 12:47:24.444" endtime="20201029 12:47:24.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.448" level="INFO">VALUE: [3.781999999999744e-05, 3.773600000000002e-05, 3.774999999999959e-05, 3.8416999999998924e-05, 3.823699999999999e-05, 3.7888999999999284e-05, 3.794400000000156e-05, 3.7555000000001615e-05, 3.823599999999705e-05, 3.8096999999997355e-05, 3.81659999999992e-05, 3.8097000000000825e-05, 3.7597000000000325e-05, 3.7597000000000325e-05, 3.7610999999999895e-05, 3.819399999999834e-05, 3.7846999999997105e-05, 3.7666999999998174e-05, 3.845800000000163e-05, 3.7833000000001005e-05, 3.772200000000045e-05, 3.7888999999999284e-05, 3.7889000000002754e-05, 3.7861000000000145e-05, 3.806999999999769e-05, 3.7917000000001894e-05, 3.8097000000000825e-05, 3.838800000000031e-05, 3.825000000000009e-05, 3.79720000000007e-05, 3.80980000000003e-05, 3.7874999999999714e-05, 3.848700000000024e-05, 3.774999999999959e-05, 3.752799999999848e-05, 3.8374999999996745e-05, 3.841599999999945e-05, 3.8290999999999326e-05, 3.8097000000000825e-05, 3.774999999999959e-05, 3.7833000000001005e-05, 3.817999999999877e-05, 3.801399999999941e-05, 3.7597000000000325e-05, 3.843000000000249e-05, 3.825000000000009e-05, 3.754200000000152e-05, 3.776400000000263e-05, 3.850000000000034e-05, 3.758400000000023e-05]</msg>
<status status="PASS" starttime="20201029 12:47:24.446" endtime="20201029 12:47:24.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.442" endtime="20201029 12:47:24.450"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:24.454" endtime="20201029 12:47:24.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.452" endtime="20201029 12:47:24.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.451" endtime="20201029 12:47:24.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.065" endtime="20201029 12:47:24.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.064" endtime="20201029 12:47:24.474"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.483" endtime="20201029 12:47:24.502"></status>
</kw>
<msg timestamp="20201029 12:47:24.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.481" endtime="20201029 12:47:24.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.504" endtime="20201029 12:47:24.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.506" endtime="20201029 12:47:24.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.479" endtime="20201029 12:47:24.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.477" endtime="20201029 12:47:24.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.515" endtime="20201029 12:47:24.802"></status>
</kw>
<msg timestamp="20201029 12:47:24.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019533111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019572042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.514" endtime="20201029 12:47:24.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019533111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019572042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.807" endtime="20201029 12:47:24.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.815" endtime="20201029 12:47:24.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.511" endtime="20201029 12:47:24.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.510" endtime="20201029 12:47:24.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.822" level="INFO">${RESULT} = [{'diff': 3.8931000000002464e-05}, {'diff': 3.880599999999887e-05}, {'diff': 3.8860999999997675e-05}, {'diff': 3.8736999999997024e-05}, {'diff': 3.9403000000000354e-05}, {'diff': 3.85980000000008e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:24.818" endtime="20201029 12:47:24.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:24.827" level="INFO">${ACCURACY} = {'diff': [3.8931000000002464e-05, 3.880599999999887e-05, 3.8860999999997675e-05, 3.8736999999997024e-05, 3.9403000000000354e-05, 3.85980000000008e-05, 3.894400000000256e-05, 3.9041000000000076e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:47:24.823" endtime="20201029 12:47:24.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.831" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 12:47:24.830" endtime="20201029 12:47:24.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.834" level="INFO">VALUE: [3.8931000000002464e-05, 3.880599999999887e-05, 3.8860999999997675e-05, 3.8736999999997024e-05, 3.9403000000000354e-05, 3.85980000000008e-05, 3.894400000000256e-05, 3.9041000000000076e-05, 3.888800000000081e-05, 3.954199999999658e-05, 3.901400000000041e-05, 3.8833000000002005e-05, 3.875000000000059e-05, 3.86659999999997e-05, 3.8652999999999604e-05, 3.950000000000134e-05, 3.9361000000001645e-05, 3.900000000000084e-05, 3.8611000000000895e-05, 3.895799999999866e-05, 3.8666999999999174e-05, 3.8861000000001145e-05, 3.852799999999948e-05, 3.9180999999999244e-05, 3.923600000000152e-05, 3.902799999999998e-05, 3.872200000000145e-05, 3.930599999999937e-05, 3.9082999999998785e-05, 3.858400000000123e-05, 3.848600000000077e-05, 3.920800000000238e-05, 3.8804999999999396e-05, 3.9459000000002104e-05, 3.873600000000102e-05, 3.922200000000195e-05, 3.870799999999841e-05, 3.945799999999916e-05, 3.870799999999841e-05, 3.923599999999805e-05, 3.869400000000231e-05, 3.875000000000059e-05, 3.8625000000000465e-05, 3.944399999999959e-05, 3.9332999999999035e-05, 3.9403000000000354e-05, 3.9416999999999924e-05, 3.905599999999912e-05, 3.948600000000177e-05, 3.8722999999997454e-05]</msg>
<status status="PASS" starttime="20201029 12:47:24.832" endtime="20201029 12:47:24.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.827" endtime="20201029 12:47:24.835"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:24.839" endtime="20201029 12:47:24.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.837" endtime="20201029 12:47:24.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.836" endtime="20201029 12:47:24.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.475" endtime="20201029 12:47:24.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.475" endtime="20201029 12:47:24.859"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.868" endtime="20201029 12:47:24.885"></status>
</kw>
<msg timestamp="20201029 12:47:24.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.866" endtime="20201029 12:47:24.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.887" endtime="20201029 12:47:24.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.889" endtime="20201029 12:47:24.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.864" endtime="20201029 12:47:24.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.862" endtime="20201029 12:47:24.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.898" endtime="20201029 12:47:25.202"></status>
</kw>
<msg timestamp="20201029 12:47:25.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019527389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019567556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.896" endtime="20201029 12:47:25.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019527389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019567556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.206" endtime="20201029 12:47:25.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.220" endtime="20201029 12:47:25.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.894" endtime="20201029 12:47:25.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.892" endtime="20201029 12:47:25.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:25.227" level="INFO">${RESULT} = [{'diff': 4.0167000000000674e-05}, {'diff': 4.019400000000034e-05}, {'diff': 4.0374999999998745e-05}, {'diff': 4.0417000000000924e-05}, {'diff': 3.9639000000001035e-05}, {'diff': 3.993000000000052e-05...</msg>
<status status="PASS" starttime="20201029 12:47:25.224" endtime="20201029 12:47:25.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:25.231" level="INFO">${ACCURACY} = {'diff': [4.0167000000000674e-05, 4.019400000000034e-05, 4.0374999999998745e-05, 4.0417000000000924e-05, 3.9639000000001035e-05, 3.993000000000052e-05, 4.015200000000163e-05, 4.044400000000059e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:47:25.228" endtime="20201029 12:47:25.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.236" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 12:47:25.235" endtime="20201029 12:47:25.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.238" level="INFO">VALUE: [4.0167000000000674e-05, 4.019400000000034e-05, 4.0374999999998745e-05, 4.0417000000000924e-05, 3.9639000000001035e-05, 3.993000000000052e-05, 4.015200000000163e-05, 4.044400000000059e-05, 3.965199999999766e-05, 3.9540999999997106e-05, 3.976400000000116e-05, 3.991599999999748e-05, 3.973600000000202e-05, 3.9818999999999966e-05, 4.0361000000002645e-05, 4.0458999999999634e-05, 3.9832999999999535e-05, 3.997199999999923e-05, 3.954200000000005e-05, 3.94859999999983e-05, 3.952800000000048e-05, 4.048600000000277e-05, 3.983399999999901e-05, 3.982000000000291e-05, 3.965199999999766e-05, 3.9916999999996955e-05, 4.0208999999999384e-05, 4.019400000000034e-05, 3.9791000000000826e-05, 4.01660000000012e-05, 4.0360999999999175e-05, 3.96660000000007e-05, 4.0041000000001076e-05, 3.9568999999999716e-05, 4.001399999999794e-05, 4.027799999999776e-05, 4.047199999999973e-05, 3.9903000000000854e-05, 3.9874999999998245e-05, 3.999999999999837e-05, 4.047199999999973e-05, 4.025000000000209e-05, 4.0403000000001354e-05, 3.9930999999999994e-05, 4.000000000000184e-05, 4.0167000000000674e-05, 4.030600000000037e-05, 4.0111000000002395e-05, 3.9917000000000424e-05, 4.047199999999973e-05]</msg>
<status status="PASS" starttime="20201029 12:47:25.237" endtime="20201029 12:47:25.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.232" endtime="20201029 12:47:25.240"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:25.243" endtime="20201029 12:47:25.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.242" endtime="20201029 12:47:25.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.240" endtime="20201029 12:47:25.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.860" endtime="20201029 12:47:25.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.860" endtime="20201029 12:47:25.264"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.272" endtime="20201029 12:47:25.293"></status>
</kw>
<msg timestamp="20201029 12:47:25.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.271" endtime="20201029 12:47:25.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.294" endtime="20201029 12:47:25.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.297" endtime="20201029 12:47:25.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.268" endtime="20201029 12:47:25.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.266" endtime="20201029 12:47:25.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.306" endtime="20201029 12:47:25.591"></status>
</kw>
<msg timestamp="20201029 12:47:25.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022591125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.304" endtime="20201029 12:47:25.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022591125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.595" endtime="20201029 12:47:25.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.604" endtime="20201029 12:47:25.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.302" endtime="20201029 12:47:25.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.300" endtime="20201029 12:47:25.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:25.610" level="INFO">${RESULT} = [{'diff': 4.104200000000155e-05}, {'diff': 4.1138999999999065e-05}, {'diff': 4.097200000000023e-05}, {'diff': 4.142999999999855e-05}, {'diff': 4.072199999999998e-05}, {'diff': 4.0610999999999425e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:25.607" endtime="20201029 12:47:25.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:25.614" level="INFO">${ACCURACY} = {'diff': [4.104200000000155e-05, 4.1138999999999065e-05, 4.097200000000023e-05, 4.142999999999855e-05, 4.072199999999998e-05, 4.0610999999999425e-05, 4.1333000000001036e-05, 4.0541000000001576e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:47:25.611" endtime="20201029 12:47:25.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.619" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 12:47:25.618" endtime="20201029 12:47:25.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.621" level="INFO">VALUE: [4.104200000000155e-05, 4.1138999999999065e-05, 4.097200000000023e-05, 4.142999999999855e-05, 4.072199999999998e-05, 4.0610999999999425e-05, 4.1333000000001036e-05, 4.0541000000001576e-05, 4.1040999999998606e-05, 4.099999999999937e-05, 4.0653000000001605e-05, 4.074999999999912e-05, 4.127799999999876e-05, 4.104200000000155e-05, 4.0833000000000536e-05, 4.0569000000000716e-05, 4.126400000000266e-05, 4.084800000000305e-05, 4.0860999999999675e-05, 4.1431000000001494e-05, 4.149999999999987e-05, 4.0653000000001605e-05, 4.1138999999999065e-05, 4.1416999999998455e-05, 4.126399999999919e-05, 4.0681000000000744e-05, 4.0931000000000994e-05, 4.0805000000001396e-05, 4.0987000000002743e-05, 4.0568999999997246e-05, 4.1290999999998856e-05, 4.049999999999887e-05, 4.0917000000001424e-05, 4.141599999999898e-05, 4.120800000000091e-05, 4.144399999999812e-05, 4.1124999999999495e-05, 4.072199999999998e-05, 4.1055000000001646e-05, 4.104200000000155e-05, 4.0972999999999704e-05, 4.0847000000000105e-05, 4.097200000000023e-05, 4.133400000000051e-05, 4.095800000000066e-05, 4.1402999999998885e-05, 4.09859999999998e-05, 4.080600000000087e-05, 4.1166999999998205e-05, 4.0860999999999675e-05]</msg>
<status status="PASS" starttime="20201029 12:47:25.620" endtime="20201029 12:47:25.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.615" endtime="20201029 12:47:25.623"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:25.627" endtime="20201029 12:47:25.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.625" endtime="20201029 12:47:25.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.624" endtime="20201029 12:47:25.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.265" endtime="20201029 12:47:25.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.264" endtime="20201029 12:47:25.648"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.656" endtime="20201029 12:47:25.674"></status>
</kw>
<msg timestamp="20201029 12:47:25.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.655" endtime="20201029 12:47:25.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:25.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.676" endtime="20201029 12:47:25.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.678" endtime="20201029 12:47:25.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.652" endtime="20201029 12:47:25.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.650" endtime="20201029 12:47:25.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.687" endtime="20201029 12:47:25.991"></status>
</kw>
<msg timestamp="20201029 12:47:25.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019413306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019455014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.686" endtime="20201029 12:47:25.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019413306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019455014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:25.995" endtime="20201029 12:47:26.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.003" endtime="20201029 12:47:26.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.683" endtime="20201029 12:47:26.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.681" endtime="20201029 12:47:26.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:26.010" level="INFO">${RESULT} = [{'diff': 4.170799999999794e-05}, {'diff': 4.226400000000019e-05}, {'diff': 4.229199999999933e-05}, {'diff': 4.251400000000044e-05}, {'diff': 4.154200000000205e-05}, {'diff': 4.202799999999951e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:26.007" endtime="20201029 12:47:26.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:26.015" level="INFO">${ACCURACY} = {'diff': [4.170799999999794e-05, 4.226400000000019e-05, 4.229199999999933e-05, 4.251400000000044e-05, 4.154200000000205e-05, 4.202799999999951e-05, 4.224999999999715e-05, 4.250000000000087e-05, 4.2264...</msg>
<status status="PASS" starttime="20201029 12:47:26.011" endtime="20201029 12:47:26.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.019" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 12:47:26.018" endtime="20201029 12:47:26.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.022" level="INFO">VALUE: [4.170799999999794e-05, 4.226400000000019e-05, 4.229199999999933e-05, 4.251400000000044e-05, 4.154200000000205e-05, 4.202799999999951e-05, 4.224999999999715e-05, 4.250000000000087e-05, 4.226400000000019e-05, 4.1790999999999356e-05, 4.223600000000105e-05, 4.175000000000012e-05, 4.223599999999758e-05, 4.2125000000000495e-05, 4.2360999999997706e-05, 4.1804999999998926e-05, 4.1875000000000245e-05, 4.2111000000000925e-05, 4.222200000000148e-05, 4.169400000000184e-05, 4.247199999999826e-05, 4.1611000000000425e-05, 4.2402999999999885e-05, 4.1695000000001314e-05, 4.2167000000002675e-05, 4.200000000000037e-05, 4.19860000000008e-05, 4.157000000000119e-05, 4.1818999999998496e-05, 4.1709000000000884e-05, 4.224999999999715e-05, 4.23059999999989e-05, 4.209800000000083e-05, 4.1723000000000454e-05, 4.1695000000001314e-05, 4.2472999999997735e-05, 4.1804999999998926e-05, 4.1624999999999995e-05, 4.19860000000008e-05, 4.2040999999999606e-05, 4.166599999999923e-05, 4.24999999999974e-05, 4.170800000000141e-05, 4.21799999999993e-05, 4.1694999999997845e-05, 4.155599999999815e-05, 4.1681000000001744e-05, 4.175000000000012e-05, 4.175000000000012e-05, 4.182000000000144e-05]</msg>
<status status="PASS" starttime="20201029 12:47:26.020" endtime="20201029 12:47:26.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.016" endtime="20201029 12:47:26.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:26.027" endtime="20201029 12:47:26.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.025" endtime="20201029 12:47:26.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.024" endtime="20201029 12:47:26.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.648" endtime="20201029 12:47:26.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.648" endtime="20201029 12:47:26.047"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.056" endtime="20201029 12:47:26.075"></status>
</kw>
<msg timestamp="20201029 12:47:26.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.054" endtime="20201029 12:47:26.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.076" endtime="20201029 12:47:26.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.078" endtime="20201029 12:47:26.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.052" endtime="20201029 12:47:26.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.050" endtime="20201029 12:47:26.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.087" endtime="20201029 12:47:26.375"></status>
</kw>
<msg timestamp="20201029 12:47:26.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019474931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019517458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.086" endtime="20201029 12:47:26.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019474931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019517458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.380" endtime="20201029 12:47:26.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.388" endtime="20201029 12:47:26.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.083" endtime="20201029 12:47:26.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.082" endtime="20201029 12:47:26.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:26.394" level="INFO">${RESULT} = [{'diff': 4.2527000000000537e-05}, {'diff': 4.291599999999701e-05}, {'diff': 4.3111000000001926e-05}, {'diff': 4.3055000000000176e-05}, {'diff': 4.319399999999987e-05}, {'diff': 4.33059999999999e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:26.391" endtime="20201029 12:47:26.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:26.398" level="INFO">${ACCURACY} = {'diff': [4.2527000000000537e-05, 4.291599999999701e-05, 4.3111000000001926e-05, 4.3055000000000176e-05, 4.319399999999987e-05, 4.33059999999999e-05, 4.2861000000001676e-05, 4.3139000000001065e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:47:26.395" endtime="20201029 12:47:26.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.403" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 12:47:26.402" endtime="20201029 12:47:26.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.405" level="INFO">VALUE: [4.2527000000000537e-05, 4.291599999999701e-05, 4.3111000000001926e-05, 4.3055000000000176e-05, 4.319399999999987e-05, 4.33059999999999e-05, 4.2861000000001676e-05, 4.3139000000001065e-05, 4.350000000000187e-05, 4.348599999999883e-05, 4.279199999999983e-05, 4.306999999999922e-05, 4.2861000000001676e-05, 4.3124999999998026e-05, 4.2916999999999955e-05, 4.265199999999719e-05, 4.26120000000009e-05, 4.351300000000197e-05, 4.284799999999811e-05, 4.34860000000023e-05, 4.3138999999997596e-05, 4.322200000000248e-05, 4.3041000000000607e-05, 4.322199999999901e-05, 4.294400000000309e-05, 4.2666999999999705e-05, 4.3041000000000607e-05, 4.2818999999999496e-05, 4.2583000000002286e-05, 4.348599999999883e-05, 4.3110999999998456e-05, 4.3416999999996986e-05, 4.2582999999998816e-05, 4.2653000000000135e-05, 4.252800000000001e-05, 4.255599999999915e-05, 4.2638999999997096e-05, 4.3167000000000205e-05, 4.28059999999994e-05, 4.308399999999879e-05, 4.3361000000002176e-05, 4.255600000000262e-05, 4.305599999999965e-05, 4.333399999999904e-05, 4.2930999999999525e-05, 4.341600000000098e-05, 4.2709000000001884e-05, 4.2611000000001426e-05, 4.2610999999997956e-05, 4.270799999999894e-05]</msg>
<status status="PASS" starttime="20201029 12:47:26.404" endtime="20201029 12:47:26.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.399" endtime="20201029 12:47:26.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:26.415" endtime="20201029 12:47:26.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.413" endtime="20201029 12:47:26.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.412" endtime="20201029 12:47:26.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.048" endtime="20201029 12:47:26.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.048" endtime="20201029 12:47:26.435"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.444" endtime="20201029 12:47:26.462"></status>
</kw>
<msg timestamp="20201029 12:47:26.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.442" endtime="20201029 12:47:26.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.464" endtime="20201029 12:47:26.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.466" endtime="20201029 12:47:26.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.440" endtime="20201029 12:47:26.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.438" endtime="20201029 12:47:26.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.475" endtime="20201029 12:47:26.779"></status>
</kw>
<msg timestamp="20201029 12:47:26.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020267139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020311139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.474" endtime="20201029 12:47:26.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020267139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020311139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.783" endtime="20201029 12:47:26.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.792" endtime="20201029 12:47:26.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.471" endtime="20201029 12:47:26.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.469" endtime="20201029 12:47:26.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:26.798" level="INFO">${RESULT} = [{'diff': 4.39999999999989e-05}, {'diff': 4.4555000000001677e-05}, {'diff': 4.373599999999908e-05}, {'diff': 4.379200000000083e-05}, {'diff': 4.372199999999951e-05}, {'diff': 4.379200000000083e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:26.795" endtime="20201029 12:47:26.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:26.802" level="INFO">${ACCURACY} = {'diff': [4.39999999999989e-05, 4.4555000000001677e-05, 4.373599999999908e-05, 4.379200000000083e-05, 4.372199999999951e-05, 4.379200000000083e-05, 4.4181000000000775e-05, 4.411199999999893e-05, 4.413...</msg>
<status status="PASS" starttime="20201029 12:47:26.799" endtime="20201029 12:47:26.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.807" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 12:47:26.806" endtime="20201029 12:47:26.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.809" level="INFO">VALUE: [4.39999999999989e-05, 4.4555000000001677e-05, 4.373599999999908e-05, 4.379200000000083e-05, 4.372199999999951e-05, 4.379200000000083e-05, 4.4181000000000775e-05, 4.411199999999893e-05, 4.4138999999998596e-05, 4.445800000000069e-05, 4.3638999999998096e-05, 4.4360999999999706e-05, 4.391600000000148e-05, 4.429100000000186e-05, 4.3875000000002246e-05, 4.427699999999882e-05, 4.373599999999908e-05, 4.4110999999999456e-05, 4.3819000000000496e-05, 4.4181000000000775e-05, 4.3903000000001385e-05, 4.380599999999693e-05, 4.427800000000176e-05, 4.405600000000065e-05, 4.373600000000255e-05, 4.39999999999989e-05, 4.397199999999976e-05, 4.430599999999743e-05, 4.426399999999872e-05, 4.370799999999994e-05, 4.4388999999998846e-05, 4.3582999999999816e-05, 4.405600000000065e-05, 4.377800000000126e-05, 4.4124999999999026e-05, 4.39860000000028e-05, 4.393000000000105e-05, 4.447200000000026e-05, 4.423599999999958e-05, 4.376399999999822e-05, 4.4360999999999706e-05, 4.390200000000191e-05, 4.404099999999814e-05, 4.3805000000000927e-05, 4.3847000000003106e-05, 4.424999999999915e-05, 4.4430999999997556e-05, 4.34999999999984e-05, 4.3624999999998526e-05, 4.3681000000000275e-05]</msg>
<status status="PASS" starttime="20201029 12:47:26.808" endtime="20201029 12:47:26.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.803" endtime="20201029 12:47:26.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:26.815" endtime="20201029 12:47:26.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.813" endtime="20201029 12:47:26.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.812" endtime="20201029 12:47:26.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.436" endtime="20201029 12:47:26.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.436" endtime="20201029 12:47:26.835"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.844" endtime="20201029 12:47:26.861"></status>
</kw>
<msg timestamp="20201029 12:47:26.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.842" endtime="20201029 12:47:26.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:26.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:26.863" endtime="20201029 12:47:26.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.865" endtime="20201029 12:47:26.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.840" endtime="20201029 12:47:26.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.838" endtime="20201029 12:47:26.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:26.874" endtime="20201029 12:47:27.161"></status>
</kw>
<msg timestamp="20201029 12:47:27.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019343625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019388347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:26.873" endtime="20201029 12:47:27.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019343625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019388347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.165" endtime="20201029 12:47:27.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.174" endtime="20201029 12:47:27.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.870" endtime="20201029 12:47:27.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.868" endtime="20201029 12:47:27.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:27.180" level="INFO">${RESULT} = [{'diff': 4.472200000000051e-05}, {'diff': 4.5375000000000276e-05}, {'diff': 4.4874999999999776e-05}, {'diff': 4.551399999999997e-05}, {'diff': 4.4847000000000636e-05}, {'diff': 4.5167000000002205e-05...</msg>
<status status="PASS" starttime="20201029 12:47:27.177" endtime="20201029 12:47:27.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:27.185" level="INFO">${ACCURACY} = {'diff': [4.472200000000051e-05, 4.5375000000000276e-05, 4.4874999999999776e-05, 4.551399999999997e-05, 4.4847000000000636e-05, 4.5167000000002205e-05, 4.4652999999998666e-05, 4.5375000000000276e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:27.181" endtime="20201029 12:47:27.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.190" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 12:47:27.189" endtime="20201029 12:47:27.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.192" level="INFO">VALUE: [4.472200000000051e-05, 4.5375000000000276e-05, 4.4874999999999776e-05, 4.551399999999997e-05, 4.4847000000000636e-05, 4.5167000000002205e-05, 4.4652999999998666e-05, 4.5375000000000276e-05, 4.506999999999775e-05, 4.4874999999999776e-05, 4.4695000000000845e-05, 4.5111000000000456e-05, 4.473600000000008e-05, 4.4945000000001095e-05, 4.53329999999981e-05, 4.5375000000000276e-05, 4.505500000000218e-05, 4.509800000000036e-05, 4.497200000000076e-05, 4.46800000000018e-05, 4.457000000000072e-05, 4.516600000000273e-05, 4.480499999999846e-05, 4.490200000000291e-05, 4.55000000000004e-05, 4.4916999999998486e-05, 4.5361000000000706e-05, 4.530499999999896e-05, 4.502799999999904e-05, 4.551399999999997e-05, 4.48060000000014e-05, 4.4639000000002566e-05, 4.527799999999929e-05, 4.55000000000004e-05, 4.506999999999775e-05, 4.473600000000008e-05, 4.536099999999724e-05, 4.5152999999999166e-05, 4.504200000000208e-05, 4.4624999999999526e-05, 4.505500000000218e-05, 4.4944999999997626e-05, 4.459799999999986e-05, 4.454200000000158e-05, 4.55000000000004e-05, 4.541599999999951e-05, 4.541599999999951e-05, 4.536099999999724e-05, 4.492999999999858e-05, 4.5416999999998986e-05]</msg>
<status status="PASS" starttime="20201029 12:47:27.191" endtime="20201029 12:47:27.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.186" endtime="20201029 12:47:27.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:27.197" endtime="20201029 12:47:27.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.196" endtime="20201029 12:47:27.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.194" endtime="20201029 12:47:27.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.836" endtime="20201029 12:47:27.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:26.836" endtime="20201029 12:47:27.218"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.226" endtime="20201029 12:47:27.248"></status>
</kw>
<msg timestamp="20201029 12:47:27.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.225" endtime="20201029 12:47:27.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.249" endtime="20201029 12:47:27.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.252" endtime="20201029 12:47:27.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.222" endtime="20201029 12:47:27.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.220" endtime="20201029 12:47:27.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.261" endtime="20201029 12:47:27.561"></status>
</kw>
<msg timestamp="20201029 12:47:27.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019628958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019675083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.260" endtime="20201029 12:47:27.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019628958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019675083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.565" endtime="20201029 12:47:27.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.574" endtime="20201029 12:47:27.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.257" endtime="20201029 12:47:27.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.255" endtime="20201029 12:47:27.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:27.580" level="INFO">${RESULT} = [{'diff': 4.6125000000001026e-05}, {'diff': 4.641599999999704e-05}, {'diff': 4.5597000000001386e-05}, {'diff': 4.561099999999749e-05}, {'diff': 4.577799999999979e-05}, {'diff': 4.647199999999879e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:27.577" endtime="20201029 12:47:27.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:27.584" level="INFO">${ACCURACY} = {'diff': [4.6125000000001026e-05, 4.641599999999704e-05, 4.5597000000001386e-05, 4.561099999999749e-05, 4.577799999999979e-05, 4.647199999999879e-05, 4.625000000000115e-05, 4.558299999999835e-05, 4.58...</msg>
<status status="PASS" starttime="20201029 12:47:27.581" endtime="20201029 12:47:27.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.588" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 12:47:27.587" endtime="20201029 12:47:27.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.591" level="INFO">VALUE: [4.6125000000001026e-05, 4.641599999999704e-05, 4.5597000000001386e-05, 4.561099999999749e-05, 4.577799999999979e-05, 4.647199999999879e-05, 4.625000000000115e-05, 4.558299999999835e-05, 4.5875000000000776e-05, 4.582000000000197e-05, 4.629099999999692e-05, 4.6111000000001456e-05, 4.63060000000029e-05, 4.587499999999731e-05, 4.65139999999975e-05, 4.6097000000001886e-05, 4.623600000000158e-05, 4.630599999999943e-05, 4.5680999999998806e-05, 4.584800000000111e-05, 4.565200000000019e-05, 4.5625000000000526e-05, 4.5847000000001636e-05, 4.552700000000007e-05, 4.552700000000007e-05, 4.572199999999804e-05, 4.6361000000001706e-05, 4.598600000000133e-05, 4.645800000000269e-05, 4.581899999999903e-05, 4.631899999999953e-05, 4.605600000000265e-05, 4.598599999999786e-05, 4.608299999999885e-05, 4.624999999999768e-05, 4.648600000000183e-05, 4.576400000000022e-05, 4.6194999999998876e-05, 4.60000000000009e-05, 4.5695000000001845e-05, 4.6237000000001055e-05, 4.6237000000001055e-05, 4.6431000000003025e-05, 4.595800000000219e-05, 4.5861000000001206e-05, 4.651400000000097e-05, 4.573599999999761e-05, 4.584699999999817e-05, 4.6125000000001026e-05, 4.567999999999933e-05]</msg>
<status status="PASS" starttime="20201029 12:47:27.590" endtime="20201029 12:47:27.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.585" endtime="20201029 12:47:27.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:27.596" endtime="20201029 12:47:27.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.594" endtime="20201029 12:47:27.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.593" endtime="20201029 12:47:27.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.219" endtime="20201029 12:47:27.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.218" endtime="20201029 12:47:27.617"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.625" endtime="20201029 12:47:27.644"></status>
</kw>
<msg timestamp="20201029 12:47:27.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.624" endtime="20201029 12:47:27.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:27.646" endtime="20201029 12:47:27.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.648" endtime="20201029 12:47:27.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.621" endtime="20201029 12:47:27.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.619" endtime="20201029 12:47:27.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.657" endtime="20201029 12:47:27.944"></status>
</kw>
<msg timestamp="20201029 12:47:27.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020391972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020438639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.656" endtime="20201029 12:47:27.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020391972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020438639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:27.948" endtime="20201029 12:47:27.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:27.956" endtime="20201029 12:47:27.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.653" endtime="20201029 12:47:27.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.651" endtime="20201029 12:47:27.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:27.963" level="INFO">${RESULT} = [{'diff': 4.6667000000000236e-05}, {'diff': 4.7430999999997087e-05}, {'diff': 4.679100000000089e-05}, {'diff': 4.684799999999864e-05}, {'diff': 4.7431000000000556e-05}, {'diff': 4.701400000000147e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:27.960" endtime="20201029 12:47:27.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:27.967" level="INFO">${ACCURACY} = {'diff': [4.6667000000000236e-05, 4.7430999999997087e-05, 4.679100000000089e-05, 4.684799999999864e-05, 4.7431000000000556e-05, 4.701400000000147e-05, 4.7403000000001416e-05, 4.691600000000101e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:47:27.964" endtime="20201029 12:47:27.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.971" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 12:47:27.970" endtime="20201029 12:47:27.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:27.974" level="INFO">VALUE: [4.6667000000000236e-05, 4.7430999999997087e-05, 4.679100000000089e-05, 4.684799999999864e-05, 4.7431000000000556e-05, 4.701400000000147e-05, 4.7403000000001416e-05, 4.691600000000101e-05, 4.737499999999881e-05, 4.742999999999761e-05, 4.690199999999797e-05, 4.743000000000108e-05, 4.656899999999978e-05, 4.7125000000002026e-05, 4.745800000000022e-05, 4.749999999999893e-05, 4.66939999999999e-05, 4.6875000000001776e-05, 4.73330000000001e-05, 4.7417000000000986e-05, 4.71529999999977e-05, 4.747199999999979e-05, 4.670799999999947e-05, 4.709699999999942e-05, 4.697200000000276e-05, 4.7431000000000556e-05, 4.723599999999911e-05, 4.6917000000000486e-05, 4.732e-05, 4.6889000000001346e-05, 4.705600000000018e-05, 4.687499999999831e-05, 4.748599999999936e-05, 4.698599999999886e-05, 4.73330000000001e-05, 4.736099999999924e-05, 4.655500000000021e-05, 4.7139000000001596e-05, 4.751400000000197e-05, 4.688899999999788e-05, 4.6917000000000486e-05, 4.65139999999975e-05, 4.7125000000002026e-05, 4.734699999999967e-05, 4.677799999999732e-05, 4.68199999999995e-05, 4.652800000000054e-05, 4.681900000000003e-05, 4.652800000000054e-05, 4.6931000000000056e-05]</msg>
<status status="PASS" starttime="20201029 12:47:27.973" endtime="20201029 12:47:27.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.968" endtime="20201029 12:47:27.976"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:27.980" endtime="20201029 12:47:27.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.978" endtime="20201029 12:47:28.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.977" endtime="20201029 12:47:28.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.618" endtime="20201029 12:47:28.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:27.617" endtime="20201029 12:47:28.000"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.009" endtime="20201029 12:47:28.027"></status>
</kw>
<msg timestamp="20201029 12:47:28.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.008" endtime="20201029 12:47:28.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.028" endtime="20201029 12:47:28.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.031" endtime="20201029 12:47:28.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.005" endtime="20201029 12:47:28.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.003" endtime="20201029 12:47:28.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.040" endtime="20201029 12:47:28.325"></status>
</kw>
<msg timestamp="20201029 12:47:28.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019609486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019657889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.038" endtime="20201029 12:47:28.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019609486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019657889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.329" endtime="20201029 12:47:28.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.337" endtime="20201029 12:47:28.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.036" endtime="20201029 12:47:28.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.034" endtime="20201029 12:47:28.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:28.344" level="INFO">${RESULT} = [{'diff': 4.8403000000002416e-05}, {'diff': 4.780500000000146e-05}, {'diff': 4.797200000000029e-05}, {'diff': 4.820800000000097e-05}, {'diff': 4.8403000000002416e-05}, {'diff': 4.784700000000017e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:28.341" endtime="20201029 12:47:28.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:28.349" level="INFO">${ACCURACY} = {'diff': [4.8403000000002416e-05, 4.780500000000146e-05, 4.797200000000029e-05, 4.820800000000097e-05, 4.8403000000002416e-05, 4.784700000000017e-05, 4.774999999999918e-05, 4.776400000000222e-05, 4.81...</msg>
<status status="PASS" starttime="20201029 12:47:28.345" endtime="20201029 12:47:28.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.353" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 12:47:28.352" endtime="20201029 12:47:28.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.356" level="INFO">VALUE: [4.8403000000002416e-05, 4.780500000000146e-05, 4.797200000000029e-05, 4.820800000000097e-05, 4.8403000000002416e-05, 4.784700000000017e-05, 4.774999999999918e-05, 4.776400000000222e-05, 4.811099999999999e-05, 4.8195000000000876e-05, 4.780599999999746e-05, 4.809700000000042e-05, 4.780499999999799e-05, 4.8181000000001306e-05, 4.798599999999986e-05, 4.774999999999918e-05, 4.811200000000293e-05, 4.826299999999978e-05, 4.7653000000001666e-05, 4.809700000000042e-05, 4.802700000000257e-05, 4.820800000000097e-05, 4.811099999999999e-05, 4.7875000000002776e-05, 4.819399999999793e-05, 4.818099999999784e-05, 4.848600000000036e-05, 4.799999999999943e-05, 4.807000000000075e-05, 4.8013999999999e-05, 4.78200000000005e-05, 4.798599999999986e-05, 4.8167000000001736e-05, 4.777799999999832e-05, 4.752799999999807e-05, 4.8181000000001306e-05, 4.816699999999827e-05, 4.798599999999986e-05, 4.780600000000093e-05, 4.7667000000001236e-05, 4.809700000000042e-05, 4.784799999999964e-05, 4.754100000000164e-05, 4.762499999999906e-05, 4.815199999999922e-05, 4.804100000000214e-05, 4.790199999999897e-05, 4.755499999999774e-05, 4.829100000000239e-05, 4.816599999999879e-05]</msg>
<status status="PASS" starttime="20201029 12:47:28.354" endtime="20201029 12:47:28.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.350" endtime="20201029 12:47:28.357"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:28.360" endtime="20201029 12:47:28.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.359" endtime="20201029 12:47:28.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.358" endtime="20201029 12:47:28.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.001" endtime="20201029 12:47:28.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.001" endtime="20201029 12:47:28.381"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.390" endtime="20201029 12:47:28.408"></status>
</kw>
<msg timestamp="20201029 12:47:28.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.388" endtime="20201029 12:47:28.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.410" endtime="20201029 12:47:28.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.412" endtime="20201029 12:47:28.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.386" endtime="20201029 12:47:28.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.383" endtime="20201029 12:47:28.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.421" endtime="20201029 12:47:28.709"></status>
</kw>
<msg timestamp="20201029 12:47:28.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019456208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019505528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.420" endtime="20201029 12:47:28.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019456208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019505528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:28.713" endtime="20201029 12:47:28.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.721" endtime="20201029 12:47:28.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.418" endtime="20201029 12:47:28.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.416" endtime="20201029 12:47:28.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:28.728" level="INFO">${RESULT} = [{'diff': 4.9320000000002e-05}, {'diff': 4.909700000000142e-05}, {'diff': 4.894499999999816e-05}, {'diff': 4.929199999999939e-05}, {'diff': 4.920800000000197e-05}, {'diff': 4.852799999999907e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:28.724" endtime="20201029 12:47:28.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:28.732" level="INFO">${ACCURACY} = {'diff': [4.9320000000002e-05, 4.909700000000142e-05, 4.894499999999816e-05, 4.929199999999939e-05, 4.920800000000197e-05, 4.852799999999907e-05, 4.905599999999871e-05, 4.930500000000296e-05, 4.923600...</msg>
<status status="PASS" starttime="20201029 12:47:28.729" endtime="20201029 12:47:28.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.736" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 12:47:28.735" endtime="20201029 12:47:28.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.738" level="INFO">VALUE: [4.9320000000002e-05, 4.909700000000142e-05, 4.894499999999816e-05, 4.929199999999939e-05, 4.920800000000197e-05, 4.852799999999907e-05, 4.905599999999871e-05, 4.930500000000296e-05, 4.923600000000111e-05, 4.886100000000074e-05, 4.911099999999752e-05, 4.877699999999985e-05, 4.9014e-05, 4.879099999999942e-05, 4.880599999999846e-05, 4.925000000000068e-05, 4.941699999999952e-05, 4.886100000000074e-05, 4.947200000000179e-05, 4.905599999999871e-05, 4.879199999999889e-05, 4.855600000000168e-05, 4.9195000000001876e-05, 4.893099999999859e-05, 4.9223000000001016e-05, 4.886099999999727e-05, 4.900000000000043e-05, 4.905599999999871e-05, 4.923600000000111e-05, 4.879199999999889e-05, 4.875000000000018e-05, 4.859799999999692e-05, 4.942999999999961e-05, 4.934700000000167e-05, 4.898599999999739e-05, 4.923599999999764e-05, 4.870800000000147e-05, 4.950000000000093e-05, 4.893000000000258e-05, 4.912500000000056e-05, 4.859699999999745e-05, 4.923600000000111e-05, 4.861099999999702e-05, 4.937499999999734e-05, 4.875000000000018e-05, 4.859699999999745e-05, 4.879200000000236e-05, 4.906899999999881e-05, 4.8945000000001626e-05, 4.898600000000086e-05]</msg>
<status status="PASS" starttime="20201029 12:47:28.737" endtime="20201029 12:47:28.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.732" endtime="20201029 12:47:28.740"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:28.743" endtime="20201029 12:47:28.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.742" endtime="20201029 12:47:28.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.741" endtime="20201029 12:47:28.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.382" endtime="20201029 12:47:28.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.381" endtime="20201029 12:47:28.764"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.772" endtime="20201029 12:47:28.794"></status>
</kw>
<msg timestamp="20201029 12:47:28.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.771" endtime="20201029 12:47:28.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.795" endtime="20201029 12:47:28.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.798" endtime="20201029 12:47:28.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.768" endtime="20201029 12:47:28.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.766" endtime="20201029 12:47:28.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.807" endtime="20201029 12:47:29.092"></status>
</kw>
<msg timestamp="20201029 12:47:29.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02273725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022786819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:28.805" endtime="20201029 12:47:29.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02273725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022786819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:29.096" endtime="20201029 12:47:29.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.104" endtime="20201029 12:47:29.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.803" endtime="20201029 12:47:29.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.801" endtime="20201029 12:47:29.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:29.111" level="INFO">${RESULT} = [{'diff': 4.956899999999931e-05}, {'diff': 4.962500000000106e-05}, {'diff': 4.977700000000085e-05}, {'diff': 5.009699999999895e-05}, {'diff': 5.0014000000001e-05}, {'diff': 5.029099999999745e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:29.108" endtime="20201029 12:47:29.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:29.115" level="INFO">${ACCURACY} = {'diff': [4.956899999999931e-05, 4.962500000000106e-05, 4.977700000000085e-05, 5.009699999999895e-05, 5.0014000000001e-05, 5.029099999999745e-05, 5.05140000000015e-05, 5.018000000000036e-05, 4.9874999...</msg>
<status status="PASS" starttime="20201029 12:47:29.112" endtime="20201029 12:47:29.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.119" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 12:47:29.118" endtime="20201029 12:47:29.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.122" level="INFO">VALUE: [4.956899999999931e-05, 4.962500000000106e-05, 4.977700000000085e-05, 5.009699999999895e-05, 5.0014000000001e-05, 5.029099999999745e-05, 5.05140000000015e-05, 5.018000000000036e-05, 4.987499999999784e-05, 5.016700000000027e-05, 4.972199999999857e-05, 4.991700000000002e-05, 5.043000000000061e-05, 5.03469999999992e-05, 5.008299999999938e-05, 4.972200000000204e-05, 5.029200000000039e-05, 4.956999999999878e-05, 5.029199999999692e-05, 4.959699999999845e-05, 5.025000000000168e-05, 5.006999999999928e-05, 5.040300000000095e-05, 5.005499999999677e-05, 5.037500000000181e-05, 5.016600000000079e-05, 4.990200000000097e-05, 4.998599999999839e-05, 4.973600000000161e-05, 4.963900000000063e-05, 4.990299999999698e-05, 5.012500000000156e-05, 5.041699999999705e-05, 5.016700000000027e-05, 5.029200000000039e-05, 5.030599999999996e-05, 5.049999999999846e-05, 5.023599999999864e-05, 5.016700000000027e-05, 4.955599999999921e-05, 5.006999999999928e-05, 5.018099999999984e-05, 5.0387999999998434e-05, 4.955599999999921e-05, 5.049999999999846e-05, 4.995899999999873e-05, 4.975000000000118e-05, 4.9888000000001403e-05, 4.956899999999931e-05, 5.026399999999778e-05]</msg>
<status status="PASS" starttime="20201029 12:47:29.120" endtime="20201029 12:47:29.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.116" endtime="20201029 12:47:29.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:29.127" endtime="20201029 12:47:29.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.126" endtime="20201029 12:47:29.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.125" endtime="20201029 12:47:29.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.765" endtime="20201029 12:47:29.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.764" endtime="20201029 12:47:29.148"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.157" endtime="20201029 12:47:29.175"></status>
</kw>
<msg timestamp="20201029 12:47:29.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.155" endtime="20201029 12:47:29.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.177" endtime="20201029 12:47:29.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.179" endtime="20201029 12:47:29.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.152" endtime="20201029 12:47:29.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.150" endtime="20201029 12:47:29.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.188" endtime="20201029 12:47:29.474"></status>
</kw>
<msg timestamp="20201029 12:47:29.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019462569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019513611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.187" endtime="20201029 12:47:29.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019462569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019513611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.479" endtime="20201029 12:47:29.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.487" endtime="20201029 12:47:29.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.184" endtime="20201029 12:47:29.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.182" endtime="20201029 12:47:29.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:29.493" level="INFO">${RESULT} = [{'diff': 5.104200000000114e-05}, {'diff': 5.072199999999957e-05}, {'diff': 5.073599999999914e-05}, {'diff': 5.06669999999973e-05}, {'diff': 5.087499999999884e-05}, {'diff': 5.055600000000021e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:29.490" endtime="20201029 12:47:29.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:29.498" level="INFO">${ACCURACY} = {'diff': [5.104200000000114e-05, 5.072199999999957e-05, 5.073599999999914e-05, 5.06669999999973e-05, 5.087499999999884e-05, 5.055600000000021e-05, 5.144500000000066e-05, 5.094500000000016e-05, 5.11810...</msg>
<status status="PASS" starttime="20201029 12:47:29.494" endtime="20201029 12:47:29.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.502" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 12:47:29.501" endtime="20201029 12:47:29.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.505" level="INFO">VALUE: [5.104200000000114e-05, 5.072199999999957e-05, 5.073599999999914e-05, 5.06669999999973e-05, 5.087499999999884e-05, 5.055600000000021e-05, 5.144500000000066e-05, 5.094500000000016e-05, 5.118100000000084e-05, 5.133300000000063e-05, 5.152699999999913e-05, 5.106899999999734e-05, 5.14729999999998e-05, 5.086200000000221e-05, 5.061199999999849e-05, 5.066700000000077e-05, 5.1415999999998574e-05, 5.055500000000074e-05, 5.055500000000074e-05, 5.144400000000118e-05, 5.072199999999957e-05, 5.106900000000081e-05, 5.06530000000012e-05, 5.076399999999828e-05, 5.06669999999973e-05, 5.056900000000031e-05, 5.076400000000175e-05, 5.093100000000059e-05, 5.140299999999848e-05, 5.066700000000077e-05, 5.056999999999978e-05, 5.097199999999982e-05, 5.109699999999995e-05, 5.1401999999999004e-05, 5.124999999999921e-05, 5.073599999999914e-05, 5.0987000000002336e-05, 5.143100000000109e-05, 5.075000000000218e-05, 5.099999999999896e-05, 5.123599999999964e-05, 5.086099999999927e-05, 5.077799999999785e-05, 5.126400000000225e-05, 5.105499999999777e-05, 5.068000000000086e-05, 5.098599999999939e-05, 5.052800000000107e-05, 5.091700000000102e-05, 5.086099999999927e-05]</msg>
<status status="PASS" starttime="20201029 12:47:29.504" endtime="20201029 12:47:29.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.499" endtime="20201029 12:47:29.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:29.510" endtime="20201029 12:47:29.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.508" endtime="20201029 12:47:29.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.507" endtime="20201029 12:47:29.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.149" endtime="20201029 12:47:29.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.148" endtime="20201029 12:47:29.530"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.539" endtime="20201029 12:47:29.558"></status>
</kw>
<msg timestamp="20201029 12:47:29.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.537" endtime="20201029 12:47:29.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.559" endtime="20201029 12:47:29.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.562" endtime="20201029 12:47:29.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.535" endtime="20201029 12:47:29.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.533" endtime="20201029 12:47:29.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.571" endtime="20201029 12:47:29.858"></status>
</kw>
<msg timestamp="20201029 12:47:29.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019505542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019557278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.569" endtime="20201029 12:47:29.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019505542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019557278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.862" endtime="20201029 12:47:29.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.870" endtime="20201029 12:47:29.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.567" endtime="20201029 12:47:29.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.565" endtime="20201029 12:47:29.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:29.877" level="INFO">${RESULT} = [{'diff': 5.173600000000014e-05}, {'diff': 5.15140000000025e-05}, {'diff': 5.152800000000207e-05}, {'diff': 5.163900000000263e-05}, {'diff': 5.162499999999959e-05}, {'diff': 5.154200000000164e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:29.873" endtime="20201029 12:47:29.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:29.881" level="INFO">${ACCURACY} = {'diff': [5.173600000000014e-05, 5.15140000000025e-05, 5.152800000000207e-05, 5.163900000000263e-05, 5.162499999999959e-05, 5.154200000000164e-05, 5.184800000000017e-05, 5.215299999999923e-05, 5.20689...</msg>
<status status="PASS" starttime="20201029 12:47:29.877" endtime="20201029 12:47:29.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.885" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 12:47:29.884" endtime="20201029 12:47:29.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.887" level="INFO">VALUE: [5.173600000000014e-05, 5.15140000000025e-05, 5.152800000000207e-05, 5.163900000000263e-05, 5.162499999999959e-05, 5.154200000000164e-05, 5.184800000000017e-05, 5.215299999999923e-05, 5.206899999999834e-05, 5.180499999999852e-05, 5.1915999999999074e-05, 5.2429999999999144e-05, 5.166700000000177e-05, 5.229199999999892e-05, 5.155500000000174e-05, 5.18470000000007e-05, 5.194500000000116e-05, 5.199999999999996e-05, 5.205600000000171e-05, 5.238899999999991e-05, 5.179200000000189e-05, 5.218099999999837e-05, 5.240299999999948e-05, 5.248600000000089e-05, 5.251400000000003e-05, 5.231999999999806e-05, 5.2221999999997604e-05, 5.230600000000196e-05, 5.211100000000052e-05, 5.250000000000046e-05, 5.187499999999984e-05, 5.1915999999999074e-05, 5.248600000000089e-05, 5.181900000000156e-05, 5.174999999999971e-05, 5.172200000000057e-05, 5.176399999999928e-05, 5.155600000000121e-05, 5.159699999999698e-05, 5.154200000000164e-05, 5.225000000000021e-05, 5.229199999999892e-05, 5.181999999999756e-05, 5.226399999999978e-05, 5.237500000000034e-05, 5.215299999999923e-05, 5.173600000000014e-05, 5.219500000000141e-05, 5.187499999999984e-05, 5.155599999999774e-05]</msg>
<status status="PASS" starttime="20201029 12:47:29.886" endtime="20201029 12:47:29.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.881" endtime="20201029 12:47:29.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:29.892" endtime="20201029 12:47:29.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.891" endtime="20201029 12:47:29.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.890" endtime="20201029 12:47:29.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.531" endtime="20201029 12:47:29.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.531" endtime="20201029 12:47:29.913"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.921" endtime="20201029 12:47:29.941"></status>
</kw>
<msg timestamp="20201029 12:47:29.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.920" endtime="20201029 12:47:29.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:29.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:29.942" endtime="20201029 12:47:29.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.945" endtime="20201029 12:47:29.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.917" endtime="20201029 12:47:29.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.915" endtime="20201029 12:47:29.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:29.954" endtime="20201029 12:47:30.240"></status>
</kw>
<msg timestamp="20201029 12:47:30.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020274736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:29.952" endtime="20201029 12:47:30.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020274736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.244" endtime="20201029 12:47:30.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.252" endtime="20201029 12:47:30.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.950" endtime="20201029 12:47:30.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.948" endtime="20201029 12:47:30.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:30.258" level="INFO">${RESULT} = [{'diff': 5.3277999999996883e-05}, {'diff': 5.331999999999906e-05}, {'diff': 5.251400000000003e-05}, {'diff': 5.287500000000084e-05}, {'diff': 5.31669999999998e-05}, {'diff': 5.281999999999856e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:30.255" endtime="20201029 12:47:30.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:30.263" level="INFO">${ACCURACY} = {'diff': [5.3277999999996883e-05, 5.331999999999906e-05, 5.251400000000003e-05, 5.287500000000084e-05, 5.31669999999998e-05, 5.281999999999856e-05, 5.341700000000005e-05, 5.28609999999978e-05, 5.29160...</msg>
<status status="PASS" starttime="20201029 12:47:30.259" endtime="20201029 12:47:30.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.267" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 12:47:30.266" endtime="20201029 12:47:30.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.269" level="INFO">VALUE: [5.3277999999996883e-05, 5.331999999999906e-05, 5.251400000000003e-05, 5.287500000000084e-05, 5.31669999999998e-05, 5.281999999999856e-05, 5.341700000000005e-05, 5.28609999999978e-05, 5.2916000000000074e-05, 5.3471999999998854e-05, 5.3485999999998424e-05, 5.28609999999978e-05, 5.298600000000139e-05, 5.28470000000017e-05, 5.338900000000091e-05, 5.28609999999978e-05, 5.336100000000177e-05, 5.305499999999977e-05, 5.268100000000234e-05, 5.345900000000223e-05, 5.290299999999998e-05, 5.286100000000127e-05, 5.323600000000164e-05, 5.320900000000198e-05, 5.313899999999719e-05, 5.2999999999997494e-05, 5.31669999999998e-05, 5.350000000000146e-05, 5.26669999999993e-05, 5.3443999999999714e-05, 5.305499999999977e-05, 5.280500000000299e-05, 5.280499999999952e-05, 5.265299999999973e-05, 5.331900000000306e-05, 5.273600000000114e-05, 5.279199999999942e-05, 5.322200000000207e-05, 5.280499999999952e-05, 5.318100000000284e-05, 5.2999999999997494e-05, 5.281999999999856e-05, 5.25279999999996e-05, 5.311100000000152e-05, 5.345899999999876e-05, 5.313900000000066e-05, 5.331999999999906e-05, 5.336100000000177e-05, 5.304199999999967e-05, 5.3193999999999464e-05]</msg>
<status status="PASS" starttime="20201029 12:47:30.268" endtime="20201029 12:47:30.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.263" endtime="20201029 12:47:30.272"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:30.275" endtime="20201029 12:47:30.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.274" endtime="20201029 12:47:30.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.273" endtime="20201029 12:47:30.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.914" endtime="20201029 12:47:30.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:29.913" endtime="20201029 12:47:30.296"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.304" endtime="20201029 12:47:30.324"></status>
</kw>
<msg timestamp="20201029 12:47:30.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.303" endtime="20201029 12:47:30.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.325" endtime="20201029 12:47:30.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.328" endtime="20201029 12:47:30.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.300" endtime="20201029 12:47:30.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.298" endtime="20201029 12:47:30.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.337" endtime="20201029 12:47:30.623"></status>
</kw>
<msg timestamp="20201029 12:47:30.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019437931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019491597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.335" endtime="20201029 12:47:30.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019437931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019491597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:30.627" endtime="20201029 12:47:30.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.635" endtime="20201029 12:47:30.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.332" endtime="20201029 12:47:30.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.331" endtime="20201029 12:47:30.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:30.641" level="INFO">${RESULT} = [{'diff': 5.3666000000000824e-05}, {'diff': 5.4235999999999174e-05}, {'diff': 5.35419999999967e-05}, {'diff': 5.422299999999908e-05}, {'diff': 5.3930000000000644e-05}, {'diff': 5.409699999999948e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:30.638" endtime="20201029 12:47:30.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:30.646" level="INFO">${ACCURACY} = {'diff': [5.3666000000000824e-05, 5.4235999999999174e-05, 5.35419999999967e-05, 5.422299999999908e-05, 5.3930000000000644e-05, 5.409699999999948e-05, 5.43609999999993e-05, 5.4194000000000464e-05, 5.37...</msg>
<status status="PASS" starttime="20201029 12:47:30.642" endtime="20201029 12:47:30.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.651" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 12:47:30.650" endtime="20201029 12:47:30.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.653" level="INFO">VALUE: [5.3666000000000824e-05, 5.4235999999999174e-05, 5.35419999999967e-05, 5.422299999999908e-05, 5.3930000000000644e-05, 5.409699999999948e-05, 5.43609999999993e-05, 5.4194000000000464e-05, 5.3721999999999104e-05, 5.437499999999887e-05, 5.3971999999999354e-05, 5.412499999999862e-05, 5.4180000000000894e-05, 5.4443999999997245e-05, 5.365300000000073e-05, 5.380500000000052e-05, 5.433300000000016e-05, 5.441700000000105e-05, 5.4471999999999854e-05, 5.361099999999855e-05, 5.355599999999974e-05, 5.365300000000073e-05, 5.438899999999844e-05, 5.3902000000001504e-05, 5.398700000000187e-05, 5.384699999999923e-05, 5.379200000000042e-05, 5.411099999999905e-05, 5.4471999999999854e-05, 5.4444000000000714e-05, 5.361100000000202e-05, 5.402700000000163e-05, 5.391700000000055e-05, 5.429100000000145e-05, 5.354200000000017e-05, 5.363899999999769e-05, 5.358299999999941e-05, 5.394500000000316e-05, 5.429200000000092e-05, 5.368099999999987e-05, 5.380599999999999e-05, 5.3527999999997133e-05, 5.456899999999737e-05, 5.369499999999944e-05, 5.373700000000162e-05, 5.413900000000166e-05, 5.4180000000000894e-05, 5.400000000000196e-05, 5.438900000000191e-05, 5.355500000000027e-05]</msg>
<status status="PASS" starttime="20201029 12:47:30.652" endtime="20201029 12:47:30.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.647" endtime="20201029 12:47:30.655"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:30.658" endtime="20201029 12:47:30.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.657" endtime="20201029 12:47:30.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.656" endtime="20201029 12:47:30.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.297" endtime="20201029 12:47:30.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.296" endtime="20201029 12:47:30.679"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.687" endtime="20201029 12:47:30.706"></status>
</kw>
<msg timestamp="20201029 12:47:30.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.686" endtime="20201029 12:47:30.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:30.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:30.708" endtime="20201029 12:47:30.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.710" endtime="20201029 12:47:30.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.683" endtime="20201029 12:47:30.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.681" endtime="20201029 12:47:30.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:30.719" endtime="20201029 12:47:31.006"></status>
</kw>
<msg timestamp="20201029 12:47:31.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019388792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019444, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:30.718" endtime="20201029 12:47:31.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019388792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019444, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:47:31.010" endtime="20201029 12:47:31.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.018" endtime="20201029 12:47:31.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.715" endtime="20201029 12:47:31.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.713" endtime="20201029 12:47:31.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:31.025" level="INFO">${RESULT} = [{'diff': 5.5208000000001034e-05}, {'diff': 5.512499999999962e-05}, {'diff': 5.541699999999858e-05}, {'diff': 5.526299999999984e-05}, {'diff': 5.533400000000063e-05}, {'diff': 5.537499999999987e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:31.021" endtime="20201029 12:47:31.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:31.029" level="INFO">${ACCURACY} = {'diff': [5.5208000000001034e-05, 5.512499999999962e-05, 5.541699999999858e-05, 5.526299999999984e-05, 5.533400000000063e-05, 5.537499999999987e-05, 5.511100000000005e-05, 5.4541999999997703e-05, 5.45...</msg>
<status status="PASS" starttime="20201029 12:47:31.026" endtime="20201029 12:47:31.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.033" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 12:47:31.032" endtime="20201029 12:47:31.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.036" level="INFO">VALUE: [5.5208000000001034e-05, 5.512499999999962e-05, 5.541699999999858e-05, 5.526299999999984e-05, 5.533400000000063e-05, 5.537499999999987e-05, 5.511100000000005e-05, 5.4541999999997703e-05, 5.455599999999727e-05, 5.461200000000249e-05, 5.4637999999999215e-05, 5.531900000000159e-05, 5.527699999999941e-05, 5.5222000000000604e-05, 5.4972000000000354e-05, 5.4513999999998564e-05, 5.487499999999937e-05, 5.4985999999999924e-05, 5.505600000000124e-05, 5.459699999999998e-05, 5.551400000000303e-05, 5.4749999999999244e-05, 5.5236000000000174e-05, 5.508300000000091e-05, 5.4749999999999244e-05, 5.479200000000142e-05, 5.505600000000124e-05, 5.497299999999983e-05, 5.5137999999999715e-05, 5.5277999999998884e-05, 5.4638000000002684e-05, 5.480500000000152e-05, 5.4957999999997315e-05, 5.487499999999937e-05, 5.487500000000284e-05, 5.461100000000302e-05, 5.483300000000066e-05, 5.4985999999999924e-05, 5.4985999999999924e-05, 5.4985999999999924e-05, 5.468100000000087e-05, 5.463900000000216e-05, 5.504200000000167e-05, 5.451400000000203e-05, 5.494500000000069e-05, 5.4708000000000534e-05, 5.4791999999997953e-05, 5.480500000000152e-05, 5.458399999999988e-05, 5.501299999999959e-05]</msg>
<status status="PASS" starttime="20201029 12:47:31.034" endtime="20201029 12:47:31.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.029" endtime="20201029 12:47:31.037"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:31.040" endtime="20201029 12:47:31.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.039" endtime="20201029 12:47:31.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.038" endtime="20201029 12:47:31.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.680" endtime="20201029 12:47:31.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:30.679" endtime="20201029 12:47:31.061"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.069" endtime="20201029 12:47:31.091"></status>
</kw>
<msg timestamp="20201029 12:47:31.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.068" endtime="20201029 12:47:31.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.092" endtime="20201029 12:47:31.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.095" endtime="20201029 12:47:31.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.066" endtime="20201029 12:47:31.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.063" endtime="20201029 12:47:31.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.103" endtime="20201029 12:47:31.395"></status>
</kw>
<msg timestamp="20201029 12:47:31.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020177458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.102" endtime="20201029 12:47:31.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020177458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.399" endtime="20201029 12:47:31.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.407" endtime="20201029 12:47:31.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.099" endtime="20201029 12:47:31.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.098" endtime="20201029 12:47:31.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:31.414" level="INFO">${RESULT} = [{'diff': 5.6236000000001174e-05}, {'diff': 5.591699999999908e-05}, {'diff': 5.5972000000001354e-05}, {'diff': 5.6165999999999855e-05}, {'diff': 5.6416000000000105e-05}, {'diff': 5.5957999999998315e-0...</msg>
<status status="PASS" starttime="20201029 12:47:31.411" endtime="20201029 12:47:31.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:31.418" level="INFO">${ACCURACY} = {'diff': [5.6236000000001174e-05, 5.591699999999908e-05, 5.5972000000001354e-05, 5.6165999999999855e-05, 5.6416000000000105e-05, 5.5957999999998315e-05, 5.602700000000016e-05, 5.562500000000012e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:47:31.415" endtime="20201029 12:47:31.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.422" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 12:47:31.421" endtime="20201029 12:47:31.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.425" level="INFO">VALUE: [5.6236000000001174e-05, 5.591699999999908e-05, 5.5972000000001354e-05, 5.6165999999999855e-05, 5.6416000000000105e-05, 5.5957999999998315e-05, 5.602700000000016e-05, 5.562500000000012e-05, 5.6305999999999023e-05, 5.588899999999994e-05, 5.5736000000000674e-05, 5.608300000000191e-05, 5.591699999999908e-05, 5.582000000000156e-05, 5.6486000000001424e-05, 5.557000000000131e-05, 5.562500000000012e-05, 5.593100000000212e-05, 5.6291999999999454e-05, 5.6000000000000494e-05, 5.590299999999951e-05, 5.580500000000252e-05, 5.562500000000012e-05, 5.6235999999997704e-05, 5.580499999999905e-05, 5.584700000000123e-05, 5.6179999999999425e-05, 5.629099999999998e-05, 5.5736000000000674e-05, 5.554200000000217e-05, 5.5736000000000674e-05, 5.611099999999758e-05, 5.5750000000000244e-05, 5.5708000000001534e-05, 5.6305999999999023e-05, 5.570900000000101e-05, 5.591700000000255e-05, 5.6041999999999204e-05, 5.561100000000055e-05, 5.565299999999926e-05, 5.6250000000000744e-05, 5.5651999999999785e-05, 5.63610000000013e-05, 5.5736000000000674e-05, 5.6000000000000494e-05, 5.5929999999999175e-05, 5.558299999999794e-05, 5.583299999999819e-05, 5.561100000000055e-05, 5.6222000000001604e-05]</msg>
<status status="PASS" starttime="20201029 12:47:31.423" endtime="20201029 12:47:31.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.419" endtime="20201029 12:47:31.431"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:31.435" endtime="20201029 12:47:31.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.434" endtime="20201029 12:47:31.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.432" endtime="20201029 12:47:31.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.062" endtime="20201029 12:47:31.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.061" endtime="20201029 12:47:31.456"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.464" endtime="20201029 12:47:31.483"></status>
</kw>
<msg timestamp="20201029 12:47:31.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.463" endtime="20201029 12:47:31.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.485" endtime="20201029 12:47:31.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.487" endtime="20201029 12:47:31.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.460" endtime="20201029 12:47:31.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.458" endtime="20201029 12:47:31.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.496" endtime="20201029 12:47:31.781"></status>
</kw>
<msg timestamp="20201029 12:47:31.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019311347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019368181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.495" endtime="20201029 12:47:31.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019311347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019368181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.785" endtime="20201029 12:47:31.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.793" endtime="20201029 12:47:31.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.492" endtime="20201029 12:47:31.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.490" endtime="20201029 12:47:31.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:31.800" level="INFO">${RESULT} = [{'diff': 5.683400000000213e-05}, {'diff': 5.7278000000000884e-05}, {'diff': 5.709700000000248e-05}, {'diff': 5.719499999999947e-05}, {'diff': 5.743100000000015e-05}, {'diff': 5.691700000000008e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:31.797" endtime="20201029 12:47:31.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:31.805" level="INFO">${ACCURACY} = {'diff': [5.683400000000213e-05, 5.7278000000000884e-05, 5.709700000000248e-05, 5.719499999999947e-05, 5.743100000000015e-05, 5.691700000000008e-05, 5.655600000000274e-05, 5.719499999999947e-05, 5.679...</msg>
<status status="PASS" starttime="20201029 12:47:31.801" endtime="20201029 12:47:31.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.809" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 12:47:31.808" endtime="20201029 12:47:31.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.812" level="INFO">VALUE: [5.683400000000213e-05, 5.7278000000000884e-05, 5.709700000000248e-05, 5.719499999999947e-05, 5.743100000000015e-05, 5.691700000000008e-05, 5.655600000000274e-05, 5.719499999999947e-05, 5.6791999999999954e-05, 5.662499999999765e-05, 5.729100000000098e-05, 5.681899999999962e-05, 5.7235999999998705e-05, 5.736099999999883e-05, 5.7235999999998705e-05, 5.6708000000002534e-05, 5.734700000000273e-05, 5.70550000000003e-05, 5.65549999999998e-05, 5.740299999999754e-05, 5.6985999999998455e-05, 5.6735999999998205e-05, 5.669499999999897e-05, 5.6791999999999954e-05, 5.71809999999999e-05, 5.6722000000002104e-05, 5.73610000000023e-05, 5.7306000000000024e-05, 5.7429999999997206e-05, 5.7319999999999593e-05, 5.666699999999983e-05, 5.658300000000241e-05, 5.705499999999683e-05, 5.733299999999969e-05, 5.6721999999998635e-05, 5.741699999999711e-05, 5.6915999999997136e-05, 5.70550000000003e-05, 5.70550000000003e-05, 5.688900000000094e-05, 5.7221999999999135e-05, 5.732000000000306e-05, 5.711099999999858e-05, 5.6569999999998843e-05, 5.7542000000000704e-05, 5.659699999999851e-05, 5.7514000000001564e-05, 5.734799999999873e-05, 5.752699999999819e-05, 5.7042000000000204e-05]</msg>
<status status="PASS" starttime="20201029 12:47:31.810" endtime="20201029 12:47:31.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.806" endtime="20201029 12:47:31.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:31.817" endtime="20201029 12:47:31.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.815" endtime="20201029 12:47:31.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.814" endtime="20201029 12:47:31.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.457" endtime="20201029 12:47:31.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.456" endtime="20201029 12:47:31.837"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.846" endtime="20201029 12:47:31.865"></status>
</kw>
<msg timestamp="20201029 12:47:31.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.844" endtime="20201029 12:47:31.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:31.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:31.866" endtime="20201029 12:47:31.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.869" endtime="20201029 12:47:31.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.842" endtime="20201029 12:47:31.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.840" endtime="20201029 12:47:31.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:31.877" endtime="20201029 12:47:32.164"></status>
</kw>
<msg timestamp="20201029 12:47:32.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019397153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019455375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:31.876" endtime="20201029 12:47:32.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019397153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019455375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.168" endtime="20201029 12:47:32.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.177" endtime="20201029 12:47:32.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.873" endtime="20201029 12:47:32.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.872" endtime="20201029 12:47:32.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:32.183" level="INFO">${RESULT} = [{'diff': 5.8222000000000135e-05}, {'diff': 5.8235999999999705e-05}, {'diff': 5.790299999999804e-05}, {'diff': 5.81810000000009e-05}, {'diff': 5.7569999999999844e-05}, {'diff': 5.765299999999779e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:32.180" endtime="20201029 12:47:32.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:32.187" level="INFO">${ACCURACY} = {'diff': [5.8222000000000135e-05, 5.8235999999999705e-05, 5.790299999999804e-05, 5.81810000000009e-05, 5.7569999999999844e-05, 5.765299999999779e-05, 5.812499999999915e-05, 5.811200000000252e-05, 5.82...</msg>
<status status="PASS" starttime="20201029 12:47:32.184" endtime="20201029 12:47:32.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.192" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 12:47:32.191" endtime="20201029 12:47:32.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.194" level="INFO">VALUE: [5.8222000000000135e-05, 5.8235999999999705e-05, 5.790299999999804e-05, 5.81810000000009e-05, 5.7569999999999844e-05, 5.765299999999779e-05, 5.812499999999915e-05, 5.811200000000252e-05, 5.8207999999997095e-05, 5.8193999999997525e-05, 5.834700000000026e-05, 5.8415999999998636e-05, 5.809700000000001e-05, 5.769499999999997e-05, 5.8235999999999705e-05, 5.761099999999908e-05, 5.8180000000001425e-05, 5.766699999999736e-05, 5.8485999999999955e-05, 5.7806000000000524e-05, 5.8499999999999525e-05, 5.7583999999999413e-05, 5.787500000000237e-05, 5.8277999999998414e-05, 5.7999999999999025e-05, 5.7652000000001785e-05, 5.8485999999999955e-05, 5.793100000000065e-05, 5.7985999999999455e-05, 5.8152000000002285e-05, 5.836099999999983e-05, 5.7651999999998316e-05, 5.7915999999998136e-05, 5.8166000000001855e-05, 5.762500000000212e-05, 5.786099999999933e-05, 5.8042000000001204e-05, 5.823700000000265e-05, 5.808300000000044e-05, 5.793100000000065e-05, 5.8207999999997095e-05, 5.834700000000026e-05, 5.8042000000001204e-05, 5.8320000000000594e-05, 5.8485999999999955e-05, 5.8194999999997e-05, 5.8485999999999955e-05, 5.8458000000000815e-05, 5.8347999999999733e-05, 5.780499999999758e-05]</msg>
<status status="PASS" starttime="20201029 12:47:32.193" endtime="20201029 12:47:32.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.188" endtime="20201029 12:47:32.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:32.199" endtime="20201029 12:47:32.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.197" endtime="20201029 12:47:32.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.196" endtime="20201029 12:47:32.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.838" endtime="20201029 12:47:32.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:31.837" endtime="20201029 12:47:32.219"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.228" endtime="20201029 12:47:32.250"></status>
</kw>
<msg timestamp="20201029 12:47:32.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.226" endtime="20201029 12:47:32.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.251" endtime="20201029 12:47:32.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.254" endtime="20201029 12:47:32.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.224" endtime="20201029 12:47:32.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.222" endtime="20201029 12:47:32.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.263" endtime="20201029 12:47:32.548"></status>
</kw>
<msg timestamp="20201029 12:47:32.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.261" endtime="20201029 12:47:32.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022506625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.552" endtime="20201029 12:47:32.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.560" endtime="20201029 12:47:32.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.259" endtime="20201029 12:47:32.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.257" endtime="20201029 12:47:32.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:32.567" level="INFO">${RESULT} = [{'diff': 5.931900000000212e-05}, {'diff': 5.8958000000001315e-05}, {'diff': 5.931900000000212e-05}, {'diff': 5.879099999999901e-05}, {'diff': 5.9250000000000275e-05}, {'diff': 5.8972000000000885e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:32.563" endtime="20201029 12:47:32.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:32.571" level="INFO">${ACCURACY} = {'diff': [5.931900000000212e-05, 5.8958000000001315e-05, 5.931900000000212e-05, 5.879099999999901e-05, 5.9250000000000275e-05, 5.8972000000000885e-05, 5.934699999999779e-05, 5.862500000000312e-05, 5.8...</msg>
<status status="PASS" starttime="20201029 12:47:32.568" endtime="20201029 12:47:32.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.575" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 12:47:32.574" endtime="20201029 12:47:32.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.578" level="INFO">VALUE: [5.931900000000212e-05, 5.8958000000001315e-05, 5.931900000000212e-05, 5.879099999999901e-05, 5.9250000000000275e-05, 5.8972000000000885e-05, 5.934699999999779e-05, 5.862500000000312e-05, 5.8485999999999955e-05, 5.8763999999999345e-05, 5.8778000000002384e-05, 5.936099999999736e-05, 5.9069999999997874e-05, 5.8749999999999775e-05, 5.91810000000019e-05, 5.859699999999704e-05, 5.9194999999998e-05, 5.920899999999757e-05, 5.9277999999999414e-05, 5.938899999999997e-05, 5.904099999999926e-05, 5.865299999999879e-05, 5.883300000000119e-05, 5.859700000000051e-05, 5.9277999999999414e-05, 5.891699999999861e-05, 5.933300000000169e-05, 5.8597999999999983e-05, 5.912500000000015e-05, 5.888899999999947e-05, 5.912500000000015e-05, 5.9041999999998734e-05, 5.891700000000208e-05, 5.8763999999999345e-05, 5.912500000000015e-05, 5.9291999999998984e-05, 5.9250000000000275e-05, 5.916700000000233e-05, 5.930499999999908e-05, 5.904099999999926e-05, 5.9250000000000275e-05, 5.9041999999998734e-05, 5.861100000000008e-05, 5.931899999999865e-05, 5.911100000000058e-05, 5.862499999999965e-05, 5.9306000000002024e-05, 5.9429999999999206e-05, 5.86810000000014e-05, 5.8763999999999345e-05]</msg>
<status status="PASS" starttime="20201029 12:47:32.576" endtime="20201029 12:47:32.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.572" endtime="20201029 12:47:32.580"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:32.583" endtime="20201029 12:47:32.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.582" endtime="20201029 12:47:32.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.581" endtime="20201029 12:47:32.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.220" endtime="20201029 12:47:32.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.220" endtime="20201029 12:47:32.604"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.612" endtime="20201029 12:47:32.631"></status>
</kw>
<msg timestamp="20201029 12:47:32.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.611" endtime="20201029 12:47:32.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.633" endtime="20201029 12:47:32.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.635" endtime="20201029 12:47:32.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.608" endtime="20201029 12:47:32.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.606" endtime="20201029 12:47:32.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.645" endtime="20201029 12:47:32.931"></status>
</kw>
<msg timestamp="20201029 12:47:32.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019360542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019420708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.643" endtime="20201029 12:47:32.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019360542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019420708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:32.935" endtime="20201029 12:47:32.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.943" endtime="20201029 12:47:32.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.640" endtime="20201029 12:47:32.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.639" endtime="20201029 12:47:32.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:32.949" level="INFO">${RESULT} = [{'diff': 6.0165999999996916e-05}, {'diff': 5.955499999999933e-05}, {'diff': 6.005499999999983e-05}, {'diff': 5.984699999999829e-05}, {'diff': 6.0472000000002385e-05}, {'diff': 6.030500000000008e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:32.946" endtime="20201029 12:47:32.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:32.954" level="INFO">${ACCURACY} = {'diff': [6.0165999999996916e-05, 5.955499999999933e-05, 6.005499999999983e-05, 5.984699999999829e-05, 6.0472000000002385e-05, 6.030500000000008e-05, 5.9749999999997305e-05, 5.980499999999958e-05, 5.9...</msg>
<status status="PASS" starttime="20201029 12:47:32.950" endtime="20201029 12:47:32.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.959" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 12:47:32.958" endtime="20201029 12:47:32.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:32.962" level="INFO">VALUE: [6.0165999999996916e-05, 5.955499999999933e-05, 6.005499999999983e-05, 5.984699999999829e-05, 6.0472000000002385e-05, 6.030500000000008e-05, 5.9749999999997305e-05, 5.980499999999958e-05, 5.9749999999997305e-05, 5.968099999999893e-05, 6.03750000000014e-05, 5.9986000000001455e-05, 5.96810000000024e-05, 6.0402000000001066e-05, 5.9721999999998165e-05, 5.980499999999958e-05, 5.9986000000001455e-05, 6.0291999999999984e-05, 5.998700000000093e-05, 5.95689999999989e-05, 6.0471999999998916e-05, 6.0513999999997625e-05, 5.9958000000002315e-05, 6.0236000000001705e-05, 6.012500000000115e-05, 5.961100000000108e-05, 5.9764000000000345e-05, 6.0235999999998235e-05, 5.966699999999936e-05, 6.012500000000115e-05, 6.0000000000001025e-05, 5.966699999999936e-05, 5.988900000000047e-05, 6.0471999999998916e-05, 5.9750000000000775e-05, 5.9943999999999276e-05, 5.9862000000000803e-05, 5.954099999999976e-05, 6.0485999999998485e-05, 5.9707999999998596e-05, 5.9958000000002315e-05, 6.0500000000001525e-05, 5.980499999999958e-05, 5.962500000000065e-05, 5.965299999999979e-05, 5.962499999999718e-05, 5.966699999999936e-05, 6.008299999999897e-05, 6.0070000000002344e-05, 6.0250000000001275e-05]</msg>
<status status="PASS" starttime="20201029 12:47:32.960" endtime="20201029 12:47:32.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.956" endtime="20201029 12:47:32.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:32.967" endtime="20201029 12:47:32.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.965" endtime="20201029 12:47:32.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.964" endtime="20201029 12:47:32.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.605" endtime="20201029 12:47:32.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.604" endtime="20201029 12:47:32.988"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:32.996" endtime="20201029 12:47:33.014"></status>
</kw>
<msg timestamp="20201029 12:47:33.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:32.994" endtime="20201029 12:47:33.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.016" endtime="20201029 12:47:33.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.018" endtime="20201029 12:47:33.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.992" endtime="20201029 12:47:33.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.990" endtime="20201029 12:47:33.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.027" endtime="20201029 12:47:33.313"></status>
</kw>
<msg timestamp="20201029 12:47:33.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019356944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019417986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:33.026" endtime="20201029 12:47:33.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019356944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019417986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:33.317" endtime="20201029 12:47:33.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.326" endtime="20201029 12:47:33.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.023" endtime="20201029 12:47:33.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.021" endtime="20201029 12:47:33.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:33.333" level="INFO">${RESULT} = [{'diff': 6.104200000000073e-05}, {'diff': 6.086099999999886e-05}, {'diff': 6.066699999999689e-05}, {'diff': 6.0888999999998e-05}, {'diff': 6.068099999999993e-05}, {'diff': 6.104200000000073e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:33.329" endtime="20201029 12:47:33.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:33.337" level="INFO">${ACCURACY} = {'diff': [6.104200000000073e-05, 6.086099999999886e-05, 6.066699999999689e-05, 6.0888999999998e-05, 6.068099999999993e-05, 6.104200000000073e-05, 6.0985999999998985e-05, 6.0749999999998305e-05, 6.0931...</msg>
<status status="PASS" starttime="20201029 12:47:33.334" endtime="20201029 12:47:33.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.342" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 12:47:33.341" endtime="20201029 12:47:33.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.344" level="INFO">VALUE: [6.104200000000073e-05, 6.086099999999886e-05, 6.066699999999689e-05, 6.0888999999998e-05, 6.068099999999993e-05, 6.104200000000073e-05, 6.0985999999998985e-05, 6.0749999999998305e-05, 6.093100000000018e-05, 6.144400000000078e-05, 6.090300000000104e-05, 6.115200000000182e-05, 6.0999999999998555e-05, 6.0735999999998735e-05, 6.141599999999817e-05, 6.109699999999954e-05, 6.149999999999906e-05, 6.13750000000024e-05, 6.0680000000000456e-05, 6.150000000000252e-05, 6.093100000000018e-05, 6.109699999999954e-05, 6.130600000000055e-05, 6.129200000000098e-05, 6.070899999999907e-05, 6.10560000000003e-05, 6.123599999999924e-05, 6.061099999999861e-05, 6.0763999999997875e-05, 6.0694000000000026e-05, 6.0957999999999846e-05, 6.134699999999979e-05, 6.0985999999998985e-05, 6.1014000000001595e-05, 6.14300000000012e-05, 6.080500000000058e-05, 6.131899999999718e-05, 6.080500000000058e-05, 6.0749999999998305e-05, 6.1195e-05, 6.112500000000215e-05, 6.136099999999936e-05, 6.0736000000002205e-05, 6.0735999999998735e-05, 6.059699999999904e-05, 6.125000000000227e-05, 6.0555999999999804e-05, 6.05689999999999e-05, 6.095899999999932e-05, 6.111100000000258e-05]</msg>
<status status="PASS" starttime="20201029 12:47:33.343" endtime="20201029 12:47:33.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.338" endtime="20201029 12:47:33.345"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:33.349" endtime="20201029 12:47:33.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.348" endtime="20201029 12:47:33.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.346" endtime="20201029 12:47:33.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.988" endtime="20201029 12:47:33.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:32.988" endtime="20201029 12:47:33.370"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.378" endtime="20201029 12:47:33.398"></status>
</kw>
<msg timestamp="20201029 12:47:33.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.377" endtime="20201029 12:47:33.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.400" endtime="20201029 12:47:33.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.402" endtime="20201029 12:47:33.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.374" endtime="20201029 12:47:33.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.372" endtime="20201029 12:47:33.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.411" endtime="20201029 12:47:33.696"></status>
</kw>
<msg timestamp="20201029 12:47:33.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020256208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020317764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:33.410" endtime="20201029 12:47:33.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020256208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020317764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:33.700" endtime="20201029 12:47:33.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.709" endtime="20201029 12:47:33.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.407" endtime="20201029 12:47:33.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.405" endtime="20201029 12:47:33.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:33.715" level="INFO">${RESULT} = [{'diff': 6.155599999999734e-05}, {'diff': 6.181999999999716e-05}, {'diff': 6.251399999999963e-05}, {'diff': 6.161099999999961e-05}, {'diff': 6.198599999999999e-05}, {'diff': 6.240299999999907e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:33.712" endtime="20201029 12:47:33.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:33.719" level="INFO">${ACCURACY} = {'diff': [6.155599999999734e-05, 6.181999999999716e-05, 6.251399999999963e-05, 6.161099999999961e-05, 6.198599999999999e-05, 6.240299999999907e-05, 6.204200000000173e-05, 6.168100000000093e-05, 6.2457...</msg>
<status status="PASS" starttime="20201029 12:47:33.716" endtime="20201029 12:47:33.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.724" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 12:47:33.723" endtime="20201029 12:47:33.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.726" level="INFO">VALUE: [6.155599999999734e-05, 6.181999999999716e-05, 6.251399999999963e-05, 6.161099999999961e-05, 6.198599999999999e-05, 6.240299999999907e-05, 6.204200000000173e-05, 6.168100000000093e-05, 6.245799999999788e-05, 6.213900000000272e-05, 6.22499999999998e-05, 6.208300000000097e-05, 6.180500000000158e-05, 6.1888999999999e-05, 6.175000000000277e-05, 6.172200000000017e-05, 6.167999999999799e-05, 6.161099999999961e-05, 6.175000000000277e-05, 6.237499999999993e-05, 6.198599999999999e-05, 6.17499999999993e-05, 6.22080000000011e-05, 6.211100000000011e-05, 6.15699999999969e-05, 6.17629999999994e-05, 6.230599999999809e-05, 6.161099999999961e-05, 6.150000000000252e-05, 6.19019999999991e-05, 6.241599999999917e-05, 6.207000000000087e-05, 6.19300000000017e-05, 6.166700000000136e-05, 6.176399999999888e-05, 6.23889999999995e-05, 6.162499999999918e-05, 6.159700000000004e-05, 6.186099999999986e-05, 6.237499999999993e-05, 6.193100000000118e-05, 6.180600000000105e-05, 6.211100000000011e-05, 6.245800000000135e-05, 6.17499999999993e-05, 6.191700000000161e-05, 6.220900000000057e-05, 6.169399999999756e-05, 6.194400000000128e-05, 6.166599999999842e-05]</msg>
<status status="PASS" starttime="20201029 12:47:33.725" endtime="20201029 12:47:33.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.720" endtime="20201029 12:47:33.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:33.732" endtime="20201029 12:47:33.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.730" endtime="20201029 12:47:33.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.729" endtime="20201029 12:47:33.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.370" endtime="20201029 12:47:33.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.370" endtime="20201029 12:47:33.752"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.762" endtime="20201029 12:47:33.781"></status>
</kw>
<msg timestamp="20201029 12:47:33.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.760" endtime="20201029 12:47:33.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:33.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:33.782" endtime="20201029 12:47:33.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.785" endtime="20201029 12:47:33.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.758" endtime="20201029 12:47:33.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.755" endtime="20201029 12:47:33.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:33.794" endtime="20201029 12:47:34.081"></status>
</kw>
<msg timestamp="20201029 12:47:34.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020278083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020340667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:33.792" endtime="20201029 12:47:34.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020278083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020340667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.086" endtime="20201029 12:47:34.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.095" endtime="20201029 12:47:34.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.790" endtime="20201029 12:47:34.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.788" endtime="20201029 12:47:34.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:34.101" level="INFO">${RESULT} = [{'diff': 6.258400000000094e-05}, {'diff': 6.256899999999843e-05}, {'diff': 6.254199999999877e-05}, {'diff': 6.326400000000038e-05}, {'diff': 6.334699999999832e-05}, {'diff': 6.267999999999899e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:34.098" endtime="20201029 12:47:34.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:34.107" level="INFO">${ACCURACY} = {'diff': [6.258400000000094e-05, 6.256899999999843e-05, 6.254199999999877e-05, 6.326400000000038e-05, 6.334699999999832e-05, 6.267999999999899e-05, 6.280499999999911e-05, 6.345799999999888e-05, 6.2889...</msg>
<status status="PASS" starttime="20201029 12:47:34.102" endtime="20201029 12:47:34.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.111" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 12:47:34.110" endtime="20201029 12:47:34.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.114" level="INFO">VALUE: [6.258400000000094e-05, 6.256899999999843e-05, 6.254199999999877e-05, 6.326400000000038e-05, 6.334699999999832e-05, 6.267999999999899e-05, 6.280499999999911e-05, 6.345799999999888e-05, 6.2889e-05, 6.334700000000179e-05, 6.313900000000025e-05, 6.268099999999846e-05, 6.312500000000068e-05, 6.284700000000129e-05, 6.286100000000086e-05, 6.336099999999789e-05, 6.266699999999889e-05, 6.25560000000018e-05, 6.268100000000193e-05, 6.269399999999856e-05, 6.272200000000117e-05, 6.276399999999988e-05, 6.341600000000017e-05, 6.341600000000017e-05, 6.332000000000212e-05, 6.345800000000235e-05, 6.318099999999896e-05, 6.273700000000021e-05, 6.258399999999747e-05, 6.332000000000212e-05, 6.263899999999975e-05, 6.263899999999975e-05, 6.312500000000068e-05, 6.347200000000192e-05, 6.287500000000043e-05, 6.268099999999846e-05, 6.33890000000005e-05, 6.280599999999859e-05, 6.348599999999802e-05, 6.259700000000104e-05, 6.268000000000246e-05, 6.262500000000018e-05, 6.272200000000117e-05, 6.305499999999936e-05, 6.27500000000003e-05, 6.30829999999985e-05, 6.281899999999868e-05, 6.251399999999963e-05, 6.319499999999853e-05, 6.251399999999963e-05]</msg>
<status status="PASS" starttime="20201029 12:47:34.112" endtime="20201029 12:47:34.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.108" endtime="20201029 12:47:34.115"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:34.118" endtime="20201029 12:47:34.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.117" endtime="20201029 12:47:34.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.116" endtime="20201029 12:47:34.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.753" endtime="20201029 12:47:34.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:33.753" endtime="20201029 12:47:34.139"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.148" endtime="20201029 12:47:34.166"></status>
</kw>
<msg timestamp="20201029 12:47:34.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.146" endtime="20201029 12:47:34.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.168" endtime="20201029 12:47:34.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.170" endtime="20201029 12:47:34.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.144" endtime="20201029 12:47:34.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.142" endtime="20201029 12:47:34.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.179" endtime="20201029 12:47:34.466"></status>
</kw>
<msg timestamp="20201029 12:47:34.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019638556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019702917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.178" endtime="20201029 12:47:34.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019638556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019702917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.470" endtime="20201029 12:47:34.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.478" endtime="20201029 12:47:34.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.175" endtime="20201029 12:47:34.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.173" endtime="20201029 12:47:34.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:34.484" level="INFO">${RESULT} = [{'diff': 6.436099999999889e-05}, {'diff': 6.400000000000156e-05}, {'diff': 6.413899999999778e-05}, {'diff': 6.379100000000054e-05}, {'diff': 6.447199999999945e-05}, {'diff': 6.413899999999778e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:34.481" endtime="20201029 12:47:34.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:34.488" level="INFO">${ACCURACY} = {'diff': [6.436099999999889e-05, 6.400000000000156e-05, 6.413899999999778e-05, 6.379100000000054e-05, 6.447199999999945e-05, 6.413899999999778e-05, 6.433299999999975e-05, 6.366699999999989e-05, 6.3805...</msg>
<status status="PASS" starttime="20201029 12:47:34.485" endtime="20201029 12:47:34.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.493" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 12:47:34.492" endtime="20201029 12:47:34.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.495" level="INFO">VALUE: [6.436099999999889e-05, 6.400000000000156e-05, 6.413899999999778e-05, 6.379100000000054e-05, 6.447199999999945e-05, 6.413899999999778e-05, 6.433299999999975e-05, 6.366699999999989e-05, 6.380500000000011e-05, 6.429200000000052e-05, 6.37219999999987e-05, 6.37500000000013e-05, 6.398599999999852e-05, 6.418099999999996e-05, 6.361099999999814e-05, 6.386099999999839e-05, 6.361100000000161e-05, 6.440300000000107e-05, 6.397300000000189e-05, 6.412500000000168e-05, 6.430500000000061e-05, 6.422200000000267e-05, 6.437499999999846e-05, 6.430500000000061e-05, 6.366600000000042e-05, 6.429100000000104e-05, 6.406899999999993e-05, 6.441700000000064e-05, 6.361099999999814e-05, 6.365300000000032e-05, 6.398599999999852e-05, 6.449999999999859e-05, 6.40699999999994e-05, 6.397300000000189e-05, 6.368099999999946e-05, 6.423700000000171e-05, 6.441700000000064e-05, 6.366699999999989e-05, 6.393099999999971e-05, 6.42219999999992e-05, 6.391600000000067e-05, 6.386099999999839e-05, 6.401400000000113e-05, 6.398600000000199e-05, 6.369400000000303e-05, 6.42219999999992e-05, 6.418099999999996e-05, 6.409699999999907e-05, 6.437499999999846e-05, 6.444499999999978e-05]</msg>
<status status="PASS" starttime="20201029 12:47:34.494" endtime="20201029 12:47:34.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.489" endtime="20201029 12:47:34.497"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:34.500" endtime="20201029 12:47:34.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.499" endtime="20201029 12:47:34.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.498" endtime="20201029 12:47:34.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.140" endtime="20201029 12:47:34.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.139" endtime="20201029 12:47:34.524"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.542" endtime="20201029 12:47:34.568"></status>
</kw>
<msg timestamp="20201029 12:47:34.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.539" endtime="20201029 12:47:34.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.571" endtime="20201029 12:47:34.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.576" endtime="20201029 12:47:34.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.533" endtime="20201029 12:47:34.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.529" endtime="20201029 12:47:34.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.595" endtime="20201029 12:47:34.882"></status>
</kw>
<msg timestamp="20201029 12:47:34.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035116819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035181375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.592" endtime="20201029 12:47:34.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035116819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035181375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.887" endtime="20201029 12:47:34.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.895" endtime="20201029 12:47:34.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.586" endtime="20201029 12:47:34.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.583" endtime="20201029 12:47:34.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:34.901" level="INFO">${RESULT} = [{'diff': 6.455600000000034e-05}, {'diff': 6.529200000000152e-05}, {'diff': 6.512499999999921e-05}, {'diff': 6.47080000000036e-05}, {'diff': 6.516599999999845e-05}, {'diff': 6.54029999999986e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:34.898" endtime="20201029 12:47:34.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:34.905" level="INFO">${ACCURACY} = {'diff': [6.455600000000034e-05, 6.529200000000152e-05, 6.512499999999921e-05, 6.47080000000036e-05, 6.516599999999845e-05, 6.54029999999986e-05, 6.501399999999519e-05, 6.513899999999878e-05, 6.488799...</msg>
<status status="PASS" starttime="20201029 12:47:34.902" endtime="20201029 12:47:34.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.910" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 12:47:34.909" endtime="20201029 12:47:34.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.912" level="INFO">VALUE: [6.455600000000034e-05, 6.529200000000152e-05, 6.512499999999921e-05, 6.47080000000036e-05, 6.516599999999845e-05, 6.54029999999986e-05, 6.501399999999519e-05, 6.513899999999878e-05, 6.488799999999906e-05, 6.493100000000418e-05, 6.459799999999905e-05, 6.554200000000177e-05, 6.501400000000213e-05, 6.529200000000152e-05, 6.487499999999896e-05, 6.495800000000385e-05, 6.52500000000028e-05, 6.486099999999939e-05, 6.505600000000084e-05, 6.547199999999698e-05, 6.527800000000195e-05, 6.50280000000017e-05, 6.479200000000102e-05, 6.548600000000349e-05, 6.493099999999724e-05, 6.483399999999973e-05, 6.498600000000299e-05, 6.532000000000066e-05, 6.533300000000075e-05, 6.479200000000102e-05, 6.487499999999896e-05, 6.547200000000392e-05, 6.504100000000179e-05, 6.538899999999903e-05, 6.462499999999871e-05, 6.466699999999742e-05, 6.548600000000349e-05, 6.522200000000367e-05, 6.5277999999995e-05, 6.461099999999914e-05, 6.492999999999777e-05, 6.518099999999749e-05, 6.45280000000012e-05, 6.462499999999871e-05, 6.523699999999577e-05, 6.494400000000428e-05, 6.469399999999709e-05, 6.47080000000036e-05, 6.483399999999973e-05, 6.497200000000342e-05]</msg>
<status status="PASS" starttime="20201029 12:47:34.911" endtime="20201029 12:47:34.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.906" endtime="20201029 12:47:34.914"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:34.918" endtime="20201029 12:47:34.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.916" endtime="20201029 12:47:34.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.915" endtime="20201029 12:47:34.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.526" endtime="20201029 12:47:34.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.525" endtime="20201029 12:47:34.938"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.947" endtime="20201029 12:47:34.965"></status>
</kw>
<msg timestamp="20201029 12:47:34.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.946" endtime="20201029 12:47:34.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.967" endtime="20201029 12:47:34.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.969" endtime="20201029 12:47:34.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.943" endtime="20201029 12:47:34.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.941" endtime="20201029 12:47:34.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.978" endtime="20201029 12:47:35.263"></status>
</kw>
<msg timestamp="20201029 12:47:35.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019421097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019487319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.977" endtime="20201029 12:47:35.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019421097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019487319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.267" endtime="20201029 12:47:35.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.276" endtime="20201029 12:47:35.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.974" endtime="20201029 12:47:35.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.972" endtime="20201029 12:47:35.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:35.282" level="INFO">${RESULT} = [{'diff': 6.62220000000012e-05}, {'diff': 6.619400000000206e-05}, {'diff': 6.597200000000095e-05}, {'diff': 6.642999999999927e-05}, {'diff': 6.612500000000021e-05}, {'diff': 6.593000000000224e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:35.279" endtime="20201029 12:47:35.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:35.287" level="INFO">${ACCURACY} = {'diff': [6.62220000000012e-05, 6.619400000000206e-05, 6.597200000000095e-05, 6.642999999999927e-05, 6.612500000000021e-05, 6.593000000000224e-05, 6.597199999999748e-05, 6.62359999999973e-05, 6.587499...</msg>
<status status="PASS" starttime="20201029 12:47:35.283" endtime="20201029 12:47:35.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.291" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 12:47:35.290" endtime="20201029 12:47:35.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.294" level="INFO">VALUE: [6.62220000000012e-05, 6.619400000000206e-05, 6.597200000000095e-05, 6.642999999999927e-05, 6.612500000000021e-05, 6.593000000000224e-05, 6.597199999999748e-05, 6.62359999999973e-05, 6.587499999999996e-05, 6.593000000000224e-05, 6.55419999999983e-05, 6.57220000000007e-05, 6.644500000000178e-05, 6.618099999999849e-05, 6.638900000000003e-05, 6.616699999999892e-05, 6.618100000000196e-05, 6.623700000000024e-05, 6.591700000000214e-05, 6.555499999999839e-05, 6.637500000000046e-05, 6.555500000000186e-05, 6.609700000000107e-05, 6.591699999999867e-05, 6.587499999999996e-05, 6.598600000000052e-05, 6.64029999999996e-05, 6.587499999999996e-05, 6.648600000000102e-05, 6.632000000000166e-05, 6.644499999999831e-05, 6.622199999999773e-05, 6.612500000000021e-05, 6.609800000000055e-05, 6.572300000000017e-05, 6.579199999999855e-05, 6.569399999999809e-05, 6.648600000000102e-05, 6.623600000000077e-05, 6.584700000000082e-05, 6.594500000000128e-05, 6.586100000000039e-05, 6.587499999999996e-05, 6.600000000000009e-05, 6.59029999999991e-05, 6.64029999999996e-05, 6.566699999999842e-05, 6.574999999999984e-05, 6.559700000000057e-05, 6.641700000000264e-05]</msg>
<status status="PASS" starttime="20201029 12:47:35.292" endtime="20201029 12:47:35.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.288" endtime="20201029 12:47:35.295"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:35.299" endtime="20201029 12:47:35.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.297" endtime="20201029 12:47:35.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.296" endtime="20201029 12:47:35.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.939" endtime="20201029 12:47:35.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.939" endtime="20201029 12:47:35.319"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.328" endtime="20201029 12:47:35.347"></status>
</kw>
<msg timestamp="20201029 12:47:35.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.326" endtime="20201029 12:47:35.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.348" endtime="20201029 12:47:35.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.351" endtime="20201029 12:47:35.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.324" endtime="20201029 12:47:35.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.322" endtime="20201029 12:47:35.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.361" endtime="20201029 12:47:35.647"></status>
</kw>
<msg timestamp="20201029 12:47:35.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019309389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019375958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.359" endtime="20201029 12:47:35.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019309389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019375958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.651" endtime="20201029 12:47:35.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.659" endtime="20201029 12:47:35.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.356" endtime="20201029 12:47:35.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.354" endtime="20201029 12:47:35.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:35.665" level="INFO">${RESULT} = [{'diff': 6.656899999999896e-05}, {'diff': 6.748599999999855e-05}, {'diff': 6.694399999999934e-05}, {'diff': 6.684700000000182e-05}, {'diff': 6.745799999999941e-05}, {'diff': 6.680599999999912e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:35.662" endtime="20201029 12:47:35.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:35.669" level="INFO">${ACCURACY} = {'diff': [6.656899999999896e-05, 6.748599999999855e-05, 6.694399999999934e-05, 6.684700000000182e-05, 6.745799999999941e-05, 6.680599999999912e-05, 6.72220000000022e-05, 6.679199999999955e-05, 6.73610...</msg>
<status status="PASS" starttime="20201029 12:47:35.666" endtime="20201029 12:47:35.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.674" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 12:47:35.673" endtime="20201029 12:47:35.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.676" level="INFO">VALUE: [6.656899999999896e-05, 6.748599999999855e-05, 6.694399999999934e-05, 6.684700000000182e-05, 6.745799999999941e-05, 6.680599999999912e-05, 6.72220000000022e-05, 6.679199999999955e-05, 6.736100000000189e-05, 6.695900000000185e-05, 6.701399999999719e-05, 6.695799999999891e-05, 6.686099999999792e-05, 6.662500000000071e-05, 6.666700000000289e-05, 6.70419999999998e-05, 6.743099999999974e-05, 6.730500000000014e-05, 6.750000000000159e-05, 6.652799999999973e-05, 6.734699999999885e-05, 6.734699999999885e-05, 6.667999999999952e-05, 6.725000000000134e-05, 6.655599999999887e-05, 6.695800000000238e-05, 6.702800000000023e-05, 6.745799999999941e-05, 6.711100000000164e-05, 6.72090000000021e-05, 6.679199999999955e-05, 6.652799999999973e-05, 6.698699999999752e-05, 6.741700000000017e-05, 6.679199999999955e-05, 6.663900000000028e-05, 6.72640000000009e-05, 6.661100000000114e-05, 6.656900000000243e-05, 6.750000000000159e-05, 6.711099999999817e-05, 6.727800000000048e-05, 6.701400000000066e-05, 6.738899999999756e-05, 6.652799999999973e-05, 6.731999999999919e-05, 6.74169999999967e-05, 6.675000000000084e-05, 6.65700000000019e-05, 6.686100000000139e-05]</msg>
<status status="PASS" starttime="20201029 12:47:35.675" endtime="20201029 12:47:35.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.670" endtime="20201029 12:47:35.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:35.681" endtime="20201029 12:47:35.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.680" endtime="20201029 12:47:35.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.679" endtime="20201029 12:47:35.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.320" endtime="20201029 12:47:35.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.320" endtime="20201029 12:47:35.702"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.710" endtime="20201029 12:47:35.733"></status>
</kw>
<msg timestamp="20201029 12:47:35.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.709" endtime="20201029 12:47:35.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:35.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:35.735" endtime="20201029 12:47:35.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.737" endtime="20201029 12:47:35.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.706" endtime="20201029 12:47:35.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.704" endtime="20201029 12:47:35.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:35.746" endtime="20201029 12:47:36.032"></status>
</kw>
<msg timestamp="20201029 12:47:36.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022814486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022882236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:35.745" endtime="20201029 12:47:36.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022814486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022882236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.036" endtime="20201029 12:47:36.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.044" endtime="20201029 12:47:36.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.742" endtime="20201029 12:47:36.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.741" endtime="20201029 12:47:36.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:36.051" level="INFO">${RESULT} = [{'diff': 6.775000000000184e-05}, {'diff': 6.812500000000221e-05}, {'diff': 6.80420000000008e-05}, {'diff': 6.845799999999694e-05}, {'diff': 6.793100000000024e-05}, {'diff': 6.791700000000067e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:36.048" endtime="20201029 12:47:36.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:36.055" level="INFO">${ACCURACY} = {'diff': [6.775000000000184e-05, 6.812500000000221e-05, 6.80420000000008e-05, 6.845799999999694e-05, 6.793100000000024e-05, 6.791700000000067e-05, 6.755599999999987e-05, 6.786100000000239e-05, 6.82499...</msg>
<status status="PASS" starttime="20201029 12:47:36.052" endtime="20201029 12:47:36.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.059" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 12:47:36.058" endtime="20201029 12:47:36.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.062" level="INFO">VALUE: [6.775000000000184e-05, 6.812500000000221e-05, 6.80420000000008e-05, 6.845799999999694e-05, 6.793100000000024e-05, 6.791700000000067e-05, 6.755599999999987e-05, 6.786100000000239e-05, 6.824999999999887e-05, 6.774999999999837e-05, 6.801400000000166e-05, 6.787499999999849e-05, 6.836099999999942e-05, 6.849999999999912e-05, 6.851400000000216e-05, 6.77640000000014e-05, 6.804100000000132e-05, 6.829199999999758e-05, 6.769400000000009e-05, 6.836100000000289e-05, 6.84030000000016e-05, 6.841700000000117e-05, 6.772199999999923e-05, 6.780499999999717e-05, 6.765299999999738e-05, 6.806999999999994e-05, 6.802799999999776e-05, 6.79030000000011e-05, 6.800000000000209e-05, 6.790200000000163e-05, 6.784699999999935e-05, 6.769400000000009e-05, 6.826399999999844e-05, 6.77359999999988e-05, 6.786100000000239e-05, 6.848599999999955e-05, 6.788899999999806e-05, 6.80420000000008e-05, 6.823600000000277e-05, 6.798599999999905e-05, 6.837499999999899e-05, 6.765300000000085e-05, 6.849999999999912e-05, 6.798600000000252e-05, 6.756899999999996e-05, 6.816599999999798e-05, 6.799999999999862e-05, 6.82359999999993e-05, 6.833300000000028e-05, 6.77640000000014e-05]</msg>
<status status="PASS" starttime="20201029 12:47:36.060" endtime="20201029 12:47:36.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.056" endtime="20201029 12:47:36.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:36.067" endtime="20201029 12:47:36.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.066" endtime="20201029 12:47:36.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.065" endtime="20201029 12:47:36.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.703" endtime="20201029 12:47:36.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:35.702" endtime="20201029 12:47:36.088"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.097" endtime="20201029 12:47:36.116"></status>
</kw>
<msg timestamp="20201029 12:47:36.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.095" endtime="20201029 12:47:36.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.118" endtime="20201029 12:47:36.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.120" endtime="20201029 12:47:36.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.092" endtime="20201029 12:47:36.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.090" endtime="20201029 12:47:36.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.129" endtime="20201029 12:47:36.415"></status>
</kw>
<msg timestamp="20201029 12:47:36.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019382292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019450847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.128" endtime="20201029 12:47:36.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019382292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019450847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.419" endtime="20201029 12:47:36.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.427" endtime="20201029 12:47:36.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.125" endtime="20201029 12:47:36.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.123" endtime="20201029 12:47:36.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:36.434" level="INFO">${RESULT} = [{'diff': 6.855500000000139e-05}, {'diff': 6.866699999999795e-05}, {'diff': 6.943000000000227e-05}, {'diff': 6.911100000000017e-05}, {'diff': 6.894500000000081e-05}, {'diff': 6.947200000000098e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:36.431" endtime="20201029 12:47:36.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:36.439" level="INFO">${ACCURACY} = {'diff': [6.855500000000139e-05, 6.866699999999795e-05, 6.943000000000227e-05, 6.911100000000017e-05, 6.894500000000081e-05, 6.947200000000098e-05, 6.951399999999969e-05, 6.924999999999987e-05, 6.8610...</msg>
<status status="PASS" starttime="20201029 12:47:36.435" endtime="20201029 12:47:36.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.443" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 12:47:36.442" endtime="20201029 12:47:36.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.446" level="INFO">VALUE: [6.855500000000139e-05, 6.866699999999795e-05, 6.943000000000227e-05, 6.911100000000017e-05, 6.894500000000081e-05, 6.947200000000098e-05, 6.951399999999969e-05, 6.924999999999987e-05, 6.861099999999967e-05, 6.929199999999858e-05, 6.886099999999992e-05, 6.919399999999812e-05, 6.852699999999878e-05, 6.926399999999944e-05, 6.880500000000164e-05, 6.912499999999974e-05, 6.927699999999953e-05, 6.901399999999919e-05, 6.852799999999826e-05, 6.950000000000012e-05, 6.855600000000087e-05, 6.913899999999931e-05, 6.922200000000073e-05, 6.85420000000013e-05, 6.869399999999762e-05, 6.92360000000003e-05, 6.877799999999851e-05, 6.856899999999749e-05, 6.926399999999944e-05, 6.89299999999983e-05, 6.87770000000025e-05, 6.901399999999919e-05, 6.930499999999867e-05, 6.899999999999962e-05, 6.912499999999974e-05, 6.948600000000055e-05, 6.887499999999949e-05, 6.861099999999967e-05, 6.866700000000142e-05, 6.879200000000155e-05, 6.868099999999752e-05, 6.894500000000081e-05, 6.861099999999967e-05, 6.948600000000055e-05, 6.918099999999802e-05, 6.888799999999959e-05, 6.950000000000012e-05, 6.869400000000109e-05, 6.894399999999787e-05, 6.936100000000042e-05]</msg>
<status status="PASS" starttime="20201029 12:47:36.444" endtime="20201029 12:47:36.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.439" endtime="20201029 12:47:36.451"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:36.455" endtime="20201029 12:47:36.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.453" endtime="20201029 12:47:36.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.452" endtime="20201029 12:47:36.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.089" endtime="20201029 12:47:36.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.088" endtime="20201029 12:47:36.476"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.484" endtime="20201029 12:47:36.504"></status>
</kw>
<msg timestamp="20201029 12:47:36.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.483" endtime="20201029 12:47:36.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.506" endtime="20201029 12:47:36.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.508" endtime="20201029 12:47:36.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.480" endtime="20201029 12:47:36.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.478" endtime="20201029 12:47:36.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.517" endtime="20201029 12:47:36.804"></status>
</kw>
<msg timestamp="20201029 12:47:36.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019389875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019459875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.515" endtime="20201029 12:47:36.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019389875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019459875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.808" endtime="20201029 12:47:36.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.816" endtime="20201029 12:47:36.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.513" endtime="20201029 12:47:36.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.511" endtime="20201029 12:47:36.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:36.823" level="INFO">${RESULT} = [{'diff': 7.000000000000062e-05}, {'diff': 7.006900000000246e-05}, {'diff': 7.005499999999942e-05}, {'diff': 7.022200000000173e-05}, {'diff': 6.987500000000049e-05}, {'diff': 7.001400000000019e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:36.820" endtime="20201029 12:47:36.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:36.827" level="INFO">${ACCURACY} = {'diff': [7.000000000000062e-05, 7.006900000000246e-05, 7.005499999999942e-05, 7.022200000000173e-05, 6.987500000000049e-05, 7.001400000000019e-05, 6.986099999999745e-05, 7.043099999999927e-05, 7.0110...</msg>
<status status="PASS" starttime="20201029 12:47:36.824" endtime="20201029 12:47:36.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.831" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 12:47:36.830" endtime="20201029 12:47:36.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.834" level="INFO">VALUE: [7.000000000000062e-05, 7.006900000000246e-05, 7.005499999999942e-05, 7.022200000000173e-05, 6.987500000000049e-05, 7.001400000000019e-05, 6.986099999999745e-05, 7.043099999999927e-05, 7.01109999999977e-05, 7.02360000000013e-05, 6.980599999999865e-05, 6.993100000000224e-05, 7.027800000000001e-05, 6.97499999999969e-05, 7.027800000000001e-05, 7.044399999999937e-05, 7.047199999999851e-05, 7.017999999999955e-05, 7.016599999999998e-05, 7.004099999999985e-05, 7.018000000000302e-05, 6.979199999999908e-05, 7.040300000000013e-05, 6.973599999999733e-05, 6.96109999999972e-05, 7.037500000000099e-05, 6.980600000000212e-05, 6.966699999999895e-05, 7.030599999999915e-05, 7.011200000000065e-05, 7.030499999999967e-05, 7.026400000000044e-05, 6.962500000000024e-05, 7.040200000000066e-05, 6.988900000000006e-05, 6.954100000000282e-05, 7.005499999999942e-05, 6.962500000000024e-05, 7.002799999999976e-05, 7.045799999999894e-05, 6.956900000000196e-05, 6.973599999999733e-05, 7.00970000000016e-05, 7.041600000000023e-05, 7.036099999999795e-05, 7.004199999999933e-05, 6.957000000000144e-05, 7.017999999999955e-05, 7.002799999999976e-05, 6.987500000000049e-05]</msg>
<status status="PASS" starttime="20201029 12:47:36.832" endtime="20201029 12:47:36.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.828" endtime="20201029 12:47:36.835"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:36.838" endtime="20201029 12:47:36.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.837" endtime="20201029 12:47:36.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.836" endtime="20201029 12:47:36.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.477" endtime="20201029 12:47:36.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.476" endtime="20201029 12:47:36.859"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.868" endtime="20201029 12:47:36.888"></status>
</kw>
<msg timestamp="20201029 12:47:36.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.866" endtime="20201029 12:47:36.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:36.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:36.890" endtime="20201029 12:47:36.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.892" endtime="20201029 12:47:36.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.863" endtime="20201029 12:47:36.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.861" endtime="20201029 12:47:36.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:36.901" endtime="20201029 12:47:37.187"></status>
</kw>
<msg timestamp="20201029 12:47:37.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020384292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020455611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:36.899" endtime="20201029 12:47:37.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020384292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020455611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:37.191" endtime="20201029 12:47:37.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.200" endtime="20201029 12:47:37.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.897" endtime="20201029 12:47:37.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.895" endtime="20201029 12:47:37.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:37.206" level="INFO">${RESULT} = [{'diff': 7.131900000000024e-05}, {'diff': 7.102800000000076e-05}, {'diff': 7.086099999999845e-05}, {'diff': 7.133399999999929e-05}, {'diff': 7.087499999999802e-05}, {'diff': 7.130599999999668e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:37.203" endtime="20201029 12:47:37.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:37.210" level="INFO">${ACCURACY} = {'diff': [7.131900000000024e-05, 7.102800000000076e-05, 7.086099999999845e-05, 7.133399999999929e-05, 7.087499999999802e-05, 7.130599999999668e-05, 7.063900000000081e-05, 7.10559999999999e-05, 7.12779...</msg>
<status status="PASS" starttime="20201029 12:47:37.207" endtime="20201029 12:47:37.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.215" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 12:47:37.214" endtime="20201029 12:47:37.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.217" level="INFO">VALUE: [7.131900000000024e-05, 7.102800000000076e-05, 7.086099999999845e-05, 7.133399999999929e-05, 7.087499999999802e-05, 7.130599999999668e-05, 7.063900000000081e-05, 7.10559999999999e-05, 7.127799999999754e-05, 7.088899999999759e-05, 7.070800000000266e-05, 7.077800000000051e-05, 7.080600000000312e-05, 7.148599999999908e-05, 7.148600000000255e-05, 7.113900000000131e-05, 7.072199999999876e-05, 7.06109999999982e-05, 7.1069e-05, 7.065300000000038e-05, 7.104200000000033e-05, 7.109699999999913e-05, 7.076400000000094e-05, 7.100000000000162e-05, 7.147199999999951e-05, 7.127800000000101e-05, 7.130600000000015e-05, 7.051400000000069e-05, 7.075000000000137e-05, 7.070799999999919e-05, 7.086100000000192e-05, 7.127700000000153e-05, 7.149999999999865e-05, 7.116600000000098e-05, 7.118100000000002e-05, 7.130600000000015e-05, 7.10559999999999e-05, 7.143100000000027e-05, 7.147199999999951e-05, 7.054199999999983e-05, 7.102800000000076e-05, 7.076400000000094e-05, 7.066699999999995e-05, 7.14300000000008e-05, 7.097199999999901e-05, 7.113899999999784e-05, 7.141599999999776e-05, 7.07910000000006e-05, 7.09300000000003e-05, 7.080599999999965e-05]</msg>
<status status="PASS" starttime="20201029 12:47:37.216" endtime="20201029 12:47:37.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.211" endtime="20201029 12:47:37.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:37.223" endtime="20201029 12:47:37.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.221" endtime="20201029 12:47:37.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.220" endtime="20201029 12:47:37.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.860" endtime="20201029 12:47:37.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:36.859" endtime="20201029 12:47:37.243"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.252" endtime="20201029 12:47:37.271"></status>
</kw>
<msg timestamp="20201029 12:47:37.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.250" endtime="20201029 12:47:37.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.272" endtime="20201029 12:47:37.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.275" endtime="20201029 12:47:37.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.248" endtime="20201029 12:47:37.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.246" endtime="20201029 12:47:37.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.284" endtime="20201029 12:47:37.569"></status>
</kw>
<msg timestamp="20201029 12:47:37.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019443139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019515069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:37.282" endtime="20201029 12:47:37.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019443139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019515069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:37.573" endtime="20201029 12:47:37.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.582" endtime="20201029 12:47:37.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.279" endtime="20201029 12:47:37.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.278" endtime="20201029 12:47:37.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:37.588" level="INFO">${RESULT} = [{'diff': 7.192999999999783e-05}, {'diff': 7.231899999999777e-05}, {'diff': 7.15690000000005e-05}, {'diff': 7.190300000000163e-05}, {'diff': 7.20829999999971e-05}, {'diff': 7.154200000000083e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:37.585" endtime="20201029 12:47:37.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:37.593" level="INFO">${ACCURACY} = {'diff': [7.192999999999783e-05, 7.231899999999777e-05, 7.15690000000005e-05, 7.190300000000163e-05, 7.20829999999971e-05, 7.154200000000083e-05, 7.198599999999958e-05, 7.17230000000027e-05, 7.1777999...</msg>
<status status="PASS" starttime="20201029 12:47:37.589" endtime="20201029 12:47:37.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.597" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 12:47:37.596" endtime="20201029 12:47:37.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.600" level="INFO">VALUE: [7.192999999999783e-05, 7.231899999999777e-05, 7.15690000000005e-05, 7.190300000000163e-05, 7.20829999999971e-05, 7.154200000000083e-05, 7.198599999999958e-05, 7.17230000000027e-05, 7.177799999999804e-05, 7.21109999999997e-05, 7.236099999999995e-05, 7.218100000000102e-05, 7.218100000000102e-05, 7.173599999999933e-05, 7.249999999999965e-05, 7.233400000000029e-05, 7.22499999999994e-05, 7.248600000000008e-05, 7.23049999999982e-05, 7.209700000000013e-05, 7.192999999999783e-05, 7.190299999999816e-05, 7.172199999999976e-05, 7.159699999999963e-05, 7.173599999999933e-05, 7.216700000000145e-05, 7.184699999999988e-05, 7.240300000000213e-05, 7.237499999999952e-05, 7.237499999999952e-05, 7.191699999999773e-05, 7.217999999999808e-05, 7.209700000000013e-05, 7.159699999999963e-05, 7.177699999999856e-05, 7.237499999999952e-05, 7.197200000000001e-05, 7.219400000000112e-05, 7.237499999999952e-05, 7.191699999999773e-05, 7.200000000000262e-05, 7.165299999999791e-05, 7.176399999999847e-05, 7.198600000000305e-05, 7.219500000000059e-05, 7.212499999999927e-05, 7.205500000000142e-05, 7.15690000000005e-05, 7.199999999999915e-05, 7.229099999999863e-05]</msg>
<status status="PASS" starttime="20201029 12:47:37.599" endtime="20201029 12:47:37.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.594" endtime="20201029 12:47:37.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:37.605" endtime="20201029 12:47:37.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.603" endtime="20201029 12:47:37.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.602" endtime="20201029 12:47:37.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.244" endtime="20201029 12:47:37.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.244" endtime="20201029 12:47:37.625"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.634" endtime="20201029 12:47:37.654"></status>
</kw>
<msg timestamp="20201029 12:47:37.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.632" endtime="20201029 12:47:37.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.655" endtime="20201029 12:47:37.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.658" endtime="20201029 12:47:37.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.630" endtime="20201029 12:47:37.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.628" endtime="20201029 12:47:37.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.666" endtime="20201029 12:47:37.952"></status>
</kw>
<msg timestamp="20201029 12:47:37.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019363861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019436917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:37.665" endtime="20201029 12:47:37.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019363861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019436917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:37.956" endtime="20201029 12:47:37.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.965" endtime="20201029 12:47:37.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.662" endtime="20201029 12:47:37.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.661" endtime="20201029 12:47:37.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:37.971" level="INFO">${RESULT} = [{'diff': 7.30560000000019e-05}, {'diff': 7.316599999999951e-05}, {'diff': 7.280599999999818e-05}, {'diff': 7.254200000000183e-05}, {'diff': 7.338900000000009e-05}, {'diff': 7.305599999999843e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:37.968" endtime="20201029 12:47:37.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:37.975" level="INFO">${ACCURACY} = {'diff': [7.30560000000019e-05, 7.316599999999951e-05, 7.280599999999818e-05, 7.254200000000183e-05, 7.338900000000009e-05, 7.305599999999843e-05, 7.327799999999954e-05, 7.340299999999966e-05, 7.29730...</msg>
<status status="PASS" starttime="20201029 12:47:37.972" endtime="20201029 12:47:37.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.979" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 12:47:37.978" endtime="20201029 12:47:37.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.982" level="INFO">VALUE: [7.30560000000019e-05, 7.316599999999951e-05, 7.280599999999818e-05, 7.254200000000183e-05, 7.338900000000009e-05, 7.305599999999843e-05, 7.327799999999954e-05, 7.340299999999966e-05, 7.297300000000048e-05, 7.280599999999818e-05, 7.280500000000217e-05, 7.317999999999908e-05, 7.338900000000009e-05, 7.305500000000242e-05, 7.33049999999992e-05, 7.305500000000242e-05, 7.259700000000063e-05, 7.263899999999934e-05, 7.304200000000233e-05, 7.284700000000088e-05, 7.329200000000258e-05, 7.25699999999975e-05, 7.273600000000033e-05, 7.270800000000119e-05, 7.298599999999711e-05, 7.313899999999984e-05, 7.316699999999898e-05, 7.323600000000083e-05, 7.336100000000095e-05, 7.263899999999934e-05, 7.341600000000323e-05, 7.30829999999981e-05, 7.316699999999898e-05, 7.29170000000022e-05, 7.259699999999716e-05, 7.287500000000002e-05, 7.351400000000022e-05, 7.334700000000138e-05, 7.258400000000054e-05, 7.345899999999794e-05, 7.273600000000033e-05, 7.29170000000022e-05, 7.318099999999855e-05, 7.349999999999718e-05, 7.273600000000033e-05, 7.317999999999908e-05, 7.330500000000267e-05, 7.305499999999895e-05, 7.312500000000027e-05, 7.327800000000301e-05]</msg>
<status status="PASS" starttime="20201029 12:47:37.980" endtime="20201029 12:47:37.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.976" endtime="20201029 12:47:37.983"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:37.987" endtime="20201029 12:47:38.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.985" endtime="20201029 12:47:38.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.984" endtime="20201029 12:47:38.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.626" endtime="20201029 12:47:38.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.626" endtime="20201029 12:47:38.007"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.016" endtime="20201029 12:47:38.037"></status>
</kw>
<msg timestamp="20201029 12:47:38.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.014" endtime="20201029 12:47:38.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.038" endtime="20201029 12:47:38.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.040" endtime="20201029 12:47:38.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.012" endtime="20201029 12:47:38.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.010" endtime="20201029 12:47:38.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.049" endtime="20201029 12:47:38.335"></status>
</kw>
<msg timestamp="20201029 12:47:38.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02051575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020589403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:38.048" endtime="20201029 12:47:38.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02051575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020589403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:38.339" endtime="20201029 12:47:38.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.347" endtime="20201029 12:47:38.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.045" endtime="20201029 12:47:38.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.044" endtime="20201029 12:47:38.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:38.354" level="INFO">${RESULT} = [{'diff': 7.365299999999991e-05}, {'diff': 7.37500000000009e-05}, {'diff': 7.40560000000029e-05}, {'diff': 7.391699999999973e-05}, {'diff': 7.366700000000295e-05}, {'diff': 7.369399999999915e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:38.351" endtime="20201029 12:47:38.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:38.358" level="INFO">${ACCURACY} = {'diff': [7.365299999999991e-05, 7.37500000000009e-05, 7.40560000000029e-05, 7.391699999999973e-05, 7.366700000000295e-05, 7.369399999999915e-05, 7.373600000000133e-05, 7.38049999999997e-05, 7.3986000...</msg>
<status status="PASS" starttime="20201029 12:47:38.355" endtime="20201029 12:47:38.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.362" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 12:47:38.361" endtime="20201029 12:47:38.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.365" level="INFO">VALUE: [7.365299999999991e-05, 7.37500000000009e-05, 7.40560000000029e-05, 7.391699999999973e-05, 7.366700000000295e-05, 7.369399999999915e-05, 7.373600000000133e-05, 7.38049999999997e-05, 7.398600000000158e-05, 7.405599999999943e-05, 7.443000000000033e-05, 7.400000000000115e-05, 7.423599999999836e-05, 7.384699999999841e-05, 7.359800000000111e-05, 7.437500000000152e-05, 7.436100000000195e-05, 7.354199999999936e-05, 7.380599999999918e-05, 7.381999999999875e-05, 7.400000000000115e-05, 7.418099999999955e-05, 7.441700000000023e-05, 7.361099999999773e-05, 7.409699999999866e-05, 7.37500000000009e-05, 7.420799999999922e-05, 7.36249999999973e-05, 7.35560000000024e-05, 7.44439999999999e-05, 7.363900000000034e-05, 7.39309999999993e-05, 7.372300000000123e-05, 7.4069999999999e-05, 7.407000000000247e-05, 7.354199999999936e-05, 7.41110000000017e-05, 7.370799999999872e-05, 7.399999999999768e-05, 7.436100000000195e-05, 7.416600000000051e-05, 7.366600000000001e-05, 7.405499999999995e-05, 7.443000000000033e-05, 7.44439999999999e-05, 7.447199999999904e-05, 7.39309999999993e-05, 7.454099999999741e-05, 7.388900000000059e-05, 7.402800000000029e-05]</msg>
<status status="PASS" starttime="20201029 12:47:38.363" endtime="20201029 12:47:38.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.359" endtime="20201029 12:47:38.367"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:38.370" endtime="20201029 12:47:38.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.369" endtime="20201029 12:47:38.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.368" endtime="20201029 12:47:38.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.008" endtime="20201029 12:47:38.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.008" endtime="20201029 12:47:38.391"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.400" endtime="20201029 12:47:38.421"></status>
</kw>
<msg timestamp="20201029 12:47:38.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.399" endtime="20201029 12:47:38.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.422" endtime="20201029 12:47:38.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.425" endtime="20201029 12:47:38.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.396" endtime="20201029 12:47:38.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.394" endtime="20201029 12:47:38.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.433" endtime="20201029 12:47:38.720"></status>
</kw>
<msg timestamp="20201029 12:47:38.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020377889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020452736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:38.432" endtime="20201029 12:47:38.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020377889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020452736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:38.727" endtime="20201029 12:47:38.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.740" endtime="20201029 12:47:38.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.429" endtime="20201029 12:47:38.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.428" endtime="20201029 12:47:38.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:38.746" level="INFO">${RESULT} = [{'diff': 7.484699999999941e-05}, {'diff': 7.541700000000123e-05}, {'diff': 7.534699999999991e-05}, {'diff': 7.474999999999843e-05}, {'diff': 7.540300000000166e-05}, {'diff': 7.459699999999916e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:38.743" endtime="20201029 12:47:38.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:38.751" level="INFO">${ACCURACY} = {'diff': [7.484699999999941e-05, 7.541700000000123e-05, 7.534699999999991e-05, 7.474999999999843e-05, 7.540300000000166e-05, 7.459699999999916e-05, 7.532000000000025e-05, 7.459699999999916e-05, 7.4958...</msg>
<status status="PASS" starttime="20201029 12:47:38.747" endtime="20201029 12:47:38.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.756" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 12:47:38.755" endtime="20201029 12:47:38.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.758" level="INFO">VALUE: [7.484699999999941e-05, 7.541700000000123e-05, 7.534699999999991e-05, 7.474999999999843e-05, 7.540300000000166e-05, 7.459699999999916e-05, 7.532000000000025e-05, 7.459699999999916e-05, 7.495899999999944e-05, 7.473599999999886e-05, 7.536199999999896e-05, 7.497200000000301e-05, 7.491600000000126e-05, 7.551400000000222e-05, 7.49440000000004e-05, 7.477800000000104e-05, 7.454099999999741e-05, 7.498599999999911e-05, 7.542999999999786e-05, 7.461099999999873e-05, 7.487499999999855e-05, 7.455599999999993e-05, 7.519500000000012e-05, 7.548599999999961e-05, 7.45699999999995e-05, 7.49310000000003e-05, 7.523699999999883e-05, 7.49029999999977e-05, 7.484699999999941e-05, 7.479200000000061e-05, 7.455500000000045e-05, 7.515299999999794e-05, 7.466599999999754e-05, 7.51249999999988e-05, 7.486099999999898e-05, 7.481900000000027e-05, 7.505600000000043e-05, 7.45829999999996e-05, 7.516700000000098e-05, 7.548599999999961e-05, 7.551399999999875e-05, 7.498599999999911e-05, 7.455599999999993e-05, 7.463800000000187e-05, 7.529100000000163e-05, 7.481900000000027e-05, 7.527700000000206e-05, 7.520800000000022e-05, 7.522199999999979e-05, 7.459699999999916e-05]</msg>
<status status="PASS" starttime="20201029 12:47:38.757" endtime="20201029 12:47:38.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.752" endtime="20201029 12:47:38.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:38.764" endtime="20201029 12:47:38.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.762" endtime="20201029 12:47:38.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.761" endtime="20201029 12:47:38.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.392" endtime="20201029 12:47:38.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.391" endtime="20201029 12:47:38.785"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.793" endtime="20201029 12:47:38.812"></status>
</kw>
<msg timestamp="20201029 12:47:38.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.791" endtime="20201029 12:47:38.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:38.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:38.814" endtime="20201029 12:47:38.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.816" endtime="20201029 12:47:38.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.789" endtime="20201029 12:47:38.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.787" endtime="20201029 12:47:38.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:38.825" endtime="20201029 12:47:39.112"></status>
</kw>
<msg timestamp="20201029 12:47:39.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019417458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019493806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:38.824" endtime="20201029 12:47:39.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019417458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019493806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.116" endtime="20201029 12:47:39.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.124" endtime="20201029 12:47:39.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.821" endtime="20201029 12:47:39.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.819" endtime="20201029 12:47:39.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:39.130" level="INFO">${RESULT} = [{'diff': 7.634800000000039e-05}, {'diff': 7.547299999999951e-05}, {'diff': 7.651399999999975e-05}, {'diff': 7.579099999999866e-05}, {'diff': 7.561099999999973e-05}, {'diff': 7.637500000000005e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:39.127" endtime="20201029 12:47:39.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:39.135" level="INFO">${ACCURACY} = {'diff': [7.634800000000039e-05, 7.547299999999951e-05, 7.651399999999975e-05, 7.579099999999866e-05, 7.561099999999973e-05, 7.637500000000005e-05, 7.641599999999929e-05, 7.586099999999998e-05, 7.5749...</msg>
<status status="PASS" starttime="20201029 12:47:39.131" endtime="20201029 12:47:39.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.139" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 12:47:39.138" endtime="20201029 12:47:39.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.141" level="INFO">VALUE: [7.634800000000039e-05, 7.547299999999951e-05, 7.651399999999975e-05, 7.579099999999866e-05, 7.561099999999973e-05, 7.637500000000005e-05, 7.641599999999929e-05, 7.586099999999998e-05, 7.574999999999943e-05, 7.629199999999864e-05, 7.55700000000005e-05, 7.598600000000011e-05, 7.55700000000005e-05, 7.597200000000054e-05, 7.587500000000302e-05, 7.565199999999897e-05, 7.642999999999886e-05, 7.608299999999762e-05, 7.619399999999818e-05, 7.568000000000158e-05, 7.63189999999983e-05, 7.59440000000014e-05, 7.619399999999818e-05, 7.622200000000079e-05, 7.584700000000041e-05, 7.647300000000051e-05, 7.577800000000204e-05, 7.549999999999918e-05, 7.648600000000061e-05, 7.624999999999993e-05, 7.64029999999992e-05, 7.643099999999833e-05, 7.566700000000148e-05, 7.618100000000155e-05, 7.627799999999907e-05, 7.591599999999879e-05, 7.598600000000011e-05, 7.593000000000183e-05, 7.648600000000061e-05, 7.613899999999937e-05, 7.616699999999851e-05, 7.641700000000223e-05, 7.63050000000022e-05, 7.600000000000315e-05, 7.558400000000007e-05, 7.579200000000161e-05, 7.583400000000032e-05, 7.5763999999999e-05, 7.618099999999808e-05, 7.593000000000183e-05]</msg>
<status status="PASS" starttime="20201029 12:47:39.140" endtime="20201029 12:47:39.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.135" endtime="20201029 12:47:39.142"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:39.146" endtime="20201029 12:47:39.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.145" endtime="20201029 12:47:39.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.143" endtime="20201029 12:47:39.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.785" endtime="20201029 12:47:39.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:38.785" endtime="20201029 12:47:39.167"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.175" endtime="20201029 12:47:39.198"></status>
</kw>
<msg timestamp="20201029 12:47:39.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.174" endtime="20201029 12:47:39.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.199" endtime="20201029 12:47:39.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.202" endtime="20201029 12:47:39.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.171" endtime="20201029 12:47:39.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.169" endtime="20201029 12:47:39.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.211" endtime="20201029 12:47:39.496"></status>
</kw>
<msg timestamp="20201029 12:47:39.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022629083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022706264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.209" endtime="20201029 12:47:39.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022629083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022706264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.500" endtime="20201029 12:47:39.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.508" endtime="20201029 12:47:39.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.207" endtime="20201029 12:47:39.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.205" endtime="20201029 12:47:39.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:39.515" level="INFO">${RESULT} = [{'diff': 7.718099999999908e-05}, {'diff': 7.654199999999889e-05}, {'diff': 7.649999999999671e-05}, {'diff': 7.702700000000035e-05}, {'diff': 7.730600000000268e-05}, {'diff': 7.717999999999961e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:39.511" endtime="20201029 12:47:39.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:39.519" level="INFO">${ACCURACY} = {'diff': [7.718099999999908e-05, 7.654199999999889e-05, 7.649999999999671e-05, 7.702700000000035e-05, 7.730600000000268e-05, 7.717999999999961e-05, 7.717999999999961e-05, 7.675000000000043e-05, 7.7291...</msg>
<status status="PASS" starttime="20201029 12:47:39.516" endtime="20201029 12:47:39.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.523" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 12:47:39.522" endtime="20201029 12:47:39.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.525" level="INFO">VALUE: [7.718099999999908e-05, 7.654199999999889e-05, 7.649999999999671e-05, 7.702700000000035e-05, 7.730600000000268e-05, 7.717999999999961e-05, 7.717999999999961e-05, 7.675000000000043e-05, 7.729100000000017e-05, 7.691699999999926e-05, 7.698600000000111e-05, 7.706899999999905e-05, 7.750000000000118e-05, 7.695899999999797e-05, 7.687500000000055e-05, 7.668099999999858e-05, 7.736099999999801e-05, 7.711100000000123e-05, 7.663899999999987e-05, 7.665199999999997e-05, 7.667999999999911e-05, 7.655499999999898e-05, 7.691599999999979e-05, 7.670800000000172e-05, 7.727800000000007e-05, 7.69029999999997e-05, 7.69440000000024e-05, 7.705599999999896e-05, 7.718099999999908e-05, 7.692999999999936e-05, 7.673600000000086e-05, 7.675000000000043e-05, 7.730599999999921e-05, 7.711099999999776e-05, 7.652799999999932e-05, 7.748700000000108e-05, 7.684700000000141e-05, 7.720799999999875e-05, 7.715200000000047e-05, 7.72640000000005e-05, 7.679099999999967e-05, 7.691700000000273e-05, 7.748600000000161e-05, 7.6764e-05, 7.665299999999944e-05, 7.737500000000105e-05, 7.738899999999715e-05, 7.719500000000212e-05, 7.661099999999726e-05, 7.661100000000073e-05]</msg>
<status status="PASS" starttime="20201029 12:47:39.524" endtime="20201029 12:47:39.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.519" endtime="20201029 12:47:39.527"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:39.531" endtime="20201029 12:47:39.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.529" endtime="20201029 12:47:39.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.528" endtime="20201029 12:47:39.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.168" endtime="20201029 12:47:39.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.167" endtime="20201029 12:47:39.552"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.560" endtime="20201029 12:47:39.580"></status>
</kw>
<msg timestamp="20201029 12:47:39.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.559" endtime="20201029 12:47:39.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.582" endtime="20201029 12:47:39.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.584" endtime="20201029 12:47:39.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.556" endtime="20201029 12:47:39.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.554" endtime="20201029 12:47:39.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.593" endtime="20201029 12:47:39.879"></status>
</kw>
<msg timestamp="20201029 12:47:39.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019457083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019535389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.592" endtime="20201029 12:47:39.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019457083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019535389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.883" endtime="20201029 12:47:39.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.891" endtime="20201029 12:47:39.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.589" endtime="20201029 12:47:39.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.587" endtime="20201029 12:47:39.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:39.897" level="INFO">${RESULT} = [{'diff': 7.830600000000021e-05}, {'diff': 7.777800000000057e-05}, {'diff': 7.816599999999757e-05}, {'diff': 7.790200000000122e-05}, {'diff': 7.786200000000146e-05}, {'diff': 7.769399999999968e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:39.894" endtime="20201029 12:47:39.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:39.902" level="INFO">${ACCURACY} = {'diff': [7.830600000000021e-05, 7.777800000000057e-05, 7.816599999999757e-05, 7.790200000000122e-05, 7.786200000000146e-05, 7.769399999999968e-05, 7.805599999999996e-05, 7.847199999999957e-05, 7.8207...</msg>
<status status="PASS" starttime="20201029 12:47:39.898" endtime="20201029 12:47:39.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.907" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 12:47:39.906" endtime="20201029 12:47:39.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.909" level="INFO">VALUE: [7.830600000000021e-05, 7.777800000000057e-05, 7.816599999999757e-05, 7.790200000000122e-05, 7.786200000000146e-05, 7.769399999999968e-05, 7.805599999999996e-05, 7.847199999999957e-05, 7.820799999999975e-05, 7.770800000000272e-05, 7.833399999999935e-05, 7.836100000000248e-05, 7.808299999999962e-05, 7.830600000000021e-05, 7.849999999999871e-05, 7.758400000000207e-05, 7.761099999999826e-05, 7.761099999999826e-05, 7.837499999999858e-05, 7.806900000000006e-05, 7.816600000000104e-05, 7.761100000000173e-05, 7.79579999999995e-05, 7.780500000000024e-05, 7.798599999999864e-05, 7.756899999999955e-05, 7.822199999999932e-05, 7.838899999999815e-05, 7.848599999999914e-05, 7.80839999999991e-05, 7.841700000000076e-05, 7.830599999999674e-05, 7.81389999999979e-05, 7.847199999999957e-05, 7.836099999999901e-05, 7.774999999999796e-05, 7.770899999999872e-05, 7.754100000000042e-05, 7.797200000000254e-05, 7.811100000000223e-05, 7.799999999999821e-05, 7.808299999999962e-05, 7.818100000000008e-05, 7.837500000000205e-05, 7.784699999999894e-05, 7.756999999999903e-05, 7.833399999999935e-05, 7.773600000000186e-05, 7.784700000000241e-05, 7.806900000000006e-05]</msg>
<status status="PASS" starttime="20201029 12:47:39.908" endtime="20201029 12:47:39.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.903" endtime="20201029 12:47:39.910"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:39.914" endtime="20201029 12:47:39.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.912" endtime="20201029 12:47:39.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.911" endtime="20201029 12:47:39.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.552" endtime="20201029 12:47:39.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.552" endtime="20201029 12:47:39.935"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.943" endtime="20201029 12:47:39.963"></status>
</kw>
<msg timestamp="20201029 12:47:39.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.942" endtime="20201029 12:47:39.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:39.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:39.965" endtime="20201029 12:47:39.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.967" endtime="20201029 12:47:39.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.939" endtime="20201029 12:47:39.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.937" endtime="20201029 12:47:39.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:39.976" endtime="20201029 12:47:40.263"></status>
</kw>
<msg timestamp="20201029 12:47:40.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019388611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019468069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:39.974" endtime="20201029 12:47:40.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019388611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019468069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:40.268" endtime="20201029 12:47:40.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.276" endtime="20201029 12:47:40.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.972" endtime="20201029 12:47:40.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.970" endtime="20201029 12:47:40.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:40.282" level="INFO">${RESULT} = [{'diff': 7.9458000000001e-05}, {'diff': 7.874999999999896e-05}, {'diff': 7.872199999999982e-05}, {'diff': 7.8764000000002e-05}, {'diff': 7.906900000000106e-05}, {'diff': 7.952800000000232e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 12:47:40.279" endtime="20201029 12:47:40.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:40.286" level="INFO">${ACCURACY} = {'diff': [7.9458000000001e-05, 7.874999999999896e-05, 7.872199999999982e-05, 7.8764000000002e-05, 7.906900000000106e-05, 7.952800000000232e-05, 7.943100000000133e-05, 7.854199999999742e-05, 7.86250000...</msg>
<status status="PASS" starttime="20201029 12:47:40.283" endtime="20201029 12:47:40.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.291" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 12:47:40.290" endtime="20201029 12:47:40.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.293" level="INFO">VALUE: [7.9458000000001e-05, 7.874999999999896e-05, 7.872199999999982e-05, 7.8764000000002e-05, 7.906900000000106e-05, 7.952800000000232e-05, 7.943100000000133e-05, 7.854199999999742e-05, 7.86250000000023e-05, 7.951399999999928e-05, 7.897200000000007e-05, 7.932000000000078e-05, 7.90970000000002e-05, 7.949999999999971e-05, 7.912499999999933e-05, 7.943099999999786e-05, 7.884699999999994e-05, 7.936100000000001e-05, 7.855499999999752e-05, 7.894400000000093e-05, 7.897299999999954e-05, 7.920800000000075e-05, 7.868100000000058e-05, 7.912499999999933e-05, 7.857000000000003e-05, 7.899999999999921e-05, 7.874999999999896e-05, 7.904099999999845e-05, 7.938899999999915e-05, 7.858400000000307e-05, 7.924999999999946e-05, 7.902699999999888e-05, 7.875000000000243e-05, 7.922199999999685e-05, 7.87779999999981e-05, 7.87909999999982e-05, 7.941599999999882e-05, 7.870899999999972e-05, 7.868100000000058e-05, 7.923599999999989e-05, 7.919500000000065e-05, 7.936100000000001e-05, 7.865300000000144e-05, 7.911199999999924e-05, 7.938799999999968e-05, 7.879200000000114e-05, 7.898599999999964e-05, 7.898599999999964e-05, 7.930500000000174e-05, 7.879100000000167e-05]</msg>
<status status="PASS" starttime="20201029 12:47:40.292" endtime="20201029 12:47:40.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.287" endtime="20201029 12:47:40.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:40.298" endtime="20201029 12:47:40.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.296" endtime="20201029 12:47:40.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.295" endtime="20201029 12:47:40.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.935" endtime="20201029 12:47:40.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:39.935" endtime="20201029 12:47:40.319"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.327" endtime="20201029 12:47:40.348"></status>
</kw>
<msg timestamp="20201029 12:47:40.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.326" endtime="20201029 12:47:40.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.350" endtime="20201029 12:47:40.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.352" endtime="20201029 12:47:40.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.323" endtime="20201029 12:47:40.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.321" endtime="20201029 12:47:40.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.361" endtime="20201029 12:47:40.647"></status>
</kw>
<msg timestamp="20201029 12:47:40.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020398944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:40.360" endtime="20201029 12:47:40.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020319181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020398944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:40.651" endtime="20201029 12:47:40.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.659" endtime="20201029 12:47:40.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.357" endtime="20201029 12:47:40.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.355" endtime="20201029 12:47:40.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:40.666" level="INFO">${RESULT} = [{'diff': 7.976300000000006e-05}, {'diff': 7.98190000000018e-05}, {'diff': 7.956900000000156e-05}, {'diff': 8.038900000000015e-05}, {'diff': 8.037500000000058e-05}, {'diff': 8.01109999999973e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:40.663" endtime="20201029 12:47:40.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:40.670" level="INFO">${ACCURACY} = {'diff': [7.976300000000006e-05, 7.98190000000018e-05, 7.956900000000156e-05, 8.038900000000015e-05, 8.037500000000058e-05, 8.01109999999973e-05, 8.004200000000239e-05, 8.022200000000132e-05, 8.029199...</msg>
<status status="PASS" starttime="20201029 12:47:40.667" endtime="20201029 12:47:40.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.674" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 12:47:40.673" endtime="20201029 12:47:40.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.677" level="INFO">VALUE: [7.976300000000006e-05, 7.98190000000018e-05, 7.956900000000156e-05, 8.038900000000015e-05, 8.037500000000058e-05, 8.01109999999973e-05, 8.004200000000239e-05, 8.022200000000132e-05, 8.029199999999917e-05, 8.011100000000076e-05, 7.980599999999824e-05, 7.993100000000183e-05, 7.955600000000146e-05, 8.023700000000036e-05, 7.980500000000224e-05, 8.01389999999999e-05, 8.030499999999927e-05, 7.97909999999992e-05, 8.006899999999859e-05, 8.023600000000089e-05, 7.955600000000146e-05, 7.988899999999965e-05, 7.965299999999897e-05, 8.006899999999859e-05, 8.023599999999742e-05, 8.048600000000114e-05, 8.008300000000163e-05, 8.016699999999904e-05, 7.956900000000156e-05, 8.01109999999973e-05, 7.990199999999975e-05, 8.048600000000114e-05, 8.012500000000033e-05, 8.029100000000317e-05, 7.981899999999834e-05, 8.048600000000114e-05, 8.029199999999917e-05, 7.957000000000103e-05, 8.01389999999999e-05, 8.040299999999972e-05, 7.995900000000097e-05, 8.000000000000021e-05, 7.969499999999768e-05, 8.017999999999914e-05, 7.991599999999932e-05, 8.042999999999939e-05, 8.005499999999902e-05, 8.036100000000101e-05, 8.017999999999914e-05, 8.037499999999712e-05]</msg>
<status status="PASS" starttime="20201029 12:47:40.675" endtime="20201029 12:47:40.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.671" endtime="20201029 12:47:40.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:40.682" endtime="20201029 12:47:40.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.681" endtime="20201029 12:47:40.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.680" endtime="20201029 12:47:40.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.319" endtime="20201029 12:47:40.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.319" endtime="20201029 12:47:40.703"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.712" endtime="20201029 12:47:40.731"></status>
</kw>
<msg timestamp="20201029 12:47:40.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.710" endtime="20201029 12:47:40.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:40.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:40.733" endtime="20201029 12:47:40.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.735" endtime="20201029 12:47:40.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.708" endtime="20201029 12:47:40.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.706" endtime="20201029 12:47:40.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:40.745" endtime="20201029 12:47:41.030"></status>
</kw>
<msg timestamp="20201029 12:47:41.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:40.743" endtime="20201029 12:47:41.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:41.034" endtime="20201029 12:47:41.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.042" endtime="20201029 12:47:41.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.740" endtime="20201029 12:47:41.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.738" endtime="20201029 12:47:41.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:41.049" level="INFO">${RESULT} = [{'diff': 8.130599999999974e-05}, {'diff': 8.088799999999771e-05}, {'diff': 8.073599999999792e-05}, {'diff': 8.072299999999782e-05}, {'diff': 8.124999999999799e-05}, {'diff': 8.100000000000121e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:41.046" endtime="20201029 12:47:41.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:41.054" level="INFO">${ACCURACY} = {'diff': [8.130599999999974e-05, 8.088799999999771e-05, 8.073599999999792e-05, 8.072299999999782e-05, 8.124999999999799e-05, 8.100000000000121e-05, 8.073599999999792e-05, 8.143000000000039e-05, 8.1207...</msg>
<status status="PASS" starttime="20201029 12:47:41.050" endtime="20201029 12:47:41.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.058" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 12:47:41.057" endtime="20201029 12:47:41.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.061" level="INFO">VALUE: [8.130599999999974e-05, 8.088799999999771e-05, 8.073599999999792e-05, 8.072299999999782e-05, 8.124999999999799e-05, 8.100000000000121e-05, 8.073599999999792e-05, 8.143000000000039e-05, 8.120799999999928e-05, 8.112500000000133e-05, 8.054199999999942e-05, 8.14170000000003e-05, 8.073599999999792e-05, 8.133399999999888e-05, 8.094499999999893e-05, 8.106999999999906e-05, 8.124999999999799e-05, 8.143099999999986e-05, 8.147299999999857e-05, 8.11109999999983e-05, 8.088799999999771e-05, 8.044400000000243e-05, 8.141600000000082e-05, 8.059699999999823e-05, 8.105500000000002e-05, 8.067999999999964e-05, 8.056899999999909e-05, 8.06390000000004e-05, 8.051400000000028e-05, 8.06390000000004e-05, 8.133400000000235e-05, 8.148599999999867e-05, 8.080599999999924e-05, 8.147299999999857e-05, 8.088799999999771e-05, 8.144399999999996e-05, 8.120800000000275e-05, 8.101400000000078e-05, 8.109699999999873e-05, 8.066699999999954e-05, 8.14719999999991e-05, 8.087499999999762e-05, 8.075000000000096e-05, 8.051400000000028e-05, 8.09450000000024e-05, 8.108399999999863e-05, 8.143099999999986e-05, 8.081899999999934e-05, 8.083400000000185e-05, 8.134699999999898e-05]</msg>
<status status="PASS" starttime="20201029 12:47:41.059" endtime="20201029 12:47:41.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.055" endtime="20201029 12:47:41.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:41.066" endtime="20201029 12:47:41.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.064" endtime="20201029 12:47:41.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.063" endtime="20201029 12:47:41.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.704" endtime="20201029 12:47:41.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:40.703" endtime="20201029 12:47:41.086"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.095" endtime="20201029 12:47:41.114"></status>
</kw>
<msg timestamp="20201029 12:47:41.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.093" endtime="20201029 12:47:41.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.116" endtime="20201029 12:47:41.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.118" endtime="20201029 12:47:41.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.091" endtime="20201029 12:47:41.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.089" endtime="20201029 12:47:41.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.127" endtime="20201029 12:47:41.414"></status>
</kw>
<msg timestamp="20201029 12:47:41.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019456153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019538069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:41.126" endtime="20201029 12:47:41.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019456153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019538069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:41.418" endtime="20201029 12:47:41.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.426" endtime="20201029 12:47:41.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.123" endtime="20201029 12:47:41.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.121" endtime="20201029 12:47:41.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:41.433" level="INFO">${RESULT} = [{'diff': 8.191600000000132e-05}, {'diff': 8.2152999999998e-05}, {'diff': 8.206900000000059e-05}, {'diff': 8.218000000000114e-05}, {'diff': 8.166600000000107e-05}, {'diff': 8.244400000000096e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:41.429" endtime="20201029 12:47:41.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:41.437" level="INFO">${ACCURACY} = {'diff': [8.191600000000132e-05, 8.2152999999998e-05, 8.206900000000059e-05, 8.218000000000114e-05, 8.166600000000107e-05, 8.244400000000096e-05, 8.169399999999674e-05, 8.170799999999978e-05, 8.216700...</msg>
<status status="PASS" starttime="20201029 12:47:41.434" endtime="20201029 12:47:41.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.441" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 12:47:41.440" endtime="20201029 12:47:41.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.444" level="INFO">VALUE: [8.191600000000132e-05, 8.2152999999998e-05, 8.206900000000059e-05, 8.218000000000114e-05, 8.166600000000107e-05, 8.244400000000096e-05, 8.169399999999674e-05, 8.170799999999978e-05, 8.216700000000104e-05, 8.174999999999849e-05, 8.248599999999967e-05, 8.232000000000031e-05, 8.161100000000227e-05, 8.162499999999837e-05, 8.179200000000067e-05, 8.184699999999948e-05, 8.187500000000208e-05, 8.168000000000064e-05, 8.19719999999996e-05, 8.213899999999844e-05, 8.224999999999899e-05, 8.188899999999819e-05, 8.230600000000074e-05, 8.156999999999956e-05, 8.16109999999988e-05, 8.195800000000003e-05, 8.212500000000234e-05, 8.188899999999819e-05, 8.19719999999996e-05, 8.173600000000239e-05, 8.180500000000077e-05, 8.251400000000228e-05, 8.177699999999816e-05, 8.193000000000089e-05, 8.163899999999794e-05, 8.24170000000013e-05, 8.213899999999844e-05, 8.155599999999999e-05, 8.184699999999948e-05, 8.180600000000024e-05, 8.174999999999849e-05, 8.219500000000018e-05, 8.212499999999887e-05, 8.151400000000128e-05, 8.198599999999917e-05, 8.249999999999924e-05, 8.159699999999923e-05, 8.173600000000239e-05, 8.180500000000077e-05, 8.154200000000042e-05]</msg>
<status status="PASS" starttime="20201029 12:47:41.443" endtime="20201029 12:47:41.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.438" endtime="20201029 12:47:41.450"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:41.454" endtime="20201029 12:47:41.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.453" endtime="20201029 12:47:41.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.451" endtime="20201029 12:47:41.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.087" endtime="20201029 12:47:41.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.087" endtime="20201029 12:47:41.475"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.483" endtime="20201029 12:47:41.504"></status>
</kw>
<msg timestamp="20201029 12:47:41.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.482" endtime="20201029 12:47:41.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.506" endtime="20201029 12:47:41.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.508" endtime="20201029 12:47:41.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.479" endtime="20201029 12:47:41.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.477" endtime="20201029 12:47:41.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.517" endtime="20201029 12:47:41.802"></status>
</kw>
<msg timestamp="20201029 12:47:41.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020266319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020349583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:41.516" endtime="20201029 12:47:41.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020266319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020349583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:41.806" endtime="20201029 12:47:41.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.815" endtime="20201029 12:47:41.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.513" endtime="20201029 12:47:41.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.511" endtime="20201029 12:47:41.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:41.821" level="INFO">${RESULT} = [{'diff': 8.326399999999956e-05}, {'diff': 8.26659999999986e-05}, {'diff': 8.350000000000024e-05}, {'diff': 8.255500000000152e-05}, {'diff': 8.3152999999999e-05}, {'diff': 8.32919999999987e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 12:47:41.818" endtime="20201029 12:47:41.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:41.825" level="INFO">${ACCURACY} = {'diff': [8.326399999999956e-05, 8.26659999999986e-05, 8.350000000000024e-05, 8.255500000000152e-05, 8.3152999999999e-05, 8.32919999999987e-05, 8.326399999999956e-05, 8.305600000000149e-05, 8.31810000...</msg>
<status status="PASS" starttime="20201029 12:47:41.822" endtime="20201029 12:47:41.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.829" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 12:47:41.828" endtime="20201029 12:47:41.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.832" level="INFO">VALUE: [8.326399999999956e-05, 8.26659999999986e-05, 8.350000000000024e-05, 8.255500000000152e-05, 8.3152999999999e-05, 8.32919999999987e-05, 8.326399999999956e-05, 8.305600000000149e-05, 8.318100000000161e-05, 8.299999999999974e-05, 8.287499999999962e-05, 8.280599999999777e-05, 8.276399999999906e-05, 8.291699999999833e-05, 8.34859999999972e-05, 8.294400000000146e-05, 8.309699999999726e-05, 8.326399999999956e-05, 8.33330000000014e-05, 8.270799999999731e-05, 8.343100000000186e-05, 8.322200000000085e-05, 8.34170000000023e-05, 8.304199999999845e-05, 8.304099999999898e-05, 8.319399999999824e-05, 8.268100000000111e-05, 8.287499999999962e-05, 8.266699999999808e-05, 8.273599999999992e-05, 8.295800000000103e-05, 8.283299999999744e-05, 8.308300000000116e-05, 8.343100000000186e-05, 8.343000000000239e-05, 8.298600000000017e-05, 8.254200000000142e-05, 8.308400000000063e-05, 8.298600000000017e-05, 8.293100000000136e-05, 8.345899999999754e-05, 8.336200000000002e-05, 8.286199999999952e-05, 8.313899999999944e-05, 8.309700000000073e-05, 8.294399999999799e-05, 8.254099999999848e-05, 8.262499999999937e-05, 8.297300000000007e-05, 8.326399999999956e-05]</msg>
<status status="PASS" starttime="20201029 12:47:41.830" endtime="20201029 12:47:41.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.826" endtime="20201029 12:47:41.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:41.838" endtime="20201029 12:47:41.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.836" endtime="20201029 12:47:41.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.835" endtime="20201029 12:47:41.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.476" endtime="20201029 12:47:41.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.475" endtime="20201029 12:47:41.858"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.867" endtime="20201029 12:47:41.887"></status>
</kw>
<msg timestamp="20201029 12:47:41.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.865" endtime="20201029 12:47:41.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:41.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:41.889" endtime="20201029 12:47:41.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.891" endtime="20201029 12:47:41.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.863" endtime="20201029 12:47:41.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.861" endtime="20201029 12:47:41.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:41.900" endtime="20201029 12:47:42.186"></status>
</kw>
<msg timestamp="20201029 12:47:42.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019397153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019481278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:41.898" endtime="20201029 12:47:42.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019397153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019481278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:42.190" endtime="20201029 12:47:42.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.198" endtime="20201029 12:47:42.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.896" endtime="20201029 12:47:42.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.894" endtime="20201029 12:47:42.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:42.204" level="INFO">${RESULT} = [{'diff': 8.412500000000087e-05}, {'diff': 8.402799999999988e-05}, {'diff': 8.402799999999988e-05}, {'diff': 8.388900000000019e-05}, {'diff': 8.422200000000185e-05}, {'diff': 8.449999999999777e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:42.201" endtime="20201029 12:47:42.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:42.209" level="INFO">${ACCURACY} = {'diff': [8.412500000000087e-05, 8.402799999999988e-05, 8.402799999999988e-05, 8.388900000000019e-05, 8.422200000000185e-05, 8.449999999999777e-05, 8.380599999999877e-05, 8.444499999999897e-05, 8.3598...</msg>
<status status="PASS" starttime="20201029 12:47:42.205" endtime="20201029 12:47:42.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.214" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 12:47:42.213" endtime="20201029 12:47:42.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.216" level="INFO">VALUE: [8.412500000000087e-05, 8.402799999999988e-05, 8.402799999999988e-05, 8.388900000000019e-05, 8.422200000000185e-05, 8.449999999999777e-05, 8.380599999999877e-05, 8.444499999999897e-05, 8.35980000000007e-05, 8.384800000000095e-05, 8.388900000000019e-05, 8.398600000000117e-05, 8.405499999999955e-05, 8.399999999999727e-05, 8.405499999999955e-05, 8.447199999999863e-05, 8.406900000000259e-05, 8.422200000000185e-05, 8.384700000000148e-05, 8.39170000000028e-05, 8.404099999999998e-05, 8.44309999999994e-05, 8.365200000000003e-05, 8.372299999999736e-05, 8.391699999999933e-05, 8.41110000000013e-05, 8.437499999999765e-05, 8.43049999999998e-05, 8.441600000000035e-05, 8.401399999999684e-05, 8.394400000000246e-05, 8.354199999999895e-05, 8.44309999999994e-05, 8.359700000000123e-05, 8.434799999999798e-05, 8.36529999999995e-05, 8.404199999999945e-05, 8.437499999999765e-05, 8.402799999999988e-05, 8.447300000000157e-05, 8.38049999999993e-05, 8.392999999999942e-05, 8.404099999999998e-05, 8.409699999999826e-05, 8.429100000000023e-05, 8.440300000000026e-05, 8.430599999999927e-05, 8.423599999999795e-05, 8.36249999999969e-05, 8.44720000000021e-05]</msg>
<status status="PASS" starttime="20201029 12:47:42.215" endtime="20201029 12:47:42.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.210" endtime="20201029 12:47:42.217"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:42.221" endtime="20201029 12:47:42.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.220" endtime="20201029 12:47:42.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.218" endtime="20201029 12:47:42.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.859" endtime="20201029 12:47:42.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:41.859" endtime="20201029 12:47:42.242"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.250" endtime="20201029 12:47:42.270"></status>
</kw>
<msg timestamp="20201029 12:47:42.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:42.249" endtime="20201029 12:47:42.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:42.271" endtime="20201029 12:47:42.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.274" endtime="20201029 12:47:42.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.246" endtime="20201029 12:47:42.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.244" endtime="20201029 12:47:42.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.283" endtime="20201029 12:47:42.570"></status>
</kw>
<msg timestamp="20201029 12:47:42.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019275833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019360667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:42.281" endtime="20201029 12:47:42.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019275833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019360667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:42.574" endtime="20201029 12:47:42.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.582" endtime="20201029 12:47:42.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.279" endtime="20201029 12:47:42.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.277" endtime="20201029 12:47:42.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:42.589" level="INFO">${RESULT} = [{'diff': 8.483400000000238e-05}, {'diff': 8.487499999999815e-05}, {'diff': 8.513899999999797e-05}, {'diff': 8.484800000000195e-05}, {'diff': 8.469399999999974e-05}, {'diff': 8.504100000000098e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:42.585" endtime="20201029 12:47:42.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:42.593" level="INFO">${ACCURACY} = {'diff': [8.483400000000238e-05, 8.487499999999815e-05, 8.513899999999797e-05, 8.484800000000195e-05, 8.469399999999974e-05, 8.504100000000098e-05, 8.46249999999979e-05, 8.46660000000006e-05, 8.523599...</msg>
<status status="PASS" starttime="20201029 12:47:42.589" endtime="20201029 12:47:42.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.597" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 12:47:42.596" endtime="20201029 12:47:42.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.599" level="INFO">VALUE: [8.483400000000238e-05, 8.487499999999815e-05, 8.513899999999797e-05, 8.484800000000195e-05, 8.469399999999974e-05, 8.504100000000098e-05, 8.46249999999979e-05, 8.46660000000006e-05, 8.523599999999895e-05, 8.524999999999852e-05, 8.529199999999723e-05, 8.520899999999929e-05, 8.47920000000002e-05, 8.49309999999999e-05, 8.458399999999866e-05, 8.470900000000225e-05, 8.519499999999972e-05, 8.493000000000042e-05, 8.53469999999995e-05, 8.479100000000073e-05, 8.531900000000037e-05, 8.53469999999995e-05, 8.488900000000119e-05, 8.486099999999858e-05, 8.455599999999952e-05, 8.461099999999833e-05, 8.469499999999922e-05, 8.501400000000131e-05, 8.549999999999877e-05, 8.472299999999836e-05, 8.491700000000033e-05, 8.449999999999777e-05, 8.487500000000162e-05, 8.538900000000169e-05, 8.486099999999858e-05, 8.497199999999913e-05, 8.551400000000181e-05, 8.480599999999977e-05, 8.536099999999908e-05, 8.536099999999908e-05, 8.523600000000242e-05, 8.459700000000223e-05, 8.526399999999809e-05, 8.511099999999883e-05, 8.516700000000058e-05, 8.551399999999834e-05, 8.54859999999992e-05, 8.472199999999888e-05, 8.468000000000017e-05, 8.533299999999994e-05]</msg>
<status status="PASS" starttime="20201029 12:47:42.598" endtime="20201029 12:47:42.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.593" endtime="20201029 12:47:42.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:42.604" endtime="20201029 12:47:42.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.603" endtime="20201029 12:47:42.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.602" endtime="20201029 12:47:42.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.243" endtime="20201029 12:47:42.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.242" endtime="20201029 12:47:42.625"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.633" endtime="20201029 12:47:42.656"></status>
</kw>
<msg timestamp="20201029 12:47:42.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:42.632" endtime="20201029 12:47:42.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:42.658" endtime="20201029 12:47:42.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.660" endtime="20201029 12:47:42.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.629" endtime="20201029 12:47:42.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.627" endtime="20201029 12:47:42.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.669" endtime="20201029 12:47:42.953"></status>
</kw>
<msg timestamp="20201029 12:47:42.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022662111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:42.668" endtime="20201029 12:47:42.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022662111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:42.958" endtime="20201029 12:47:42.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:42.966" endtime="20201029 12:47:42.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.665" endtime="20201029 12:47:42.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.663" endtime="20201029 12:47:42.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:42.972" level="INFO">${RESULT} = [{'diff': 8.605499999999808e-05}, {'diff': 8.582000000000034e-05}, {'diff': 8.607000000000059e-05}, {'diff': 8.566700000000108e-05}, {'diff': 8.623599999999995e-05}, {'diff': 8.632000000000084e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:42.969" endtime="20201029 12:47:42.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:42.976" level="INFO">${ACCURACY} = {'diff': [8.605499999999808e-05, 8.582000000000034e-05, 8.607000000000059e-05, 8.566700000000108e-05, 8.623599999999995e-05, 8.632000000000084e-05, 8.594500000000047e-05, 8.591700000000133e-05, 8.6167...</msg>
<status status="PASS" starttime="20201029 12:47:42.973" endtime="20201029 12:47:42.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.981" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 12:47:42.980" endtime="20201029 12:47:42.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:42.983" level="INFO">VALUE: [8.605499999999808e-05, 8.582000000000034e-05, 8.607000000000059e-05, 8.566700000000108e-05, 8.623599999999995e-05, 8.632000000000084e-05, 8.594500000000047e-05, 8.591700000000133e-05, 8.616700000000158e-05, 8.56249999999989e-05, 8.56660000000016e-05, 8.593000000000142e-05, 8.618000000000167e-05, 8.591700000000133e-05, 8.641699999999836e-05, 8.638899999999922e-05, 8.622200000000038e-05, 8.573599999999945e-05, 8.555600000000052e-05, 8.608300000000069e-05, 8.633300000000094e-05, 8.561200000000227e-05, 8.59859999999997e-05, 8.586099999999958e-05, 8.606900000000112e-05, 8.626399999999909e-05, 8.566599999999813e-05, 8.624999999999952e-05, 8.59859999999997e-05, 8.637499999999965e-05, 8.622200000000038e-05, 8.576399999999859e-05, 8.599999999999927e-05, 8.586099999999958e-05, 8.616700000000158e-05, 8.56249999999989e-05, 8.593000000000142e-05, 8.58050000000013e-05, 8.591599999999838e-05, 8.590199999999881e-05, 8.649999999999977e-05, 8.629199999999823e-05, 8.570800000000031e-05, 8.647199999999716e-05, 8.609700000000026e-05, 8.625000000000299e-05, 8.563899999999847e-05, 8.619499999999725e-05, 8.627799999999866e-05, 8.555500000000105e-05]</msg>
<status status="PASS" starttime="20201029 12:47:42.982" endtime="20201029 12:47:42.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.977" endtime="20201029 12:47:42.985"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:42.989" endtime="20201029 12:47:43.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.987" endtime="20201029 12:47:43.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.986" endtime="20201029 12:47:43.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.626" endtime="20201029 12:47:43.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:42.625" endtime="20201029 12:47:43.009"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.018" endtime="20201029 12:47:43.038"></status>
</kw>
<msg timestamp="20201029 12:47:43.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.016" endtime="20201029 12:47:43.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.039" endtime="20201029 12:47:43.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.042" endtime="20201029 12:47:43.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.014" endtime="20201029 12:47:43.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.012" endtime="20201029 12:47:43.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.051" endtime="20201029 12:47:43.337"></status>
</kw>
<msg timestamp="20201029 12:47:43.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019391278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019478444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:43.050" endtime="20201029 12:47:43.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019391278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019478444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:43.342" endtime="20201029 12:47:43.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.350" endtime="20201029 12:47:43.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.047" endtime="20201029 12:47:43.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.045" endtime="20201029 12:47:43.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:43.356" level="INFO">${RESULT} = [{'diff': 8.716599999999963e-05}, {'diff': 8.659699999999729e-05}, {'diff': 8.732000000000184e-05}, {'diff': 8.654200000000195e-05}, {'diff': 8.71250000000004e-05}, {'diff': 8.6847000000001e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:47:43.353" endtime="20201029 12:47:43.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:43.361" level="INFO">${ACCURACY} = {'diff': [8.716599999999963e-05, 8.659699999999729e-05, 8.732000000000184e-05, 8.654200000000195e-05, 8.71250000000004e-05, 8.6847000000001e-05, 8.704099999999951e-05, 8.652700000000291e-05, 8.6679999...</msg>
<status status="PASS" starttime="20201029 12:47:43.357" endtime="20201029 12:47:43.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.366" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 12:47:43.365" endtime="20201029 12:47:43.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.368" level="INFO">VALUE: [8.716599999999963e-05, 8.659699999999729e-05, 8.732000000000184e-05, 8.654200000000195e-05, 8.71250000000004e-05, 8.6847000000001e-05, 8.704099999999951e-05, 8.652700000000291e-05, 8.66799999999987e-05, 8.709700000000126e-05, 8.741699999999936e-05, 8.723600000000095e-05, 8.704199999999898e-05, 8.666700000000208e-05, 8.718100000000215e-05, 8.724999999999705e-05, 8.64860000000002e-05, 8.722300000000086e-05, 8.713899999999997e-05, 8.725000000000052e-05, 8.693000000000242e-05, 8.670800000000131e-05, 8.687500000000015e-05, 8.681900000000187e-05, 8.7153000000003e-05, 8.752799999999991e-05, 8.711100000000083e-05, 8.668099999999818e-05, 8.713899999999997e-05, 8.670799999999784e-05, 8.654199999999848e-05, 8.661100000000033e-05, 8.654199999999848e-05, 8.694399999999852e-05, 8.747200000000163e-05, 8.738900000000022e-05, 8.655499999999858e-05, 8.690299999999929e-05, 8.661100000000033e-05, 8.690299999999929e-05, 8.66249999999999e-05, 8.737500000000065e-05, 8.687500000000015e-05, 8.743099999999893e-05, 8.69730000000006e-05, 8.675000000000002e-05, 8.66669999999986e-05, 8.711100000000083e-05, 8.693000000000242e-05, 8.680499999999883e-05]</msg>
<status status="PASS" starttime="20201029 12:47:43.367" endtime="20201029 12:47:43.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.362" endtime="20201029 12:47:43.370"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:43.373" endtime="20201029 12:47:43.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.372" endtime="20201029 12:47:43.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.370" endtime="20201029 12:47:43.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.010" endtime="20201029 12:47:43.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.010" endtime="20201029 12:47:43.394"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.402" endtime="20201029 12:47:43.422"></status>
</kw>
<msg timestamp="20201029 12:47:43.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.401" endtime="20201029 12:47:43.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.423" endtime="20201029 12:47:43.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.426" endtime="20201029 12:47:43.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.398" endtime="20201029 12:47:43.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.396" endtime="20201029 12:47:43.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.435" endtime="20201029 12:47:43.721"></status>
</kw>
<msg timestamp="20201029 12:47:43.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019304431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019392431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:43.433" endtime="20201029 12:47:43.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019304431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019392431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:43.725" endtime="20201029 12:47:43.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.733" endtime="20201029 12:47:43.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.431" endtime="20201029 12:47:43.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.429" endtime="20201029 12:47:43.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:43.740" level="INFO">${RESULT} = [{'diff': 8.800000000000127e-05}, {'diff': 8.827700000000119e-05}, {'diff': 8.790200000000081e-05}, {'diff': 8.779100000000026e-05}, {'diff': 8.759700000000176e-05}, {'diff': 8.845799999999959e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:43.736" endtime="20201029 12:47:43.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:43.744" level="INFO">${ACCURACY} = {'diff': [8.800000000000127e-05, 8.827700000000119e-05, 8.790200000000081e-05, 8.779100000000026e-05, 8.759700000000176e-05, 8.845799999999959e-05, 8.804100000000051e-05, 8.801399999999737e-05, 8.8055...</msg>
<status status="PASS" starttime="20201029 12:47:43.741" endtime="20201029 12:47:43.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.748" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 12:47:43.747" endtime="20201029 12:47:43.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.750" level="INFO">VALUE: [8.800000000000127e-05, 8.827700000000119e-05, 8.790200000000081e-05, 8.779100000000026e-05, 8.759700000000176e-05, 8.845799999999959e-05, 8.804100000000051e-05, 8.801399999999737e-05, 8.805599999999955e-05, 8.76669999999996e-05, 8.850000000000177e-05, 8.773599999999798e-05, 8.812499999999793e-05, 8.758400000000166e-05, 8.83059999999998e-05, 8.809799999999826e-05, 8.829100000000076e-05, 8.811100000000183e-05, 8.762499999999743e-05, 8.797200000000213e-05, 8.787500000000115e-05, 8.843099999999993e-05, 8.836099999999861e-05, 8.848599999999873e-05, 8.780600000000277e-05, 8.840299999999732e-05, 8.811099999999836e-05, 8.840299999999732e-05, 8.773699999999746e-05, 8.783399999999844e-05, 8.845799999999959e-05, 8.777700000000069e-05, 8.787500000000115e-05, 8.818099999999968e-05, 8.836100000000208e-05, 8.76669999999996e-05, 8.831999999999937e-05, 8.769499999999875e-05, 8.762499999999743e-05, 8.822299999999839e-05, 8.84869999999982e-05, 8.772299999999789e-05, 8.78189999999994e-05, 8.841699999999689e-05, 8.758300000000219e-05, 8.791600000000038e-05, 8.791600000000038e-05, 8.837499999999818e-05, 8.76250000000009e-05, 8.829200000000023e-05]</msg>
<status status="PASS" starttime="20201029 12:47:43.749" endtime="20201029 12:47:43.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.745" endtime="20201029 12:47:43.752"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:43.756" endtime="20201029 12:47:43.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.754" endtime="20201029 12:47:43.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.753" endtime="20201029 12:47:43.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.395" endtime="20201029 12:47:43.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.394" endtime="20201029 12:47:43.776"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.785" endtime="20201029 12:47:43.806"></status>
</kw>
<msg timestamp="20201029 12:47:43.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.783" endtime="20201029 12:47:43.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.807" endtime="20201029 12:47:43.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.810" endtime="20201029 12:47:43.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.781" endtime="20201029 12:47:43.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.779" endtime="20201029 12:47:43.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.819" endtime="20201029 12:47:44.105"></status>
</kw>
<msg timestamp="20201029 12:47:44.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020335986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020424569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:43.817" endtime="20201029 12:47:44.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020335986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020424569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.109" endtime="20201029 12:47:44.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.117" endtime="20201029 12:47:44.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.815" endtime="20201029 12:47:44.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.813" endtime="20201029 12:47:44.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:44.124" level="INFO">${RESULT} = [{'diff': 8.858299999999972e-05}, {'diff': 8.943000000000145e-05}, {'diff': 8.912499999999893e-05}, {'diff': 8.890200000000181e-05}, {'diff': 8.924999999999905e-05}, {'diff': 8.859699999999929e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:44.120" endtime="20201029 12:47:44.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:44.128" level="INFO">${ACCURACY} = {'diff': [8.858299999999972e-05, 8.943000000000145e-05, 8.912499999999893e-05, 8.890200000000181e-05, 8.924999999999905e-05, 8.859699999999929e-05, 8.86250000000019e-05, 8.904200000000098e-05, 8.91950...</msg>
<status status="PASS" starttime="20201029 12:47:44.125" endtime="20201029 12:47:44.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.132" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 12:47:44.131" endtime="20201029 12:47:44.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.134" level="INFO">VALUE: [8.858299999999972e-05, 8.943000000000145e-05, 8.912499999999893e-05, 8.890200000000181e-05, 8.924999999999905e-05, 8.859699999999929e-05, 8.86250000000019e-05, 8.904200000000098e-05, 8.919500000000025e-05, 8.868100000000018e-05, 8.855600000000005e-05, 8.948599999999973e-05, 8.918100000000068e-05, 8.924999999999905e-05, 8.89999999999988e-05, 8.919400000000077e-05, 8.94999999999993e-05, 8.911099999999936e-05, 8.912499999999893e-05, 8.929200000000123e-05, 8.904199999999751e-05, 8.868100000000018e-05, 8.94999999999993e-05, 8.891600000000138e-05, 8.862499999999843e-05, 8.937499999999918e-05, 8.929199999999776e-05, 8.900000000000227e-05, 8.877800000000116e-05, 8.886100000000258e-05, 8.929100000000176e-05, 8.886100000000258e-05, 8.930599999999733e-05, 8.861099999999886e-05, 8.94999999999993e-05, 8.934700000000004e-05, 8.8945e-05, 8.929200000000123e-05, 8.938899999999875e-05, 8.93060000000008e-05, 8.933300000000047e-05, 8.845899999999907e-05, 8.91519999999986e-05, 8.924999999999905e-05, 8.863900000000147e-05, 8.937499999999918e-05, 8.863900000000147e-05, 8.912499999999893e-05, 8.852800000000091e-05, 8.861099999999886e-05]</msg>
<status status="PASS" starttime="20201029 12:47:44.133" endtime="20201029 12:47:44.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.128" endtime="20201029 12:47:44.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:44.140" endtime="20201029 12:47:44.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.139" endtime="20201029 12:47:44.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.137" endtime="20201029 12:47:44.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.777" endtime="20201029 12:47:44.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.777" endtime="20201029 12:47:44.161"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.169" endtime="20201029 12:47:44.190"></status>
</kw>
<msg timestamp="20201029 12:47:44.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.168" endtime="20201029 12:47:44.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.191" endtime="20201029 12:47:44.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.194" endtime="20201029 12:47:44.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.165" endtime="20201029 12:47:44.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.163" endtime="20201029 12:47:44.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.203" endtime="20201029 12:47:44.493"></status>
</kw>
<msg timestamp="20201029 12:47:44.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019396639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019486542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.201" endtime="20201029 12:47:44.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019396639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019486542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.503" endtime="20201029 12:47:44.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.521" endtime="20201029 12:47:44.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.199" endtime="20201029 12:47:44.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.197" endtime="20201029 12:47:44.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:44.535" level="INFO">${RESULT} = [{'diff': 8.990299999999882e-05}, {'diff': 9.034800000000051e-05}, {'diff': 9.05000000000003e-05}, {'diff': 9.004200000000198e-05}, {'diff': 9.023600000000048e-05}, {'diff': 9.030499999999886e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:44.528" endtime="20201029 12:47:44.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:44.546" level="INFO">${ACCURACY} = {'diff': [8.990299999999882e-05, 9.034800000000051e-05, 9.05000000000003e-05, 9.004200000000198e-05, 9.023600000000048e-05, 9.030499999999886e-05, 9.016600000000263e-05, 8.974999999999955e-05, 8.97359...</msg>
<status status="PASS" starttime="20201029 12:47:44.537" endtime="20201029 12:47:44.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.555" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 12:47:44.553" endtime="20201029 12:47:44.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.560" level="INFO">VALUE: [8.990299999999882e-05, 9.034800000000051e-05, 9.05000000000003e-05, 9.004200000000198e-05, 9.023600000000048e-05, 9.030499999999886e-05, 9.016600000000263e-05, 8.974999999999955e-05, 8.973599999999998e-05, 9.023600000000048e-05, 9.018099999999821e-05, 8.947200000000016e-05, 9.029199999999876e-05, 8.974999999999955e-05, 9.020800000000134e-05, 9.038899999999975e-05, 8.9638999999999e-05, 9.016599999999916e-05, 9.012499999999993e-05, 8.966600000000213e-05, 9.006899999999818e-05, 9.047199999999769e-05, 8.956899999999768e-05, 9.048600000000073e-05, 8.957000000000062e-05, 8.98199999999974e-05, 9.03060000000018e-05, 8.9945000000001e-05, 9.037500000000018e-05, 9.038899999999975e-05, 8.980499999999836e-05, 9.004100000000251e-05, 8.981899999999793e-05, 9.001399999999937e-05, 9.029200000000223e-05, 9.01519999999996e-05, 9.036100000000061e-05, 9.012499999999993e-05, 8.998600000000023e-05, 8.991700000000186e-05, 9.026399999999962e-05, 8.986100000000011e-05, 9.05000000000003e-05, 9.037500000000018e-05, 9.047199999999769e-05, 8.96939999999978e-05, 9.048600000000073e-05, 9.020799999999787e-05, 9.008300000000122e-05, 8.98060000000013e-05]</msg>
<status status="PASS" starttime="20201029 12:47:44.557" endtime="20201029 12:47:44.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.547" endtime="20201029 12:47:44.563"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:44.570" endtime="20201029 12:47:44.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.567" endtime="20201029 12:47:44.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.565" endtime="20201029 12:47:44.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.161" endtime="20201029 12:47:44.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.161" endtime="20201029 12:47:44.594"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.603" endtime="20201029 12:47:44.623"></status>
</kw>
<msg timestamp="20201029 12:47:44.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.601" endtime="20201029 12:47:44.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.624" endtime="20201029 12:47:44.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.627" endtime="20201029 12:47:44.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.599" endtime="20201029 12:47:44.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.597" endtime="20201029 12:47:44.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.635" endtime="20201029 12:47:44.921"></status>
</kw>
<msg timestamp="20201029 12:47:44.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022473333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022564722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.634" endtime="20201029 12:47:44.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022473333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022564722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.925" endtime="20201029 12:47:44.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.933" endtime="20201029 12:47:44.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.631" endtime="20201029 12:47:44.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.630" endtime="20201029 12:47:44.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:44.939" level="INFO">${RESULT} = [{'diff': 9.138899999999728e-05}, {'diff': 9.097200000000166e-05}, {'diff': 9.15000000000013e-05}, {'diff': 9.091599999999991e-05}, {'diff': 9.115300000000007e-05}, {'diff': 9.116699999999964e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:44.936" endtime="20201029 12:47:44.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:44.943" level="INFO">${ACCURACY} = {'diff': [9.138899999999728e-05, 9.097200000000166e-05, 9.15000000000013e-05, 9.091599999999991e-05, 9.115300000000007e-05, 9.116699999999964e-05, 9.105599999999908e-05, 9.113800000000102e-05, 9.05419...</msg>
<status status="PASS" starttime="20201029 12:47:44.940" endtime="20201029 12:47:44.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.948" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 12:47:44.947" endtime="20201029 12:47:44.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.950" level="INFO">VALUE: [9.138899999999728e-05, 9.097200000000166e-05, 9.15000000000013e-05, 9.091599999999991e-05, 9.115300000000007e-05, 9.116699999999964e-05, 9.105599999999908e-05, 9.113800000000102e-05, 9.054199999999901e-05, 9.086100000000111e-05, 9.142999999999998e-05, 9.120799999999887e-05, 9.073600000000098e-05, 9.143099999999946e-05, 9.108299999999875e-05, 9.15000000000013e-05, 9.073600000000098e-05, 9.079199999999926e-05, 9.077799999999969e-05, 9.101400000000037e-05, 9.140300000000032e-05, 9.062500000000043e-05, 9.147300000000164e-05, 9.094399999999905e-05, 9.111100000000136e-05, 9.056900000000215e-05, 9.106899999999918e-05, 9.105499999999961e-05, 9.151400000000087e-05, 9.119499999999878e-05, 9.086099999999764e-05, 9.143099999999946e-05, 9.086100000000111e-05, 9.127800000000019e-05, 9.102700000000047e-05, 9.129100000000029e-05, 9.066599999999966e-05, 9.142999999999998e-05, 9.059700000000129e-05, 9.138900000000075e-05, 9.054199999999901e-05, 9.059699999999782e-05, 9.105499999999961e-05, 9.065299999999957e-05, 9.098599999999776e-05, 9.149999999999783e-05, 9.15139999999974e-05, 9.106899999999918e-05, 9.058300000000172e-05, 9.074999999999708e-05]</msg>
<status status="PASS" starttime="20201029 12:47:44.949" endtime="20201029 12:47:44.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.944" endtime="20201029 12:47:44.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:44.955" endtime="20201029 12:47:44.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.954" endtime="20201029 12:47:44.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.952" endtime="20201029 12:47:44.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.595" endtime="20201029 12:47:44.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.595" endtime="20201029 12:47:44.976"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.984" endtime="20201029 12:47:45.005"></status>
</kw>
<msg timestamp="20201029 12:47:45.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.983" endtime="20201029 12:47:45.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.007" endtime="20201029 12:47:45.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.009" endtime="20201029 12:47:45.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.980" endtime="20201029 12:47:45.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.978" endtime="20201029 12:47:45.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.018" endtime="20201029 12:47:45.303"></status>
</kw>
<msg timestamp="20201029 12:47:45.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020204889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020296583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.017" endtime="20201029 12:47:45.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020204889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020296583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.308" endtime="20201029 12:47:45.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.316" endtime="20201029 12:47:45.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.014" endtime="20201029 12:47:45.318"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.013" endtime="20201029 12:47:45.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:45.322" level="INFO">${RESULT} = [{'diff': 9.16939999999998e-05}, {'diff': 9.248599999999926e-05}, {'diff': 9.159700000000229e-05}, {'diff': 9.175000000000155e-05}, {'diff': 9.19719999999992e-05}, {'diff': 9.155599999999958e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:45.319" endtime="20201029 12:47:45.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:45.326" level="INFO">${ACCURACY} = {'diff': [9.16939999999998e-05, 9.248599999999926e-05, 9.159700000000229e-05, 9.175000000000155e-05, 9.19719999999992e-05, 9.155599999999958e-05, 9.169499999999928e-05, 9.24589999999996e-05, 9.2431000...</msg>
<status status="PASS" starttime="20201029 12:47:45.323" endtime="20201029 12:47:45.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.331" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 12:47:45.330" endtime="20201029 12:47:45.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.333" level="INFO">VALUE: [9.16939999999998e-05, 9.248599999999926e-05, 9.159700000000229e-05, 9.175000000000155e-05, 9.19719999999992e-05, 9.155599999999958e-05, 9.169499999999928e-05, 9.24589999999996e-05, 9.243100000000046e-05, 9.24589999999996e-05, 9.238899999999828e-05, 9.224999999999858e-05, 9.247299999999917e-05, 9.158300000000272e-05, 9.152700000000097e-05, 9.212500000000193e-05, 9.158399999999872e-05, 9.204099999999757e-05, 9.20139999999979e-05, 9.166700000000014e-05, 9.216699999999717e-05, 9.234699999999957e-05, 9.156999999999915e-05, 9.218100000000021e-05, 9.204199999999704e-05, 9.238900000000175e-05, 9.161099999999839e-05, 9.24719999999997e-05, 9.224999999999858e-05, 9.156999999999915e-05, 9.248599999999926e-05, 9.180599999999983e-05, 9.176400000000112e-05, 9.229200000000076e-05, 9.216700000000064e-05, 9.199999999999833e-05, 9.241700000000089e-05, 9.191600000000091e-05, 9.174999999999808e-05, 9.16939999999998e-05, 9.20000000000018e-05, 9.191700000000039e-05, 9.154099999999707e-05, 9.180599999999983e-05, 9.186099999999864e-05, 9.205500000000061e-05, 9.248600000000273e-05, 9.156999999999915e-05, 9.173599999999851e-05, 9.161100000000186e-05]</msg>
<status status="PASS" starttime="20201029 12:47:45.332" endtime="20201029 12:47:45.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.327" endtime="20201029 12:47:45.335"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:45.339" endtime="20201029 12:47:45.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.337" endtime="20201029 12:47:45.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.336" endtime="20201029 12:47:45.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.977" endtime="20201029 12:47:45.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.976" endtime="20201029 12:47:45.359"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.368" endtime="20201029 12:47:45.388"></status>
</kw>
<msg timestamp="20201029 12:47:45.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.366" endtime="20201029 12:47:45.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.390" endtime="20201029 12:47:45.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.392" endtime="20201029 12:47:45.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.364" endtime="20201029 12:47:45.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.362" endtime="20201029 12:47:45.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.401" endtime="20201029 12:47:45.687"></status>
</kw>
<msg timestamp="20201029 12:47:45.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019308708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019401486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.399" endtime="20201029 12:47:45.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019308708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019401486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.691" endtime="20201029 12:47:45.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.699" endtime="20201029 12:47:45.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.397" endtime="20201029 12:47:45.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.395" endtime="20201029 12:47:45.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:45.706" level="INFO">${RESULT} = [{'diff': 9.277799999999822e-05}, {'diff': 9.336100000000014e-05}, {'diff': 9.294399999999758e-05}, {'diff': 9.2639000000002e-05}, {'diff': 9.319499999999731e-05}, {'diff': 9.344500000000103e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:45.702" endtime="20201029 12:47:45.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:45.711" level="INFO">${ACCURACY} = {'diff': [9.277799999999822e-05, 9.336100000000014e-05, 9.294399999999758e-05, 9.2639000000002e-05, 9.319499999999731e-05, 9.344500000000103e-05, 9.308400000000022e-05, 9.348600000000026e-05, 9.254100...</msg>
<status status="PASS" starttime="20201029 12:47:45.707" endtime="20201029 12:47:45.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.715" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 12:47:45.714" endtime="20201029 12:47:45.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.718" level="INFO">VALUE: [9.277799999999822e-05, 9.336100000000014e-05, 9.294399999999758e-05, 9.2639000000002e-05, 9.319499999999731e-05, 9.344500000000103e-05, 9.308400000000022e-05, 9.348600000000026e-05, 9.254100000000154e-05, 9.274999999999908e-05, 9.290299999999835e-05, 9.262499999999896e-05, 9.345899999999713e-05, 9.281900000000093e-05, 9.323600000000001e-05, 9.266600000000166e-05, 9.345800000000112e-05, 9.276399999999865e-05, 9.29720000000002e-05, 9.276399999999865e-05, 9.344399999999808e-05, 9.274999999999908e-05, 9.259699999999982e-05, 9.254200000000101e-05, 9.349999999999983e-05, 9.352799999999897e-05, 9.318000000000173e-05, 9.320800000000087e-05, 9.273599999999951e-05, 9.259699999999982e-05, 9.320800000000087e-05, 9.261099999999939e-05, 9.330600000000133e-05, 9.298599999999976e-05, 9.33200000000009e-05, 9.298599999999976e-05, 9.290300000000182e-05, 9.266700000000114e-05, 9.280500000000136e-05, 9.26940000000008e-05, 9.35139999999994e-05, 9.348600000000026e-05, 9.249999999999883e-05, 9.340299999999885e-05, 9.281900000000093e-05, 9.261199999999886e-05, 9.316700000000164e-05, 9.338899999999928e-05, 9.343000000000198e-05, 9.268100000000071e-05]</msg>
<status status="PASS" starttime="20201029 12:47:45.716" endtime="20201029 12:47:45.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.712" endtime="20201029 12:47:45.719"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:45.722" endtime="20201029 12:47:45.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.721" endtime="20201029 12:47:45.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.720" endtime="20201029 12:47:45.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.360" endtime="20201029 12:47:45.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.360" endtime="20201029 12:47:45.743"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.752" endtime="20201029 12:47:45.772"></status>
</kw>
<msg timestamp="20201029 12:47:45.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.750" endtime="20201029 12:47:45.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:45.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:45.774" endtime="20201029 12:47:45.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.776" endtime="20201029 12:47:45.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.748" endtime="20201029 12:47:45.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.746" endtime="20201029 12:47:45.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:45.785" endtime="20201029 12:47:46.072"></status>
</kw>
<msg timestamp="20201029 12:47:46.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019282611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019376458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:45.783" endtime="20201029 12:47:46.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019282611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019376458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.076" endtime="20201029 12:47:46.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.084" endtime="20201029 12:47:46.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.781" endtime="20201029 12:47:46.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.779" endtime="20201029 12:47:46.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:46.090" level="INFO">${RESULT} = [{'diff': 9.38469999999976e-05}, {'diff': 9.386099999999717e-05}, {'diff': 9.420800000000187e-05}, {'diff': 9.35139999999994e-05}, {'diff': 9.40139999999999e-05}, {'diff': 9.441699999999942e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:47:46.087" endtime="20201029 12:47:46.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:46.094" level="INFO">${ACCURACY} = {'diff': [9.38469999999976e-05, 9.386099999999717e-05, 9.420800000000187e-05, 9.35139999999994e-05, 9.40139999999999e-05, 9.441699999999942e-05, 9.427799999999972e-05, 9.426400000000015e-05, 9.4457999...</msg>
<status status="PASS" starttime="20201029 12:47:46.091" endtime="20201029 12:47:46.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.099" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 12:47:46.098" endtime="20201029 12:47:46.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.101" level="INFO">VALUE: [9.38469999999976e-05, 9.386099999999717e-05, 9.420800000000187e-05, 9.35139999999994e-05, 9.40139999999999e-05, 9.441699999999942e-05, 9.427799999999972e-05, 9.426400000000015e-05, 9.445799999999865e-05, 9.406999999999818e-05, 9.380599999999836e-05, 9.425000000000058e-05, 9.434700000000157e-05, 9.388899999999978e-05, 9.437499999999724e-05, 9.433299999999853e-05, 9.437500000000071e-05, 9.430499999999939e-05, 9.445799999999865e-05, 9.354199999999854e-05, 9.380600000000183e-05, 9.351400000000287e-05, 9.352799999999897e-05, 9.445899999999813e-05, 9.426300000000068e-05, 9.402799999999947e-05, 9.448600000000126e-05, 9.406900000000218e-05, 9.427700000000025e-05, 9.384700000000107e-05, 9.349999999999983e-05, 9.402799999999947e-05, 9.357000000000115e-05, 9.404199999999904e-05, 9.441699999999942e-05, 9.448600000000126e-05, 9.375000000000008e-05, 9.386200000000011e-05, 9.445800000000212e-05, 9.45140000000004e-05, 9.438900000000028e-05, 9.417999999999926e-05, 9.354100000000254e-05, 9.412500000000046e-05, 9.394399999999858e-05, 9.40139999999999e-05, 9.438900000000028e-05, 9.375000000000008e-05, 9.373600000000051e-05, 9.45270000000005e-05]</msg>
<status status="PASS" starttime="20201029 12:47:46.100" endtime="20201029 12:47:46.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.095" endtime="20201029 12:47:46.102"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:46.107" endtime="20201029 12:47:46.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.105" endtime="20201029 12:47:46.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.103" endtime="20201029 12:47:46.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.744" endtime="20201029 12:47:46.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:45.743" endtime="20201029 12:47:46.128"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.136" endtime="20201029 12:47:46.160"></status>
</kw>
<msg timestamp="20201029 12:47:46.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.135" endtime="20201029 12:47:46.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.161" endtime="20201029 12:47:46.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.164" endtime="20201029 12:47:46.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.132" endtime="20201029 12:47:46.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.130" endtime="20201029 12:47:46.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.173" endtime="20201029 12:47:46.457"></status>
</kw>
<msg timestamp="20201029 12:47:46.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022773681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022868667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.171" endtime="20201029 12:47:46.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022773681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022868667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.462" endtime="20201029 12:47:46.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.470" endtime="20201029 12:47:46.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.169" endtime="20201029 12:47:46.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.167" endtime="20201029 12:47:46.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:46.476" level="INFO">${RESULT} = [{'diff': 9.49859999999983e-05}, {'diff': 9.519499999999931e-05}, {'diff': 9.466599999999672e-05}, {'diff': 9.494499999999906e-05}, {'diff': 9.467999999999976e-05}, {'diff': 9.475000000000108e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:46.473" endtime="20201029 12:47:46.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:46.480" level="INFO">${ACCURACY} = {'diff': [9.49859999999983e-05, 9.519499999999931e-05, 9.466599999999672e-05, 9.494499999999906e-05, 9.467999999999976e-05, 9.475000000000108e-05, 9.499999999999786e-05, 9.531899999999996e-05, 9.54309...</msg>
<status status="PASS" starttime="20201029 12:47:46.477" endtime="20201029 12:47:46.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.485" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 12:47:46.483" endtime="20201029 12:47:46.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.487" level="INFO">VALUE: [9.49859999999983e-05, 9.519499999999931e-05, 9.466599999999672e-05, 9.494499999999906e-05, 9.467999999999976e-05, 9.475000000000108e-05, 9.499999999999786e-05, 9.531899999999996e-05, 9.543099999999999e-05, 9.541700000000042e-05, 9.490300000000035e-05, 9.448600000000126e-05, 9.46530000000001e-05, 9.500000000000133e-05, 9.479199999999979e-05, 9.51530000000006e-05, 9.534700000000257e-05, 9.523599999999854e-05, 9.454100000000007e-05, 9.538900000000128e-05, 9.480599999999936e-05, 9.543099999999999e-05, 9.531999999999943e-05, 9.519499999999931e-05, 9.479199999999979e-05, 9.519399999999983e-05, 9.544499999999956e-05, 9.529200000000029e-05, 9.501300000000143e-05, 9.536099999999867e-05, 9.480499999999989e-05, 9.548600000000226e-05, 9.467999999999976e-05, 9.540300000000085e-05, 9.49859999999983e-05, 9.480599999999936e-05, 9.461100000000139e-05, 9.498600000000176e-05, 9.523599999999854e-05, 9.50140000000009e-05, 9.512500000000146e-05, 9.536099999999867e-05, 9.504100000000057e-05, 9.480499999999989e-05, 9.505500000000014e-05, 9.500000000000133e-05, 9.475000000000108e-05, 9.504200000000004e-05, 9.46530000000001e-05, 9.518099999999974e-05]</msg>
<status status="PASS" starttime="20201029 12:47:46.486" endtime="20201029 12:47:46.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.481" endtime="20201029 12:47:46.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:46.497" endtime="20201029 12:47:46.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.496" endtime="20201029 12:47:46.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.495" endtime="20201029 12:47:46.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.129" endtime="20201029 12:47:46.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.128" endtime="20201029 12:47:46.518"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.528" endtime="20201029 12:47:46.548"></status>
</kw>
<msg timestamp="20201029 12:47:46.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.526" endtime="20201029 12:47:46.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.549" endtime="20201029 12:47:46.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.552" endtime="20201029 12:47:46.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.523" endtime="20201029 12:47:46.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.521" endtime="20201029 12:47:46.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.560" endtime="20201029 12:47:46.845"></status>
</kw>
<msg timestamp="20201029 12:47:46.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020651361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020747639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.559" endtime="20201029 12:47:46.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020651361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020747639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.849" endtime="20201029 12:47:46.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.857" endtime="20201029 12:47:46.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.556" endtime="20201029 12:47:46.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.555" endtime="20201029 12:47:46.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:46.864" level="INFO">${RESULT} = [{'diff': 9.627799999999825e-05}, {'diff': 9.649999999999936e-05}, {'diff': 9.59019999999984e-05}, {'diff': 9.573700000000199e-05}, {'diff': 9.636099999999967e-05}, {'diff': 9.600000000000233e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:46.860" endtime="20201029 12:47:46.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:46.868" level="INFO">${ACCURACY} = {'diff': [9.627799999999825e-05, 9.649999999999936e-05, 9.59019999999984e-05, 9.573700000000199e-05, 9.636099999999967e-05, 9.600000000000233e-05, 9.580500000000089e-05, 9.577800000000122e-05, 9.61250...</msg>
<status status="PASS" starttime="20201029 12:47:46.865" endtime="20201029 12:47:46.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.873" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 12:47:46.872" endtime="20201029 12:47:46.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.875" level="INFO">VALUE: [9.627799999999825e-05, 9.649999999999936e-05, 9.59019999999984e-05, 9.573700000000199e-05, 9.636099999999967e-05, 9.600000000000233e-05, 9.580500000000089e-05, 9.577800000000122e-05, 9.612500000000246e-05, 9.561099999999892e-05, 9.580600000000036e-05, 9.632000000000043e-05, 9.636099999999967e-05, 9.566700000000067e-05, 9.590300000000135e-05, 9.555600000000011e-05, 9.580500000000089e-05, 9.555500000000064e-05, 9.563900000000153e-05, 9.631900000000096e-05, 9.575000000000208e-05, 9.641599999999848e-05, 9.579200000000079e-05, 9.618100000000074e-05, 9.623599999999954e-05, 9.586099999999917e-05, 9.62920000000013e-05, 9.558400000000272e-05, 9.611099999999942e-05, 9.643100000000099e-05, 9.636099999999967e-05, 9.64859999999998e-05, 9.599999999999886e-05, 9.57079999999999e-05, 9.586099999999917e-05, 9.62080000000004e-05, 9.593100000000049e-05, 9.565299999999763e-05, 9.591699999999745e-05, 9.568100000000024e-05, 9.607000000000018e-05, 9.615199999999866e-05, 9.626300000000268e-05, 9.584799999999907e-05, 9.613899999999856e-05, 9.593000000000101e-05, 9.597199999999972e-05, 9.647200000000022e-05, 9.623599999999954e-05, 9.575000000000208e-05]</msg>
<status status="PASS" starttime="20201029 12:47:46.874" endtime="20201029 12:47:46.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.869" endtime="20201029 12:47:46.877"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:46.880" endtime="20201029 12:47:46.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.879" endtime="20201029 12:47:46.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.878" endtime="20201029 12:47:46.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.519" endtime="20201029 12:47:46.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.518" endtime="20201029 12:47:46.901"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.909" endtime="20201029 12:47:46.930"></status>
</kw>
<msg timestamp="20201029 12:47:46.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.908" endtime="20201029 12:47:46.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:46.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:46.932" endtime="20201029 12:47:46.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.934" endtime="20201029 12:47:46.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.905" endtime="20201029 12:47:46.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.903" endtime="20201029 12:47:46.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:46.943" endtime="20201029 12:47:47.230"></status>
</kw>
<msg timestamp="20201029 12:47:47.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019380722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019477361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:46.942" endtime="20201029 12:47:47.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019380722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019477361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.234" endtime="20201029 12:47:47.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.242" endtime="20201029 12:47:47.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.939" endtime="20201029 12:47:47.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.937" endtime="20201029 12:47:47.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:47.249" level="INFO">${RESULT} = [{'diff': 9.663899999999906e-05}, {'diff': 9.742999999999905e-05}, {'diff': 9.69860000000003e-05}, {'diff': 9.747200000000122e-05}, {'diff': 9.718100000000174e-05}, {'diff': 9.736100000000067e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:47.246" endtime="20201029 12:47:47.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:47.253" level="INFO">${ACCURACY} = {'diff': [9.663899999999906e-05, 9.742999999999905e-05, 9.69860000000003e-05, 9.747200000000122e-05, 9.718100000000174e-05, 9.736100000000067e-05, 9.674999999999961e-05, 9.732000000000143e-05, 9.74310...</msg>
<status status="PASS" starttime="20201029 12:47:47.250" endtime="20201029 12:47:47.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.257" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 12:47:47.256" endtime="20201029 12:47:47.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.260" level="INFO">VALUE: [9.663899999999906e-05, 9.742999999999905e-05, 9.69860000000003e-05, 9.747200000000122e-05, 9.718100000000174e-05, 9.736100000000067e-05, 9.674999999999961e-05, 9.732000000000143e-05, 9.743100000000199e-05, 9.743100000000199e-05, 9.719499999999784e-05, 9.750000000000036e-05, 9.738800000000034e-05, 9.737500000000024e-05, 9.719400000000183e-05, 9.693000000000201e-05, 9.68340000000005e-05, 9.733299999999806e-05, 9.743000000000251e-05, 9.701399999999943e-05, 9.718099999999827e-05, 9.70140000000029e-05, 9.713899999999956e-05, 9.663899999999906e-05, 9.67080000000009e-05, 9.705599999999814e-05, 9.733300000000153e-05, 9.723600000000054e-05, 9.72219999999975e-05, 9.708300000000128e-05, 9.669400000000133e-05, 9.736100000000067e-05, 9.732000000000143e-05, 9.707000000000118e-05, 9.718099999999827e-05, 9.712499999999999e-05, 9.711199999999989e-05, 9.713800000000009e-05, 9.709699999999738e-05, 9.742999999999905e-05, 9.694399999999812e-05, 9.668000000000176e-05, 9.679100000000232e-05, 9.742999999999905e-05, 9.737500000000024e-05, 9.663899999999906e-05, 9.725000000000011e-05, 9.66669999999982e-05, 9.751300000000046e-05, 9.668100000000124e-05]</msg>
<status status="PASS" starttime="20201029 12:47:47.258" endtime="20201029 12:47:47.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.254" endtime="20201029 12:47:47.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:47.265" endtime="20201029 12:47:47.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.263" endtime="20201029 12:47:47.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.262" endtime="20201029 12:47:47.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.902" endtime="20201029 12:47:47.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:46.901" endtime="20201029 12:47:47.285"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.294" endtime="20201029 12:47:47.316"></status>
</kw>
<msg timestamp="20201029 12:47:47.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.292" endtime="20201029 12:47:47.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.317" endtime="20201029 12:47:47.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.320" endtime="20201029 12:47:47.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.290" endtime="20201029 12:47:47.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.288" endtime="20201029 12:47:47.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.329" endtime="20201029 12:47:47.614"></status>
</kw>
<msg timestamp="20201029 12:47:47.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020360819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020459042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.327" endtime="20201029 12:47:47.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020360819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020459042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.618" endtime="20201029 12:47:47.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.627" endtime="20201029 12:47:47.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.325" endtime="20201029 12:47:47.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.323" endtime="20201029 12:47:47.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:47.633" level="INFO">${RESULT} = [{'diff': 9.822300000000145e-05}, {'diff': 9.816600000000023e-05}, {'diff': 9.792999999999955e-05}, {'diff': 9.791599999999998e-05}, {'diff': 9.822200000000197e-05}, {'diff': 9.80410000000001e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:47.630" endtime="20201029 12:47:47.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:47.637" level="INFO">${ACCURACY} = {'diff': [9.822300000000145e-05, 9.816600000000023e-05, 9.792999999999955e-05, 9.791599999999998e-05, 9.822200000000197e-05, 9.80410000000001e-05, 9.769400000000233e-05, 9.847199999999875e-05, 9.84169...</msg>
<status status="PASS" starttime="20201029 12:47:47.634" endtime="20201029 12:47:47.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.641" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 12:47:47.640" endtime="20201029 12:47:47.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.644" level="INFO">VALUE: [9.822300000000145e-05, 9.816600000000023e-05, 9.792999999999955e-05, 9.791599999999998e-05, 9.822200000000197e-05, 9.80410000000001e-05, 9.769400000000233e-05, 9.847199999999875e-05, 9.841699999999995e-05, 9.76669999999992e-05, 9.762500000000049e-05, 9.83470000000021e-05, 9.81669999999997e-05, 9.837500000000124e-05, 9.806900000000271e-05, 9.773700000000052e-05, 9.811099999999795e-05, 9.761100000000092e-05, 9.813900000000056e-05, 9.823600000000154e-05, 9.78059999999989e-05, 9.811100000000142e-05, 9.843099999999952e-05, 9.791699999999945e-05, 9.812499999999752e-05, 9.78609999999977e-05, 9.769500000000181e-05, 9.756899999999874e-05, 9.830499999999992e-05, 9.7721999999998e-05, 9.845799999999919e-05, 9.823600000000154e-05, 9.752800000000297e-05, 9.786100000000117e-05, 9.790300000000335e-05, 9.823600000000154e-05, 9.84860000000018e-05, 9.815300000000013e-05, 9.768100000000224e-05, 9.769499999999834e-05, 9.754100000000307e-05, 9.773600000000104e-05, 9.84860000000018e-05, 9.756899999999874e-05, 9.848599999999832e-05, 9.788900000000031e-05, 9.815300000000013e-05, 9.786100000000117e-05, 9.756999999999821e-05, 9.843100000000299e-05]</msg>
<status status="PASS" starttime="20201029 12:47:47.642" endtime="20201029 12:47:47.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.638" endtime="20201029 12:47:47.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:47.649" endtime="20201029 12:47:47.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.648" endtime="20201029 12:47:47.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.647" endtime="20201029 12:47:47.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.286" endtime="20201029 12:47:47.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.285" endtime="20201029 12:47:47.670"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.679" endtime="20201029 12:47:47.700"></status>
</kw>
<msg timestamp="20201029 12:47:47.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.677" endtime="20201029 12:47:47.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.701" endtime="20201029 12:47:47.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.704" endtime="20201029 12:47:47.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.675" endtime="20201029 12:47:47.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.672" endtime="20201029 12:47:47.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.713" endtime="20201029 12:47:47.998"></status>
</kw>
<msg timestamp="20201029 12:47:48.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019428597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019527556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:47.711" endtime="20201029 12:47:48.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019428597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019527556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.002" endtime="20201029 12:47:48.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.010" endtime="20201029 12:47:48.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.709" endtime="20201029 12:47:48.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.707" endtime="20201029 12:47:48.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:48.017" level="INFO">${RESULT} = [{'diff': 9.895900000000263e-05}, {'diff': 9.895799999999969e-05}, {'diff': 9.915199999999819e-05}, {'diff': 9.873599999999857e-05}, {'diff': 9.897199999999926e-05}, {'diff': 9.916600000000123e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:48.014" endtime="20201029 12:47:48.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:48.022" level="INFO">${ACCURACY} = {'diff': [9.895900000000263e-05, 9.895799999999969e-05, 9.915199999999819e-05, 9.873599999999857e-05, 9.897199999999926e-05, 9.916600000000123e-05, 9.906900000000024e-05, 9.924999999999864e-05, 9.8931...</msg>
<status status="PASS" starttime="20201029 12:47:48.018" endtime="20201029 12:47:48.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.026" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 12:47:48.025" endtime="20201029 12:47:48.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.029" level="INFO">VALUE: [9.895900000000263e-05, 9.895799999999969e-05, 9.915199999999819e-05, 9.873599999999857e-05, 9.897199999999926e-05, 9.916600000000123e-05, 9.906900000000024e-05, 9.924999999999864e-05, 9.893100000000002e-05, 9.93060000000004e-05, 9.863900000000106e-05, 9.868099999999977e-05, 9.94999999999989e-05, 9.929200000000082e-05, 9.936199999999867e-05, 9.862500000000149e-05, 9.909700000000285e-05, 9.915300000000113e-05, 9.85410000000006e-05, 9.881899999999999e-05, 9.887499999999827e-05, 9.937499999999877e-05, 9.89999999999984e-05, 9.919499999999984e-05, 9.918100000000027e-05, 9.863900000000106e-05, 9.861099999999845e-05, 9.8721999999999e-05, 9.923599999999907e-05, 9.90410000000011e-05, 9.909699999999938e-05, 9.94860000000028e-05, 9.895899999999916e-05, 9.918100000000027e-05, 9.925000000000211e-05, 9.861100000000192e-05, 9.898599999999882e-05, 9.923699999999855e-05, 9.943100000000052e-05, 9.868100000000324e-05, 9.897199999999926e-05, 9.909699999999938e-05, 9.906900000000024e-05, 9.869399999999987e-05, 9.913900000000156e-05, 9.852799999999703e-05, 9.868099999999977e-05, 9.875000000000161e-05, 9.861099999999845e-05, 9.88609999999987e-05]</msg>
<status status="PASS" starttime="20201029 12:47:48.027" endtime="20201029 12:47:48.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.023" endtime="20201029 12:47:48.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:48.033" endtime="20201029 12:47:48.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.032" endtime="20201029 12:47:48.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.031" endtime="20201029 12:47:48.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.671" endtime="20201029 12:47:48.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.670" endtime="20201029 12:47:48.054"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.063" endtime="20201029 12:47:48.084"></status>
</kw>
<msg timestamp="20201029 12:47:48.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.061" endtime="20201029 12:47:48.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.085" endtime="20201029 12:47:48.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.088" endtime="20201029 12:47:48.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.059" endtime="20201029 12:47:48.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.056" endtime="20201029 12:47:48.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.097" endtime="20201029 12:47:48.382"></status>
</kw>
<msg timestamp="20201029 12:47:48.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019401764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019501833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.095" endtime="20201029 12:47:48.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019401764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019501833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.386" endtime="20201029 12:47:48.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.394" endtime="20201029 12:47:48.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.093" endtime="20201029 12:47:48.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.091" endtime="20201029 12:47:48.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:48.401" level="INFO">${RESULT} = [{'diff': 0.00010006900000000124}, {'diff': 9.980500000000142e-05}, {'diff': 9.988899999999884e-05}, {'diff': 0.00010020800000000094}, {'diff': 0.00010023600000000008}, {'diff': 9.983300000000056e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:48.398" endtime="20201029 12:47:48.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:48.405" level="INFO">${ACCURACY} = {'diff': [0.00010006900000000124, 9.980500000000142e-05, 9.988899999999884e-05, 0.00010020800000000094, 0.00010023600000000008, 9.983300000000056e-05, 9.994500000000059e-05, 9.965299999999816e-05, 0.0...</msg>
<status status="PASS" starttime="20201029 12:47:48.402" endtime="20201029 12:47:48.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.409" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 12:47:48.408" endtime="20201029 12:47:48.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.412" level="INFO">VALUE: [0.00010006900000000124, 9.980500000000142e-05, 9.988899999999884e-05, 0.00010020800000000094, 0.00010023600000000008, 9.983300000000056e-05, 9.994500000000059e-05, 9.965299999999816e-05, 0.00010007000000000071, 9.969400000000087e-05, 0.00010027799999999878, 0.00010043000000000205, 0.00010000000000000286, 9.987499999999927e-05, 0.0001001670000000017, 0.00010001399999999896, 0.00010011099999999995, 0.00010051400000000293, 9.99999999999994e-05, 0.0001004999999999999, 9.968100000000077e-05, 0.00010012499999999952, 0.0001003060000000014, 9.98609999999997e-05, 9.976399999999871e-05, 0.00010004099999999863, 9.955500000000117e-05, 0.0001002220000000005, 9.970799999999697e-05, 9.965299999999816e-05, 0.00010002799999999853, 9.987499999999927e-05, 9.988899999999884e-05, 0.00010004200000000157, 9.988899999999884e-05, 9.98609999999997e-05, 0.00010029199999999835, 0.00010037499999999977, 0.00010023600000000008, 0.0001000549999999982, 0.0001003060000000014, 0.00010038900000000281, 0.00010038899999999934, 9.988899999999884e-05, 9.987499999999927e-05, 9.988899999999884e-05, 9.962499999999902e-05, 0.00010011099999999995, 9.983299999999709e-05, 9.963899999999859e-05]</msg>
<status status="PASS" starttime="20201029 12:47:48.410" endtime="20201029 12:47:48.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.406" endtime="20201029 12:47:48.413"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:48.417" endtime="20201029 12:47:48.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.415" endtime="20201029 12:47:48.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.414" endtime="20201029 12:47:48.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.055" endtime="20201029 12:47:48.437"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.054" endtime="20201029 12:47:48.437"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.446" endtime="20201029 12:47:48.468"></status>
</kw>
<msg timestamp="20201029 12:47:48.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.445" endtime="20201029 12:47:48.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.469" endtime="20201029 12:47:48.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.472" endtime="20201029 12:47:48.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.442" endtime="20201029 12:47:48.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.440" endtime="20201029 12:47:48.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.481" endtime="20201029 12:47:48.766"></status>
</kw>
<msg timestamp="20201029 12:47:48.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020703194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020804625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.479" endtime="20201029 12:47:48.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020703194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020804625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.770" endtime="20201029 12:47:48.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.778" endtime="20201029 12:47:48.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.477" endtime="20201029 12:47:48.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.475" endtime="20201029 12:47:48.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:48.785" level="INFO">${RESULT} = [{'diff': 0.00010143099999999905}, {'diff': 0.000100722000000001}, {'diff': 0.00010107000000000171}, {'diff': 0.00010148600000000133}, {'diff': 0.00010073600000000058}, {'diff': 0.00010059700000000088...</msg>
<status status="PASS" starttime="20201029 12:47:48.782" endtime="20201029 12:47:48.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:48.789" level="INFO">${ACCURACY} = {'diff': [0.00010143099999999905, 0.000100722000000001, 0.00010107000000000171, 0.00010148600000000133, 0.00010073600000000058, 0.00010059700000000088, 0.00010057000000000121, 0.0001013199999999985, 0...</msg>
<status status="PASS" starttime="20201029 12:47:48.786" endtime="20201029 12:47:48.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.793" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 12:47:48.792" endtime="20201029 12:47:48.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.795" level="INFO">VALUE: [0.00010143099999999905, 0.000100722000000001, 0.00010107000000000171, 0.00010148600000000133, 0.00010073600000000058, 0.00010059700000000088, 0.00010057000000000121, 0.0001013199999999985, 0.00010147299999999776, 0.00010152800000000003, 0.00010148600000000133, 0.00010112500000000052, 0.00010088899999999984, 0.00010127799999999978, 0.00010113900000000009, 0.00010065300000000263, 0.00010079199999999885, 0.00010136200000000067, 0.00010075000000000014, 0.00010090299999999941, 0.00010102700000000006, 0.00010126400000000021, 0.0001012220000000015, 0.00010059700000000088, 0.00010137500000000077, 0.00010080499999999895, 0.00010123600000000108, 0.00010143099999999905, 0.00010075000000000014, 0.00010069500000000134, 0.00010079100000000285, 0.00010136200000000067, 0.00010056900000000174, 0.00010061100000000045, 0.00010066600000000273, 0.00010077799999999928, 0.0001008610000000007, 0.00010094399999999865, 0.00010109700000000138, 0.00010094499999999812, 0.0001008060000000019, 0.00010111099999999748, 0.00010066699999999873, 0.0001008749999999968, 0.00010111100000000095, 0.00010061100000000045, 0.00010067999999999883, 0.00010148599999999786, 0.00010075000000000014, 0.00010105599999999867]</msg>
<status status="PASS" starttime="20201029 12:47:48.794" endtime="20201029 12:47:48.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.789" endtime="20201029 12:47:48.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:48.801" endtime="20201029 12:47:48.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.800" endtime="20201029 12:47:48.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.798" endtime="20201029 12:47:48.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.438" endtime="20201029 12:47:48.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.438" endtime="20201029 12:47:48.822"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.830" endtime="20201029 12:47:48.850"></status>
</kw>
<msg timestamp="20201029 12:47:48.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.829" endtime="20201029 12:47:48.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:48.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:48.852" endtime="20201029 12:47:48.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.854" endtime="20201029 12:47:48.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.826" endtime="20201029 12:47:48.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.824" endtime="20201029 12:47:48.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:48.863" endtime="20201029 12:47:49.148"></status>
</kw>
<msg timestamp="20201029 12:47:49.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019471861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019573542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:48.862" endtime="20201029 12:47:49.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019471861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019573542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.152" endtime="20201029 12:47:49.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.160" endtime="20201029 12:47:49.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.859" endtime="20201029 12:47:49.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.858" endtime="20201029 12:47:49.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:49.167" level="INFO">${RESULT} = [{'diff': 0.0001016809999999993}, {'diff': 0.00010229200000000035}, {'diff': 0.00010215300000000066}, {'diff': 0.00010218000000000033}, {'diff': 0.00010154100000000013}, {'diff': 0.0001019580000000026...</msg>
<status status="PASS" starttime="20201029 12:47:49.164" endtime="20201029 12:47:49.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:49.172" level="INFO">${ACCURACY} = {'diff': [0.0001016809999999993, 0.00010229200000000035, 0.00010215300000000066, 0.00010218000000000033, 0.00010154100000000013, 0.00010195800000000269, 0.00010180499999999995, 0.00010179199999999985,...</msg>
<status status="PASS" starttime="20201029 12:47:49.168" endtime="20201029 12:47:49.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.176" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 12:47:49.175" endtime="20201029 12:47:49.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.178" level="INFO">VALUE: [0.0001016809999999993, 0.00010229200000000035, 0.00010215300000000066, 0.00010218000000000033, 0.00010154100000000013, 0.00010195800000000269, 0.00010180499999999995, 0.00010179199999999985, 0.00010211100000000195, 0.00010218000000000033, 0.00010161100000000145, 0.00010186099999999823, 0.00010240299999999744, 0.0001022220000000025, 0.00010187500000000127, 0.0001021939999999999, 0.00010224999999999818, 0.00010236099999999873, 0.00010211100000000195, 0.00010183300000000256, 0.00010224999999999818, 0.00010187500000000127, 0.00010244500000000309, 0.00010234700000000263, 0.00010187500000000127, 0.00010169500000000234, 0.00010191699999999998, 0.00010167999999999983, 0.00010206899999999977, 0.00010162500000000102, 0.00010193000000000008, 0.0001017359999999981, 0.0001020420000000001, 0.00010161100000000145, 0.00010172199999999854, 0.00010238900000000134, 0.00010194499999999912, 0.00010180599999999942, 0.00010229200000000035, 0.00010234699999999916, 0.0001025000000000019, 0.00010213900000000109, 0.00010215300000000066, 0.0001023610000000022, 0.00010216600000000076, 0.00010155599999999917, 0.0001021809999999998, 0.000102416000000001, 0.00010172199999999854, 0.00010179199999999985]</msg>
<status status="PASS" starttime="20201029 12:47:49.177" endtime="20201029 12:47:49.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.172" endtime="20201029 12:47:49.180"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:49.183" endtime="20201029 12:47:49.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.182" endtime="20201029 12:47:49.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.181" endtime="20201029 12:47:49.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.823" endtime="20201029 12:47:49.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:48.822" endtime="20201029 12:47:49.204"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.212" endtime="20201029 12:47:49.233"></status>
</kw>
<msg timestamp="20201029 12:47:49.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.211" endtime="20201029 12:47:49.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.235" endtime="20201029 12:47:49.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.237" endtime="20201029 12:47:49.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.208" endtime="20201029 12:47:49.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.206" endtime="20201029 12:47:49.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.246" endtime="20201029 12:47:49.534"></status>
</kw>
<msg timestamp="20201029 12:47:49.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019558611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019661944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.244" endtime="20201029 12:47:49.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019558611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019661944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.538" endtime="20201029 12:47:49.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.552" endtime="20201029 12:47:49.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.242" endtime="20201029 12:47:49.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.240" endtime="20201029 12:47:49.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:49.566" level="INFO">${RESULT} = [{'diff': 0.00010333300000000059}, {'diff': 0.00010268000000000083}, {'diff': 0.0001026940000000004}, {'diff': 0.00010333300000000059}, {'diff': 0.00010334700000000016}, {'diff': 0.0001031249999999990...</msg>
<status status="PASS" starttime="20201029 12:47:49.560" endtime="20201029 12:47:49.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:49.575" level="INFO">${ACCURACY} = {'diff': [0.00010333300000000059, 0.00010268000000000083, 0.0001026940000000004, 0.00010333300000000059, 0.00010334700000000016, 0.00010312499999999905, 0.00010270799999999997, 0.00010270899999999944,...</msg>
<status status="PASS" starttime="20201029 12:47:49.569" endtime="20201029 12:47:49.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.585" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 12:47:49.583" endtime="20201029 12:47:49.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.590" level="INFO">VALUE: [0.00010333300000000059, 0.00010268000000000083, 0.0001026940000000004, 0.00010333300000000059, 0.00010334700000000016, 0.00010312499999999905, 0.00010270799999999997, 0.00010270899999999944, 0.00010297300000000273, 0.00010298600000000283, 0.00010281900000000052, 0.00010275000000000215, 0.00010345800000000072, 0.0001035000000000029, 0.00010256900000000027, 0.00010262500000000202, 0.0001032359999999996, 0.00010266700000000073, 0.00010270899999999944, 0.00010275000000000215, 0.00010279200000000085, 0.00010330600000000092, 0.0001033749999999993, 0.00010352799999999857, 0.0001028749999999988, 0.00010320800000000047, 0.0001030550000000012, 0.00010320800000000047, 0.00010312500000000252, 0.00010347200000000029, 0.00010273600000000258, 0.00010299999999999893, 0.0001033619999999992, 0.00010322299999999951, 0.00010340199999999897, 0.00010287500000000227, 0.00010272199999999954, 0.00010277799999999782, 0.00010324999999999918, 0.00010272199999999954, 0.00010275000000000215, 0.00010282, 0.00010252800000000103, 0.00010256999999999974, 0.00010256999999999974, 0.00010343000000000158, 0.00010299999999999893, 0.00010344400000000115, 0.00010302699999999859, 0.00010338899999999887]</msg>
<status status="PASS" starttime="20201029 12:47:49.587" endtime="20201029 12:47:49.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.577" endtime="20201029 12:47:49.593"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:49.601" endtime="20201029 12:47:49.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.597" endtime="20201029 12:47:49.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.595" endtime="20201029 12:47:49.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.205" endtime="20201029 12:47:49.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.204" endtime="20201029 12:47:49.625"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.642" endtime="20201029 12:47:49.666"></status>
</kw>
<msg timestamp="20201029 12:47:49.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.639" endtime="20201029 12:47:49.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:49.668" endtime="20201029 12:47:49.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.670" endtime="20201029 12:47:49.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.634" endtime="20201029 12:47:49.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.630" endtime="20201029 12:47:49.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.679" endtime="20201029 12:47:49.965"></status>
</kw>
<msg timestamp="20201029 12:47:49.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036143361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036247403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.678" endtime="20201029 12:47:49.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036143361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036247403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:49.969" endtime="20201029 12:47:49.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:49.977" endtime="20201029 12:47:49.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.675" endtime="20201029 12:47:49.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.673" endtime="20201029 12:47:49.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:49.983" level="INFO">${RESULT} = [{'diff': 0.00010404199999999864}, {'diff': 0.00010384700000000413}, {'diff': 0.00010368099999999436}, {'diff': 0.00010387499999999633}, {'diff': 0.00010412500000000352}, {'diff': 0.000104458000000001...</msg>
<status status="PASS" starttime="20201029 12:47:49.980" endtime="20201029 12:47:49.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:49.987" level="INFO">${ACCURACY} = {'diff': [0.00010404199999999864, 0.00010384700000000413, 0.00010368099999999436, 0.00010387499999999633, 0.00010412500000000352, 0.00010445800000000172, 0.0001040689999999983, 0.0001042360000000006, ...</msg>
<status status="PASS" starttime="20201029 12:47:49.984" endtime="20201029 12:47:49.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.991" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 12:47:49.990" endtime="20201029 12:47:49.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:49.994" level="INFO">VALUE: [0.00010404199999999864, 0.00010384700000000413, 0.00010368099999999436, 0.00010387499999999633, 0.00010412500000000352, 0.00010445800000000172, 0.0001040689999999983, 0.0001042360000000006, 0.00010406999999999778, 0.00010433300000000506, 0.00010380599999999796, 0.00010380599999999796, 0.0001037360000000001, 0.00010405600000000514, 0.00010374999999999968, 0.00010379199999999839, 0.00010375000000000661, 0.00010362499999999608, 0.00010429099999999941, 0.00010398600000000036, 0.0001041810000000018, 0.00010448600000000086, 0.0001035559999999977, 0.00010390300000000241, 0.00010430499999999898, 0.00010441700000000248, 0.00010443100000000205, 0.00010362500000000302, 0.00010366700000000173, 0.00010412500000000352, 0.00010436099999999726, 0.00010361099999999651, 0.00010376399999999925, 0.00010374999999999968, 0.00010443000000000258, 0.0001040559999999982, 0.00010354200000000507, 0.0001043889999999964, 0.00010386200000000317, 0.00010374999999999968, 0.00010437499999999683, 0.00010379200000000532, 0.000104416000000003, 0.00010366600000000226, 0.00010404200000000557, 0.00010382000000000446, 0.00010374999999999968, 0.00010381999999999753, 0.00010374999999999968, 0.00010445800000000172]</msg>
<status status="PASS" starttime="20201029 12:47:49.992" endtime="20201029 12:47:49.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.988" endtime="20201029 12:47:49.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:49.999" endtime="20201029 12:47:50.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.998" endtime="20201029 12:47:50.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.997" endtime="20201029 12:47:50.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.627" endtime="20201029 12:47:50.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:49.626" endtime="20201029 12:47:50.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:11.172" endtime="20201029 12:47:50.020"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:11.098" endtime="20201029 12:47:50.021" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:50.027" endtime="20201029 12:47:50.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.026" endtime="20201029 12:47:50.047"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.060" endtime="20201029 12:47:50.078"></status>
</kw>
<msg timestamp="20201029 12:47:50.078" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.059" endtime="20201029 12:47:50.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.081" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.079" endtime="20201029 12:47:50.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.083" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:50.082" endtime="20201029 12:47:50.084"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:50.056" endtime="20201029 12:47:50.084"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:50.054" endtime="20201029 12:47:50.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.052" endtime="20201029 12:47:50.085"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:50.089" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:50.088" endtime="20201029 12:47:50.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.086" endtime="20201029 12:47:50.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.052" endtime="20201029 12:47:50.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.051" endtime="20201029 12:47:50.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.091" endtime="20201029 12:47:50.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.050" endtime="20201029 12:47:50.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.048" endtime="20201029 12:47:50.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.025" endtime="20201029 12:47:50.093"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.104" endtime="20201029 12:47:50.122"></status>
</kw>
<msg timestamp="20201029 12:47:50.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.102" endtime="20201029 12:47:50.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.123" endtime="20201029 12:47:50.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.126" endtime="20201029 12:47:50.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.098" endtime="20201029 12:47:50.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.096" endtime="20201029 12:47:50.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.135" endtime="20201029 12:47:50.421"></status>
</kw>
<msg timestamp="20201029 12:47:50.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066580403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066610917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.134" endtime="20201029 12:47:50.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066580403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066610917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.425" endtime="20201029 12:47:50.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.433" endtime="20201029 12:47:50.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.131" endtime="20201029 12:47:50.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.129" endtime="20201029 12:47:50.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:50.439" level="INFO">${RESULT} = [{'diff': 3.0514000000009256e-05}, {'diff': 3.04170000000048e-05}, {'diff': 3.044500000000394e-05}, {'diff': 3.0416000000005328e-05}, {'diff': 3.0416999999990924e-05}, {'diff': 3.04170000000048e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:50.436" endtime="20201029 12:47:50.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:50.443" level="INFO">${ACCURACY} = {'diff': [3.0514000000009256e-05, 3.04170000000048e-05, 3.044500000000394e-05, 3.0416000000005328e-05, 3.0416999999990924e-05, 3.04170000000048e-05, 3.0416999999990924e-05, 3.0472000000003607e-05, 3.0...</msg>
<status status="PASS" starttime="20201029 12:47:50.440" endtime="20201029 12:47:50.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.449" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 12:47:50.448" endtime="20201029 12:47:50.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.451" level="INFO">VALUE: [3.0514000000009256e-05, 3.04170000000048e-05, 3.044500000000394e-05, 3.0416000000005328e-05, 3.0416999999990924e-05, 3.04170000000048e-05, 3.0416999999990924e-05, 3.0472000000003607e-05, 3.044399999999059e-05, 3.04170000000048e-05, 3.0430000000011836e-05, 3.041599999999145e-05, 3.0416999999990924e-05, 3.0416999999990924e-05, 3.0430999999997432e-05, 3.042999999999796e-05, 3.041599999999145e-05, 3.0430999999997432e-05, 3.0402999999998293e-05, 3.0512999999995905e-05, 3.042999999999796e-05, 3.036100000000652e-05, 3.0416999999990924e-05, 3.04170000000048e-05, 3.0430999999997432e-05, 3.04170000000048e-05, 3.042999999999796e-05, 3.0360999999992644e-05, 3.044500000000394e-05, 3.0416000000005328e-05, 3.044500000000394e-05, 3.044500000000394e-05, 3.04170000000048e-05, 3.0416999999990924e-05, 3.0430999999997432e-05, 3.0444000000004467e-05, 3.0360999999992644e-05, 3.042999999999796e-05, 3.04170000000048e-05, 3.04170000000048e-05, 3.042999999999796e-05, 3.04170000000048e-05, 3.0444999999990063e-05, 3.0416000000005328e-05, 3.043100000001131e-05, 3.04170000000048e-05, 3.038900000000566e-05, 3.0444999999990063e-05, 3.049999999998887e-05, 3.036100000000652e-05]</msg>
<status status="PASS" starttime="20201029 12:47:50.450" endtime="20201029 12:47:50.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.444" endtime="20201029 12:47:50.452"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:50.456" endtime="20201029 12:47:50.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.454" endtime="20201029 12:47:50.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.453" endtime="20201029 12:47:50.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.095" endtime="20201029 12:47:50.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.094" endtime="20201029 12:47:50.476"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.485" endtime="20201029 12:47:50.503"></status>
</kw>
<msg timestamp="20201029 12:47:50.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.483" endtime="20201029 12:47:50.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.505" endtime="20201029 12:47:50.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.507" endtime="20201029 12:47:50.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.481" endtime="20201029 12:47:50.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.479" endtime="20201029 12:47:50.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.516" endtime="20201029 12:47:50.801"></status>
</kw>
<msg timestamp="20201029 12:47:50.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020023903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020054472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.515" endtime="20201029 12:47:50.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020023903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020054472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.805" endtime="20201029 12:47:50.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.813" endtime="20201029 12:47:50.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.512" endtime="20201029 12:47:50.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.510" endtime="20201029 12:47:50.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:50.820" level="INFO">${RESULT} = [{'diff': 3.056900000000112e-05}, {'diff': 3.041599999999839e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0431000000000902e-05...</msg>
<status status="PASS" starttime="20201029 12:47:50.817" endtime="20201029 12:47:50.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:50.825" level="INFO">${ACCURACY} = {'diff': [3.056900000000112e-05, 3.041599999999839e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0430999999997432e-05, 3.0374999999999153e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:50.821" endtime="20201029 12:47:50.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.830" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 12:47:50.829" endtime="20201029 12:47:50.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.832" level="INFO">VALUE: [3.056900000000112e-05, 3.041599999999839e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0430999999997432e-05, 3.0374999999999153e-05, 3.044500000000047e-05, 3.0403000000001762e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.0403000000001762e-05, 3.044399999999753e-05, 3.0444000000000998e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.041599999999839e-05, 3.0430999999997432e-05, 3.0416999999997862e-05, 3.0360999999999583e-05, 3.0472000000000138e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.0458000000000568e-05, 3.0444000000000998e-05, 3.0513999999998848e-05, 3.0431000000000902e-05, 3.0444000000000998e-05, 3.0416999999997862e-05, 3.0430999999997432e-05, 3.041599999999839e-05, 3.0444000000000998e-05, 3.041599999999839e-05, 3.041599999999839e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0402999999998293e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0499999999999278e-05, 3.0417000000001332e-05, 3.0416999999997862e-05, 3.0430999999997432e-05, 3.0416999999997862e-05, 3.0485999999999708e-05, 3.041599999999839e-05, 3.0431000000000902e-05]</msg>
<status status="PASS" starttime="20201029 12:47:50.831" endtime="20201029 12:47:50.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.826" endtime="20201029 12:47:50.833"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:50.836" endtime="20201029 12:47:50.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.835" endtime="20201029 12:47:50.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.834" endtime="20201029 12:47:50.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.477" endtime="20201029 12:47:50.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.477" endtime="20201029 12:47:50.857"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.866" endtime="20201029 12:47:50.883"></status>
</kw>
<msg timestamp="20201029 12:47:50.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.864" endtime="20201029 12:47:50.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:50.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:50.885" endtime="20201029 12:47:50.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.887" endtime="20201029 12:47:50.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.862" endtime="20201029 12:47:50.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.859" endtime="20201029 12:47:50.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:50.896" endtime="20201029 12:47:51.183"></status>
</kw>
<msg timestamp="20201029 12:47:51.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020019167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020049653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:50.895" endtime="20201029 12:47:51.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020019167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020049653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:51.188" endtime="20201029 12:47:51.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.196" endtime="20201029 12:47:51.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.892" endtime="20201029 12:47:51.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.891" endtime="20201029 12:47:51.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:51.203" level="INFO">${RESULT} = [{'diff': 3.0485999999999708e-05}, {'diff': 3.045900000000004e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0430999999997432e-05}, {'diff': 3.0416999999997862e-05}, {'diff': 3.0458000000000568e-0...</msg>
<status status="PASS" starttime="20201029 12:47:51.200" endtime="20201029 12:47:51.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:51.207" level="INFO">${ACCURACY} = {'diff': [3.0485999999999708e-05, 3.045900000000004e-05, 3.0431000000000902e-05, 3.0430999999997432e-05, 3.0416999999997862e-05, 3.0458000000000568e-05, 3.044500000000047e-05, 3.0430000000001428e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:51.204" endtime="20201029 12:47:51.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.212" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 12:47:51.211" endtime="20201029 12:47:51.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.214" level="INFO">VALUE: [3.0485999999999708e-05, 3.045900000000004e-05, 3.0431000000000902e-05, 3.0430999999997432e-05, 3.0416999999997862e-05, 3.0458000000000568e-05, 3.044500000000047e-05, 3.0430000000001428e-05, 3.041599999999839e-05, 3.0514000000002317e-05, 3.0431000000000902e-05, 3.044399999999753e-05, 3.0430000000001428e-05, 3.0416000000001858e-05, 3.0417000000001332e-05, 3.0430999999997432e-05, 3.047299999999961e-05, 3.0388999999998723e-05, 3.0431000000000902e-05, 3.041599999999839e-05, 3.0388999999998723e-05, 3.0431000000000902e-05, 3.0389000000002192e-05, 3.0416999999997862e-05, 3.0417000000001332e-05, 3.0416000000001858e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.0444999999997002e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0416999999997862e-05, 3.0444000000000998e-05, 3.0416999999997862e-05, 3.044500000000047e-05, 3.0403000000001762e-05, 3.0431000000000902e-05, 3.0472000000000138e-05, 3.041599999999839e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0430999999997432e-05, 3.0417000000001332e-05, 3.041599999999839e-05, 3.0444000000000998e-05, 3.041599999999839e-05, 3.042999999999796e-05, 3.0416999999997862e-05]</msg>
<status status="PASS" starttime="20201029 12:47:51.213" endtime="20201029 12:47:51.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.208" endtime="20201029 12:47:51.215"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:51.219" endtime="20201029 12:47:51.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.217" endtime="20201029 12:47:51.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.216" endtime="20201029 12:47:51.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.858" endtime="20201029 12:47:51.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.857" endtime="20201029 12:47:51.240"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.250" endtime="20201029 12:47:51.268"></status>
</kw>
<msg timestamp="20201029 12:47:51.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.248" endtime="20201029 12:47:51.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.269" endtime="20201029 12:47:51.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.272" endtime="20201029 12:47:51.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.245" endtime="20201029 12:47:51.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.243" endtime="20201029 12:47:51.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.281" endtime="20201029 12:47:51.580"></status>
</kw>
<msg timestamp="20201029 12:47:51.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021465389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:51.280" endtime="20201029 12:47:51.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021465389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:51.584" endtime="20201029 12:47:51.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.592" endtime="20201029 12:47:51.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.277" endtime="20201029 12:47:51.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.275" endtime="20201029 12:47:51.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:51.599" level="INFO">${RESULT} = [{'diff': 3.0500000000002747e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0403000000001762e-05}, {'diff': 3.0403000000001762e-05}, {'diff': 3.0347999999999486e-05}, {'diff': 3.0416000000001858e-...</msg>
<status status="PASS" starttime="20201029 12:47:51.596" endtime="20201029 12:47:51.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:51.608" level="INFO">${ACCURACY} = {'diff': [3.0500000000002747e-05, 3.0431000000000902e-05, 3.0403000000001762e-05, 3.0403000000001762e-05, 3.0347999999999486e-05, 3.0416000000001858e-05, 3.0389000000002192e-05, 3.0417000000001332e-05...</msg>
<status status="PASS" starttime="20201029 12:47:51.600" endtime="20201029 12:47:51.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.612" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 12:47:51.611" endtime="20201029 12:47:51.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.615" level="INFO">VALUE: [3.0500000000002747e-05, 3.0431000000000902e-05, 3.0403000000001762e-05, 3.0403000000001762e-05, 3.0347999999999486e-05, 3.0416000000001858e-05, 3.0389000000002192e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.042999999999796e-05, 3.0347000000000013e-05, 3.0430000000001428e-05, 3.0416999999997862e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.042999999999796e-05, 3.0416000000001858e-05, 3.0417000000001332e-05, 3.0430999999997432e-05, 3.0417000000001332e-05, 3.0430999999997432e-05, 3.044500000000047e-05, 3.0416999999997862e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0430999999997432e-05, 3.0403000000001762e-05, 3.0499999999999278e-05, 3.0402999999998293e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0472000000000138e-05, 3.047299999999961e-05, 3.0417000000001332e-05, 3.0444999999997002e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0416999999997862e-05, 3.0431000000000902e-05]</msg>
<status status="PASS" starttime="20201029 12:47:51.614" endtime="20201029 12:47:51.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.609" endtime="20201029 12:47:51.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:51.625" endtime="20201029 12:47:51.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.624" endtime="20201029 12:47:51.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.623" endtime="20201029 12:47:51.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.241" endtime="20201029 12:47:51.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.240" endtime="20201029 12:47:51.646"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.654" endtime="20201029 12:47:51.672"></status>
</kw>
<msg timestamp="20201029 12:47:51.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.653" endtime="20201029 12:47:51.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:51.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:51.674" endtime="20201029 12:47:51.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.677" endtime="20201029 12:47:51.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.650" endtime="20201029 12:47:51.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.648" endtime="20201029 12:47:51.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:51.689" endtime="20201029 12:47:51.988"></status>
</kw>
<msg timestamp="20201029 12:47:51.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019415861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019446361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:51.687" endtime="20201029 12:47:51.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019415861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019446361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:51.993" endtime="20201029 12:47:52.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.001" endtime="20201029 12:47:52.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.683" endtime="20201029 12:47:52.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.681" endtime="20201029 12:47:52.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:52.008" level="INFO">${RESULT} = [{'diff': 3.0499999999999278e-05}, {'diff': 3.0430999999997432e-05}, {'diff': 3.0416999999997862e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0402999999998293e-05}, {'diff': 3.0430999999997432e-...</msg>
<status status="PASS" starttime="20201029 12:47:52.005" endtime="20201029 12:47:52.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:52.013" level="INFO">${ACCURACY} = {'diff': [3.0499999999999278e-05, 3.0430999999997432e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.0402999999998293e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.0417000000001332e-05...</msg>
<status status="PASS" starttime="20201029 12:47:52.009" endtime="20201029 12:47:52.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.018" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 12:47:52.017" endtime="20201029 12:47:52.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.021" level="INFO">VALUE: [3.0499999999999278e-05, 3.0430999999997432e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.0402999999998293e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0500000000002747e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0416999999997862e-05, 3.0417000000001332e-05, 3.0458000000000568e-05, 3.041599999999839e-05, 3.044500000000047e-05, 3.0430000000001428e-05, 3.041599999999839e-05, 3.04579999999971e-05, 3.0430000000001428e-05, 3.0416000000001858e-05, 3.0389000000002192e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0388999999998723e-05, 3.0472000000000138e-05, 3.0417000000001332e-05, 3.041599999999839e-05, 3.0430999999997432e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.044500000000047e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.044500000000047e-05, 3.0417000000001332e-05, 3.0444000000000998e-05, 3.0430000000001428e-05, 3.041599999999839e-05, 3.041599999999839e-05, 3.0416000000001858e-05, 3.0402999999998293e-05, 3.0430999999997432e-05, 3.044500000000047e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.0513999999998848e-05, 3.0374999999999153e-05]</msg>
<status status="PASS" starttime="20201029 12:47:52.019" endtime="20201029 12:47:52.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.014" endtime="20201029 12:47:52.022"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:52.026" endtime="20201029 12:47:52.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.024" endtime="20201029 12:47:52.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.023" endtime="20201029 12:47:52.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.647" endtime="20201029 12:47:52.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:51.646" endtime="20201029 12:47:52.047"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.056" endtime="20201029 12:47:52.074"></status>
</kw>
<msg timestamp="20201029 12:47:52.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.054" endtime="20201029 12:47:52.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.076" endtime="20201029 12:47:52.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.078" endtime="20201029 12:47:52.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.051" endtime="20201029 12:47:52.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.049" endtime="20201029 12:47:52.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.092" endtime="20201029 12:47:52.378"></status>
</kw>
<msg timestamp="20201029 12:47:52.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020048056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020078583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:52.089" endtime="20201029 12:47:52.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020048056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020078583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:52.382" endtime="20201029 12:47:52.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.390" endtime="20201029 12:47:52.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.086" endtime="20201029 12:47:52.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.083" endtime="20201029 12:47:52.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:52.396" level="INFO">${RESULT} = [{'diff': 3.0526999999998944e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0444000000000998e-05}, {'diff': 3.0360999999999583e-05}, {'diff': 3.0430000000001428e-05}, {'diff': 3.0416000000001858e-...</msg>
<status status="PASS" starttime="20201029 12:47:52.393" endtime="20201029 12:47:52.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:52.401" level="INFO">${ACCURACY} = {'diff': [3.0526999999998944e-05, 3.0431000000000902e-05, 3.0444000000000998e-05, 3.0360999999999583e-05, 3.0430000000001428e-05, 3.0416000000001858e-05, 3.0430999999997432e-05, 3.0416000000001858e-05...</msg>
<status status="PASS" starttime="20201029 12:47:52.397" endtime="20201029 12:47:52.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.405" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 12:47:52.404" endtime="20201029 12:47:52.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.407" level="INFO">VALUE: [3.0526999999998944e-05, 3.0431000000000902e-05, 3.0444000000000998e-05, 3.0360999999999583e-05, 3.0430000000001428e-05, 3.0416000000001858e-05, 3.0430999999997432e-05, 3.0416000000001858e-05, 3.0431000000000902e-05, 3.0402999999998293e-05, 3.042999999999796e-05, 3.0402999999998293e-05, 3.0416999999997862e-05, 3.0430000000001428e-05, 3.0403000000001762e-05, 3.0430999999997432e-05, 3.045900000000004e-05, 3.041599999999839e-05, 3.0485999999999708e-05, 3.0403000000001762e-05, 3.0417000000001332e-05, 3.0430999999997432e-05, 3.0417000000001332e-05, 3.0403000000001762e-05, 3.0430999999997432e-05, 3.0430000000001428e-05, 3.041599999999839e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0347999999999486e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.0416000000001858e-05, 3.0416999999997862e-05, 3.0430000000001428e-05, 3.0416999999997862e-05, 3.0374999999999153e-05, 3.045900000000004e-05, 3.0417000000001332e-05, 3.042999999999796e-05, 3.0374999999999153e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0347999999999486e-05, 3.0458000000000568e-05, 3.041599999999839e-05, 3.041599999999839e-05, 3.0416999999997862e-05, 3.0431000000000902e-05]</msg>
<status status="PASS" starttime="20201029 12:47:52.406" endtime="20201029 12:47:52.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.401" endtime="20201029 12:47:52.409"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:52.412" endtime="20201029 12:47:52.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.411" endtime="20201029 12:47:52.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.410" endtime="20201029 12:47:52.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.048" endtime="20201029 12:47:52.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.047" endtime="20201029 12:47:52.433"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.441" endtime="20201029 12:47:52.459"></status>
</kw>
<msg timestamp="20201029 12:47:52.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.440" endtime="20201029 12:47:52.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.461" endtime="20201029 12:47:52.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.463" endtime="20201029 12:47:52.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.437" endtime="20201029 12:47:52.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.435" endtime="20201029 12:47:52.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.472" endtime="20201029 12:47:52.773"></status>
</kw>
<msg timestamp="20201029 12:47:52.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020279708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020310236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:52.471" endtime="20201029 12:47:52.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020279708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020310236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:52.777" endtime="20201029 12:47:52.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.785" endtime="20201029 12:47:52.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.468" endtime="20201029 12:47:52.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.467" endtime="20201029 12:47:52.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:52.792" level="INFO">${RESULT} = [{'diff': 3.052799999999842e-05}, {'diff': 3.042999999999796e-05}, {'diff': 3.0430999999997432e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0430000000001428e-05}, {'diff': 3.0513999999998848e-05...</msg>
<status status="PASS" starttime="20201029 12:47:52.789" endtime="20201029 12:47:52.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:52.796" level="INFO">${ACCURACY} = {'diff': [3.052799999999842e-05, 3.042999999999796e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0513999999998848e-05, 3.0430000000001428e-05, 3.0499999999999278e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:52.793" endtime="20201029 12:47:52.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.801" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 12:47:52.800" endtime="20201029 12:47:52.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.803" level="INFO">VALUE: [3.052799999999842e-05, 3.042999999999796e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0513999999998848e-05, 3.0430000000001428e-05, 3.0499999999999278e-05, 3.042999999999796e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0444000000000998e-05, 3.0417000000001332e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.041599999999839e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0388999999998723e-05, 3.0430999999997432e-05, 3.041599999999839e-05, 3.0430999999997432e-05, 3.0375000000002622e-05, 3.042999999999796e-05, 3.0417000000001332e-05, 3.0444000000000998e-05, 3.0416999999997862e-05, 3.041599999999839e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.041599999999839e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0444000000000998e-05, 3.044500000000047e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0416000000001858e-05, 3.0375000000002622e-05, 3.0444000000000998e-05, 3.0416999999997862e-05, 3.0444000000000998e-05, 3.0430999999997432e-05]</msg>
<status status="PASS" starttime="20201029 12:47:52.802" endtime="20201029 12:47:52.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.797" endtime="20201029 12:47:52.806"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:52.809" endtime="20201029 12:47:52.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.808" endtime="20201029 12:47:52.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.807" endtime="20201029 12:47:52.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.434" endtime="20201029 12:47:52.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.433" endtime="20201029 12:47:52.830"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.839" endtime="20201029 12:47:52.857"></status>
</kw>
<msg timestamp="20201029 12:47:52.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.837" endtime="20201029 12:47:52.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:52.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:52.859" endtime="20201029 12:47:52.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.861" endtime="20201029 12:47:52.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.835" endtime="20201029 12:47:52.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.833" endtime="20201029 12:47:52.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:52.871" endtime="20201029 12:47:53.158"></status>
</kw>
<msg timestamp="20201029 12:47:53.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020073319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020103833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:52.869" endtime="20201029 12:47:53.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020073319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020103833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:53.162" endtime="20201029 12:47:53.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.171" endtime="20201029 12:47:53.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.867" endtime="20201029 12:47:53.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.865" endtime="20201029 12:47:53.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:53.178" level="INFO">${RESULT} = [{'diff': 3.0514000000002317e-05}, {'diff': 3.0472000000000138e-05}, {'diff': 3.0417000000001332e-05}, {'diff': 3.0430000000001428e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0388999999998723e-...</msg>
<status status="PASS" starttime="20201029 12:47:53.174" endtime="20201029 12:47:53.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:53.185" level="INFO">${ACCURACY} = {'diff': [3.0514000000002317e-05, 3.0472000000000138e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0388999999998723e-05, 3.042999999999796e-05, 3.0417000000001332e-05,...</msg>
<status status="PASS" starttime="20201029 12:47:53.179" endtime="20201029 12:47:53.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.190" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 12:47:53.189" endtime="20201029 12:47:53.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.192" level="INFO">VALUE: [3.0514000000002317e-05, 3.0472000000000138e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0388999999998723e-05, 3.042999999999796e-05, 3.0417000000001332e-05, 3.042999999999796e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.0485999999999708e-05, 3.042999999999796e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.047299999999961e-05, 3.0416999999997862e-05, 3.0388999999998723e-05, 3.0416000000001858e-05, 3.042999999999796e-05, 3.0430000000001428e-05, 3.0402999999998293e-05, 3.042999999999796e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0416000000001858e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.0458000000000568e-05, 3.045900000000004e-05, 3.041599999999839e-05, 3.0416000000001858e-05, 3.0388999999998723e-05, 3.0485999999999708e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.042999999999796e-05, 3.0403000000001762e-05, 3.042999999999796e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0485999999999708e-05, 3.0403000000001762e-05]</msg>
<status status="PASS" starttime="20201029 12:47:53.191" endtime="20201029 12:47:53.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.186" endtime="20201029 12:47:53.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:53.197" endtime="20201029 12:47:53.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.196" endtime="20201029 12:47:53.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.195" endtime="20201029 12:47:53.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.831" endtime="20201029 12:47:53.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:52.830" endtime="20201029 12:47:53.218"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.227" endtime="20201029 12:47:53.245"></status>
</kw>
<msg timestamp="20201029 12:47:53.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.225" endtime="20201029 12:47:53.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.247" endtime="20201029 12:47:53.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.249" endtime="20201029 12:47:53.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.223" endtime="20201029 12:47:53.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.220" endtime="20201029 12:47:53.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.258" endtime="20201029 12:47:53.545"></status>
</kw>
<msg timestamp="20201029 12:47:53.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020138583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020169111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:53.257" endtime="20201029 12:47:53.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020138583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020169111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:53.549" endtime="20201029 12:47:53.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.558" endtime="20201029 12:47:53.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.254" endtime="20201029 12:47:53.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.252" endtime="20201029 12:47:53.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:53.565" level="INFO">${RESULT} = [{'diff': 3.052799999999842e-05}, {'diff': 3.042999999999796e-05}, {'diff': 3.044399999999753e-05}, {'diff': 3.044500000000047e-05}, {'diff': 3.0430000000001428e-05}, {'diff': 3.0430999999997432e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:53.561" endtime="20201029 12:47:53.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:53.569" level="INFO">${ACCURACY} = {'diff': [3.052799999999842e-05, 3.042999999999796e-05, 3.044399999999753e-05, 3.044500000000047e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.0416999999997862e-05, 3.0416000000001858e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:47:53.566" endtime="20201029 12:47:53.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.573" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 12:47:53.572" endtime="20201029 12:47:53.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.576" level="INFO">VALUE: [3.052799999999842e-05, 3.042999999999796e-05, 3.044399999999753e-05, 3.044500000000047e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.0416999999997862e-05, 3.0416000000001858e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.044500000000047e-05, 3.04579999999971e-05, 3.0499999999999278e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.044500000000047e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0374999999999153e-05, 3.0472000000000138e-05, 3.0388999999998723e-05, 3.044399999999753e-05, 3.0431000000000902e-05, 3.045900000000004e-05, 3.0417000000001332e-05, 3.041599999999839e-05, 3.044399999999753e-05, 3.041599999999839e-05, 3.0430000000001428e-05, 3.041599999999839e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.045900000000004e-05, 3.0444000000000998e-05, 3.0417000000001332e-05, 3.0416999999997862e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.040199999999882e-05, 3.0431000000000902e-05, 3.0403000000001762e-05, 3.041599999999839e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0403000000001762e-05, 3.0430999999997432e-05, 3.0417000000001332e-05]</msg>
<status status="PASS" starttime="20201029 12:47:53.574" endtime="20201029 12:47:53.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.570" endtime="20201029 12:47:53.577"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:53.581" endtime="20201029 12:47:53.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.580" endtime="20201029 12:47:53.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.578" endtime="20201029 12:47:53.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.219" endtime="20201029 12:47:53.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.218" endtime="20201029 12:47:53.602"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.611" endtime="20201029 12:47:53.629"></status>
</kw>
<msg timestamp="20201029 12:47:53.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.609" endtime="20201029 12:47:53.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.631" endtime="20201029 12:47:53.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.633" endtime="20201029 12:47:53.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.607" endtime="20201029 12:47:53.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.604" endtime="20201029 12:47:53.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.643" endtime="20201029 12:47:53.929"></status>
</kw>
<msg timestamp="20201029 12:47:53.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020954653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020985111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:53.641" endtime="20201029 12:47:53.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020954653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020985111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:53.934" endtime="20201029 12:47:53.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.942" endtime="20201029 12:47:53.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.638" endtime="20201029 12:47:53.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.637" endtime="20201029 12:47:53.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:53.949" level="INFO">${RESULT} = [{'diff': 3.0458000000000568e-05}, {'diff': 3.0430999999997432e-05}, {'diff': 3.041599999999839e-05}, {'diff': 3.0417000000001332e-05}, {'diff': 3.042999999999796e-05}, {'diff': 3.0417000000001332e-05...</msg>
<status status="PASS" starttime="20201029 12:47:53.946" endtime="20201029 12:47:53.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:53.953" level="INFO">${ACCURACY} = {'diff': [3.0458000000000568e-05, 3.0430999999997432e-05, 3.041599999999839e-05, 3.0417000000001332e-05, 3.042999999999796e-05, 3.0417000000001332e-05, 3.0430999999997432e-05, 3.0416999999997862e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:53.950" endtime="20201029 12:47:53.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.958" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 12:47:53.957" endtime="20201029 12:47:53.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.960" level="INFO">VALUE: [3.0458000000000568e-05, 3.0430999999997432e-05, 3.041599999999839e-05, 3.0417000000001332e-05, 3.042999999999796e-05, 3.0417000000001332e-05, 3.0430999999997432e-05, 3.0416999999997862e-05, 3.0389000000002192e-05, 3.041599999999839e-05, 3.0430999999997432e-05, 3.0485999999999708e-05, 3.0417000000001332e-05, 3.0458000000000568e-05, 3.0416999999997862e-05, 3.0389000000002192e-05, 3.0472000000000138e-05, 3.0388999999998723e-05, 3.0458000000000568e-05, 3.0430999999997432e-05, 3.0417000000001332e-05, 3.0444000000000998e-05, 3.044399999999753e-05, 3.0430999999997432e-05, 3.0430999999997432e-05, 3.0430000000001428e-05, 3.0416999999997862e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0388999999998723e-05, 3.0430000000001428e-05, 3.0472000000000138e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0444000000000998e-05, 3.0417000000001332e-05, 3.0360999999999583e-05, 3.0417000000001332e-05, 3.042999999999796e-05, 3.0430999999997432e-05, 3.0374999999999153e-05, 3.041599999999839e-05, 3.041599999999839e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.044500000000047e-05, 3.0485999999999708e-05]</msg>
<status status="PASS" starttime="20201029 12:47:53.959" endtime="20201029 12:47:53.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.954" endtime="20201029 12:47:53.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:53.966" endtime="20201029 12:47:53.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.965" endtime="20201029 12:47:53.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.964" endtime="20201029 12:47:53.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.603" endtime="20201029 12:47:53.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.602" endtime="20201029 12:47:53.987"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.996" endtime="20201029 12:47:54.015"></status>
</kw>
<msg timestamp="20201029 12:47:54.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.994" endtime="20201029 12:47:54.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.016" endtime="20201029 12:47:54.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.019" endtime="20201029 12:47:54.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.992" endtime="20201029 12:47:54.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.990" endtime="20201029 12:47:54.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.028" endtime="20201029 12:47:54.314"></status>
</kw>
<msg timestamp="20201029 12:47:54.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020279111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020309625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:54.026" endtime="20201029 12:47:54.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020279111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020309625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:54.318" endtime="20201029 12:47:54.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.327" endtime="20201029 12:47:54.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.024" endtime="20201029 12:47:54.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.022" endtime="20201029 12:47:54.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:54.334" level="INFO">${RESULT} = [{'diff': 3.0514000000002317e-05}, {'diff': 3.0444000000000998e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0430000000001428e-05}, {'diff': 3.044500000000047e-05}, {'diff': 3.0431000000000902e-0...</msg>
<status status="PASS" starttime="20201029 12:47:54.330" endtime="20201029 12:47:54.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:54.339" level="INFO">${ACCURACY} = {'diff': [3.0514000000002317e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.044500000000047e-05, 3.0431000000000902e-05, 3.0444000000000998e-05, 3.044500000000047e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:54.335" endtime="20201029 12:47:54.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.343" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 12:47:54.342" endtime="20201029 12:47:54.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.346" level="INFO">VALUE: [3.0514000000002317e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.044500000000047e-05, 3.0431000000000902e-05, 3.0444000000000998e-05, 3.044500000000047e-05, 3.0402999999998293e-05, 3.0472000000000138e-05, 3.0500000000002747e-05, 3.0333000000000443e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.041599999999839e-05, 3.0402999999998293e-05, 3.0416999999997862e-05, 3.0430000000001428e-05, 3.041599999999839e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0389000000002192e-05, 3.044500000000047e-05, 3.0416999999997862e-05, 3.0417000000001332e-05, 3.0430999999997432e-05, 3.0402999999998293e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.044500000000047e-05, 3.0500000000002747e-05, 3.0430999999997432e-05, 3.0417000000001332e-05, 3.0485999999999708e-05, 3.0417000000001332e-05, 3.0486000000003177e-05, 3.0444000000000998e-05, 3.038799999999925e-05, 3.0430000000001428e-05, 3.0388999999998723e-05, 3.041599999999839e-05, 3.044500000000047e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0402999999998293e-05]</msg>
<status status="PASS" starttime="20201029 12:47:54.344" endtime="20201029 12:47:54.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.340" endtime="20201029 12:47:54.347"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:54.351" endtime="20201029 12:47:54.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.350" endtime="20201029 12:47:54.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.348" endtime="20201029 12:47:54.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.988" endtime="20201029 12:47:54.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.987" endtime="20201029 12:47:54.372"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.381" endtime="20201029 12:47:54.398"></status>
</kw>
<msg timestamp="20201029 12:47:54.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.379" endtime="20201029 12:47:54.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.400" endtime="20201029 12:47:54.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.402" endtime="20201029 12:47:54.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.377" endtime="20201029 12:47:54.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.374" endtime="20201029 12:47:54.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.412" endtime="20201029 12:47:54.700"></status>
</kw>
<msg timestamp="20201029 12:47:54.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020320806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020351319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:54.410" endtime="20201029 12:47:54.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020320806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020351319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:54.704" endtime="20201029 12:47:54.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.713" endtime="20201029 12:47:54.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.408" endtime="20201029 12:47:54.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.406" endtime="20201029 12:47:54.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:54.719" level="INFO">${RESULT} = [{'diff': 3.0512999999999374e-05}, {'diff': 3.0417000000001332e-05}, {'diff': 3.04579999999971e-05}, {'diff': 3.0417000000001332e-05}, {'diff': 3.0388999999998723e-05}, {'diff': 3.0417000000001332e-05...</msg>
<status status="PASS" starttime="20201029 12:47:54.716" endtime="20201029 12:47:54.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:54.724" level="INFO">${ACCURACY} = {'diff': [3.0512999999999374e-05, 3.0417000000001332e-05, 3.04579999999971e-05, 3.0417000000001332e-05, 3.0388999999998723e-05, 3.0417000000001332e-05, 3.044500000000047e-05, 3.044500000000047e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:47:54.720" endtime="20201029 12:47:54.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.728" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 12:47:54.727" endtime="20201029 12:47:54.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.731" level="INFO">VALUE: [3.0512999999999374e-05, 3.0417000000001332e-05, 3.04579999999971e-05, 3.0417000000001332e-05, 3.0388999999998723e-05, 3.0417000000001332e-05, 3.044500000000047e-05, 3.044500000000047e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0458000000000568e-05, 3.0416999999997862e-05, 3.0417000000001332e-05, 3.044500000000047e-05, 3.044500000000047e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0333000000000443e-05, 3.0347000000000013e-05, 3.042999999999796e-05, 3.0416999999997862e-05, 3.0417000000001332e-05, 3.044500000000047e-05, 3.0417000000001332e-05, 3.044500000000047e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0360999999999583e-05, 3.042999999999796e-05, 3.0430000000001428e-05, 3.0416000000001858e-05, 3.0416000000001858e-05, 3.0417000000001332e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.0499999999999278e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.040199999999882e-05, 3.044500000000047e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.044500000000047e-05, 3.0444000000000998e-05, 3.0374999999999153e-05, 3.042999999999796e-05]</msg>
<status status="PASS" starttime="20201029 12:47:54.730" endtime="20201029 12:47:54.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.725" endtime="20201029 12:47:54.732"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:54.736" endtime="20201029 12:47:54.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.735" endtime="20201029 12:47:54.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.733" endtime="20201029 12:47:54.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.373" endtime="20201029 12:47:54.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.372" endtime="20201029 12:47:54.757"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.766" endtime="20201029 12:47:54.785"></status>
</kw>
<msg timestamp="20201029 12:47:54.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.764" endtime="20201029 12:47:54.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:54.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:54.787" endtime="20201029 12:47:54.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.789" endtime="20201029 12:47:54.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.762" endtime="20201029 12:47:54.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.760" endtime="20201029 12:47:54.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:54.798" endtime="20201029 12:47:55.085"></status>
</kw>
<msg timestamp="20201029 12:47:55.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021031472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021062431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:54.797" endtime="20201029 12:47:55.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021031472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021062431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:55.089" endtime="20201029 12:47:55.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.098" endtime="20201029 12:47:55.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.794" endtime="20201029 12:47:55.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.792" endtime="20201029 12:47:55.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:55.105" level="INFO">${RESULT} = [{'diff': 3.095900000000054e-05}, {'diff': 3.086100000000008e-05}, {'diff': 3.0485999999999708e-05}, {'diff': 3.0444000000000998e-05}, {'diff': 3.041599999999839e-05}, {'diff': 3.148600000000071e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:55.101" endtime="20201029 12:47:55.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:55.109" level="INFO">${ACCURACY} = {'diff': [3.095900000000054e-05, 3.086100000000008e-05, 3.0485999999999708e-05, 3.0444000000000998e-05, 3.041599999999839e-05, 3.148600000000071e-05, 3.0402999999998293e-05, 3.0444000000000998e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:47:55.106" endtime="20201029 12:47:55.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.113" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 12:47:55.112" endtime="20201029 12:47:55.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.116" level="INFO">VALUE: [3.095900000000054e-05, 3.086100000000008e-05, 3.0485999999999708e-05, 3.0444000000000998e-05, 3.041599999999839e-05, 3.148600000000071e-05, 3.0402999999998293e-05, 3.0444000000000998e-05, 3.0430999999997432e-05, 3.0485999999999708e-05, 3.044500000000047e-05, 3.0458000000000568e-05, 3.04579999999971e-05, 3.082000000000085e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.042999999999796e-05, 3.086100000000008e-05, 3.04579999999971e-05, 3.041599999999839e-05, 3.084700000000051e-05, 3.0472000000000138e-05, 3.0417000000001332e-05, 3.0472000000000138e-05, 3.0430000000001428e-05, 3.04579999999971e-05, 3.044399999999753e-05, 3.0360999999999583e-05, 3.0374999999999153e-05, 3.0458000000000568e-05, 3.0444000000000998e-05, 3.0472000000000138e-05, 3.0389000000002192e-05, 3.0472000000000138e-05, 3.081900000000137e-05, 3.041599999999839e-05, 3.0388999999998723e-05, 3.044500000000047e-05, 3.084700000000051e-05, 3.0444000000000998e-05, 3.084700000000051e-05, 3.0430999999997432e-05, 3.042999999999796e-05, 3.082000000000085e-05, 3.087499999999965e-05, 3.0416999999997862e-05, 3.041599999999839e-05, 3.086100000000008e-05, 3.0832999999997474e-05, 3.091700000000183e-05]</msg>
<status status="PASS" starttime="20201029 12:47:55.115" endtime="20201029 12:47:55.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.110" endtime="20201029 12:47:55.118"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:55.123" endtime="20201029 12:47:55.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.120" endtime="20201029 12:47:55.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.119" endtime="20201029 12:47:55.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.758" endtime="20201029 12:47:55.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:54.757" endtime="20201029 12:47:55.145"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.154" endtime="20201029 12:47:55.171"></status>
</kw>
<msg timestamp="20201029 12:47:55.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:55.152" endtime="20201029 12:47:55.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:55.173" endtime="20201029 12:47:55.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.176" endtime="20201029 12:47:55.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.149" endtime="20201029 12:47:55.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.147" endtime="20201029 12:47:55.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.185" endtime="20201029 12:47:55.471"></status>
</kw>
<msg timestamp="20201029 12:47:55.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020324181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020357944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:55.183" endtime="20201029 12:47:55.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020324181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020357944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:55.476" endtime="20201029 12:47:55.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.484" endtime="20201029 12:47:55.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.181" endtime="20201029 12:47:55.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.179" endtime="20201029 12:47:55.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:55.491" level="INFO">${RESULT} = [{'diff': 3.3762999999999155e-05}, {'diff': 3.3596999999999794e-05}, {'diff': 3.3583000000000224e-05}, {'diff': 3.355600000000056e-05}, {'diff': 3.047299999999961e-05}, {'diff': 3.3569000000000654e-05...</msg>
<status status="PASS" starttime="20201029 12:47:55.488" endtime="20201029 12:47:55.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:55.496" level="INFO">${ACCURACY} = {'diff': [3.3762999999999155e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.355600000000056e-05, 3.047299999999961e-05, 3.3569000000000654e-05, 3.0472000000000138e-05, 3.3610999999999364e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:55.492" endtime="20201029 12:47:55.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.501" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 12:47:55.500" endtime="20201029 12:47:55.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.503" level="INFO">VALUE: [3.3762999999999155e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.355600000000056e-05, 3.047299999999961e-05, 3.3569000000000654e-05, 3.0472000000000138e-05, 3.3610999999999364e-05, 3.0458000000000568e-05, 3.357000000000013e-05, 3.3596999999999794e-05, 3.3569000000000654e-05, 3.3596999999999794e-05, 3.357000000000013e-05, 3.3596999999999794e-05, 3.0472000000000138e-05, 3.359800000000274e-05, 3.35839999999997e-05, 3.044500000000047e-05, 3.359799999999927e-05, 3.3554999999997615e-05, 3.3596999999999794e-05, 3.045900000000004e-05, 3.0472000000000138e-05, 3.35839999999997e-05, 3.3583000000000224e-05, 3.35839999999997e-05, 3.045900000000004e-05, 3.368000000000121e-05, 3.36250000000024e-05, 3.3583000000000224e-05, 3.35839999999997e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.0472000000000138e-05, 3.3583000000000224e-05, 3.040199999999882e-05, 3.361200000000231e-05, 3.3583000000000224e-05, 3.052800000000189e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.35839999999997e-05, 3.3541000000001514e-05, 3.3541000000001514e-05, 3.3568999999997184e-05, 3.35839999999997e-05, 3.3583000000000224e-05, 3.0431000000000902e-05, 3.3583000000000224e-05]</msg>
<status status="PASS" starttime="20201029 12:47:55.502" endtime="20201029 12:47:55.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.497" endtime="20201029 12:47:55.505"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:55.509" endtime="20201029 12:47:55.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.507" endtime="20201029 12:47:55.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.506" endtime="20201029 12:47:55.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.146" endtime="20201029 12:47:55.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.145" endtime="20201029 12:47:55.530"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.539" endtime="20201029 12:47:55.557"></status>
</kw>
<msg timestamp="20201029 12:47:55.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:55.537" endtime="20201029 12:47:55.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:55.558" endtime="20201029 12:47:55.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.561" endtime="20201029 12:47:55.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.534" endtime="20201029 12:47:55.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.532" endtime="20201029 12:47:55.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.570" endtime="20201029 12:47:55.858"></status>
</kw>
<msg timestamp="20201029 12:47:55.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020306361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:55.568" endtime="20201029 12:47:55.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020306361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:55.862" endtime="20201029 12:47:55.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.870" endtime="20201029 12:47:55.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.566" endtime="20201029 12:47:55.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.564" endtime="20201029 12:47:55.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:55.877" level="INFO">${RESULT} = [{'diff': 3.374999999999906e-05}, {'diff': 3.3596999999999794e-05}, {'diff': 3.363900000000197e-05}, {'diff': 3.3583000000000224e-05}, {'diff': 3.3638999999998503e-05}, {'diff': 3.3596999999999794e-05...</msg>
<status status="PASS" starttime="20201029 12:47:55.874" endtime="20201029 12:47:55.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:55.882" level="INFO">${ACCURACY} = {'diff': [3.374999999999906e-05, 3.3596999999999794e-05, 3.363900000000197e-05, 3.3583000000000224e-05, 3.3638999999998503e-05, 3.3596999999999794e-05, 3.3610999999999364e-05, 3.3583000000000224e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:55.878" endtime="20201029 12:47:55.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.886" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 12:47:55.885" endtime="20201029 12:47:55.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.889" level="INFO">VALUE: [3.374999999999906e-05, 3.3596999999999794e-05, 3.363900000000197e-05, 3.3583000000000224e-05, 3.3638999999998503e-05, 3.3596999999999794e-05, 3.3610999999999364e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.361100000000283e-05, 3.3596999999999794e-05, 3.3610999999999364e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.352799999999795e-05, 3.3610999999999364e-05, 3.355600000000056e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.3638999999998503e-05, 3.3596999999999794e-05, 3.358400000000317e-05, 3.3583000000000224e-05, 3.363900000000197e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.35839999999997e-05, 3.363799999999903e-05, 3.3569000000000654e-05, 3.3610999999999364e-05, 3.35839999999997e-05, 3.358400000000317e-05, 3.3583000000000224e-05, 3.3610999999999364e-05, 3.3583000000000224e-05, 3.3569000000000654e-05, 3.357000000000013e-05, 3.357000000000013e-05, 3.3569000000000654e-05, 3.35839999999997e-05, 3.366599999999817e-05, 3.35839999999997e-05, 3.3610999999999364e-05, 3.359799999999927e-05, 3.3596999999999794e-05, 3.35839999999997e-05, 3.3596999999999794e-05]</msg>
<status status="PASS" starttime="20201029 12:47:55.887" endtime="20201029 12:47:55.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.882" endtime="20201029 12:47:55.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:55.894" endtime="20201029 12:47:55.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.892" endtime="20201029 12:47:55.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.891" endtime="20201029 12:47:55.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.531" endtime="20201029 12:47:55.914"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.530" endtime="20201029 12:47:55.915"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.924" endtime="20201029 12:47:55.942"></status>
</kw>
<msg timestamp="20201029 12:47:55.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:55.922" endtime="20201029 12:47:55.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:55.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:55.943" endtime="20201029 12:47:55.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.946" endtime="20201029 12:47:55.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.919" endtime="20201029 12:47:55.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.917" endtime="20201029 12:47:55.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:55.955" endtime="20201029 12:47:56.241"></status>
</kw>
<msg timestamp="20201029 12:47:56.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021111556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021145319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:55.954" endtime="20201029 12:47:56.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021111556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021145319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:56.246" endtime="20201029 12:47:56.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.254" endtime="20201029 12:47:56.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.951" endtime="20201029 12:47:56.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.949" endtime="20201029 12:47:56.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:56.261" level="INFO">${RESULT} = [{'diff': 3.3762999999999155e-05}, {'diff': 3.3610999999999364e-05}, {'diff': 3.366700000000111e-05}, {'diff': 3.3596999999999794e-05}, {'diff': 3.3583000000000224e-05}, {'diff': 3.351400000000185e-05...</msg>
<status status="PASS" starttime="20201029 12:47:56.258" endtime="20201029 12:47:56.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:56.265" level="INFO">${ACCURACY} = {'diff': [3.3762999999999155e-05, 3.3610999999999364e-05, 3.366700000000111e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.351400000000185e-05, 3.3596999999999794e-05, 3.3610999999999364e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:56.262" endtime="20201029 12:47:56.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.270" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 12:47:56.269" endtime="20201029 12:47:56.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.273" level="INFO">VALUE: [3.3762999999999155e-05, 3.3610999999999364e-05, 3.366700000000111e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.351400000000185e-05, 3.3596999999999794e-05, 3.3610999999999364e-05, 3.36250000000024e-05, 3.3596999999999794e-05, 3.361200000000231e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.359799999999927e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.3569000000000654e-05, 3.3555000000001084e-05, 3.361100000000283e-05, 3.3583000000000224e-05, 3.3582999999996754e-05, 3.3596999999999794e-05, 3.3555000000001084e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.357000000000013e-05, 3.3596999999999794e-05, 3.35839999999997e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.3610999999999364e-05, 3.3568999999997184e-05, 3.3555000000001084e-05, 3.3638999999998503e-05, 3.3583000000000224e-05, 3.35839999999997e-05, 3.3583000000000224e-05, 3.3555000000001084e-05, 3.359799999999927e-05, 3.3596999999999794e-05]</msg>
<status status="PASS" starttime="20201029 12:47:56.271" endtime="20201029 12:47:56.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.266" endtime="20201029 12:47:56.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:56.278" endtime="20201029 12:47:56.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.277" endtime="20201029 12:47:56.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.275" endtime="20201029 12:47:56.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.916" endtime="20201029 12:47:56.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:55.915" endtime="20201029 12:47:56.299"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.308" endtime="20201029 12:47:56.326"></status>
</kw>
<msg timestamp="20201029 12:47:56.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:56.306" endtime="20201029 12:47:56.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:56.327" endtime="20201029 12:47:56.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.330" endtime="20201029 12:47:56.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.304" endtime="20201029 12:47:56.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.301" endtime="20201029 12:47:56.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.339" endtime="20201029 12:47:56.626"></status>
</kw>
<msg timestamp="20201029 12:47:56.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020128792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020162542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:56.338" endtime="20201029 12:47:56.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020128792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020162542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:56.631" endtime="20201029 12:47:56.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.639" endtime="20201029 12:47:56.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.335" endtime="20201029 12:47:56.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.333" endtime="20201029 12:47:56.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:56.646" level="INFO">${RESULT} = [{'diff': 3.374999999999906e-05}, {'diff': 3.3596999999999794e-05}, {'diff': 3.3596999999999794e-05}, {'diff': 3.359800000000274e-05}, {'diff': 3.3583000000000224e-05}, {'diff': 3.3569000000000654e-05...</msg>
<status status="PASS" starttime="20201029 12:47:56.642" endtime="20201029 12:47:56.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:56.653" level="INFO">${ACCURACY} = {'diff': [3.374999999999906e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.359800000000274e-05, 3.3583000000000224e-05, 3.3569000000000654e-05, 3.3610999999999364e-05, 3.3583000000000224e-05, ...</msg>
<status status="PASS" starttime="20201029 12:47:56.647" endtime="20201029 12:47:56.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.658" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 12:47:56.657" endtime="20201029 12:47:56.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.661" level="INFO">VALUE: [3.374999999999906e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.359800000000274e-05, 3.3583000000000224e-05, 3.3569000000000654e-05, 3.3610999999999364e-05, 3.3583000000000224e-05, 3.3540999999998045e-05, 3.3583000000000224e-05, 3.3624999999998934e-05, 3.355600000000056e-05, 3.352799999999795e-05, 3.3610999999999364e-05, 3.3610999999999364e-05, 3.357000000000013e-05, 3.3610999999999364e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.36519999999986e-05, 3.3569000000000654e-05, 3.361100000000283e-05, 3.352800000000142e-05, 3.357000000000013e-05, 3.35839999999997e-05, 3.361100000000283e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.361100000000283e-05, 3.3610999999999364e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.35839999999997e-05, 3.3583000000000224e-05, 3.3582999999996754e-05, 3.36380000000025e-05, 3.3638999999998503e-05, 3.3583000000000224e-05, 3.35839999999997e-05, 3.3610999999999364e-05, 3.3555000000001084e-05, 3.359799999999927e-05, 3.3583000000000224e-05, 3.35839999999997e-05]</msg>
<status status="PASS" starttime="20201029 12:47:56.659" endtime="20201029 12:47:56.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.654" endtime="20201029 12:47:56.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:56.670" endtime="20201029 12:47:56.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.669" endtime="20201029 12:47:56.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.667" endtime="20201029 12:47:56.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.300" endtime="20201029 12:47:56.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.299" endtime="20201029 12:47:56.691"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.701" endtime="20201029 12:47:56.720"></status>
</kw>
<msg timestamp="20201029 12:47:56.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:56.699" endtime="20201029 12:47:56.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:56.721" endtime="20201029 12:47:56.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.724" endtime="20201029 12:47:56.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.697" endtime="20201029 12:47:56.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.694" endtime="20201029 12:47:56.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.734" endtime="20201029 12:47:57.065"></status>
</kw>
<msg timestamp="20201029 12:47:57.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:56.732" endtime="20201029 12:47:57.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021821431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:57.070" endtime="20201029 12:47:57.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.078" endtime="20201029 12:47:57.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.729" endtime="20201029 12:47:57.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.727" endtime="20201029 12:47:57.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:57.085" level="INFO">${RESULT} = [{'diff': 3.376399999999863e-05}, {'diff': 3.452799999999895e-05}, {'diff': 3.357000000000013e-05}, {'diff': 3.3624999999998934e-05}, {'diff': 3.359799999999927e-05}, {'diff': 3.475000000000006e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:57.082" endtime="20201029 12:47:57.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:57.089" level="INFO">${ACCURACY} = {'diff': [3.376399999999863e-05, 3.452799999999895e-05, 3.357000000000013e-05, 3.3624999999998934e-05, 3.359799999999927e-05, 3.475000000000006e-05, 3.398599999999974e-05, 3.5139000000000004e-05, 3.45...</msg>
<status status="PASS" starttime="20201029 12:47:57.086" endtime="20201029 12:47:57.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.094" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 12:47:57.093" endtime="20201029 12:47:57.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.097" level="INFO">VALUE: [3.376399999999863e-05, 3.452799999999895e-05, 3.357000000000013e-05, 3.3624999999998934e-05, 3.359799999999927e-05, 3.475000000000006e-05, 3.398599999999974e-05, 3.5139000000000004e-05, 3.454199999999852e-05, 3.3596999999999794e-05, 3.4388999999999253e-05, 3.4041000000002014e-05, 3.394400000000103e-05, 3.357000000000013e-05, 3.525000000000056e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.454199999999852e-05, 3.444399999999806e-05, 3.3583000000000224e-05, 3.4611000000000364e-05, 3.451399999999938e-05, 3.368099999999721e-05, 3.45840000000007e-05, 3.451399999999938e-05, 3.400000000000278e-05, 3.4624999999999934e-05, 3.368100000000068e-05, 3.3583000000000224e-05, 3.4777000000003194e-05, 3.455600000000156e-05, 3.422199999999695e-05, 3.422200000000042e-05, 3.454200000000199e-05, 3.451399999999938e-05, 3.423599999999999e-05, 3.502799999999945e-05, 3.4875000000000184e-05, 3.4097000000000294e-05, 3.432000000000088e-05, 3.420800000000085e-05, 3.459800000000027e-05, 3.422200000000042e-05, 3.422200000000042e-05, 3.3624999999998934e-05, 3.491599999999942e-05, 3.3569000000000654e-05, 3.452799999999895e-05, 3.361100000000283e-05, 3.4638999999999504e-05]</msg>
<status status="PASS" starttime="20201029 12:47:57.095" endtime="20201029 12:47:57.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.090" endtime="20201029 12:47:57.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:57.102" endtime="20201029 12:47:57.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.100" endtime="20201029 12:47:57.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.099" endtime="20201029 12:47:57.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.692" endtime="20201029 12:47:57.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.692" endtime="20201029 12:47:57.123"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.132" endtime="20201029 12:47:57.150"></status>
</kw>
<msg timestamp="20201029 12:47:57.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:57.130" endtime="20201029 12:47:57.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:57.152" endtime="20201029 12:47:57.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.154" endtime="20201029 12:47:57.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.128" endtime="20201029 12:47:57.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.126" endtime="20201029 12:47:57.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.163" endtime="20201029 12:47:57.449"></status>
</kw>
<msg timestamp="20201029 12:47:57.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020197389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020232778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:57.162" endtime="20201029 12:47:57.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020197389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020232778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:57.454" endtime="20201029 12:47:57.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.462" endtime="20201029 12:47:57.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.159" endtime="20201029 12:47:57.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.158" endtime="20201029 12:47:57.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:57.469" level="INFO">${RESULT} = [{'diff': 3.5389000000000254e-05}, {'diff': 3.5597000000001794e-05}, {'diff': 3.495799999999813e-05}, {'diff': 3.6096999999998824e-05}, {'diff': 3.592999999999999e-05}, {'diff': 3.568099999999921e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:57.466" endtime="20201029 12:47:57.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:57.474" level="INFO">${ACCURACY} = {'diff': [3.5389000000000254e-05, 3.5597000000001794e-05, 3.495799999999813e-05, 3.6096999999998824e-05, 3.592999999999999e-05, 3.568099999999921e-05, 3.4861000000000614e-05, 3.5916999999999893e-05, 3...</msg>
<status status="PASS" starttime="20201029 12:47:57.470" endtime="20201029 12:47:57.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.478" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 12:47:57.477" endtime="20201029 12:47:57.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.481" level="INFO">VALUE: [3.5389000000000254e-05, 3.5597000000001794e-05, 3.495799999999813e-05, 3.6096999999998824e-05, 3.592999999999999e-05, 3.568099999999921e-05, 3.4861000000000614e-05, 3.5916999999999893e-05, 3.592999999999999e-05, 3.519500000000175e-05, 3.519399999999881e-05, 3.5596999999998324e-05, 3.516700000000261e-05, 3.5568999999999185e-05, 3.555599999999909e-05, 3.5416999999999393e-05, 3.5125000000000434e-05, 3.5582999999998755e-05, 3.5166999999999143e-05, 3.566600000000017e-05, 3.5402999999999823e-05, 3.5082999999998254e-05, 3.4583000000001224e-05, 3.5583000000002224e-05, 3.651400000000138e-05, 3.5125000000000434e-05, 3.5597000000001794e-05, 3.4791000000002764e-05, 3.4888999999999754e-05, 3.51520000000001e-05, 3.475000000000006e-05, 3.602800000000045e-05, 3.6540999999997575e-05, 3.5152999999999573e-05, 3.55840000000017e-05, 3.523599999999752e-05, 3.572199999999845e-05, 3.592999999999999e-05, 3.518099999999871e-05, 3.49580000000016e-05, 3.5332999999998504e-05, 3.501399999999988e-05, 3.5874999999997714e-05, 3.550000000000081e-05, 3.552799999999995e-05, 3.541700000000286e-05, 3.547300000000114e-05, 3.518100000000218e-05, 3.576400000000063e-05, 3.51520000000001e-05]</msg>
<status status="PASS" starttime="20201029 12:47:57.480" endtime="20201029 12:47:57.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.475" endtime="20201029 12:47:57.482"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:57.486" endtime="20201029 12:47:57.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.485" endtime="20201029 12:47:57.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.483" endtime="20201029 12:47:57.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.124" endtime="20201029 12:47:57.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.123" endtime="20201029 12:47:57.507"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.516" endtime="20201029 12:47:57.534"></status>
</kw>
<msg timestamp="20201029 12:47:57.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:57.514" endtime="20201029 12:47:57.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:57.536" endtime="20201029 12:47:57.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.538" endtime="20201029 12:47:57.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.512" endtime="20201029 12:47:57.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.509" endtime="20201029 12:47:57.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.548" endtime="20201029 12:47:57.834"></status>
</kw>
<msg timestamp="20201029 12:47:57.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020086597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020123347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:57.546" endtime="20201029 12:47:57.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020086597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020123347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:57.839" endtime="20201029 12:47:57.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.847" endtime="20201029 12:47:57.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.543" endtime="20201029 12:47:57.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.542" endtime="20201029 12:47:57.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:57.854" level="INFO">${RESULT} = [{'diff': 3.674999999999859e-05}, {'diff': 3.6653000000001074e-05}, {'diff': 3.654200000000052e-05}, {'diff': 3.6541000000001045e-05}, {'diff': 3.6526999999998006e-05}, {'diff': 3.6833000000000005e-05...</msg>
<status status="PASS" starttime="20201029 12:47:57.851" endtime="20201029 12:47:57.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:57.858" level="INFO">${ACCURACY} = {'diff': [3.674999999999859e-05, 3.6653000000001074e-05, 3.654200000000052e-05, 3.6541000000001045e-05, 3.6526999999998006e-05, 3.6833000000000005e-05, 3.666600000000117e-05, 3.6888999999998284e-05, 3...</msg>
<status status="PASS" starttime="20201029 12:47:57.855" endtime="20201029 12:47:57.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.863" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 12:47:57.862" endtime="20201029 12:47:57.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.867" level="INFO">VALUE: [3.674999999999859e-05, 3.6653000000001074e-05, 3.654200000000052e-05, 3.6541000000001045e-05, 3.6526999999998006e-05, 3.6833000000000005e-05, 3.666600000000117e-05, 3.6888999999998284e-05, 3.7069000000000685e-05, 3.6541000000001045e-05, 3.6846999999999575e-05, 3.654199999999705e-05, 3.652799999999748e-05, 3.655600000000009e-05, 3.680600000000034e-05, 3.680600000000034e-05, 3.6540999999997575e-05, 3.656999999999966e-05, 3.669400000000031e-05, 3.652800000000095e-05, 3.655600000000009e-05, 3.6875000000002184e-05, 3.677799999999773e-05, 3.6555000000000615e-05, 3.694500000000003e-05, 3.680600000000034e-05, 3.6541000000001045e-05, 3.676400000000163e-05, 3.656999999999966e-05, 3.6540999999997575e-05, 3.6860999999999144e-05, 3.654200000000052e-05, 3.6597000000002794e-05, 3.6540999999997575e-05, 3.654200000000052e-05, 3.652800000000095e-05, 3.654200000000052e-05, 3.651399999999791e-05, 3.677799999999773e-05, 3.6860999999999144e-05, 3.668000000000074e-05, 3.6819000000000435e-05, 3.672199999999945e-05, 3.654200000000052e-05, 3.659800000000227e-05, 3.6610999999998894e-05, 3.654199999999705e-05, 3.6610999999998894e-05, 3.707000000000016e-05, 3.658399999999923e-05]</msg>
<status status="PASS" starttime="20201029 12:47:57.865" endtime="20201029 12:47:57.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.859" endtime="20201029 12:47:57.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:57.874" endtime="20201029 12:47:57.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.872" endtime="20201029 12:47:57.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.870" endtime="20201029 12:47:57.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.508" endtime="20201029 12:47:57.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.507" endtime="20201029 12:47:57.896"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.905" endtime="20201029 12:47:57.923"></status>
</kw>
<msg timestamp="20201029 12:47:57.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:57.903" endtime="20201029 12:47:57.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:57.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:57.925" endtime="20201029 12:47:57.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.927" endtime="20201029 12:47:57.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.900" endtime="20201029 12:47:57.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.898" endtime="20201029 12:47:57.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.937" endtime="20201029 12:47:58.223"></status>
</kw>
<msg timestamp="20201029 12:47:58.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0211835, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021220917, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:57.935" endtime="20201029 12:47:58.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0211835, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021220917, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:58.228" endtime="20201029 12:47:58.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.236" endtime="20201029 12:47:58.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.932" endtime="20201029 12:47:58.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.931" endtime="20201029 12:47:58.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:58.243" level="INFO">${RESULT} = [{'diff': 3.7416999999997924e-05}, {'diff': 3.805600000000159e-05}, {'diff': 3.731999999999694e-05}, {'diff': 3.748599999999977e-05}, {'diff': 3.805599999999812e-05}, {'diff': 3.774999999999959e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:58.240" endtime="20201029 12:47:58.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:58.247" level="INFO">${ACCURACY} = {'diff': [3.7416999999997924e-05, 3.805600000000159e-05, 3.731999999999694e-05, 3.748599999999977e-05, 3.805599999999812e-05, 3.774999999999959e-05, 3.748599999999977e-05, 3.7195000000000283e-05, 3.74...</msg>
<status status="PASS" starttime="20201029 12:47:58.244" endtime="20201029 12:47:58.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.252" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 12:47:58.251" endtime="20201029 12:47:58.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.255" level="INFO">VALUE: [3.7416999999997924e-05, 3.805600000000159e-05, 3.731999999999694e-05, 3.748599999999977e-05, 3.805599999999812e-05, 3.774999999999959e-05, 3.748599999999977e-05, 3.7195000000000283e-05, 3.745800000000063e-05, 3.7819000000001435e-05, 3.7680999999997744e-05, 3.7804999999998395e-05, 3.7639000000002504e-05, 3.7861000000000145e-05, 3.775000000000306e-05, 3.751399999999891e-05, 3.7583000000000755e-05, 3.7374999999999214e-05, 3.770800000000088e-05, 3.717999999999777e-05, 3.805600000000159e-05, 3.749999999999934e-05, 3.801399999999941e-05, 3.7903000000002324e-05, 3.743000000000149e-05, 3.744400000000106e-05, 3.7624999999999464e-05, 3.722199999999995e-05, 3.748599999999977e-05, 3.807000000000116e-05, 3.805600000000159e-05, 3.755600000000109e-05, 3.752800000000195e-05, 3.7695000000000783e-05, 3.7138999999998534e-05, 3.769400000000131e-05, 3.799999999999984e-05, 3.7445000000000533e-05, 3.716600000000167e-05, 3.7512999999999436e-05, 3.7833000000001005e-05, 3.736199999999912e-05, 3.719399999999734e-05, 3.7888999999999284e-05, 3.754200000000152e-05, 3.71520000000021e-05, 3.7597000000000325e-05, 3.794399999999809e-05, 3.748600000000324e-05, 3.7152999999998104e-05]</msg>
<status status="PASS" starttime="20201029 12:47:58.253" endtime="20201029 12:47:58.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.248" endtime="20201029 12:47:58.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:58.260" endtime="20201029 12:47:58.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.259" endtime="20201029 12:47:58.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.258" endtime="20201029 12:47:58.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.897" endtime="20201029 12:47:58.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.896" endtime="20201029 12:47:58.281"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.290" endtime="20201029 12:47:58.308"></status>
</kw>
<msg timestamp="20201029 12:47:58.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.289" endtime="20201029 12:47:58.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.310" endtime="20201029 12:47:58.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.312" endtime="20201029 12:47:58.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.286" endtime="20201029 12:47:58.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.284" endtime="20201029 12:47:58.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.322" endtime="20201029 12:47:58.608"></status>
</kw>
<msg timestamp="20201029 12:47:58.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020345431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020384056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:58.320" endtime="20201029 12:47:58.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020345431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020384056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:58.612" endtime="20201029 12:47:58.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.621" endtime="20201029 12:47:58.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.318" endtime="20201029 12:47:58.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.316" endtime="20201029 12:47:58.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:58.628" level="INFO">${RESULT} = [{'diff': 3.8625000000000465e-05}, {'diff': 3.8694999999998314e-05}, {'diff': 3.805599999999812e-05}, {'diff': 3.831999999999794e-05}, {'diff': 3.834800000000055e-05}, {'diff': 3.8347000000001075e-05}...</msg>
<status status="PASS" starttime="20201029 12:47:58.624" endtime="20201029 12:47:58.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:58.633" level="INFO">${ACCURACY} = {'diff': [3.8625000000000465e-05, 3.8694999999998314e-05, 3.805599999999812e-05, 3.831999999999794e-05, 3.834800000000055e-05, 3.8347000000001075e-05, 3.830600000000184e-05, 3.8582999999998285e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:47:58.629" endtime="20201029 12:47:58.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.638" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 12:47:58.637" endtime="20201029 12:47:58.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.640" level="INFO">VALUE: [3.8625000000000465e-05, 3.8694999999998314e-05, 3.805599999999812e-05, 3.831999999999794e-05, 3.834800000000055e-05, 3.8347000000001075e-05, 3.830600000000184e-05, 3.8582999999998285e-05, 3.8305000000002365e-05, 3.827799999999923e-05, 3.8875000000000715e-05, 3.877799999999973e-05, 3.8639000000000034e-05, 3.895799999999866e-05, 3.825000000000009e-05, 3.8388999999999784e-05, 3.8318999999998465e-05, 3.8361000000000645e-05, 3.900000000000084e-05, 3.8319000000001935e-05, 3.9082999999998785e-05, 3.900000000000084e-05, 3.905599999999912e-05, 3.8902999999999854e-05, 3.869400000000231e-05, 3.857000000000166e-05, 3.849999999999687e-05, 3.8209000000000853e-05, 3.8930999999998994e-05, 3.8861000000001145e-05, 3.8875000000000715e-05, 3.8388999999999784e-05, 3.854199999999905e-05, 3.902799999999998e-05, 3.8625000000000465e-05, 3.832000000000141e-05, 3.8680999999998744e-05, 3.9012999999997466e-05, 3.8583000000001755e-05, 3.820800000000138e-05, 3.8417000000002394e-05, 3.8124999999999964e-05, 3.816600000000267e-05, 3.8777000000000256e-05, 3.822199999999748e-05, 3.8875000000000715e-05, 3.8790999999999826e-05, 3.9083000000002255e-05, 3.8388999999999784e-05, 3.877799999999973e-05]</msg>
<status status="PASS" starttime="20201029 12:47:58.639" endtime="20201029 12:47:58.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.634" endtime="20201029 12:47:58.641"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:58.645" endtime="20201029 12:47:58.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.644" endtime="20201029 12:47:58.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.642" endtime="20201029 12:47:58.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.282" endtime="20201029 12:47:58.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.281" endtime="20201029 12:47:58.666"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.675" endtime="20201029 12:47:58.692"></status>
</kw>
<msg timestamp="20201029 12:47:58.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.673" endtime="20201029 12:47:58.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:58.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:58.694" endtime="20201029 12:47:58.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.696" endtime="20201029 12:47:58.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.671" endtime="20201029 12:47:58.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.668" endtime="20201029 12:47:58.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:58.706" endtime="20201029 12:47:58.993"></status>
</kw>
<msg timestamp="20201029 12:47:58.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020131583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:58.704" endtime="20201029 12:47:58.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020131583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:58.997" endtime="20201029 12:47:59.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.006" endtime="20201029 12:47:59.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.702" endtime="20201029 12:47:59.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.700" endtime="20201029 12:47:59.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:59.013" level="INFO">${RESULT} = [{'diff': 3.926399999999719e-05}, {'diff': 3.945799999999916e-05}, {'diff': 3.923599999999805e-05}, {'diff': 3.91660000000002e-05}, {'diff': 3.945799999999916e-05}, {'diff': 3.9818999999999966e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:59.009" endtime="20201029 12:47:59.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:59.017" level="INFO">${ACCURACY} = {'diff': [3.926399999999719e-05, 3.945799999999916e-05, 3.923599999999805e-05, 3.91660000000002e-05, 3.945799999999916e-05, 3.9818999999999966e-05, 3.981999999999944e-05, 3.9388999999997315e-05, 3.963...</msg>
<status status="PASS" starttime="20201029 12:47:59.014" endtime="20201029 12:47:59.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.022" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 12:47:59.021" endtime="20201029 12:47:59.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.024" level="INFO">VALUE: [3.926399999999719e-05, 3.945799999999916e-05, 3.923599999999805e-05, 3.91660000000002e-05, 3.945799999999916e-05, 3.9818999999999966e-05, 3.981999999999944e-05, 3.9388999999997315e-05, 3.9638999999997565e-05, 3.9555000000000146e-05, 3.9180999999999244e-05, 4.001400000000141e-05, 3.930599999999937e-05, 3.9125000000000965e-05, 3.9166999999999674e-05, 3.9694999999999314e-05, 3.9805000000000396e-05, 4.000000000000184e-05, 3.9875000000001715e-05, 3.9944999999999564e-05, 4.006999999999969e-05, 3.927800000000023e-05, 3.9333000000002505e-05, 3.9624999999997995e-05, 4.004200000000055e-05, 3.9276999999997286e-05, 3.9624999999997995e-05, 3.9791000000000826e-05, 3.9832999999999535e-05, 4.0041000000001076e-05, 4.002799999999751e-05, 3.948600000000177e-05, 3.970799999999941e-05, 3.9416999999999924e-05, 3.94859999999983e-05, 3.919399999999934e-05, 3.9846999999999105e-05, 3.9097000000001825e-05, 3.9736999999998024e-05, 3.9194999999998814e-05, 3.9846999999999105e-05, 3.974999999999812e-05, 3.92919999999998e-05, 3.933400000000198e-05, 3.975000000000159e-05, 3.9680999999999744e-05, 3.9903000000000854e-05, 3.947199999999873e-05, 3.926399999999719e-05, 3.9639000000001035e-05]</msg>
<status status="PASS" starttime="20201029 12:47:59.023" endtime="20201029 12:47:59.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.018" endtime="20201029 12:47:59.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:59.029" endtime="20201029 12:47:59.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.028" endtime="20201029 12:47:59.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.027" endtime="20201029 12:47:59.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.667" endtime="20201029 12:47:59.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:58.666" endtime="20201029 12:47:59.050"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.059" endtime="20201029 12:47:59.078"></status>
</kw>
<msg timestamp="20201029 12:47:59.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.057" endtime="20201029 12:47:59.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.079" endtime="20201029 12:47:59.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.082" endtime="20201029 12:47:59.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.055" endtime="20201029 12:47:59.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.053" endtime="20201029 12:47:59.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.091" endtime="20201029 12:47:59.377"></status>
</kw>
<msg timestamp="20201029 12:47:59.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021039931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021080639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:59.090" endtime="20201029 12:47:59.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021039931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021080639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:59.381" endtime="20201029 12:47:59.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.390" endtime="20201029 12:47:59.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.087" endtime="20201029 12:47:59.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.085" endtime="20201029 12:47:59.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:59.396" level="INFO">${RESULT} = [{'diff': 4.070800000000041e-05}, {'diff': 4.0403000000001354e-05}, {'diff': 4.105600000000112e-05}, {'diff': 4.069400000000084e-05}, {'diff': 4.020799999999991e-05}, {'diff': 4.051399999999844e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:47:59.393" endtime="20201029 12:47:59.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:59.401" level="INFO">${ACCURACY} = {'diff': [4.070800000000041e-05, 4.0403000000001354e-05, 4.105600000000112e-05, 4.069400000000084e-05, 4.020799999999991e-05, 4.051399999999844e-05, 4.0833000000000536e-05, 4.0874999999999245e-05, 4.0...</msg>
<status status="PASS" starttime="20201029 12:47:59.398" endtime="20201029 12:47:59.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.405" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 12:47:59.404" endtime="20201029 12:47:59.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.409" level="INFO">VALUE: [4.070800000000041e-05, 4.0403000000001354e-05, 4.105600000000112e-05, 4.069400000000084e-05, 4.020799999999991e-05, 4.051399999999844e-05, 4.0833000000000536e-05, 4.0874999999999245e-05, 4.0208999999999384e-05, 4.0346999999999605e-05, 4.0194999999999814e-05, 4.074999999999912e-05, 4.068000000000127e-05, 4.076399999999869e-05, 4.0167000000000674e-05, 4.068000000000127e-05, 4.0624999999998995e-05, 4.0124999999998495e-05, 4.101400000000241e-05, 4.1069000000001216e-05, 4.0596999999999855e-05, 4.074999999999912e-05, 4.019400000000034e-05, 4.019400000000034e-05, 4.090199999999891e-05, 4.077800000000173e-05, 4.0388999999998315e-05, 4.104200000000155e-05, 4.0389000000001785e-05, 4.070800000000041e-05, 4.0875000000002715e-05, 4.0431000000000494e-05, 4.0096999999999355e-05, 4.0194999999999814e-05, 4.026399999999819e-05, 4.0708999999999884e-05, 4.022199999999948e-05, 4.09859999999998e-05, 4.09859999999998e-05, 4.104200000000155e-05, 4.079199999999783e-05, 4.025000000000209e-05, 4.058399999999976e-05, 4.0194999999999814e-05, 4.0610999999999425e-05, 4.073599999999955e-05, 4.020799999999991e-05, 4.070800000000041e-05, 4.0110999999998925e-05, 4.0360999999999175e-05]</msg>
<status status="PASS" starttime="20201029 12:47:59.406" endtime="20201029 12:47:59.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.402" endtime="20201029 12:47:59.410"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:59.414" endtime="20201029 12:47:59.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.412" endtime="20201029 12:47:59.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.411" endtime="20201029 12:47:59.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.051" endtime="20201029 12:47:59.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.050" endtime="20201029 12:47:59.435"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.444" endtime="20201029 12:47:59.462"></status>
</kw>
<msg timestamp="20201029 12:47:59.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.442" endtime="20201029 12:47:59.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.465" endtime="20201029 12:47:59.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.469" endtime="20201029 12:47:59.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.439" endtime="20201029 12:47:59.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.437" endtime="20201029 12:47:59.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.483" endtime="20201029 12:47:59.768"></status>
</kw>
<msg timestamp="20201029 12:47:59.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020914875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02095675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:59.480" endtime="20201029 12:47:59.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020914875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02095675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:59.773" endtime="20201029 12:47:59.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.781" endtime="20201029 12:47:59.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.477" endtime="20201029 12:47:59.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.474" endtime="20201029 12:47:59.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:59.788" level="INFO">${RESULT} = [{'diff': 4.1875000000000245e-05}, {'diff': 4.2040999999999606e-05}, {'diff': 4.170799999999794e-05}, {'diff': 4.116599999999873e-05}, {'diff': 4.201399999999994e-05}, {'diff': 4.197199999999776e-05},...</msg>
<status status="PASS" starttime="20201029 12:47:59.785" endtime="20201029 12:47:59.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:59.793" level="INFO">${ACCURACY} = {'diff': [4.1875000000000245e-05, 4.2040999999999606e-05, 4.170799999999794e-05, 4.116599999999873e-05, 4.201399999999994e-05, 4.197199999999776e-05, 4.130600000000137e-05, 4.1916999999998955e-05, 4.1...</msg>
<status status="PASS" starttime="20201029 12:47:59.789" endtime="20201029 12:47:59.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.798" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 12:47:59.797" endtime="20201029 12:47:59.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.801" level="INFO">VALUE: [4.1875000000000245e-05, 4.2040999999999606e-05, 4.170799999999794e-05, 4.116599999999873e-05, 4.201399999999994e-05, 4.197199999999776e-05, 4.130600000000137e-05, 4.1916999999998955e-05, 4.124999999999962e-05, 4.1832999999998066e-05, 4.195800000000166e-05, 4.2054999999999176e-05, 4.2068999999998746e-05, 4.194399999999862e-05, 4.1097000000000355e-05, 4.173600000000055e-05, 4.1804999999998926e-05, 4.1875000000000245e-05, 4.1874999999996776e-05, 4.200000000000037e-05, 4.1388999999999315e-05, 4.1624999999999995e-05, 4.156999999999772e-05, 4.206999999999822e-05, 4.132000000000094e-05, 4.1666999999998705e-05, 4.1681000000001744e-05, 4.1181000000001244e-05, 4.1916999999998955e-05, 4.158400000000076e-05, 4.1917000000002425e-05, 4.155599999999815e-05, 4.159800000000033e-05, 4.14860000000003e-05, 4.2040999999999606e-05, 4.1374999999999745e-05, 4.16799999999988e-05, 4.151399999999944e-05, 4.2083000000001786e-05, 4.194399999999862e-05, 4.1555000000002146e-05, 4.1875000000000245e-05, 4.194400000000209e-05, 4.1569000000001716e-05, 4.170800000000141e-05, 4.200000000000037e-05, 4.1833000000001536e-05, 4.1402999999998885e-05, 4.149999999999987e-05, 4.1819000000001966e-05]</msg>
<status status="PASS" starttime="20201029 12:47:59.799" endtime="20201029 12:47:59.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.794" endtime="20201029 12:47:59.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:59.806" endtime="20201029 12:47:59.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.804" endtime="20201029 12:47:59.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.803" endtime="20201029 12:47:59.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.435" endtime="20201029 12:47:59.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.435" endtime="20201029 12:47:59.827"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.836" endtime="20201029 12:47:59.853"></status>
</kw>
<msg timestamp="20201029 12:47:59.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.834" endtime="20201029 12:47:59.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:59.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:59.855" endtime="20201029 12:47:59.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.857" endtime="20201029 12:47:59.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.831" endtime="20201029 12:47:59.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.829" endtime="20201029 12:47:59.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:59.867" endtime="20201029 12:48:00.154"></status>
</kw>
<msg timestamp="20201029 12:48:00.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020198611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:59.865" endtime="20201029 12:48:00.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020198611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:00.159" endtime="20201029 12:48:00.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.167" endtime="20201029 12:48:00.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.862" endtime="20201029 12:48:00.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.860" endtime="20201029 12:48:00.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:00.174" level="INFO">${RESULT} = [{'diff': 4.220800000000191e-05}, {'diff': 4.226400000000019e-05}, {'diff': 4.225000000000062e-05}, {'diff': 4.2318999999998996e-05}, {'diff': 4.244399999999912e-05}, {'diff': 4.2930999999999525e-05},...</msg>
<status status="PASS" starttime="20201029 12:48:00.170" endtime="20201029 12:48:00.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:00.178" level="INFO">${ACCURACY} = {'diff': [4.220800000000191e-05, 4.226400000000019e-05, 4.225000000000062e-05, 4.2318999999998996e-05, 4.244399999999912e-05, 4.2930999999999525e-05, 4.2708999999998415e-05, 4.277799999999679e-05, 4.2...</msg>
<status status="PASS" starttime="20201029 12:48:00.175" endtime="20201029 12:48:00.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.183" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 12:48:00.182" endtime="20201029 12:48:00.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.185" level="INFO">VALUE: [4.220800000000191e-05, 4.226400000000019e-05, 4.225000000000062e-05, 4.2318999999998996e-05, 4.244399999999912e-05, 4.2930999999999525e-05, 4.2708999999998415e-05, 4.277799999999679e-05, 4.2818999999999496e-05, 4.2930999999999525e-05, 4.2611000000001426e-05, 4.282000000000244e-05, 4.257000000000219e-05, 4.29999999999979e-05, 4.2944999999999095e-05, 4.231999999999847e-05, 4.2916999999999955e-05, 4.2597000000001856e-05, 4.2610999999997956e-05, 4.2875000000001245e-05, 4.275000000000112e-05, 4.2875000000001245e-05, 4.2389000000000315e-05, 4.277800000000026e-05, 4.2124999999997026e-05, 4.2361000000001175e-05, 4.2582999999998816e-05, 4.241599999999998e-05, 4.2125000000000495e-05, 4.294399999999962e-05, 4.293000000000005e-05, 4.248599999999783e-05, 4.227800000000323e-05, 4.308399999999879e-05, 4.2818999999999496e-05, 4.219399999999887e-05, 4.298599999999833e-05, 4.29999999999979e-05, 4.2416999999999455e-05, 4.28059999999994e-05, 4.2208999999997915e-05, 4.2347000000001606e-05, 4.234799999999761e-05, 4.2125000000000495e-05, 4.2680999999999275e-05, 4.245799999999869e-05, 4.245799999999869e-05, 4.215200000000016e-05, 4.301400000000094e-05, 4.244400000000259e-05]</msg>
<status status="PASS" starttime="20201029 12:48:00.184" endtime="20201029 12:48:00.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.179" endtime="20201029 12:48:00.187"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:00.191" endtime="20201029 12:48:00.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.189" endtime="20201029 12:48:00.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.188" endtime="20201029 12:48:00.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.827" endtime="20201029 12:48:00.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:59.827" endtime="20201029 12:48:00.211"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.220" endtime="20201029 12:48:00.241"></status>
</kw>
<msg timestamp="20201029 12:48:00.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:00.219" endtime="20201029 12:48:00.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:00.242" endtime="20201029 12:48:00.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.245" endtime="20201029 12:48:00.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.216" endtime="20201029 12:48:00.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.214" endtime="20201029 12:48:00.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.255" endtime="20201029 12:48:00.541"></status>
</kw>
<msg timestamp="20201029 12:48:00.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022998944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023042278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:00.253" endtime="20201029 12:48:00.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022998944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023042278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:00.545" endtime="20201029 12:48:00.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.553" endtime="20201029 12:48:00.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.250" endtime="20201029 12:48:00.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.248" endtime="20201029 12:48:00.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:00.561" level="INFO">${RESULT} = [{'diff': 4.333399999999904e-05}, {'diff': 4.325000000000162e-05}, {'diff': 4.3444999999999595e-05}, {'diff': 4.326399999999772e-05}, {'diff': 4.33059999999999e-05}, {'diff': 4.374999999999865e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:00.557" endtime="20201029 12:48:00.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:00.565" level="INFO">${ACCURACY} = {'diff': [4.333399999999904e-05, 4.325000000000162e-05, 4.3444999999999595e-05, 4.326399999999772e-05, 4.33059999999999e-05, 4.374999999999865e-05, 4.351399999999797e-05, 4.4111000000002926e-05, 4.345...</msg>
<status status="PASS" starttime="20201029 12:48:00.562" endtime="20201029 12:48:00.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.569" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 12:48:00.568" endtime="20201029 12:48:00.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.572" level="INFO">VALUE: [4.333399999999904e-05, 4.325000000000162e-05, 4.3444999999999595e-05, 4.326399999999772e-05, 4.33059999999999e-05, 4.374999999999865e-05, 4.351399999999797e-05, 4.4111000000002926e-05, 4.345799999999969e-05, 4.3138999999997596e-05, 4.3569000000000246e-05, 4.4083000000000316e-05, 4.3374999999998276e-05, 4.319399999999987e-05, 4.3124999999998026e-05, 4.3110999999998456e-05, 4.4069000000000746e-05, 4.3624999999998526e-05, 4.404100000000161e-05, 4.3374999999998276e-05, 4.348599999999883e-05, 4.329200000000033e-05, 4.3402999999997416e-05, 4.3360999999998706e-05, 4.3096999999998886e-05, 4.3638999999998096e-05, 4.3180999999999775e-05, 4.3958999999999665e-05, 4.333399999999904e-05, 4.3638999999998096e-05, 4.3945000000000095e-05, 4.3431000000000025e-05, 4.38060000000004e-05, 4.3236999999998055e-05, 4.355600000000015e-05, 4.405600000000065e-05, 4.402800000000151e-05, 4.3346999999999136e-05, 4.395800000000019e-05, 4.380499999999746e-05, 4.3833000000000066e-05, 4.347199999999926e-05, 4.3360999999998706e-05, 4.355499999999721e-05, 4.376399999999822e-05, 4.3110999999998456e-05, 4.3305000000000426e-05, 4.3124999999998026e-05, 4.33059999999999e-05, 4.3374999999998276e-05]</msg>
<status status="PASS" starttime="20201029 12:48:00.570" endtime="20201029 12:48:00.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.566" endtime="20201029 12:48:00.574"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:00.578" endtime="20201029 12:48:00.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.576" endtime="20201029 12:48:00.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.575" endtime="20201029 12:48:00.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.212" endtime="20201029 12:48:00.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.212" endtime="20201029 12:48:00.599"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.608" endtime="20201029 12:48:00.626"></status>
</kw>
<msg timestamp="20201029 12:48:00.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:00.606" endtime="20201029 12:48:00.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:00.628" endtime="20201029 12:48:00.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.630" endtime="20201029 12:48:00.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.603" endtime="20201029 12:48:00.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.601" endtime="20201029 12:48:00.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.640" endtime="20201029 12:48:00.926"></status>
</kw>
<msg timestamp="20201029 12:48:00.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020113403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020158319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:00.638" endtime="20201029 12:48:00.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020113403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020158319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:00.930" endtime="20201029 12:48:00.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.939" endtime="20201029 12:48:00.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.635" endtime="20201029 12:48:00.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.633" endtime="20201029 12:48:00.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:00.946" level="INFO">${RESULT} = [{'diff': 4.491600000000248e-05}, {'diff': 4.463800000000309e-05}, {'diff': 4.4624999999999526e-05}, {'diff': 4.46939999999979e-05}, {'diff': 4.426400000000219e-05}, {'diff': 4.4360999999999706e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:48:00.942" endtime="20201029 12:48:00.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:00.951" level="INFO">${ACCURACY} = {'diff': [4.491600000000248e-05, 4.463800000000309e-05, 4.4624999999999526e-05, 4.46939999999979e-05, 4.426400000000219e-05, 4.4360999999999706e-05, 4.4610999999999956e-05, 4.475000000000312e-05, 4.41...</msg>
<status status="PASS" starttime="20201029 12:48:00.947" endtime="20201029 12:48:00.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.955" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 12:48:00.954" endtime="20201029 12:48:00.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:00.958" level="INFO">VALUE: [4.491600000000248e-05, 4.463800000000309e-05, 4.4624999999999526e-05, 4.46939999999979e-05, 4.426400000000219e-05, 4.4360999999999706e-05, 4.4610999999999956e-05, 4.475000000000312e-05, 4.4124999999999026e-05, 4.4874999999999776e-05, 4.4874999999999776e-05, 4.454199999999811e-05, 4.4138999999998596e-05, 4.4888999999999346e-05, 4.4888999999999346e-05, 4.4375000000002746e-05, 4.4125000000002496e-05, 4.4402999999998416e-05, 4.484800000000011e-05, 4.448599999999983e-05, 4.49999999999999e-05, 4.432000000000047e-05, 4.4431000000001025e-05, 4.4888999999999346e-05, 4.43060000000009e-05, 4.4417000000001455e-05, 4.506999999999775e-05, 4.432000000000047e-05, 4.495799999999772e-05, 4.473600000000008e-05, 4.4110999999999456e-05, 4.4666999999998236e-05, 4.444400000000112e-05, 4.4624999999999526e-05, 4.420800000000044e-05, 4.4874999999999776e-05, 4.419400000000087e-05, 4.4319000000000996e-05, 4.473600000000008e-05, 4.480499999999846e-05, 4.4931000000001525e-05, 4.4124999999999026e-05, 4.4430999999997556e-05, 4.495800000000119e-05, 4.429200000000133e-05, 4.44999999999994e-05, 4.505600000000165e-05, 4.4653000000002135e-05, 4.4889000000002816e-05, 4.454199999999811e-05]</msg>
<status status="PASS" starttime="20201029 12:48:00.956" endtime="20201029 12:48:00.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.951" endtime="20201029 12:48:00.959"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:00.963" endtime="20201029 12:48:00.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.961" endtime="20201029 12:48:00.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.960" endtime="20201029 12:48:00.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.600" endtime="20201029 12:48:00.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.599" endtime="20201029 12:48:00.984"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:00.993" endtime="20201029 12:48:01.011"></status>
</kw>
<msg timestamp="20201029 12:48:01.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:00.991" endtime="20201029 12:48:01.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:01.013" endtime="20201029 12:48:01.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.016" endtime="20201029 12:48:01.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.988" endtime="20201029 12:48:01.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.986" endtime="20201029 12:48:01.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.025" endtime="20201029 12:48:01.313"></status>
</kw>
<msg timestamp="20201029 12:48:01.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020344153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020389958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:01.023" endtime="20201029 12:48:01.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020344153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020389958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:01.317" endtime="20201029 12:48:01.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.326" endtime="20201029 12:48:01.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.021" endtime="20201029 12:48:01.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.019" endtime="20201029 12:48:01.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:01.332" level="INFO">${RESULT} = [{'diff': 4.580499999999946e-05}, {'diff': 4.526399999999972e-05}, {'diff': 4.511099999999699e-05}, {'diff': 4.5723000000000985e-05}, {'diff': 4.544400000000212e-05}, {'diff': 4.5138999999999596e-05},...</msg>
<status status="PASS" starttime="20201029 12:48:01.329" endtime="20201029 12:48:01.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:01.336" level="INFO">${ACCURACY} = {'diff': [4.580499999999946e-05, 4.526399999999972e-05, 4.511099999999699e-05, 4.5723000000000985e-05, 4.544400000000212e-05, 4.5138999999999596e-05, 4.545799999999822e-05, 4.548600000000083e-05, 4.58...</msg>
<status status="PASS" starttime="20201029 12:48:01.333" endtime="20201029 12:48:01.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.344" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 12:48:01.343" endtime="20201029 12:48:01.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.348" level="INFO">VALUE: [4.580499999999946e-05, 4.526399999999972e-05, 4.511099999999699e-05, 4.5723000000000985e-05, 4.544400000000212e-05, 4.5138999999999596e-05, 4.545799999999822e-05, 4.548600000000083e-05, 4.5889000000000346e-05, 4.5388999999999846e-05, 4.5694999999998376e-05, 4.519400000000187e-05, 4.575000000000065e-05, 4.551399999999997e-05, 4.5569000000002247e-05, 4.547199999999779e-05, 4.525000000000015e-05, 4.547200000000126e-05, 4.575000000000065e-05, 4.5695000000001845e-05, 4.5930999999999056e-05, 4.523600000000058e-05, 4.566599999999976e-05, 4.55000000000004e-05, 4.5125000000000026e-05, 4.541599999999951e-05, 4.559800000000086e-05, 4.5375000000000276e-05, 4.5125000000000026e-05, 4.552799999999954e-05, 4.517999999999883e-05, 4.577800000000326e-05, 4.592999999999958e-05, 4.558299999999835e-05, 4.544399999999865e-05, 4.566599999999976e-05, 4.551399999999997e-05, 4.5694999999998376e-05, 4.516600000000273e-05, 4.575000000000065e-05, 4.5902999999999916e-05, 4.5138999999999596e-05, 4.529199999999886e-05, 4.526399999999972e-05, 4.548599999999736e-05, 4.613899999999713e-05, 4.605599999999918e-05, 4.556999999999825e-05, 4.557000000000172e-05, 4.5709000000001415e-05]</msg>
<status status="PASS" starttime="20201029 12:48:01.346" endtime="20201029 12:48:01.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.337" endtime="20201029 12:48:01.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:01.353" endtime="20201029 12:48:01.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.351" endtime="20201029 12:48:01.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.350" endtime="20201029 12:48:01.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.985" endtime="20201029 12:48:01.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:00.984" endtime="20201029 12:48:01.375"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.386" endtime="20201029 12:48:01.404"></status>
</kw>
<msg timestamp="20201029 12:48:01.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:01.384" endtime="20201029 12:48:01.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:01.406" endtime="20201029 12:48:01.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.408" endtime="20201029 12:48:01.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.382" endtime="20201029 12:48:01.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.379" endtime="20201029 12:48:01.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.417" endtime="20201029 12:48:01.702"></status>
</kw>
<msg timestamp="20201029 12:48:01.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023462292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023508569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:01.415" endtime="20201029 12:48:01.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023462292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023508569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:01.706" endtime="20201029 12:48:01.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.715" endtime="20201029 12:48:01.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.413" endtime="20201029 12:48:01.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.411" endtime="20201029 12:48:01.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:01.721" level="INFO">${RESULT} = [{'diff': 4.627700000000082e-05}, {'diff': 4.611199999999746e-05}, {'diff': 4.625000000000115e-05}, {'diff': 4.706900000000028e-05}, {'diff': 4.644399999999965e-05}, {'diff': 4.630499999999996e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:01.718" endtime="20201029 12:48:01.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:01.725" level="INFO">${ACCURACY} = {'diff': [4.627700000000082e-05, 4.611199999999746e-05, 4.625000000000115e-05, 4.706900000000028e-05, 4.644399999999965e-05, 4.630499999999996e-05, 4.6111000000001456e-05, 4.6889000000001346e-05, 4.63...</msg>
<status status="PASS" starttime="20201029 12:48:01.722" endtime="20201029 12:48:01.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.729" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 12:48:01.728" endtime="20201029 12:48:01.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.732" level="INFO">VALUE: [4.627700000000082e-05, 4.611199999999746e-05, 4.625000000000115e-05, 4.706900000000028e-05, 4.644399999999965e-05, 4.630499999999996e-05, 4.6111000000001456e-05, 4.6889000000001346e-05, 4.630499999999996e-05, 4.626400000000072e-05, 4.681900000000003e-05, 4.612499999999756e-05, 4.673600000000208e-05, 4.620799999999897e-05, 4.709699999999942e-05, 4.690299999999745e-05, 4.677799999999732e-05, 4.6861000000002206e-05, 4.6722999999998516e-05, 4.612499999999756e-05, 4.6139000000000596e-05, 4.6139000000000596e-05, 4.694400000000015e-05, 4.6667000000000236e-05, 4.6694999999999376e-05, 4.6166999999999736e-05, 4.6444999999999126e-05, 4.620799999999897e-05, 4.661200000000143e-05, 4.693000000000058e-05, 4.6375000000001276e-05, 4.622200000000201e-05, 4.622199999999854e-05, 4.623600000000158e-05, 4.631899999999953e-05, 4.65000000000014e-05, 4.676400000000122e-05, 4.667999999999686e-05, 4.629100000000039e-05, 4.651400000000097e-05, 4.624999999999768e-05, 4.61939999999994e-05, 4.6694999999999376e-05, 4.6180999999999306e-05, 4.6403000000000416e-05, 4.626400000000072e-05, 4.658400000000229e-05, 4.636099999999824e-05, 4.6209000000001915e-05, 4.655599999999968e-05]</msg>
<status status="PASS" starttime="20201029 12:48:01.731" endtime="20201029 12:48:01.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.726" endtime="20201029 12:48:01.741"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:01.744" endtime="20201029 12:48:01.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.743" endtime="20201029 12:48:01.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.742" endtime="20201029 12:48:01.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.377" endtime="20201029 12:48:01.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.376" endtime="20201029 12:48:01.765"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.775" endtime="20201029 12:48:01.793"></status>
</kw>
<msg timestamp="20201029 12:48:01.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:01.773" endtime="20201029 12:48:01.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:01.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:01.795" endtime="20201029 12:48:01.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.797" endtime="20201029 12:48:01.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.770" endtime="20201029 12:48:01.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.768" endtime="20201029 12:48:01.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:01.806" endtime="20201029 12:48:02.091"></status>
</kw>
<msg timestamp="20201029 12:48:02.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020985, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021032292, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:48:01.804" endtime="20201029 12:48:02.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020985, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021032292, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:48:02.095" endtime="20201029 12:48:02.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.103" endtime="20201029 12:48:02.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.802" endtime="20201029 12:48:02.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.800" endtime="20201029 12:48:02.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:02.110" level="INFO">${RESULT} = [{'diff': 4.729200000000086e-05}, {'diff': 4.730600000000043e-05}, {'diff': 4.7458999999999696e-05}, {'diff': 4.748599999999936e-05}, {'diff': 4.7458999999999696e-05}, {'diff': 4.7403000000001416e-05}...</msg>
<status status="PASS" starttime="20201029 12:48:02.107" endtime="20201029 12:48:02.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:02.115" level="INFO">${ACCURACY} = {'diff': [4.729200000000086e-05, 4.730600000000043e-05, 4.7458999999999696e-05, 4.748599999999936e-05, 4.7458999999999696e-05, 4.7403000000001416e-05, 4.795799999999725e-05, 4.78330000000006e-05, 4.73...</msg>
<status status="PASS" starttime="20201029 12:48:02.111" endtime="20201029 12:48:02.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.119" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 12:48:02.118" endtime="20201029 12:48:02.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.121" level="INFO">VALUE: [4.729200000000086e-05, 4.730600000000043e-05, 4.7458999999999696e-05, 4.748599999999936e-05, 4.7458999999999696e-05, 4.7403000000001416e-05, 4.795799999999725e-05, 4.78330000000006e-05, 4.731900000000053e-05, 4.763799999999915e-05, 4.718000000000083e-05, 4.788899999999888e-05, 4.767999999999786e-05, 4.76529999999982e-05, 4.805499999999824e-05, 4.752799999999807e-05, 4.743000000000108e-05, 4.718000000000083e-05, 4.8013999999999e-05, 4.718000000000083e-05, 4.758300000000035e-05, 4.762499999999906e-05, 4.755600000000068e-05, 4.798599999999986e-05, 4.754200000000111e-05, 4.712499999999856e-05, 4.712499999999856e-05, 4.7681000000000806e-05, 4.757000000000025e-05, 4.7139000000001596e-05, 4.755600000000068e-05, 4.736200000000218e-05, 4.7194999999999876e-05, 4.7389000000001846e-05, 4.720799999999997e-05, 4.7695000000000376e-05, 4.747199999999979e-05, 4.724999999999868e-05, 4.737499999999881e-05, 4.726400000000172e-05, 4.787499999999931e-05, 4.7889000000002346e-05, 4.729099999999792e-05, 4.745800000000022e-05, 4.737499999999881e-05, 4.767999999999786e-05, 4.780599999999746e-05, 4.791699999999802e-05, 4.7167000000000736e-05, 4.78330000000006e-05]</msg>
<status status="PASS" starttime="20201029 12:48:02.120" endtime="20201029 12:48:02.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.116" endtime="20201029 12:48:02.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:02.126" endtime="20201029 12:48:02.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.125" endtime="20201029 12:48:02.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.124" endtime="20201029 12:48:02.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.766" endtime="20201029 12:48:02.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:01.766" endtime="20201029 12:48:02.147"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.155" endtime="20201029 12:48:02.173"></status>
</kw>
<msg timestamp="20201029 12:48:02.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:02.154" endtime="20201029 12:48:02.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:02.175" endtime="20201029 12:48:02.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.177" endtime="20201029 12:48:02.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.151" endtime="20201029 12:48:02.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.149" endtime="20201029 12:48:02.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.186" endtime="20201029 12:48:02.472"></status>
</kw>
<msg timestamp="20201029 12:48:02.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019495875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0195445, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:02.185" endtime="20201029 12:48:02.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019495875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0195445, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:02.477" endtime="20201029 12:48:02.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.485" endtime="20201029 12:48:02.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.182" endtime="20201029 12:48:02.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.180" endtime="20201029 12:48:02.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:02.491" level="INFO">${RESULT} = [{'diff': 4.862500000000006e-05}, {'diff': 4.86529999999992e-05}, {'diff': 4.85139999999995e-05}, {'diff': 4.8681000000001806e-05}, {'diff': 4.877799999999932e-05}, {'diff': 4.908399999999785e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:02.488" endtime="20201029 12:48:02.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:02.495" level="INFO">${ACCURACY} = {'diff': [4.862500000000006e-05, 4.86529999999992e-05, 4.85139999999995e-05, 4.8681000000001806e-05, 4.877799999999932e-05, 4.908399999999785e-05, 4.849999999999993e-05, 4.8709000000000946e-05, 4.8194...</msg>
<status status="PASS" starttime="20201029 12:48:02.492" endtime="20201029 12:48:02.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.500" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 12:48:02.499" endtime="20201029 12:48:02.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.502" level="INFO">VALUE: [4.862500000000006e-05, 4.86529999999992e-05, 4.85139999999995e-05, 4.8681000000001806e-05, 4.877799999999932e-05, 4.908399999999785e-05, 4.849999999999993e-05, 4.8709000000000946e-05, 4.8194999999997407e-05, 4.9014e-05, 4.8209000000000446e-05, 4.869499999999791e-05, 4.837499999999981e-05, 4.8195000000000876e-05, 4.886200000000021e-05, 4.831899999999806e-05, 4.869399999999843e-05, 4.876399999999975e-05, 4.830500000000196e-05, 4.81940000000014e-05, 4.861100000000049e-05, 4.877799999999932e-05, 4.875000000000018e-05, 4.831899999999806e-05, 4.858300000000135e-05, 4.908300000000185e-05, 4.8320000000001e-05, 4.8695000000001376e-05, 4.875000000000018e-05, 4.8667000000002236e-05, 4.866699999999877e-05, 4.8959000000001196e-05, 4.811099999999999e-05, 4.900000000000043e-05, 4.875000000000018e-05, 4.905599999999871e-05, 4.884700000000117e-05, 4.875000000000018e-05, 4.8931000000002056e-05, 4.8444999999997657e-05, 4.905599999999871e-05, 4.845800000000122e-05, 4.888899999999988e-05, 4.902799999999957e-05, 4.888899999999988e-05, 4.836100000000024e-05, 4.841599999999904e-05, 4.823600000000011e-05, 4.830600000000143e-05, 4.811099999999999e-05]</msg>
<status status="PASS" starttime="20201029 12:48:02.501" endtime="20201029 12:48:02.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.496" endtime="20201029 12:48:02.503"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:02.507" endtime="20201029 12:48:02.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.506" endtime="20201029 12:48:02.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.504" endtime="20201029 12:48:02.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.148" endtime="20201029 12:48:02.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.147" endtime="20201029 12:48:02.528"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.536" endtime="20201029 12:48:02.555"></status>
</kw>
<msg timestamp="20201029 12:48:02.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:02.535" endtime="20201029 12:48:02.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:02.556" endtime="20201029 12:48:02.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.559" endtime="20201029 12:48:02.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.532" endtime="20201029 12:48:02.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.530" endtime="20201029 12:48:02.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.568" endtime="20201029 12:48:02.854"></status>
</kw>
<msg timestamp="20201029 12:48:02.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020348833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020398667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:02.566" endtime="20201029 12:48:02.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020348833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020398667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:02.858" endtime="20201029 12:48:02.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.866" endtime="20201029 12:48:02.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.563" endtime="20201029 12:48:02.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.562" endtime="20201029 12:48:02.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:02.873" level="INFO">${RESULT} = [{'diff': 4.98339999999986e-05}, {'diff': 4.988899999999741e-05}, {'diff': 4.9208999999997977e-05}, {'diff': 4.994499999999916e-05}, {'diff': 4.937500000000081e-05}, {'diff': 4.967999999999986e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:02.869" endtime="20201029 12:48:02.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:02.877" level="INFO">${ACCURACY} = {'diff': [4.98339999999986e-05, 4.988899999999741e-05, 4.9208999999997977e-05, 4.994499999999916e-05, 4.937500000000081e-05, 4.967999999999986e-05, 4.929199999999939e-05, 4.995799999999925e-05, 4.9750...</msg>
<status status="PASS" starttime="20201029 12:48:02.874" endtime="20201029 12:48:02.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.881" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 12:48:02.880" endtime="20201029 12:48:02.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.884" level="INFO">VALUE: [4.98339999999986e-05, 4.988899999999741e-05, 4.9208999999997977e-05, 4.994499999999916e-05, 4.937500000000081e-05, 4.967999999999986e-05, 4.929199999999939e-05, 4.995799999999925e-05, 4.975000000000118e-05, 5.0014000000001e-05, 4.962499999999759e-05, 4.924999999999721e-05, 4.980499999999999e-05, 4.911100000000099e-05, 4.919499999999841e-05, 4.944399999999918e-05, 4.979199999999989e-05, 4.986100000000174e-05, 4.986100000000174e-05, 4.922199999999807e-05, 5.005599999999971e-05, 5.002800000000057e-05, 5.0014000000001e-05, 4.975000000000118e-05, 4.966699999999977e-05, 4.93339999999981e-05, 4.955599999999921e-05, 4.925000000000068e-05, 4.986099999999827e-05, 4.925000000000068e-05, 4.975000000000118e-05, 4.912500000000056e-05, 4.988899999999741e-05, 4.984700000000217e-05, 4.972199999999857e-05, 4.986099999999827e-05, 4.942999999999961e-05, 4.993000000000011e-05, 4.973600000000161e-05, 4.976400000000075e-05, 4.948600000000136e-05, 5.0014000000001e-05, 4.976400000000075e-05, 4.994499999999916e-05, 4.969499999999891e-05, 4.909699999999795e-05, 4.91529999999997e-05, 4.948599999999789e-05, 5.005599999999971e-05, 4.9915999999997074e-05]</msg>
<status status="PASS" starttime="20201029 12:48:02.882" endtime="20201029 12:48:02.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.878" endtime="20201029 12:48:02.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:02.889" endtime="20201029 12:48:02.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.888" endtime="20201029 12:48:02.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.887" endtime="20201029 12:48:02.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.529" endtime="20201029 12:48:02.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.528" endtime="20201029 12:48:02.910"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.918" endtime="20201029 12:48:02.936"></status>
</kw>
<msg timestamp="20201029 12:48:02.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:02.917" endtime="20201029 12:48:02.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:02.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:02.938" endtime="20201029 12:48:02.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.940" endtime="20201029 12:48:02.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.914" endtime="20201029 12:48:02.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.912" endtime="20201029 12:48:02.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:02.949" endtime="20201029 12:48:03.235"></status>
</kw>
<msg timestamp="20201029 12:48:03.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019498333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0195495, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:02.948" endtime="20201029 12:48:03.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019498333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0195495, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:03.239" endtime="20201029 12:48:03.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.247" endtime="20201029 12:48:03.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.945" endtime="20201029 12:48:03.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.943" endtime="20201029 12:48:03.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:03.253" level="INFO">${RESULT} = [{'diff': 5.116700000000127e-05}, {'diff': 5.099999999999896e-05}, {'diff': 5.0986999999998867e-05}, {'diff': 5.0195000000002876e-05}, {'diff': 5.013899999999766e-05}, {'diff': 5.033299999999963e-05},...</msg>
<status status="PASS" starttime="20201029 12:48:03.250" endtime="20201029 12:48:03.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:03.258" level="INFO">${ACCURACY} = {'diff': [5.116700000000127e-05, 5.099999999999896e-05, 5.0986999999998867e-05, 5.0195000000002876e-05, 5.013899999999766e-05, 5.033299999999963e-05, 5.075000000000218e-05, 5.076400000000175e-05, 5.05...</msg>
<status status="PASS" starttime="20201029 12:48:03.254" endtime="20201029 12:48:03.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.263" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 12:48:03.262" endtime="20201029 12:48:03.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.265" level="INFO">VALUE: [5.116700000000127e-05, 5.099999999999896e-05, 5.0986999999998867e-05, 5.0195000000002876e-05, 5.013899999999766e-05, 5.033299999999963e-05, 5.075000000000218e-05, 5.076400000000175e-05, 5.058399999999935e-05, 5.076399999999828e-05, 5.013900000000113e-05, 5.082000000000003e-05, 5.105600000000071e-05, 5.097199999999982e-05, 5.106900000000081e-05, 5.108300000000038e-05, 5.091600000000154e-05, 5.026400000000125e-05, 5.02079999999995e-05, 5.081900000000056e-05, 5.081900000000056e-05, 5.033299999999963e-05, 5.03469999999992e-05, 5.097199999999982e-05, 5.061100000000249e-05, 5.049999999999846e-05, 5.106900000000081e-05, 5.038900000000138e-05, 5.105600000000071e-05, 5.102800000000157e-05, 5.058399999999935e-05, 5.050000000000193e-05, 5.079100000000142e-05, 5.095800000000025e-05, 5.074999999999871e-05, 5.072299999999905e-05, 5.062499999999859e-05, 5.108300000000038e-05, 5.050000000000193e-05, 5.080600000000046e-05, 5.031900000000006e-05, 5.101399999999853e-05, 5.077799999999785e-05, 5.087500000000231e-05, 5.080500000000099e-05, 5.033299999999963e-05, 5.009700000000242e-05, 5.072299999999905e-05, 5.077800000000132e-05, 5.055600000000021e-05]</msg>
<status status="PASS" starttime="20201029 12:48:03.264" endtime="20201029 12:48:03.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.259" endtime="20201029 12:48:03.267"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:03.270" endtime="20201029 12:48:03.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.269" endtime="20201029 12:48:03.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.268" endtime="20201029 12:48:03.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.911" endtime="20201029 12:48:03.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:02.910" endtime="20201029 12:48:03.291"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.299" endtime="20201029 12:48:03.318"></status>
</kw>
<msg timestamp="20201029 12:48:03.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:03.298" endtime="20201029 12:48:03.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:03.319" endtime="20201029 12:48:03.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.322" endtime="20201029 12:48:03.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.295" endtime="20201029 12:48:03.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.293" endtime="20201029 12:48:03.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.330" endtime="20201029 12:48:03.617"></status>
</kw>
<msg timestamp="20201029 12:48:03.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019581458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019633153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:03.329" endtime="20201029 12:48:03.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019581458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019633153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:03.621" endtime="20201029 12:48:03.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.629" endtime="20201029 12:48:03.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.326" endtime="20201029 12:48:03.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.325" endtime="20201029 12:48:03.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:03.635" level="INFO">${RESULT} = [{'diff': 5.169500000000091e-05}, {'diff': 5.131999999999706e-05}, {'diff': 5.182000000000103e-05}, {'diff': 5.143000000000161e-05}, {'diff': 5.202699999999963e-05}, {'diff': 5.140300000000195e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:03.632" endtime="20201029 12:48:03.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:03.639" level="INFO">${ACCURACY} = {'diff': [5.169500000000091e-05, 5.131999999999706e-05, 5.182000000000103e-05, 5.143000000000161e-05, 5.202699999999963e-05, 5.140300000000195e-05, 5.193000000000211e-05, 5.205499999999877e-05, 5.1445...</msg>
<status status="PASS" starttime="20201029 12:48:03.636" endtime="20201029 12:48:03.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.644" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 12:48:03.643" endtime="20201029 12:48:03.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.646" level="INFO">VALUE: [5.169500000000091e-05, 5.131999999999706e-05, 5.182000000000103e-05, 5.143000000000161e-05, 5.202699999999963e-05, 5.140300000000195e-05, 5.193000000000211e-05, 5.205499999999877e-05, 5.144500000000066e-05, 5.197200000000082e-05, 5.162499999999959e-05, 5.18609999999968e-05, 5.176400000000275e-05, 5.172200000000057e-05, 5.123599999999964e-05, 5.158300000000088e-05, 5.136099999999977e-05, 5.199999999999996e-05, 5.193100000000159e-05, 5.124999999999921e-05, 5.113899999999866e-05, 5.184800000000017e-05, 5.130599999999749e-05, 5.190300000000245e-05, 5.182000000000103e-05, 5.113900000000213e-05, 5.132000000000053e-05, 5.155599999999774e-05, 5.112500000000256e-05, 5.166700000000177e-05, 5.173600000000014e-05, 5.145800000000075e-05, 5.177799999999885e-05, 5.195800000000125e-05, 5.1693999999997964e-05, 5.137499999999934e-05, 5.1929999999998644e-05, 5.124999999999921e-05, 5.148599999999989e-05, 5.1708000000001e-05, 5.158300000000088e-05, 5.199999999999996e-05, 5.173600000000014e-05, 5.156999999999731e-05, 5.162499999999959e-05, 5.126399999999878e-05, 5.151399999999903e-05, 5.191700000000202e-05, 5.155600000000121e-05, 5.127800000000182e-05]</msg>
<status status="PASS" starttime="20201029 12:48:03.645" endtime="20201029 12:48:03.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.640" endtime="20201029 12:48:03.648"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:03.651" endtime="20201029 12:48:03.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.650" endtime="20201029 12:48:03.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.648" endtime="20201029 12:48:03.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.292" endtime="20201029 12:48:03.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.291" endtime="20201029 12:48:03.672"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.680" endtime="20201029 12:48:03.702"></status>
</kw>
<msg timestamp="20201029 12:48:03.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:03.679" endtime="20201029 12:48:03.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:03.703" endtime="20201029 12:48:03.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.706" endtime="20201029 12:48:03.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.676" endtime="20201029 12:48:03.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.674" endtime="20201029 12:48:03.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.715" endtime="20201029 12:48:04.015"></status>
</kw>
<msg timestamp="20201029 12:48:04.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022655889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:03.713" endtime="20201029 12:48:04.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022655889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:04.025" endtime="20201029 12:48:04.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.043" endtime="20201029 12:48:04.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.711" endtime="20201029 12:48:04.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.709" endtime="20201029 12:48:04.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:04.057" level="INFO">${RESULT} = [{'diff': 5.2707999999998534e-05}, {'diff': 5.240299999999948e-05}, {'diff': 5.261100000000102e-05}, {'diff': 5.287499999999737e-05}, {'diff': 5.307000000000228e-05}, {'diff': 5.262500000000059e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:48:04.050" endtime="20201029 12:48:04.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:04.066" level="INFO">${ACCURACY} = {'diff': [5.2707999999998534e-05, 5.240299999999948e-05, 5.261100000000102e-05, 5.287499999999737e-05, 5.307000000000228e-05, 5.262500000000059e-05, 5.308300000000238e-05, 5.2429999999999144e-05, 5.21...</msg>
<status status="PASS" starttime="20201029 12:48:04.059" endtime="20201029 12:48:04.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.076" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 12:48:04.073" endtime="20201029 12:48:04.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.079" level="INFO">VALUE: [5.2707999999998534e-05, 5.240299999999948e-05, 5.261100000000102e-05, 5.287499999999737e-05, 5.307000000000228e-05, 5.262500000000059e-05, 5.308300000000238e-05, 5.2429999999999144e-05, 5.212500000000009e-05, 5.230499999999902e-05, 5.21530000000027e-05, 5.256899999999884e-05, 5.256899999999884e-05, 5.276400000000028e-05, 5.300000000000096e-05, 5.231900000000206e-05, 5.306900000000281e-05, 5.26669999999993e-05, 5.211100000000052e-05, 5.22080000000015e-05, 5.258300000000188e-05, 5.301400000000053e-05, 5.222200000000107e-05, 5.257000000000178e-05, 5.230599999999849e-05, 5.277799999999985e-05, 5.307000000000228e-05, 5.2749999999997244e-05, 5.238899999999991e-05, 5.212500000000009e-05, 5.229099999999945e-05, 5.281999999999856e-05, 5.247200000000132e-05, 5.251300000000056e-05, 5.2707999999998534e-05, 5.2665999999999824e-05, 5.248600000000089e-05, 5.2207999999998034e-05, 5.276400000000028e-05, 5.2485999999997424e-05, 5.275000000000071e-05, 5.213899999999966e-05, 5.227799999999935e-05, 5.288900000000041e-05, 5.233299999999816e-05, 5.21669999999988e-05, 5.219500000000141e-05, 5.293099999999912e-05, 5.276400000000028e-05, 5.290299999999998e-05]</msg>
<status status="PASS" starttime="20201029 12:48:04.077" endtime="20201029 12:48:04.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.068" endtime="20201029 12:48:04.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:04.084" endtime="20201029 12:48:04.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.083" endtime="20201029 12:48:04.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.082" endtime="20201029 12:48:04.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.673" endtime="20201029 12:48:04.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.672" endtime="20201029 12:48:04.105"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.114" endtime="20201029 12:48:04.132"></status>
</kw>
<msg timestamp="20201029 12:48:04.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:04.112" endtime="20201029 12:48:04.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:04.134" endtime="20201029 12:48:04.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.136" endtime="20201029 12:48:04.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.110" endtime="20201029 12:48:04.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.108" endtime="20201029 12:48:04.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.148" endtime="20201029 12:48:04.434"></status>
</kw>
<msg timestamp="20201029 12:48:04.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019692125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019745569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:04.146" endtime="20201029 12:48:04.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019692125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019745569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:04.438" endtime="20201029 12:48:04.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.446" endtime="20201029 12:48:04.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.143" endtime="20201029 12:48:04.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.141" endtime="20201029 12:48:04.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:04.453" level="INFO">${RESULT} = [{'diff': 5.3443999999999714e-05}, {'diff': 5.3901999999998035e-05}, {'diff': 5.3944000000000214e-05}, {'diff': 5.4013999999998064e-05}, {'diff': 5.3999999999998494e-05}, {'diff': 5.3193999999999464e-...</msg>
<status status="PASS" starttime="20201029 12:48:04.449" endtime="20201029 12:48:04.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:04.458" level="INFO">${ACCURACY} = {'diff': [5.3443999999999714e-05, 5.3901999999998035e-05, 5.3944000000000214e-05, 5.4013999999998064e-05, 5.3999999999998494e-05, 5.3193999999999464e-05, 5.313900000000066e-05, 5.332000000000253e-05, ...</msg>
<status status="PASS" starttime="20201029 12:48:04.454" endtime="20201029 12:48:04.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.462" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 12:48:04.461" endtime="20201029 12:48:04.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.465" level="INFO">VALUE: [5.3443999999999714e-05, 5.3901999999998035e-05, 5.3944000000000214e-05, 5.4013999999998064e-05, 5.3999999999998494e-05, 5.3193999999999464e-05, 5.313900000000066e-05, 5.332000000000253e-05, 5.356899999999984e-05, 5.350000000000146e-05, 5.409799999999895e-05, 5.3680000000000394e-05, 5.3443999999999714e-05, 5.3693999999999964e-05, 5.3193999999999464e-05, 5.354200000000017e-05, 5.345899999999876e-05, 5.38340000000026e-05, 5.368099999999987e-05, 5.357000000000278e-05, 5.356999999999931e-05, 5.356999999999931e-05, 5.391700000000055e-05, 5.381900000000009e-05, 5.333399999999863e-05, 5.3666000000000824e-05, 5.404099999999773e-05, 5.327800000000035e-05, 5.4013999999998064e-05, 5.3707999999999534e-05, 5.400000000000196e-05, 5.401400000000153e-05, 5.311100000000152e-05, 5.3443999999999714e-05, 5.375000000000171e-05, 5.3680000000000394e-05, 5.336100000000177e-05, 5.311100000000152e-05, 5.384699999999923e-05, 5.406900000000034e-05, 5.3249999999997744e-05, 5.408399999999938e-05, 5.404200000000067e-05, 5.338900000000091e-05, 5.401400000000153e-05, 5.356999999999931e-05, 5.386100000000227e-05, 5.384699999999923e-05, 5.3485999999998424e-05, 5.3693999999999964e-05]</msg>
<status status="PASS" starttime="20201029 12:48:04.463" endtime="20201029 12:48:04.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.458" endtime="20201029 12:48:04.466"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:04.469" endtime="20201029 12:48:04.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.468" endtime="20201029 12:48:04.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.467" endtime="20201029 12:48:04.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.106" endtime="20201029 12:48:04.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.105" endtime="20201029 12:48:04.490"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.499" endtime="20201029 12:48:04.517"></status>
</kw>
<msg timestamp="20201029 12:48:04.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:04.497" endtime="20201029 12:48:04.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:04.519" endtime="20201029 12:48:04.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.521" endtime="20201029 12:48:04.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.495" endtime="20201029 12:48:04.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.492" endtime="20201029 12:48:04.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.530" endtime="20201029 12:48:04.818"></status>
</kw>
<msg timestamp="20201029 12:48:04.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019731722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:04.529" endtime="20201029 12:48:04.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019731722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019786764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:04.823" endtime="20201029 12:48:04.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.831" endtime="20201029 12:48:04.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.526" endtime="20201029 12:48:04.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.525" endtime="20201029 12:48:04.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:04.838" level="INFO">${RESULT} = [{'diff': 5.5041999999998203e-05}, {'diff': 5.4915999999998605e-05}, {'diff': 5.482000000000056e-05}, {'diff': 5.470900000000001e-05}, {'diff': 5.480500000000152e-05}, {'diff': 5.423600000000264e-05},...</msg>
<status status="PASS" starttime="20201029 12:48:04.834" endtime="20201029 12:48:04.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:04.842" level="INFO">${ACCURACY} = {'diff': [5.5041999999998203e-05, 5.4915999999998605e-05, 5.482000000000056e-05, 5.470900000000001e-05, 5.480500000000152e-05, 5.423600000000264e-05, 5.4707999999997065e-05, 5.412499999999862e-05, 5.4...</msg>
<status status="PASS" starttime="20201029 12:48:04.838" endtime="20201029 12:48:04.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.846" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 12:48:04.845" endtime="20201029 12:48:04.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.849" level="INFO">VALUE: [5.5041999999998203e-05, 5.4915999999998605e-05, 5.482000000000056e-05, 5.470900000000001e-05, 5.480500000000152e-05, 5.423600000000264e-05, 5.4707999999997065e-05, 5.412499999999862e-05, 5.4944000000001214e-05, 5.4944000000001214e-05, 5.425000000000221e-05, 5.4429999999997675e-05, 5.462499999999912e-05, 5.456899999999737e-05, 5.505500000000177e-05, 5.4208000000000034e-05, 5.4249999999998744e-05, 5.506900000000134e-05, 5.5027999999998634e-05, 5.432000000000006e-05, 5.4208000000000034e-05, 5.455600000000074e-05, 5.461099999999955e-05, 5.425000000000221e-05, 5.4527999999998134e-05, 5.444500000000019e-05, 5.433399999999963e-05, 5.438900000000191e-05, 5.447299999999933e-05, 5.487499999999937e-05, 5.473699999999915e-05, 5.4944000000001214e-05, 5.413899999999819e-05, 5.484700000000023e-05, 5.4680000000001394e-05, 5.4249999999998744e-05, 5.4763999999998814e-05, 5.4513999999998564e-05, 5.4708000000000534e-05, 5.4722000000000104e-05, 5.461099999999955e-05, 5.413900000000166e-05, 5.508300000000091e-05, 5.48609999999998e-05, 5.444500000000019e-05, 5.475000000000271e-05, 5.4221999999999604e-05, 5.4944000000001214e-05, 5.419499999999994e-05, 5.441700000000105e-05]</msg>
<status status="PASS" starttime="20201029 12:48:04.847" endtime="20201029 12:48:04.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.842" endtime="20201029 12:48:04.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:04.853" endtime="20201029 12:48:04.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.852" endtime="20201029 12:48:04.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.851" endtime="20201029 12:48:04.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.491" endtime="20201029 12:48:04.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.490" endtime="20201029 12:48:04.874"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.883" endtime="20201029 12:48:04.901"></status>
</kw>
<msg timestamp="20201029 12:48:04.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:04.881" endtime="20201029 12:48:04.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:04.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:04.903" endtime="20201029 12:48:04.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.905" endtime="20201029 12:48:04.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.879" endtime="20201029 12:48:04.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.877" endtime="20201029 12:48:04.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:04.914" endtime="20201029 12:48:05.200"></status>
</kw>
<msg timestamp="20201029 12:48:05.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020540278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020596111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:04.913" endtime="20201029 12:48:05.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020540278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020596111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:05.204" endtime="20201029 12:48:05.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.212" endtime="20201029 12:48:05.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.910" endtime="20201029 12:48:05.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.908" endtime="20201029 12:48:05.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:05.219" level="INFO">${RESULT} = [{'diff': 5.583300000000166e-05}, {'diff': 5.5486000000000424e-05}, {'diff': 5.5763999999999814e-05}, {'diff': 5.5722000000001104e-05}, {'diff': 5.5444000000001714e-05}, {'diff': 5.5763999999999814e-0...</msg>
<status status="PASS" starttime="20201029 12:48:05.216" endtime="20201029 12:48:05.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:05.223" level="INFO">${ACCURACY} = {'diff': [5.583300000000166e-05, 5.5486000000000424e-05, 5.5763999999999814e-05, 5.5722000000001104e-05, 5.5444000000001714e-05, 5.5763999999999814e-05, 5.529200000000192e-05, 5.590300000000298e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:48:05.220" endtime="20201029 12:48:05.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.227" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 12:48:05.226" endtime="20201029 12:48:05.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.230" level="INFO">VALUE: [5.583300000000166e-05, 5.5486000000000424e-05, 5.5763999999999814e-05, 5.5722000000001104e-05, 5.5444000000001714e-05, 5.5763999999999814e-05, 5.529200000000192e-05, 5.590300000000298e-05, 5.561100000000055e-05, 5.5486000000000424e-05, 5.570900000000101e-05, 5.5499999999999994e-05, 5.531999999999759e-05, 5.5679999999998925e-05, 5.593100000000212e-05, 5.586099999999733e-05, 5.581899999999862e-05, 5.5929999999999175e-05, 5.512499999999962e-05, 5.5443999999998245e-05, 5.530500000000202e-05, 5.533299999999769e-05, 5.583299999999819e-05, 5.5499999999999994e-05, 5.537499999999987e-05, 5.5486000000000424e-05, 5.511100000000005e-05, 5.591699999999908e-05, 5.588899999999994e-05, 5.532000000000106e-05, 5.594500000000169e-05, 5.515299999999876e-05, 5.518100000000137e-05, 5.522300000000008e-05, 5.5457999999997815e-05, 5.55549999999988e-05, 5.5472000000000854e-05, 5.518100000000137e-05, 5.5750000000000244e-05, 5.608300000000191e-05, 5.5694000000001964e-05, 5.530499999999855e-05, 5.538900000000291e-05, 5.555500000000227e-05, 5.590299999999951e-05, 5.5499999999999994e-05, 5.6027999999999634e-05, 5.581900000000209e-05, 5.530499999999855e-05, 5.5943999999998745e-05]</msg>
<status status="PASS" starttime="20201029 12:48:05.228" endtime="20201029 12:48:05.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.224" endtime="20201029 12:48:05.232"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:05.235" endtime="20201029 12:48:05.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.234" endtime="20201029 12:48:05.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.233" endtime="20201029 12:48:05.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.875" endtime="20201029 12:48:05.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:04.874" endtime="20201029 12:48:05.256"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.265" endtime="20201029 12:48:05.283"></status>
</kw>
<msg timestamp="20201029 12:48:05.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:05.263" endtime="20201029 12:48:05.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:05.284" endtime="20201029 12:48:05.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.287" endtime="20201029 12:48:05.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.260" endtime="20201029 12:48:05.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.258" endtime="20201029 12:48:05.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.296" endtime="20201029 12:48:05.581"></status>
</kw>
<msg timestamp="20201029 12:48:05.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019489681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01954675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:05.294" endtime="20201029 12:48:05.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019489681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01954675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:05.585" endtime="20201029 12:48:05.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.594" endtime="20201029 12:48:05.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.292" endtime="20201029 12:48:05.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.290" endtime="20201029 12:48:05.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:05.600" level="INFO">${RESULT} = [{'diff': 5.706900000000334e-05}, {'diff': 5.632000000000206e-05}, {'diff': 5.637500000000087e-05}, {'diff': 5.709800000000195e-05}, {'diff': 5.709799999999848e-05}, {'diff': 5.687500000000137e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:05.597" endtime="20201029 12:48:05.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:05.605" level="INFO">${ACCURACY} = {'diff': [5.706900000000334e-05, 5.632000000000206e-05, 5.637500000000087e-05, 5.709800000000195e-05, 5.709799999999848e-05, 5.687500000000137e-05, 5.670900000000201e-05, 5.620900000000151e-05, 5.6612...</msg>
<status status="PASS" starttime="20201029 12:48:05.601" endtime="20201029 12:48:05.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.609" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 12:48:05.608" endtime="20201029 12:48:05.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.612" level="INFO">VALUE: [5.706900000000334e-05, 5.632000000000206e-05, 5.637500000000087e-05, 5.709800000000195e-05, 5.709799999999848e-05, 5.687500000000137e-05, 5.670900000000201e-05, 5.620900000000151e-05, 5.661200000000102e-05, 5.683399999999866e-05, 5.658299999999894e-05, 5.6943999999999745e-05, 5.6236000000001174e-05, 5.659699999999851e-05, 5.611100000000105e-05, 5.612500000000062e-05, 5.6693999999999495e-05, 5.6902000000001035e-05, 5.679100000000048e-05, 5.638900000000044e-05, 5.654100000000023e-05, 5.640300000000001e-05, 5.634700000000173e-05, 5.691700000000008e-05, 5.6749999999997774e-05, 5.6457999999998815e-05, 5.619499999999847e-05, 5.640300000000001e-05, 5.680500000000005e-05, 5.669499999999897e-05, 5.6735999999998205e-05, 5.7027999999997164e-05, 5.638900000000044e-05, 5.6194000000002464e-05, 5.6694000000002964e-05, 5.609699999999801e-05, 5.6693999999999495e-05, 5.654100000000023e-05, 5.631899999999912e-05, 5.6764000000000814e-05, 5.6735999999998205e-05, 5.611100000000105e-05, 5.709699999999901e-05, 5.6693999999999495e-05, 5.7000000000001494e-05, 5.6291999999999454e-05, 5.6778000000000384e-05, 5.619499999999847e-05, 5.688899999999747e-05, 5.659699999999851e-05]</msg>
<status status="PASS" starttime="20201029 12:48:05.610" endtime="20201029 12:48:05.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.606" endtime="20201029 12:48:05.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:05.617" endtime="20201029 12:48:05.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.615" endtime="20201029 12:48:05.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.614" endtime="20201029 12:48:05.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.257" endtime="20201029 12:48:05.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.256" endtime="20201029 12:48:05.637"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.646" endtime="20201029 12:48:05.665"></status>
</kw>
<msg timestamp="20201029 12:48:05.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:05.644" endtime="20201029 12:48:05.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:05.666" endtime="20201029 12:48:05.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.668" endtime="20201029 12:48:05.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.642" endtime="20201029 12:48:05.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.640" endtime="20201029 12:48:05.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.677" endtime="20201029 12:48:05.964"></status>
</kw>
<msg timestamp="20201029 12:48:05.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019522361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019580514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:05.676" endtime="20201029 12:48:05.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019522361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019580514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:05.968" endtime="20201029 12:48:05.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:05.976" endtime="20201029 12:48:05.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.673" endtime="20201029 12:48:05.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.671" endtime="20201029 12:48:05.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:05.983" level="INFO">${RESULT} = [{'diff': 5.815300000000176e-05}, {'diff': 5.738900000000144e-05}, {'diff': 5.745899999999929e-05}, {'diff': 5.8056000000000774e-05}, {'diff': 5.7763999999998344e-05}, {'diff': 5.793100000000065e-05},...</msg>
<status status="PASS" starttime="20201029 12:48:05.980" endtime="20201029 12:48:05.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:05.987" level="INFO">${ACCURACY} = {'diff': [5.815300000000176e-05, 5.738900000000144e-05, 5.745899999999929e-05, 5.8056000000000774e-05, 5.7763999999998344e-05, 5.793100000000065e-05, 5.8070000000000344e-05, 5.756900000000037e-05, 5.7...</msg>
<status status="PASS" starttime="20201029 12:48:05.984" endtime="20201029 12:48:05.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.991" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 12:48:05.990" endtime="20201029 12:48:05.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:05.994" level="INFO">VALUE: [5.815300000000176e-05, 5.738900000000144e-05, 5.745899999999929e-05, 5.8056000000000774e-05, 5.7763999999998344e-05, 5.793100000000065e-05, 5.8070000000000344e-05, 5.756900000000037e-05, 5.795899999999979e-05, 5.7444000000000245e-05, 5.730500000000055e-05, 5.78749999999989e-05, 5.7457999999999815e-05, 5.7457999999999815e-05, 5.765300000000126e-05, 5.7971999999999885e-05, 5.756900000000037e-05, 5.7958000000000315e-05, 5.738900000000144e-05, 5.7721999999999635e-05, 5.786099999999933e-05, 5.8028000000001634e-05, 5.712499999999815e-05, 5.8070000000000344e-05, 5.7806000000000524e-05, 5.8056000000000774e-05, 5.770899999999954e-05, 5.71809999999999e-05, 5.7319999999999593e-05, 5.727699999999794e-05, 5.762499999999865e-05, 5.7387999999998496e-05, 5.74870000000019e-05, 5.7193999999999995e-05, 5.790300000000151e-05, 5.709699999999901e-05, 5.713899999999772e-05, 5.78610000000028e-05, 5.8042000000001204e-05, 5.711100000000205e-05, 5.786099999999933e-05, 5.8028000000001634e-05, 5.7749999999998775e-05, 5.7806000000000524e-05, 5.76810000000004e-05, 5.763900000000169e-05, 5.794499999999675e-05, 5.73749999999984e-05, 5.712500000000162e-05, 5.7306000000000024e-05]</msg>
<status status="PASS" starttime="20201029 12:48:05.992" endtime="20201029 12:48:05.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.988" endtime="20201029 12:48:05.995"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:05.999" endtime="20201029 12:48:06.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.997" endtime="20201029 12:48:06.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.996" endtime="20201029 12:48:06.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.638" endtime="20201029 12:48:06.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:05.638" endtime="20201029 12:48:06.019"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.028" endtime="20201029 12:48:06.047"></status>
</kw>
<msg timestamp="20201029 12:48:06.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:06.026" endtime="20201029 12:48:06.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:06.049" endtime="20201029 12:48:06.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.051" endtime="20201029 12:48:06.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.024" endtime="20201029 12:48:06.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.022" endtime="20201029 12:48:06.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.060" endtime="20201029 12:48:06.346"></status>
</kw>
<msg timestamp="20201029 12:48:06.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020539819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020598306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:06.059" endtime="20201029 12:48:06.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020539819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020598306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:06.350" endtime="20201029 12:48:06.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.358" endtime="20201029 12:48:06.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.056" endtime="20201029 12:48:06.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.054" endtime="20201029 12:48:06.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:06.364" level="INFO">${RESULT} = [{'diff': 5.848699999999943e-05}, {'diff': 5.891699999999861e-05}, {'diff': 5.9055999999998304e-05}, {'diff': 5.83749999999994e-05}, {'diff': 5.8320000000000594e-05}, {'diff': 5.8693999999998026e-05},...</msg>
<status status="PASS" starttime="20201029 12:48:06.361" endtime="20201029 12:48:06.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:06.369" level="INFO">${ACCURACY} = {'diff': [5.848699999999943e-05, 5.891699999999861e-05, 5.9055999999998304e-05, 5.83749999999994e-05, 5.8320000000000594e-05, 5.8693999999998026e-05, 5.8263999999998844e-05, 5.8485999999999955e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:48:06.365" endtime="20201029 12:48:06.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.373" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 12:48:06.372" endtime="20201029 12:48:06.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.375" level="INFO">VALUE: [5.848699999999943e-05, 5.891699999999861e-05, 5.9055999999998304e-05, 5.83749999999994e-05, 5.8320000000000594e-05, 5.8693999999998026e-05, 5.8263999999998844e-05, 5.8485999999999955e-05, 5.8485999999999955e-05, 5.9013999999999595e-05, 5.8415999999998636e-05, 5.8208000000000565e-05, 5.888899999999947e-05, 5.8221999999996665e-05, 5.8708000000001065e-05, 5.8222000000000135e-05, 5.8499999999999525e-05, 5.894500000000122e-05, 5.820900000000004e-05, 5.8542000000001704e-05, 5.8443999999997776e-05, 5.8806000000001524e-05, 5.840299999999854e-05, 5.8736000000000205e-05, 5.8263999999998844e-05, 5.8179999999997956e-05, 5.8347999999999733e-05, 5.8958000000001315e-05, 5.884699999999729e-05, 5.830500000000155e-05, 5.9000000000000025e-05, 5.862499999999965e-05, 5.909700000000101e-05, 5.8763999999999345e-05, 5.815299999999829e-05, 5.859700000000051e-05, 5.830500000000155e-05, 5.8443999999997776e-05, 5.88749999999999e-05, 5.862499999999965e-05, 5.9083999999997444e-05, 5.88749999999999e-05, 5.834700000000026e-05, 5.879099999999901e-05, 5.8694000000001495e-05, 5.8235999999999705e-05, 5.8972000000000885e-05, 5.8693999999998026e-05, 5.8264000000002314e-05, 5.8679999999998456e-05]</msg>
<status status="PASS" starttime="20201029 12:48:06.374" endtime="20201029 12:48:06.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.369" endtime="20201029 12:48:06.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:06.381" endtime="20201029 12:48:06.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.380" endtime="20201029 12:48:06.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.378" endtime="20201029 12:48:06.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.020" endtime="20201029 12:48:06.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.020" endtime="20201029 12:48:06.402"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.410" endtime="20201029 12:48:06.429"></status>
</kw>
<msg timestamp="20201029 12:48:06.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:06.409" endtime="20201029 12:48:06.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:06.430" endtime="20201029 12:48:06.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.433" endtime="20201029 12:48:06.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.406" endtime="20201029 12:48:06.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.404" endtime="20201029 12:48:06.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.441" endtime="20201029 12:48:06.728"></status>
</kw>
<msg timestamp="20201029 12:48:06.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019550681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01961075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:06.440" endtime="20201029 12:48:06.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019550681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01961075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:06.732" endtime="20201029 12:48:06.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.741" endtime="20201029 12:48:06.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.437" endtime="20201029 12:48:06.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.436" endtime="20201029 12:48:06.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:06.748" level="INFO">${RESULT} = [{'diff': 6.00689999999994e-05}, {'diff': 5.988900000000047e-05}, {'diff': 5.9514000000000095e-05}, {'diff': 5.980499999999958e-05}, {'diff': 6.0070000000002344e-05}, {'diff': 5.965299999999979e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:48:06.744" endtime="20201029 12:48:06.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:06.753" level="INFO">${ACCURACY} = {'diff': [6.00689999999994e-05, 5.988900000000047e-05, 5.9514000000000095e-05, 5.980499999999958e-05, 6.0070000000002344e-05, 5.965299999999979e-05, 5.9820000000002094e-05, 6.002700000000069e-05, 5.91...</msg>
<status status="PASS" starttime="20201029 12:48:06.749" endtime="20201029 12:48:06.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.758" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 12:48:06.757" endtime="20201029 12:48:06.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.760" level="INFO">VALUE: [6.00689999999994e-05, 5.988900000000047e-05, 5.9514000000000095e-05, 5.980499999999958e-05, 6.0070000000002344e-05, 5.965299999999979e-05, 5.9820000000002094e-05, 6.002700000000069e-05, 5.913899999999972e-05, 5.9333999999997694e-05, 5.9805999999999054e-05, 5.969500000000197e-05, 5.977700000000044e-05, 5.9443999999998776e-05, 5.9084000000000914e-05, 5.963900000000022e-05, 5.952700000000019e-05, 5.9569999999998374e-05, 5.9750000000000775e-05, 5.9263999999999845e-05, 5.938899999999997e-05, 5.9165999999999386e-05, 5.9291999999998984e-05, 6.005499999999983e-05, 5.9277999999999414e-05, 5.945900000000129e-05, 5.9500000000000525e-05, 5.9834000000001664e-05, 5.962499999999718e-05, 5.9764000000000345e-05, 5.9250000000000275e-05, 5.941699999999911e-05, 5.940300000000301e-05, 6.0055999999999304e-05, 5.9151999999999816e-05, 5.983299999999872e-05, 5.963900000000022e-05, 6.0000000000001025e-05, 5.962500000000065e-05, 5.9514000000000095e-05, 5.93750000000004e-05, 5.9457999999998346e-05, 5.987499999999743e-05, 5.9721999999998165e-05, 5.9443999999998776e-05, 5.9486000000000955e-05, 6.0028000000000165e-05, 5.9834000000001664e-05, 5.9334000000001164e-05, 5.9527999999999665e-05]</msg>
<status status="PASS" starttime="20201029 12:48:06.759" endtime="20201029 12:48:06.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.754" endtime="20201029 12:48:06.766"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:06.770" endtime="20201029 12:48:06.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.769" endtime="20201029 12:48:06.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.767" endtime="20201029 12:48:06.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.403" endtime="20201029 12:48:06.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.402" endtime="20201029 12:48:06.791"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.800" endtime="20201029 12:48:06.819"></status>
</kw>
<msg timestamp="20201029 12:48:06.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:06.798" endtime="20201029 12:48:06.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:06.821" endtime="20201029 12:48:06.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.823" endtime="20201029 12:48:06.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.796" endtime="20201029 12:48:06.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.793" endtime="20201029 12:48:06.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.833" endtime="20201029 12:48:07.144"></status>
</kw>
<msg timestamp="20201029 12:48:07.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020348361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020409125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:06.831" endtime="20201029 12:48:07.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020348361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020409125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:07.149" endtime="20201029 12:48:07.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.158" endtime="20201029 12:48:07.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.828" endtime="20201029 12:48:07.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.827" endtime="20201029 12:48:07.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:07.165" level="INFO">${RESULT} = [{'diff': 6.0764000000001345e-05}, {'diff': 6.069500000000297e-05}, {'diff': 6.090300000000104e-05}, {'diff': 6.040300000000054e-05}, {'diff': 6.043099999999968e-05}, {'diff': 6.0194999999999e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:07.162" endtime="20201029 12:48:07.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:07.169" level="INFO">${ACCURACY} = {'diff': [6.0764000000001345e-05, 6.069500000000297e-05, 6.090300000000104e-05, 6.040300000000054e-05, 6.043099999999968e-05, 6.0194999999999e-05, 6.0764000000001345e-05, 6.0721999999999166e-05, 6.081...</msg>
<status status="PASS" starttime="20201029 12:48:07.166" endtime="20201029 12:48:07.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.174" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 12:48:07.173" endtime="20201029 12:48:07.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.177" level="INFO">VALUE: [6.0764000000001345e-05, 6.069500000000297e-05, 6.090300000000104e-05, 6.040300000000054e-05, 6.043099999999968e-05, 6.0194999999999e-05, 6.0764000000001345e-05, 6.0721999999999166e-05, 6.0819999999999624e-05, 6.0749999999998305e-05, 6.0764000000001345e-05, 6.090299999999757e-05, 6.07629999999984e-05, 6.0944000000000276e-05, 6.0680000000000456e-05, 6.10690000000004e-05, 6.0249999999997805e-05, 6.0514000000001095e-05, 6.0680000000000456e-05, 6.0930000000000706e-05, 6.0499999999998055e-05, 6.0569999999999374e-05, 6.0957999999999846e-05, 6.0514000000001095e-05, 6.0471999999998916e-05, 6.0083999999998444e-05, 6.0763999999997875e-05, 6.0999999999998555e-05, 6.0249999999997805e-05, 6.043099999999968e-05, 6.0249999999997805e-05, 6.0819999999999624e-05, 6.106999999999987e-05, 6.0193999999999526e-05, 6.0235999999998235e-05, 6.0250000000001275e-05, 6.0778000000000915e-05, 6.0944000000000276e-05, 6.0957999999999846e-05, 6.063899999999775e-05, 6.0971999999999416e-05, 6.0430000000000206e-05, 6.0193999999999526e-05, 6.0555999999999804e-05, 6.081900000000015e-05, 6.0514000000001095e-05, 6.0819999999999624e-05, 6.1028000000001165e-05, 6.044500000000272e-05, 6.029100000000051e-05]</msg>
<status status="PASS" starttime="20201029 12:48:07.175" endtime="20201029 12:48:07.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.170" endtime="20201029 12:48:07.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:07.182" endtime="20201029 12:48:07.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.180" endtime="20201029 12:48:07.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.179" endtime="20201029 12:48:07.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.792" endtime="20201029 12:48:07.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.791" endtime="20201029 12:48:07.202"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.212" endtime="20201029 12:48:07.233"></status>
</kw>
<msg timestamp="20201029 12:48:07.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:07.210" endtime="20201029 12:48:07.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:07.235" endtime="20201029 12:48:07.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.237" endtime="20201029 12:48:07.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.207" endtime="20201029 12:48:07.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.205" endtime="20201029 12:48:07.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.247" endtime="20201029 12:48:07.532"></status>
</kw>
<msg timestamp="20201029 12:48:07.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023524653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023586083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:07.245" endtime="20201029 12:48:07.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023524653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023586083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:07.536" endtime="20201029 12:48:07.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.544" endtime="20201029 12:48:07.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.242" endtime="20201029 12:48:07.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.241" endtime="20201029 12:48:07.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:07.551" level="INFO">${RESULT} = [{'diff': 6.14300000000012e-05}, {'diff': 6.17499999999993e-05}, {'diff': 6.163900000000222e-05}, {'diff': 6.18750000000029e-05}, {'diff': 6.179100000000201e-05}, {'diff': 6.12629999999989e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 12:48:07.548" endtime="20201029 12:48:07.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:07.556" level="INFO">${ACCURACY} = {'diff': [6.14300000000012e-05, 6.17499999999993e-05, 6.163900000000222e-05, 6.18750000000029e-05, 6.179100000000201e-05, 6.12629999999989e-05, 6.202700000000269e-05, 6.195800000000085e-05, 6.13609999...</msg>
<status status="PASS" starttime="20201029 12:48:07.552" endtime="20201029 12:48:07.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.560" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 12:48:07.559" endtime="20201029 12:48:07.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.563" level="INFO">VALUE: [6.14300000000012e-05, 6.17499999999993e-05, 6.163900000000222e-05, 6.18750000000029e-05, 6.179100000000201e-05, 6.12629999999989e-05, 6.202700000000269e-05, 6.195800000000085e-05, 6.136099999999936e-05, 6.147199999999992e-05, 6.13889999999985e-05, 6.187499999999943e-05, 6.183299999999725e-05, 6.187499999999943e-05, 6.133300000000022e-05, 6.15560000000008e-05, 6.144499999999678e-05, 6.186099999999986e-05, 6.170900000000007e-05, 6.199999999999956e-05, 6.180499999999811e-05, 6.194500000000075e-05, 6.208300000000097e-05, 6.20560000000013e-05, 6.202699999999922e-05, 6.14300000000012e-05, 6.12499999999988e-05, 6.186099999999986e-05, 6.12080000000001e-05, 6.129100000000151e-05, 6.15140000000021e-05, 6.12499999999988e-05, 6.205499999999836e-05, 6.177799999999845e-05, 6.111099999999911e-05, 6.163899999999875e-05, 6.118100000000043e-05, 6.173599999999974e-05, 6.116699999999739e-05, 6.157000000000037e-05, 6.13750000000024e-05, 6.118100000000043e-05, 6.151399999999863e-05, 6.168099999999746e-05, 6.19019999999991e-05, 6.186199999999933e-05, 6.118100000000043e-05, 6.177700000000244e-05, 6.118100000000043e-05, 6.192999999999824e-05]</msg>
<status status="PASS" starttime="20201029 12:48:07.561" endtime="20201029 12:48:07.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.557" endtime="20201029 12:48:07.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:07.569" endtime="20201029 12:48:07.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.567" endtime="20201029 12:48:07.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.566" endtime="20201029 12:48:07.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.203" endtime="20201029 12:48:07.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.203" endtime="20201029 12:48:07.590"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.599" endtime="20201029 12:48:07.618"></status>
</kw>
<msg timestamp="20201029 12:48:07.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:07.597" endtime="20201029 12:48:07.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:07.620" endtime="20201029 12:48:07.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.622" endtime="20201029 12:48:07.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.594" endtime="20201029 12:48:07.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.592" endtime="20201029 12:48:07.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.632" endtime="20201029 12:48:07.917"></status>
</kw>
<msg timestamp="20201029 12:48:07.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020165778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020228667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:07.630" endtime="20201029 12:48:07.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020165778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020228667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:07.922" endtime="20201029 12:48:07.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.930" endtime="20201029 12:48:07.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.628" endtime="20201029 12:48:07.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.626" endtime="20201029 12:48:07.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:07.937" level="INFO">${RESULT} = [{'diff': 6.2889e-05}, {'diff': 6.232000000000112e-05}, {'diff': 6.261100000000061e-05}, {'diff': 6.276399999999988e-05}, {'diff': 6.295799999999838e-05}, {'diff': 6.234700000000079e-05}, {'diff': 6.2...</msg>
<status status="PASS" starttime="20201029 12:48:07.934" endtime="20201029 12:48:07.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:07.942" level="INFO">${ACCURACY} = {'diff': [6.2889e-05, 6.232000000000112e-05, 6.261100000000061e-05, 6.276399999999988e-05, 6.295799999999838e-05, 6.234700000000079e-05, 6.240299999999907e-05, 6.2889e-05, 6.24439999999983e-05, 6.2333...</msg>
<status status="PASS" starttime="20201029 12:48:07.938" endtime="20201029 12:48:07.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.947" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 12:48:07.946" endtime="20201029 12:48:07.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:07.949" level="INFO">VALUE: [6.2889e-05, 6.232000000000112e-05, 6.261100000000061e-05, 6.276399999999988e-05, 6.295799999999838e-05, 6.234700000000079e-05, 6.240299999999907e-05, 6.2889e-05, 6.24439999999983e-05, 6.233300000000122e-05, 6.276399999999988e-05, 6.280500000000258e-05, 6.268099999999846e-05, 6.231899999999818e-05, 6.287500000000043e-05, 6.226399999999938e-05, 6.263899999999975e-05, 6.301400000000013e-05, 6.261100000000061e-05, 6.268099999999846e-05, 6.286100000000086e-05, 6.293100000000218e-05, 6.254199999999877e-05, 6.297200000000142e-05, 6.295799999999838e-05, 6.243099999999821e-05, 6.23889999999995e-05, 6.208300000000097e-05, 6.241599999999917e-05, 6.240299999999907e-05, 6.292999999999924e-05, 6.243100000000168e-05, 6.245800000000135e-05, 6.297199999999795e-05, 6.279199999999902e-05, 6.298600000000099e-05, 6.27500000000003e-05, 6.230600000000155e-05, 6.261100000000061e-05, 6.2889e-05, 6.2195000000001e-05, 6.219499999999753e-05, 6.243100000000168e-05, 6.295900000000132e-05, 6.266700000000236e-05, 6.2889e-05, 6.213899999999925e-05, 6.244400000000178e-05, 6.287500000000043e-05, 6.27500000000003e-05]</msg>
<status status="PASS" starttime="20201029 12:48:07.948" endtime="20201029 12:48:07.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.943" endtime="20201029 12:48:07.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:07.954" endtime="20201029 12:48:07.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.953" endtime="20201029 12:48:07.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.951" endtime="20201029 12:48:07.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.590" endtime="20201029 12:48:07.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.590" endtime="20201029 12:48:07.975"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:07.984" endtime="20201029 12:48:08.004"></status>
</kw>
<msg timestamp="20201029 12:48:08.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:07.983" endtime="20201029 12:48:08.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:08.006" endtime="20201029 12:48:08.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.008" endtime="20201029 12:48:08.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.980" endtime="20201029 12:48:08.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.978" endtime="20201029 12:48:08.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.017" endtime="20201029 12:48:08.305"></status>
</kw>
<msg timestamp="20201029 12:48:08.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02014725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020210958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:08.016" endtime="20201029 12:48:08.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02014725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020210958, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:08.309" endtime="20201029 12:48:08.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.318" endtime="20201029 12:48:08.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.013" endtime="20201029 12:48:08.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.011" endtime="20201029 12:48:08.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:08.325" level="INFO">${RESULT} = [{'diff': 6.37080000000026e-05}, {'diff': 6.405599999999984e-05}, {'diff': 6.369399999999956e-05}, {'diff': 6.32500000000008e-05}, {'diff': 6.400000000000156e-05}, {'diff': 6.319399999999906e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:48:08.321" endtime="20201029 12:48:08.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:08.329" level="INFO">${ACCURACY} = {'diff': [6.37080000000026e-05, 6.405599999999984e-05, 6.369399999999956e-05, 6.32500000000008e-05, 6.400000000000156e-05, 6.319399999999906e-05, 6.399999999999809e-05, 6.39439999999998e-05, 6.3305999...</msg>
<status status="PASS" starttime="20201029 12:48:08.326" endtime="20201029 12:48:08.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.334" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 12:48:08.332" endtime="20201029 12:48:08.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.336" level="INFO">VALUE: [6.37080000000026e-05, 6.405599999999984e-05, 6.369399999999956e-05, 6.32500000000008e-05, 6.400000000000156e-05, 6.319399999999906e-05, 6.399999999999809e-05, 6.39439999999998e-05, 6.330599999999909e-05, 6.384800000000176e-05, 6.319399999999906e-05, 6.337499999999746e-05, 6.333299999999875e-05, 6.35699999999989e-05, 6.405599999999984e-05, 6.313900000000025e-05, 6.33890000000005e-05, 6.387499999999796e-05, 6.377800000000045e-05, 6.338800000000103e-05, 6.323599999999777e-05, 6.404200000000027e-05, 6.333299999999875e-05, 6.381899999999968e-05, 6.311099999999764e-05, 6.312500000000068e-05, 6.365300000000032e-05, 6.369399999999956e-05, 6.367999999999999e-05, 6.317999999999949e-05, 6.336099999999789e-05, 6.33890000000005e-05, 6.373599999999827e-05, 6.376400000000088e-05, 6.337500000000093e-05, 6.35280000000002e-05, 6.32500000000008e-05, 6.401400000000113e-05, 6.324999999999734e-05, 6.3582999999999e-05, 6.39439999999998e-05, 6.35690000000029e-05, 6.405500000000036e-05, 6.334699999999832e-05, 6.342999999999974e-05, 6.386099999999839e-05, 6.370799999999913e-05, 6.400000000000156e-05, 6.369400000000303e-05, 6.383299999999925e-05]</msg>
<status status="PASS" starttime="20201029 12:48:08.335" endtime="20201029 12:48:08.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.330" endtime="20201029 12:48:08.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:08.341" endtime="20201029 12:48:08.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.340" endtime="20201029 12:48:08.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.338" endtime="20201029 12:48:08.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.976" endtime="20201029 12:48:08.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:07.976" endtime="20201029 12:48:08.362"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.371" endtime="20201029 12:48:08.390"></status>
</kw>
<msg timestamp="20201029 12:48:08.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:08.369" endtime="20201029 12:48:08.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:08.392" endtime="20201029 12:48:08.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.394" endtime="20201029 12:48:08.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.367" endtime="20201029 12:48:08.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.365" endtime="20201029 12:48:08.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.404" endtime="20201029 12:48:08.689"></status>
</kw>
<msg timestamp="20201029 12:48:08.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021113347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021178125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:08.402" endtime="20201029 12:48:08.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021113347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021178125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:08.693" endtime="20201029 12:48:08.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.701" endtime="20201029 12:48:08.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.399" endtime="20201029 12:48:08.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.398" endtime="20201029 12:48:08.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:08.708" level="INFO">${RESULT} = [{'diff': 6.477799999999798e-05}, {'diff': 6.413899999999778e-05}, {'diff': 6.42219999999992e-05}, {'diff': 6.431999999999966e-05}, {'diff': 6.480600000000059e-05}, {'diff': 6.465300000000132e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:08.705" endtime="20201029 12:48:08.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:08.712" level="INFO">${ACCURACY} = {'diff': [6.477799999999798e-05, 6.413899999999778e-05, 6.42219999999992e-05, 6.431999999999966e-05, 6.480600000000059e-05, 6.465300000000132e-05, 6.411100000000211e-05, 6.413899999999778e-05, 6.42630...</msg>
<status status="PASS" starttime="20201029 12:48:08.709" endtime="20201029 12:48:08.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.717" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 12:48:08.716" endtime="20201029 12:48:08.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.720" level="INFO">VALUE: [6.477799999999798e-05, 6.413899999999778e-05, 6.42219999999992e-05, 6.431999999999966e-05, 6.480600000000059e-05, 6.465300000000132e-05, 6.411100000000211e-05, 6.413899999999778e-05, 6.42630000000019e-05, 6.487499999999896e-05, 6.42500000000018e-05, 6.420799999999963e-05, 6.413899999999778e-05, 6.466600000000142e-05, 6.470800000000013e-05, 6.434699999999932e-05, 6.44440000000003e-05, 6.43890000000015e-05, 6.454200000000077e-05, 6.490300000000157e-05, 6.418099999999996e-05, 6.480600000000059e-05, 6.494500000000028e-05, 6.505600000000084e-05, 6.494500000000028e-05, 6.451400000000163e-05, 6.418100000000343e-05, 6.427700000000147e-05, 6.500000000000256e-05, 6.420799999999963e-05, 6.441600000000117e-05, 6.420799999999963e-05, 6.495800000000038e-05, 6.456900000000043e-05, 6.476400000000188e-05, 6.495800000000038e-05, 6.463899999999828e-05, 6.454200000000077e-05, 6.459799999999905e-05, 6.445799999999988e-05, 6.431999999999966e-05, 6.494500000000028e-05, 6.483399999999973e-05, 6.467999999999752e-05, 6.458400000000294e-05, 6.437499999999846e-05, 6.430600000000009e-05, 6.483300000000025e-05, 6.468100000000046e-05, 6.413800000000178e-05]</msg>
<status status="PASS" starttime="20201029 12:48:08.718" endtime="20201029 12:48:08.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.713" endtime="20201029 12:48:08.722"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:08.726" endtime="20201029 12:48:08.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.724" endtime="20201029 12:48:08.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.723" endtime="20201029 12:48:08.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.363" endtime="20201029 12:48:08.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.362" endtime="20201029 12:48:08.746"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.756" endtime="20201029 12:48:08.774"></status>
</kw>
<msg timestamp="20201029 12:48:08.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:08.754" endtime="20201029 12:48:08.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:08.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:08.776" endtime="20201029 12:48:08.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.778" endtime="20201029 12:48:08.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.751" endtime="20201029 12:48:08.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.749" endtime="20201029 12:48:08.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:08.788" endtime="20201029 12:48:09.074"></status>
</kw>
<msg timestamp="20201029 12:48:09.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020354556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020420611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:08.786" endtime="20201029 12:48:09.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020354556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020420611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:09.079" endtime="20201029 12:48:09.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.087" endtime="20201029 12:48:09.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.783" endtime="20201029 12:48:09.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.782" endtime="20201029 12:48:09.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:09.094" level="INFO">${RESULT} = [{'diff': 6.605500000000236e-05}, {'diff': 6.524999999999934e-05}, {'diff': 6.562499999999971e-05}, {'diff': 6.548600000000002e-05}, {'diff': 6.538899999999903e-05}, {'diff': 6.593100000000171e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:09.090" endtime="20201029 12:48:09.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:09.099" level="INFO">${ACCURACY} = {'diff': [6.605500000000236e-05, 6.524999999999934e-05, 6.562499999999971e-05, 6.548600000000002e-05, 6.538899999999903e-05, 6.593100000000171e-05, 6.556900000000143e-05, 6.586100000000039e-05, 6.5749...</msg>
<status status="PASS" starttime="20201029 12:48:09.095" endtime="20201029 12:48:09.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.103" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 12:48:09.102" endtime="20201029 12:48:09.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.106" level="INFO">VALUE: [6.605500000000236e-05, 6.524999999999934e-05, 6.562499999999971e-05, 6.548600000000002e-05, 6.538899999999903e-05, 6.593100000000171e-05, 6.556900000000143e-05, 6.586100000000039e-05, 6.574999999999984e-05, 6.574999999999984e-05, 6.536099999999989e-05, 6.577700000000297e-05, 6.580600000000159e-05, 6.54020000000026e-05, 6.547200000000045e-05, 6.595799999999791e-05, 6.601399999999966e-05, 6.551299999999968e-05, 6.545900000000035e-05, 6.536099999999989e-05, 6.601399999999966e-05, 6.517999999999802e-05, 6.547200000000045e-05, 6.538899999999903e-05, 6.516700000000139e-05, 6.549999999999959e-05, 6.548600000000002e-05, 6.519400000000106e-05, 6.57639999999994e-05, 6.568000000000199e-05, 6.554200000000177e-05, 6.543100000000121e-05, 6.544500000000078e-05, 6.588899999999953e-05, 6.581899999999821e-05, 6.549999999999959e-05, 6.5276999999999e-05, 6.595800000000138e-05, 6.53890000000025e-05, 6.542999999999827e-05, 6.52220000000002e-05, 6.562499999999971e-05, 6.537499999999946e-05, 6.52639999999989e-05, 6.568000000000199e-05, 6.583300000000125e-05, 6.583400000000073e-05, 6.601399999999966e-05, 6.583400000000073e-05, 6.515299999999835e-05]</msg>
<status status="PASS" starttime="20201029 12:48:09.105" endtime="20201029 12:48:09.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.100" endtime="20201029 12:48:09.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:09.111" endtime="20201029 12:48:09.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.110" endtime="20201029 12:48:09.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.109" endtime="20201029 12:48:09.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.747" endtime="20201029 12:48:09.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:08.747" endtime="20201029 12:48:09.132"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.141" endtime="20201029 12:48:09.159"></status>
</kw>
<msg timestamp="20201029 12:48:09.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:09.139" endtime="20201029 12:48:09.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:09.161" endtime="20201029 12:48:09.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.164" endtime="20201029 12:48:09.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.137" endtime="20201029 12:48:09.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.135" endtime="20201029 12:48:09.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.173" endtime="20201029 12:48:09.459"></status>
</kw>
<msg timestamp="20201029 12:48:09.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020056972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020123875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:09.171" endtime="20201029 12:48:09.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020056972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020123875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:09.463" endtime="20201029 12:48:09.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.472" endtime="20201029 12:48:09.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.169" endtime="20201029 12:48:09.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.167" endtime="20201029 12:48:09.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:09.479" level="INFO">${RESULT} = [{'diff': 6.69030000000001e-05}, {'diff': 6.687499999999749e-05}, {'diff': 6.641699999999917e-05}, {'diff': 6.661099999999767e-05}, {'diff': 6.650000000000059e-05}, {'diff': 6.695799999999891e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:09.475" endtime="20201029 12:48:09.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:09.483" level="INFO">${ACCURACY} = {'diff': [6.69030000000001e-05, 6.687499999999749e-05, 6.641699999999917e-05, 6.661099999999767e-05, 6.650000000000059e-05, 6.695799999999891e-05, 6.693099999999924e-05, 6.658400000000148e-05, 6.69309...</msg>
<status status="PASS" starttime="20201029 12:48:09.480" endtime="20201029 12:48:09.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.487" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 12:48:09.486" endtime="20201029 12:48:09.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.490" level="INFO">VALUE: [6.69030000000001e-05, 6.687499999999749e-05, 6.641699999999917e-05, 6.661099999999767e-05, 6.650000000000059e-05, 6.695799999999891e-05, 6.693099999999924e-05, 6.658400000000148e-05, 6.693099999999924e-05, 6.709700000000207e-05, 6.679200000000302e-05, 6.644500000000178e-05, 6.627799999999948e-05, 6.665199999999691e-05, 6.637500000000046e-05, 6.695799999999891e-05, 6.60830000000015e-05, 6.688900000000053e-05, 6.680499999999964e-05, 6.701400000000066e-05, 6.650000000000059e-05, 6.638900000000003e-05, 6.643099999999874e-05, 6.638900000000003e-05, 6.618100000000196e-05, 6.655600000000234e-05, 6.701400000000066e-05, 6.682000000000216e-05, 6.694499999999881e-05, 6.691699999999967e-05, 6.669499999999856e-05, 6.666699999999942e-05, 6.6277e-05, 6.642999999999927e-05, 6.686100000000139e-05, 6.677799999999998e-05, 6.69160000000002e-05, 6.662499999999724e-05, 6.67640000000004e-05, 6.631899999999871e-05, 6.662500000000071e-05, 6.687499999999749e-05, 6.620899999999763e-05, 6.69030000000001e-05, 6.668099999999899e-05, 6.65280000000032e-05, 6.632000000000166e-05, 6.693099999999924e-05, 6.687499999999749e-05, 6.613800000000031e-05]</msg>
<status status="PASS" starttime="20201029 12:48:09.489" endtime="20201029 12:48:09.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.484" endtime="20201029 12:48:09.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:09.495" endtime="20201029 12:48:09.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.493" endtime="20201029 12:48:09.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.492" endtime="20201029 12:48:09.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.133" endtime="20201029 12:48:09.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.132" endtime="20201029 12:48:09.516"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.525" endtime="20201029 12:48:09.545"></status>
</kw>
<msg timestamp="20201029 12:48:09.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:09.523" endtime="20201029 12:48:09.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:09.546" endtime="20201029 12:48:09.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.549" endtime="20201029 12:48:09.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.521" endtime="20201029 12:48:09.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.518" endtime="20201029 12:48:09.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.558" endtime="20201029 12:48:09.843"></status>
</kw>
<msg timestamp="20201029 12:48:09.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021094611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021162236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:09.557" endtime="20201029 12:48:09.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021094611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021162236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:09.847" endtime="20201029 12:48:09.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.856" endtime="20201029 12:48:09.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.554" endtime="20201029 12:48:09.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.552" endtime="20201029 12:48:09.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:09.863" level="INFO">${RESULT} = [{'diff': 6.762500000000171e-05}, {'diff': 6.718000000000002e-05}, {'diff': 6.802799999999776e-05}, {'diff': 6.712499999999774e-05}, {'diff': 6.783299999999978e-05}, {'diff': 6.793100000000024e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:09.859" endtime="20201029 12:48:09.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:09.867" level="INFO">${ACCURACY} = {'diff': [6.762500000000171e-05, 6.718000000000002e-05, 6.802799999999776e-05, 6.712499999999774e-05, 6.783299999999978e-05, 6.793100000000024e-05, 6.737499999999799e-05, 6.781999999999969e-05, 6.7528...</msg>
<status status="PASS" starttime="20201029 12:48:09.864" endtime="20201029 12:48:09.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.872" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 12:48:09.871" endtime="20201029 12:48:09.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.874" level="INFO">VALUE: [6.762500000000171e-05, 6.718000000000002e-05, 6.802799999999776e-05, 6.712499999999774e-05, 6.783299999999978e-05, 6.793100000000024e-05, 6.737499999999799e-05, 6.781999999999969e-05, 6.752800000000073e-05, 6.731999999999919e-05, 6.770899999999913e-05, 6.805600000000037e-05, 6.737500000000146e-05, 6.715200000000088e-05, 6.781899999999674e-05, 6.712499999999774e-05, 6.788899999999806e-05, 6.723600000000177e-05, 6.781900000000021e-05, 6.724999999999787e-05, 6.788900000000153e-05, 6.786099999999892e-05, 6.719399999999959e-05, 6.716699999999992e-05, 6.776399999999794e-05, 6.737500000000146e-05, 6.781999999999969e-05, 6.744499999999931e-05, 6.768099999999999e-05, 6.797299999999895e-05, 6.713899999999731e-05, 6.794400000000034e-05, 6.737500000000146e-05, 6.725000000000134e-05, 6.801399999999819e-05, 6.77220000000027e-05, 6.737499999999799e-05, 6.745799999999941e-05, 6.801399999999819e-05, 6.72909999999971e-05, 6.713900000000078e-05, 6.737500000000146e-05, 6.733300000000275e-05, 6.72640000000009e-05, 6.766700000000042e-05, 6.758400000000248e-05, 6.744499999999931e-05, 6.795899999999938e-05, 6.802699999999828e-05, 6.72640000000009e-05]</msg>
<status status="PASS" starttime="20201029 12:48:09.873" endtime="20201029 12:48:09.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.868" endtime="20201029 12:48:09.877"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:09.881" endtime="20201029 12:48:09.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.879" endtime="20201029 12:48:09.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.878" endtime="20201029 12:48:09.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.517" endtime="20201029 12:48:09.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.516" endtime="20201029 12:48:09.906"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.916" endtime="20201029 12:48:09.936"></status>
</kw>
<msg timestamp="20201029 12:48:09.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:09.915" endtime="20201029 12:48:09.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:09.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:09.938" endtime="20201029 12:48:09.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.940" endtime="20201029 12:48:09.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.912" endtime="20201029 12:48:09.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.910" endtime="20201029 12:48:09.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:09.950" endtime="20201029 12:48:10.236"></status>
</kw>
<msg timestamp="20201029 12:48:10.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0238425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023910986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:09.948" endtime="20201029 12:48:10.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0238425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023910986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:10.240" endtime="20201029 12:48:10.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.248" endtime="20201029 12:48:10.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.945" endtime="20201029 12:48:10.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.944" endtime="20201029 12:48:10.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:10.255" level="INFO">${RESULT} = [{'diff': 6.848599999999955e-05}, {'diff': 6.852800000000173e-05}, {'diff': 6.820899999999963e-05}, {'diff': 6.907000000000094e-05}, {'diff': 6.905600000000137e-05}, {'diff': 6.827799999999801e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:10.252" endtime="20201029 12:48:10.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:10.260" level="INFO">${ACCURACY} = {'diff': [6.848599999999955e-05, 6.852800000000173e-05, 6.820899999999963e-05, 6.907000000000094e-05, 6.905600000000137e-05, 6.827799999999801e-05, 6.824999999999887e-05, 6.850000000000259e-05, 6.8639...</msg>
<status status="PASS" starttime="20201029 12:48:10.256" endtime="20201029 12:48:10.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.265" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 12:48:10.264" endtime="20201029 12:48:10.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.268" level="INFO">VALUE: [6.848599999999955e-05, 6.852800000000173e-05, 6.820899999999963e-05, 6.907000000000094e-05, 6.905600000000137e-05, 6.827799999999801e-05, 6.824999999999887e-05, 6.850000000000259e-05, 6.863900000000228e-05, 6.832000000000019e-05, 6.838800000000256e-05, 6.893000000000177e-05, 6.823600000000277e-05, 6.881899999999774e-05, 6.855500000000139e-05, 6.898600000000005e-05, 6.840299999999813e-05, 6.905499999999842e-05, 6.897200000000048e-05, 6.863899999999881e-05, 6.820800000000016e-05, 6.84169999999977e-05, 6.8584e-05, 6.812499999999874e-05, 6.880600000000112e-05, 6.823600000000277e-05, 6.822199999999973e-05, 6.841700000000117e-05, 6.899999999999962e-05, 6.882000000000069e-05, 6.876399999999894e-05, 6.868000000000152e-05, 6.911100000000017e-05, 6.881900000000121e-05, 6.877800000000198e-05, 6.880499999999817e-05, 6.895800000000091e-05, 6.879199999999808e-05, 6.895900000000038e-05, 6.888899999999906e-05, 6.879200000000155e-05, 6.823700000000224e-05, 6.869500000000056e-05, 6.836100000000289e-05, 6.843100000000074e-05, 6.836099999999942e-05, 6.819500000000006e-05, 6.880600000000112e-05, 6.856900000000096e-05, 6.84299999999978e-05]</msg>
<status status="PASS" starttime="20201029 12:48:10.266" endtime="20201029 12:48:10.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.261" endtime="20201029 12:48:10.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:10.273" endtime="20201029 12:48:10.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.271" endtime="20201029 12:48:10.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.270" endtime="20201029 12:48:10.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.908" endtime="20201029 12:48:10.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:09.906" endtime="20201029 12:48:10.293"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.302" endtime="20201029 12:48:10.323"></status>
</kw>
<msg timestamp="20201029 12:48:10.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:10.301" endtime="20201029 12:48:10.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:10.324" endtime="20201029 12:48:10.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.327" endtime="20201029 12:48:10.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.298" endtime="20201029 12:48:10.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.296" endtime="20201029 12:48:10.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.336" endtime="20201029 12:48:10.624"></status>
</kw>
<msg timestamp="20201029 12:48:10.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020119347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020189514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:10.335" endtime="20201029 12:48:10.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020119347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020189514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:10.628" endtime="20201029 12:48:10.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.637" endtime="20201029 12:48:10.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.332" endtime="20201029 12:48:10.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.330" endtime="20201029 12:48:10.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:10.643" level="INFO">${RESULT} = [{'diff': 7.016699999999945e-05}, {'diff': 6.969499999999809e-05}, {'diff': 6.937499999999999e-05}, {'diff': 6.963899999999981e-05}, {'diff': 6.911100000000017e-05}, {'diff': 6.952799999999926e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:10.640" endtime="20201029 12:48:10.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:10.648" level="INFO">${ACCURACY} = {'diff': [7.016699999999945e-05, 6.969499999999809e-05, 6.937499999999999e-05, 6.963899999999981e-05, 6.911100000000017e-05, 6.952799999999926e-05, 6.924999999999987e-05, 6.922199999999726e-05, 6.9152...</msg>
<status status="PASS" starttime="20201029 12:48:10.645" endtime="20201029 12:48:10.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.652" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 12:48:10.651" endtime="20201029 12:48:10.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.655" level="INFO">VALUE: [7.016699999999945e-05, 6.969499999999809e-05, 6.937499999999999e-05, 6.963899999999981e-05, 6.911100000000017e-05, 6.952799999999926e-05, 6.924999999999987e-05, 6.922199999999726e-05, 6.915299999999888e-05, 6.962500000000024e-05, 7.00970000000016e-05, 6.977799999999951e-05, 6.934700000000085e-05, 6.913899999999931e-05, 6.988900000000006e-05, 6.955499999999892e-05, 6.976399999999994e-05, 6.981899999999874e-05, 6.930500000000214e-05, 6.95970000000011e-05, 6.944400000000184e-05, 6.979199999999908e-05, 7.004199999999933e-05, 6.91109999999967e-05, 6.920799999999769e-05, 6.983400000000126e-05, 6.922199999999726e-05, 6.944500000000131e-05, 7.004099999999985e-05, 6.944499999999784e-05, 6.911199999999965e-05, 6.969399999999862e-05, 6.987500000000049e-05, 6.969400000000209e-05, 6.963899999999981e-05, 6.987500000000049e-05, 6.966700000000242e-05, 6.972200000000123e-05, 6.937499999999999e-05, 6.947200000000098e-05, 6.937499999999999e-05, 6.99169999999992e-05, 7.00979999999976e-05, 6.937499999999999e-05, 6.963899999999981e-05, 6.994499999999834e-05, 7.00559999999989e-05, 6.95420000000023e-05, 6.965199999999991e-05, 6.938899999999956e-05]</msg>
<status status="PASS" starttime="20201029 12:48:10.653" endtime="20201029 12:48:10.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.649" endtime="20201029 12:48:10.656"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:10.660" endtime="20201029 12:48:10.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.659" endtime="20201029 12:48:10.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.657" endtime="20201029 12:48:10.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.294" endtime="20201029 12:48:10.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.294" endtime="20201029 12:48:10.681"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.690" endtime="20201029 12:48:10.712"></status>
</kw>
<msg timestamp="20201029 12:48:10.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:10.688" endtime="20201029 12:48:10.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:10.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:10.713" endtime="20201029 12:48:10.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.716" endtime="20201029 12:48:10.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.686" endtime="20201029 12:48:10.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.683" endtime="20201029 12:48:10.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:10.726" endtime="20201029 12:48:11.012"></status>
</kw>
<msg timestamp="20201029 12:48:11.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023215778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023286514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:10.724" endtime="20201029 12:48:11.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023215778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023286514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:11.016" endtime="20201029 12:48:11.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.025" endtime="20201029 12:48:11.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.721" endtime="20201029 12:48:11.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.719" endtime="20201029 12:48:11.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:11.031" level="INFO">${RESULT} = [{'diff': 7.07360000000018e-05}, {'diff': 7.013900000000031e-05}, {'diff': 7.084799999999836e-05}, {'diff': 7.032000000000219e-05}, {'diff': 7.081999999999922e-05}, {'diff': 7.045799999999894e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:11.028" endtime="20201029 12:48:11.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:11.036" level="INFO">${ACCURACY} = {'diff': [7.07360000000018e-05, 7.013900000000031e-05, 7.084799999999836e-05, 7.032000000000219e-05, 7.081999999999922e-05, 7.045799999999894e-05, 7.066600000000048e-05, 7.005499999999942e-05, 7.04580...</msg>
<status status="PASS" starttime="20201029 12:48:11.032" endtime="20201029 12:48:11.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.040" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 12:48:11.039" endtime="20201029 12:48:11.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.043" level="INFO">VALUE: [7.07360000000018e-05, 7.013900000000031e-05, 7.084799999999836e-05, 7.032000000000219e-05, 7.081999999999922e-05, 7.045799999999894e-05, 7.066600000000048e-05, 7.005499999999942e-05, 7.045800000000241e-05, 7.030499999999967e-05, 7.030500000000314e-05, 7.050000000000112e-05, 7.037500000000099e-05, 7.087499999999802e-05, 7.062500000000124e-05, 7.058399999999854e-05, 7.02360000000013e-05, 7.090299999999716e-05, 7.011100000000117e-05, 7.025000000000087e-05, 7.040300000000013e-05, 7.100000000000162e-05, 7.10559999999999e-05, 7.027700000000053e-05, 7.068000000000005e-05, 7.083299999999931e-05, 7.047199999999851e-05, 7.066600000000048e-05, 7.077700000000103e-05, 7.070800000000266e-05, 7.102800000000076e-05, 7.020799999999869e-05, 7.049999999999765e-05, 7.094499999999934e-05, 7.080500000000017e-05, 7.088899999999759e-05, 7.05559999999994e-05, 7.095899999999891e-05, 7.077800000000051e-05, 7.058399999999854e-05, 7.032000000000219e-05, 7.013800000000084e-05, 7.055600000000287e-05, 7.063900000000081e-05, 7.104100000000085e-05, 7.05689999999995e-05, 7.077800000000051e-05, 7.094399999999987e-05, 7.012500000000074e-05, 7.038900000000056e-05]</msg>
<status status="PASS" starttime="20201029 12:48:11.041" endtime="20201029 12:48:11.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.037" endtime="20201029 12:48:11.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:11.049" endtime="20201029 12:48:11.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.047" endtime="20201029 12:48:11.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.046" endtime="20201029 12:48:11.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.682" endtime="20201029 12:48:11.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:10.681" endtime="20201029 12:48:11.069"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.078" endtime="20201029 12:48:11.098"></status>
</kw>
<msg timestamp="20201029 12:48:11.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:11.077" endtime="20201029 12:48:11.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:11.100" endtime="20201029 12:48:11.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.102" endtime="20201029 12:48:11.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.074" endtime="20201029 12:48:11.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.072" endtime="20201029 12:48:11.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.112" endtime="20201029 12:48:11.398"></status>
</kw>
<msg timestamp="20201029 12:48:11.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020098847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:11.110" endtime="20201029 12:48:11.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020098847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020170903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:11.403" endtime="20201029 12:48:11.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.411" endtime="20201029 12:48:11.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.108" endtime="20201029 12:48:11.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.106" endtime="20201029 12:48:11.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:11.418" level="INFO">${RESULT} = [{'diff': 7.20560000000009e-05}, {'diff': 7.12499999999984e-05}, {'diff': 7.177799999999804e-05}, {'diff': 7.145799999999994e-05}, {'diff': 7.116700000000045e-05}, {'diff': 7.193100000000077e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:48:11.415" endtime="20201029 12:48:11.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:11.423" level="INFO">${ACCURACY} = {'diff': [7.20560000000009e-05, 7.12499999999984e-05, 7.177799999999804e-05, 7.145799999999994e-05, 7.116700000000045e-05, 7.193100000000077e-05, 7.201400000000219e-05, 7.194500000000034e-05, 7.156999...</msg>
<status status="PASS" starttime="20201029 12:48:11.419" endtime="20201029 12:48:11.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.428" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 12:48:11.427" endtime="20201029 12:48:11.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.430" level="INFO">VALUE: [7.20560000000009e-05, 7.12499999999984e-05, 7.177799999999804e-05, 7.145799999999994e-05, 7.116700000000045e-05, 7.193100000000077e-05, 7.201400000000219e-05, 7.194500000000034e-05, 7.156999999999997e-05, 7.162499999999877e-05, 7.149999999999865e-05, 7.137499999999852e-05, 7.152800000000126e-05, 7.144499999999984e-05, 7.155499999999745e-05, 7.183299999999684e-05, 7.144400000000037e-05, 7.194500000000034e-05, 7.138899999999809e-05, 7.120799999999969e-05, 7.120799999999969e-05, 7.134699999999938e-05, 7.199999999999915e-05, 7.131899999999677e-05, 7.116700000000045e-05, 7.215200000000241e-05, 7.118100000000002e-05, 7.130500000000067e-05, 7.118000000000055e-05, 7.126400000000144e-05, 7.191600000000173e-05, 7.162499999999877e-05, 7.12629999999985e-05, 7.148599999999908e-05, 7.138900000000156e-05, 7.12499999999984e-05, 7.191600000000173e-05, 7.118000000000055e-05, 7.138900000000156e-05, 7.137500000000199e-05, 7.202799999999829e-05, 7.15690000000005e-05, 7.163900000000181e-05, 7.144499999999984e-05, 7.148600000000255e-05, 7.182000000000022e-05, 7.156999999999997e-05, 7.155500000000092e-05, 7.120799999999969e-05, 7.168099999999705e-05]</msg>
<status status="PASS" starttime="20201029 12:48:11.429" endtime="20201029 12:48:11.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.424" endtime="20201029 12:48:11.432"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:11.436" endtime="20201029 12:48:11.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.434" endtime="20201029 12:48:11.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.433" endtime="20201029 12:48:11.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.070" endtime="20201029 12:48:11.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.070" endtime="20201029 12:48:11.456"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.465" endtime="20201029 12:48:11.485"></status>
</kw>
<msg timestamp="20201029 12:48:11.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:11.464" endtime="20201029 12:48:11.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:11.486" endtime="20201029 12:48:11.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.489" endtime="20201029 12:48:11.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.461" endtime="20201029 12:48:11.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.459" endtime="20201029 12:48:11.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.498" endtime="20201029 12:48:11.786"></status>
</kw>
<msg timestamp="20201029 12:48:11.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020303542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020376278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:11.497" endtime="20201029 12:48:11.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020303542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020376278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:11.790" endtime="20201029 12:48:11.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.798" endtime="20201029 12:48:11.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.494" endtime="20201029 12:48:11.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.492" endtime="20201029 12:48:11.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:11.805" level="INFO">${RESULT} = [{'diff': 7.273600000000033e-05}, {'diff': 7.298600000000058e-05}, {'diff': 7.295900000000091e-05}, {'diff': 7.298600000000058e-05}, {'diff': 7.254099999999888e-05}, {'diff': 7.268100000000152e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:11.802" endtime="20201029 12:48:11.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:11.809" level="INFO">${ACCURACY} = {'diff': [7.273600000000033e-05, 7.298600000000058e-05, 7.295900000000091e-05, 7.298600000000058e-05, 7.254099999999888e-05, 7.268100000000152e-05, 7.213800000000284e-05, 7.287500000000002e-05, 7.2611...</msg>
<status status="PASS" starttime="20201029 12:48:11.806" endtime="20201029 12:48:11.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.814" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 12:48:11.813" endtime="20201029 12:48:11.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.817" level="INFO">VALUE: [7.273600000000033e-05, 7.298600000000058e-05, 7.295900000000091e-05, 7.298600000000058e-05, 7.254099999999888e-05, 7.268100000000152e-05, 7.213800000000284e-05, 7.287500000000002e-05, 7.26110000000002e-05, 7.241599999999876e-05, 7.297300000000048e-05, 7.286099999999698e-05, 7.306899999999852e-05, 7.276399999999947e-05, 7.308300000000156e-05, 7.236099999999995e-05, 7.306899999999852e-05, 7.262499999999977e-05, 7.227799999999854e-05, 7.258400000000054e-05, 7.25560000000014e-05, 7.26110000000002e-05, 7.213899999999884e-05, 7.286099999999698e-05, 7.249999999999965e-05, 7.216699999999798e-05, 7.213799999999937e-05, 7.216700000000145e-05, 7.244400000000137e-05, 7.306899999999852e-05, 7.295800000000144e-05, 7.251399999999922e-05, 7.22499999999994e-05, 7.251399999999922e-05, 7.245800000000094e-05, 7.277799999999904e-05, 7.27499999999999e-05, 7.247200000000051e-05, 7.304200000000233e-05, 7.282000000000122e-05, 7.220900000000016e-05, 7.298600000000058e-05, 7.2763e-05, 7.22499999999994e-05, 7.213899999999884e-05, 7.2069000000001e-05, 7.22499999999994e-05, 7.305499999999895e-05, 7.24300000000018e-05, 7.227799999999854e-05]</msg>
<status status="PASS" starttime="20201029 12:48:11.815" endtime="20201029 12:48:11.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.810" endtime="20201029 12:48:11.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:11.826" endtime="20201029 12:48:11.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.824" endtime="20201029 12:48:11.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.823" endtime="20201029 12:48:11.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.457" endtime="20201029 12:48:11.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.457" endtime="20201029 12:48:11.847"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.856" endtime="20201029 12:48:11.876"></status>
</kw>
<msg timestamp="20201029 12:48:11.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:11.854" endtime="20201029 12:48:11.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:11.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:11.878" endtime="20201029 12:48:11.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.881" endtime="20201029 12:48:11.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.851" endtime="20201029 12:48:11.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.849" endtime="20201029 12:48:11.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:11.890" endtime="20201029 12:48:12.176"></status>
</kw>
<msg timestamp="20201029 12:48:12.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021034542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0211085, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:11.888" endtime="20201029 12:48:12.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021034542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0211085, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:12.181" endtime="20201029 12:48:12.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.189" endtime="20201029 12:48:12.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.886" endtime="20201029 12:48:12.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.884" endtime="20201029 12:48:12.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:12.196" level="INFO">${RESULT} = [{'diff': 7.395799999999897e-05}, {'diff': 7.309799999999714e-05}, {'diff': 7.345800000000194e-05}, {'diff': 7.345800000000194e-05}, {'diff': 7.381899999999927e-05}, {'diff': 7.326399999999997e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:12.192" endtime="20201029 12:48:12.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:12.200" level="INFO">${ACCURACY} = {'diff': [7.395799999999897e-05, 7.309799999999714e-05, 7.345800000000194e-05, 7.345800000000194e-05, 7.381899999999927e-05, 7.326399999999997e-05, 7.381899999999927e-05, 7.369500000000209e-05, 7.3402...</msg>
<status status="PASS" starttime="20201029 12:48:12.197" endtime="20201029 12:48:12.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.205" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 12:48:12.204" endtime="20201029 12:48:12.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.207" level="INFO">VALUE: [7.395799999999897e-05, 7.309799999999714e-05, 7.345800000000194e-05, 7.345800000000194e-05, 7.381899999999927e-05, 7.326399999999997e-05, 7.381899999999927e-05, 7.369500000000209e-05, 7.340299999999966e-05, 7.388900000000059e-05, 7.31110000000007e-05, 7.400000000000115e-05, 7.361099999999773e-05, 7.408300000000256e-05, 7.320900000000116e-05, 7.313899999999984e-05, 7.386100000000145e-05, 7.40829999999991e-05, 7.377700000000056e-05, 7.402800000000029e-05, 7.384700000000188e-05, 7.366700000000295e-05, 7.34439999999989e-05, 7.312500000000027e-05, 7.383300000000231e-05, 7.35560000000024e-05, 7.406899999999952e-05, 7.329199999999911e-05, 7.358399999999807e-05, 7.377800000000004e-05, 7.401400000000072e-05, 7.379200000000308e-05, 7.340299999999966e-05, 7.369499999999862e-05, 7.349999999999718e-05, 7.345800000000194e-05, 7.355499999999945e-05, 7.401400000000072e-05, 7.380500000000317e-05, 7.34439999999989e-05, 7.405499999999995e-05, 7.409700000000213e-05, 7.366699999999948e-05, 7.337500000000052e-05, 7.398699999999758e-05, 7.337500000000052e-05, 7.401400000000072e-05, 7.347300000000098e-05, 7.404199999999986e-05, 7.368099999999905e-05]</msg>
<status status="PASS" starttime="20201029 12:48:12.206" endtime="20201029 12:48:12.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.201" endtime="20201029 12:48:12.209"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:12.213" endtime="20201029 12:48:12.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.212" endtime="20201029 12:48:12.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.210" endtime="20201029 12:48:12.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.848" endtime="20201029 12:48:12.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:11.847" endtime="20201029 12:48:12.234"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.243" endtime="20201029 12:48:12.263"></status>
</kw>
<msg timestamp="20201029 12:48:12.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:12.241" endtime="20201029 12:48:12.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:12.265" endtime="20201029 12:48:12.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.267" endtime="20201029 12:48:12.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.239" endtime="20201029 12:48:12.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.237" endtime="20201029 12:48:12.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.276" endtime="20201029 12:48:12.562"></status>
</kw>
<msg timestamp="20201029 12:48:12.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020067125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020141639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:12.275" endtime="20201029 12:48:12.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020067125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020141639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:12.566" endtime="20201029 12:48:12.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.575" endtime="20201029 12:48:12.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.272" endtime="20201029 12:48:12.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.270" endtime="20201029 12:48:12.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:12.581" level="INFO">${RESULT} = [{'diff': 7.451399999999775e-05}, {'diff': 7.469400000000015e-05}, {'diff': 7.477799999999757e-05}, {'diff': 7.432000000000272e-05}, {'diff': 7.49310000000003e-05}, {'diff': 7.437499999999805e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:12.578" endtime="20201029 12:48:12.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:12.587" level="INFO">${ACCURACY} = {'diff': [7.451399999999775e-05, 7.469400000000015e-05, 7.477799999999757e-05, 7.432000000000272e-05, 7.49310000000003e-05, 7.437499999999805e-05, 7.44309999999998e-05, 7.462500000000177e-05, 7.466700...</msg>
<status status="PASS" starttime="20201029 12:48:12.582" endtime="20201029 12:48:12.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.591" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 12:48:12.590" endtime="20201029 12:48:12.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.594" level="INFO">VALUE: [7.451399999999775e-05, 7.469400000000015e-05, 7.477799999999757e-05, 7.432000000000272e-05, 7.49310000000003e-05, 7.437499999999805e-05, 7.44309999999998e-05, 7.462500000000177e-05, 7.466700000000048e-05, 7.411099999999823e-05, 7.423600000000183e-05, 7.506899999999705e-05, 7.50830000000001e-05, 7.461099999999873e-05, 7.501400000000172e-05, 7.443000000000033e-05, 7.4763999999998e-05, 7.419399999999965e-05, 7.494499999999987e-05, 7.480600000000018e-05, 7.440300000000066e-05, 7.495899999999944e-05, 7.447199999999904e-05, 7.507e-05, 7.508399999999957e-05, 7.488899999999812e-05, 7.44309999999998e-05, 7.438900000000109e-05, 7.48050000000007e-05, 7.483299999999984e-05, 7.499999999999868e-05, 7.465300000000091e-05, 7.500000000000215e-05, 7.491700000000073e-05, 7.411099999999823e-05, 7.477799999999757e-05, 7.434699999999891e-05, 7.508399999999957e-05, 7.444499999999937e-05, 7.424999999999793e-05, 7.499999999999868e-05, 7.445899999999894e-05, 7.441600000000076e-05, 7.481999999999975e-05, 7.484699999999941e-05, 7.476400000000147e-05, 7.506900000000052e-05, 7.486100000000245e-05, 7.470799999999972e-05, 7.443000000000033e-05]</msg>
<status status="PASS" starttime="20201029 12:48:12.592" endtime="20201029 12:48:12.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.588" endtime="20201029 12:48:12.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:12.599" endtime="20201029 12:48:12.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.598" endtime="20201029 12:48:12.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.596" endtime="20201029 12:48:12.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.235" endtime="20201029 12:48:12.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.234" endtime="20201029 12:48:12.620"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.629" endtime="20201029 12:48:12.648"></status>
</kw>
<msg timestamp="20201029 12:48:12.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:12.627" endtime="20201029 12:48:12.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:12.650" endtime="20201029 12:48:12.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.652" endtime="20201029 12:48:12.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.624" endtime="20201029 12:48:12.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.622" endtime="20201029 12:48:12.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.662" endtime="20201029 12:48:12.948"></status>
</kw>
<msg timestamp="20201029 12:48:12.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020141014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020216875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:12.660" endtime="20201029 12:48:12.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020141014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020216875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:12.953" endtime="20201029 12:48:12.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.962" endtime="20201029 12:48:12.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.657" endtime="20201029 12:48:12.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.656" endtime="20201029 12:48:12.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:12.968" level="INFO">${RESULT} = [{'diff': 7.586099999999998e-05}, {'diff': 7.580600000000118e-05}, {'diff': 7.574999999999943e-05}, {'diff': 7.526400000000197e-05}, {'diff': 7.55700000000005e-05}, {'diff': 7.565299999999844e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:12.965" endtime="20201029 12:48:12.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:12.973" level="INFO">${ACCURACY} = {'diff': [7.586099999999998e-05, 7.580600000000118e-05, 7.574999999999943e-05, 7.526400000000197e-05, 7.55700000000005e-05, 7.565299999999844e-05, 7.570800000000072e-05, 7.520899999999969e-05, 7.58620...</msg>
<status status="PASS" starttime="20201029 12:48:12.969" endtime="20201029 12:48:12.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.977" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 12:48:12.976" endtime="20201029 12:48:12.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.980" level="INFO">VALUE: [7.586099999999998e-05, 7.580600000000118e-05, 7.574999999999943e-05, 7.526400000000197e-05, 7.55700000000005e-05, 7.565299999999844e-05, 7.570800000000072e-05, 7.520899999999969e-05, 7.586200000000293e-05, 7.599999999999968e-05, 7.60830000000011e-05, 7.590199999999922e-05, 7.53050000000012e-05, 7.606900000000152e-05, 7.556899999999755e-05, 7.574999999999943e-05, 7.599999999999968e-05, 7.605500000000195e-05, 7.519499999999665e-05, 7.554199999999789e-05, 7.537499999999905e-05, 7.568099999999758e-05, 7.586099999999998e-05, 7.586099999999998e-05, 7.5763999999999e-05, 7.609700000000066e-05, 7.56249999999993e-05, 7.60830000000011e-05, 7.565299999999844e-05, 7.563899999999887e-05, 7.594399999999793e-05, 7.531900000000077e-05, 7.569399999999768e-05, 7.519400000000065e-05, 7.558299999999712e-05, 7.556900000000102e-05, 7.538899999999862e-05, 7.515300000000141e-05, 7.606999999999753e-05, 7.59029999999987e-05, 7.570900000000019e-05, 7.565299999999844e-05, 7.604200000000186e-05, 7.569399999999768e-05, 7.606900000000152e-05, 7.588799999999965e-05, 7.534699999999991e-05, 7.513900000000184e-05, 7.579099999999866e-05, 7.599999999999968e-05]</msg>
<status status="PASS" starttime="20201029 12:48:12.978" endtime="20201029 12:48:12.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.973" endtime="20201029 12:48:12.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:12.985" endtime="20201029 12:48:13.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.983" endtime="20201029 12:48:13.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.982" endtime="20201029 12:48:13.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.621" endtime="20201029 12:48:13.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.620" endtime="20201029 12:48:13.006"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.015" endtime="20201029 12:48:13.036"></status>
</kw>
<msg timestamp="20201029 12:48:13.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.013" endtime="20201029 12:48:13.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.038" endtime="20201029 12:48:13.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.040" endtime="20201029 12:48:13.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.011" endtime="20201029 12:48:13.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.008" endtime="20201029 12:48:13.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.049" endtime="20201029 12:48:13.336"></status>
</kw>
<msg timestamp="20201029 12:48:13.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021390722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021466944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:13.048" endtime="20201029 12:48:13.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021390722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021466944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:13.340" endtime="20201029 12:48:13.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.349" endtime="20201029 12:48:13.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.045" endtime="20201029 12:48:13.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.043" endtime="20201029 12:48:13.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:13.355" level="INFO">${RESULT} = [{'diff': 7.622200000000079e-05}, {'diff': 7.61249999999998e-05}, {'diff': 7.642999999999886e-05}, {'diff': 7.61249999999998e-05}, {'diff': 7.70830000000021e-05}, {'diff': 7.701400000000025e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:48:13.352" endtime="20201029 12:48:13.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:13.360" level="INFO">${ACCURACY} = {'diff': [7.622200000000079e-05, 7.61249999999998e-05, 7.642999999999886e-05, 7.61249999999998e-05, 7.70830000000021e-05, 7.701400000000025e-05, 7.680499999999923e-05, 7.613899999999937e-05, 7.6222000...</msg>
<status status="PASS" starttime="20201029 12:48:13.356" endtime="20201029 12:48:13.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.364" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 12:48:13.363" endtime="20201029 12:48:13.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.367" level="INFO">VALUE: [7.622200000000079e-05, 7.61249999999998e-05, 7.642999999999886e-05, 7.61249999999998e-05, 7.70830000000021e-05, 7.701400000000025e-05, 7.680499999999923e-05, 7.613899999999937e-05, 7.622200000000079e-05, 7.634800000000039e-05, 7.623600000000036e-05, 7.708299999999862e-05, 7.662499999999683e-05, 7.638899999999962e-05, 7.701400000000025e-05, 7.634800000000039e-05, 7.624999999999993e-05, 7.688900000000012e-05, 7.6764e-05, 7.619399999999818e-05, 7.687500000000055e-05, 7.687500000000055e-05, 7.644399999999843e-05, 7.613899999999937e-05, 7.695800000000197e-05, 7.636100000000048e-05, 7.651399999999975e-05, 7.620799999999775e-05, 7.64029999999992e-05, 7.675000000000043e-05, 7.613900000000284e-05, 7.677799999999957e-05, 7.637500000000005e-05, 7.668099999999858e-05, 7.640199999999972e-05, 7.64029999999992e-05, 7.640199999999972e-05, 7.618100000000155e-05, 7.624999999999993e-05, 7.681900000000227e-05, 7.695800000000197e-05, 7.619400000000165e-05, 7.613899999999937e-05, 7.679199999999914e-05, 7.631900000000177e-05, 7.624999999999993e-05, 7.659799999999717e-05, 7.637500000000005e-05, 7.6764e-05, 7.651399999999975e-05]</msg>
<status status="PASS" starttime="20201029 12:48:13.366" endtime="20201029 12:48:13.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.361" endtime="20201029 12:48:13.369"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:13.373" endtime="20201029 12:48:13.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.371" endtime="20201029 12:48:13.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.370" endtime="20201029 12:48:13.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.007" endtime="20201029 12:48:13.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.006" endtime="20201029 12:48:13.394"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.403" endtime="20201029 12:48:13.423"></status>
</kw>
<msg timestamp="20201029 12:48:13.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.401" endtime="20201029 12:48:13.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.424" endtime="20201029 12:48:13.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.427" endtime="20201029 12:48:13.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.399" endtime="20201029 12:48:13.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.396" endtime="20201029 12:48:13.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.436" endtime="20201029 12:48:13.722"></status>
</kw>
<msg timestamp="20201029 12:48:13.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020180056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020257736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:13.435" endtime="20201029 12:48:13.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020180056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020257736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:13.726" endtime="20201029 12:48:13.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.735" endtime="20201029 12:48:13.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.432" endtime="20201029 12:48:13.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.430" endtime="20201029 12:48:13.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:13.742" level="INFO">${RESULT} = [{'diff': 7.768000000000011e-05}, {'diff': 7.805500000000049e-05}, {'diff': 7.784699999999894e-05}, {'diff': 7.774999999999796e-05}, {'diff': 7.752700000000085e-05}, {'diff': 7.797299999999854e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:13.738" endtime="20201029 12:48:13.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:13.747" level="INFO">${ACCURACY} = {'diff': [7.768000000000011e-05, 7.805500000000049e-05, 7.784699999999894e-05, 7.774999999999796e-05, 7.752700000000085e-05, 7.797299999999854e-05, 7.737500000000105e-05, 7.755599999999946e-05, 7.7514...</msg>
<status status="PASS" starttime="20201029 12:48:13.743" endtime="20201029 12:48:13.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.751" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 12:48:13.750" endtime="20201029 12:48:13.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.754" level="INFO">VALUE: [7.768000000000011e-05, 7.805500000000049e-05, 7.784699999999894e-05, 7.774999999999796e-05, 7.752700000000085e-05, 7.797299999999854e-05, 7.737500000000105e-05, 7.755599999999946e-05, 7.751400000000075e-05, 7.775000000000143e-05, 7.799999999999821e-05, 7.720799999999875e-05, 7.774999999999796e-05, 7.769399999999968e-05, 7.711100000000123e-05, 7.783299999999937e-05, 7.729100000000017e-05, 7.758299999999912e-05, 7.780599999999971e-05, 7.74030000000002e-05, 7.717999999999961e-05, 7.783299999999937e-05, 7.722199999999832e-05, 7.71250000000008e-05, 7.788899999999765e-05, 7.711100000000123e-05, 7.758299999999912e-05, 7.76380000000014e-05, 7.7764000000001e-05, 7.742999999999986e-05, 7.730499999999974e-05, 7.756900000000302e-05, 7.71250000000008e-05, 7.748599999999814e-05, 7.7764000000001e-05, 7.806900000000006e-05, 7.74449999999989e-05, 7.713900000000037e-05, 7.770899999999872e-05, 7.774999999999796e-05, 7.745900000000194e-05, 7.738900000000062e-05, 7.79579999999995e-05, 7.794399999999993e-05, 7.724999999999746e-05, 7.783299999999937e-05, 7.717999999999961e-05, 7.737499999999758e-05, 7.733299999999887e-05, 7.805500000000049e-05]</msg>
<status status="PASS" starttime="20201029 12:48:13.753" endtime="20201029 12:48:13.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.748" endtime="20201029 12:48:13.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:13.759" endtime="20201029 12:48:13.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.758" endtime="20201029 12:48:13.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.756" endtime="20201029 12:48:13.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.395" endtime="20201029 12:48:13.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.394" endtime="20201029 12:48:13.782"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.795" endtime="20201029 12:48:13.816"></status>
</kw>
<msg timestamp="20201029 12:48:13.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.792" endtime="20201029 12:48:13.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:13.817" endtime="20201029 12:48:13.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.820" endtime="20201029 12:48:13.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.789" endtime="20201029 12:48:13.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.785" endtime="20201029 12:48:13.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.829" endtime="20201029 12:48:14.116"></status>
</kw>
<msg timestamp="20201029 12:48:14.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027173792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027252333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:13.828" endtime="20201029 12:48:14.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027173792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027252333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:14.120" endtime="20201029 12:48:14.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.129" endtime="20201029 12:48:14.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.825" endtime="20201029 12:48:14.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.823" endtime="20201029 12:48:14.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:14.136" level="INFO">${RESULT} = [{'diff': 7.854100000000142e-05}, {'diff': 7.870800000000025e-05}, {'diff': 7.898599999999964e-05}, {'diff': 7.855500000000099e-05}, {'diff': 7.833299999999987e-05}, {'diff': 7.851400000000175e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:14.132" endtime="20201029 12:48:14.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:14.140" level="INFO">${ACCURACY} = {'diff': [7.854100000000142e-05, 7.870800000000025e-05, 7.898599999999964e-05, 7.855500000000099e-05, 7.833299999999987e-05, 7.851400000000175e-05, 7.90970000000002e-05, 7.812499999999833e-05, 7.86670...</msg>
<status status="PASS" starttime="20201029 12:48:14.137" endtime="20201029 12:48:14.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.144" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 12:48:14.143" endtime="20201029 12:48:14.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.147" level="INFO">VALUE: [7.854100000000142e-05, 7.870800000000025e-05, 7.898599999999964e-05, 7.855500000000099e-05, 7.833299999999987e-05, 7.851400000000175e-05, 7.90970000000002e-05, 7.812499999999833e-05, 7.866700000000101e-05, 7.820899999999922e-05, 7.893100000000083e-05, 7.85839999999996e-05, 7.898599999999964e-05, 7.888900000000212e-05, 7.900000000000268e-05, 7.824999999999846e-05, 7.836099999999901e-05, 7.851400000000175e-05, 7.851399999999828e-05, 7.824999999999846e-05, 7.887499999999908e-05, 7.906899999999759e-05, 7.841700000000076e-05, 7.831999999999978e-05, 7.852800000000132e-05, 7.81389999999979e-05, 7.897299999999954e-05, 7.829200000000064e-05, 7.830500000000074e-05, 7.84449999999999e-05, 7.859799999999917e-05, 7.869399999999721e-05, 7.858300000000012e-05, 7.888899999999865e-05, 7.820799999999975e-05, 7.838900000000162e-05, 7.837499999999858e-05, 7.836099999999901e-05, 7.84169999999973e-05, 7.82640000000015e-05, 7.887499999999908e-05, 7.84030000000012e-05, 7.861100000000273e-05, 7.899999999999921e-05, 7.86389999999984e-05, 7.879200000000114e-05, 7.82770000000016e-05, 7.844400000000043e-05, 7.86389999999984e-05, 7.823599999999542e-05]</msg>
<status status="PASS" starttime="20201029 12:48:14.146" endtime="20201029 12:48:14.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.141" endtime="20201029 12:48:14.148"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:14.152" endtime="20201029 12:48:14.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.151" endtime="20201029 12:48:14.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.149" endtime="20201029 12:48:14.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.783" endtime="20201029 12:48:14.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.782" endtime="20201029 12:48:14.173"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.182" endtime="20201029 12:48:14.205"></status>
</kw>
<msg timestamp="20201029 12:48:14.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:14.180" endtime="20201029 12:48:14.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:14.206" endtime="20201029 12:48:14.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.209" endtime="20201029 12:48:14.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.178" endtime="20201029 12:48:14.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.175" endtime="20201029 12:48:14.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.218" endtime="20201029 12:48:14.504"></status>
</kw>
<msg timestamp="20201029 12:48:14.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023407681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023487083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:14.217" endtime="20201029 12:48:14.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023407681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023487083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:14.508" endtime="20201029 12:48:14.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.517" endtime="20201029 12:48:14.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.214" endtime="20201029 12:48:14.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.212" endtime="20201029 12:48:14.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:14.524" level="INFO">${RESULT} = [{'diff': 7.940199999999925e-05}, {'diff': 7.936100000000001e-05}, {'diff': 7.93329999999974e-05}, {'diff': 7.992999999999889e-05}, {'diff': 7.981899999999834e-05}, {'diff': 7.956900000000156e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:14.521" endtime="20201029 12:48:14.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:14.528" level="INFO">${ACCURACY} = {'diff': [7.940199999999925e-05, 7.936100000000001e-05, 7.93329999999974e-05, 7.992999999999889e-05, 7.981899999999834e-05, 7.956900000000156e-05, 7.99169999999988e-05, 7.994499999999793e-05, 7.926400...</msg>
<status status="PASS" starttime="20201029 12:48:14.525" endtime="20201029 12:48:14.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.533" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 12:48:14.532" endtime="20201029 12:48:14.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.535" level="INFO">VALUE: [7.940199999999925e-05, 7.936100000000001e-05, 7.93329999999974e-05, 7.992999999999889e-05, 7.981899999999834e-05, 7.956900000000156e-05, 7.99169999999988e-05, 7.994499999999793e-05, 7.92640000000025e-05, 7.932000000000078e-05, 7.993100000000183e-05, 7.974999999999996e-05, 7.912499999999933e-05, 7.968099999999811e-05, 7.974999999999996e-05, 7.913799999999943e-05, 7.920800000000075e-05, 7.994400000000193e-05, 7.918100000000108e-05, 8.001399999999978e-05, 7.994399999999846e-05, 7.91250000000028e-05, 7.938900000000262e-05, 7.926399999999903e-05, 8.000000000000021e-05, 7.937499999999958e-05, 7.938899999999915e-05, 7.933399999999688e-05, 7.941599999999882e-05, 7.949999999999971e-05, 7.96389999999994e-05, 7.962499999999983e-05, 7.952700000000285e-05, 7.941600000000229e-05, 7.924999999999946e-05, 7.940299999999872e-05, 7.911099999999976e-05, 7.972200000000082e-05, 8.000000000000021e-05, 8.002800000000282e-05, 8.011100000000076e-05, 7.934700000000044e-05, 7.956999999999756e-05, 7.981999999999781e-05, 8.007000000000153e-05, 7.957000000000103e-05, 8.009699999999773e-05, 7.987500000000008e-05, 7.990199999999975e-05, 8.000000000000021e-05]</msg>
<status status="PASS" starttime="20201029 12:48:14.534" endtime="20201029 12:48:14.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.529" endtime="20201029 12:48:14.537"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:14.541" endtime="20201029 12:48:14.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.540" endtime="20201029 12:48:14.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.538" endtime="20201029 12:48:14.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.174" endtime="20201029 12:48:14.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.173" endtime="20201029 12:48:14.562"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.571" endtime="20201029 12:48:14.591"></status>
</kw>
<msg timestamp="20201029 12:48:14.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:14.569" endtime="20201029 12:48:14.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:14.593" endtime="20201029 12:48:14.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.595" endtime="20201029 12:48:14.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.567" endtime="20201029 12:48:14.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.564" endtime="20201029 12:48:14.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.604" endtime="20201029 12:48:14.891"></status>
</kw>
<msg timestamp="20201029 12:48:14.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020453292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020533556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:14.603" endtime="20201029 12:48:14.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020453292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020533556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:14.895" endtime="20201029 12:48:14.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.903" endtime="20201029 12:48:14.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.600" endtime="20201029 12:48:14.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.598" endtime="20201029 12:48:14.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:14.910" level="INFO">${RESULT} = [{'diff': 8.026400000000003e-05}, {'diff': 8.044399999999896e-05}, {'diff': 8.067999999999964e-05}, {'diff': 8.041599999999982e-05}, {'diff': 8.062499999999737e-05}, {'diff': 8.063899999999694e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:14.907" endtime="20201029 12:48:14.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:14.915" level="INFO">${ACCURACY} = {'diff': [8.026400000000003e-05, 8.044399999999896e-05, 8.067999999999964e-05, 8.041599999999982e-05, 8.062499999999737e-05, 8.063899999999694e-05, 8.100000000000121e-05, 8.044399999999896e-05, 8.0818...</msg>
<status status="PASS" starttime="20201029 12:48:14.911" endtime="20201029 12:48:14.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.920" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 12:48:14.919" endtime="20201029 12:48:14.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.923" level="INFO">VALUE: [8.026400000000003e-05, 8.044399999999896e-05, 8.067999999999964e-05, 8.041599999999982e-05, 8.062499999999737e-05, 8.063899999999694e-05, 8.100000000000121e-05, 8.044399999999896e-05, 8.081899999999934e-05, 8.019500000000165e-05, 8.081999999999881e-05, 8.023600000000089e-05, 8.07780000000001e-05, 8.04450000000019e-05, 8.040299999999972e-05, 8.056999999999856e-05, 8.020799999999828e-05, 8.049999999999724e-05, 8.07910000000002e-05, 8.073600000000139e-05, 8.026400000000003e-05, 8.108299999999916e-05, 8.067999999999964e-05, 8.03329999999984e-05, 8.031899999999884e-05, 8.09719999999986e-05, 8.054199999999942e-05, 8.01389999999999e-05, 8.106999999999906e-05, 8.073599999999792e-05, 8.069500000000215e-05, 8.04450000000019e-05, 8.040199999999678e-05, 8.059800000000117e-05, 8.104100000000045e-05, 8.105500000000002e-05, 8.022199999999785e-05, 8.030499999999927e-05, 8.024999999999699e-05, 8.026300000000056e-05, 8.076300000000106e-05, 8.100000000000121e-05, 8.052800000000332e-05, 8.01389999999999e-05, 8.054199999999942e-05, 8.018099999999861e-05, 8.040299999999972e-05, 8.068100000000258e-05, 8.079199999999967e-05, 8.062500000000083e-05]</msg>
<status status="PASS" starttime="20201029 12:48:14.921" endtime="20201029 12:48:14.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.916" endtime="20201029 12:48:14.924"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:14.928" endtime="20201029 12:48:14.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.926" endtime="20201029 12:48:14.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.925" endtime="20201029 12:48:14.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.563" endtime="20201029 12:48:14.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.562" endtime="20201029 12:48:14.949"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.959" endtime="20201029 12:48:14.979"></status>
</kw>
<msg timestamp="20201029 12:48:14.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:14.957" endtime="20201029 12:48:14.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:14.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:14.980" endtime="20201029 12:48:14.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.983" endtime="20201029 12:48:14.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.954" endtime="20201029 12:48:14.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.952" endtime="20201029 12:48:14.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:14.992" endtime="20201029 12:48:15.279"></status>
</kw>
<msg timestamp="20201029 12:48:15.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:14.991" endtime="20201029 12:48:15.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:15.283" endtime="20201029 12:48:15.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.292" endtime="20201029 12:48:15.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.988" endtime="20201029 12:48:15.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.986" endtime="20201029 12:48:15.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:15.299" level="INFO">${RESULT} = [{'diff': 8.1458999999999e-05}, {'diff': 8.118099999999961e-05}, {'diff': 8.190199999999828e-05}, {'diff': 8.125000000000146e-05}, {'diff': 8.138900000000115e-05}, {'diff': 8.118099999999961e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:48:15.295" endtime="20201029 12:48:15.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:15.303" level="INFO">${ACCURACY} = {'diff': [8.1458999999999e-05, 8.118099999999961e-05, 8.190199999999828e-05, 8.125000000000146e-05, 8.138900000000115e-05, 8.118099999999961e-05, 8.170799999999978e-05, 8.11390000000009e-05, 8.1458000...</msg>
<status status="PASS" starttime="20201029 12:48:15.300" endtime="20201029 12:48:15.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.307" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 12:48:15.306" endtime="20201029 12:48:15.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.310" level="INFO">VALUE: [8.1458999999999e-05, 8.118099999999961e-05, 8.190199999999828e-05, 8.125000000000146e-05, 8.138900000000115e-05, 8.118099999999961e-05, 8.170799999999978e-05, 8.11390000000009e-05, 8.1458000000003e-05, 8.186100000000252e-05, 8.145799999999953e-05, 8.137500000000158e-05, 8.201399999999831e-05, 8.205600000000049e-05, 8.180600000000024e-05, 8.136100000000202e-05, 8.140200000000125e-05, 8.17369999999984e-05, 8.199999999999874e-05, 8.18329999999999e-05, 8.115300000000047e-05, 8.16390000000014e-05, 8.198599999999917e-05, 8.12780000000006e-05, 8.190299999999776e-05, 8.118000000000014e-05, 8.181999999999981e-05, 8.133399999999888e-05, 8.169499999999968e-05, 8.179200000000067e-05, 8.129200000000017e-05, 8.163899999999794e-05, 8.188899999999819e-05, 8.133400000000235e-05, 8.140200000000125e-05, 8.170799999999978e-05, 8.138900000000115e-05, 8.129200000000017e-05, 8.138900000000115e-05, 8.205500000000102e-05, 8.13329999999994e-05, 8.130500000000027e-05, 8.169400000000021e-05, 8.12780000000006e-05, 8.129200000000017e-05, 8.14450000000029e-05, 8.141600000000082e-05, 8.127700000000113e-05, 8.14719999999991e-05, 8.144499999999943e-05]</msg>
<status status="PASS" starttime="20201029 12:48:15.309" endtime="20201029 12:48:15.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.304" endtime="20201029 12:48:15.311"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:15.315" endtime="20201029 12:48:15.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.313" endtime="20201029 12:48:15.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.312" endtime="20201029 12:48:15.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.950" endtime="20201029 12:48:15.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:14.949" endtime="20201029 12:48:15.336"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.345" endtime="20201029 12:48:15.365"></status>
</kw>
<msg timestamp="20201029 12:48:15.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:15.343" endtime="20201029 12:48:15.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:15.367" endtime="20201029 12:48:15.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.370" endtime="20201029 12:48:15.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.341" endtime="20201029 12:48:15.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.338" endtime="20201029 12:48:15.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.379" endtime="20201029 12:48:15.664"></status>
</kw>
<msg timestamp="20201029 12:48:15.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021025028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021107639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:15.377" endtime="20201029 12:48:15.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021025028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021107639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:15.669" endtime="20201029 12:48:15.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.677" endtime="20201029 12:48:15.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.375" endtime="20201029 12:48:15.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.373" endtime="20201029 12:48:15.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:15.684" level="INFO">${RESULT} = [{'diff': 8.26109999999998e-05}, {'diff': 8.227700000000213e-05}, {'diff': 8.233399999999988e-05}, {'diff': 8.262500000000284e-05}, {'diff': 8.251400000000228e-05}, {'diff': 8.21390000000019e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:48:15.681" endtime="20201029 12:48:15.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:15.688" level="INFO">${ACCURACY} = {'diff': [8.26109999999998e-05, 8.227700000000213e-05, 8.233399999999988e-05, 8.262500000000284e-05, 8.251400000000228e-05, 8.21390000000019e-05, 8.298600000000017e-05, 8.232000000000031e-05, 8.294400...</msg>
<status status="PASS" starttime="20201029 12:48:15.685" endtime="20201029 12:48:15.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.693" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 12:48:15.692" endtime="20201029 12:48:15.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.695" level="INFO">VALUE: [8.26109999999998e-05, 8.227700000000213e-05, 8.233399999999988e-05, 8.262500000000284e-05, 8.251400000000228e-05, 8.21390000000019e-05, 8.298600000000017e-05, 8.232000000000031e-05, 8.294400000000146e-05, 8.269400000000121e-05, 8.2152999999998e-05, 8.279099999999873e-05, 8.220800000000028e-05, 8.234699999999998e-05, 8.266699999999808e-05, 8.226300000000256e-05, 8.226400000000203e-05, 8.227699999999866e-05, 8.262499999999937e-05, 8.288900000000265e-05, 8.222299999999932e-05, 8.209699999999973e-05, 8.29170000000018e-05, 8.22910000000017e-05, 8.212499999999887e-05, 8.223599999999942e-05, 8.287499999999962e-05, 8.224999999999899e-05, 8.254200000000142e-05, 8.270799999999731e-05, 8.281900000000134e-05, 8.27780000000021e-05, 8.252799999999838e-05, 8.268100000000111e-05, 8.219500000000018e-05, 8.29309999999979e-05, 8.294500000000093e-05, 8.21390000000019e-05, 8.274999999999949e-05, 8.29720000000006e-05, 8.301399999999931e-05, 8.306899999999812e-05, 8.220800000000028e-05, 8.234699999999998e-05, 8.255499999999805e-05, 8.305599999999802e-05, 8.213899999999844e-05, 8.293100000000136e-05, 8.21109999999993e-05, 8.288899999999919e-05]</msg>
<status status="PASS" starttime="20201029 12:48:15.694" endtime="20201029 12:48:15.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.689" endtime="20201029 12:48:15.698"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:15.701" endtime="20201029 12:48:15.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.700" endtime="20201029 12:48:15.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.699" endtime="20201029 12:48:15.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.337" endtime="20201029 12:48:15.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.336" endtime="20201029 12:48:15.722"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.731" endtime="20201029 12:48:15.750"></status>
</kw>
<msg timestamp="20201029 12:48:15.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:15.729" endtime="20201029 12:48:15.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:15.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:15.752" endtime="20201029 12:48:15.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.755" endtime="20201029 12:48:15.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.727" endtime="20201029 12:48:15.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.725" endtime="20201029 12:48:15.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:15.764" endtime="20201029 12:48:16.050"></status>
</kw>
<msg timestamp="20201029 12:48:16.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020092514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020175917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:15.762" endtime="20201029 12:48:16.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020092514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020175917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:16.054" endtime="20201029 12:48:16.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.063" endtime="20201029 12:48:16.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.760" endtime="20201029 12:48:16.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.758" endtime="20201029 12:48:16.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:16.069" level="INFO">${RESULT} = [{'diff': 8.340300000000272e-05}, {'diff': 8.333399999999741e-05}, {'diff': 8.409700000000173e-05}, {'diff': 8.394400000000246e-05}, {'diff': 8.352799999999938e-05}, {'diff': 8.37780000000031e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:16.066" endtime="20201029 12:48:16.070"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:16.075" level="INFO">${ACCURACY} = {'diff': [8.340300000000272e-05, 8.333399999999741e-05, 8.409700000000173e-05, 8.394400000000246e-05, 8.352799999999938e-05, 8.37780000000031e-05, 8.34720000000011e-05, 8.381900000000234e-05, 8.309700...</msg>
<status status="PASS" starttime="20201029 12:48:16.070" endtime="20201029 12:48:16.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.079" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 12:48:16.078" endtime="20201029 12:48:16.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.082" level="INFO">VALUE: [8.340300000000272e-05, 8.333399999999741e-05, 8.409700000000173e-05, 8.394400000000246e-05, 8.352799999999938e-05, 8.37780000000031e-05, 8.34720000000011e-05, 8.381900000000234e-05, 8.309700000000073e-05, 8.375000000000049e-05, 8.376400000000006e-05, 8.370900000000125e-05, 8.318099999999815e-05, 8.411099999999783e-05, 8.407000000000206e-05, 8.32780000000026e-05, 8.356900000000209e-05, 8.312499999999987e-05, 8.326300000000009e-05, 8.363899999999994e-05, 8.401400000000031e-05, 8.345800000000153e-05, 8.405599999999902e-05, 8.319399999999824e-05, 8.367999999999917e-05, 8.336100000000055e-05, 8.319499999999772e-05, 8.326399999999956e-05, 8.318100000000161e-05, 8.363899999999994e-05, 8.394500000000193e-05, 8.344500000000143e-05, 8.39729999999976e-05, 8.38330000000019e-05, 8.405499999999955e-05, 8.401400000000031e-05, 8.342999999999892e-05, 8.387499999999715e-05, 8.409700000000173e-05, 8.400000000000074e-05, 8.394399999999899e-05, 8.405599999999902e-05, 8.324999999999999e-05, 8.36110000000008e-05, 8.376400000000006e-05, 8.318099999999815e-05, 8.315300000000247e-05, 8.369499999999822e-05, 8.330600000000174e-05, 8.363800000000046e-05]</msg>
<status status="PASS" starttime="20201029 12:48:16.080" endtime="20201029 12:48:16.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.076" endtime="20201029 12:48:16.083"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:16.087" endtime="20201029 12:48:16.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.085" endtime="20201029 12:48:16.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.084" endtime="20201029 12:48:16.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.723" endtime="20201029 12:48:16.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:15.722" endtime="20201029 12:48:16.108"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.116" endtime="20201029 12:48:16.137"></status>
</kw>
<msg timestamp="20201029 12:48:16.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:16.115" endtime="20201029 12:48:16.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:16.139" endtime="20201029 12:48:16.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.141" endtime="20201029 12:48:16.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.112" endtime="20201029 12:48:16.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.110" endtime="20201029 12:48:16.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.150" endtime="20201029 12:48:16.438"></status>
</kw>
<msg timestamp="20201029 12:48:16.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020012347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020096875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:16.149" endtime="20201029 12:48:16.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020012347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020096875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:16.442" endtime="20201029 12:48:16.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.450" endtime="20201029 12:48:16.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.146" endtime="20201029 12:48:16.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.144" endtime="20201029 12:48:16.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:16.457" level="INFO">${RESULT} = [{'diff': 8.452800000000038e-05}, {'diff': 8.495799999999956e-05}, {'diff': 8.473599999999845e-05}, {'diff': 8.433400000000188e-05}, {'diff': 8.481999999999934e-05}, {'diff': 8.500000000000174e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:16.454" endtime="20201029 12:48:16.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:16.461" level="INFO">${ACCURACY} = {'diff': [8.452800000000038e-05, 8.495799999999956e-05, 8.473599999999845e-05, 8.433400000000188e-05, 8.481999999999934e-05, 8.500000000000174e-05, 8.46530000000005e-05, 8.459700000000223e-05, 8.49030...</msg>
<status status="PASS" starttime="20201029 12:48:16.458" endtime="20201029 12:48:16.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.466" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 12:48:16.465" endtime="20201029 12:48:16.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.468" level="INFO">VALUE: [8.452800000000038e-05, 8.495799999999956e-05, 8.473599999999845e-05, 8.433400000000188e-05, 8.481999999999934e-05, 8.500000000000174e-05, 8.46530000000005e-05, 8.459700000000223e-05, 8.490300000000076e-05, 8.505500000000055e-05, 8.43049999999998e-05, 8.481899999999987e-05, 8.509699999999926e-05, 8.431899999999937e-05, 8.419400000000271e-05, 8.472200000000235e-05, 8.505600000000002e-05, 8.458300000000266e-05, 8.505600000000002e-05, 8.430599999999927e-05, 8.451400000000081e-05, 8.438900000000069e-05, 8.473599999999845e-05, 8.472199999999888e-05, 8.407000000000206e-05, 8.440199999999731e-05, 8.487499999999815e-05, 8.49859999999987e-05, 8.463900000000094e-05, 8.462500000000137e-05, 8.423599999999795e-05, 8.508299999999969e-05, 8.47920000000002e-05, 8.469499999999922e-05, 8.483400000000238e-05, 8.413900000000044e-05, 8.458399999999866e-05, 8.426400000000056e-05, 8.42370000000009e-05, 8.438800000000121e-05, 8.437499999999765e-05, 8.470799999999931e-05, 8.48050000000003e-05, 8.454100000000048e-05, 8.431900000000284e-05, 8.451400000000081e-05, 8.431899999999937e-05, 8.495799999999956e-05, 8.411099999999783e-05, 8.431999999999884e-05]</msg>
<status status="PASS" starttime="20201029 12:48:16.467" endtime="20201029 12:48:16.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.462" endtime="20201029 12:48:16.470"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:16.474" endtime="20201029 12:48:16.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.472" endtime="20201029 12:48:16.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.471" endtime="20201029 12:48:16.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.109" endtime="20201029 12:48:16.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.108" endtime="20201029 12:48:16.494"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.503" endtime="20201029 12:48:16.525"></status>
</kw>
<msg timestamp="20201029 12:48:16.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:16.502" endtime="20201029 12:48:16.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:16.526" endtime="20201029 12:48:16.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.529" endtime="20201029 12:48:16.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.499" endtime="20201029 12:48:16.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.497" endtime="20201029 12:48:16.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.538" endtime="20201029 12:48:16.824"></status>
</kw>
<msg timestamp="20201029 12:48:16.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021118736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021204569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:16.537" endtime="20201029 12:48:16.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021118736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021204569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:16.828" endtime="20201029 12:48:16.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.837" endtime="20201029 12:48:16.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.534" endtime="20201029 12:48:16.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.532" endtime="20201029 12:48:16.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:16.843" level="INFO">${RESULT} = [{'diff': 8.583300000000044e-05}, {'diff': 8.533299999999994e-05}, {'diff': 8.529100000000123e-05}, {'diff': 8.574999999999902e-05}, {'diff': 8.593000000000142e-05}, {'diff': 8.5847e-05}, {'diff': 8.5...</msg>
<status status="PASS" starttime="20201029 12:48:16.840" endtime="20201029 12:48:16.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:16.848" level="INFO">${ACCURACY} = {'diff': [8.583300000000044e-05, 8.533299999999994e-05, 8.529100000000123e-05, 8.574999999999902e-05, 8.593000000000142e-05, 8.5847e-05, 8.594400000000099e-05, 8.544499999999997e-05, 8.544499999999997...</msg>
<status status="PASS" starttime="20201029 12:48:16.844" endtime="20201029 12:48:16.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.852" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 12:48:16.851" endtime="20201029 12:48:16.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.855" level="INFO">VALUE: [8.583300000000044e-05, 8.533299999999994e-05, 8.529100000000123e-05, 8.574999999999902e-05, 8.593000000000142e-05, 8.5847e-05, 8.594400000000099e-05, 8.544499999999997e-05, 8.544499999999997e-05, 8.557000000000009e-05, 8.594500000000047e-05, 8.545899999999954e-05, 8.568100000000065e-05, 8.583399999999991e-05, 8.550000000000224e-05, 8.552699999999844e-05, 8.56799999999977e-05, 8.51660000000011e-05, 8.526400000000156e-05, 8.605500000000155e-05, 8.545800000000006e-05, 8.549999999999877e-05, 8.537499999999865e-05, 8.605600000000102e-05, 8.550000000000224e-05, 8.527800000000113e-05, 8.547199999999963e-05, 8.5944999999997e-05, 8.515199999999806e-05, 8.559699999999976e-05, 8.583300000000044e-05, 8.556899999999715e-05, 8.556900000000062e-05, 8.543000000000092e-05, 8.587500000000262e-05, 8.5153000000001e-05, 8.601399999999884e-05, 8.522199999999938e-05, 8.531900000000037e-05, 8.558300000000019e-05, 8.53059999999968e-05, 8.597200000000013e-05, 8.605600000000102e-05, 8.588900000000219e-05, 8.588800000000271e-05, 8.538799999999874e-05, 8.522199999999938e-05, 8.551399999999834e-05, 8.594400000000099e-05, 8.608300000000069e-05]</msg>
<status status="PASS" starttime="20201029 12:48:16.853" endtime="20201029 12:48:16.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.848" endtime="20201029 12:48:16.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:16.866" endtime="20201029 12:48:16.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.864" endtime="20201029 12:48:16.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.863" endtime="20201029 12:48:16.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.495" endtime="20201029 12:48:16.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.495" endtime="20201029 12:48:16.887"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.896" endtime="20201029 12:48:16.916"></status>
</kw>
<msg timestamp="20201029 12:48:16.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:16.894" endtime="20201029 12:48:16.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:16.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:16.918" endtime="20201029 12:48:16.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.920" endtime="20201029 12:48:16.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.891" endtime="20201029 12:48:16.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.889" endtime="20201029 12:48:16.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:16.930" endtime="20201029 12:48:17.216"></status>
</kw>
<msg timestamp="20201029 12:48:17.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020056458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020142861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:16.928" endtime="20201029 12:48:17.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020056458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020142861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:17.220" endtime="20201029 12:48:17.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.229" endtime="20201029 12:48:17.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.926" endtime="20201029 12:48:17.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.924" endtime="20201029 12:48:17.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:17.236" level="INFO">${RESULT} = [{'diff': 8.640300000000226e-05}, {'diff': 8.701399999999984e-05}, {'diff': 8.665299999999904e-05}, {'diff': 8.644500000000097e-05}, {'diff': 8.669500000000122e-05}, {'diff': 8.700000000000027e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:17.232" endtime="20201029 12:48:17.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:17.241" level="INFO">${ACCURACY} = {'diff': [8.640300000000226e-05, 8.701399999999984e-05, 8.665299999999904e-05, 8.644500000000097e-05, 8.669500000000122e-05, 8.700000000000027e-05, 8.695899999999757e-05, 8.649999999999977e-05, 8.6139...</msg>
<status status="PASS" starttime="20201029 12:48:17.237" endtime="20201029 12:48:17.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.245" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 12:48:17.244" endtime="20201029 12:48:17.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.248" level="INFO">VALUE: [8.640300000000226e-05, 8.701399999999984e-05, 8.665299999999904e-05, 8.644500000000097e-05, 8.669500000000122e-05, 8.700000000000027e-05, 8.695899999999757e-05, 8.649999999999977e-05, 8.613900000000244e-05, 8.66249999999999e-05, 8.63050000000018e-05, 8.688899999999972e-05, 8.706899999999865e-05, 8.658300000000119e-05, 8.634800000000345e-05, 8.680499999999883e-05, 8.64860000000002e-05, 8.675000000000002e-05, 8.705599999999855e-05, 8.61249999999994e-05, 8.68059999999983e-05, 8.638799999999974e-05, 8.687500000000015e-05, 8.61249999999994e-05, 8.619399999999777e-05, 8.680499999999883e-05, 8.67920000000022e-05, 8.638899999999922e-05, 8.649999999999977e-05, 8.700000000000027e-05, 8.695800000000156e-05, 8.705599999999855e-05, 8.622299999999986e-05, 8.619500000000072e-05, 8.687500000000015e-05, 8.670900000000079e-05, 8.620900000000029e-05, 8.690199999999981e-05, 8.649999999999977e-05, 8.701300000000037e-05, 8.638899999999922e-05, 8.661100000000033e-05, 8.645800000000106e-05, 8.630499999999833e-05, 8.63189999999979e-05, 8.645800000000106e-05, 8.686100000000058e-05, 8.656999999999762e-05, 8.655600000000152e-05, 8.613899999999897e-05]</msg>
<status status="PASS" starttime="20201029 12:48:17.246" endtime="20201029 12:48:17.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.242" endtime="20201029 12:48:17.249"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:17.253" endtime="20201029 12:48:17.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.251" endtime="20201029 12:48:17.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.250" endtime="20201029 12:48:17.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.888" endtime="20201029 12:48:17.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:16.887" endtime="20201029 12:48:17.274"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.283" endtime="20201029 12:48:17.303"></status>
</kw>
<msg timestamp="20201029 12:48:17.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:17.281" endtime="20201029 12:48:17.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:17.304" endtime="20201029 12:48:17.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.307" endtime="20201029 12:48:17.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.278" endtime="20201029 12:48:17.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.276" endtime="20201029 12:48:17.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.316" endtime="20201029 12:48:17.603"></status>
</kw>
<msg timestamp="20201029 12:48:17.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020070222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020157889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:17.315" endtime="20201029 12:48:17.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020070222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020157889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:17.607" endtime="20201029 12:48:17.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.616" endtime="20201029 12:48:17.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.312" endtime="20201029 12:48:17.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.310" endtime="20201029 12:48:17.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:17.623" level="INFO">${RESULT} = [{'diff': 8.76669999999996e-05}, {'diff': 8.74730000000011e-05}, {'diff': 8.736100000000108e-05}, {'diff': 8.798599999999823e-05}, {'diff': 8.783300000000244e-05}, {'diff': 8.79730000000016e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:48:17.619" endtime="20201029 12:48:17.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:17.627" level="INFO">${ACCURACY} = {'diff': [8.76669999999996e-05, 8.74730000000011e-05, 8.736100000000108e-05, 8.798599999999823e-05, 8.783300000000244e-05, 8.79730000000016e-05, 8.740200000000031e-05, 8.792999999999995e-05, 8.7304999...</msg>
<status status="PASS" starttime="20201029 12:48:17.624" endtime="20201029 12:48:17.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.632" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 12:48:17.631" endtime="20201029 12:48:17.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.634" level="INFO">VALUE: [8.76669999999996e-05, 8.74730000000011e-05, 8.736100000000108e-05, 8.798599999999823e-05, 8.783300000000244e-05, 8.79730000000016e-05, 8.740200000000031e-05, 8.792999999999995e-05, 8.730499999999933e-05, 8.774999999999755e-05, 8.770799999999884e-05, 8.801400000000084e-05, 8.744399999999902e-05, 8.805500000000008e-05, 8.783299999999897e-05, 8.750000000000077e-05, 8.761099999999786e-05, 8.718099999999868e-05, 8.715299999999954e-05, 8.805599999999955e-05, 8.777699999999722e-05, 8.763800000000099e-05, 8.766600000000013e-05, 8.733299999999847e-05, 8.716599999999963e-05, 8.783300000000244e-05, 8.76799999999997e-05, 8.790300000000029e-05, 8.756899999999915e-05, 8.7944999999999e-05, 8.722199999999791e-05, 8.745900000000154e-05, 8.726400000000009e-05, 8.750000000000077e-05, 8.713899999999997e-05, 8.76250000000009e-05, 8.776400000000059e-05, 8.780499999999983e-05, 8.805500000000008e-05, 8.804199999999998e-05, 8.759700000000176e-05, 8.763900000000047e-05, 8.76669999999996e-05, 8.720900000000129e-05, 8.783299999999897e-05, 8.78189999999994e-05, 8.726400000000009e-05, 8.74449999999985e-05, 8.736100000000108e-05, 8.806999999999912e-05]</msg>
<status status="PASS" starttime="20201029 12:48:17.633" endtime="20201029 12:48:17.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.628" endtime="20201029 12:48:17.636"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:17.639" endtime="20201029 12:48:17.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.638" endtime="20201029 12:48:17.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.637" endtime="20201029 12:48:17.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.275" endtime="20201029 12:48:17.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.274" endtime="20201029 12:48:17.660"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.669" endtime="20201029 12:48:17.693"></status>
</kw>
<msg timestamp="20201029 12:48:17.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:17.667" endtime="20201029 12:48:17.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:17.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:17.695" endtime="20201029 12:48:17.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.697" endtime="20201029 12:48:17.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.665" endtime="20201029 12:48:17.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.663" endtime="20201029 12:48:17.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:17.707" endtime="20201029 12:48:17.992"></status>
</kw>
<msg timestamp="20201029 12:48:17.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023428403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023517056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:17.705" endtime="20201029 12:48:17.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023428403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023517056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:17.996" endtime="20201029 12:48:18.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.005" endtime="20201029 12:48:18.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.702" endtime="20201029 12:48:18.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.700" endtime="20201029 12:48:18.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:18.012" level="INFO">${RESULT} = [{'diff': 8.865300000000104e-05}, {'diff': 8.89999999999988e-05}, {'diff': 8.858299999999972e-05}, {'diff': 8.830500000000033e-05}, {'diff': 8.856900000000015e-05}, {'diff': 8.89999999999988e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:48:18.009" endtime="20201029 12:48:18.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:18.016" level="INFO">${ACCURACY} = {'diff': [8.865300000000104e-05, 8.89999999999988e-05, 8.858299999999972e-05, 8.830500000000033e-05, 8.856900000000015e-05, 8.89999999999988e-05, 8.838899999999775e-05, 8.837499999999818e-05, 8.822199...</msg>
<status status="PASS" starttime="20201029 12:48:18.013" endtime="20201029 12:48:18.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.021" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 12:48:18.020" endtime="20201029 12:48:18.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.023" level="INFO">VALUE: [8.865300000000104e-05, 8.89999999999988e-05, 8.858299999999972e-05, 8.830500000000033e-05, 8.856900000000015e-05, 8.89999999999988e-05, 8.838899999999775e-05, 8.837499999999818e-05, 8.822199999999891e-05, 8.861099999999886e-05, 8.833399999999894e-05, 8.881999999999987e-05, 8.883399999999944e-05, 8.851399999999787e-05, 8.870900000000279e-05, 8.84449999999995e-05, 8.86120000000018e-05, 8.886099999999911e-05, 8.88060000000003e-05, 8.842999999999698e-05, 8.809699999999879e-05, 8.876399999999812e-05, 8.868100000000018e-05, 8.868100000000018e-05, 8.881999999999987e-05, 8.858399999999919e-05, 8.850000000000177e-05, 8.819499999999925e-05, 8.862499999999843e-05, 8.834699999999904e-05, 8.843099999999993e-05, 8.84999999999983e-05, 8.900000000000227e-05, 8.862499999999843e-05, 8.901400000000184e-05, 8.886099999999911e-05, 8.829200000000023e-05, 8.824999999999805e-05, 8.8638999999998e-05, 8.812499999999793e-05, 8.844500000000297e-05, 8.81250000000014e-05, 8.838900000000122e-05, 8.825000000000152e-05, 8.901399999999837e-05, 8.907000000000012e-05, 8.826299999999815e-05, 8.856900000000015e-05, 8.83189999999999e-05, 8.866699999999714e-05]</msg>
<status status="PASS" starttime="20201029 12:48:18.022" endtime="20201029 12:48:18.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.017" endtime="20201029 12:48:18.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:18.029" endtime="20201029 12:48:18.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.028" endtime="20201029 12:48:18.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.027" endtime="20201029 12:48:18.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.661" endtime="20201029 12:48:18.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:17.660" endtime="20201029 12:48:18.050"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.059" endtime="20201029 12:48:18.079"></status>
</kw>
<msg timestamp="20201029 12:48:18.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:18.058" endtime="20201029 12:48:18.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:18.081" endtime="20201029 12:48:18.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.084" endtime="20201029 12:48:18.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.055" endtime="20201029 12:48:18.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.053" endtime="20201029 12:48:18.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.093" endtime="20201029 12:48:18.378"></status>
</kw>
<msg timestamp="20201029 12:48:18.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020132944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020222417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:18.091" endtime="20201029 12:48:18.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020132944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020222417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:18.383" endtime="20201029 12:48:18.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.391" endtime="20201029 12:48:18.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.089" endtime="20201029 12:48:18.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.087" endtime="20201029 12:48:18.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:18.398" level="INFO">${RESULT} = [{'diff': 8.947299999999964e-05}, {'diff': 8.986100000000011e-05}, {'diff': 8.973599999999998e-05}, {'diff': 8.980499999999836e-05}, {'diff': 8.988899999999925e-05}, {'diff': 8.965300000000204e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:18.395" endtime="20201029 12:48:18.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:18.403" level="INFO">${ACCURACY} = {'diff': [8.947299999999964e-05, 8.986100000000011e-05, 8.973599999999998e-05, 8.980499999999836e-05, 8.988899999999925e-05, 8.965300000000204e-05, 8.924999999999905e-05, 9.001399999999937e-05, 9.0041...</msg>
<status status="PASS" starttime="20201029 12:48:18.399" endtime="20201029 12:48:18.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.408" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 12:48:18.407" endtime="20201029 12:48:18.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.410" level="INFO">VALUE: [8.947299999999964e-05, 8.986100000000011e-05, 8.973599999999998e-05, 8.980499999999836e-05, 8.988899999999925e-05, 8.965300000000204e-05, 8.924999999999905e-05, 9.001399999999937e-05, 9.004199999999851e-05, 8.951399999999887e-05, 9.001399999999937e-05, 8.918100000000068e-05, 8.988899999999925e-05, 8.919500000000025e-05, 8.988899999999925e-05, 8.969400000000127e-05, 8.932000000000037e-05, 8.992999999999848e-05, 8.99999999999998e-05, 8.922199999999991e-05, 8.9638999999999e-05, 8.9638999999999e-05, 8.945800000000059e-05, 8.91389999999985e-05, 8.970800000000084e-05, 8.986100000000011e-05, 8.972299999999989e-05, 8.957000000000062e-05, 8.9638999999999e-05, 8.927700000000219e-05, 8.94999999999993e-05, 8.96939999999978e-05, 8.955499999999811e-05, 8.986100000000011e-05, 8.920800000000034e-05, 8.917999999999773e-05, 8.98329999999975e-05, 8.986100000000011e-05, 8.948599999999973e-05, 8.94999999999993e-05, 8.970800000000084e-05, 8.982000000000087e-05, 8.923599999999948e-05, 8.997299999999667e-05, 8.974999999999955e-05, 8.994400000000152e-05, 8.918100000000068e-05, 8.943000000000145e-05, 8.91389999999985e-05, 8.930499999999786e-05]</msg>
<status status="PASS" starttime="20201029 12:48:18.409" endtime="20201029 12:48:18.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.404" endtime="20201029 12:48:18.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:18.415" endtime="20201029 12:48:18.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.414" endtime="20201029 12:48:18.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.412" endtime="20201029 12:48:18.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.051" endtime="20201029 12:48:18.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.051" endtime="20201029 12:48:18.436"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.445" endtime="20201029 12:48:18.465"></status>
</kw>
<msg timestamp="20201029 12:48:18.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:18.443" endtime="20201029 12:48:18.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:18.466" endtime="20201029 12:48:18.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.469" endtime="20201029 12:48:18.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.441" endtime="20201029 12:48:18.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.439" endtime="20201029 12:48:18.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.478" endtime="20201029 12:48:18.767"></status>
</kw>
<msg timestamp="20201029 12:48:18.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020153153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020243681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:18.477" endtime="20201029 12:48:18.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020153153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020243681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:18.771" endtime="20201029 12:48:18.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.780" endtime="20201029 12:48:18.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.474" endtime="20201029 12:48:18.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.472" endtime="20201029 12:48:18.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:18.787" level="INFO">${RESULT} = [{'diff': 9.052799999999944e-05}, {'diff': 9.093100000000243e-05}, {'diff': 9.088900000000025e-05}, {'diff': 9.017999999999873e-05}, {'diff': 9.097200000000166e-05}, {'diff': 9.012499999999993e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:18.783" endtime="20201029 12:48:18.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:18.791" level="INFO">${ACCURACY} = {'diff': [9.052799999999944e-05, 9.093100000000243e-05, 9.088900000000025e-05, 9.017999999999873e-05, 9.097200000000166e-05, 9.012499999999993e-05, 9.080500000000283e-05, 9.106899999999918e-05, 9.1054...</msg>
<status status="PASS" starttime="20201029 12:48:18.788" endtime="20201029 12:48:18.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.796" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 12:48:18.795" endtime="20201029 12:48:18.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.798" level="INFO">VALUE: [9.052799999999944e-05, 9.093100000000243e-05, 9.088900000000025e-05, 9.017999999999873e-05, 9.097200000000166e-05, 9.012499999999993e-05, 9.080500000000283e-05, 9.106899999999918e-05, 9.105499999999961e-05, 9.095800000000209e-05, 9.093099999999896e-05, 9.052799999999944e-05, 9.105599999999908e-05, 9.079199999999926e-05, 9.104199999999951e-05, 9.086199999999711e-05, 9.079199999999926e-05, 9.027699999999972e-05, 9.069400000000227e-05, 9.058300000000172e-05, 9.101400000000037e-05, 9.05000000000003e-05, 9.106899999999918e-05, 9.026399999999962e-05, 9.025000000000005e-05, 9.020799999999787e-05, 9.036099999999714e-05, 9.019500000000125e-05, 9.101400000000037e-05, 9.076400000000012e-05, 9.069499999999828e-05, 9.023600000000048e-05, 9.038800000000027e-05, 9.062500000000043e-05, 9.05000000000003e-05, 9.036100000000061e-05, 9.106999999999865e-05, 9.0639e-05, 9.058299999999825e-05, 9.0945000000002e-05, 9.099999999999733e-05, 9.094499999999853e-05, 9.069499999999828e-05, 9.08060000000023e-05, 9.069500000000175e-05, 9.03199999999979e-05, 9.061200000000033e-05, 9.038899999999975e-05, 9.012499999999993e-05, 9.042999999999898e-05]</msg>
<status status="PASS" starttime="20201029 12:48:18.797" endtime="20201029 12:48:18.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.792" endtime="20201029 12:48:18.800"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:18.803" endtime="20201029 12:48:18.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.802" endtime="20201029 12:48:18.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.801" endtime="20201029 12:48:18.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.437" endtime="20201029 12:48:18.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.436" endtime="20201029 12:48:18.824"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.833" endtime="20201029 12:48:18.855"></status>
</kw>
<msg timestamp="20201029 12:48:18.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:18.832" endtime="20201029 12:48:18.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:18.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:18.857" endtime="20201029 12:48:18.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.859" endtime="20201029 12:48:18.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.829" endtime="20201029 12:48:18.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.827" endtime="20201029 12:48:18.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:18.868" endtime="20201029 12:48:19.155"></status>
</kw>
<msg timestamp="20201029 12:48:19.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021206458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021298, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:48:18.867" endtime="20201029 12:48:19.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021206458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021298, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:48:19.159" endtime="20201029 12:48:19.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.169" endtime="20201029 12:48:19.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.864" endtime="20201029 12:48:19.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.862" endtime="20201029 12:48:19.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:19.176" level="INFO">${RESULT} = [{'diff': 9.154200000000001e-05}, {'diff': 9.138900000000075e-05}, {'diff': 9.175000000000155e-05}, {'diff': 9.162499999999796e-05}, {'diff': 9.11520000000006e-05}, {'diff': 9.173600000000198e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:19.173" endtime="20201029 12:48:19.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:19.180" level="INFO">${ACCURACY} = {'diff': [9.154200000000001e-05, 9.138900000000075e-05, 9.175000000000155e-05, 9.162499999999796e-05, 9.11520000000006e-05, 9.173600000000198e-05, 9.116600000000016e-05, 9.112500000000093e-05, 9.20829...</msg>
<status status="PASS" starttime="20201029 12:48:19.177" endtime="20201029 12:48:19.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.185" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 12:48:19.184" endtime="20201029 12:48:19.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.188" level="INFO">VALUE: [9.154200000000001e-05, 9.138900000000075e-05, 9.175000000000155e-05, 9.162499999999796e-05, 9.11520000000006e-05, 9.173600000000198e-05, 9.116600000000016e-05, 9.112500000000093e-05, 9.208299999999975e-05, 9.18329999999995e-05, 9.209699999999932e-05, 9.194400000000005e-05, 9.145799999999912e-05, 9.111100000000136e-05, 9.11939999999993e-05, 9.13199999999989e-05, 9.155600000000305e-05, 9.175000000000155e-05, 9.20139999999979e-05, 9.201400000000137e-05, 9.126300000000115e-05, 9.123700000000096e-05, 9.125000000000105e-05, 9.184699999999907e-05, 9.163899999999753e-05, 9.112500000000093e-05, 9.155500000000011e-05, 9.180599999999983e-05, 9.195799999999962e-05, 9.145800000000259e-05, 9.20139999999979e-05, 9.168099999999971e-05, 9.125000000000105e-05, 9.188899999999778e-05, 9.190200000000134e-05, 9.193000000000048e-05, 9.205600000000008e-05, 9.127700000000072e-05, 9.138900000000075e-05, 9.187499999999821e-05, 9.168000000000023e-05, 9.173600000000198e-05, 9.111099999999789e-05, 9.197200000000266e-05, 9.18329999999995e-05, 9.1945000000003e-05, 9.130499999999986e-05, 9.144499999999903e-05, 9.187500000000168e-05, 9.179100000000079e-05]</msg>
<status status="PASS" starttime="20201029 12:48:19.186" endtime="20201029 12:48:19.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.181" endtime="20201029 12:48:19.190"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:19.194" endtime="20201029 12:48:19.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.192" endtime="20201029 12:48:19.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.191" endtime="20201029 12:48:19.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.825" endtime="20201029 12:48:19.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:18.825" endtime="20201029 12:48:19.214"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.223" endtime="20201029 12:48:19.244"></status>
</kw>
<msg timestamp="20201029 12:48:19.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:19.222" endtime="20201029 12:48:19.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:19.246" endtime="20201029 12:48:19.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.248" endtime="20201029 12:48:19.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.219" endtime="20201029 12:48:19.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.217" endtime="20201029 12:48:19.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.258" endtime="20201029 12:48:19.544"></status>
</kw>
<msg timestamp="20201029 12:48:19.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020137056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02023, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:48:19.256" endtime="20201029 12:48:19.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020137056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02023, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:48:19.548" endtime="20201029 12:48:19.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.557" endtime="20201029 12:48:19.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.253" endtime="20201029 12:48:19.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.251" endtime="20201029 12:48:19.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:19.563" level="INFO">${RESULT} = [{'diff': 9.294400000000105e-05}, {'diff': 9.294500000000053e-05}, {'diff': 9.262499999999896e-05}, {'diff': 9.219499999999978e-05}, {'diff': 9.274999999999908e-05}, {'diff': 9.28200000000004e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:19.560" endtime="20201029 12:48:19.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:19.568" level="INFO">${ACCURACY} = {'diff': [9.294400000000105e-05, 9.294500000000053e-05, 9.262499999999896e-05, 9.219499999999978e-05, 9.274999999999908e-05, 9.28200000000004e-05, 9.277699999999875e-05, 9.230499999999739e-05, 9.24719...</msg>
<status status="PASS" starttime="20201029 12:48:19.564" endtime="20201029 12:48:19.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.573" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 12:48:19.572" endtime="20201029 12:48:19.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.576" level="INFO">VALUE: [9.294400000000105e-05, 9.294500000000053e-05, 9.262499999999896e-05, 9.219499999999978e-05, 9.274999999999908e-05, 9.28200000000004e-05, 9.277699999999875e-05, 9.230499999999739e-05, 9.24719999999997e-05, 9.244400000000055e-05, 9.231900000000043e-05, 9.276400000000212e-05, 9.215300000000107e-05, 9.224999999999858e-05, 9.224999999999858e-05, 9.307000000000065e-05, 9.301400000000237e-05, 9.299999999999933e-05, 9.280600000000083e-05, 9.268000000000123e-05, 9.306900000000118e-05, 9.209699999999932e-05, 9.220799999999987e-05, 9.30000000000028e-05, 9.241700000000089e-05, 9.231900000000043e-05, 9.274999999999908e-05, 9.25139999999984e-05, 9.262500000000243e-05, 9.25000000000023e-05, 9.240299999999785e-05, 9.25139999999984e-05, 9.288900000000225e-05, 9.257000000000015e-05, 9.218000000000073e-05, 9.251400000000187e-05, 9.225000000000205e-05, 9.312500000000293e-05, 9.262499999999896e-05, 9.238900000000175e-05, 9.308299999999728e-05, 9.299999999999933e-05, 9.244500000000003e-05, 9.266700000000114e-05, 9.302799999999847e-05, 9.244500000000003e-05, 9.279099999999832e-05, 9.288899999999878e-05, 9.277699999999875e-05, 9.224999999999858e-05]</msg>
<status status="PASS" starttime="20201029 12:48:19.574" endtime="20201029 12:48:19.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.569" endtime="20201029 12:48:19.577"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:19.581" endtime="20201029 12:48:19.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.579" endtime="20201029 12:48:19.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.578" endtime="20201029 12:48:19.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.215" endtime="20201029 12:48:19.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.215" endtime="20201029 12:48:19.602"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.611" endtime="20201029 12:48:19.630"></status>
</kw>
<msg timestamp="20201029 12:48:19.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:19.609" endtime="20201029 12:48:19.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:19.632" endtime="20201029 12:48:19.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.635" endtime="20201029 12:48:19.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.606" endtime="20201029 12:48:19.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.604" endtime="20201029 12:48:19.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.644" endtime="20201029 12:48:19.932"></status>
</kw>
<msg timestamp="20201029 12:48:19.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020148208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020241417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:19.642" endtime="20201029 12:48:19.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020148208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020241417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:19.936" endtime="20201029 12:48:19.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.945" endtime="20201029 12:48:19.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.640" endtime="20201029 12:48:19.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.638" endtime="20201029 12:48:19.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:19.951" level="INFO">${RESULT} = [{'diff': 9.320900000000035e-05}, {'diff': 9.383400000000097e-05}, {'diff': 9.394500000000153e-05}, {'diff': 9.368100000000171e-05}, {'diff': 9.401300000000043e-05}, {'diff': 9.322200000000044e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:19.948" endtime="20201029 12:48:19.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:19.956" level="INFO">${ACCURACY} = {'diff': [9.320900000000035e-05, 9.383400000000097e-05, 9.394500000000153e-05, 9.368100000000171e-05, 9.401300000000043e-05, 9.322200000000044e-05, 9.40139999999999e-05, 9.348600000000026e-05, 9.37219...</msg>
<status status="PASS" starttime="20201029 12:48:19.952" endtime="20201029 12:48:19.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.960" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 12:48:19.959" endtime="20201029 12:48:19.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:19.963" level="INFO">VALUE: [9.320900000000035e-05, 9.383400000000097e-05, 9.394500000000153e-05, 9.368100000000171e-05, 9.401300000000043e-05, 9.322200000000044e-05, 9.40139999999999e-05, 9.348600000000026e-05, 9.372199999999747e-05, 9.362499999999996e-05, 9.395800000000162e-05, 9.380599999999836e-05, 9.354199999999854e-05, 9.365300000000257e-05, 9.355599999999811e-05, 9.380599999999836e-05, 9.316700000000164e-05, 9.388899999999978e-05, 9.405599999999861e-05, 9.40139999999999e-05, 9.356899999999821e-05, 9.343099999999799e-05, 9.344400000000155e-05, 9.394399999999858e-05, 9.387500000000021e-05, 9.316700000000164e-05, 9.391700000000239e-05, 9.40139999999999e-05, 9.39590000000011e-05, 9.394500000000153e-05, 9.324999999999958e-05, 9.322200000000044e-05, 9.384700000000107e-05, 9.376399999999965e-05, 9.329199999999829e-05, 9.394400000000205e-05, 9.363899999999953e-05, 9.319500000000078e-05, 9.402799999999947e-05, 9.349999999999983e-05, 9.345799999999765e-05, 9.345800000000112e-05, 9.402799999999947e-05, 9.36529999999991e-05, 9.338900000000275e-05, 9.327699999999925e-05, 9.311199999999936e-05, 9.31940000000013e-05, 9.390299999999935e-05, 9.330500000000186e-05]</msg>
<status status="PASS" starttime="20201029 12:48:19.961" endtime="20201029 12:48:19.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.957" endtime="20201029 12:48:19.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:19.968" endtime="20201029 12:48:19.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.966" endtime="20201029 12:48:19.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.965" endtime="20201029 12:48:19.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.602" endtime="20201029 12:48:19.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.602" endtime="20201029 12:48:19.989"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:19.998" endtime="20201029 12:48:20.020"></status>
</kw>
<msg timestamp="20201029 12:48:20.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:19.996" endtime="20201029 12:48:20.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:20.021" endtime="20201029 12:48:20.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.024" endtime="20201029 12:48:20.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.993" endtime="20201029 12:48:20.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.991" endtime="20201029 12:48:20.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.035" endtime="20201029 12:48:20.320"></status>
</kw>
<msg timestamp="20201029 12:48:20.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021377111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021471458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:20.033" endtime="20201029 12:48:20.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021377111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021471458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:20.325" endtime="20201029 12:48:20.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.333" endtime="20201029 12:48:20.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.030" endtime="20201029 12:48:20.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.028" endtime="20201029 12:48:20.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:20.340" level="INFO">${RESULT} = [{'diff': 9.43469999999981e-05}, {'diff': 9.412500000000046e-05}, {'diff': 9.412500000000046e-05}, {'diff': 9.418099999999874e-05}, {'diff': 9.43469999999981e-05}, {'diff': 9.438900000000028e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:48:20.337" endtime="20201029 12:48:20.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:20.344" level="INFO">${ACCURACY} = {'diff': [9.43469999999981e-05, 9.412500000000046e-05, 9.412500000000046e-05, 9.418099999999874e-05, 9.43469999999981e-05, 9.438900000000028e-05, 9.501399999999743e-05, 9.431999999999843e-05, 9.507000...</msg>
<status status="PASS" starttime="20201029 12:48:20.341" endtime="20201029 12:48:20.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.349" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 12:48:20.348" endtime="20201029 12:48:20.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.351" level="INFO">VALUE: [9.43469999999981e-05, 9.412500000000046e-05, 9.412500000000046e-05, 9.418099999999874e-05, 9.43469999999981e-05, 9.438900000000028e-05, 9.501399999999743e-05, 9.431999999999843e-05, 9.507000000000265e-05, 9.45140000000004e-05, 9.42079999999984e-05, 9.469399999999933e-05, 9.480499999999989e-05, 9.469399999999933e-05, 9.456899999999921e-05, 9.476400000000065e-05, 9.438900000000028e-05, 9.47079999999989e-05, 9.494500000000253e-05, 9.481999999999893e-05, 9.469499999999881e-05, 9.476400000000065e-05, 9.455600000000258e-05, 9.458399999999825e-05, 9.455599999999911e-05, 9.500000000000133e-05, 9.425000000000058e-05, 9.4333000000002e-05, 9.490300000000035e-05, 9.431899999999896e-05, 9.481899999999946e-05, 9.49720000000022e-05, 9.490300000000035e-05, 9.436100000000114e-05, 9.450000000000083e-05, 9.430600000000233e-05, 9.462500000000096e-05, 9.4333999999998e-05, 9.48469999999986e-05, 9.481899999999946e-05, 9.495799999999915e-05, 9.443000000000298e-05, 9.467999999999976e-05, 9.49720000000022e-05, 9.505599999999961e-05, 9.494399999999958e-05, 9.469499999999881e-05, 9.50140000000009e-05, 9.425000000000058e-05, 9.468099999999924e-05]</msg>
<status status="PASS" starttime="20201029 12:48:20.350" endtime="20201029 12:48:20.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.345" endtime="20201029 12:48:20.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:20.357" endtime="20201029 12:48:20.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.356" endtime="20201029 12:48:20.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.355" endtime="20201029 12:48:20.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.990" endtime="20201029 12:48:20.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:19.989" endtime="20201029 12:48:20.378"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.387" endtime="20201029 12:48:20.407"></status>
</kw>
<msg timestamp="20201029 12:48:20.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:20.386" endtime="20201029 12:48:20.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:20.409" endtime="20201029 12:48:20.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.411" endtime="20201029 12:48:20.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.383" endtime="20201029 12:48:20.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.381" endtime="20201029 12:48:20.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.421" endtime="20201029 12:48:20.708"></status>
</kw>
<msg timestamp="20201029 12:48:20.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020329347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:20.419" endtime="20201029 12:48:20.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020233958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020329347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:20.712" endtime="20201029 12:48:20.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.721" endtime="20201029 12:48:20.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.416" endtime="20201029 12:48:20.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.415" endtime="20201029 12:48:20.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:20.728" level="INFO">${RESULT} = [{'diff': 9.538900000000128e-05}, {'diff': 9.511099999999842e-05}, {'diff': 9.555499999999717e-05}, {'diff': 9.55140000000014e-05}, {'diff': 9.508299999999928e-05}, {'diff': 9.529200000000029e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:48:20.724" endtime="20201029 12:48:20.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:20.733" level="INFO">${ACCURACY} = {'diff': [9.538900000000128e-05, 9.511099999999842e-05, 9.555499999999717e-05, 9.55140000000014e-05, 9.508299999999928e-05, 9.529200000000029e-05, 9.545899999999913e-05, 9.519499999999931e-05, 9.52780...</msg>
<status status="PASS" starttime="20201029 12:48:20.729" endtime="20201029 12:48:20.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.738" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 12:48:20.737" endtime="20201029 12:48:20.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.740" level="INFO">VALUE: [9.538900000000128e-05, 9.511099999999842e-05, 9.555499999999717e-05, 9.55140000000014e-05, 9.508299999999928e-05, 9.529200000000029e-05, 9.545899999999913e-05, 9.519499999999931e-05, 9.527800000000072e-05, 9.529100000000082e-05, 9.606999999999671e-05, 9.554100000000107e-05, 9.611099999999942e-05, 9.609699999999985e-05, 9.518000000000026e-05, 9.608300000000028e-05, 9.56530000000011e-05, 9.576400000000165e-05, 9.576399999999818e-05, 9.556999999999968e-05, 9.587499999999874e-05, 9.570899999999938e-05, 9.537499999999824e-05, 9.513899999999756e-05, 9.574999999999861e-05, 9.556900000000021e-05, 9.545899999999913e-05, 9.606899999999724e-05, 9.595800000000015e-05, 9.555500000000064e-05, 9.558299999999978e-05, 9.599999999999886e-05, 9.550000000000183e-05, 9.556900000000021e-05, 9.509699999999885e-05, 9.608399999999975e-05, 9.588900000000178e-05, 9.588899999999831e-05, 9.516700000000017e-05, 9.595800000000015e-05, 9.566700000000067e-05, 9.563900000000153e-05, 9.544399999999661e-05, 9.599999999999886e-05, 9.538900000000128e-05, 9.594400000000058e-05, 9.536100000000214e-05, 9.573600000000251e-05, 9.544499999999956e-05, 9.604200000000104e-05]</msg>
<status status="PASS" starttime="20201029 12:48:20.739" endtime="20201029 12:48:20.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.734" endtime="20201029 12:48:20.742"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:20.745" endtime="20201029 12:48:20.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.744" endtime="20201029 12:48:20.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.743" endtime="20201029 12:48:20.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.379" endtime="20201029 12:48:20.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.379" endtime="20201029 12:48:20.766"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.775" endtime="20201029 12:48:20.796"></status>
</kw>
<msg timestamp="20201029 12:48:20.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:20.773" endtime="20201029 12:48:20.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:20.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:20.798" endtime="20201029 12:48:20.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.800" endtime="20201029 12:48:20.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.771" endtime="20201029 12:48:20.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.769" endtime="20201029 12:48:20.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:20.810" endtime="20201029 12:48:21.096"></status>
</kw>
<msg timestamp="20201029 12:48:21.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020377667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020474222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:20.808" endtime="20201029 12:48:21.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020377667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020474222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:21.101" endtime="20201029 12:48:21.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.109" endtime="20201029 12:48:21.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.805" endtime="20201029 12:48:21.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.804" endtime="20201029 12:48:21.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:21.116" level="INFO">${RESULT} = [{'diff': 9.655500000000164e-05}, {'diff': 9.7027999999999e-05}, {'diff': 9.687500000000321e-05}, {'diff': 9.61530000000016e-05}, {'diff': 9.619500000000031e-05}, {'diff': 9.657000000000068e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:48:21.113" endtime="20201029 12:48:21.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:21.120" level="INFO">${ACCURACY} = {'diff': [9.655500000000164e-05, 9.7027999999999e-05, 9.687500000000321e-05, 9.61530000000016e-05, 9.619500000000031e-05, 9.657000000000068e-05, 9.638899999999881e-05, 9.613900000000203e-05, 9.6138999...</msg>
<status status="PASS" starttime="20201029 12:48:21.117" endtime="20201029 12:48:21.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.125" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 12:48:21.124" endtime="20201029 12:48:21.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.128" level="INFO">VALUE: [9.655500000000164e-05, 9.7027999999999e-05, 9.687500000000321e-05, 9.61530000000016e-05, 9.619500000000031e-05, 9.657000000000068e-05, 9.638899999999881e-05, 9.613900000000203e-05, 9.613899999999856e-05, 9.705600000000161e-05, 9.652699999999903e-05, 9.706900000000171e-05, 9.642999999999805e-05, 9.645800000000065e-05, 9.637499999999924e-05, 9.643000000000151e-05, 9.612499999999899e-05, 9.631899999999749e-05, 9.68059999999979e-05, 9.640299999999838e-05, 9.69860000000003e-05, 9.695900000000063e-05, 9.662499999999949e-05, 9.624999999999911e-05, 9.687499999999974e-05, 9.681899999999799e-05, 9.681900000000146e-05, 9.695800000000115e-05, 9.699999999999986e-05, 9.63470000000001e-05, 9.649999999999936e-05, 9.622199999999997e-05, 9.699999999999986e-05, 9.644500000000056e-05, 9.623600000000301e-05, 9.682000000000093e-05, 9.695899999999716e-05, 9.662499999999949e-05, 9.681900000000146e-05, 9.609699999999985e-05, 9.626399999999868e-05, 9.651399999999893e-05, 9.66799999999983e-05, 9.658300000000078e-05, 9.618100000000074e-05, 9.679199999999832e-05, 9.622299999999945e-05, 9.673600000000004e-05, 9.625000000000258e-05, 9.613899999999856e-05]</msg>
<status status="PASS" starttime="20201029 12:48:21.126" endtime="20201029 12:48:21.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.121" endtime="20201029 12:48:21.129"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:21.133" endtime="20201029 12:48:21.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.131" endtime="20201029 12:48:21.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.130" endtime="20201029 12:48:21.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.767" endtime="20201029 12:48:21.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:20.767" endtime="20201029 12:48:21.154"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.163" endtime="20201029 12:48:21.186"></status>
</kw>
<msg timestamp="20201029 12:48:21.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:21.161" endtime="20201029 12:48:21.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:21.188" endtime="20201029 12:48:21.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.191" endtime="20201029 12:48:21.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.158" endtime="20201029 12:48:21.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.156" endtime="20201029 12:48:21.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.200" endtime="20201029 12:48:21.487"></status>
</kw>
<msg timestamp="20201029 12:48:21.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023430903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023528806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:21.199" endtime="20201029 12:48:21.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023430903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023528806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:21.491" endtime="20201029 12:48:21.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.500" endtime="20201029 12:48:21.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.196" endtime="20201029 12:48:21.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.194" endtime="20201029 12:48:21.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:21.506" level="INFO">${RESULT} = [{'diff': 9.790299999999988e-05}, {'diff': 9.729199999999882e-05}, {'diff': 9.740299999999938e-05}, {'diff': 9.719400000000183e-05}, {'diff': 9.737500000000024e-05}, {'diff': 9.751399999999993e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:21.503" endtime="20201029 12:48:21.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:21.511" level="INFO">${ACCURACY} = {'diff': [9.790299999999988e-05, 9.729199999999882e-05, 9.740299999999938e-05, 9.719400000000183e-05, 9.737500000000024e-05, 9.751399999999993e-05, 9.776400000000018e-05, 9.738899999999981e-05, 9.7166...</msg>
<status status="PASS" starttime="20201029 12:48:21.507" endtime="20201029 12:48:21.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.515" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 12:48:21.514" endtime="20201029 12:48:21.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.518" level="INFO">VALUE: [9.790299999999988e-05, 9.729199999999882e-05, 9.740299999999938e-05, 9.719400000000183e-05, 9.737500000000024e-05, 9.751399999999993e-05, 9.776400000000018e-05, 9.738899999999981e-05, 9.71669999999987e-05, 9.738899999999981e-05, 9.793099999999902e-05, 9.755600000000211e-05, 9.8028e-05, 9.768099999999877e-05, 9.715199999999966e-05, 9.725000000000011e-05, 9.781900000000246e-05, 9.738899999999981e-05, 9.730499999999892e-05, 9.715299999999913e-05, 9.76669999999992e-05, 9.8028e-05, 9.756999999999821e-05, 9.765299999999963e-05, 9.770900000000138e-05, 9.737500000000024e-05, 9.747200000000122e-05, 9.794399999999912e-05, 9.737500000000024e-05, 9.781899999999899e-05, 9.794399999999912e-05, 9.773600000000104e-05, 9.763900000000006e-05, 9.763900000000006e-05, 9.732000000000143e-05, 9.763900000000006e-05, 9.804199999999957e-05, 9.731899999999849e-05, 9.719399999999837e-05, 9.751399999999993e-05, 9.71669999999987e-05, 9.751300000000046e-05, 9.738899999999981e-05, 9.800000000000086e-05, 9.779099999999985e-05, 9.787500000000074e-05, 9.808299999999881e-05, 9.762500000000049e-05, 9.71669999999987e-05, 9.763900000000006e-05]</msg>
<status status="PASS" starttime="20201029 12:48:21.516" endtime="20201029 12:48:21.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.511" endtime="20201029 12:48:21.520"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:21.524" endtime="20201029 12:48:21.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.522" endtime="20201029 12:48:21.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.521" endtime="20201029 12:48:21.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.155" endtime="20201029 12:48:21.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.154" endtime="20201029 12:48:21.544"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.553" endtime="20201029 12:48:21.574"></status>
</kw>
<msg timestamp="20201029 12:48:21.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:21.552" endtime="20201029 12:48:21.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:21.576" endtime="20201029 12:48:21.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.578" endtime="20201029 12:48:21.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.549" endtime="20201029 12:48:21.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.547" endtime="20201029 12:48:21.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.588" endtime="20201029 12:48:21.874"></status>
</kw>
<msg timestamp="20201029 12:48:21.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020258083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020357208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:21.586" endtime="20201029 12:48:21.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020258083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020357208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:21.878" endtime="20201029 12:48:21.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.887" endtime="20201029 12:48:21.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.584" endtime="20201029 12:48:21.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.582" endtime="20201029 12:48:21.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:21.894" level="INFO">${RESULT} = [{'diff': 9.912500000000199e-05}, {'diff': 9.850000000000136e-05}, {'diff': 9.815300000000013e-05}, {'diff': 9.843000000000005e-05}, {'diff': 9.844399999999962e-05}, {'diff': 9.897199999999926e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:21.890" endtime="20201029 12:48:21.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:21.899" level="INFO">${ACCURACY} = {'diff': [9.912500000000199e-05, 9.850000000000136e-05, 9.815300000000013e-05, 9.843000000000005e-05, 9.844399999999962e-05, 9.897199999999926e-05, 9.905600000000014e-05, 9.831999999999896e-05, 9.8792...</msg>
<status status="PASS" starttime="20201029 12:48:21.895" endtime="20201029 12:48:21.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.903" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 12:48:21.902" endtime="20201029 12:48:21.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.906" level="INFO">VALUE: [9.912500000000199e-05, 9.850000000000136e-05, 9.815300000000013e-05, 9.843000000000005e-05, 9.844399999999962e-05, 9.897199999999926e-05, 9.905600000000014e-05, 9.831999999999896e-05, 9.879200000000032e-05, 9.848599999999832e-05, 9.852700000000103e-05, 9.865199999999769e-05, 9.905500000000067e-05, 9.844399999999962e-05, 9.854200000000007e-05, 9.880500000000042e-05, 9.906900000000024e-05, 9.825000000000111e-05, 9.876400000000118e-05, 9.909800000000232e-05, 9.906999999999971e-05, 9.819499999999884e-05, 9.837500000000124e-05, 9.869499999999934e-05, 9.901299999999849e-05, 9.820799999999894e-05, 9.877800000000075e-05, 9.883299999999956e-05, 9.856899999999974e-05, 9.83609999999982e-05, 9.827800000000025e-05, 9.908299999999981e-05, 9.838899999999734e-05, 9.895899999999916e-05, 9.833299999999906e-05, 9.862499999999802e-05, 9.86800000000003e-05, 9.831999999999896e-05, 9.902699999999806e-05, 9.869399999999987e-05, 9.851400000000093e-05, 9.858299999999931e-05, 9.83609999999982e-05, 9.812500000000099e-05, 9.831899999999949e-05, 9.819500000000231e-05, 9.908399999999928e-05, 9.823600000000154e-05, 9.833300000000253e-05, 9.880500000000042e-05]</msg>
<status status="PASS" starttime="20201029 12:48:21.905" endtime="20201029 12:48:21.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.900" endtime="20201029 12:48:21.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:21.916" endtime="20201029 12:48:21.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.914" endtime="20201029 12:48:21.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.913" endtime="20201029 12:48:21.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.545" endtime="20201029 12:48:21.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.545" endtime="20201029 12:48:21.936"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.945" endtime="20201029 12:48:21.966"></status>
</kw>
<msg timestamp="20201029 12:48:21.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:21.944" endtime="20201029 12:48:21.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:21.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:21.967" endtime="20201029 12:48:21.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.970" endtime="20201029 12:48:21.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.941" endtime="20201029 12:48:21.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.939" endtime="20201029 12:48:21.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:21.979" endtime="20201029 12:48:22.266"></status>
</kw>
<msg timestamp="20201029 12:48:22.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020125292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02022475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:21.978" endtime="20201029 12:48:22.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020125292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02022475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:22.270" endtime="20201029 12:48:22.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.279" endtime="20201029 12:48:22.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.975" endtime="20201029 12:48:22.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.973" endtime="20201029 12:48:22.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:22.286" level="INFO">${RESULT} = [{'diff': 9.945800000000019e-05}, {'diff': 0.00010001400000000243}, {'diff': 9.91800000000008e-05}, {'diff': 9.937500000000224e-05}, {'diff': 9.945899999999966e-05}, {'diff': 9.913899999999809e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:48:22.282" endtime="20201029 12:48:22.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:22.290" level="INFO">${ACCURACY} = {'diff': [9.945800000000019e-05, 0.00010001400000000243, 9.91800000000008e-05, 9.937500000000224e-05, 9.945899999999966e-05, 9.913899999999809e-05, 9.956900000000074e-05, 9.926399999999821e-05, 9.9194...</msg>
<status status="PASS" starttime="20201029 12:48:22.287" endtime="20201029 12:48:22.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.294" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 12:48:22.293" endtime="20201029 12:48:22.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.297" level="INFO">VALUE: [9.945800000000019e-05, 0.00010001400000000243, 9.91800000000008e-05, 9.937500000000224e-05, 9.945899999999966e-05, 9.913899999999809e-05, 9.956900000000074e-05, 9.926399999999821e-05, 9.919400000000037e-05, 9.923599999999907e-05, 9.99999999999994e-05, 9.915300000000113e-05, 9.995799999999722e-05, 9.924999999999864e-05, 9.994500000000059e-05, 9.947299999999923e-05, 9.93609999999992e-05, 9.99999999999994e-05, 9.945800000000019e-05, 0.00010001300000000296, 9.944400000000062e-05, 9.981900000000099e-05, 9.963900000000206e-05, 9.926399999999821e-05, 9.932000000000343e-05, 9.937499999999877e-05, 9.983300000000056e-05, 9.993100000000102e-05, 9.918100000000027e-05, 9.95280000000015e-05, 9.987499999999927e-05, 9.963899999999859e-05, 9.979199999999785e-05, 9.9722e-05, 9.961099999999945e-05, 9.945800000000019e-05, 9.963899999999859e-05, 9.956899999999727e-05, 9.913899999999809e-05, 0.00010012499999999952, 0.00010001399999999896, 0.00010005600000000114, 9.933399999999953e-05, 0.00010002799999999853, 0.00010007000000000071, 9.965199999999869e-05, 9.925000000000211e-05, 9.994400000000112e-05, 9.956900000000074e-05, 9.974999999999914e-05]</msg>
<status status="PASS" starttime="20201029 12:48:22.296" endtime="20201029 12:48:22.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.291" endtime="20201029 12:48:22.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:22.302" endtime="20201029 12:48:22.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.301" endtime="20201029 12:48:22.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.299" endtime="20201029 12:48:22.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.937" endtime="20201029 12:48:22.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:21.937" endtime="20201029 12:48:22.323"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.332" endtime="20201029 12:48:22.353"></status>
</kw>
<msg timestamp="20201029 12:48:22.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:22.330" endtime="20201029 12:48:22.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:22.355" endtime="20201029 12:48:22.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.358" endtime="20201029 12:48:22.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.328" endtime="20201029 12:48:22.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.325" endtime="20201029 12:48:22.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.367" endtime="20201029 12:48:22.654"></status>
</kw>
<msg timestamp="20201029 12:48:22.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021178375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021278542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:22.365" endtime="20201029 12:48:22.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021178375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021278542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:22.658" endtime="20201029 12:48:22.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.666" endtime="20201029 12:48:22.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.363" endtime="20201029 12:48:22.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.361" endtime="20201029 12:48:22.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:22.673" level="INFO">${RESULT} = [{'diff': 0.0001001670000000017}, {'diff': 0.00010109700000000138}, {'diff': 0.00010075000000000014}, {'diff': 0.00010108299999999834}, {'diff': 0.00010079099999999938}, {'diff': 0.0001002639999999992...</msg>
<status status="PASS" starttime="20201029 12:48:22.670" endtime="20201029 12:48:22.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:22.677" level="INFO">${ACCURACY} = {'diff': [0.0001001670000000017, 0.00010109700000000138, 0.00010075000000000014, 0.00010108299999999834, 0.00010079099999999938, 0.00010026399999999921, 0.00010087500000000027, 0.00010023600000000008,...</msg>
<status status="PASS" starttime="20201029 12:48:22.674" endtime="20201029 12:48:22.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.682" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 12:48:22.681" endtime="20201029 12:48:22.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.684" level="INFO">VALUE: [0.0001001670000000017, 0.00010109700000000138, 0.00010075000000000014, 0.00010108299999999834, 0.00010079099999999938, 0.00010026399999999921, 0.00010087500000000027, 0.00010023600000000008, 0.00010037499999999977, 0.0001006800000000023, 0.00010057000000000121, 0.00010082000000000146, 0.00010070899999999744, 0.00010043100000000152, 0.00010088899999999984, 0.0001004999999999999, 0.00010024999999999964, 0.00010051299999999999, 0.00010101399999999996, 0.00010012499999999952, 0.00010097200000000126, 0.00010069400000000187, 0.00010081899999999852, 0.00010048600000000033, 0.00010061100000000045, 0.00010079199999999885, 0.00010090299999999941, 0.00010063899999999959, 0.00010055599999999817, 0.00010063899999999959, 0.00010077800000000275, 0.00010079099999999938, 0.00010101399999999996, 0.00010076399999999971, 0.0001010419999999991, 0.00010101399999999996, 0.00010076399999999971, 0.00010101399999999996, 0.00010090299999999941, 0.0001010000000000004, 0.00010023600000000008, 0.00010090199999999994, 0.00010086200000000017, 0.00010081899999999852, 0.00010055500000000217, 0.00010011100000000342, 0.00010038899999999934, 0.00010031899999999802, 0.00010106899999999877, 0.00010108299999999834]</msg>
<status status="PASS" starttime="20201029 12:48:22.683" endtime="20201029 12:48:22.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.678" endtime="20201029 12:48:22.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:22.690" endtime="20201029 12:48:22.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.689" endtime="20201029 12:48:22.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.688" endtime="20201029 12:48:22.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.324" endtime="20201029 12:48:22.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.323" endtime="20201029 12:48:22.711"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.720" endtime="20201029 12:48:22.741"></status>
</kw>
<msg timestamp="20201029 12:48:22.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:22.719" endtime="20201029 12:48:22.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:22.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:22.743" endtime="20201029 12:48:22.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.745" endtime="20201029 12:48:22.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.716" endtime="20201029 12:48:22.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.714" endtime="20201029 12:48:22.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:22.755" endtime="20201029 12:48:23.041"></status>
</kw>
<msg timestamp="20201029 12:48:23.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020162431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:22.753" endtime="20201029 12:48:23.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020162431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:23.045" endtime="20201029 12:48:23.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.053" endtime="20201029 12:48:23.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.750" endtime="20201029 12:48:23.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.749" endtime="20201029 12:48:23.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:23.060" level="INFO">${RESULT} = [{'diff': 0.00010130499999999945}, {'diff': 0.00010137500000000077}, {'diff': 0.0001020550000000002}, {'diff': 0.00010199999999999793}, {'diff': 0.00010144499999999862}, {'diff': 0.0001020559999999996...</msg>
<status status="PASS" starttime="20201029 12:48:23.057" endtime="20201029 12:48:23.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:23.066" level="INFO">${ACCURACY} = {'diff': [0.00010130499999999945, 0.00010137500000000077, 0.0001020550000000002, 0.00010199999999999793, 0.00010144499999999862, 0.00010205599999999967, 0.00010158399999999831, 0.00010202800000000053,...</msg>
<status status="PASS" starttime="20201029 12:48:23.062" endtime="20201029 12:48:23.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.071" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 12:48:23.070" endtime="20201029 12:48:23.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.074" level="INFO">VALUE: [0.00010130499999999945, 0.00010137500000000077, 0.0001020550000000002, 0.00010199999999999793, 0.00010144499999999862, 0.00010205599999999967, 0.00010158399999999831, 0.00010202800000000053, 0.00010166699999999973, 0.00010131899999999902, 0.00010180499999999995, 0.00010184699999999866, 0.00010199999999999793, 0.00010156900000000274, 0.00010126400000000021, 0.0001015000000000009, 0.00010206999999999924, 0.00010105599999999867, 0.00010208399999999881, 0.00010204100000000063, 0.00010176400000000071, 0.0001020000000000014, 0.00010123600000000108, 0.00010176400000000071, 0.00010195799999999922, 0.00010137500000000077, 0.0001011800000000028, 0.00010131900000000249, 0.0001011939999999989, 0.00010197200000000226, 0.00010115299999999966, 0.00010183400000000203, 0.00010144499999999862, 0.00010109800000000085, 0.00010172199999999854, 0.00010181899999999952, 0.00010201400000000097, 0.00010183300000000256, 0.00010131899999999902, 0.00010126400000000021, 0.00010130499999999945, 0.00010177800000000028, 0.00010208299999999934, 0.00010169499999999887, 0.0001016809999999993, 0.00010194499999999912, 0.00010195799999999922, 0.0001018749999999978, 0.00010190200000000094, 0.00010207000000000271]</msg>
<status status="PASS" starttime="20201029 12:48:23.072" endtime="20201029 12:48:23.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.067" endtime="20201029 12:48:23.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:23.079" endtime="20201029 12:48:23.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.077" endtime="20201029 12:48:23.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.076" endtime="20201029 12:48:23.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.712" endtime="20201029 12:48:23.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:22.711" endtime="20201029 12:48:23.100"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.109" endtime="20201029 12:48:23.129"></status>
</kw>
<msg timestamp="20201029 12:48:23.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:23.107" endtime="20201029 12:48:23.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:23.131" endtime="20201029 12:48:23.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.133" endtime="20201029 12:48:23.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.104" endtime="20201029 12:48:23.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.102" endtime="20201029 12:48:23.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.143" endtime="20201029 12:48:23.430"></status>
</kw>
<msg timestamp="20201029 12:48:23.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020147417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020250278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:23.141" endtime="20201029 12:48:23.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020147417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020250278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:23.435" endtime="20201029 12:48:23.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.443" endtime="20201029 12:48:23.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.138" endtime="20201029 12:48:23.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.137" endtime="20201029 12:48:23.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:23.450" level="INFO">${RESULT} = [{'diff': 0.00010286099999999923}, {'diff': 0.00010276400000000172}, {'diff': 0.00010211200000000142}, {'diff': 0.0001028749999999988}, {'diff': 0.0001028879999999989}, {'diff': 0.0001027359999999991}...</msg>
<status status="PASS" starttime="20201029 12:48:23.446" endtime="20201029 12:48:23.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:23.454" level="INFO">${ACCURACY} = {'diff': [0.00010286099999999923, 0.00010276400000000172, 0.00010211200000000142, 0.0001028749999999988, 0.0001028879999999989, 0.0001027359999999991, 0.0001030689999999973, 0.00010245799999999972, 0....</msg>
<status status="PASS" starttime="20201029 12:48:23.451" endtime="20201029 12:48:23.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.458" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 12:48:23.457" endtime="20201029 12:48:23.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.461" level="INFO">VALUE: [0.00010286099999999923, 0.00010276400000000172, 0.00010211200000000142, 0.0001028749999999988, 0.0001028879999999989, 0.0001027359999999991, 0.0001030689999999973, 0.00010245799999999972, 0.00010262500000000202, 0.00010249999999999843, 0.00010265200000000169, 0.00010238900000000134, 0.00010293100000000055, 0.00010241700000000048, 0.00010270899999999944, 0.0001023610000000022, 0.00010307000000000024, 0.0001026940000000004, 0.00010226400000000122, 0.00010245799999999972, 0.00010240299999999744, 0.00010223600000000208, 0.00010295800000000022, 0.00010220900000000241, 0.00010236099999999873, 0.0001028749999999988, 0.00010225000000000165, 0.00010293100000000055, 0.00010294400000000065, 0.0001023879999999984, 0.00010213900000000109, 0.00010213899999999762, 0.00010308300000000034, 0.00010299999999999893, 0.00010263899999999812, 0.00010291699999999751, 0.00010236099999999873, 0.00010282, 0.00010284700000000313, 0.00010282, 0.00010270899999999944, 0.00010280600000000042, 0.00010245799999999972, 0.0001030000000000024, 0.00010225000000000165, 0.00010245799999999972, 0.00010288900000000184, 0.00010281900000000052, 0.0001028749999999988, 0.00010262500000000202]</msg>
<status status="PASS" starttime="20201029 12:48:23.459" endtime="20201029 12:48:23.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.455" endtime="20201029 12:48:23.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:23.466" endtime="20201029 12:48:23.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.464" endtime="20201029 12:48:23.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.463" endtime="20201029 12:48:23.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.101" endtime="20201029 12:48:23.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.100" endtime="20201029 12:48:23.487"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.496" endtime="20201029 12:48:23.518"></status>
</kw>
<msg timestamp="20201029 12:48:23.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:23.494" endtime="20201029 12:48:23.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:23.520" endtime="20201029 12:48:23.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.522" endtime="20201029 12:48:23.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.491" endtime="20201029 12:48:23.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.489" endtime="20201029 12:48:23.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.531" endtime="20201029 12:48:23.818"></status>
</kw>
<msg timestamp="20201029 12:48:23.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021116847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021220375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:23.530" endtime="20201029 12:48:23.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021116847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021220375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:23.822" endtime="20201029 12:48:23.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.830" endtime="20201029 12:48:23.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.527" endtime="20201029 12:48:23.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.525" endtime="20201029 12:48:23.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:23.837" level="INFO">${RESULT} = [{'diff': 0.00010352799999999857}, {'diff': 0.00010323700000000255}, {'diff': 0.00010388899999999937}, {'diff': 0.00010340299999999844}, {'diff': 0.00010404099999999916}, {'diff': 0.000104056000000001...</msg>
<status status="PASS" starttime="20201029 12:48:23.834" endtime="20201029 12:48:23.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:23.841" level="INFO">${ACCURACY} = {'diff': [0.00010352799999999857, 0.00010323700000000255, 0.00010388899999999937, 0.00010340299999999844, 0.00010404099999999916, 0.00010405600000000167, 0.00010402800000000254, 0.00010365199999999922...</msg>
<status status="PASS" starttime="20201029 12:48:23.838" endtime="20201029 12:48:23.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.846" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 12:48:23.845" endtime="20201029 12:48:23.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.849" level="INFO">VALUE: [0.00010352799999999857, 0.00010323700000000255, 0.00010388899999999937, 0.00010340299999999844, 0.00010404099999999916, 0.00010405600000000167, 0.00010402800000000254, 0.00010365199999999922, 0.0001037360000000001, 0.00010381899999999805, 0.00010324999999999918, 0.00010337500000000277, 0.00010386100000000023, 0.0001033749999999993, 0.00010322200000000004, 0.00010408400000000081, 0.00010384800000000013, 0.00010383400000000056, 0.0001036940000000014, 0.00010315199999999872, 0.00010379200000000185, 0.00010340299999999844, 0.00010359700000000041, 0.0001037360000000001, 0.00010312499999999905, 0.000103513999999999, 0.00010376399999999925, 0.00010325000000000265, 0.00010399999999999993, 0.00010327799999999832, 0.00010337500000000277, 0.00010399999999999993, 0.00010383299999999762, 0.00010402800000000254, 0.00010362500000000302, 0.00010313900000000209, 0.00010376399999999925, 0.0001035420000000016, 0.00010320800000000047, 0.00010395799999999775, 0.00010343100000000105, 0.00010356999999999728, 0.00010338900000000234, 0.00010395800000000122, 0.00010330600000000092, 0.0001033749999999993, 0.00010358300000000084, 0.00010324999999999918, 0.00010312499999999905, 0.00010394399999999818]</msg>
<status status="PASS" starttime="20201029 12:48:23.847" endtime="20201029 12:48:23.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.842" endtime="20201029 12:48:23.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:23.855" endtime="20201029 12:48:23.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.853" endtime="20201029 12:48:23.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.852" endtime="20201029 12:48:23.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.488" endtime="20201029 12:48:23.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.487" endtime="20201029 12:48:23.875"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.884" endtime="20201029 12:48:23.906"></status>
</kw>
<msg timestamp="20201029 12:48:23.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:23.883" endtime="20201029 12:48:23.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:23.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:23.907" endtime="20201029 12:48:23.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.910" endtime="20201029 12:48:23.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.880" endtime="20201029 12:48:23.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.878" endtime="20201029 12:48:23.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:23.919" endtime="20201029 12:48:24.205"></status>
</kw>
<msg timestamp="20201029 12:48:24.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020296611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020400819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:23.918" endtime="20201029 12:48:24.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020296611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020400819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:24.210" endtime="20201029 12:48:24.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.218" endtime="20201029 12:48:24.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.915" endtime="20201029 12:48:24.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.913" endtime="20201029 12:48:24.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:24.225" level="INFO">${RESULT} = [{'diff': 0.00010420800000000147}, {'diff': 0.00010450000000000043}, {'diff': 0.00010481899999999905}, {'diff': 0.00010475000000000068}, {'diff': 0.00010412500000000005}, {'diff': 0.000104111000000000...</msg>
<status status="PASS" starttime="20201029 12:48:24.221" endtime="20201029 12:48:24.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:24.231" level="INFO">${ACCURACY} = {'diff': [0.00010420800000000147, 0.00010450000000000043, 0.00010481899999999905, 0.00010475000000000068, 0.00010412500000000005, 0.00010411100000000048, 0.00010497199999999832, 0.00010484700000000166...</msg>
<status status="PASS" starttime="20201029 12:48:24.226" endtime="20201029 12:48:24.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.237" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 12:48:24.236" endtime="20201029 12:48:24.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.240" level="INFO">VALUE: [0.00010420800000000147, 0.00010450000000000043, 0.00010481899999999905, 0.00010475000000000068, 0.00010412500000000005, 0.00010411100000000048, 0.00010497199999999832, 0.00010484700000000166, 0.00010444400000000215, 0.00010411100000000048, 0.00010495900000000169, 0.0001050140000000005, 0.00010444400000000215, 0.00010425000000000018, 0.00010458299999999837, 0.00010436100000000073, 0.00010483299999999862, 0.00010476400000000025, 0.00010484800000000113, 0.0001043750000000003, 0.00010457000000000174, 0.00010455600000000217, 0.00010457000000000174, 0.00010497199999999832, 0.00010448600000000086, 0.00010440199999999997, 0.00010413899999999962, 0.00010490299999999994, 0.00010473599999999764, 0.00010417999999999886, 0.00010434699999999769, 0.00010469399999999893, 0.00010476400000000025, 0.00010488900000000037, 0.00010498600000000136, 0.00010447300000000076, 0.00010419399999999843, 0.00010450000000000043, 0.00010425000000000018, 0.00010458299999999837, 0.0001045689999999988, 0.00010434700000000116, 0.00010433299999999812, 0.00010495799999999875, 0.0001047360000000011, 0.0001046949999999984, 0.00010480599999999896, 0.00010465299999999969, 0.00010427799999999932, 0.00010422300000000051]</msg>
<status status="PASS" starttime="20201029 12:48:24.238" endtime="20201029 12:48:24.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.232" endtime="20201029 12:48:24.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:24.247" endtime="20201029 12:48:24.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.245" endtime="20201029 12:48:24.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.243" endtime="20201029 12:48:24.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.876" endtime="20201029 12:48:24.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:23.876" endtime="20201029 12:48:24.269"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.278" endtime="20201029 12:48:24.300"></status>
</kw>
<msg timestamp="20201029 12:48:24.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:24.277" endtime="20201029 12:48:24.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:24.301" endtime="20201029 12:48:24.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.304" endtime="20201029 12:48:24.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.274" endtime="20201029 12:48:24.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.272" endtime="20201029 12:48:24.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.313" endtime="20201029 12:48:24.601"></status>
</kw>
<msg timestamp="20201029 12:48:24.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021172111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021277375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:24.312" endtime="20201029 12:48:24.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021172111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021277375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:24.605" endtime="20201029 12:48:24.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.613" endtime="20201029 12:48:24.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.309" endtime="20201029 12:48:24.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.307" endtime="20201029 12:48:24.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:24.620" level="INFO">${RESULT} = [{'diff': 0.00010526400000000075}, {'diff': 0.00010577800000000082}, {'diff': 0.00010527800000000032}, {'diff': 0.0001053339999999986}, {'diff': 0.00010512500000000105}, {'diff': 0.0001052630000000012...</msg>
<status status="PASS" starttime="20201029 12:48:24.617" endtime="20201029 12:48:24.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:24.624" level="INFO">${ACCURACY} = {'diff': [0.00010526400000000075, 0.00010577800000000082, 0.00010527800000000032, 0.0001053339999999986, 0.00010512500000000105, 0.00010526300000000127, 0.00010601299999999855, 0.00010559699999999894,...</msg>
<status status="PASS" starttime="20201029 12:48:24.621" endtime="20201029 12:48:24.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.629" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 12:48:24.627" endtime="20201029 12:48:24.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.631" level="INFO">VALUE: [0.00010526400000000075, 0.00010577800000000082, 0.00010527800000000032, 0.0001053339999999986, 0.00010512500000000105, 0.00010526300000000127, 0.00010601299999999855, 0.00010559699999999894, 0.0001060279999999976, 0.00010530499999999998, 0.00010545799999999925, 0.00010581999999999953, 0.00010558400000000231, 0.00010556999999999928, 0.00010545899999999872, 0.00010567999999999689, 0.00010590200000000147, 0.00010513899999999715, 0.00010508299999999887, 0.00010577800000000082, 0.0001055689999999998, 0.00010581900000000005, 0.00010555500000000023, 0.00010550000000000143, 0.00010513899999999715, 0.00010520800000000247, 0.0001060140000000015, 0.00010516699999999976, 0.00010556999999999928, 0.00010526400000000075, 0.00010586199999999824, 0.0001053880000000014, 0.00010547199999999882, 0.00010601399999999803, 0.00010579200000000039, 0.0001060140000000015, 0.0001057079999999995, 0.00010547300000000176, 0.000105820000000003, 0.00010556999999999928, 0.00010565200000000122, 0.00010598600000000236, 0.00010599999999999846, 0.00010591600000000104, 0.0001053750000000013, 0.00010605500000000073, 0.00010534700000000216, 0.00010545899999999872, 0.00010517999999999986, 0.00010576400000000125]</msg>
<status status="PASS" starttime="20201029 12:48:24.630" endtime="20201029 12:48:24.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.625" endtime="20201029 12:48:24.633"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:24.637" endtime="20201029 12:48:24.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.635" endtime="20201029 12:48:24.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.634" endtime="20201029 12:48:24.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.270" endtime="20201029 12:48:24.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.269" endtime="20201029 12:48:24.658"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.667" endtime="20201029 12:48:24.691"></status>
</kw>
<msg timestamp="20201029 12:48:24.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:24.665" endtime="20201029 12:48:24.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:24.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:24.693" endtime="20201029 12:48:24.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.696" endtime="20201029 12:48:24.697"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.662" endtime="20201029 12:48:24.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.660" endtime="20201029 12:48:24.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:24.705" endtime="20201029 12:48:24.990"></status>
</kw>
<msg timestamp="20201029 12:48:24.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023471722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023578333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:24.703" endtime="20201029 12:48:24.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023471722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023578333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:24.995" endtime="20201029 12:48:25.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.003" endtime="20201029 12:48:25.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.701" endtime="20201029 12:48:25.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.699" endtime="20201029 12:48:25.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:25.010" level="INFO">${RESULT} = [{'diff': 0.00010661099999999951}, {'diff': 0.00010658300000000037}, {'diff': 0.00010708300000000087}, {'diff': 0.00010625000000000218}, {'diff': 0.0001068889999999989}, {'diff': 0.0001068330000000006...</msg>
<status status="PASS" starttime="20201029 12:48:25.006" endtime="20201029 12:48:25.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:25.014" level="INFO">${ACCURACY} = {'diff': [0.00010661099999999951, 0.00010658300000000037, 0.00010708300000000087, 0.00010625000000000218, 0.0001068889999999989, 0.00010683300000000062, 0.0001061949999999999, 0.00010672200000000007, ...</msg>
<status status="PASS" starttime="20201029 12:48:25.011" endtime="20201029 12:48:25.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.018" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 12:48:25.017" endtime="20201029 12:48:25.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.021" level="INFO">VALUE: [0.00010661099999999951, 0.00010658300000000037, 0.00010708300000000087, 0.00010625000000000218, 0.0001068889999999989, 0.00010683300000000062, 0.0001061949999999999, 0.00010672200000000007, 0.0001062499999999987, 0.00010659699999999994, 0.00010700000000000293, 0.00010658300000000037, 0.00010655499999999776, 0.00010688900000000237, 0.00010676399999999878, 0.00010643000000000111, 0.00010677799999999835, 0.0001061949999999999, 0.0001063339999999996, 0.000106208, 0.00010708300000000087, 0.00010645899999999972, 0.00010694500000000065, 0.0001067360000000031, 0.00010698599999999989, 0.00010659699999999994, 0.00010619399999999696, 0.0001067499999999992, 0.00010677799999999835, 0.00010673599999999964, 0.0001070690000000013, 0.00010695900000000022, 0.0001068889999999989, 0.00010613899999999815, 0.00010709700000000044, 0.00010611099999999901, 0.00010638799999999893, 0.00010661100000000298, 0.00010681900000000105, 0.00010661200000000245, 0.00010683299999999715, 0.00010687499999999933, 0.00010612499999999858, 0.00010701399999999903, 0.00010651399999999853, 0.00010629200000000089, 0.00010702800000000207, 0.00010681900000000105, 0.00010644400000000068, 0.00010702700000000259]</msg>
<status status="PASS" starttime="20201029 12:48:25.019" endtime="20201029 12:48:25.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.015" endtime="20201029 12:48:25.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:25.027" endtime="20201029 12:48:25.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.025" endtime="20201029 12:48:25.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.024" endtime="20201029 12:48:25.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.658" endtime="20201029 12:48:25.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:24.658" endtime="20201029 12:48:25.047"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.056" endtime="20201029 12:48:25.078"></status>
</kw>
<msg timestamp="20201029 12:48:25.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:25.055" endtime="20201029 12:48:25.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:25.079" endtime="20201029 12:48:25.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.082" endtime="20201029 12:48:25.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.052" endtime="20201029 12:48:25.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.050" endtime="20201029 12:48:25.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.092" endtime="20201029 12:48:25.379"></status>
</kw>
<msg timestamp="20201029 12:48:25.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020061319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02016875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:25.090" endtime="20201029 12:48:25.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020061319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02016875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:48:25.383" endtime="20201029 12:48:25.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.391" endtime="20201029 12:48:25.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.087" endtime="20201029 12:48:25.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.085" endtime="20201029 12:48:25.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:25.398" level="INFO">${RESULT} = [{'diff': 0.00010743099999999811}, {'diff': 0.00010752800000000257}, {'diff': 0.00010730500000000198}, {'diff': 0.0001080829999999984}, {'diff': 0.00010712499999999958}, {'diff': 0.0001077639999999997...</msg>
<status status="PASS" starttime="20201029 12:48:25.395" endtime="20201029 12:48:25.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:25.403" level="INFO">${ACCURACY} = {'diff': [0.00010743099999999811, 0.00010752800000000257, 0.00010730500000000198, 0.0001080829999999984, 0.00010712499999999958, 0.00010776399999999978, 0.00010763899999999965, 0.00010774999999999674,...</msg>
<status status="PASS" starttime="20201029 12:48:25.399" endtime="20201029 12:48:25.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.408" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 12:48:25.407" endtime="20201029 12:48:25.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.410" level="INFO">VALUE: [0.00010743099999999811, 0.00010752800000000257, 0.00010730500000000198, 0.0001080829999999984, 0.00010712499999999958, 0.00010776399999999978, 0.00010763899999999965, 0.00010774999999999674, 0.00010738799999999993, 0.00010717999999999839, 0.00010765299999999922, 0.00010729099999999894, 0.00010727799999999885, 0.00010751399999999953, 0.00010727799999999885, 0.00010768100000000183, 0.00010765299999999922, 0.00010800000000000046, 0.00010726400000000275, 0.00010772299999999707, 0.00010751300000000005, 0.00010726399999999928, 0.00010765299999999922, 0.00010740299999999897, 0.00010726399999999928, 0.00010767999999999889, 0.00010722200000000057, 0.00010730600000000146, 0.0001073889999999994, 0.00010763899999999965, 0.00010718099999999786, 0.00010766699999999879, 0.00010752800000000257, 0.00010758300000000137, 0.0001077500000000002, 0.00010798599999999742, 0.00010733300000000112, 0.0001075279999999991, 0.0001078889999999999, 0.00010718100000000133, 0.0001078340000000011, 0.00010741700000000201, 0.00010726399999999928, 0.0001077630000000003, 0.0001075699999999978, 0.00010805499999999926, 0.00010784700000000119, 0.0001073889999999994, 0.00010755499999999876, 0.00010776399999999978]</msg>
<status status="PASS" starttime="20201029 12:48:25.409" endtime="20201029 12:48:25.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.404" endtime="20201029 12:48:25.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:25.416" endtime="20201029 12:48:25.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.414" endtime="20201029 12:48:25.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.413" endtime="20201029 12:48:25.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.048" endtime="20201029 12:48:25.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.048" endtime="20201029 12:48:25.436"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.445" endtime="20201029 12:48:25.467"></status>
</kw>
<msg timestamp="20201029 12:48:25.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:25.444" endtime="20201029 12:48:25.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:25.468" endtime="20201029 12:48:25.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.471" endtime="20201029 12:48:25.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.441" endtime="20201029 12:48:25.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.439" endtime="20201029 12:48:25.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.480" endtime="20201029 12:48:25.766"></status>
</kw>
<msg timestamp="20201029 12:48:25.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020318347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020426722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:25.479" endtime="20201029 12:48:25.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020318347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020426722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:25.771" endtime="20201029 12:48:25.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.779" endtime="20201029 12:48:25.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.476" endtime="20201029 12:48:25.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.474" endtime="20201029 12:48:25.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:25.786" level="INFO">${RESULT} = [{'diff': 0.00010837500000000083}, {'diff': 0.00010877800000000035}, {'diff': 0.00010849999999999749}, {'diff': 0.00010862499999999761}, {'diff': 0.00010905599999999974}, {'diff': 0.000108429999999999...</msg>
<status status="PASS" starttime="20201029 12:48:25.783" endtime="20201029 12:48:25.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:25.790" level="INFO">${ACCURACY} = {'diff': [0.00010837500000000083, 0.00010877800000000035, 0.00010849999999999749, 0.00010862499999999761, 0.00010905599999999974, 0.00010842999999999964, 0.00010859700000000194, 0.00010850000000000096...</msg>
<status status="PASS" starttime="20201029 12:48:25.787" endtime="20201029 12:48:25.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.795" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 12:48:25.794" endtime="20201029 12:48:25.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.797" level="INFO">VALUE: [0.00010837500000000083, 0.00010877800000000035, 0.00010849999999999749, 0.00010862499999999761, 0.00010905599999999974, 0.00010842999999999964, 0.00010859700000000194, 0.00010850000000000096, 0.00010847200000000182, 0.00010865300000000022, 0.0001083890000000004, 0.00010841700000000301, 0.00010905500000000026, 0.00010827799999999985, 0.00010833299999999865, 0.00010848600000000139, 0.00010895899999999875, 0.00010812499999999711, 0.00010812500000000058, 0.00010851300000000105, 0.0001083340000000016, 0.0001084020000000005, 0.00010847199999999835, 0.00010827799999999985, 0.00010901400000000103, 0.0001090699999999993, 0.00010822200000000157, 0.00010812500000000058, 0.00010818099999999886, 0.00010890300000000047, 0.00010840299999999997, 0.00010874999999999774, 0.00010863900000000065, 0.00010883300000000262, 0.00010831899999999908, 0.00010906899999999983, 0.00010879199999999992, 0.00010815299999999972, 0.00010829199999999942, 0.00010905599999999974, 0.00010844500000000215, 0.00010831999999999856, 0.00010813900000000015, 0.00010840299999999997, 0.0001085829999999989, 0.00010838800000000093, 0.0001088890000000009, 0.00010812499999999711, 0.0001088890000000009, 0.00010819399999999896]</msg>
<status status="PASS" starttime="20201029 12:48:25.796" endtime="20201029 12:48:25.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.791" endtime="20201029 12:48:25.799"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:25.802" endtime="20201029 12:48:25.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.801" endtime="20201029 12:48:25.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.800" endtime="20201029 12:48:25.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.437" endtime="20201029 12:48:25.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.437" endtime="20201029 12:48:25.823"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.832" endtime="20201029 12:48:25.854"></status>
</kw>
<msg timestamp="20201029 12:48:25.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:25.831" endtime="20201029 12:48:25.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:25.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:25.856" endtime="20201029 12:48:25.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.859" endtime="20201029 12:48:25.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.828" endtime="20201029 12:48:25.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.826" endtime="20201029 12:48:25.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:25.868" endtime="20201029 12:48:26.154"></status>
</kw>
<msg timestamp="20201029 12:48:26.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021081556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021191292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:25.866" endtime="20201029 12:48:26.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021081556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021191292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:26.158" endtime="20201029 12:48:26.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.167" endtime="20201029 12:48:26.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.864" endtime="20201029 12:48:26.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.862" endtime="20201029 12:48:26.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:26.173" level="INFO">${RESULT} = [{'diff': 0.00010973599999999917}, {'diff': 0.0001100700000000003}, {'diff': 0.00010986099999999929}, {'diff': 0.0001093340000000026}, {'diff': 0.00010962500000000208}, {'diff': 0.00010955500000000076...</msg>
<status status="PASS" starttime="20201029 12:48:26.170" endtime="20201029 12:48:26.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:26.178" level="INFO">${ACCURACY} = {'diff': [0.00010973599999999917, 0.0001100700000000003, 0.00010986099999999929, 0.0001093340000000026, 0.00010962500000000208, 0.00010955500000000076, 0.00010956900000000033, 0.00010983300000000015, ...</msg>
<status status="PASS" starttime="20201029 12:48:26.174" endtime="20201029 12:48:26.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.182" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 12:48:26.181" endtime="20201029 12:48:26.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.185" level="INFO">VALUE: [0.00010973599999999917, 0.0001100700000000003, 0.00010986099999999929, 0.0001093340000000026, 0.00010962500000000208, 0.00010955500000000076, 0.00010956900000000033, 0.00010983300000000015, 0.00010963899999999818, 0.0001093890000000014, 0.0001100700000000003, 0.0001098890000000019, 0.00010919499999999943, 0.00010936099999999879, 0.00010955500000000076, 0.00010983300000000015, 0.00010923599999999867, 0.00010990300000000147, 0.00011001400000000203, 0.00010950000000000196, 0.00010981900000000058, 0.00010955600000000024, 0.00010990300000000147, 0.00010949999999999849, 0.00010947299999999882, 0.0001100700000000003, 0.00010954100000000119, 0.00010952699999999815, 0.00010980499999999754, 0.00010984699999999972, 0.00010963900000000165, 0.00010918000000000039, 0.0001093890000000014, 0.00010909700000000244, 0.00010947299999999882, 0.00010944499999999968, 0.00010925000000000171, 0.00010997299999999932, 0.00010912499999999811, 0.00010922200000000257, 0.0001095829999999999, 0.00011002799999999813, 0.00010947199999999935, 0.00010918000000000039, 0.00011005599999999727, 0.00010931999999999956, 0.00010944499999999968, 0.00010950000000000196, 0.00010919399999999996, 0.0001095699999999998]</msg>
<status status="PASS" starttime="20201029 12:48:26.183" endtime="20201029 12:48:26.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.178" endtime="20201029 12:48:26.187"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:26.191" endtime="20201029 12:48:26.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.189" endtime="20201029 12:48:26.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.188" endtime="20201029 12:48:26.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.824" endtime="20201029 12:48:26.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:25.823" endtime="20201029 12:48:26.212"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.221" endtime="20201029 12:48:26.242"></status>
</kw>
<msg timestamp="20201029 12:48:26.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:26.219" endtime="20201029 12:48:26.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:26.244" endtime="20201029 12:48:26.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.246" endtime="20201029 12:48:26.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.216" endtime="20201029 12:48:26.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.214" endtime="20201029 12:48:26.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.256" endtime="20201029 12:48:26.541"></status>
</kw>
<msg timestamp="20201029 12:48:26.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020104986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020215292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:26.254" endtime="20201029 12:48:26.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020104986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020215292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:26.545" endtime="20201029 12:48:26.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.554" endtime="20201029 12:48:26.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.251" endtime="20201029 12:48:26.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.250" endtime="20201029 12:48:26.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:26.560" level="INFO">${RESULT} = [{'diff': 0.00011030600000000099}, {'diff': 0.00011082000000000106}, {'diff': 0.00011013900000000215}, {'diff': 0.00011040199999999903}, {'diff': 0.00011020800000000053}, {'diff': 0.000110458000000000...</msg>
<status status="PASS" starttime="20201029 12:48:26.557" endtime="20201029 12:48:26.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:26.565" level="INFO">${ACCURACY} = {'diff': [0.00011030600000000099, 0.00011082000000000106, 0.00011013900000000215, 0.00011040199999999903, 0.00011020800000000053, 0.00011045800000000078, 0.00011097200000000085, 0.00011033300000000065...</msg>
<status status="PASS" starttime="20201029 12:48:26.561" endtime="20201029 12:48:26.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.570" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 12:48:26.569" endtime="20201029 12:48:26.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.572" level="INFO">VALUE: [0.00011030600000000099, 0.00011082000000000106, 0.00011013900000000215, 0.00011040199999999903, 0.00011020800000000053, 0.00011045800000000078, 0.00011097200000000085, 0.00011033300000000065, 0.00011019500000000043, 0.00011018100000000086, 0.00011105600000000174, 0.00011062499999999961, 0.00011076399999999931, 0.00011012499999999911, 0.00011099999999999999, 0.0001102220000000001, 0.00011062499999999961, 0.0001105280000000021, 0.00011101400000000303, 0.00011013900000000215, 0.0001108480000000002, 0.00011108299999999793, 0.00011077799999999888, 0.00011074999999999974, 0.00011076399999999931, 0.00011069500000000093, 0.00011072300000000007, 0.00011056900000000133, 0.0001105549999999983, 0.00011070800000000103, 0.00011012499999999911, 0.00011080499999999854, 0.00011111100000000054, 0.00011051399999999906, 0.00011058400000000038, 0.0001107090000000005, 0.00011063899999999918, 0.00011063899999999918, 0.00011048699999999939, 0.00011031900000000108, 0.0001102220000000001, 0.00011020800000000053, 0.00011084700000000072, 0.00011026399999999881, 0.00011031900000000108, 0.00011058400000000038, 0.00011037500000000283, 0.00011026400000000228, 0.00011101399999999956, 0.00011095799999999781]</msg>
<status status="PASS" starttime="20201029 12:48:26.571" endtime="20201029 12:48:26.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.566" endtime="20201029 12:48:26.574"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:26.578" endtime="20201029 12:48:26.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.576" endtime="20201029 12:48:26.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.575" endtime="20201029 12:48:26.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.213" endtime="20201029 12:48:26.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.212" endtime="20201029 12:48:26.598"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.607" endtime="20201029 12:48:26.629"></status>
</kw>
<msg timestamp="20201029 12:48:26.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:26.606" endtime="20201029 12:48:26.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:26.630" endtime="20201029 12:48:26.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.633" endtime="20201029 12:48:26.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.603" endtime="20201029 12:48:26.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.601" endtime="20201029 12:48:26.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.642" endtime="20201029 12:48:26.929"></status>
</kw>
<msg timestamp="20201029 12:48:26.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020090181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020201458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:26.641" endtime="20201029 12:48:26.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020090181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020201458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:26.934" endtime="20201029 12:48:26.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.942" endtime="20201029 12:48:26.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.638" endtime="20201029 12:48:26.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.636" endtime="20201029 12:48:26.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:26.949" level="INFO">${RESULT} = [{'diff': 0.0001112769999999999}, {'diff': 0.00011208299999999893}, {'diff': 0.00011145800000000178}, {'diff': 0.00011148600000000092}, {'diff': 0.00011156900000000233}, {'diff': 0.0001119439999999992...</msg>
<status status="PASS" starttime="20201029 12:48:26.945" endtime="20201029 12:48:26.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:26.953" level="INFO">${ACCURACY} = {'diff': [0.0001112769999999999, 0.00011208299999999893, 0.00011145800000000178, 0.00011148600000000092, 0.00011156900000000233, 0.00011194399999999924, 0.00011187500000000086, 0.00011125000000000024,...</msg>
<status status="PASS" starttime="20201029 12:48:26.950" endtime="20201029 12:48:26.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.958" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 12:48:26.957" endtime="20201029 12:48:26.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:26.961" level="INFO">VALUE: [0.0001112769999999999, 0.00011208299999999893, 0.00011145800000000178, 0.00011148600000000092, 0.00011156900000000233, 0.00011194399999999924, 0.00011187500000000086, 0.00011125000000000024, 0.00011138899999999993, 0.00011126399999999981, 0.00011176300000000083, 0.00011126399999999981, 0.00011201400000000056, 0.0001114029999999995, 0.00011144400000000221, 0.00011167999999999942, 0.00011192999999999967, 0.00011120799999999806, 0.00011127799999999938, 0.00011122300000000057, 0.00011145900000000125, 0.00011118100000000186, 0.00011116599999999935, 0.00011176400000000031, 0.00011119399999999849, 0.00011183299999999868, 0.00011166699999999932, 0.00011195799999999881, 0.00011144499999999821, 0.00011125000000000024, 0.00011115299999999925, 0.00011126399999999981, 0.00011186100000000129, 0.00011145799999999831, 0.00011125000000000024, 0.0001120419999999997, 0.000111596999999998, 0.00011194400000000271, 0.00011148600000000092, 0.00011111100000000054, 0.00011205599999999927, 0.00011195899999999828, 0.000111903, 0.00011145900000000125, 0.00011188900000000043, 0.00011193099999999914, 0.00011175000000000074, 0.0001120549999999998, 0.00011138899999999993, 0.00011201400000000056]</msg>
<status status="PASS" starttime="20201029 12:48:26.959" endtime="20201029 12:48:26.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.954" endtime="20201029 12:48:26.962"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:26.966" endtime="20201029 12:48:26.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.964" endtime="20201029 12:48:26.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.963" endtime="20201029 12:48:26.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.599" endtime="20201029 12:48:26.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.599" endtime="20201029 12:48:26.987"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:26.996" endtime="20201029 12:48:27.018"></status>
</kw>
<msg timestamp="20201029 12:48:27.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:26.994" endtime="20201029 12:48:27.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:27.019" endtime="20201029 12:48:27.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.022" endtime="20201029 12:48:27.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.992" endtime="20201029 12:48:27.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.989" endtime="20201029 12:48:27.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.031" endtime="20201029 12:48:27.318"></status>
</kw>
<msg timestamp="20201029 12:48:27.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021259708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021372722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:27.030" endtime="20201029 12:48:27.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021259708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021372722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:27.322" endtime="20201029 12:48:27.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.330" endtime="20201029 12:48:27.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.027" endtime="20201029 12:48:27.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.025" endtime="20201029 12:48:27.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:27.337" level="INFO">${RESULT} = [{'diff': 0.00011301400000000156}, {'diff': 0.00011269399999999999}, {'diff': 0.00011259700000000247}, {'diff': 0.00011298599999999895}, {'diff': 0.00011226400000000081}, {'diff': 0.000112334000000002...</msg>
<status status="PASS" starttime="20201029 12:48:27.334" endtime="20201029 12:48:27.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:27.341" level="INFO">${ACCURACY} = {'diff': [0.00011301400000000156, 0.00011269399999999999, 0.00011259700000000247, 0.00011298599999999895, 0.00011226400000000081, 0.00011233400000000213, 0.00011288900000000143, 0.00011280600000000002...</msg>
<status status="PASS" starttime="20201029 12:48:27.338" endtime="20201029 12:48:27.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.346" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 12:48:27.345" endtime="20201029 12:48:27.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.348" level="INFO">VALUE: [0.00011301400000000156, 0.00011269399999999999, 0.00011259700000000247, 0.00011298599999999895, 0.00011226400000000081, 0.00011233400000000213, 0.00011288900000000143, 0.00011280600000000002, 0.00011270799999999956, 0.00011212500000000111, 0.0001127359999999987, 0.00011295799999999981, 0.0001123749999999979, 0.00011212500000000111, 0.00011223700000000114, 0.00011225000000000124, 0.00011301400000000156, 0.00011226400000000081, 0.00011220899999999853, 0.00011304100000000122, 0.00011276399999999784, 0.00011280500000000054, 0.00011290299999999753, 0.00011238900000000093, 0.00011219399999999949, 0.00011225000000000124, 0.0001130420000000007, 0.00011213900000000068, 0.00011233399999999866, 0.00011252800000000063, 0.00011244499999999921, 0.00011283300000000315, 0.00011231899999999961, 0.00011251399999999759, 0.00011294400000000024, 0.00011294400000000024, 0.00011249999999999802, 0.00011261200000000152, 0.00011276400000000131, 0.00011231999999999909, 0.00011301399999999809, 0.00011261099999999857, 0.00011213899999999721, 0.00011255599999999977, 0.00011212499999999764, 0.00011248599999999845, 0.00011215300000000025, 0.00011237500000000136, 0.00011261099999999857, 0.00011232000000000256]</msg>
<status status="PASS" starttime="20201029 12:48:27.347" endtime="20201029 12:48:27.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.342" endtime="20201029 12:48:27.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:27.355" endtime="20201029 12:48:27.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.353" endtime="20201029 12:48:27.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.352" endtime="20201029 12:48:27.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.988" endtime="20201029 12:48:27.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:26.987" endtime="20201029 12:48:27.375"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.384" endtime="20201029 12:48:27.405"></status>
</kw>
<msg timestamp="20201029 12:48:27.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:27.383" endtime="20201029 12:48:27.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:27.407" endtime="20201029 12:48:27.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.410" endtime="20201029 12:48:27.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.380" endtime="20201029 12:48:27.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.378" endtime="20201029 12:48:27.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.419" endtime="20201029 12:48:27.704"></status>
</kw>
<msg timestamp="20201029 12:48:27.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020177847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020291319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:27.417" endtime="20201029 12:48:27.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020177847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020291319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:27.708" endtime="20201029 12:48:27.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.717" endtime="20201029 12:48:27.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.415" endtime="20201029 12:48:27.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.413" endtime="20201029 12:48:27.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:27.723" level="INFO">${RESULT} = [{'diff': 0.00011347199999999988}, {'diff': 0.00011311099999999907}, {'diff': 0.00011327800000000138}, {'diff': 0.00011331900000000061}, {'diff': 0.00011381900000000111}, {'diff': 0.000113749999999999...</msg>
<status status="PASS" starttime="20201029 12:48:27.720" endtime="20201029 12:48:27.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:27.728" level="INFO">${ACCURACY} = {'diff': [0.00011347199999999988, 0.00011311099999999907, 0.00011327800000000138, 0.00011331900000000061, 0.00011381900000000111, 0.00011374999999999927, 0.00011388899999999896, 0.00011398699999999942...</msg>
<status status="PASS" starttime="20201029 12:48:27.724" endtime="20201029 12:48:27.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.733" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 12:48:27.732" endtime="20201029 12:48:27.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.736" level="INFO">VALUE: [0.00011347199999999988, 0.00011311099999999907, 0.00011327800000000138, 0.00011331900000000061, 0.00011381900000000111, 0.00011374999999999927, 0.00011388899999999896, 0.00011398699999999942, 0.00011401399999999909, 0.00011362500000000261, 0.00011395800000000081, 0.00011318000000000092, 0.00011334699999999975, 0.0001137359999999997, 0.00011348599999999945, 0.0001139160000000021, 0.00011344400000000074, 0.00011395800000000081, 0.00011374999999999927, 0.00011318100000000039, 0.00011347300000000282, 0.00011330600000000052, 0.00011390199999999906, 0.00011362499999999914, 0.00011401400000000256, 0.00011402800000000213, 0.00011338900000000193, 0.0001138749999999994, 0.00011405600000000127, 0.00011315299999999778, 0.00011311099999999907, 0.00011407000000000084, 0.00011338899999999846, 0.00011347199999999988, 0.0001133749999999989, 0.00011316700000000082, 0.00011333300000000018, 0.00011399999999999952, 0.00011402799999999866, 0.00011376399999999884, 0.00011338900000000193, 0.00011358399999999991, 0.00011348599999999945, 0.00011368100000000089, 0.00011333399999999966, 0.00011312499999999864, 0.00011370800000000056, 0.00011394400000000124, 0.00011402699999999918, 0.0001135420000000012]</msg>
<status status="PASS" starttime="20201029 12:48:27.734" endtime="20201029 12:48:27.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.729" endtime="20201029 12:48:27.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:27.741" endtime="20201029 12:48:27.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.739" endtime="20201029 12:48:27.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.738" endtime="20201029 12:48:27.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.376" endtime="20201029 12:48:27.761"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.376" endtime="20201029 12:48:27.761"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.770" endtime="20201029 12:48:27.792"></status>
</kw>
<msg timestamp="20201029 12:48:27.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:27.769" endtime="20201029 12:48:27.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:27.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:27.794" endtime="20201029 12:48:27.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.796" endtime="20201029 12:48:27.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.766" endtime="20201029 12:48:27.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.764" endtime="20201029 12:48:27.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:27.806" endtime="20201029 12:48:28.093"></status>
</kw>
<msg timestamp="20201029 12:48:28.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020158236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020272847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:27.804" endtime="20201029 12:48:28.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020158236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020272847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:28.097" endtime="20201029 12:48:28.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.106" endtime="20201029 12:48:28.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.801" endtime="20201029 12:48:28.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.800" endtime="20201029 12:48:28.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:28.112" level="INFO">${RESULT} = [{'diff': 0.00011461100000000057}, {'diff': 0.00011480499999999907}, {'diff': 0.00011451400000000306}, {'diff': 0.00011506900000000236}, {'diff': 0.00011438900000000293}, {'diff': 0.000114444000000001...</msg>
<status status="PASS" starttime="20201029 12:48:28.109" endtime="20201029 12:48:28.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:28.116" level="INFO">${ACCURACY} = {'diff': [0.00011461100000000057, 0.00011480499999999907, 0.00011451400000000306, 0.00011506900000000236, 0.00011438900000000293, 0.00011444400000000174, 0.00011481899999999864, 0.00011463899999999971...</msg>
<status status="PASS" starttime="20201029 12:48:28.113" endtime="20201029 12:48:28.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.121" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 12:48:28.120" endtime="20201029 12:48:28.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.123" level="INFO">VALUE: [0.00011461100000000057, 0.00011480499999999907, 0.00011451400000000306, 0.00011506900000000236, 0.00011438900000000293, 0.00011444400000000174, 0.00011481899999999864, 0.00011463899999999971, 0.00011494499999999824, 0.0001145559999999983, 0.00011420900000000053, 0.00011463899999999971, 0.00011472199999999766, 0.00011411100000000007, 0.00011415299999999878, 0.00011480500000000254, 0.00011480600000000202, 0.00011501400000000009, 0.00011412499999999964, 0.00011465299999999928, 0.00011481999999999812, 0.00011451399999999959, 0.0001150559999999988, 0.0001147360000000007, 0.00011424999999999977, 0.00011430500000000204, 0.00011443100000000164, 0.00011450000000000002, 0.00011488899999999996, 0.00011463899999999971, 0.00011451399999999959, 0.00011457000000000134, 0.00011494500000000171, 0.00011469499999999799, 0.00011483300000000168, 0.00011501300000000061, 0.00011431900000000161, 0.00011470799999999809, 0.00011480500000000254, 0.00011451399999999959, 0.00011465300000000275, 0.00011440299999999903, 0.00011433399999999719, 0.00011419500000000096, 0.00011488899999999996, 0.00011484700000000125, 0.00011498699999999695, 0.0001147909999999995, 0.0001145689999999984, 0.00011502800000000313]</msg>
<status status="PASS" starttime="20201029 12:48:28.122" endtime="20201029 12:48:28.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.117" endtime="20201029 12:48:28.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:28.129" endtime="20201029 12:48:28.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.127" endtime="20201029 12:48:28.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.126" endtime="20201029 12:48:28.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.762" endtime="20201029 12:48:28.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:27.762" endtime="20201029 12:48:28.149"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.159" endtime="20201029 12:48:28.184"></status>
</kw>
<msg timestamp="20201029 12:48:28.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:28.157" endtime="20201029 12:48:28.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:28.186" endtime="20201029 12:48:28.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.188" endtime="20201029 12:48:28.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.154" endtime="20201029 12:48:28.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.152" endtime="20201029 12:48:28.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.198" endtime="20201029 12:48:28.484"></status>
</kw>
<msg timestamp="20201029 12:48:28.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023655153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237705, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:28.196" endtime="20201029 12:48:28.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023655153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0237705, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:48:28.488" endtime="20201029 12:48:28.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.496" endtime="20201029 12:48:28.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.194" endtime="20201029 12:48:28.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.192" endtime="20201029 12:48:28.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:28.503" level="INFO">${RESULT} = [{'diff': 0.00011534699999999828}, {'diff': 0.00011597199999999891}, {'diff': 0.00011577800000000041}, {'diff': 0.00011581999999999912}, {'diff': 0.00011558399999999844}, {'diff': 0.000115959000000002...</msg>
<status status="PASS" starttime="20201029 12:48:28.500" endtime="20201029 12:48:28.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:28.507" level="INFO">${ACCURACY} = {'diff': [0.00011534699999999828, 0.00011597199999999891, 0.00011577800000000041, 0.00011581999999999912, 0.00011558399999999844, 0.00011595900000000228, 0.00011602800000000066, 0.00011583299999999921...</msg>
<status status="PASS" starttime="20201029 12:48:28.504" endtime="20201029 12:48:28.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.512" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 12:48:28.510" endtime="20201029 12:48:28.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.514" level="INFO">VALUE: [0.00011534699999999828, 0.00011597199999999891, 0.00011577800000000041, 0.00011581999999999912, 0.00011558399999999844, 0.00011595900000000228, 0.00011602800000000066, 0.00011583299999999921, 0.00011569499999999899, 0.00011562500000000114, 0.00011516599999999988, 0.00011609699999999903, 0.00011590300000000053, 0.00011513900000000021, 0.00011532000000000209, 0.00011519399999999902, 0.00011586099999999835, 0.00011602800000000066, 0.00011520800000000206, 0.00011601300000000161, 0.0001154299999999997, 0.00011566600000000038, 0.0001157360000000017, 0.00011545799999999884, 0.00011537499999999742, 0.00011556999999999887, 0.00011516699999999935, 0.0001160689999999999, 0.00011556999999999887, 0.00011533299999999871, 0.00011583299999999921, 0.00011566699999999985, 0.00011608299999999946, 0.00011601400000000109, 0.00011577800000000041, 0.00011576399999999737, 0.00011512500000000064, 0.00011558400000000191, 0.00011545799999999884, 0.00011581999999999912, 0.00011552700000000068, 0.00011583300000000268, 0.00011567999999999995, 0.00011570799999999909, 0.0001154299999999997, 0.00011555499999999982, 0.00011568099999999942, 0.00011520799999999859, 0.00011519400000000249, 0.00011583400000000216]</msg>
<status status="PASS" starttime="20201029 12:48:28.513" endtime="20201029 12:48:28.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.508" endtime="20201029 12:48:28.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:28.520" endtime="20201029 12:48:28.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.519" endtime="20201029 12:48:28.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.517" endtime="20201029 12:48:28.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.150" endtime="20201029 12:48:28.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.150" endtime="20201029 12:48:28.541"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.550" endtime="20201029 12:48:28.570"></status>
</kw>
<msg timestamp="20201029 12:48:28.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:28.549" endtime="20201029 12:48:28.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:28.572" endtime="20201029 12:48:28.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.574" endtime="20201029 12:48:28.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.546" endtime="20201029 12:48:28.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.544" endtime="20201029 12:48:28.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.583" endtime="20201029 12:48:28.873"></status>
</kw>
<msg timestamp="20201029 12:48:28.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020480417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020596986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:28.582" endtime="20201029 12:48:28.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020480417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020596986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:28.878" endtime="20201029 12:48:28.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:28.886" endtime="20201029 12:48:28.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.579" endtime="20201029 12:48:28.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.578" endtime="20201029 12:48:28.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:28.892" level="INFO">${RESULT} = [{'diff': 0.0001165690000000004}, {'diff': 0.00011652800000000116}, {'diff': 0.0001170690000000009}, {'diff': 0.00011676400000000184}, {'diff': 0.00011609699999999903}, {'diff': 0.00011677799999999794...</msg>
<status status="PASS" starttime="20201029 12:48:28.889" endtime="20201029 12:48:28.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:48:28.897" level="INFO">${ACCURACY} = {'diff': [0.0001165690000000004, 0.00011652800000000116, 0.0001170690000000009, 0.00011676400000000184, 0.00011609699999999903, 0.00011677799999999794, 0.0001162499999999983, 0.00011612500000000164, 0...</msg>
<status status="PASS" starttime="20201029 12:48:28.893" endtime="20201029 12:48:28.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.902" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 12:48:28.901" endtime="20201029 12:48:28.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.905" level="INFO">VALUE: [0.0001165690000000004, 0.00011652800000000116, 0.0001170690000000009, 0.00011676400000000184, 0.00011609699999999903, 0.00011677799999999794, 0.0001162499999999983, 0.00011612500000000164, 0.0001170560000000008, 0.00011622199999999916, 0.0001170690000000009, 0.00011688900000000196, 0.0001160689999999999, 0.00011677800000000141, 0.00011702800000000166, 0.00011656999999999987, 0.0001165560000000003, 0.00011701399999999862, 0.0001165560000000003, 0.00011693100000000067, 0.00011701299999999915, 0.00011681900000000064, 0.00011611100000000207, 0.00011643100000000017, 0.0001170690000000009, 0.00011662500000000214, 0.00011640300000000103, 0.00011675000000000227, 0.00011700000000000252, 0.00011668099999999695, 0.00011658299999999996, 0.00011609699999999903, 0.0001168750000000024, 0.00011626400000000134, 0.00011690300000000153, 0.00011620799999999959, 0.0001169170000000011, 0.00011699999999999905, 0.00011613900000000121, 0.00011683399999999969, 0.00011645900000000278, 0.00011645799999999984, 0.0001162369999999982, 0.0001168750000000024, 0.0001170690000000009, 0.00011613900000000121, 0.00011708300000000046, 0.0001165560000000003, 0.0001168750000000024, 0.00011633400000000266]</msg>
<status status="PASS" starttime="20201029 12:48:28.903" endtime="20201029 12:48:28.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.898" endtime="20201029 12:48:28.906"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:28.910" endtime="20201029 12:48:28.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.908" endtime="20201029 12:48:28.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.907" endtime="20201029 12:48:28.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.542" endtime="20201029 12:48:28.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.541" endtime="20201029 12:48:28.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:50.094" endtime="20201029 12:48:28.931"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:50.022" endtime="20201029 12:48:28.931" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:47:08.602" endtime="20201029 12:48:28.935"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:48:28.989" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:48:28.997" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:48:29.993" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:48:28.988" endtime="20201029 12:48:29.994"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:48:30.997" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 12:48:29.995" endtime="20201029 12:48:30.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.987" endtime="20201029 12:48:31.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:31.010" endtime="20201029 12:48:31.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.004" endtime="20201029 12:48:31.246"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:31.259" endtime="20201029 12:48:31.282"></status>
</kw>
<msg timestamp="20201029 12:48:31.283" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:31.257" endtime="20201029 12:48:31.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:31.285" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:31.284" endtime="20201029 12:48:31.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:31.291" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:31.288" endtime="20201029 12:48:31.292"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:31.255" endtime="20201029 12:48:31.293"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:31.252" endtime="20201029 12:48:31.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.251" endtime="20201029 12:48:31.294"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:31.300" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:31.299" endtime="20201029 12:48:31.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.295" endtime="20201029 12:48:31.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.250" endtime="20201029 12:48:31.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.250" endtime="20201029 12:48:31.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:31.303" endtime="20201029 12:48:31.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.248" endtime="20201029 12:48:31.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:31.306" endtime="20201029 12:48:31.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.247" endtime="20201029 12:48:31.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:28.985" endtime="20201029 12:48:31.308"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:31.314" endtime="20201029 12:48:31.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.313" endtime="20201029 12:48:31.334"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:31.348" endtime="20201029 12:48:31.367"></status>
</kw>
<msg timestamp="20201029 12:48:31.367" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:31.346" endtime="20201029 12:48:31.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:31.370" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:31.368" endtime="20201029 12:48:31.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:31.374" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:31.371" endtime="20201029 12:48:31.374"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:31.343" endtime="20201029 12:48:31.375"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:31.341" endtime="20201029 12:48:31.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.340" endtime="20201029 12:48:31.376"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:31.380" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:31.379" endtime="20201029 12:48:31.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.377" endtime="20201029 12:48:31.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.339" endtime="20201029 12:48:31.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.338" endtime="20201029 12:48:31.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:31.381" endtime="20201029 12:48:31.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.337" endtime="20201029 12:48:31.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.335" endtime="20201029 12:48:31.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.311" endtime="20201029 12:48:31.384"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:31.392" endtime="20201029 12:48:37.520"></status>
</kw>
<msg timestamp="20201029 12:48:37.521" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:31.391" endtime="20201029 12:48:37.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.526" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:37.523" endtime="20201029 12:48:37.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.529" endtime="20201029 12:48:37.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.388" endtime="20201029 12:48:37.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.386" endtime="20201029 12:48:37.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:37.540" level="INFO">${RESULT} = {'bg-timer-count': 0, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:48:37.536" endtime="20201029 12:48:37.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.549" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:37.547" endtime="20201029 12:48:37.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.554" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:37.552" endtime="20201029 12:48:37.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.542" endtime="20201029 12:48:37.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.564" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:37.562" endtime="20201029 12:48:37.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.569" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:37.567" endtime="20201029 12:48:37.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.557" endtime="20201029 12:48:37.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.575" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:37.574" endtime="20201029 12:48:37.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.577" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 12:48:37.576" endtime="20201029 12:48:37.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.571" endtime="20201029 12:48:37.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.584" endtime="20201029 12:48:37.871"></status>
</kw>
<msg timestamp="20201029 12:48:37.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067803722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167831472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:37.583" endtime="20201029 12:48:37.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067803722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167831472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:37.874" endtime="20201029 12:48:37.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.880" endtime="20201029 12:48:37.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.580" endtime="20201029 12:48:37.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.578" endtime="20201029 12:48:37.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:37.887" level="INFO">${FILTERED} = [{'diff': 0.10002775000000001}, {'diff': 0.10000925}, {'diff': 0.100008708}, {'diff': 0.100009236}, {'diff': 0.100009236}, {'diff': 0.100008722}, {'diff': 0.100009236}, {'diff': 5.409999999095305e-07}...</msg>
<status status="PASS" starttime="20201029 12:48:37.884" endtime="20201029 12:48:37.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:37.890" level="INFO">${RESULT} = {'diff': [0.10002775000000001, 0.10000925, 0.100008708, 0.100009236, 0.100009236, 0.100008722, 0.100009236, 5.409999999095305e-07, 5.409999999095305e-07, 0.10000927700000006, 0.10000922299999981, 5.40...</msg>
<status status="PASS" starttime="20201029 12:48:37.888" endtime="20201029 12:48:37.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.894" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:37.893" endtime="20201029 12:48:37.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.897" level="INFO">VALUE: [0.10002775000000001, 0.10000925, 0.100008708, 0.100009236, 0.100009236, 0.100008722, 0.100009236, 5.409999999095305e-07, 5.409999999095305e-07, 0.10000927700000006, 0.10000922299999981, 5.409999999095305e-07, 5.410000001315751e-07, 0.10000919500000016, 0.10000870799999984, 0.10000870799999984, 0.1000092640000001, 5.419999999922709e-07, 0.10000924999999983, 0.1000092079999999, 0.10000873599999993, 0.10000925000000027, 0.10000918099999989, 0.10000873599999993, 0.100009236, 0.10000870900000036, 0.10000873600000038, 5.410000003536197e-07, 0.10000922199999973, 0.10000869399999956, 0.10000870799999984, 0.100009236, 0.1000087780000003, 0.10000919400000008]</msg>
<status status="PASS" starttime="20201029 12:48:37.896" endtime="20201029 12:48:37.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.891" endtime="20201029 12:48:37.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:31.385" endtime="20201029 12:48:37.898"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:31.309" endtime="20201029 12:48:37.899" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:37.906" endtime="20201029 12:48:37.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.904" endtime="20201029 12:48:37.926"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.940" endtime="20201029 12:48:37.957"></status>
</kw>
<msg timestamp="20201029 12:48:37.957" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:37.938" endtime="20201029 12:48:37.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.960" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:37.959" endtime="20201029 12:48:37.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:37.963" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:37.961" endtime="20201029 12:48:37.964"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:37.935" endtime="20201029 12:48:37.964"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:37.932" endtime="20201029 12:48:37.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.931" endtime="20201029 12:48:37.965"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:37.969" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:37.968" endtime="20201029 12:48:37.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.966" endtime="20201029 12:48:37.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.930" endtime="20201029 12:48:37.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.930" endtime="20201029 12:48:37.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.971" endtime="20201029 12:48:37.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.928" endtime="20201029 12:48:37.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.927" endtime="20201029 12:48:37.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.903" endtime="20201029 12:48:37.973"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:37.982" endtime="20201029 12:48:44.108"></status>
</kw>
<msg timestamp="20201029 12:48:44.109" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:37.980" endtime="20201029 12:48:44.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.115" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:44.112" endtime="20201029 12:48:44.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.117" endtime="20201029 12:48:44.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.978" endtime="20201029 12:48:44.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.976" endtime="20201029 12:48:44.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:44.128" level="INFO">${RESULT} = {'bg-timer-count': 5, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:48:44.125" endtime="20201029 12:48:44.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.138" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:44.136" endtime="20201029 12:48:44.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.143" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:44.141" endtime="20201029 12:48:44.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.130" endtime="20201029 12:48:44.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.153" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:44.151" endtime="20201029 12:48:44.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.158" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:44.156" endtime="20201029 12:48:44.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.146" endtime="20201029 12:48:44.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.168" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:44.166" endtime="20201029 12:48:44.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.172" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 12:48:44.170" endtime="20201029 12:48:44.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.161" endtime="20201029 12:48:44.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.186" endtime="20201029 12:48:44.467"></status>
</kw>
<msg timestamp="20201029 12:48:44.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065453083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165479708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:44.184" endtime="20201029 12:48:44.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065453083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165479708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:44.470" endtime="20201029 12:48:44.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.476" endtime="20201029 12:48:44.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.179" endtime="20201029 12:48:44.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.176" endtime="20201029 12:48:44.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:44.483" level="INFO">${FILTERED} = [{'diff': 0.10002662500000001}, {'diff': 0.10000925}, {'diff': 0.10000922300000004}, {'diff': 0.10000870899999992}, {'diff': 0.10000879200000001}, {'diff': 5.410000000205528e-07}, {'diff': 0.100009236...</msg>
<status status="PASS" starttime="20201029 12:48:44.480" endtime="20201029 12:48:44.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:44.486" level="INFO">${RESULT} = {'diff': [0.10002662500000001, 0.10000925, 0.10000922300000004, 0.10000870899999992, 0.10000879200000001, 5.410000000205528e-07, 0.100009236, 0.1000087220000001, 0.10000924999999983, 5.409999999095305...</msg>
<status status="PASS" starttime="20201029 12:48:44.484" endtime="20201029 12:48:44.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.490" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:44.489" endtime="20201029 12:48:44.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.492" level="INFO">VALUE: [0.10002662500000001, 0.10000925, 0.10000922300000004, 0.10000870899999992, 0.10000879200000001, 5.410000000205528e-07, 0.100009236, 0.1000087220000001, 0.10000924999999983, 5.409999999095305e-07, 0.10000922199999995, 0.10000869400000001, 0.10000877800000008, 0.10000923599999978, 0.10000869400000001, 0.10000870800000028, 0.10000870799999984, 0.10000869400000001, 0.10000870799999984, 5.409999999095305e-07, 0.10000923700000008, 0.10000873599999993, 5.410000003536197e-07, 5.410000003536197e-07, 0.10000919500000016, 0.10000870799999984, 0.100009236, 0.10000929199999975, 0.10000924999999983, 0.10000925000000027, 0.100009236, 0.10000873600000038, 0.10000924999999938, 0.10000925000000027, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201029 12:48:44.491" endtime="20201029 12:48:44.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.487" endtime="20201029 12:48:44.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:37.974" endtime="20201029 12:48:44.494"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:37.900" endtime="20201029 12:48:44.494" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:44.502" endtime="20201029 12:48:44.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.500" endtime="20201029 12:48:44.522"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.537" endtime="20201029 12:48:44.555"></status>
</kw>
<msg timestamp="20201029 12:48:44.556" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:44.535" endtime="20201029 12:48:44.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.558" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:44.557" endtime="20201029 12:48:44.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:44.561" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:44.559" endtime="20201029 12:48:44.562"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:44.533" endtime="20201029 12:48:44.562"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:44.530" endtime="20201029 12:48:44.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.528" endtime="20201029 12:48:44.563"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:44.567" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:44.566" endtime="20201029 12:48:44.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.564" endtime="20201029 12:48:44.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.527" endtime="20201029 12:48:44.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.526" endtime="20201029 12:48:44.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.568" endtime="20201029 12:48:44.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.525" endtime="20201029 12:48:44.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.523" endtime="20201029 12:48:44.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.498" endtime="20201029 12:48:44.571"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:44.579" endtime="20201029 12:48:50.705"></status>
</kw>
<msg timestamp="20201029 12:48:50.706" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:44.578" endtime="20201029 12:48:50.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.711" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:50.708" endtime="20201029 12:48:50.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:50.713" endtime="20201029 12:48:50.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.575" endtime="20201029 12:48:50.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.573" endtime="20201029 12:48:50.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:50.724" level="INFO">${RESULT} = {'bg-timer-count': 10, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:48:50.720" endtime="20201029 12:48:50.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.734" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:50.732" endtime="20201029 12:48:50.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.739" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:50.737" endtime="20201029 12:48:50.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.726" endtime="20201029 12:48:50.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.750" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:50.747" endtime="20201029 12:48:50.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.752" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:50.751" endtime="20201029 12:48:50.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.742" endtime="20201029 12:48:50.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.756" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:50.755" endtime="20201029 12:48:50.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:50.758" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 12:48:50.758" endtime="20201029 12:48:50.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.753" endtime="20201029 12:48:50.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:50.766" endtime="20201029 12:48:51.047"></status>
</kw>
<msg timestamp="20201029 12:48:51.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066415931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166443694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:50.764" endtime="20201029 12:48:51.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066415931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166443694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:51.050" endtime="20201029 12:48:51.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.056" endtime="20201029 12:48:51.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.761" endtime="20201029 12:48:51.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:50.760" endtime="20201029 12:48:51.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:51.062" level="INFO">${FILTERED} = [{'diff': 0.100027763}, {'diff': 0.10000927800000003}, {'diff': 5.419999999922709e-07}, {'diff': 5.410000000205528e-07}, {'diff': 0.10000922200000006}, {'diff': 0.10000869499999998}, {'diff': 0.100008...</msg>
<status status="PASS" starttime="20201029 12:48:51.060" endtime="20201029 12:48:51.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:51.066" level="INFO">${RESULT} = {'diff': [0.100027763, 0.10000927800000003, 5.419999999922709e-07, 5.410000000205528e-07, 0.10000922200000006, 0.10000869499999998, 0.10000870799999995, 0.10000873600000015, 5.419999999922709e-07, 0.1...</msg>
<status status="PASS" starttime="20201029 12:48:51.063" endtime="20201029 12:48:51.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.070" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:51.069" endtime="20201029 12:48:51.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.072" level="INFO">VALUE: [0.100027763, 0.10000927800000003, 5.419999999922709e-07, 5.410000000205528e-07, 0.10000922200000006, 0.10000869499999998, 0.10000870799999995, 0.10000873600000015, 5.419999999922709e-07, 0.100009236, 0.10000922199999995, 0.100009236, 0.10000926399999988, 0.10000923700000008, 0.10000869500000009, 0.10000872300000019, 5.419999999922709e-07, 0.10000925000000027, 5.419999999922709e-07, 0.10000917999999981, 0.10000870800000028, 0.100009236, 5.409999999095305e-07, 5.409999999095305e-07, 0.100009236, 0.10000869400000001, 0.1000087220000001, 0.10000918000000025, 0.10000869400000045, 0.10000924999999938, 0.100009236, 0.10000872300000019, 0.10000926300000046, 5.419999995481817e-07, 5.419999995481817e-07]</msg>
<status status="PASS" starttime="20201029 12:48:51.071" endtime="20201029 12:48:51.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.067" endtime="20201029 12:48:51.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:44.572" endtime="20201029 12:48:51.073"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:44.496" endtime="20201029 12:48:51.074" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:51.081" endtime="20201029 12:48:51.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.079" endtime="20201029 12:48:51.104"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.116" endtime="20201029 12:48:51.135"></status>
</kw>
<msg timestamp="20201029 12:48:51.136" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:51.115" endtime="20201029 12:48:51.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.142" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:51.137" endtime="20201029 12:48:51.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:51.159" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:51.143" endtime="20201029 12:48:51.161"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:51.112" endtime="20201029 12:48:51.162"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:51.110" endtime="20201029 12:48:51.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.109" endtime="20201029 12:48:51.165"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:51.171" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:51.170" endtime="20201029 12:48:51.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.167" endtime="20201029 12:48:51.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.108" endtime="20201029 12:48:51.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.108" endtime="20201029 12:48:51.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.174" endtime="20201029 12:48:51.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.106" endtime="20201029 12:48:51.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.105" endtime="20201029 12:48:51.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.077" endtime="20201029 12:48:51.178"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:51.186" endtime="20201029 12:48:57.314"></status>
</kw>
<msg timestamp="20201029 12:48:57.315" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:51.185" endtime="20201029 12:48:57.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.320" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:57.317" endtime="20201029 12:48:57.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.323" endtime="20201029 12:48:57.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.182" endtime="20201029 12:48:57.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.180" endtime="20201029 12:48:57.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:57.334" level="INFO">${RESULT} = {'bg-timer-count': 15, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:48:57.330" endtime="20201029 12:48:57.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.351" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:57.347" endtime="20201029 12:48:57.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.356" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:57.354" endtime="20201029 12:48:57.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.336" endtime="20201029 12:48:57.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.367" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:57.364" endtime="20201029 12:48:57.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.371" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:57.369" endtime="20201029 12:48:57.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.359" endtime="20201029 12:48:57.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.382" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:57.379" endtime="20201029 12:48:57.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.386" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 12:48:57.384" endtime="20201029 12:48:57.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.374" endtime="20201029 12:48:57.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.402" endtime="20201029 12:48:57.688"></status>
</kw>
<msg timestamp="20201029 12:48:57.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.091912819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.191938806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:57.399" endtime="20201029 12:48:57.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.091912819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.191938806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:57.691" endtime="20201029 12:48:57.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.698" endtime="20201029 12:48:57.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.393" endtime="20201029 12:48:57.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.390" endtime="20201029 12:48:57.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:57.704" level="INFO">${FILTERED} = [{'diff': 0.10002598699999998}, {'diff': 0.10000925}, {'diff': 5.419999999922709e-07}, {'diff': 0.10000923699999997}, {'diff': 0.10000922200000006}, {'diff': 0.10000870799999995}, {'diff': 0.100009193...</msg>
<status status="PASS" starttime="20201029 12:48:57.701" endtime="20201029 12:48:57.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:57.707" level="INFO">${RESULT} = {'diff': [0.10002598699999998, 0.10000925, 5.419999999922709e-07, 0.10000923699999997, 0.10000922200000006, 0.10000870799999995, 0.10000919399999986, 0.100009236, 0.100009236, 0.100009236, 0.100008721...</msg>
<status status="PASS" starttime="20201029 12:48:57.705" endtime="20201029 12:48:57.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.713" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:57.711" endtime="20201029 12:48:57.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.715" level="INFO">VALUE: [0.10002598699999998, 0.10000925, 5.419999999922709e-07, 0.10000923699999997, 0.10000922200000006, 0.10000870799999995, 0.10000919399999986, 0.100009236, 0.100009236, 0.100009236, 0.10000872199999988, 5.410000001315751e-07, 5.409999999095305e-07, 0.10000923700000008, 0.10000870899999992, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.100009236, 0.10000920800000035, 0.10000869400000001, 0.10000869400000001, 0.10000870799999984, 0.10000920899999999, 0.10000922300000026, 0.10000876400000003, 0.10000922200000018, 0.10000869400000045, 0.1000087220000001, 5.420000004363601e-07, 0.10000922199999973, 0.10000870799999984, 0.10000873600000038, 0.10000922299999981, 0.10000870899999992]</msg>
<status status="PASS" starttime="20201029 12:48:57.714" endtime="20201029 12:48:57.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.708" endtime="20201029 12:48:57.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:51.178" endtime="20201029 12:48:57.717"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:51.075" endtime="20201029 12:48:57.717" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:57.724" endtime="20201029 12:48:57.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.723" endtime="20201029 12:48:57.744"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.758" endtime="20201029 12:48:57.776"></status>
</kw>
<msg timestamp="20201029 12:48:57.776" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:57.756" endtime="20201029 12:48:57.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.779" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:57.777" endtime="20201029 12:48:57.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:57.782" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:57.780" endtime="20201029 12:48:57.782"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:57.753" endtime="20201029 12:48:57.783"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:57.751" endtime="20201029 12:48:57.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.750" endtime="20201029 12:48:57.784"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:57.788" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:57.787" endtime="20201029 12:48:57.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.785" endtime="20201029 12:48:57.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.749" endtime="20201029 12:48:57.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.748" endtime="20201029 12:48:57.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.789" endtime="20201029 12:48:57.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.747" endtime="20201029 12:48:57.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.745" endtime="20201029 12:48:57.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.721" endtime="20201029 12:48:57.792"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:57.802" endtime="20201029 12:49:03.928"></status>
</kw>
<msg timestamp="20201029 12:49:03.929" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:57.799" endtime="20201029 12:49:03.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.935" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:03.932" endtime="20201029 12:49:03.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:03.938" endtime="20201029 12:49:03.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.796" endtime="20201029 12:49:03.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.794" endtime="20201029 12:49:03.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:03.948" level="INFO">${RESULT} = {'bg-timer-count': 20, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:49:03.945" endtime="20201029 12:49:03.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.958" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:49:03.956" endtime="20201029 12:49:03.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.963" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:49:03.960" endtime="20201029 12:49:03.963"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.950" endtime="20201029 12:49:03.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.973" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:49:03.971" endtime="20201029 12:49:03.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.978" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:49:03.975" endtime="20201029 12:49:03.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.966" endtime="20201029 12:49:03.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.983" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:49:03.982" endtime="20201029 12:49:03.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:03.985" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 12:49:03.984" endtime="20201029 12:49:03.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.979" endtime="20201029 12:49:03.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:03.992" endtime="20201029 12:49:04.273"></status>
</kw>
<msg timestamp="20201029 12:49:04.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067032792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167059833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:03.991" endtime="20201029 12:49:04.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067032792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167059833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:04.276" endtime="20201029 12:49:04.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.282" endtime="20201029 12:49:04.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.988" endtime="20201029 12:49:04.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:03.986" endtime="20201029 12:49:04.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:49:04.288" level="INFO">${FILTERED} = [{'diff': 0.100027041}, {'diff': 0.100007708}, {'diff': 5.419999999922709e-07}, {'diff': 0.10000917999999992}, {'diff': 0.10000924999999994}, {'diff': 0.10000920899999999}, {'diff': 0.1000087089999999...</msg>
<status status="PASS" starttime="20201029 12:49:04.285" endtime="20201029 12:49:04.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:04.295" level="INFO">${RESULT} = {'diff': [0.100027041, 0.100007708, 5.419999999922709e-07, 0.10000917999999992, 0.10000924999999994, 0.10000920899999999, 0.10000870899999992, 0.10000916700000007, 0.1000092079999999, 0.10000870800000...</msg>
<status status="PASS" starttime="20201029 12:49:04.290" endtime="20201029 12:49:04.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.299" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:49:04.298" endtime="20201029 12:49:04.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.301" level="INFO">VALUE: [0.100027041, 0.100007708, 5.419999999922709e-07, 0.10000917999999992, 0.10000924999999994, 0.10000920899999999, 0.10000870899999992, 0.10000916700000007, 0.1000092079999999, 0.10000870800000006, 0.100008777, 5.419999999922709e-07, 0.10000927800000015, 0.10000923700000008, 5.409999999095305e-07, 0.10000922200000018, 0.10000870799999984, 5.419999999922709e-07, 0.100009236, 0.100009236, 0.100009236, 5.409999999095305e-07, 0.100009236, 0.100009236, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999995481817e-07, 5.419999995481817e-07, 0.10000917999999981, 0.1000092369999992, 5.409999994654413e-07, 0.100009236, 0.10000916699999962, 0.10000869399999956]</msg>
<status status="PASS" starttime="20201029 12:49:04.300" endtime="20201029 12:49:04.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.296" endtime="20201029 12:49:04.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:57.793" endtime="20201029 12:49:04.302"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:57.719" endtime="20201029 12:49:04.303" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:49:04.310" endtime="20201029 12:49:04.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.308" endtime="20201029 12:49:04.330"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.342" endtime="20201029 12:49:04.360"></status>
</kw>
<msg timestamp="20201029 12:49:04.361" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:04.341" endtime="20201029 12:49:04.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.363" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:04.362" endtime="20201029 12:49:04.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:49:04.366" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:49:04.364" endtime="20201029 12:49:04.367"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:04.338" endtime="20201029 12:49:04.367"></status>
</kw>
<status status="FAIL" starttime="20201029 12:49:04.336" endtime="20201029 12:49:04.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.335" endtime="20201029 12:49:04.368"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:49:04.372" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:49:04.371" endtime="20201029 12:49:04.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.369" endtime="20201029 12:49:04.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.334" endtime="20201029 12:49:04.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.333" endtime="20201029 12:49:04.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.373" endtime="20201029 12:49:04.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.332" endtime="20201029 12:49:04.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.330" endtime="20201029 12:49:04.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.307" endtime="20201029 12:49:04.376"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:04.385" endtime="20201029 12:49:10.511"></status>
</kw>
<msg timestamp="20201029 12:49:10.512" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:04.384" endtime="20201029 12:49:10.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.517" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:49:10.514" endtime="20201029 12:49:10.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.520" endtime="20201029 12:49:10.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.380" endtime="20201029 12:49:10.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.378" endtime="20201029 12:49:10.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:10.530" level="INFO">${RESULT} = {'bg-timer-count': 25, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 12:49:10.526" endtime="20201029 12:49:10.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.539" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:49:10.536" endtime="20201029 12:49:10.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.543" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:49:10.541" endtime="20201029 12:49:10.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.531" endtime="20201029 12:49:10.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.553" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:49:10.551" endtime="20201029 12:49:10.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.557" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:49:10.555" endtime="20201029 12:49:10.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.546" endtime="20201029 12:49:10.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.567" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:49:10.565" endtime="20201029 12:49:10.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.571" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 12:49:10.569" endtime="20201029 12:49:10.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.560" endtime="20201029 12:49:10.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.586" endtime="20201029 12:49:10.867"></status>
</kw>
<msg timestamp="20201029 12:49:10.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065247389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165273292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:10.583" endtime="20201029 12:49:10.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065247389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165273292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:49:10.871" endtime="20201029 12:49:10.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:49:10.877" endtime="20201029 12:49:10.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.578" endtime="20201029 12:49:10.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.574" endtime="20201029 12:49:10.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:49:10.883" level="INFO">${FILTERED} = [{'diff': 0.10002590299999999}, {'diff': 0.10000925}, {'diff': 0.10000922200000001}, {'diff': 0.10000869499999998}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 0.1000092...</msg>
<status status="PASS" starttime="20201029 12:49:10.880" endtime="20201029 12:49:10.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:49:10.887" level="INFO">${RESULT} = {'diff': [0.10002590299999999, 0.10000925, 0.10000922200000001, 0.10000869499999998, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000922199999995, 0.10000922199999995, 0.10000925000000005, 0.1000...</msg>
<status status="PASS" starttime="20201029 12:49:10.883" endtime="20201029 12:49:10.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.891" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:49:10.890" endtime="20201029 12:49:10.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:49:10.893" level="INFO">VALUE: [0.10002590299999999, 0.10000925, 0.10000922200000001, 0.10000869499999998, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000922199999995, 0.10000922199999995, 0.10000925000000005, 0.100009236, 0.10000925000000005, 0.1000092079999999, 0.100009236, 5.419999999922709e-07, 5.410000003536197e-07, 5.409999999095305e-07, 0.10000922200000018, 0.10000922199999973, 0.10000922199999973, 0.10000870800000028, 0.10000922200000018, 0.10000870799999984, 0.10000869400000001, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 0.10000925000000027, 0.100009236, 0.10000920799999946, 0.10000869399999956, 0.10000869399999956, 0.10000876400000003, 5.420000004363601e-07, 0.100009236]</msg>
<status status="PASS" starttime="20201029 12:49:10.892" endtime="20201029 12:49:10.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:10.888" endtime="20201029 12:49:10.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:49:04.377" endtime="20201029 12:49:10.895"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 12:49:04.304" endtime="20201029 12:49:10.895" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:48:28.945" endtime="20201029 12:49:10.902"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 12:46:19.827" endtime="20201029 12:49:10.935"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
