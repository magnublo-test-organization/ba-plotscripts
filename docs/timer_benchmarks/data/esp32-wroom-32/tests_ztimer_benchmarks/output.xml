<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 18:17:25.686" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.251" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:17:26.259" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:17:27.318" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:17:26.250" endtime="20201029 18:17:27.319"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.325" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 18:17:27.321" endtime="20201029 18:17:28.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.249" endtime="20201029 18:17:28.327"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:28.331" endtime="20201029 18:17:28.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.328" endtime="20201029 18:17:28.563"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.576" endtime="20201029 18:17:28.596"></status>
</kw>
<msg timestamp="20201029 18:17:28.596" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:28.574" endtime="20201029 18:17:28.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.599" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:28.597" endtime="20201029 18:17:28.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.602" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:28.600" endtime="20201029 18:17:28.602"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:28.572" endtime="20201029 18:17:28.603"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:28.569" endtime="20201029 18:17:28.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.568" endtime="20201029 18:17:28.604"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:28.608" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:28.607" endtime="20201029 18:17:28.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.605" endtime="20201029 18:17:28.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.567" endtime="20201029 18:17:28.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.567" endtime="20201029 18:17:28.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.610" endtime="20201029 18:17:28.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.565" endtime="20201029 18:17:28.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.613" endtime="20201029 18:17:28.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.564" endtime="20201029 18:17:28.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.247" endtime="20201029 18:17:28.615"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:28.621" endtime="20201029 18:17:28.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.620" endtime="20201029 18:17:28.641"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.655" endtime="20201029 18:17:28.672"></status>
</kw>
<msg timestamp="20201029 18:17:28.673" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:28.653" endtime="20201029 18:17:28.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.675" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:28.674" endtime="20201029 18:17:28.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.678" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:28.676" endtime="20201029 18:17:28.679"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:28.650" endtime="20201029 18:17:28.679"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:28.648" endtime="20201029 18:17:28.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.646" endtime="20201029 18:17:28.680"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:28.684" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:28.683" endtime="20201029 18:17:28.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.681" endtime="20201029 18:17:28.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.645" endtime="20201029 18:17:28.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.645" endtime="20201029 18:17:28.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.686" endtime="20201029 18:17:28.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.643" endtime="20201029 18:17:28.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.642" endtime="20201029 18:17:28.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.618" endtime="20201029 18:17:28.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.696" endtime="20201029 18:17:28.708"></status>
</kw>
<msg timestamp="20201029 18:17:28.709" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:28.693" endtime="20201029 18:17:28.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.711" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:28.710" endtime="20201029 18:17:28.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:28.712" endtime="20201029 18:17:28.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.691" endtime="20201029 18:17:28.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.689" endtime="20201029 18:17:28.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.718" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 18:17:28.717" endtime="20201029 18:17:28.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.720" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201029 18:17:28.720" endtime="20201029 18:17:28.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.715" endtime="20201029 18:17:28.721"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:28.616" endtime="20201029 18:17:28.722" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:17:25.799" endtime="20201029 18:17:28.724"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:17:28.776" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:17:28.784" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:17:29.855" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:17:28.775" endtime="20201029 18:17:29.856"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:17:30.858" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 18:17:29.857" endtime="20201029 18:17:30.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.774" endtime="20201029 18:17:30.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:30.861" endtime="20201029 18:17:31.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:30.860" endtime="20201029 18:17:31.131"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.146" endtime="20201029 18:17:31.168"></status>
</kw>
<msg timestamp="20201029 18:17:31.168" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:31.145" endtime="20201029 18:17:31.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.171" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:31.169" endtime="20201029 18:17:31.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.174" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:31.172" endtime="20201029 18:17:31.174"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:31.142" endtime="20201029 18:17:31.175"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:31.139" endtime="20201029 18:17:31.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.137" endtime="20201029 18:17:31.176"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:31.180" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:31.179" endtime="20201029 18:17:31.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.177" endtime="20201029 18:17:31.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.136" endtime="20201029 18:17:31.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.135" endtime="20201029 18:17:31.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.181" endtime="20201029 18:17:31.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.133" endtime="20201029 18:17:31.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.184" endtime="20201029 18:17:31.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.132" endtime="20201029 18:17:31.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:28.773" endtime="20201029 18:17:31.186"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:31.193" endtime="20201029 18:17:31.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.190" endtime="20201029 18:17:31.213"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.225" endtime="20201029 18:17:31.241"></status>
</kw>
<msg timestamp="20201029 18:17:31.242" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:31.224" endtime="20201029 18:17:31.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.245" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:31.243" endtime="20201029 18:17:31.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.248" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:31.246" endtime="20201029 18:17:31.248"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:31.221" endtime="20201029 18:17:31.249"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:31.219" endtime="20201029 18:17:31.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.218" endtime="20201029 18:17:31.249"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:31.253" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:31.252" endtime="20201029 18:17:31.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.250" endtime="20201029 18:17:31.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.217" endtime="20201029 18:17:31.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.216" endtime="20201029 18:17:31.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.255" endtime="20201029 18:17:31.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.215" endtime="20201029 18:17:31.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.213" endtime="20201029 18:17:31.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.189" endtime="20201029 18:17:31.258"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.266" endtime="20201029 18:17:31.281"></status>
</kw>
<msg timestamp="20201029 18:17:31.281" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:31.264" endtime="20201029 18:17:31.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.284" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:31.282" endtime="20201029 18:17:31.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.285" endtime="20201029 18:17:31.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.262" endtime="20201029 18:17:31.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.260" endtime="20201029 18:17:31.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.293" endtime="20201029 18:17:31.567"></status>
</kw>
<msg timestamp="20201029 18:17:31.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063228292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063232736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:31.292" endtime="20201029 18:17:31.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063228292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063232736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:31.570" endtime="20201029 18:17:31.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.576" endtime="20201029 18:17:31.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.290" endtime="20201029 18:17:31.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.288" endtime="20201029 18:17:31.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:31.581" level="INFO">${RESULT} = [{'diff': 4.443999999992343e-06}, {'diff': 6.999999999993123e-06}, {'diff': 7.013999999999632e-06}, {'diff': 1.034800000000724e-05}, {'diff': 1.1083999999994543e-05}, {'diff': 9.514000000002132e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:17:31.579" endtime="20201029 18:17:31.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:31.585" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.443999999992343e-06, 6.999999999993123e-06, 7.013999999999632e-06, 1.034800000000724e-05, 1.1083999999994543e-05, 9.514000000002132e-06, 9.151999999998384e-06, 7.666000000003392e-06, 8.096...</msg>
<status status="PASS" starttime="20201029 18:17:31.582" endtime="20201029 18:17:31.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.589" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:31.588" endtime="20201029 18:17:31.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.591" level="INFO">VALUE: [4.443999999992343e-06, 6.999999999993123e-06, 7.013999999999632e-06, 1.034800000000724e-05, 1.1083999999994543e-05, 9.514000000002132e-06, 9.151999999998384e-06, 7.666000000003392e-06, 8.096999999998578e-06, 1.0723000000004146e-05, 7.846999999991389e-06, 1.0402000000006573e-05, 7.250000000000312e-06, 1.0401999999992695e-05, 4.944000000006721e-06, 9.167000000004366e-06, 1.0514000000003132e-05, 8.402000000004572e-06, 7.444000000009221e-06, 1.0971999999997983e-05, 8.222000000002172e-06, 6.2779999999984515e-06, 1.0707999999998163e-05, 5.958000000000352e-06, 7.387999999997064e-06]</msg>
<status status="PASS" starttime="20201029 18:17:31.590" endtime="20201029 18:17:31.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.586" endtime="20201029 18:17:31.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.259" endtime="20201029 18:17:31.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.258" endtime="20201029 18:17:31.593"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.600" endtime="20201029 18:17:31.615"></status>
</kw>
<msg timestamp="20201029 18:17:31.615" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:31.599" endtime="20201029 18:17:31.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.618" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:31.616" endtime="20201029 18:17:31.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.619" endtime="20201029 18:17:31.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.596" endtime="20201029 18:17:31.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.595" endtime="20201029 18:17:31.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.629" endtime="20201029 18:17:31.920"></status>
</kw>
<msg timestamp="20201029 18:17:31.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063228292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063232736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:31.627" endtime="20201029 18:17:31.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063228292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063232736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:31.924" endtime="20201029 18:17:31.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.933" endtime="20201029 18:17:31.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.625" endtime="20201029 18:17:31.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.623" endtime="20201029 18:17:31.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:31.940" level="INFO">${RESULT} = [{'diff': 4.443999999992343e-06}, {'diff': 6.999999999993123e-06}, {'diff': 7.013999999999632e-06}, {'diff': 1.034800000000724e-05}, {'diff': 1.1083999999994543e-05}, {'diff': 9.514000000002132e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:17:31.936" endtime="20201029 18:17:31.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:31.944" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.443999999992343e-06, 6.999999999993123e-06, 7.013999999999632e-06, 1.034800000000724e-05, 1.1083999999994543e-05, 9.514000000002132e-06, 9.151999999998384e-06, 7.666000000003392e-06, 8.096...</msg>
<status status="PASS" starttime="20201029 18:17:31.941" endtime="20201029 18:17:31.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.949" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:31.947" endtime="20201029 18:17:31.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.951" level="INFO">VALUE: [4.443999999992343e-06, 6.999999999993123e-06, 7.013999999999632e-06, 1.034800000000724e-05, 1.1083999999994543e-05, 9.514000000002132e-06, 9.151999999998384e-06, 7.666000000003392e-06, 8.096999999998578e-06, 1.0723000000004146e-05, 7.846999999991389e-06, 1.0402000000006573e-05, 7.250000000000312e-06, 1.0401999999992695e-05, 4.944000000006721e-06, 9.167000000004366e-06, 1.0514000000003132e-05, 8.402000000004572e-06, 7.444000000009221e-06, 1.0971999999997983e-05, 8.222000000002172e-06, 6.2779999999984515e-06, 1.0707999999998163e-05, 5.958000000000352e-06, 7.387999999997064e-06, 0.32399686099999997, 8.40200000001845e-06, 7.138999999989348e-06, 9.193999999990154e-06, 7.972000000022739e-06, 9.625000000013095e-06, 1.0263999999982065e-05, 9.138999999991348e-06, 9.916999999970422e-06, 7.541999999971516e-06, 8.167000000003366e-06, 9.527000000009167e-06, 8.235999999994803e-06, 6.944000000008721e-06, 1.0889000000013915e-05, 7.028000000020018e-06, 6.944999999980439e-06, 1.0958000000005352e-05, 1.0318999999980871e-05, 6.278000000026207e-06, 6.5979999999687955e-06, 4.889000000007915e-06, 9.58400000000692e-06, 9.652999999998357e-06, 7.902000000004072e-06]</msg>
<status status="PASS" starttime="20201029 18:17:31.950" endtime="20201029 18:17:31.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.945" endtime="20201029 18:17:31.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.593" endtime="20201029 18:17:31.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.593" endtime="20201029 18:17:31.954"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.962" endtime="20201029 18:17:31.976"></status>
</kw>
<msg timestamp="20201029 18:17:31.977" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:31.960" endtime="20201029 18:17:31.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.979" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:31.978" endtime="20201029 18:17:31.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.980" endtime="20201029 18:17:31.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.957" endtime="20201029 18:17:31.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.956" endtime="20201029 18:17:31.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.990" endtime="20201029 18:17:32.289"></status>
</kw>
<msg timestamp="20201029 18:17:32.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063415833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.063425708, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:31.988" endtime="20201029 18:17:32.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063415833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.063425708, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:32.294" endtime="20201029 18:17:32.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.303" endtime="20201029 18:17:32.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.985" endtime="20201029 18:17:32.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.984" endtime="20201029 18:17:32.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:32.310" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.250000000000312e-06}, {'diff': 1.0401999999992695e-05}, {'diff': 4.944000000006721e-06}, {'diff': 9.167000000004366e-06}, {'diff': 1.0514000000003132e-05}, {'diff': 8.40200000...</msg>
<status status="PASS" starttime="20201029 18:17:32.307" endtime="20201029 18:17:32.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:32.315" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.250000000000312e-06, 1.0401999999992695e-05, 4.944000000006721e-06, 9.167000000004366e-06, 1.0514000000003132e-05, 8.402000000004572e-06, 7.444000000009221e-06, 1.0971999999997983e-05, ...</msg>
<status status="PASS" starttime="20201029 18:17:32.311" endtime="20201029 18:17:32.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.320" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:32.319" endtime="20201029 18:17:32.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.323" level="INFO">VALUE: [0, 7.250000000000312e-06, 1.0401999999992695e-05, 4.944000000006721e-06, 9.167000000004366e-06, 1.0514000000003132e-05, 8.402000000004572e-06, 7.444000000009221e-06, 1.0971999999997983e-05, 8.222000000002172e-06, 6.2779999999984515e-06, 1.0707999999998163e-05, 5.958000000000352e-06, 7.387999999997064e-06, 0.32399686099999997, 8.40200000001845e-06, 7.138999999989348e-06, 9.193999999990154e-06, 7.972000000022739e-06, 9.625000000013095e-06, 1.0263999999982065e-05, 9.138999999991348e-06, 9.916999999970422e-06, 7.541999999971516e-06, 8.167000000003366e-06, 9.527000000009167e-06, 8.235999999994803e-06, 6.944000000008721e-06, 1.0889000000013915e-05, 7.028000000020018e-06, 6.944999999980439e-06, 1.0958000000005352e-05, 1.0318999999980871e-05, 6.278000000026207e-06, 6.5979999999687955e-06, 4.889000000007915e-06, 9.58400000000692e-06, 9.652999999998357e-06, 7.902000000004072e-06, 0.35100265199999997, 8.459000000016204e-06, 4.8329999999818796e-06, 9.833999999986354e-06, 6.652000000051395e-06, 8.070000000026667e-06, 6.5140000000685205e-06, 7.833000000068147e-06, 9.528000000091907e-06, 1.13470000000504e-05, 5.111000000002086e-06, 8.736000000064692e-06, 6.457999999986974e-06, 5.708999999964881e-06, 7.1670000000301215e-06, 8.554999999965673e-06, 9.611000000075975e-06, 1.063899999997897e-05, 1.1084000000050054e-05, 6.277999999970696e-06, 7.1670000000301215e-06, 8.847000000034022e-06, 9.888000000013442e-06, 5.458000000069241e-06, 6.708999999993637e-06]</msg>
<status status="PASS" starttime="20201029 18:17:32.321" endtime="20201029 18:17:32.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.316" endtime="20201029 18:17:32.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.954" endtime="20201029 18:17:32.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.954" endtime="20201029 18:17:32.324"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.332" endtime="20201029 18:17:32.345"></status>
</kw>
<msg timestamp="20201029 18:17:32.346" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.330" endtime="20201029 18:17:32.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.348" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.347" endtime="20201029 18:17:32.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.349" endtime="20201029 18:17:32.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.328" endtime="20201029 18:17:32.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.326" endtime="20201029 18:17:32.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.358" endtime="20201029 18:17:32.675"></status>
</kw>
<msg timestamp="20201029 18:17:32.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.387818708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.387824736, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:32.356" endtime="20201029 18:17:32.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.387818708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.387824736, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:32.680" endtime="20201029 18:17:32.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.690" endtime="20201029 18:17:32.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.354" endtime="20201029 18:17:32.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.352" endtime="20201029 18:17:32.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:32.697" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.235999999994803e-06}, {'diff': 6.944000000008721e-06}, {'diff': 1.0889000000013915e-05}, {'diff': 7.028000000020018e-06}, {'diff': 6.944999999980439e-06}, {'diff': 1.095800000...</msg>
<status status="PASS" starttime="20201029 18:17:32.693" endtime="20201029 18:17:32.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:32.701" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.235999999994803e-06, 6.944000000008721e-06, 1.0889000000013915e-05, 7.028000000020018e-06, 6.944999999980439e-06, 1.0958000000005352e-05, 1.0318999999980871e-05, 6.278000000026207e-06, ...</msg>
<status status="PASS" starttime="20201029 18:17:32.698" endtime="20201029 18:17:32.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.706" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:32.705" endtime="20201029 18:17:32.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.709" level="INFO">VALUE: [0, 8.235999999994803e-06, 6.944000000008721e-06, 1.0889000000013915e-05, 7.028000000020018e-06, 6.944999999980439e-06, 1.0958000000005352e-05, 1.0318999999980871e-05, 6.278000000026207e-06, 6.5979999999687955e-06, 4.889000000007915e-06, 9.58400000000692e-06, 9.652999999998357e-06, 7.902000000004072e-06, 0.35100265199999997, 8.459000000016204e-06, 4.8329999999818796e-06, 9.833999999986354e-06, 6.652000000051395e-06, 8.070000000026667e-06, 6.5140000000685205e-06, 7.833000000068147e-06, 9.528000000091907e-06, 1.13470000000504e-05, 5.111000000002086e-06, 8.736000000064692e-06, 6.457999999986974e-06, 5.708999999964881e-06, 7.1670000000301215e-06, 8.554999999965673e-06, 9.611000000075975e-06, 1.063899999997897e-05, 1.1084000000050054e-05, 6.277999999970696e-06, 7.1670000000301215e-06, 8.847000000034022e-06, 9.888000000013442e-06, 5.458000000069241e-06, 6.708999999993637e-06, 0.360567361, 8.068999999943927e-06, 9.028000000022018e-06, 5.027999999906996e-06, 6.750000000055323e-06, 8.902999999893524e-06, 9.63900000017226e-06, 8.138999999962593e-06, 9.0699999999444e-06, 7.680000000176435e-06, 8.846999999923e-06, 8.333000000027013e-06, 9.943999999872943e-06, 7.45900000009847e-06, 5.763999999963687e-06, 8.707999999968408e-06, 8.707999999968408e-06, 5.707999999993163e-06, 7.90299999997579e-06, 9.847000000062778e-06, 1.1430000000034468e-05, 5.306000000038225e-06, 7.695000000085273e-06, 9.222000000086439e-06, 9.402999999963413e-06]</msg>
<status status="PASS" starttime="20201029 18:17:32.707" endtime="20201029 18:17:32.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.702" endtime="20201029 18:17:32.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.325" endtime="20201029 18:17:32.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.325" endtime="20201029 18:17:32.710"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.719" endtime="20201029 18:17:32.733"></status>
</kw>
<msg timestamp="20201029 18:17:32.733" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.716" endtime="20201029 18:17:32.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.736" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.735" endtime="20201029 18:17:32.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.737" endtime="20201029 18:17:32.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.714" endtime="20201029 18:17:32.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.712" endtime="20201029 18:17:32.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.746" endtime="20201029 18:17:33.045"></status>
</kw>
<msg timestamp="20201029 18:17:33.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.739216014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.739226111, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:32.744" endtime="20201029 18:17:33.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.739216014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.739226111, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:33.050" endtime="20201029 18:17:33.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.060" endtime="20201029 18:17:33.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.742" endtime="20201029 18:17:33.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.740" endtime="20201029 18:17:33.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:33.067" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 6.457999999986974e-06}, {'diff': 5.708999999964881e-06}, {'diff': 7.1670000000301215e-06}, {'diff': 8.554999999965673e-06}, {'diff': 9.611000000075975e-06}, {'diff': 1.063899999...</msg>
<status status="PASS" starttime="20201029 18:17:33.063" endtime="20201029 18:17:33.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:33.072" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 6.457999999986974e-06, 5.708999999964881e-06, 7.1670000000301215e-06, 8.554999999965673e-06, 9.611000000075975e-06, 1.063899999997897e-05, 1.1084000000050054e-05, 6.277999999970696e-06, 7...</msg>
<status status="PASS" starttime="20201029 18:17:33.068" endtime="20201029 18:17:33.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.076" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:33.075" endtime="20201029 18:17:33.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.079" level="INFO">VALUE: [0, 6.457999999986974e-06, 5.708999999964881e-06, 7.1670000000301215e-06, 8.554999999965673e-06, 9.611000000075975e-06, 1.063899999997897e-05, 1.1084000000050054e-05, 6.277999999970696e-06, 7.1670000000301215e-06, 8.847000000034022e-06, 9.888000000013442e-06, 5.458000000069241e-06, 6.708999999993637e-06, 0.360567361, 8.068999999943927e-06, 9.028000000022018e-06, 5.027999999906996e-06, 6.750000000055323e-06, 8.902999999893524e-06, 9.63900000017226e-06, 8.138999999962593e-06, 9.0699999999444e-06, 7.680000000176435e-06, 8.846999999923e-06, 8.333000000027013e-06, 9.943999999872943e-06, 7.45900000009847e-06, 5.763999999963687e-06, 8.707999999968408e-06, 8.707999999968408e-06, 5.707999999993163e-06, 7.90299999997579e-06, 9.847000000062778e-06, 1.1430000000034468e-05, 5.306000000038225e-06, 7.695000000085273e-06, 9.222000000086439e-06, 9.402999999963413e-06, 0.3767372230000001, 7.972000000133761e-06, 1.1083000000189358e-05, 6.833000000039391e-06, 8.291999999965327e-06, 9.429999999976957e-06, 6.125000000078984e-06, 7.250000000125212e-06, 1.1262999999983592e-05, 4.985999999984614e-06, 5.2230000000541565e-06, 6.110999999808797e-06, 8.72200000001655e-06, 6.3200000000041e-06, 7.318999999839093e-06, 1.020799999995603e-05, 6.583999999865142e-06, 6.5559999999909024e-06, 7.902000000115095e-06, 7.763000000160503e-06, 5.902999999918279e-06, 7.652999999940846e-06, 6.667000000071255e-06, 6.708999999993637e-06, 1.0846999999980511e-05]</msg>
<status status="PASS" starttime="20201029 18:17:33.078" endtime="20201029 18:17:33.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.073" endtime="20201029 18:17:33.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.711" endtime="20201029 18:17:33.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.710" endtime="20201029 18:17:33.081"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.088" endtime="20201029 18:17:33.102"></status>
</kw>
<msg timestamp="20201029 18:17:33.103" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:33.087" endtime="20201029 18:17:33.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.105" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:33.104" endtime="20201029 18:17:33.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.106" endtime="20201029 18:17:33.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.084" endtime="20201029 18:17:33.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.082" endtime="20201029 18:17:33.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.115" endtime="20201029 18:17:33.418"></status>
</kw>
<msg timestamp="20201029 18:17:33.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.100172444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.100178681, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:33.114" endtime="20201029 18:17:33.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.100172444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.100178681, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:33.423" endtime="20201029 18:17:33.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.432" endtime="20201029 18:17:33.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.111" endtime="20201029 18:17:33.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.109" endtime="20201029 18:17:33.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:33.439" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.943999999872943e-06}, {'diff': 7.45900000009847e-06}, {'diff': 5.763999999963687e-06}, {'diff': 8.707999999968408e-06}, {'diff': 8.707999999968408e-06}, {'diff': 5.70799999999...</msg>
<status status="PASS" starttime="20201029 18:17:33.436" endtime="20201029 18:17:33.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:33.446" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.943999999872943e-06, 7.45900000009847e-06, 5.763999999963687e-06, 8.707999999968408e-06, 8.707999999968408e-06, 5.707999999993163e-06, 7.90299999997579e-06, 9.847000000062778e-06, 1.143...</msg>
<status status="PASS" starttime="20201029 18:17:33.440" endtime="20201029 18:17:33.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.451" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:33.450" endtime="20201029 18:17:33.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.453" level="INFO">VALUE: [0, 9.943999999872943e-06, 7.45900000009847e-06, 5.763999999963687e-06, 8.707999999968408e-06, 8.707999999968408e-06, 5.707999999993163e-06, 7.90299999997579e-06, 9.847000000062778e-06, 1.1430000000034468e-05, 5.306000000038225e-06, 7.695000000085273e-06, 9.222000000086439e-06, 9.402999999963413e-06, 0.3767372230000001, 7.972000000133761e-06, 1.1083000000189358e-05, 6.833000000039391e-06, 8.291999999965327e-06, 9.429999999976957e-06, 6.125000000078984e-06, 7.250000000125212e-06, 1.1262999999983592e-05, 4.985999999984614e-06, 5.2230000000541565e-06, 6.110999999808797e-06, 8.72200000001655e-06, 6.3200000000041e-06, 7.318999999839093e-06, 1.020799999995603e-05, 6.583999999865142e-06, 6.5559999999909024e-06, 7.902000000115095e-06, 7.763000000160503e-06, 5.902999999918279e-06, 7.652999999940846e-06, 6.667000000071255e-06, 6.708999999993637e-06, 1.0846999999980511e-05, 0.3599824020000002, 5.472000000006361e-06, 1.102800000007953e-05, 8.028000000104285e-06, 5.792000000059971e-06, 8.028000000104285e-06, 7.777999999847296e-06, 8.457999999933463e-06, 8.709000000051148e-06, 5.583999999947409e-06, 7.625000000066606e-06, 6.764000000103465e-06, 7.263000000090614e-06, 9.417000000011555e-06, 9.26400000000882e-06, 9.013999999973876e-06, 1.15969999998633e-05, 6.19400000001491e-06, 8.401999999962939e-06, 7.45800000001573e-06, 7.791000000034742e-06, 5.7500000001375895e-06, 7.598000000053062e-06, 7.528000000034396e-06, 9.207999999816252e-06]</msg>
<status status="PASS" starttime="20201029 18:17:33.452" endtime="20201029 18:17:33.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.447" endtime="20201029 18:17:33.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.081" endtime="20201029 18:17:33.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.081" endtime="20201029 18:17:33.455"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.462" endtime="20201029 18:17:33.476"></status>
</kw>
<msg timestamp="20201029 18:17:33.477" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:33.461" endtime="20201029 18:17:33.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.479" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:33.478" endtime="20201029 18:17:33.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.480" endtime="20201029 18:17:33.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.458" endtime="20201029 18:17:33.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.457" endtime="20201029 18:17:33.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.489" endtime="20201029 18:17:33.793"></status>
</kw>
<msg timestamp="20201029 18:17:33.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.477299625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.47730675, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201029 18:17:33.488" endtime="20201029 18:17:33.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.477299625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.47730675, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201029 18:17:33.798" endtime="20201029 18:17:33.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.808" endtime="20201029 18:17:33.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.485" endtime="20201029 18:17:33.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.483" endtime="20201029 18:17:33.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:33.815" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.72200000001655e-06}, {'diff': 6.3200000000041e-06}, {'diff': 7.318999999839093e-06}, {'diff': 1.020799999995603e-05}, {'diff': 6.583999999865142e-06}, {'diff': 6.5559999999909...</msg>
<status status="PASS" starttime="20201029 18:17:33.811" endtime="20201029 18:17:33.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:33.819" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.72200000001655e-06, 6.3200000000041e-06, 7.318999999839093e-06, 1.020799999995603e-05, 6.583999999865142e-06, 6.5559999999909024e-06, 7.902000000115095e-06, 7.763000000160503e-06, 5.902...</msg>
<status status="PASS" starttime="20201029 18:17:33.815" endtime="20201029 18:17:33.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.824" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:33.823" endtime="20201029 18:17:33.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.827" level="INFO">VALUE: [0, 8.72200000001655e-06, 6.3200000000041e-06, 7.318999999839093e-06, 1.020799999995603e-05, 6.583999999865142e-06, 6.5559999999909024e-06, 7.902000000115095e-06, 7.763000000160503e-06, 5.902999999918279e-06, 7.652999999940846e-06, 6.667000000071255e-06, 6.708999999993637e-06, 1.0846999999980511e-05, 0.3599824020000002, 5.472000000006361e-06, 1.102800000007953e-05, 8.028000000104285e-06, 5.792000000059971e-06, 8.028000000104285e-06, 7.777999999847296e-06, 8.457999999933463e-06, 8.709000000051148e-06, 5.583999999947409e-06, 7.625000000066606e-06, 6.764000000103465e-06, 7.263000000090614e-06, 9.417000000011555e-06, 9.26400000000882e-06, 9.013999999973876e-06, 1.15969999998633e-05, 6.19400000001491e-06, 8.401999999962939e-06, 7.45800000001573e-06, 7.791000000034742e-06, 5.7500000001375895e-06, 7.598000000053062e-06, 7.528000000034396e-06, 9.207999999816252e-06, 0.3636545549999999, 6.667000000071255e-06, 4.9579999998883295e-06, 1.0055999999813992e-05, 8.972000000273539e-06, 7.598000000275107e-06, 8.236000000216848e-06, 5.40299999984839e-06, 8.37500000017144e-06, 9.06899999986166e-06, 1.065299999991609e-05, 7.403000000127946e-06, 1.0445000000025573e-05, 8.637999999727697e-06, 1.0542000000057783e-05, 8.209000000203304e-06, 8.653000000080624e-06, 8.584000000144698e-06, 6.1659999999186255e-06, 5.653000000105379e-06, 1.0291000000162143e-05, 9.944999999955684e-06, 9.6670000000465e-06, 1.1209000000178548e-05, 1.115199999990324e-05]</msg>
<status status="PASS" starttime="20201029 18:17:33.825" endtime="20201029 18:17:33.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.820" endtime="20201029 18:17:33.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.455" endtime="20201029 18:17:33.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.455" endtime="20201029 18:17:33.829"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.840" endtime="20201029 18:17:33.854"></status>
</kw>
<msg timestamp="20201029 18:17:33.855" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:33.838" endtime="20201029 18:17:33.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.858" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:33.857" endtime="20201029 18:17:33.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.860" endtime="20201029 18:17:33.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.834" endtime="20201029 18:17:33.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.832" endtime="20201029 18:17:33.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.869" endtime="20201029 18:17:34.170"></status>
</kw>
<msg timestamp="20201029 18:17:34.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.837660458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.837670931, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:33.867" endtime="20201029 18:17:34.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.837660458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.837670931, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:34.176" endtime="20201029 18:17:34.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.186" endtime="20201029 18:17:34.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.864" endtime="20201029 18:17:34.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.863" endtime="20201029 18:17:34.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:34.193" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.263000000090614e-06}, {'diff': 9.417000000011555e-06}, {'diff': 9.26400000000882e-06}, {'diff': 9.013999999973876e-06}, {'diff': 1.15969999998633e-05}, {'diff': 6.194000000014...</msg>
<status status="PASS" starttime="20201029 18:17:34.189" endtime="20201029 18:17:34.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:34.198" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.263000000090614e-06, 9.417000000011555e-06, 9.26400000000882e-06, 9.013999999973876e-06, 1.15969999998633e-05, 6.19400000001491e-06, 8.401999999962939e-06, 7.45800000001573e-06, 7.79100...</msg>
<status status="PASS" starttime="20201029 18:17:34.194" endtime="20201029 18:17:34.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.203" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:34.202" endtime="20201029 18:17:34.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.205" level="INFO">VALUE: [0, 7.263000000090614e-06, 9.417000000011555e-06, 9.26400000000882e-06, 9.013999999973876e-06, 1.15969999998633e-05, 6.19400000001491e-06, 8.401999999962939e-06, 7.45800000001573e-06, 7.791000000034742e-06, 5.7500000001375895e-06, 7.598000000053062e-06, 7.528000000034396e-06, 9.207999999816252e-06, 0.3636545549999999, 6.667000000071255e-06, 4.9579999998883295e-06, 1.0055999999813992e-05, 8.972000000273539e-06, 7.598000000275107e-06, 8.236000000216848e-06, 5.40299999984839e-06, 8.37500000017144e-06, 9.06899999986166e-06, 1.065299999991609e-05, 7.403000000127946e-06, 1.0445000000025573e-05, 8.637999999727697e-06, 1.0542000000057783e-05, 8.209000000203304e-06, 8.653000000080624e-06, 8.584000000144698e-06, 6.1659999999186255e-06, 5.653000000105379e-06, 1.0291000000162143e-05, 9.944999999955684e-06, 9.6670000000465e-06, 1.1209000000178548e-05, 1.115199999990324e-05, 0.3682426109999999, 6.0969999999827e-06, 1.001399999989161e-05, 8.778000000209119e-06, 7.833000000179169e-06, 1.0125000000194007e-05, 8.417000000093822e-06, 4.888999999952404e-06, 1.020900000003877e-05, 5.4579999999582185e-06, 9.528000000091907e-06, 5.902999999918279e-06, 6.152000000092528e-06, 6.416999999814266e-06, 8.37499999972735e-06, 8.847999999783696e-06, 6.9859999998200806e-06, 6.3469999997955995e-06, 6.8890000002319596e-06, 9.874999999937017e-06, 6.930999999710252e-06, 7.709000000133415e-06, 8.52799999995213e-06, 7.152999999870957e-06, 1.0166000000033648e-05]</msg>
<status status="PASS" starttime="20201029 18:17:34.204" endtime="20201029 18:17:34.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.199" endtime="20201029 18:17:34.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.830" endtime="20201029 18:17:34.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.829" endtime="20201029 18:17:34.207"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.214" endtime="20201029 18:17:34.229"></status>
</kw>
<msg timestamp="20201029 18:17:34.230" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.213" endtime="20201029 18:17:34.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.232" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.231" endtime="20201029 18:17:34.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.233" endtime="20201029 18:17:34.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.210" endtime="20201029 18:17:34.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.209" endtime="20201029 18:17:34.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.242" endtime="20201029 18:17:34.546"></status>
</kw>
<msg timestamp="20201029 18:17:34.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.201711542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.201719194, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:34.241" endtime="20201029 18:17:34.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.201711542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.201719194, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:34.551" endtime="20201029 18:17:34.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.561" endtime="20201029 18:17:34.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.238" endtime="20201029 18:17:34.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.236" endtime="20201029 18:17:34.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:34.568" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0445000000025573e-05}, {'diff': 8.637999999727697e-06}, {'diff': 1.0542000000057783e-05}, {'diff': 8.209000000203304e-06}, {'diff': 8.653000000080624e-06}, {'diff': 8.58400000...</msg>
<status status="PASS" starttime="20201029 18:17:34.564" endtime="20201029 18:17:34.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:34.573" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0445000000025573e-05, 8.637999999727697e-06, 1.0542000000057783e-05, 8.209000000203304e-06, 8.653000000080624e-06, 8.584000000144698e-06, 6.1659999999186255e-06, 5.653000000105379e-06, ...</msg>
<status status="PASS" starttime="20201029 18:17:34.569" endtime="20201029 18:17:34.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.578" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:34.577" endtime="20201029 18:17:34.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.581" level="INFO">VALUE: [0, 1.0445000000025573e-05, 8.637999999727697e-06, 1.0542000000057783e-05, 8.209000000203304e-06, 8.653000000080624e-06, 8.584000000144698e-06, 6.1659999999186255e-06, 5.653000000105379e-06, 1.0291000000162143e-05, 9.944999999955684e-06, 9.6670000000465e-06, 1.1209000000178548e-05, 1.115199999990324e-05, 0.3682426109999999, 6.0969999999827e-06, 1.001399999989161e-05, 8.778000000209119e-06, 7.833000000179169e-06, 1.0125000000194007e-05, 8.417000000093822e-06, 4.888999999952404e-06, 1.020900000003877e-05, 5.4579999999582185e-06, 9.528000000091907e-06, 5.902999999918279e-06, 6.152000000092528e-06, 6.416999999814266e-06, 8.37499999972735e-06, 8.847999999783696e-06, 6.9859999998200806e-06, 6.3469999997955995e-06, 6.8890000002319596e-06, 9.874999999937017e-06, 6.930999999710252e-06, 7.709000000133415e-06, 8.52799999995213e-06, 7.152999999870957e-06, 1.0166000000033648e-05, 0.36308208299999967, 7.847000000005266e-06, 8.167000000280922e-06, 9.889000000207204e-06, 9.26400000000882e-06, 8.930999999989808e-06, 8.958000000003352e-06, 9.235999999912536e-06, 8.194999999933117e-06, 9.582999999757646e-06, 6.320000000226145e-06, 7.388999999857759e-06, 1.065200000027744e-05, 7.58400000000492e-06, 9.653000000220402e-06, 8.347000000075155e-06, 7.082999999852291e-06, 9.222000000086439e-06, 9.401999999880672e-06, 6.319000000143404e-06, 4.833000000203924e-06, 1.020900000003877e-05, 9.653000000220402e-06, 5.694999999583672e-06, 4.3340000002167756e-06]</msg>
<status status="PASS" starttime="20201029 18:17:34.579" endtime="20201029 18:17:34.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.575" endtime="20201029 18:17:34.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.207" endtime="20201029 18:17:34.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.207" endtime="20201029 18:17:34.582"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.590" endtime="20201029 18:17:34.604"></status>
</kw>
<msg timestamp="20201029 18:17:34.605" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.588" endtime="20201029 18:17:34.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.607" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.606" endtime="20201029 18:17:34.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.608" endtime="20201029 18:17:34.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.586" endtime="20201029 18:17:34.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.584" endtime="20201029 18:17:34.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.618" endtime="20201029 18:17:34.926"></status>
</kw>
<msg timestamp="20201029 18:17:34.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.570368403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.570377417, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:34.617" endtime="20201029 18:17:34.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.570368403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.570377417, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:34.931" endtime="20201029 18:17:34.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.940" endtime="20201029 18:17:34.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.613" endtime="20201029 18:17:34.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.612" endtime="20201029 18:17:34.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:34.947" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 6.152000000092528e-06}, {'diff': 6.416999999814266e-06}, {'diff': 8.37499999972735e-06}, {'diff': 8.847999999783696e-06}, {'diff': 6.9859999998200806e-06}, {'diff': 6.3469999997...</msg>
<status status="PASS" starttime="20201029 18:17:34.944" endtime="20201029 18:17:34.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:34.952" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 6.152000000092528e-06, 6.416999999814266e-06, 8.37499999972735e-06, 8.847999999783696e-06, 6.9859999998200806e-06, 6.3469999997955995e-06, 6.8890000002319596e-06, 9.874999999937017e-06, 6...</msg>
<status status="PASS" starttime="20201029 18:17:34.948" endtime="20201029 18:17:34.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.956" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:34.955" endtime="20201029 18:17:34.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.960" level="INFO">VALUE: [0, 6.152000000092528e-06, 6.416999999814266e-06, 8.37499999972735e-06, 8.847999999783696e-06, 6.9859999998200806e-06, 6.3469999997955995e-06, 6.8890000002319596e-06, 9.874999999937017e-06, 6.930999999710252e-06, 7.709000000133415e-06, 8.52799999995213e-06, 7.152999999870957e-06, 1.0166000000033648e-05, 0.36308208299999967, 7.847000000005266e-06, 8.167000000280922e-06, 9.889000000207204e-06, 9.26400000000882e-06, 8.930999999989808e-06, 8.958000000003352e-06, 9.235999999912536e-06, 8.194999999933117e-06, 9.582999999757646e-06, 6.320000000226145e-06, 7.388999999857759e-06, 1.065200000027744e-05, 7.58400000000492e-06, 9.653000000220402e-06, 8.347000000075155e-06, 7.082999999852291e-06, 9.222000000086439e-06, 9.401999999880672e-06, 6.319000000143404e-06, 4.833000000203924e-06, 1.020900000003877e-05, 9.653000000220402e-06, 5.694999999583672e-06, 4.3340000002167756e-06, 0.3642110970000001, 1.0139000000020104e-05, 7.236999999715721e-06, 6.764000000103465e-06, 7.026999999659722e-06, 1.1957999999978597e-05, 7.569999999734733e-06, 1.020900000003877e-05, 7.958999999946315e-06, 4.208000000005541e-06, 9.111000000228131e-06, 6.388999999717981e-06, 9.31899999967456e-06, 1.0097000000097722e-05, 8.735999999842647e-06, 4.888999999952404e-06, 9.01300000011318e-06, 5.722000000041305e-06, 7.971999999689672e-06, 7.903000000197835e-06, 7.903000000197835e-06, 6.8890000002319596e-06, 6.707999999910896e-06, 8.000000000230045e-06, 7.403000000127946e-06]</msg>
<status status="PASS" starttime="20201029 18:17:34.958" endtime="20201029 18:17:34.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.953" endtime="20201029 18:17:34.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.583" endtime="20201029 18:17:34.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.582" endtime="20201029 18:17:34.961"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.969" endtime="20201029 18:17:34.983"></status>
</kw>
<msg timestamp="20201029 18:17:34.984" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.967" endtime="20201029 18:17:34.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:34.986" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:34.985" endtime="20201029 18:17:34.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.988" endtime="20201029 18:17:34.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.965" endtime="20201029 18:17:34.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.963" endtime="20201029 18:17:34.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:34.997" endtime="20201029 18:17:35.311"></status>
</kw>
<msg timestamp="20201029 18:17:35.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.933843139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.933849042, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:34.995" endtime="20201029 18:17:35.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.933843139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.933849042, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:35.316" endtime="20201029 18:17:35.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.326" endtime="20201029 18:17:35.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.992" endtime="20201029 18:17:35.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.991" endtime="20201029 18:17:35.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:35.333" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.065200000027744e-05}, {'diff': 7.58400000000492e-06}, {'diff': 9.653000000220402e-06}, {'diff': 8.347000000075155e-06}, {'diff': 7.082999999852291e-06}, {'diff': 9.22200000008...</msg>
<status status="PASS" starttime="20201029 18:17:35.329" endtime="20201029 18:17:35.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:35.338" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.065200000027744e-05, 7.58400000000492e-06, 9.653000000220402e-06, 8.347000000075155e-06, 7.082999999852291e-06, 9.222000000086439e-06, 9.401999999880672e-06, 6.319000000143404e-06, 4.83...</msg>
<status status="PASS" starttime="20201029 18:17:35.334" endtime="20201029 18:17:35.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.342" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:35.341" endtime="20201029 18:17:35.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.345" level="INFO">VALUE: [0, 1.065200000027744e-05, 7.58400000000492e-06, 9.653000000220402e-06, 8.347000000075155e-06, 7.082999999852291e-06, 9.222000000086439e-06, 9.401999999880672e-06, 6.319000000143404e-06, 4.833000000203924e-06, 1.020900000003877e-05, 9.653000000220402e-06, 5.694999999583672e-06, 4.3340000002167756e-06, 0.3642110970000001, 1.0139000000020104e-05, 7.236999999715721e-06, 6.764000000103465e-06, 7.026999999659722e-06, 1.1957999999978597e-05, 7.569999999734733e-06, 1.020900000003877e-05, 7.958999999946315e-06, 4.208000000005541e-06, 9.111000000228131e-06, 6.388999999717981e-06, 9.31899999967456e-06, 1.0097000000097722e-05, 8.735999999842647e-06, 4.888999999952404e-06, 9.01300000011318e-06, 5.722000000041305e-06, 7.971999999689672e-06, 7.903000000197835e-06, 7.903000000197835e-06, 6.8890000002319596e-06, 6.707999999910896e-06, 8.000000000230045e-06, 7.403000000127946e-06, 0.3687261949999998, 6.2080000002850966e-06, 1.0361000000180809e-05, 8.777000000126378e-06, 6.4580000000979965e-06, 7.819999999991722e-06, 9.22300000016918e-06, 8.944000000177255e-06, 6.8469999998654885e-06, 7.013000000277714e-06, 6.028000000046774e-06, 1.0055999999813992e-05, 7.209000000063526e-06, 7.416999999954044e-06, 9.777999999904807e-06, 8.02799999988224e-06, 7.915999999941192e-06, 7.472999999702523e-06, 6.179999999744723e-06, 8.860999999971142e-06, 8.332999999804969e-06, 7.58299999992218e-06, 6.028000000046774e-06, 9.597000000027833e-06, 7.2230000003337125e-06]</msg>
<status status="PASS" starttime="20201029 18:17:35.343" endtime="20201029 18:17:35.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.339" endtime="20201029 18:17:35.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.962" endtime="20201029 18:17:35.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:34.961" endtime="20201029 18:17:35.347"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.354" endtime="20201029 18:17:35.369"></status>
</kw>
<msg timestamp="20201029 18:17:35.369" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:35.353" endtime="20201029 18:17:35.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.372" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:35.370" endtime="20201029 18:17:35.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.373" endtime="20201029 18:17:35.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.350" endtime="20201029 18:17:35.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.348" endtime="20201029 18:17:35.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.382" endtime="20201029 18:17:35.696"></status>
</kw>
<msg timestamp="20201029 18:17:35.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.298446125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.298453792, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:35.380" endtime="20201029 18:17:35.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.298446125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.298453792, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:35.701" endtime="20201029 18:17:35.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.711" endtime="20201029 18:17:35.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.378" endtime="20201029 18:17:35.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.376" endtime="20201029 18:17:35.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:35.718" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.31899999967456e-06}, {'diff': 1.0097000000097722e-05}, {'diff': 8.735999999842647e-06}, {'diff': 4.888999999952404e-06}, {'diff': 9.01300000011318e-06}, {'diff': 5.72200000004...</msg>
<status status="PASS" starttime="20201029 18:17:35.714" endtime="20201029 18:17:35.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:35.722" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.31899999967456e-06, 1.0097000000097722e-05, 8.735999999842647e-06, 4.888999999952404e-06, 9.01300000011318e-06, 5.722000000041305e-06, 7.971999999689672e-06, 7.903000000197835e-06, 7.90...</msg>
<status status="PASS" starttime="20201029 18:17:35.719" endtime="20201029 18:17:35.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.727" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:35.726" endtime="20201029 18:17:35.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.730" level="INFO">VALUE: [0, 9.31899999967456e-06, 1.0097000000097722e-05, 8.735999999842647e-06, 4.888999999952404e-06, 9.01300000011318e-06, 5.722000000041305e-06, 7.971999999689672e-06, 7.903000000197835e-06, 7.903000000197835e-06, 6.8890000002319596e-06, 6.707999999910896e-06, 8.000000000230045e-06, 7.403000000127946e-06, 0.3687261949999998, 6.2080000002850966e-06, 1.0361000000180809e-05, 8.777000000126378e-06, 6.4580000000979965e-06, 7.819999999991722e-06, 9.22300000016918e-06, 8.944000000177255e-06, 6.8469999998654885e-06, 7.013000000277714e-06, 6.028000000046774e-06, 1.0055999999813992e-05, 7.209000000063526e-06, 7.416999999954044e-06, 9.777999999904807e-06, 8.02799999988224e-06, 7.915999999941192e-06, 7.472999999702523e-06, 6.179999999744723e-06, 8.860999999971142e-06, 8.332999999804969e-06, 7.58299999992218e-06, 6.028000000046774e-06, 9.597000000027833e-06, 7.2230000003337125e-06, 0.37395617999999997, 6.083999999795253e-06, 1.0416000000290637e-05, 6.153000000175268e-06, 7.83399999981782e-06, 5.7770000001511335e-06, 8.082999999992069e-06, 7.486000000334059e-06, 8.77799999976503e-06, 6.903000000058057e-06, 9.888999999319026e-06, 9.16599999989387e-06, 7.722000000320861e-06, 4.208000000005541e-06, 7.2080000004248745e-06, 1.0332999999640435e-05, 8.139000000184637e-06, 8.679999999650079e-06, 1.0387999999750264e-05, 8.151999999483905e-06, 6.473000000006834e-06, 9.278000000279008e-06, 7.83299999973508e-06, 1.0083000000271625e-05, 7.77800000051343e-06]</msg>
<status status="PASS" starttime="20201029 18:17:35.728" endtime="20201029 18:17:35.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.724" endtime="20201029 18:17:35.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.347" endtime="20201029 18:17:35.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.347" endtime="20201029 18:17:35.731"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.740" endtime="20201029 18:17:35.754"></status>
</kw>
<msg timestamp="20201029 18:17:35.754" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:35.737" endtime="20201029 18:17:35.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:35.757" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:35.755" endtime="20201029 18:17:35.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.758" endtime="20201029 18:17:35.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.735" endtime="20201029 18:17:35.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.733" endtime="20201029 18:17:35.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:35.767" endtime="20201029 18:17:36.081"></status>
</kw>
<msg timestamp="20201029 18:17:36.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.667557014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.667567333, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:35.765" endtime="20201029 18:17:36.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.667557014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.667567333, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:36.086" endtime="20201029 18:17:36.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.096" endtime="20201029 18:17:36.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.763" endtime="20201029 18:17:36.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.761" endtime="20201029 18:17:36.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:36.103" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.209000000063526e-06}, {'diff': 7.416999999954044e-06}, {'diff': 9.777999999904807e-06}, {'diff': 8.02799999988224e-06}, {'diff': 7.915999999941192e-06}, {'diff': 7.47299999970...</msg>
<status status="PASS" starttime="20201029 18:17:36.099" endtime="20201029 18:17:36.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:36.108" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.209000000063526e-06, 7.416999999954044e-06, 9.777999999904807e-06, 8.02799999988224e-06, 7.915999999941192e-06, 7.472999999702523e-06, 6.179999999744723e-06, 8.860999999971142e-06, 8.33...</msg>
<status status="PASS" starttime="20201029 18:17:36.104" endtime="20201029 18:17:36.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.113" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:36.112" endtime="20201029 18:17:36.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.115" level="INFO">VALUE: [0, 7.209000000063526e-06, 7.416999999954044e-06, 9.777999999904807e-06, 8.02799999988224e-06, 7.915999999941192e-06, 7.472999999702523e-06, 6.179999999744723e-06, 8.860999999971142e-06, 8.332999999804969e-06, 7.58299999992218e-06, 6.028000000046774e-06, 9.597000000027833e-06, 7.2230000003337125e-06, 0.37395617999999997, 6.083999999795253e-06, 1.0416000000290637e-05, 6.153000000175268e-06, 7.83399999981782e-06, 5.7770000001511335e-06, 8.082999999992069e-06, 7.486000000334059e-06, 8.77799999976503e-06, 6.903000000058057e-06, 9.888999999319026e-06, 9.16599999989387e-06, 7.722000000320861e-06, 4.208000000005541e-06, 7.2080000004248745e-06, 1.0332999999640435e-05, 8.139000000184637e-06, 8.679999999650079e-06, 1.0387999999750264e-05, 8.151999999483905e-06, 6.473000000006834e-06, 9.278000000279008e-06, 7.83299999973508e-06, 1.0083000000271625e-05, 7.77800000051343e-06, 0.37423249999999975, 1.09999999997612e-05, 7.540999999555709e-06, 1.0651999999389261e-05, 8.388000000358886e-06, 9.944000000317033e-06, 8.374999999283261e-06, 8.47300000028639e-06, 4.570000000647667e-06, 1.0222000000226217e-05, 8.013999999612054e-06, 4.972000000158516e-06, 8.778000000653208e-06, 1.0639000000089993e-05, 8.860999999527053e-06, 9.4170000002336e-06, 5.8469999997257105e-06, 9.70800000033023e-06, 5.473000000755235e-06, 7.527999999368262e-06, 6.221999999667105e-06, 8.860999999527053e-06, 9.082999999243668e-06, 8.833000000763036e-06, 1.0333000000528614e-05]</msg>
<status status="PASS" starttime="20201029 18:17:36.114" endtime="20201029 18:17:36.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.109" endtime="20201029 18:17:36.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.732" endtime="20201029 18:17:36.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:35.731" endtime="20201029 18:17:36.117"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.124" endtime="20201029 18:17:36.139"></status>
</kw>
<msg timestamp="20201029 18:17:36.140" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:36.123" endtime="20201029 18:17:36.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.142" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:36.141" endtime="20201029 18:17:36.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.143" endtime="20201029 18:17:36.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.120" endtime="20201029 18:17:36.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.119" endtime="20201029 18:17:36.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.152" endtime="20201029 18:17:36.469"></status>
</kw>
<msg timestamp="20201029 18:17:36.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.041899722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.041905722, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:36.151" endtime="20201029 18:17:36.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.041899722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.041905722, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:36.474" endtime="20201029 18:17:36.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.483" endtime="20201029 18:17:36.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.148" endtime="20201029 18:17:36.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.146" endtime="20201029 18:17:36.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:36.490" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.722000000320861e-06}, {'diff': 4.208000000005541e-06}, {'diff': 7.2080000004248745e-06}, {'diff': 1.0332999999640435e-05}, {'diff': 8.139000000184637e-06}, {'diff': 8.67999999...</msg>
<status status="PASS" starttime="20201029 18:17:36.487" endtime="20201029 18:17:36.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:36.496" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.722000000320861e-06, 4.208000000005541e-06, 7.2080000004248745e-06, 1.0332999999640435e-05, 8.139000000184637e-06, 8.679999999650079e-06, 1.0387999999750264e-05, 8.151999999483905e-06, ...</msg>
<status status="PASS" starttime="20201029 18:17:36.491" endtime="20201029 18:17:36.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.500" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:36.499" endtime="20201029 18:17:36.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.503" level="INFO">VALUE: [0, 7.722000000320861e-06, 4.208000000005541e-06, 7.2080000004248745e-06, 1.0332999999640435e-05, 8.139000000184637e-06, 8.679999999650079e-06, 1.0387999999750264e-05, 8.151999999483905e-06, 6.473000000006834e-06, 9.278000000279008e-06, 7.83299999973508e-06, 1.0083000000271625e-05, 7.77800000051343e-06, 0.37423249999999975, 1.09999999997612e-05, 7.540999999555709e-06, 1.0651999999389261e-05, 8.388000000358886e-06, 9.944000000317033e-06, 8.374999999283261e-06, 8.47300000028639e-06, 4.570000000647667e-06, 1.0222000000226217e-05, 8.013999999612054e-06, 4.972000000158516e-06, 8.778000000653208e-06, 1.0639000000089993e-05, 8.860999999527053e-06, 9.4170000002336e-06, 5.8469999997257105e-06, 9.70800000033023e-06, 5.473000000755235e-06, 7.527999999368262e-06, 6.221999999667105e-06, 8.860999999527053e-06, 9.082999999243668e-06, 8.833000000763036e-06, 1.0333000000528614e-05, 0.3743434590000003, 6.903000000058057e-06, 5.374999999752106e-06, 8.596999999888055e-06, 9.139000000324415e-06, 4.874999999238128e-06, 8.693999999920266e-06, 1.0527999999787596e-05, 9.833000000014636e-06, 7.847000000005266e-06, 9.80600000044518e-06, 5.778000000233874e-06, 7.83299999973508e-06, 6.4720000008122724e-06, 8.528000000396219e-06, 5.902999999918279e-06, 7.402999999683857e-06, 8.292000000409416e-06, 8.457999999933463e-06, 8.320000000061611e-06, 9.957999999699041e-06, 9.750000000252612e-06, 8.27700000005649e-06, 8.957999999559263e-06, 1.0138999999576015e-05]</msg>
<status status="PASS" starttime="20201029 18:17:36.501" endtime="20201029 18:17:36.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.497" endtime="20201029 18:17:36.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.117" endtime="20201029 18:17:36.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.117" endtime="20201029 18:17:36.504"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.512" endtime="20201029 18:17:36.527"></status>
</kw>
<msg timestamp="20201029 18:17:36.527" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:36.511" endtime="20201029 18:17:36.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.530" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:36.528" endtime="20201029 18:17:36.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.531" endtime="20201029 18:17:36.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.508" endtime="20201029 18:17:36.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.506" endtime="20201029 18:17:36.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.540" endtime="20201029 18:17:36.859"></status>
</kw>
<msg timestamp="20201029 18:17:36.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.416537, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.416544778, 'source': 'DUT_IC', 'event': 'RISIN...</msg>
<status status="PASS" starttime="20201029 18:17:36.538" endtime="20201029 18:17:36.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.416537, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.416544778, 'source': 'DUT_IC', 'event': 'RISIN...</msg>
<status status="PASS" starttime="20201029 18:17:36.864" endtime="20201029 18:17:36.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.874" endtime="20201029 18:17:36.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.536" endtime="20201029 18:17:36.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.534" endtime="20201029 18:17:36.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:36.881" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.778000000653208e-06}, {'diff': 1.0639000000089993e-05}, {'diff': 8.860999999527053e-06}, {'diff': 9.4170000002336e-06}, {'diff': 5.8469999997257105e-06}, {'diff': 9.7080000003...</msg>
<status status="PASS" starttime="20201029 18:17:36.877" endtime="20201029 18:17:36.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:36.885" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.778000000653208e-06, 1.0639000000089993e-05, 8.860999999527053e-06, 9.4170000002336e-06, 5.8469999997257105e-06, 9.70800000033023e-06, 5.473000000755235e-06, 7.527999999368262e-06, 6.22...</msg>
<status status="PASS" starttime="20201029 18:17:36.881" endtime="20201029 18:17:36.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.890" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:36.889" endtime="20201029 18:17:36.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.892" level="INFO">VALUE: [0, 8.778000000653208e-06, 1.0639000000089993e-05, 8.860999999527053e-06, 9.4170000002336e-06, 5.8469999997257105e-06, 9.70800000033023e-06, 5.473000000755235e-06, 7.527999999368262e-06, 6.221999999667105e-06, 8.860999999527053e-06, 9.082999999243668e-06, 8.833000000763036e-06, 1.0333000000528614e-05, 0.3743434590000003, 6.903000000058057e-06, 5.374999999752106e-06, 8.596999999888055e-06, 9.139000000324415e-06, 4.874999999238128e-06, 8.693999999920266e-06, 1.0527999999787596e-05, 9.833000000014636e-06, 7.847000000005266e-06, 9.80600000044518e-06, 5.778000000233874e-06, 7.83299999973508e-06, 6.4720000008122724e-06, 8.528000000396219e-06, 5.902999999918279e-06, 7.402999999683857e-06, 8.292000000409416e-06, 8.457999999933463e-06, 8.320000000061611e-06, 9.957999999699041e-06, 9.750000000252612e-06, 8.27700000005649e-06, 8.957999999559263e-06, 1.0138999999576015e-05, 0.377180278, 6.944999999980439e-06, 8.110999999644264e-06, 6.861000000135675e-06, 8.777000000570467e-06, 9.458000000073241e-06, 7.694999999863228e-06, 6.19400000001491e-06, 9.4170000002336e-06, 1.0833000000154414e-05, 7.847000000005266e-06, 8.708000000190452e-06, 7.458999999876426e-06, 7.013999999472276e-06, 1.0472000000483206e-05, 9.846999999396644e-06, 1.0222000000226217e-05, 5.6659999998487365e-06, 6.166000000362715e-06, 6.153000000175268e-06, 9.653000000220402e-06, 9.833000000014636e-06, 6.264000000477665e-06, 9.402999999963413e-06, 6.903000000058057e-06]</msg>
<status status="PASS" starttime="20201029 18:17:36.891" endtime="20201029 18:17:36.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.886" endtime="20201029 18:17:36.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.505" endtime="20201029 18:17:36.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.505" endtime="20201029 18:17:36.894"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.902" endtime="20201029 18:17:36.916"></status>
</kw>
<msg timestamp="20201029 18:17:36.916" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:36.901" endtime="20201029 18:17:36.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:36.919" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:36.917" endtime="20201029 18:17:36.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.920" endtime="20201029 18:17:36.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.897" endtime="20201029 18:17:36.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.896" endtime="20201029 18:17:36.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:36.929" endtime="20201029 18:17:37.245"></status>
</kw>
<msg timestamp="20201029 18:17:37.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.791285139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.791290917, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:36.927" endtime="20201029 18:17:37.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.791285139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.791290917, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:37.249" endtime="20201029 18:17:37.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.259" endtime="20201029 18:17:37.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.925" endtime="20201029 18:17:37.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.923" endtime="20201029 18:17:37.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:37.266" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.83299999973508e-06}, {'diff': 6.4720000008122724e-06}, {'diff': 8.528000000396219e-06}, {'diff': 5.902999999918279e-06}, {'diff': 7.402999999683857e-06}, {'diff': 8.2920000004...</msg>
<status status="PASS" starttime="20201029 18:17:37.262" endtime="20201029 18:17:37.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:37.271" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.83299999973508e-06, 6.4720000008122724e-06, 8.528000000396219e-06, 5.902999999918279e-06, 7.402999999683857e-06, 8.292000000409416e-06, 8.457999999933463e-06, 8.320000000061611e-06, 9.9...</msg>
<status status="PASS" starttime="20201029 18:17:37.267" endtime="20201029 18:17:37.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.276" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:37.275" endtime="20201029 18:17:37.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.278" level="INFO">VALUE: [0, 7.83299999973508e-06, 6.4720000008122724e-06, 8.528000000396219e-06, 5.902999999918279e-06, 7.402999999683857e-06, 8.292000000409416e-06, 8.457999999933463e-06, 8.320000000061611e-06, 9.957999999699041e-06, 9.750000000252612e-06, 8.27700000005649e-06, 8.957999999559263e-06, 1.0138999999576015e-05, 0.377180278, 6.944999999980439e-06, 8.110999999644264e-06, 6.861000000135675e-06, 8.777000000570467e-06, 9.458000000073241e-06, 7.694999999863228e-06, 6.19400000001491e-06, 9.4170000002336e-06, 1.0833000000154414e-05, 7.847000000005266e-06, 8.708000000190452e-06, 7.458999999876426e-06, 7.013999999472276e-06, 1.0472000000483206e-05, 9.846999999396644e-06, 1.0222000000226217e-05, 5.6659999998487365e-06, 6.166000000362715e-06, 6.153000000175268e-06, 9.653000000220402e-06, 9.833000000014636e-06, 6.264000000477665e-06, 9.402999999963413e-06, 6.903000000058057e-06, 0.3797580829999996, 9.528000000535997e-06, 9.47299999953799e-06, 9.874999999937017e-06, 8.097000000262256e-06, 6.459000000624826e-06, 6.305999999511869e-06, 8.77799999976503e-06, 8.693999999920266e-06, 1.0388999999833004e-05, 1.0097000000541811e-05, 6.014000000220676e-06, 8.778000000653208e-06, 9.582999999757646e-06, 8.097000000262256e-06, 8.33299999936088e-06, 8.012999999529313e-06, 8.832999999874858e-06, 7.709000000133415e-06, 7.583999999560831e-06, 7.0279999997424625e-06, 6.651999999718328e-06, 6.527000000033922e-06, 7.833000000623258e-06, 6.29200000012986e-06]</msg>
<status status="PASS" starttime="20201029 18:17:37.277" endtime="20201029 18:17:37.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.272" endtime="20201029 18:17:37.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.894" endtime="20201029 18:17:37.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:36.894" endtime="20201029 18:17:37.280"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.288" endtime="20201029 18:17:37.303"></status>
</kw>
<msg timestamp="20201029 18:17:37.303" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:37.286" endtime="20201029 18:17:37.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.306" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:37.305" endtime="20201029 18:17:37.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.308" endtime="20201029 18:17:37.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.284" endtime="20201029 18:17:37.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.282" endtime="20201029 18:17:37.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.319" endtime="20201029 18:17:37.633"></status>
</kw>
<msg timestamp="20201029 18:17:37.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.168859194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.168866097, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:37.318" endtime="20201029 18:17:37.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.168859194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.168866097, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:37.638" endtime="20201029 18:17:37.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.648" endtime="20201029 18:17:37.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.314" endtime="20201029 18:17:37.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.312" endtime="20201029 18:17:37.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:37.656" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 7.458999999876426e-06}, {'diff': 7.013999999472276e-06}, {'diff': 1.0472000000483206e-05}, {'diff': 9.846999999396644e-06}, {'diff': 1.0222000000226217e-05}, {'diff': 5.66599999...</msg>
<status status="PASS" starttime="20201029 18:17:37.651" endtime="20201029 18:17:37.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:37.660" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 7.458999999876426e-06, 7.013999999472276e-06, 1.0472000000483206e-05, 9.846999999396644e-06, 1.0222000000226217e-05, 5.6659999998487365e-06, 6.166000000362715e-06, 6.153000000175268e-06, ...</msg>
<status status="PASS" starttime="20201029 18:17:37.657" endtime="20201029 18:17:37.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.665" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:37.664" endtime="20201029 18:17:37.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.668" level="INFO">VALUE: [0, 7.458999999876426e-06, 7.013999999472276e-06, 1.0472000000483206e-05, 9.846999999396644e-06, 1.0222000000226217e-05, 5.6659999998487365e-06, 6.166000000362715e-06, 6.153000000175268e-06, 9.653000000220402e-06, 9.833000000014636e-06, 6.264000000477665e-06, 9.402999999963413e-06, 6.903000000058057e-06, 0.3797580829999996, 9.528000000535997e-06, 9.47299999953799e-06, 9.874999999937017e-06, 8.097000000262256e-06, 6.459000000624826e-06, 6.305999999511869e-06, 8.77799999976503e-06, 8.693999999920266e-06, 1.0388999999833004e-05, 1.0097000000541811e-05, 6.014000000220676e-06, 8.778000000653208e-06, 9.582999999757646e-06, 8.097000000262256e-06, 8.33299999936088e-06, 8.012999999529313e-06, 8.832999999874858e-06, 7.709000000133415e-06, 7.583999999560831e-06, 7.0279999997424625e-06, 6.651999999718328e-06, 6.527000000033922e-06, 7.833000000623258e-06, 6.29200000012986e-06, 0.3753754580000006, 6.528000000116663e-06, 9.903000000477391e-06, 1.0041000000349243e-05, 6.610999999878686e-06, 6.83300000048348e-06, 9.750000000252612e-06, 9.028000000022018e-06, 7.77800000051343e-06, 9.013999999751832e-06, 9.084000000214587e-06, 6.652999999801068e-06, 8.249999999598856e-06, 5.070000000273467e-06, 7.764000000243243e-06, 5.403000000292479e-06, 7.402000000489295e-06, 6.583000000226491e-06, 6.707999999910896e-06, 7.541999999638449e-06, 1.0514000000405588e-05, 8.347999999713807e-06, 8.152999999566646e-06, 6.457999999653907e-06, 6.847000000753667e-06]</msg>
<status status="PASS" starttime="20201029 18:17:37.666" endtime="20201029 18:17:37.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.662" endtime="20201029 18:17:37.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.281" endtime="20201029 18:17:37.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.280" endtime="20201029 18:17:37.669"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.677" endtime="20201029 18:17:37.691"></status>
</kw>
<msg timestamp="20201029 18:17:37.692" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:37.675" endtime="20201029 18:17:37.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:37.694" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:37.693" endtime="20201029 18:17:37.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.695" endtime="20201029 18:17:37.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.673" endtime="20201029 18:17:37.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.671" endtime="20201029 18:17:37.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:37.706" endtime="20201029 18:17:38.017"></status>
</kw>
<msg timestamp="20201029 18:17:38.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.549005431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.549014333, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:37.704" endtime="20201029 18:17:38.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.549005431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.549014333, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:38.022" endtime="20201029 18:17:38.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.032" endtime="20201029 18:17:38.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.700" endtime="20201029 18:17:38.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.699" endtime="20201029 18:17:38.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:38.039" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.778000000653208e-06}, {'diff': 9.582999999757646e-06}, {'diff': 8.097000000262256e-06}, {'diff': 8.33299999936088e-06}, {'diff': 8.012999999529313e-06}, {'diff': 8.83299999987...</msg>
<status status="PASS" starttime="20201029 18:17:38.035" endtime="20201029 18:17:38.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:38.043" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.778000000653208e-06, 9.582999999757646e-06, 8.097000000262256e-06, 8.33299999936088e-06, 8.012999999529313e-06, 8.832999999874858e-06, 7.709000000133415e-06, 7.583999999560831e-06, 7.02...</msg>
<status status="PASS" starttime="20201029 18:17:38.040" endtime="20201029 18:17:38.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.048" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:38.047" endtime="20201029 18:17:38.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.051" level="INFO">VALUE: [0, 8.778000000653208e-06, 9.582999999757646e-06, 8.097000000262256e-06, 8.33299999936088e-06, 8.012999999529313e-06, 8.832999999874858e-06, 7.709000000133415e-06, 7.583999999560831e-06, 7.0279999997424625e-06, 6.651999999718328e-06, 6.527000000033922e-06, 7.833000000623258e-06, 6.29200000012986e-06, 0.3753754580000006, 6.528000000116663e-06, 9.903000000477391e-06, 1.0041000000349243e-05, 6.610999999878686e-06, 6.83300000048348e-06, 9.750000000252612e-06, 9.028000000022018e-06, 7.77800000051343e-06, 9.013999999751832e-06, 9.084000000214587e-06, 6.652999999801068e-06, 8.249999999598856e-06, 5.070000000273467e-06, 7.764000000243243e-06, 5.403000000292479e-06, 7.402000000489295e-06, 6.583000000226491e-06, 6.707999999910896e-06, 7.541999999638449e-06, 1.0514000000405588e-05, 8.347999999713807e-06, 8.152999999566646e-06, 6.457999999653907e-06, 6.847000000753667e-06, 0.3784874030000003, 9.47299999953799e-06, 9.582999999757646e-06, 7.971999999689672e-06, 6.83300000048348e-06, 5.9580000000281075e-06, 8.263999999869043e-06, 9.26400000000882e-06, 1.1527999999927374e-05, 4.582999999946935e-06, 7.667000000211033e-06, 5.819000000073515e-06, 1.1028000000301574e-05, 8.082999999992069e-06, 9.445000000773973e-06, 5.15300000003549e-06, 5.332999999829724e-06, 8.096999999374077e-06, 8.27800000013923e-06, 1.0429999999672646e-05, 6.179999999744723e-06, 8.097000000262256e-06, 9.887999999236285e-06, 8.97299999991219e-06, 9.291999999661016e-06]</msg>
<status status="PASS" starttime="20201029 18:17:38.050" endtime="20201029 18:17:38.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.044" endtime="20201029 18:17:38.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.670" endtime="20201029 18:17:38.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:37.669" endtime="20201029 18:17:38.053"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.060" endtime="20201029 18:17:38.074"></status>
</kw>
<msg timestamp="20201029 18:17:38.075" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.059" endtime="20201029 18:17:38.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.077" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.076" endtime="20201029 18:17:38.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.078" endtime="20201029 18:17:38.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.056" endtime="20201029 18:17:38.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.055" endtime="20201029 18:17:38.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.087" endtime="20201029 18:17:38.401"></status>
</kw>
<msg timestamp="20201029 18:17:38.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.924778514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.924787667, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:38.086" endtime="20201029 18:17:38.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.924778514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.924787667, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:38.406" endtime="20201029 18:17:38.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.416" endtime="20201029 18:17:38.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.083" endtime="20201029 18:17:38.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.081" endtime="20201029 18:17:38.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:38.422" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.249999999598856e-06}, {'diff': 5.070000000273467e-06}, {'diff': 7.764000000243243e-06}, {'diff': 5.403000000292479e-06}, {'diff': 7.402000000489295e-06}, {'diff': 6.5830000002...</msg>
<status status="PASS" starttime="20201029 18:17:38.419" endtime="20201029 18:17:38.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:38.428" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.249999999598856e-06, 5.070000000273467e-06, 7.764000000243243e-06, 5.403000000292479e-06, 7.402000000489295e-06, 6.583000000226491e-06, 6.707999999910896e-06, 7.541999999638449e-06, 1.0...</msg>
<status status="PASS" starttime="20201029 18:17:38.423" endtime="20201029 18:17:38.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.432" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:38.431" endtime="20201029 18:17:38.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.435" level="INFO">VALUE: [0, 8.249999999598856e-06, 5.070000000273467e-06, 7.764000000243243e-06, 5.403000000292479e-06, 7.402000000489295e-06, 6.583000000226491e-06, 6.707999999910896e-06, 7.541999999638449e-06, 1.0514000000405588e-05, 8.347999999713807e-06, 8.152999999566646e-06, 6.457999999653907e-06, 6.847000000753667e-06, 0.3784874030000003, 9.47299999953799e-06, 9.582999999757646e-06, 7.971999999689672e-06, 6.83300000048348e-06, 5.9580000000281075e-06, 8.263999999869043e-06, 9.26400000000882e-06, 1.1527999999927374e-05, 4.582999999946935e-06, 7.667000000211033e-06, 5.819000000073515e-06, 1.1028000000301574e-05, 8.082999999992069e-06, 9.445000000773973e-06, 5.15300000003549e-06, 5.332999999829724e-06, 8.096999999374077e-06, 8.27800000013923e-06, 1.0429999999672646e-05, 6.179999999744723e-06, 8.097000000262256e-06, 9.887999999236285e-06, 8.97299999991219e-06, 9.291999999661016e-06, 0.37223790300000026, 7.457999999793685e-06, 7.958000000307663e-06, 8.584000000588787e-06, 8.764000000383021e-06, 7.764000000243243e-06, 8.832999999874858e-06, 6.832999999595302e-06, 8.18100000010702e-06, 8.013999999612054e-06, 9.582999999757646e-06, 7.33400000019202e-06, 7.68000000039848e-06, 8.082999999992069e-06, 1.0277999999530607e-05, 8.583999999700609e-06, 8.139000000184637e-06, 1.1208000000095808e-05, 5.596999999468721e-06, 9.735999999982425e-06, 7.777999999625251e-06, 8.096999999374077e-06, 9.028000000022018e-06, 7.527999999368262e-06, 6.486000000194281e-06]</msg>
<status status="PASS" starttime="20201029 18:17:38.433" endtime="20201029 18:17:38.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.429" endtime="20201029 18:17:38.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.053" endtime="20201029 18:17:38.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.053" endtime="20201029 18:17:38.436"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.444" endtime="20201029 18:17:38.458"></status>
</kw>
<msg timestamp="20201029 18:17:38.459" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.443" endtime="20201029 18:17:38.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.461" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.460" endtime="20201029 18:17:38.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.462" endtime="20201029 18:17:38.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.440" endtime="20201029 18:17:38.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.438" endtime="20201029 18:17:38.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.471" endtime="20201029 18:17:38.788"></status>
</kw>
<msg timestamp="20201029 18:17:38.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.303661875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.303666708, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:38.470" endtime="20201029 18:17:38.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.303661875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.303666708, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:17:38.793" endtime="20201029 18:17:38.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.803" endtime="20201029 18:17:38.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.467" endtime="20201029 18:17:38.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.465" endtime="20201029 18:17:38.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:38.810" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.1028000000301574e-05}, {'diff': 8.082999999992069e-06}, {'diff': 9.445000000773973e-06}, {'diff': 5.15300000003549e-06}, {'diff': 5.332999999829724e-06}, {'diff': 8.0969999993...</msg>
<status status="PASS" starttime="20201029 18:17:38.806" endtime="20201029 18:17:38.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:38.814" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.1028000000301574e-05, 8.082999999992069e-06, 9.445000000773973e-06, 5.15300000003549e-06, 5.332999999829724e-06, 8.096999999374077e-06, 8.27800000013923e-06, 1.0429999999672646e-05, 6.1...</msg>
<status status="PASS" starttime="20201029 18:17:38.811" endtime="20201029 18:17:38.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.826" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:17:38.825" endtime="20201029 18:17:38.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.828" level="INFO">VALUE: [0, 1.1028000000301574e-05, 8.082999999992069e-06, 9.445000000773973e-06, 5.15300000003549e-06, 5.332999999829724e-06, 8.096999999374077e-06, 8.27800000013923e-06, 1.0429999999672646e-05, 6.179999999744723e-06, 8.097000000262256e-06, 9.887999999236285e-06, 8.97299999991219e-06, 9.291999999661016e-06, 0.37223790300000026, 7.457999999793685e-06, 7.958000000307663e-06, 8.584000000588787e-06, 8.764000000383021e-06, 7.764000000243243e-06, 8.832999999874858e-06, 6.832999999595302e-06, 8.18100000010702e-06, 8.013999999612054e-06, 9.582999999757646e-06, 7.33400000019202e-06, 7.68000000039848e-06, 8.082999999992069e-06, 1.0277999999530607e-05, 8.583999999700609e-06, 8.139000000184637e-06, 1.1208000000095808e-05, 5.596999999468721e-06, 9.735999999982425e-06, 7.777999999625251e-06, 8.096999999374077e-06, 9.028000000022018e-06, 7.527999999368262e-06, 6.486000000194281e-06, 0.374507597, 8.417000000093822e-06, 1.0027999999273618e-05, 7.694999999863228e-06, 7.416999999954044e-06, 9.153000000594602e-06, 1.0388999999833004e-05, 1.115299999998598e-05, 5.527999999976885e-06, 8.348000000601985e-06, 1.0193999999685843e-05, 8.27700000005649e-06, 4.375000000500506e-06, 7.445000000494417e-06, 9.528000000535997e-06, 6.528000000116663e-06, 8.47200000020365e-06, 8.695000000003006e-06, 8.528000000396219e-06, 8.52799999950804e-06, 5.584000000169453e-06, 8.750000000112834e-06, 5.917000000188466e-06, 5.639000000279282e-06, 7.889000000815827e-06]</msg>
<status status="PASS" starttime="20201029 18:17:38.827" endtime="20201029 18:17:38.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.822" endtime="20201029 18:17:38.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.437" endtime="20201029 18:17:38.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.437" endtime="20201029 18:17:38.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.258" endtime="20201029 18:17:38.830"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:31.187" endtime="20201029 18:17:38.830" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:38.837" endtime="20201029 18:17:38.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.836" endtime="20201029 18:17:38.857"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.871" endtime="20201029 18:17:38.889"></status>
</kw>
<msg timestamp="20201029 18:17:38.889" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.869" endtime="20201029 18:17:38.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.892" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.890" endtime="20201029 18:17:38.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.895" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:38.893" endtime="20201029 18:17:38.895"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:38.867" endtime="20201029 18:17:38.896"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:38.864" endtime="20201029 18:17:38.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.863" endtime="20201029 18:17:38.897"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:38.900" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:38.900" endtime="20201029 18:17:38.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.897" endtime="20201029 18:17:38.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.862" endtime="20201029 18:17:38.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.862" endtime="20201029 18:17:38.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.902" endtime="20201029 18:17:38.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.859" endtime="20201029 18:17:38.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.858" endtime="20201029 18:17:38.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.834" endtime="20201029 18:17:38.905"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.913" endtime="20201029 18:17:38.929"></status>
</kw>
<msg timestamp="20201029 18:17:38.929" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.912" endtime="20201029 18:17:38.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.932" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.930" endtime="20201029 18:17:38.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.933" endtime="20201029 18:17:38.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.909" endtime="20201029 18:17:38.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.908" endtime="20201029 18:17:38.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.943" endtime="20201029 18:17:39.230"></status>
</kw>
<msg timestamp="20201029 18:17:39.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065823264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065846278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:38.941" endtime="20201029 18:17:39.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065823264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065846278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:39.234" endtime="20201029 18:17:39.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.242" endtime="20201029 18:17:39.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.938" endtime="20201029 18:17:39.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.936" endtime="20201029 18:17:39.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:39.249" level="INFO">${RESULT} = [{'diff': 2.3013999999987877e-05}, {'diff': 1.1670000000102432e-06}, {'diff': 1.1659999999968917e-06}, {'diff': 1.1800000000034006e-06}, {'diff': 1.1250000000045945e-06}, {'diff': 1.1669999999963654e-...</msg>
<status status="PASS" starttime="20201029 18:17:39.245" endtime="20201029 18:17:39.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:39.253" level="INFO">${OVERHEAD} = {'diff': [2.3013999999987877e-05, 1.1670000000102432e-06, 1.1659999999968917e-06, 1.1800000000034006e-06, 1.1250000000045945e-06, 1.1669999999963654e-06, 1.1390000000111034e-06, 1.1530000000037344e-06...</msg>
<status status="PASS" starttime="20201029 18:17:39.250" endtime="20201029 18:17:39.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.258" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:39.257" endtime="20201029 18:17:39.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.260" level="INFO">VALUE: [2.3013999999987877e-05, 1.1670000000102432e-06, 1.1659999999968917e-06, 1.1800000000034006e-06, 1.1250000000045945e-06, 1.1669999999963654e-06, 1.1390000000111034e-06, 1.1530000000037344e-06, 1.1669999999963654e-06, 1.1670000000102432e-06, 1.1389999999972256e-06, 1.1800000000034006e-06, 1.1659999999968917e-06, 1.1659999999968917e-06, 1.2080000000025404e-06, 1.1249999999907168e-06, 1.1660000000107695e-06, 1.1660000000107695e-06, 1.151999999990383e-06, 1.1530000000037344e-06, 1.1389999999972256e-06, 1.1530000000037344e-06, 1.0970000000054547e-06, 1.137999999997752e-06, 1.1670000000102432e-06, 1.1530000000037344e-06, 1.1389999999972256e-06, 1.1530000000037344e-06, 1.2089999999881362e-06, 1.1669999999963654e-06, 1.1659999999968917e-06, 1.1659999999968917e-06, 1.1810000000028742e-06, 1.1529999999898566e-06, 1.1670000000102432e-06, 1.1530000000037344e-06, 1.1389999999972256e-06, 1.1810000000028742e-06, 1.1389999999972256e-06, 1.1529999999898566e-06, 1.1800000000034006e-06, 1.1669999999963654e-06, 1.1669999999963654e-06, 1.1810000000028742e-06, 1.1810000000028742e-06, 1.1659999999968917e-06, 1.1800000000034006e-06, 1.1669999999963654e-06, 1.1520000000042607e-06, 1.1809999999889964e-06]</msg>
<status status="PASS" starttime="20201029 18:17:39.259" endtime="20201029 18:17:39.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.254" endtime="20201029 18:17:39.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.906" endtime="20201029 18:17:39.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.906" endtime="20201029 18:17:39.262"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.272" endtime="20201029 18:17:39.287"></status>
</kw>
<msg timestamp="20201029 18:17:39.287" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:39.269" endtime="20201029 18:17:39.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.290" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:39.288" endtime="20201029 18:17:39.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.291" endtime="20201029 18:17:39.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.267" endtime="20201029 18:17:39.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.265" endtime="20201029 18:17:39.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.300" endtime="20201029 18:17:39.603"></status>
</kw>
<msg timestamp="20201029 18:17:39.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066029986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066031125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:39.298" endtime="20201029 18:17:39.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066029986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066031125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:39.608" endtime="20201029 18:17:39.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.618" endtime="20201029 18:17:39.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.296" endtime="20201029 18:17:39.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.294" endtime="20201029 18:17:39.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:39.624" level="INFO">${RESULT} = [{'diff': 1.1389999999972256e-06}, {'diff': 1.1810000000028742e-06}, {'diff': 1.1389999999972256e-06}, {'diff': 1.1529999999898566e-06}, {'diff': 1.1800000000034006e-06}, {'diff': 1.1669999999963654e-...</msg>
<status status="PASS" starttime="20201029 18:17:39.621" endtime="20201029 18:17:39.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:39.630" level="INFO">${OVERHEAD} = {'diff': [1.1389999999972256e-06, 1.1810000000028742e-06, 1.1389999999972256e-06, 1.1529999999898566e-06, 1.1800000000034006e-06, 1.1669999999963654e-06, 1.1669999999963654e-06, 1.1810000000028742e-06...</msg>
<status status="PASS" starttime="20201029 18:17:39.625" endtime="20201029 18:17:39.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.634" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:39.633" endtime="20201029 18:17:39.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.636" level="INFO">VALUE: [1.1389999999972256e-06, 1.1810000000028742e-06, 1.1389999999972256e-06, 1.1529999999898566e-06, 1.1800000000034006e-06, 1.1669999999963654e-06, 1.1669999999963654e-06, 1.1810000000028742e-06, 1.1810000000028742e-06, 1.1659999999968917e-06, 1.1800000000034006e-06, 1.1669999999963654e-06, 1.1520000000042607e-06, 1.1809999999889964e-06, 1.1389999999833478e-06, 1.15300000003149e-06, 1.15300000003149e-06, 1.167000000024121e-06, 1.15300000003149e-06, 1.1659999999968917e-06, 1.1669999999686098e-06, 1.1529999999759788e-06, 1.167000000024121e-06, 1.15300000003149e-06, 1.1669999999686098e-06, 1.1389999999833478e-06, 1.1529999999759788e-06, 1.1380000000116297e-06, 1.0689999999646815e-06, 1.1809999999612408e-06, 1.1529999999759788e-06, 1.1669999999686098e-06, 1.1659999999968917e-06, 1.222000000022927e-06, 1.1529999999759788e-06, 1.15300000003149e-06, 1.167000000024121e-06, 1.167000000024121e-06, 1.167000000024121e-06, 1.1659999999968917e-06, 1.1249999999907168e-06, 1.1529999999759788e-06, 1.1659999999968917e-06, 1.167000000024121e-06, 1.1659999999968917e-06, 1.1249999999907168e-06, 1.1529999999759788e-06, 1.1520000000042607e-06, 1.167000000024121e-06, 1.167000000024121e-06, 1.1809999999612408e-06, 1.15300000003149e-06, 1.167000000024121e-06, 1.1529999999759788e-06, 1.139000000038859e-06, 1.167000000024121e-06, 1.15300000003149e-06, 1.1669999999686098e-06, 1.1520000000042607e-06, 1.1669999999686098e-06, 1.1529999999759788e-06, 1.167000000024121e-06, 1.1669999999686098e-06, 1.15300000003149e-06]</msg>
<status status="PASS" starttime="20201029 18:17:39.635" endtime="20201029 18:17:39.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.631" endtime="20201029 18:17:39.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.263" endtime="20201029 18:17:39.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.263" endtime="20201029 18:17:39.638"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.646" endtime="20201029 18:17:39.662"></status>
</kw>
<msg timestamp="20201029 18:17:39.662" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:39.645" endtime="20201029 18:17:39.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.665" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:39.663" endtime="20201029 18:17:39.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.666" endtime="20201029 18:17:39.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.642" endtime="20201029 18:17:39.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.640" endtime="20201029 18:17:39.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.675" endtime="20201029 18:17:39.972"></status>
</kw>
<msg timestamp="20201029 18:17:39.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.416031097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.416032278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:39.673" endtime="20201029 18:17:39.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:39.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.416031097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.416032278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:39.976" endtime="20201029 18:17:39.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:39.986" endtime="20201029 18:17:39.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.671" endtime="20201029 18:17:39.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.669" endtime="20201029 18:17:39.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:39.993" level="INFO">${RESULT} = [{'diff': 1.1809999999612408e-06}, {'diff': 1.15300000003149e-06}, {'diff': 1.167000000024121e-06}, {'diff': 1.1529999999759788e-06}, {'diff': 1.139000000038859e-06}, {'diff': 1.167000000024121e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:17:39.990" endtime="20201029 18:17:39.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:40.000" level="INFO">${OVERHEAD} = {'diff': [1.1809999999612408e-06, 1.15300000003149e-06, 1.167000000024121e-06, 1.1529999999759788e-06, 1.139000000038859e-06, 1.167000000024121e-06, 1.15300000003149e-06, 1.1669999999686098e-06, 1.152...</msg>
<status status="PASS" starttime="20201029 18:17:39.994" endtime="20201029 18:17:40.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.005" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:40.004" endtime="20201029 18:17:40.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.007" level="INFO">VALUE: [1.1809999999612408e-06, 1.15300000003149e-06, 1.167000000024121e-06, 1.1529999999759788e-06, 1.139000000038859e-06, 1.167000000024121e-06, 1.15300000003149e-06, 1.1669999999686098e-06, 1.1520000000042607e-06, 1.1669999999686098e-06, 1.1529999999759788e-06, 1.167000000024121e-06, 1.1669999999686098e-06, 1.15300000003149e-06, 1.1669999999686098e-06, 1.1659999999968917e-06, 1.1669999999686098e-06, 1.1670000000796321e-06, 1.15300000003149e-06, 1.181000000016752e-06, 1.1389999999833478e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.1659999999968917e-06, 1.1109999999980857e-06, 1.1519999999487496e-06, 1.098000000032684e-06, 1.1659999999968917e-06, 1.1520000000597719e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.1950000000648942e-06, 1.15300000003149e-06, 1.1519999999487496e-06, 1.1659999999968917e-06, 1.2219999999674158e-06, 1.1670000000796321e-06, 1.15300000003149e-06, 1.1659999999968917e-06, 1.1659999999968917e-06, 1.1669999999686098e-06, 1.1659999999968917e-06, 1.125000000046228e-06, 1.1659999999968917e-06, 1.1659999999968917e-06, 1.1669999999686098e-06, 1.15300000003149e-06, 1.1670000000796321e-06, 1.1659999999968917e-06, 1.1809999999057297e-06, 1.1669999999686098e-06, 1.180000000045034e-06, 1.180000000045034e-06, 1.1529999999204676e-06, 1.1520000000597719e-06, 1.1389999999833478e-06, 1.1670000000796321e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1519999999487496e-06, 1.1380000000116297e-06, 1.15300000003149e-06]</msg>
<status status="PASS" starttime="20201029 18:17:40.006" endtime="20201029 18:17:40.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.001" endtime="20201029 18:17:40.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.639" endtime="20201029 18:17:40.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:39.639" endtime="20201029 18:17:40.009"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.017" endtime="20201029 18:17:40.032"></status>
</kw>
<msg timestamp="20201029 18:17:40.033" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:40.015" endtime="20201029 18:17:40.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.035" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:40.034" endtime="20201029 18:17:40.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.036" endtime="20201029 18:17:40.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.013" endtime="20201029 18:17:40.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.011" endtime="20201029 18:17:40.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.045" endtime="20201029 18:17:40.357"></status>
</kw>
<msg timestamp="20201029 18:17:40.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.779574431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.779575597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:40.044" endtime="20201029 18:17:40.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.779574431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.779575597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:40.362" endtime="20201029 18:17:40.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.372" endtime="20201029 18:17:40.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.041" endtime="20201029 18:17:40.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.039" endtime="20201029 18:17:40.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:40.379" level="INFO">${RESULT} = [{'diff': 1.1659999999968917e-06}, {'diff': 1.1809999999057297e-06}, {'diff': 1.1669999999686098e-06}, {'diff': 1.180000000045034e-06}, {'diff': 1.180000000045034e-06}, {'diff': 1.1529999999204676e-06...</msg>
<status status="PASS" starttime="20201029 18:17:40.375" endtime="20201029 18:17:40.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:40.383" level="INFO">${OVERHEAD} = {'diff': [1.1659999999968917e-06, 1.1809999999057297e-06, 1.1669999999686098e-06, 1.180000000045034e-06, 1.180000000045034e-06, 1.1529999999204676e-06, 1.1520000000597719e-06, 1.1389999999833478e-06, ...</msg>
<status status="PASS" starttime="20201029 18:17:40.380" endtime="20201029 18:17:40.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.387" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:40.386" endtime="20201029 18:17:40.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.390" level="INFO">VALUE: [1.1659999999968917e-06, 1.1809999999057297e-06, 1.1669999999686098e-06, 1.180000000045034e-06, 1.180000000045034e-06, 1.1529999999204676e-06, 1.1520000000597719e-06, 1.1389999999833478e-06, 1.1670000000796321e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1519999999487496e-06, 1.1380000000116297e-06, 1.15300000003149e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.1530000001425122e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.1950000000648942e-06, 1.1530000001425122e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1669999999686098e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.125000000046228e-06, 1.125000000046228e-06, 1.166000000107914e-06, 1.13900000009437e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.166000000107914e-06, 1.1799999999340116e-06, 1.1669999999686098e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.1520000000597719e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.1530000001425122e-06, 1.1519999998377273e-06, 1.1530000001425122e-06, 1.1669999999686098e-06, 1.1799999999340116e-06, 1.1669999999686098e-06, 1.208000000030296e-06, 1.1529999999204676e-06]</msg>
<status status="PASS" starttime="20201029 18:17:40.388" endtime="20201029 18:17:40.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.384" endtime="20201029 18:17:40.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.010" endtime="20201029 18:17:40.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.009" endtime="20201029 18:17:40.392"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.401" endtime="20201029 18:17:40.417"></status>
</kw>
<msg timestamp="20201029 18:17:40.417" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:40.399" endtime="20201029 18:17:40.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.419" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:40.418" endtime="20201029 18:17:40.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.420" endtime="20201029 18:17:40.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.396" endtime="20201029 18:17:40.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.394" endtime="20201029 18:17:40.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.429" endtime="20201029 18:17:40.739"></status>
</kw>
<msg timestamp="20201029 18:17:40.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.141259403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.141260556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:40.428" endtime="20201029 18:17:40.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.141259403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.141260556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:40.744" endtime="20201029 18:17:40.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.754" endtime="20201029 18:17:40.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.425" endtime="20201029 18:17:40.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.424" endtime="20201029 18:17:40.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:40.761" level="INFO">${RESULT} = [{'diff': 1.1529999999204676e-06}, {'diff': 1.1669999999686098e-06}, {'diff': 1.1520000000597719e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1669999999686098e-0...</msg>
<status status="PASS" starttime="20201029 18:17:40.757" endtime="20201029 18:17:40.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:40.766" level="INFO">${OVERHEAD} = {'diff': [1.1529999999204676e-06, 1.1669999999686098e-06, 1.1520000000597719e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.1530000001425122e-06, 1.1519999998377273e-06,...</msg>
<status status="PASS" starttime="20201029 18:17:40.762" endtime="20201029 18:17:40.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.770" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:40.769" endtime="20201029 18:17:40.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.772" level="INFO">VALUE: [1.1529999999204676e-06, 1.1669999999686098e-06, 1.1520000000597719e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.1530000001425122e-06, 1.1519999998377273e-06, 1.1530000001425122e-06, 1.1669999999686098e-06, 1.1799999999340116e-06, 1.1669999999686098e-06, 1.208000000030296e-06, 1.1529999999204676e-06, 1.1520000000597719e-06, 1.1670000001906544e-06, 1.1520000000597719e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1520000000597719e-06, 1.1669999999686098e-06, 1.1520000000597719e-06, 1.181000000016752e-06, 1.0969999999499436e-06, 1.1389999998723255e-06, 1.1530000001425122e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.1799999999340116e-06, 1.1669999999686098e-06, 1.166000000107914e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.1380000000116297e-06, 1.1529999999204676e-06, 1.1520000000597719e-06, 1.1530000001425122e-06, 1.1670000001906544e-06, 1.166000000107914e-06, 1.166000000107914e-06, 1.1669999999686098e-06, 1.1670000001906544e-06, 1.1520000000597719e-06, 1.1530000001425122e-06, 1.13900000009437e-06, 1.1669999999686098e-06, 1.1800000001560562e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.1659999998858694e-06, 1.1530000001425122e-06, 1.1939999999821538e-06, 1.2219999998563935e-06]</msg>
<status status="PASS" starttime="20201029 18:17:40.771" endtime="20201029 18:17:40.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.767" endtime="20201029 18:17:40.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.393" endtime="20201029 18:17:40.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.392" endtime="20201029 18:17:40.774"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.782" endtime="20201029 18:17:40.797"></status>
</kw>
<msg timestamp="20201029 18:17:40.797" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:40.780" endtime="20201029 18:17:40.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:40.799" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:40.798" endtime="20201029 18:17:40.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.801" endtime="20201029 18:17:40.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.778" endtime="20201029 18:17:40.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.776" endtime="20201029 18:17:40.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:40.809" endtime="20201029 18:17:41.106"></status>
</kw>
<msg timestamp="20201029 18:17:41.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.515810472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.515811625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:40.808" endtime="20201029 18:17:41.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.515810472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.515811625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:41.111" endtime="20201029 18:17:41.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.121" endtime="20201029 18:17:41.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.805" endtime="20201029 18:17:41.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.804" endtime="20201029 18:17:41.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:41.128" level="INFO">${RESULT} = [{'diff': 1.1529999999204676e-06}, {'diff': 1.1669999999686098e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.1669999999686098e-06}, {'diff': 1.181000000016752e-06}...</msg>
<status status="PASS" starttime="20201029 18:17:41.124" endtime="20201029 18:17:41.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:41.134" level="INFO">${OVERHEAD} = {'diff': [1.1529999999204676e-06, 1.1669999999686098e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:17:41.129" endtime="20201029 18:17:41.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.139" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:41.137" endtime="20201029 18:17:41.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.141" level="INFO">VALUE: [1.1529999999204676e-06, 1.1669999999686098e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.1659999998858694e-06, 1.1530000001425122e-06, 1.1939999999821538e-06, 1.2219999998563935e-06, 1.1939999999821538e-06, 1.1669999999686098e-06, 1.166000000107914e-06, 1.1669999999686098e-06, 1.2220000000784381e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.1659999998858694e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.2220000000784381e-06, 1.13900000009437e-06, 1.2220000000784381e-06, 1.2220000000784381e-06, 1.1530000001425122e-06, 1.125000000046228e-06, 1.1800000001560562e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.1659999998858694e-06, 1.1669999999686098e-06, 1.1520000000597719e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.1669999999686098e-06, 1.1669999999686098e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.1520000000597719e-06, 1.1669999999686098e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.13900000009437e-06, 1.1659999998858694e-06, 1.1669999999686098e-06, 1.181000000016752e-06]</msg>
<status status="PASS" starttime="20201029 18:17:41.140" endtime="20201029 18:17:41.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.135" endtime="20201029 18:17:41.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.775" endtime="20201029 18:17:41.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:40.775" endtime="20201029 18:17:41.143"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.151" endtime="20201029 18:17:41.166"></status>
</kw>
<msg timestamp="20201029 18:17:41.166" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:41.149" endtime="20201029 18:17:41.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.169" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:41.167" endtime="20201029 18:17:41.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.170" endtime="20201029 18:17:41.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.147" endtime="20201029 18:17:41.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.145" endtime="20201029 18:17:41.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.180" endtime="20201029 18:17:41.490"></status>
</kw>
<msg timestamp="20201029 18:17:41.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.887282083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.887283236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:41.177" endtime="20201029 18:17:41.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.887282083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.887283236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:41.495" endtime="20201029 18:17:41.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.505" endtime="20201029 18:17:41.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.174" endtime="20201029 18:17:41.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.173" endtime="20201029 18:17:41.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:41.511" level="INFO">${RESULT} = [{'diff': 1.1529999999204676e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1669999999686098e-06}, {'diff': 1.1520000000597719e-06}, {'diff': 1.1669999999686098e-0...</msg>
<status status="PASS" starttime="20201029 18:17:41.508" endtime="20201029 18:17:41.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:41.516" level="INFO">${OVERHEAD} = {'diff': [1.1529999999204676e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.1520000000597719e-06, 1.1669999999686098e-06, 1.166000000107914e-06, 1.1670000001906544e-06, ...</msg>
<status status="PASS" starttime="20201029 18:17:41.512" endtime="20201029 18:17:41.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.520" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:41.519" endtime="20201029 18:17:41.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.523" level="INFO">VALUE: [1.1529999999204676e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.1520000000597719e-06, 1.1669999999686098e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1.181000000016752e-06, 1.1669999999686098e-06, 1.13900000009437e-06, 1.1659999998858694e-06, 1.1669999999686098e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.208000000030296e-06, 1.1799999999340116e-06, 1.1670000001906544e-06, 1.1659999996638248e-06, 1.1670000001906544e-06, 1.2219999998563935e-06, 1.1670000001906544e-06, 1.1950000002869388e-06, 1.1669999997465652e-06, 1.166000000107914e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1519999998377273e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.1659999996638248e-06, 1.1529999999204676e-06, 1.1659999996638248e-06, 1.1529999999204676e-06, 1.0839999999845418e-06, 1.166000000107914e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.13900000009437e-06, 1.2090000001130363e-06, 1.1799999999340116e-06, 1.1659999996638248e-06, 1.1950000002869388e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.1389999996502809e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.2229999999391339e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1670000001906544e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.166000000107914e-06]</msg>
<status status="PASS" starttime="20201029 18:17:41.521" endtime="20201029 18:17:41.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.517" endtime="20201029 18:17:41.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.144" endtime="20201029 18:17:41.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.144" endtime="20201029 18:17:41.525"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.533" endtime="20201029 18:17:41.548"></status>
</kw>
<msg timestamp="20201029 18:17:41.549" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:41.532" endtime="20201029 18:17:41.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.551" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:41.550" endtime="20201029 18:17:41.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.552" endtime="20201029 18:17:41.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.529" endtime="20201029 18:17:41.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.527" endtime="20201029 18:17:41.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.561" endtime="20201029 18:17:41.874"></status>
</kw>
<msg timestamp="20201029 18:17:41.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.245373292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.245374472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:41.560" endtime="20201029 18:17:41.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.245373292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.245374472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:41.879" endtime="20201029 18:17:41.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.889" endtime="20201029 18:17:41.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.557" endtime="20201029 18:17:41.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.556" endtime="20201029 18:17:41.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:41.895" level="INFO">${RESULT} = [{'diff': 1.1799999999340116e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.1389999996502809e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.181000000016752e-06}...</msg>
<status status="PASS" starttime="20201029 18:17:41.892" endtime="20201029 18:17:41.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:41.901" level="INFO">${OVERHEAD} = {'diff': [1.1799999999340116e-06, 1.1529999999204676e-06, 1.1389999996502809e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.2229999999391339e-06, 1.1669999997465652e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:17:41.896" endtime="20201029 18:17:41.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.905" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:41.904" endtime="20201029 18:17:41.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.907" level="INFO">VALUE: [1.1799999999340116e-06, 1.1529999999204676e-06, 1.1389999996502809e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.2229999999391339e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1670000001906544e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1670000001906544e-06, 1.1109999999980857e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1670000001906544e-06, 1.1670000001906544e-06, 1.1249999998241833e-06, 1.1670000001906544e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1.166000000107914e-06, 1.1659999996638248e-06, 1.1670000001906544e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1519999998377273e-06, 1.1800000003781008e-06, 1.13900000009437e-06, 1.166000000107914e-06, 1.1530000003645569e-06, 1.208000000030296e-06, 1.1519999998377273e-06, 1.1109999999980857e-06, 1.166000000107914e-06, 1.1800000003781008e-06, 1.1529999999204676e-06, 1.1800000003781008e-06, 1.1670000001906544e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.166000000107914e-06, 1.1669999997465652e-06, 1.1249999998241833e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1670000001906544e-06, 1.1530000003645569e-06, 1.1799999999340116e-06]</msg>
<status status="PASS" starttime="20201029 18:17:41.906" endtime="20201029 18:17:41.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.901" endtime="20201029 18:17:41.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.525" endtime="20201029 18:17:41.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.525" endtime="20201029 18:17:41.909"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.917" endtime="20201029 18:17:41.932"></status>
</kw>
<msg timestamp="20201029 18:17:41.933" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:41.915" endtime="20201029 18:17:41.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:41.935" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:41.934" endtime="20201029 18:17:41.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.936" endtime="20201029 18:17:41.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.913" endtime="20201029 18:17:41.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.911" endtime="20201029 18:17:41.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:41.945" endtime="20201029 18:17:42.263"></status>
</kw>
<msg timestamp="20201029 18:17:42.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.619401167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.619402347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:41.944" endtime="20201029 18:17:42.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.619401167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.619402347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:42.270" endtime="20201029 18:17:42.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.282" endtime="20201029 18:17:42.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.941" endtime="20201029 18:17:42.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.940" endtime="20201029 18:17:42.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:42.291" level="INFO">${RESULT} = [{'diff': 1.1799999999340116e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.166000000107914e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1249999998241833e-06...</msg>
<status status="PASS" starttime="20201029 18:17:42.286" endtime="20201029 18:17:42.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:42.296" level="INFO">${OVERHEAD} = {'diff': [1.1799999999340116e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.166000000107914e-06, 1.1669999997465652e-06, 1.1249999998241833e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1....</msg>
<status status="PASS" starttime="20201029 18:17:42.292" endtime="20201029 18:17:42.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.300" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:42.299" endtime="20201029 18:17:42.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.303" level="INFO">VALUE: [1.1799999999340116e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.166000000107914e-06, 1.1669999997465652e-06, 1.1249999998241833e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1670000001906544e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.166000000107914e-06, 1.1249999998241833e-06, 1.1659999996638248e-06, 1.1249999998241833e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1659999996638248e-06, 1.0970000001719882e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.1799999999340116e-06, 1.1249999998241833e-06, 1.1109999999980857e-06, 1.2219999998563935e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1800000003781008e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.13900000009437e-06, 1.1120000000808261e-06, 1.1670000001906544e-06, 1.1520000002818165e-06, 1.1670000001906544e-06, 1.1519999998377273e-06, 1.1670000001906544e-06, 1.1669999997465652e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1520000002818165e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.1520000002818165e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.0829999999018014e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1529999999204676e-06]</msg>
<status status="PASS" starttime="20201029 18:17:42.301" endtime="20201029 18:17:42.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.297" endtime="20201029 18:17:42.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.910" endtime="20201029 18:17:42.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:41.910" endtime="20201029 18:17:42.305"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.314" endtime="20201029 18:17:42.329"></status>
</kw>
<msg timestamp="20201029 18:17:42.329" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:42.312" endtime="20201029 18:17:42.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.332" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:42.330" endtime="20201029 18:17:42.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.333" endtime="20201029 18:17:42.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.309" endtime="20201029 18:17:42.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.308" endtime="20201029 18:17:42.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.343" endtime="20201029 18:17:42.661"></status>
</kw>
<msg timestamp="20201029 18:17:42.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.993261653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.993262819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:42.341" endtime="20201029 18:17:42.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.993261653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.993262819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:42.666" endtime="20201029 18:17:42.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.676" endtime="20201029 18:17:42.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.338" endtime="20201029 18:17:42.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.336" endtime="20201029 18:17:42.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:42.683" level="INFO">${RESULT} = [{'diff': 1.166000000107914e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.166000000107914e-06}...</msg>
<status status="PASS" starttime="20201029 18:17:42.679" endtime="20201029 18:17:42.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:42.689" level="INFO">${OVERHEAD} = {'diff': [1.166000000107914e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.1520000002818165e-06, 1....</msg>
<status status="PASS" starttime="20201029 18:17:42.685" endtime="20201029 18:17:42.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.694" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:42.692" endtime="20201029 18:17:42.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.697" level="INFO">VALUE: [1.166000000107914e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.166000000107914e-06, 1.181000000016752e-06, 1.1520000002818165e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.0829999999018014e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.1670000001906544e-06, 1.1670000001906544e-06, 1.1800000003781008e-06, 1.1389999996502809e-06, 1.1109999999980857e-06, 1.1669999997465652e-06, 1.1670000001906544e-06, 1.208000000030296e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1670000001906544e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.1249999998241833e-06, 1.1799999999340116e-06, 1.0970000001719882e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1669999997465652e-06, 1.1519999998377273e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1519999998377273e-06, 1.1670000001906544e-06, 1.1670000001906544e-06, 1.1669999997465652e-06, 1.1109999999980857e-06, 1.1519999998377273e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1670000001906544e-06, 1.1389999996502809e-06, 1.1519999998377273e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1519999998377273e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1.1389999996502809e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.1669999997465652e-06, 1.1799999999340116e-06]</msg>
<status status="PASS" starttime="20201029 18:17:42.695" endtime="20201029 18:17:42.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.690" endtime="20201029 18:17:42.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.306" endtime="20201029 18:17:42.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.306" endtime="20201029 18:17:42.699"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.707" endtime="20201029 18:17:42.721"></status>
</kw>
<msg timestamp="20201029 18:17:42.722" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:42.705" endtime="20201029 18:17:42.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:42.724" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:42.723" endtime="20201029 18:17:42.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.725" endtime="20201029 18:17:42.727"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.702" endtime="20201029 18:17:42.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.701" endtime="20201029 18:17:42.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:42.734" endtime="20201029 18:17:43.043"></status>
</kw>
<msg timestamp="20201029 18:17:43.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.380061861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.380063042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:42.733" endtime="20201029 18:17:43.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.380061861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.380063042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:43.048" endtime="20201029 18:17:43.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.058" endtime="20201029 18:17:43.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.730" endtime="20201029 18:17:43.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.729" endtime="20201029 18:17:43.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:43.065" level="INFO">${RESULT} = [{'diff': 1.181000000016752e-06}, {'diff': 1.1670000001906544e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1519999998377273e-06}...</msg>
<status status="PASS" starttime="20201029 18:17:43.061" endtime="20201029 18:17:43.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:43.070" level="INFO">${OVERHEAD} = {'diff': [1.181000000016752e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1519999998377273e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1....</msg>
<status status="PASS" starttime="20201029 18:17:43.066" endtime="20201029 18:17:43.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.074" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:43.073" endtime="20201029 18:17:43.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.077" level="INFO">VALUE: [1.181000000016752e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1519999998377273e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1.1389999996502809e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.1800000003781008e-06, 1.13900000009437e-06, 1.1670000001906544e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.166000000107914e-06, 1.1529999999204676e-06, 1.2079999995862067e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1519999998377273e-06, 1.1670000001906544e-06, 1.166000000107914e-06, 1.1670000001906544e-06, 1.1670000001906544e-06, 1.1799999999340116e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1799999999340116e-06, 1.166000000107914e-06, 1.1389999996502809e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1670000001906544e-06, 1.1670000001906544e-06, 1.1670000001906544e-06, 1.1519999998377273e-06, 1.1670000001906544e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1659999996638248e-06, 1.1529999999204676e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.069999999714355e-06, 1.166000000107914e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1109999999980857e-06]</msg>
<status status="PASS" starttime="20201029 18:17:43.075" endtime="20201029 18:17:43.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.071" endtime="20201029 18:17:43.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.699" endtime="20201029 18:17:43.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:42.699" endtime="20201029 18:17:43.079"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.086" endtime="20201029 18:17:43.102"></status>
</kw>
<msg timestamp="20201029 18:17:43.102" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.085" endtime="20201029 18:17:43.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.105" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.103" endtime="20201029 18:17:43.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.106" endtime="20201029 18:17:43.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.082" endtime="20201029 18:17:43.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.081" endtime="20201029 18:17:43.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.115" endtime="20201029 18:17:43.429"></status>
</kw>
<msg timestamp="20201029 18:17:43.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.762938347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.7629395, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:43.113" endtime="20201029 18:17:43.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.762938347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.7629395, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:17:43.434" endtime="20201029 18:17:43.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.445" endtime="20201029 18:17:43.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.111" endtime="20201029 18:17:43.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.109" endtime="20201029 18:17:43.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:43.452" level="INFO">${RESULT} = [{'diff': 1.1529999999204676e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.181000000016752e-06}, {'diff': 1.1529999999204676e-06}, {'diff': 1.181000000016752e-06...</msg>
<status status="PASS" starttime="20201029 18:17:43.449" endtime="20201029 18:17:43.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:43.457" level="INFO">${OVERHEAD} = {'diff': [1.1529999999204676e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.069999999714355e-06, 1.166000000107914e-06, 1....</msg>
<status status="PASS" starttime="20201029 18:17:43.453" endtime="20201029 18:17:43.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.461" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:43.460" endtime="20201029 18:17:43.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.464" level="INFO">VALUE: [1.1529999999204676e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1529999999204676e-06, 1.181000000016752e-06, 1.069999999714355e-06, 1.166000000107914e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1670000001906544e-06, 1.1529999999204676e-06, 1.1529999999204676e-06, 1.1109999999980857e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.1799999999340116e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.13900000009437e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1660000005520033e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.2080000004743852e-06, 1.1529999994763784e-06, 1.1530000003645569e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1529999994763784e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.2079999995862067e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.1530000003645569e-06]</msg>
<status status="PASS" starttime="20201029 18:17:43.462" endtime="20201029 18:17:43.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.458" endtime="20201029 18:17:43.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.079" endtime="20201029 18:17:43.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.079" endtime="20201029 18:17:43.465"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.474" endtime="20201029 18:17:43.489"></status>
</kw>
<msg timestamp="20201029 18:17:43.490" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.472" endtime="20201029 18:17:43.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.492" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.491" endtime="20201029 18:17:43.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.493" endtime="20201029 18:17:43.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.469" endtime="20201029 18:17:43.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.467" endtime="20201029 18:17:43.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.502" endtime="20201029 18:17:43.808"></status>
</kw>
<msg timestamp="20201029 18:17:43.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.131824361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.131825528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:43.501" endtime="20201029 18:17:43.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.131824361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.131825528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:43.813" endtime="20201029 18:17:43.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.822" endtime="20201029 18:17:43.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.498" endtime="20201029 18:17:43.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.497" endtime="20201029 18:17:43.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:43.829" level="INFO">${RESULT} = [{'diff': 1.1670000006347436e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1530000003645569e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.13900000009437e-06...</msg>
<status status="PASS" starttime="20201029 18:17:43.826" endtime="20201029 18:17:43.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:43.834" level="INFO">${OVERHEAD} = {'diff': [1.1670000006347436e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1529999994763784e-06, 1....</msg>
<status status="PASS" starttime="20201029 18:17:43.830" endtime="20201029 18:17:43.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.839" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:43.838" endtime="20201029 18:17:43.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.841" level="INFO">VALUE: [1.1670000006347436e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.1529999994763784e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.2079999995862067e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1249999998241833e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.2219999998563935e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1380000000116297e-06, 1.1659999996638248e-06, 1.1670000006347436e-06, 1.1520000002818165e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.1659999996638248e-06, 1.1659999996638248e-06, 1.1109999995539965e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.2080000004743852e-06, 1.1520000002818165e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1660000005520033e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.0829999999018014e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.222000000744572e-06, 1.1670000006347436e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.2219999998563935e-06, 1.13900000009437e-06, 1.18000000082219e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.2219999998563935e-06, 1.1530000003645569e-06, 1.1659999996638248e-06]</msg>
<status status="PASS" starttime="20201029 18:17:43.840" endtime="20201029 18:17:43.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.835" endtime="20201029 18:17:43.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.466" endtime="20201029 18:17:43.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.466" endtime="20201029 18:17:43.852"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.860" endtime="20201029 18:17:43.875"></status>
</kw>
<msg timestamp="20201029 18:17:43.875" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.858" endtime="20201029 18:17:43.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:43.878" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:43.876" endtime="20201029 18:17:43.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.879" endtime="20201029 18:17:43.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.856" endtime="20201029 18:17:43.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.854" endtime="20201029 18:17:43.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:43.888" endtime="20201029 18:17:44.201"></status>
</kw>
<msg timestamp="20201029 18:17:44.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.510408361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.510409583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:43.886" endtime="20201029 18:17:44.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.510408361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.510409583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:44.207" endtime="20201029 18:17:44.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.216" endtime="20201029 18:17:44.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.884" endtime="20201029 18:17:44.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.882" endtime="20201029 18:17:44.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:44.223" level="INFO">${RESULT} = [{'diff': 1.222000000744572e-06}, {'diff': 1.1670000006347436e-06}, {'diff': 1.1249999998241833e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.1670000006347436e-06}, {'diff': 1.1669999997465652e-06}...</msg>
<status status="PASS" starttime="20201029 18:17:44.219" endtime="20201029 18:17:44.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:44.228" level="INFO">${OVERHEAD} = {'diff': [1.222000000744572e-06, 1.1670000006347436e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.2219999998563935e-06, 1.13900000009437e-06, 1.1...</msg>
<status status="PASS" starttime="20201029 18:17:44.224" endtime="20201029 18:17:44.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.233" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:44.232" endtime="20201029 18:17:44.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.235" level="INFO">VALUE: [1.222000000744572e-06, 1.1670000006347436e-06, 1.1249999998241833e-06, 1.13900000009437e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.2219999998563935e-06, 1.13900000009437e-06, 1.18000000082219e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.2219999998563935e-06, 1.1530000003645569e-06, 1.1659999996638248e-06, 1.1670000006347436e-06, 1.2360000001265803e-06, 1.1670000006347436e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.1660000005520033e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.0970000001719882e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1799999999340116e-06, 1.1529999994763784e-06, 1.1520000002818165e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.1250000007123617e-06, 1.1529999994763784e-06, 1.1389999992061917e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1529999994763784e-06, 1.151999999393638e-06, 1.1530000003645569e-06, 1.1659999996638248e-06, 1.2219999998563935e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.1670000006347436e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.1520000002818165e-06, 1.1669999997465652e-06]</msg>
<status status="PASS" starttime="20201029 18:17:44.234" endtime="20201029 18:17:44.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.229" endtime="20201029 18:17:44.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.853" endtime="20201029 18:17:44.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:43.852" endtime="20201029 18:17:44.237"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.245" endtime="20201029 18:17:44.260"></status>
</kw>
<msg timestamp="20201029 18:17:44.260" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:44.243" endtime="20201029 18:17:44.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.263" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:44.261" endtime="20201029 18:17:44.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.264" endtime="20201029 18:17:44.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.241" endtime="20201029 18:17:44.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.239" endtime="20201029 18:17:44.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.273" endtime="20201029 18:17:44.583"></status>
</kw>
<msg timestamp="20201029 18:17:44.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.886997708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.886998861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:44.271" endtime="20201029 18:17:44.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.886997708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.886998861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:44.588" endtime="20201029 18:17:44.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.598" endtime="20201029 18:17:44.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.269" endtime="20201029 18:17:44.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.267" endtime="20201029 18:17:44.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:44.605" level="INFO">${RESULT} = [{'diff': 1.1530000003645569e-06}, {'diff': 1.1529999994763784e-06}, {'diff': 1.1659999996638248e-06}, {'diff': 1.1670000006347436e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1530000003645569e-...</msg>
<status status="PASS" starttime="20201029 18:17:44.601" endtime="20201029 18:17:44.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:44.611" level="INFO">${OVERHEAD} = {'diff': [1.1530000003645569e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.1670000006347436e-06, ...</msg>
<status status="PASS" starttime="20201029 18:17:44.606" endtime="20201029 18:17:44.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.618" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:44.615" endtime="20201029 18:17:44.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.621" level="INFO">VALUE: [1.1530000003645569e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.1670000006347436e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.1520000002818165e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.1660000005520033e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1670000006347436e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1799999999340116e-06, 1.1520000002818165e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1670000006347436e-06, 1.2080000004743852e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1520000002818165e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1799999999340116e-06, 1.13900000009437e-06, 1.0829999999018014e-06, 1.2080000004743852e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.151999999393638e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.1529999994763784e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.1799999999340116e-06]</msg>
<status status="PASS" starttime="20201029 18:17:44.619" endtime="20201029 18:17:44.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.612" endtime="20201029 18:17:44.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.238" endtime="20201029 18:17:44.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.237" endtime="20201029 18:17:44.625"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.638" endtime="20201029 18:17:44.654"></status>
</kw>
<msg timestamp="20201029 18:17:44.655" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:44.636" endtime="20201029 18:17:44.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.657" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:44.656" endtime="20201029 18:17:44.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.658" endtime="20201029 18:17:44.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.631" endtime="20201029 18:17:44.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.628" endtime="20201029 18:17:44.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.667" endtime="20201029 18:17:44.974"></status>
</kw>
<msg timestamp="20201029 18:17:44.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.262188056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.262189208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:44.665" endtime="20201029 18:17:44.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.262188056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.262189208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:44.979" endtime="20201029 18:17:44.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.989" endtime="20201029 18:17:44.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.663" endtime="20201029 18:17:44.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.661" endtime="20201029 18:17:44.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:44.996" level="INFO">${RESULT} = [{'diff': 1.151999999393638e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1659999996638248e-06}, {'diff': 1.1799999999340116e-06}, {'diff': 1.1530000003645569e-06}, {'diff': 1.1799999999340116e-0...</msg>
<status status="PASS" starttime="20201029 18:17:44.992" endtime="20201029 18:17:44.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:45.001" level="INFO">${OVERHEAD} = {'diff': [1.151999999393638e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.1529999994763784e-06, 1.1530000003645569e-06,...</msg>
<status status="PASS" starttime="20201029 18:17:44.997" endtime="20201029 18:17:45.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.005" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:45.004" endtime="20201029 18:17:45.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.008" level="INFO">VALUE: [1.151999999393638e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.1529999994763784e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.1799999999340116e-06, 1.0829999999018014e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.1660000005520033e-06, 1.1380000000116297e-06, 1.1529999994763784e-06, 1.151999999393638e-06, 1.1670000006347436e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1660000005520033e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.1529999994763784e-06, 1.1530000003645569e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1660000005520033e-06, 1.1530000003645569e-06, 1.2219999998563935e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1250000007123617e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1669999997465652e-06]</msg>
<status status="PASS" starttime="20201029 18:17:45.006" endtime="20201029 18:17:45.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.002" endtime="20201029 18:17:45.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.626" endtime="20201029 18:17:45.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.626" endtime="20201029 18:17:45.009"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.017" endtime="20201029 18:17:45.032"></status>
</kw>
<msg timestamp="20201029 18:17:45.032" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.016" endtime="20201029 18:17:45.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.035" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.033" endtime="20201029 18:17:45.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.036" endtime="20201029 18:17:45.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.013" endtime="20201029 18:17:45.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.011" endtime="20201029 18:17:45.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.045" endtime="20201029 18:17:45.365"></status>
</kw>
<msg timestamp="20201029 18:17:45.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.647450514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.647451667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.043" endtime="20201029 18:17:45.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.647450514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.647451667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.370" endtime="20201029 18:17:45.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.380" endtime="20201029 18:17:45.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.041" endtime="20201029 18:17:45.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.039" endtime="20201029 18:17:45.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:45.387" level="INFO">${RESULT} = [{'diff': 1.1530000003645569e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1659999996638248e-06}, {'diff': 1.1660000005520033e-06}, {'diff': 1.1530000003645569e-06...</msg>
<status status="PASS" starttime="20201029 18:17:45.383" endtime="20201029 18:17:45.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:45.392" level="INFO">${OVERHEAD} = {'diff': [1.1530000003645569e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1660000005520033e-06, 1.1530000003645569e-06, 1.2219999998563935e-06, 1.181000000016752e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:17:45.388" endtime="20201029 18:17:45.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.396" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:45.395" endtime="20201029 18:17:45.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.399" level="INFO">VALUE: [1.1530000003645569e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1660000005520033e-06, 1.1530000003645569e-06, 1.2219999998563935e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1250000007123617e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.18000000082219e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1529999994763784e-06, 1.1529999994763784e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.1670000006347436e-06, 1.1520000002818165e-06, 1.1529999994763784e-06, 1.1660000005520033e-06, 1.1949999993987603e-06, 1.181000000016752e-06, 1.151999999393638e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1389999992061917e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1940000002041984e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.1660000005520033e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.2499999995085886e-06, 1.0970000001719882e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.0970000001719882e-06, 1.151999999393638e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1659999996638248e-06, 1.1659999996638248e-06]</msg>
<status status="PASS" starttime="20201029 18:17:45.397" endtime="20201029 18:17:45.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.393" endtime="20201029 18:17:45.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.010" endtime="20201029 18:17:45.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.010" endtime="20201029 18:17:45.401"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.408" endtime="20201029 18:17:45.423"></status>
</kw>
<msg timestamp="20201029 18:17:45.424" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.407" endtime="20201029 18:17:45.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.426" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.425" endtime="20201029 18:17:45.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.427" endtime="20201029 18:17:45.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.404" endtime="20201029 18:17:45.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.403" endtime="20201029 18:17:45.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.437" endtime="20201029 18:17:45.762"></status>
</kw>
<msg timestamp="20201029 18:17:45.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.014524125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.014525306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.436" endtime="20201029 18:17:45.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.014524125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.014525306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.767" endtime="20201029 18:17:45.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.777" endtime="20201029 18:17:45.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.432" endtime="20201029 18:17:45.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.430" endtime="20201029 18:17:45.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:45.783" level="INFO">${RESULT} = [{'diff': 1.181000000016752e-06}, {'diff': 1.2499999995085886e-06}, {'diff': 1.0970000001719882e-06}, {'diff': 1.1669999997465652e-06}, {'diff': 1.1670000006347436e-06}, {'diff': 1.1799999999340116e-0...</msg>
<status status="PASS" starttime="20201029 18:17:45.780" endtime="20201029 18:17:45.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:45.788" level="INFO">${OVERHEAD} = {'diff': [1.181000000016752e-06, 1.2499999995085886e-06, 1.0970000001719882e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.1670000006347436e-06, 1.1669999997465652e-06,...</msg>
<status status="PASS" starttime="20201029 18:17:45.784" endtime="20201029 18:17:45.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.792" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:45.791" endtime="20201029 18:17:45.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.795" level="INFO">VALUE: [1.181000000016752e-06, 1.2499999995085886e-06, 1.0970000001719882e-06, 1.1669999997465652e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.0970000001719882e-06, 1.151999999393638e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1659999996638248e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1799999999340116e-06, 1.1670000006347436e-06, 1.1660000005520033e-06, 1.181000000016752e-06, 1.13900000009437e-06, 1.1380000000116297e-06, 1.1670000006347436e-06, 1.1659999996638248e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.18000000082219e-06, 1.1670000006347436e-06, 1.1670000006347436e-06, 1.1529999994763784e-06, 1.1530000003645569e-06, 1.1799999999340116e-06, 1.1670000006347436e-06, 1.1669999997465652e-06, 1.1660000005520033e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.1659999996638248e-06, 1.1660000005520033e-06, 1.1670000006347436e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.111000000442175e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1670000006347436e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1670000006347436e-06]</msg>
<status status="PASS" starttime="20201029 18:17:45.793" endtime="20201029 18:17:45.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.789" endtime="20201029 18:17:45.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.401" endtime="20201029 18:17:45.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.401" endtime="20201029 18:17:45.797"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.805" endtime="20201029 18:17:45.820"></status>
</kw>
<msg timestamp="20201029 18:17:45.820" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.803" endtime="20201029 18:17:45.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.823" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:45.821" endtime="20201029 18:17:45.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.824" endtime="20201029 18:17:45.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.801" endtime="20201029 18:17:45.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.799" endtime="20201029 18:17:45.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.832" endtime="20201029 18:17:46.140"></status>
</kw>
<msg timestamp="20201029 18:17:46.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.396718319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.396719486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.831" endtime="20201029 18:17:46.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.396718319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.396719486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:46.145" endtime="20201029 18:17:46.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.155" endtime="20201029 18:17:46.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.828" endtime="20201029 18:17:46.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.827" endtime="20201029 18:17:46.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:46.161" level="INFO">${RESULT} = [{'diff': 1.1670000006347436e-06}, {'diff': 1.13900000009437e-06}, {'diff': 1.1530000003645569e-06}, {'diff': 1.111000000442175e-06}, {'diff': 1.1529999994763784e-06}, {'diff': 1.1669999997465652e-06}...</msg>
<status status="PASS" starttime="20201029 18:17:46.158" endtime="20201029 18:17:46.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:46.167" level="INFO">${OVERHEAD} = {'diff': [1.1670000006347436e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.111000000442175e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1659999996638248e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:17:46.162" endtime="20201029 18:17:46.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.171" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:46.170" endtime="20201029 18:17:46.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.173" level="INFO">VALUE: [1.1670000006347436e-06, 1.13900000009437e-06, 1.1530000003645569e-06, 1.111000000442175e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1659999996638248e-06, 1.1799999999340116e-06, 1.181000000016752e-06, 1.1670000006347436e-06, 1.181000000016752e-06, 1.1799999999340116e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1660000005520033e-06, 1.1669999997465652e-06, 1.181000000016752e-06, 1.1659999996638248e-06, 1.1529999994763784e-06, 1.181000000016752e-06, 1.1380000000116297e-06, 1.1529999994763784e-06, 1.1670000006347436e-06, 1.1380000000116297e-06, 1.1669999997465652e-06, 1.1380000000116297e-06, 1.1660000005520033e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1530000003645569e-06, 1.151999999393638e-06, 1.1529999994763784e-06, 1.1660000005520033e-06, 1.1529999994763784e-06, 1.1530000003645569e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.1529999994763784e-06, 1.1530000003645569e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1670000006347436e-06, 1.1670000006347436e-06, 1.1530000003645569e-06, 1.1670000006347436e-06, 1.181000000016752e-06, 1.1669999997465652e-06, 1.2219999998563935e-06, 1.1670000006347436e-06, 1.1660000005520033e-06, 1.1530000003645569e-06, 1.151999999393638e-06, 1.13900000009437e-06, 1.1520000002818165e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.1660000005520033e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.13900000009437e-06]</msg>
<status status="PASS" starttime="20201029 18:17:46.172" endtime="20201029 18:17:46.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.168" endtime="20201029 18:17:46.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.798" endtime="20201029 18:17:46.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.798" endtime="20201029 18:17:46.175"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.183" endtime="20201029 18:17:46.199"></status>
</kw>
<msg timestamp="20201029 18:17:46.199" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.181" endtime="20201029 18:17:46.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.202" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.200" endtime="20201029 18:17:46.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.203" endtime="20201029 18:17:46.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.179" endtime="20201029 18:17:46.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.177" endtime="20201029 18:17:46.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.211" endtime="20201029 18:17:46.533"></status>
</kw>
<msg timestamp="20201029 18:17:46.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.782404222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.782405389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:46.210" endtime="20201029 18:17:46.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.782404222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.782405389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:46.538" endtime="20201029 18:17:46.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.548" endtime="20201029 18:17:46.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.207" endtime="20201029 18:17:46.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.206" endtime="20201029 18:17:46.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:46.555" level="INFO">${RESULT} = [{'diff': 1.1669999997465652e-06}, {'diff': 1.2219999998563935e-06}, {'diff': 1.1670000006347436e-06}, {'diff': 1.1660000005520033e-06}, {'diff': 1.1530000003645569e-06}, {'diff': 1.151999999393638e-0...</msg>
<status status="PASS" starttime="20201029 18:17:46.551" endtime="20201029 18:17:46.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:46.560" level="INFO">${OVERHEAD} = {'diff': [1.1669999997465652e-06, 1.2219999998563935e-06, 1.1670000006347436e-06, 1.1660000005520033e-06, 1.1530000003645569e-06, 1.151999999393638e-06, 1.13900000009437e-06, 1.1520000002818165e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:17:46.556" endtime="20201029 18:17:46.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.564" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:17:46.563" endtime="20201029 18:17:46.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.566" level="INFO">VALUE: [1.1669999997465652e-06, 1.2219999998563935e-06, 1.1670000006347436e-06, 1.1660000005520033e-06, 1.1530000003645569e-06, 1.151999999393638e-06, 1.13900000009437e-06, 1.1520000002818165e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.1660000005520033e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.18000000082219e-06, 1.1529999994763784e-06, 1.13900000009437e-06, 1.1799999999340116e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.1669999997465652e-06, 1.13900000009437e-06, 1.1670000006347436e-06, 1.1670000006347436e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1659999996638248e-06, 1.1669999997465652e-06, 1.1809999991285736e-06, 1.1660000005520033e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.1389999992061917e-06, 1.1660000005520033e-06, 1.1670000006347436e-06, 1.1799999999340116e-06, 1.1389999992061917e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1529999994763784e-06, 1.181000000016752e-06, 1.1520000002818165e-06, 1.1669999997465652e-06, 1.1250000007123617e-06, 1.1659999996638248e-06, 1.1530000003645569e-06, 1.181000000016752e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1520000002818165e-06, 1.1669999997465652e-06, 1.18000000082219e-06, 1.1669999997465652e-06, 1.1530000003645569e-06, 1.181000000016752e-06, 1.1530000003645569e-06, 1.1529999994763784e-06, 1.1669999997465652e-06, 1.1250000007123617e-06, 1.2219999998563935e-06, 1.1799999999340116e-06]</msg>
<status status="PASS" starttime="20201029 18:17:46.565" endtime="20201029 18:17:46.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.560" endtime="20201029 18:17:46.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.176" endtime="20201029 18:17:46.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.176" endtime="20201029 18:17:46.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.905" endtime="20201029 18:17:46.568"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:38.832" endtime="20201029 18:17:46.569" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:46.575" endtime="20201029 18:17:46.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.574" endtime="20201029 18:17:46.595"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.611" endtime="20201029 18:17:46.629"></status>
</kw>
<msg timestamp="20201029 18:17:46.630" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.609" endtime="20201029 18:17:46.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.632" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.631" endtime="20201029 18:17:46.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.635" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:46.633" endtime="20201029 18:17:46.636"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:46.607" endtime="20201029 18:17:46.636"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:46.605" endtime="20201029 18:17:46.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.603" endtime="20201029 18:17:46.637"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:46.641" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:46.640" endtime="20201029 18:17:46.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.638" endtime="20201029 18:17:46.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.602" endtime="20201029 18:17:46.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.602" endtime="20201029 18:17:46.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.642" endtime="20201029 18:17:46.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.598" endtime="20201029 18:17:46.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.596" endtime="20201029 18:17:46.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.573" endtime="20201029 18:17:46.645"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.653" endtime="20201029 18:17:46.675"></status>
</kw>
<msg timestamp="20201029 18:17:46.675" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.652" endtime="20201029 18:17:46.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.678" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:46.676" endtime="20201029 18:17:46.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.679" endtime="20201029 18:17:46.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.649" endtime="20201029 18:17:46.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.647" endtime="20201029 18:17:46.682"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.684" endtime="20201029 18:17:46.686"></status>
</kw>
<msg timestamp="20201029 18:17:46.686" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:17:46.683" endtime="20201029 18:17:46.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.690" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:17:46.689" endtime="20201029 18:17:46.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.693" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:17:46.691" endtime="20201029 18:17:46.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.687" endtime="20201029 18:17:46.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.698" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:17:46.697" endtime="20201029 18:17:46.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:46.700" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:17:46.699" endtime="20201029 18:17:46.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.695" endtime="20201029 18:17:46.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:46.707" endtime="20201029 18:17:46.990"></status>
</kw>
<msg timestamp="20201029 18:17:46.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068136222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068142278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:46.706" endtime="20201029 18:17:46.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068136222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068142278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:46.995" endtime="20201029 18:17:47.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.003" endtime="20201029 18:17:47.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.703" endtime="20201029 18:17:47.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.701" endtime="20201029 18:17:47.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:47.009" level="INFO">${RESULT} = [{'diff': 6.05600000000428e-06}, {'diff': 7.013999999999632e-06}, {'diff': 7.026999999992789e-06}, {'diff': 7.013999999999632e-06}, {'diff': 7.013000000000158e-06}, {'diff': 7.013999999999632e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:17:47.006" endtime="20201029 18:17:47.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:47.013" level="INFO">${OVERHEAD} = {'diff': [6.05600000000428e-06, 7.013999999999632e-06, 7.026999999992789e-06, 7.013999999999632e-06, 7.013000000000158e-06, 7.013999999999632e-06, 6.999999999993123e-06, 7.0419999999987715e-06, 7.0279...</msg>
<status status="PASS" starttime="20201029 18:17:47.010" endtime="20201029 18:17:47.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.019" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 18:17:47.018" endtime="20201029 18:17:47.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.021" level="INFO">VALUE: [6.05600000000428e-06, 7.013999999999632e-06, 7.026999999992789e-06, 7.013999999999632e-06, 7.013000000000158e-06, 7.013999999999632e-06, 6.999999999993123e-06, 7.0419999999987715e-06, 7.027999999992263e-06, 7.040999999999298e-06, 6.986000000000492e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.013999999999632e-06, 6.986000000000492e-06, 6.999999999993123e-06, 6.943999999994843e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 7.013999999999632e-06, 7.000000000007001e-06, 6.999999999993123e-06, 7.027000000006667e-06, 7.013999999999632e-06, 6.999999999993123e-06, 7.055000000005807e-06, 7.013999999999632e-06, 7.0280000000061404e-06, 7.0280000000061404e-06, 7.000000000007001e-06, 7.013000000000158e-06, 6.999999999993123e-06, 6.999999999993123e-06, 6.986000000000492e-06, 6.943999999994843e-06, 7.027999999992263e-06, 6.999999999993123e-06, 6.999999999993123e-06, 7.013999999999632e-06, 7.027000000006667e-06, 7.013999999999632e-06, 6.959000000000826e-06, 7.013000000000158e-06, 7.027999999992263e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.013999999999632e-06, 6.999999999993123e-06, 7.013999999999632e-06]</msg>
<status status="PASS" starttime="20201029 18:17:47.020" endtime="20201029 18:17:47.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.014" endtime="20201029 18:17:47.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:46.645" endtime="20201029 18:17:47.023"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:46.570" endtime="20201029 18:17:47.023" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:47.030" endtime="20201029 18:17:47.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.029" endtime="20201029 18:17:47.051"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.065" endtime="20201029 18:17:47.084"></status>
</kw>
<msg timestamp="20201029 18:17:47.085" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.063" endtime="20201029 18:17:47.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.088" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.087" endtime="20201029 18:17:47.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.091" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:47.090" endtime="20201029 18:17:47.092"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:47.060" endtime="20201029 18:17:47.092"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:47.058" endtime="20201029 18:17:47.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.057" endtime="20201029 18:17:47.093"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:47.097" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:47.096" endtime="20201029 18:17:47.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.094" endtime="20201029 18:17:47.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.056" endtime="20201029 18:17:47.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.056" endtime="20201029 18:17:47.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.099" endtime="20201029 18:17:47.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.054" endtime="20201029 18:17:47.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.052" endtime="20201029 18:17:47.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.027" endtime="20201029 18:17:47.103"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.115" endtime="20201029 18:17:47.167"></status>
</kw>
<msg timestamp="20201029 18:17:47.168" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.112" endtime="20201029 18:17:47.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.170" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.169" endtime="20201029 18:17:47.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.171" endtime="20201029 18:17:47.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.108" endtime="20201029 18:17:47.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.105" endtime="20201029 18:17:47.174"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.176" endtime="20201029 18:17:47.178"></status>
</kw>
<msg timestamp="20201029 18:17:47.178" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:17:47.175" endtime="20201029 18:17:47.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.182" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:17:47.181" endtime="20201029 18:17:47.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.184" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:17:47.183" endtime="20201029 18:17:47.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.179" endtime="20201029 18:17:47.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.189" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:17:47.188" endtime="20201029 18:17:47.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.191" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:17:47.190" endtime="20201029 18:17:47.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.186" endtime="20201029 18:17:47.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.198" endtime="20201029 18:17:47.489"></status>
</kw>
<msg timestamp="20201029 18:17:47.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076099153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076112875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:47.197" endtime="20201029 18:17:47.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076099153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076112875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:47.493" endtime="20201029 18:17:47.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.501" endtime="20201029 18:17:47.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.194" endtime="20201029 18:17:47.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.192" endtime="20201029 18:17:47.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:47.508" level="INFO">${RESULT} = [{'diff': 1.3721999999993795e-05}, {'diff': 2.2374999999991152e-05}, {'diff': 2.238899999999766e-05}, {'diff': 2.2430000000003836e-05}, {'diff': 2.236099999999852e-05}, {'diff': 2.238899999999766e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:47.504" endtime="20201029 18:17:47.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:47.513" level="INFO">${OVERHEAD} = {'diff': [1.3721999999993795e-05, 2.2374999999991152e-05, 2.238899999999766e-05, 2.2430000000003836e-05, 2.236099999999852e-05, 2.238899999999766e-05, 2.2387999999998187e-05, 2.238899999999766e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:17:47.509" endtime="20201029 18:17:47.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.517" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 18:17:47.516" endtime="20201029 18:17:47.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.520" level="INFO">VALUE: [1.3721999999993795e-05, 2.2374999999991152e-05, 2.238899999999766e-05, 2.2430000000003836e-05, 2.236099999999852e-05, 2.238899999999766e-05, 2.2387999999998187e-05, 2.238899999999766e-05, 2.236099999999852e-05, 2.238899999999766e-05, 2.2374999999991152e-05, 2.2401999999990818e-05, 2.2457999999989098e-05, 2.237500000000503e-05, 2.238899999999766e-05, 2.2402000000004696e-05, 2.238899999999766e-05, 2.2429999999989958e-05, 2.233299999999938e-05, 2.2443999999996467e-05, 2.238900000001154e-05, 2.24169999999968e-05, 2.238900000001154e-05, 2.240300000000417e-05, 2.2457999999989098e-05, 2.238899999999766e-05, 2.240300000000417e-05, 2.238899999999766e-05, 2.2388000000012065e-05, 2.236099999999852e-05, 2.244499999999594e-05, 2.24169999999968e-05, 2.238899999999766e-05, 2.237500000000503e-05, 2.2374999999991152e-05, 2.236099999999852e-05, 2.2346999999992012e-05, 2.238899999999766e-05, 2.2361999999997995e-05, 2.240300000000417e-05, 2.2401999999990818e-05, 2.238899999999766e-05, 2.237500000000503e-05, 2.245900000000245e-05, 2.237500000000503e-05, 2.238899999999766e-05, 2.2333999999998855e-05, 2.240300000000417e-05, 2.237500000000503e-05, 2.237500000000503e-05]</msg>
<status status="PASS" starttime="20201029 18:17:47.518" endtime="20201029 18:17:47.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.513" endtime="20201029 18:17:47.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.103" endtime="20201029 18:17:47.521"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:47.025" endtime="20201029 18:17:47.522" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:47.528" endtime="20201029 18:17:47.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.527" endtime="20201029 18:17:47.548"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.561" endtime="20201029 18:17:47.579"></status>
</kw>
<msg timestamp="20201029 18:17:47.579" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.559" endtime="20201029 18:17:47.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.582" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.580" endtime="20201029 18:17:47.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.585" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:47.583" endtime="20201029 18:17:47.585"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:47.557" endtime="20201029 18:17:47.586"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:47.555" endtime="20201029 18:17:47.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.553" endtime="20201029 18:17:47.587"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:47.590" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:47.590" endtime="20201029 18:17:47.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.588" endtime="20201029 18:17:47.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.553" endtime="20201029 18:17:47.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.552" endtime="20201029 18:17:47.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.593" endtime="20201029 18:17:47.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.551" endtime="20201029 18:17:47.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.549" endtime="20201029 18:17:47.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.526" endtime="20201029 18:17:47.596"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.604" endtime="20201029 18:17:47.738"></status>
</kw>
<msg timestamp="20201029 18:17:47.739" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.603" endtime="20201029 18:17:47.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.744" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:47.740" endtime="20201029 18:17:47.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.745" endtime="20201029 18:17:47.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.600" endtime="20201029 18:17:47.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.598" endtime="20201029 18:17:47.749"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.752" endtime="20201029 18:17:47.755"></status>
</kw>
<msg timestamp="20201029 18:17:47.756" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:17:47.750" endtime="20201029 18:17:47.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.760" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:17:47.759" endtime="20201029 18:17:47.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.762" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:17:47.761" endtime="20201029 18:17:47.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.756" endtime="20201029 18:17:47.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.766" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:17:47.765" endtime="20201029 18:17:47.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:47.768" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:17:47.767" endtime="20201029 18:17:47.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.763" endtime="20201029 18:17:47.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:47.775" endtime="20201029 18:17:48.067"></status>
</kw>
<msg timestamp="20201029 18:17:48.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067117125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067142111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:47.774" endtime="20201029 18:17:48.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067117125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067142111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:48.071" endtime="20201029 18:17:48.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.079" endtime="20201029 18:17:48.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.771" endtime="20201029 18:17:48.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.770" endtime="20201029 18:17:48.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:48.087" level="INFO">${RESULT} = [{'diff': 2.4986000000004616e-05}, {'diff': 4.141600000000245e-05}, {'diff': 4.1389000000002785e-05}, {'diff': 4.1374999999996276e-05}, {'diff': 4.142999999999508e-05}, {'diff': 4.1402999999995416e-05...</msg>
<status status="PASS" starttime="20201029 18:17:48.083" endtime="20201029 18:17:48.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:48.091" level="INFO">${OVERHEAD} = {'diff': [2.4986000000004616e-05, 4.141600000000245e-05, 4.1389000000002785e-05, 4.1374999999996276e-05, 4.142999999999508e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.140199999999594e-05, 4...</msg>
<status status="PASS" starttime="20201029 18:17:48.088" endtime="20201029 18:17:48.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.095" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 18:17:48.094" endtime="20201029 18:17:48.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.098" level="INFO">VALUE: [2.4986000000004616e-05, 4.141600000000245e-05, 4.1389000000002785e-05, 4.1374999999996276e-05, 4.142999999999508e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.140199999999594e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.1389000000002785e-05, 4.131999999999747e-05, 4.1403000000009293e-05, 4.141699999998805e-05, 4.144400000000159e-05, 4.143000000000896e-05, 4.1417000000001924e-05, 4.147200000000073e-05, 4.1374999999996276e-05, 4.1374999999996276e-05, 4.138899999998891e-05, 4.1417000000001924e-05, 4.1402999999995416e-05, 4.138800000000331e-05, 4.1417000000001924e-05, 4.1403000000009293e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.13749999999824e-05, 4.140300000002317e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.138899999997503e-05, 4.1375000000010154e-05, 4.1402999999995416e-05, 4.140199999999594e-05, 4.136099999998977e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.143100000000843e-05, 4.1402999999995416e-05, 4.141600000001633e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.140199999999594e-05, 4.1402999999995416e-05, 4.1402999999995416e-05, 4.1389000000002785e-05]</msg>
<status status="PASS" starttime="20201029 18:17:48.096" endtime="20201029 18:17:48.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.092" endtime="20201029 18:17:48.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:47.596" endtime="20201029 18:17:48.099"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:47.523" endtime="20201029 18:17:48.100" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:48.107" endtime="20201029 18:17:48.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.105" endtime="20201029 18:17:48.127"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.140" endtime="20201029 18:17:48.157"></status>
</kw>
<msg timestamp="20201029 18:17:48.157" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.139" endtime="20201029 18:17:48.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.160" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.158" endtime="20201029 18:17:48.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.162" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:48.161" endtime="20201029 18:17:48.163"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:48.135" endtime="20201029 18:17:48.163"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:48.133" endtime="20201029 18:17:48.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.132" endtime="20201029 18:17:48.164"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:48.168" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:48.167" endtime="20201029 18:17:48.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.165" endtime="20201029 18:17:48.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.131" endtime="20201029 18:17:48.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.130" endtime="20201029 18:17:48.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.170" endtime="20201029 18:17:48.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.129" endtime="20201029 18:17:48.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.127" endtime="20201029 18:17:48.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.104" endtime="20201029 18:17:48.172"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.180" endtime="20201029 18:17:48.203"></status>
</kw>
<msg timestamp="20201029 18:17:48.203" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.179" endtime="20201029 18:17:48.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.206" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.204" endtime="20201029 18:17:48.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.207" endtime="20201029 18:17:48.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.176" endtime="20201029 18:17:48.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.174" endtime="20201029 18:17:48.209"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.211" endtime="20201029 18:17:48.213"></status>
</kw>
<msg timestamp="20201029 18:17:48.214" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:17:48.210" endtime="20201029 18:17:48.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.218" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:17:48.217" endtime="20201029 18:17:48.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.220" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:17:48.219" endtime="20201029 18:17:48.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.215" endtime="20201029 18:17:48.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.225" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:17:48.224" endtime="20201029 18:17:48.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.227" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:17:48.226" endtime="20201029 18:17:48.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.221" endtime="20201029 18:17:48.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.235" endtime="20201029 18:17:48.523"></status>
</kw>
<msg timestamp="20201029 18:17:48.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064069806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064074389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:48.233" endtime="20201029 18:17:48.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064069806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064074389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:48.528" endtime="20201029 18:17:48.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.536" endtime="20201029 18:17:48.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.230" endtime="20201029 18:17:48.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.228" endtime="20201029 18:17:48.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:48.542" level="INFO">${RESULT} = [{'diff': 4.5829999999885684e-06}, {'diff': 4.583000000002446e-06}, {'diff': 4.58400000000192e-06}, {'diff': 4.569000000009815e-06}, {'diff': 4.639000000000726e-06}, {'diff': 4.583000000002446e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:48.539" endtime="20201029 18:17:48.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:48.547" level="INFO">${OVERHEAD} = {'diff': [4.5829999999885684e-06, 4.583000000002446e-06, 4.58400000000192e-06, 4.569000000009815e-06, 4.639000000000726e-06, 4.583000000002446e-06, 4.596999999995077e-06, 4.583999999988042e-06, 4.5830...</msg>
<status status="PASS" starttime="20201029 18:17:48.543" endtime="20201029 18:17:48.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.551" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 18:17:48.550" endtime="20201029 18:17:48.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.554" level="INFO">VALUE: [4.5829999999885684e-06, 4.583000000002446e-06, 4.58400000000192e-06, 4.569000000009815e-06, 4.639000000000726e-06, 4.583000000002446e-06, 4.596999999995077e-06, 4.583999999988042e-06, 4.583000000002446e-06, 4.583000000002446e-06, 4.583000000002446e-06, 4.597000000008955e-06, 4.554999999989429e-06, 4.570000000009289e-06, 4.583000000002446e-06, 4.55600000000278e-06, 4.583000000002446e-06, 4.55600000000278e-06, 4.596999999995077e-06, 4.58400000000192e-06, 4.554999999989429e-06, 4.611000000001586e-06, 4.568999999995937e-06, 4.583000000002446e-06, 4.583000000002446e-06, 4.569999999995411e-06, 4.541999999996271e-06, 4.583000000002446e-06, 4.542000000010149e-06, 4.52800000000364e-06, 4.58400000000192e-06, 4.583000000002446e-06, 4.58400000000192e-06, 4.569999999995411e-06, 4.5829999999885684e-06, 4.61200000000106e-06, 4.583000000002446e-06, 4.568999999995937e-06, 4.569000000009815e-06, 4.596999999995077e-06, 4.568999999995937e-06, 4.625000000008095e-06, 4.583000000002446e-06, 4.569999999995411e-06, 4.555999999988902e-06, 4.596999999995077e-06, 4.597999999994551e-06, 4.569000000009815e-06, 4.58400000000192e-06, 4.569000000009815e-06]</msg>
<status status="PASS" starttime="20201029 18:17:48.552" endtime="20201029 18:17:48.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.547" endtime="20201029 18:17:48.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.173" endtime="20201029 18:17:48.555"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:48.101" endtime="20201029 18:17:48.555" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:48.563" endtime="20201029 18:17:48.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.561" endtime="20201029 18:17:48.583"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.597" endtime="20201029 18:17:48.614"></status>
</kw>
<msg timestamp="20201029 18:17:48.614" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.595" endtime="20201029 18:17:48.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.617" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.615" endtime="20201029 18:17:48.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.620" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:48.618" endtime="20201029 18:17:48.620"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:48.592" endtime="20201029 18:17:48.621"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:48.590" endtime="20201029 18:17:48.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.589" endtime="20201029 18:17:48.621"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:48.625" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:48.625" endtime="20201029 18:17:48.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.622" endtime="20201029 18:17:48.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.588" endtime="20201029 18:17:48.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.587" endtime="20201029 18:17:48.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.627" endtime="20201029 18:17:48.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.586" endtime="20201029 18:17:48.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.583" endtime="20201029 18:17:48.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.560" endtime="20201029 18:17:48.630"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.646" endtime="20201029 18:17:48.699"></status>
</kw>
<msg timestamp="20201029 18:17:48.700" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.641" endtime="20201029 18:17:48.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.702" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:48.701" endtime="20201029 18:17:48.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.704" endtime="20201029 18:17:48.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.637" endtime="20201029 18:17:48.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.634" endtime="20201029 18:17:48.706"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.709" endtime="20201029 18:17:48.711"></status>
</kw>
<msg timestamp="20201029 18:17:48.712" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:17:48.707" endtime="20201029 18:17:48.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.717" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:17:48.716" endtime="20201029 18:17:48.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.719" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:17:48.718" endtime="20201029 18:17:48.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.713" endtime="20201029 18:17:48.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.723" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:17:48.722" endtime="20201029 18:17:48.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:48.726" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:17:48.725" endtime="20201029 18:17:48.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.720" endtime="20201029 18:17:48.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:48.733" endtime="20201029 18:17:49.046"></status>
</kw>
<msg timestamp="20201029 18:17:49.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074348042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074362639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:48.732" endtime="20201029 18:17:49.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074348042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074362639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:49.051" endtime="20201029 18:17:49.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:49.061" endtime="20201029 18:17:49.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.729" endtime="20201029 18:17:49.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.727" endtime="20201029 18:17:49.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:49.072" level="INFO">${RESULT} = [{'diff': 1.45969999999912e-05}, {'diff': 1.456899999999206e-05}, {'diff': 1.458299999999857e-05}, {'diff': 1.4555999999998903e-05}, {'diff': 1.458299999999857e-05}, {'diff': 1.4570000000005412e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:49.067" endtime="20201029 18:17:49.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:49.079" level="INFO">${OVERHEAD} = {'diff': [1.45969999999912e-05, 1.456899999999206e-05, 1.458299999999857e-05, 1.4555999999998903e-05, 1.458299999999857e-05, 1.4570000000005412e-05, 1.45969999999912e-05, 1.456899999999206e-05, 1.4610...</msg>
<status status="PASS" starttime="20201029 18:17:49.073" endtime="20201029 18:17:49.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.086" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 18:17:49.084" endtime="20201029 18:17:49.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:49.090" level="INFO">VALUE: [1.45969999999912e-05, 1.456899999999206e-05, 1.458299999999857e-05, 1.4555999999998903e-05, 1.458299999999857e-05, 1.4570000000005412e-05, 1.45969999999912e-05, 1.456899999999206e-05, 1.461099999999771e-05, 1.461099999999771e-05, 1.45969999999912e-05, 1.458299999999857e-05, 1.4625000000004218e-05, 1.458299999999857e-05, 1.456899999999206e-05, 1.4583999999998043e-05, 1.456899999999206e-05, 1.461099999999771e-05, 1.458400000001192e-05, 1.45969999999912e-05, 1.456899999999206e-05, 1.461099999999771e-05, 1.4583999999998043e-05, 1.4569999999991534e-05, 1.4597000000005078e-05, 1.4583999999998043e-05, 1.4555999999998903e-05, 1.4570000000005412e-05, 1.4597999999990674e-05, 1.4583999999998043e-05, 1.462499999999034e-05, 1.458299999999857e-05, 1.458299999999857e-05, 1.461099999999771e-05, 1.4569999999991534e-05, 1.45969999999912e-05, 1.4570000000005412e-05, 1.458299999999857e-05, 1.458299999999857e-05, 1.4653000000003358e-05, 1.454099999999292e-05, 1.458299999999857e-05, 1.455499999999943e-05, 1.4597000000005078e-05, 1.4597000000005078e-05, 1.458299999999857e-05, 1.456899999999206e-05, 1.4597999999990674e-05, 1.4541999999992394e-05, 1.4597000000005078e-05]</msg>
<status status="PASS" starttime="20201029 18:17:49.087" endtime="20201029 18:17:49.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:49.080" endtime="20201029 18:17:49.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:48.630" endtime="20201029 18:17:49.092"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:48.557" endtime="20201029 18:17:49.093" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:50.963" endtime="20201029 18:17:50.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.959" endtime="20201029 18:17:50.986"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.013" endtime="20201029 18:17:51.036"></status>
</kw>
<msg timestamp="20201029 18:17:51.037" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.010" endtime="20201029 18:17:51.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.042" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.039" endtime="20201029 18:17:51.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.049" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:51.045" endtime="20201029 18:17:51.049"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:51.004" endtime="20201029 18:17:51.050"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:50.999" endtime="20201029 18:17:51.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.997" endtime="20201029 18:17:51.052"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:51.060" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:51.059" endtime="20201029 18:17:51.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.054" endtime="20201029 18:17:51.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.995" endtime="20201029 18:17:51.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.994" endtime="20201029 18:17:51.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.064" endtime="20201029 18:17:51.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.991" endtime="20201029 18:17:51.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.987" endtime="20201029 18:17:51.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:50.957" endtime="20201029 18:17:51.069"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.086" endtime="20201029 18:17:51.220"></status>
</kw>
<msg timestamp="20201029 18:17:51.220" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.084" endtime="20201029 18:17:51.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.223" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.221" endtime="20201029 18:17:51.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.224" endtime="20201029 18:17:51.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.081" endtime="20201029 18:17:51.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.074" endtime="20201029 18:17:51.226"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.228" endtime="20201029 18:17:51.230"></status>
</kw>
<msg timestamp="20201029 18:17:51.231" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 18:17:51.227" endtime="20201029 18:17:51.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.235" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:17:51.234" endtime="20201029 18:17:51.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.237" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:17:51.236" endtime="20201029 18:17:51.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.231" endtime="20201029 18:17:51.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.242" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:17:51.241" endtime="20201029 18:17:51.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.244" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:17:51.243" endtime="20201029 18:17:51.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.238" endtime="20201029 18:17:51.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.251" endtime="20201029 18:17:51.545"></status>
</kw>
<msg timestamp="20201029 18:17:51.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.113509458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.113532167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:51.249" endtime="20201029 18:17:51.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.113509458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.113532167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:51.549" endtime="20201029 18:17:51.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.557" endtime="20201029 18:17:51.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.247" endtime="20201029 18:17:51.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.245" endtime="20201029 18:17:51.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:51.563" level="INFO">${RESULT} = [{'diff': 2.2709000000009638e-05}, {'diff': 2.2707999999996287e-05}, {'diff': 2.2694000000003656e-05}, {'diff': 2.2721999999988918e-05}, {'diff': 2.27770000000016e-05}, {'diff': 2.2709000000009638e-05...</msg>
<status status="PASS" starttime="20201029 18:17:51.560" endtime="20201029 18:17:51.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:17:51.568" level="INFO">${OVERHEAD} = {'diff': [2.2709000000009638e-05, 2.2707999999996287e-05, 2.2694000000003656e-05, 2.2721999999988918e-05, 2.27770000000016e-05, 2.2709000000009638e-05, 2.2736000000023182e-05, 2.270799999998241e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:17:51.564" endtime="20201029 18:17:51.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.573" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 18:17:51.572" endtime="20201029 18:17:51.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.575" level="INFO">VALUE: [2.2709000000009638e-05, 2.2707999999996287e-05, 2.2694000000003656e-05, 2.2721999999988918e-05, 2.27770000000016e-05, 2.2709000000009638e-05, 2.2736000000023182e-05, 2.270799999998241e-05, 2.2722000000002796e-05, 2.2708000000010164e-05, 2.2708000000010164e-05, 2.2722000000002796e-05, 2.272300000000227e-05, 2.266700000000399e-05, 2.2750000000015813e-05, 2.2666000000004516e-05, 2.2708000000010164e-05, 2.2679999999997147e-05, 2.2778000000001075e-05, 2.2681000000024376e-05, 2.2652000000011885e-05, 2.2679999999997147e-05, 2.269499999998925e-05, 2.2693999999989778e-05, 2.27369999999949e-05, 2.2749999999988058e-05, 2.2722000000002796e-05, 2.2666000000004516e-05, 2.276300000000897e-05, 2.262499999999834e-05, 2.2735999999995427e-05, 2.2735999999995427e-05, 2.2722000000002796e-05, 2.2679999999997147e-05, 2.2708000000010164e-05, 2.2735999999995427e-05, 2.265300000001136e-05, 2.2709000000009638e-05, 2.270799999998241e-05, 2.270799999998241e-05, 2.2694000000017533e-05, 2.2693999999989778e-05, 2.27369999999949e-05, 2.270799999998241e-05, 2.2693999999989778e-05, 2.2722000000002796e-05, 2.270799999998241e-05, 2.2708000000010164e-05, 2.2708999999981883e-05, 2.2679999999997147e-05]</msg>
<status status="PASS" starttime="20201029 18:17:51.574" endtime="20201029 18:17:51.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.569" endtime="20201029 18:17:51.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.070" endtime="20201029 18:17:51.576"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:50.951" endtime="20201029 18:17:51.577" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:51.583" endtime="20201029 18:17:51.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.582" endtime="20201029 18:17:51.604"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.616" endtime="20201029 18:17:51.634"></status>
</kw>
<msg timestamp="20201029 18:17:51.635" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.615" endtime="20201029 18:17:51.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.637" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:51.636" endtime="20201029 18:17:51.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.641" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:51.638" endtime="20201029 18:17:51.641"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:51.612" endtime="20201029 18:17:51.642"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:51.610" endtime="20201029 18:17:51.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.609" endtime="20201029 18:17:51.644"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:51.649" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:51.648" endtime="20201029 18:17:51.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.645" endtime="20201029 18:17:51.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.608" endtime="20201029 18:17:51.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.608" endtime="20201029 18:17:51.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:51.651" endtime="20201029 18:17:51.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.606" endtime="20201029 18:17:51.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.604" endtime="20201029 18:17:51.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.581" endtime="20201029 18:17:51.657"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:17:51.663" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:17:51.673" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:17:52.842" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:17:51.660" endtime="20201029 18:17:52.843"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.849" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 18:17:52.846" endtime="20201029 18:17:53.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:51.658" endtime="20201029 18:17:53.852"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:53.858" endtime="20201029 18:17:53.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.855" endtime="20201029 18:17:53.882"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.901" endtime="20201029 18:17:53.915"></status>
</kw>
<msg timestamp="20201029 18:17:53.916" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:53.897" endtime="20201029 18:17:53.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:53.921" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:53.918" endtime="20201029 18:17:53.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.924" endtime="20201029 18:17:53.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.891" endtime="20201029 18:17:53.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.887" endtime="20201029 18:17:53.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:53.945" endtime="20201029 18:17:54.237"></status>
</kw>
<msg timestamp="20201029 18:17:54.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031628417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031647958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:53.942" endtime="20201029 18:17:54.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031628417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031647958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:54.242" endtime="20201029 18:17:54.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.250" endtime="20201029 18:17:54.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.936" endtime="20201029 18:17:54.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.932" endtime="20201029 18:17:54.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:54.257" level="INFO">${PHILIP_RES} = [{'diff': 1.954099999999792e-05}, {'diff': 6.167000000001366e-06}, {'diff': 6.181000000000936e-06}, {'diff': 6.181000000000936e-06}, {'diff': 6.180999999993997e-06}, {'diff': 6.180000000001462e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:54.253" endtime="20201029 18:17:54.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:54.262" level="INFO">${RESULT} = {'diff': [1.954099999999792e-05, 6.167000000001366e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.180999999993997e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.194000000001032e-06, 6.1939...</msg>
<status status="PASS" starttime="20201029 18:17:54.258" endtime="20201029 18:17:54.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.267" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:54.266" endtime="20201029 18:17:54.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.269" level="INFO">VALUE: [1.954099999999792e-05, 6.167000000001366e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.180999999993997e-06, 6.180000000001462e-06, 6.167000000001366e-06, 6.194000000001032e-06, 6.193999999994093e-06, 6.167000000001366e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.166999999994427e-06, 6.166000000001892e-06, 6.181000000000936e-06, 6.180000000001462e-06, 6.166999999994427e-06, 6.195000000000506e-06, 6.166000000001892e-06, 6.181000000000936e-06, 6.221999999993233e-06, 6.181000000000936e-06, 6.181000000000936e-06, 6.166000000001892e-06, 6.181000000000936e-06, 6.153000000001796e-06, 6.181000000000936e-06, 6.167000000001366e-06, 6.180000000001462e-06, 6.195000000000506e-06, 6.139000000002226e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.166000000001892e-06, 6.167000000001366e-06, 6.166999999994427e-06, 6.208000000000602e-06, 6.181000000000936e-06, 6.180000000001462e-06, 6.180999999993997e-06, 6.235999999999742e-06, 6.194000000001032e-06, 6.167000000001366e-06, 6.222000000000172e-06, 6.167000000001366e-06, 6.181000000000936e-06, 6.152000000002322e-06, 6.166999999994427e-06, 6.166000000001892e-06, 6.181000000000936e-06]</msg>
<status status="PASS" starttime="20201029 18:17:54.268" endtime="20201029 18:17:54.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.263" endtime="20201029 18:17:54.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.883" endtime="20201029 18:17:54.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.854" endtime="20201029 18:17:54.271"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:54.273" endtime="20201029 18:17:54.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.272" endtime="20201029 18:17:54.293"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.301" endtime="20201029 18:17:54.312"></status>
</kw>
<msg timestamp="20201029 18:17:54.313" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:54.300" endtime="20201029 18:17:54.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.315" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:54.314" endtime="20201029 18:17:54.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.317" endtime="20201029 18:17:54.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.297" endtime="20201029 18:17:54.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.295" endtime="20201029 18:17:54.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.337" endtime="20201029 18:17:54.625"></status>
</kw>
<msg timestamp="20201029 18:17:54.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016949292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016958472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:54.335" endtime="20201029 18:17:54.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016949292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016958472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:54.629" endtime="20201029 18:17:54.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.638" endtime="20201029 18:17:54.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.332" endtime="20201029 18:17:54.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.330" endtime="20201029 18:17:54.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:54.645" level="INFO">${PHILIP_RES} = [{'diff': 9.179999999997523e-06}, {'diff': 8.903000000001077e-06}, {'diff': 8.903000000001077e-06}, {'diff': 8.902000000001603e-06}, {'diff': 8.944999999999786e-06}, {'diff': 8.957999999999883e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:17:54.641" endtime="20201029 18:17:54.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:54.649" level="INFO">${RESULT} = {'diff': [9.179999999997523e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.902000000001603e-06, 8.944999999999786e-06, 8.957999999999883e-06, 8.902000000001603e-06, 8.888999999998037e-06, 8.8750...</msg>
<status status="PASS" starttime="20201029 18:17:54.646" endtime="20201029 18:17:54.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.653" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:54.652" endtime="20201029 18:17:54.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.656" level="INFO">VALUE: [9.179999999997523e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.902000000001603e-06, 8.944999999999786e-06, 8.957999999999883e-06, 8.902000000001603e-06, 8.888999999998037e-06, 8.875000000001937e-06, 8.915999999997704e-06, 8.819000000000188e-06, 8.903000000001077e-06, 8.915999999997704e-06, 8.931000000000217e-06, 8.874999999998467e-06, 8.917000000000647e-06, 8.832999999999758e-06, 8.917000000000647e-06, 8.875000000001937e-06, 8.915999999997704e-06, 8.889000000001507e-06, 8.931000000000217e-06, 8.832999999999758e-06, 8.917000000000647e-06, 8.888999999998037e-06, 8.888000000002033e-06, 8.902999999997607e-06, 8.889000000001507e-06, 8.902999999997607e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.903000000001077e-06, 8.875000000001937e-06, 8.916999999997177e-06, 8.889000000001507e-06, 8.930000000000743e-06, 8.889000000001507e-06, 8.930000000000743e-06, 8.819000000000188e-06, 8.944999999999786e-06, 8.888999999998037e-06, 8.832999999999758e-06, 8.931000000000217e-06, 8.986000000002492e-06, 8.875000000001937e-06, 8.832999999999758e-06, 8.889000000001507e-06, 8.888999999998037e-06, 8.917000000000647e-06, 8.806000000000092e-06]</msg>
<status status="PASS" starttime="20201029 18:17:54.654" endtime="20201029 18:17:54.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.650" endtime="20201029 18:17:54.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.294" endtime="20201029 18:17:54.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.271" endtime="20201029 18:17:54.657"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:54.660" endtime="20201029 18:17:54.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.658" endtime="20201029 18:17:54.680"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.689" endtime="20201029 18:17:54.700"></status>
</kw>
<msg timestamp="20201029 18:17:54.701" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:54.687" endtime="20201029 18:17:54.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:54.704" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:54.702" endtime="20201029 18:17:54.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.707" endtime="20201029 18:17:54.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.684" endtime="20201029 18:17:54.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.682" endtime="20201029 18:17:54.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:54.717" endtime="20201029 18:17:55.001"></status>
</kw>
<msg timestamp="20201029 18:17:55.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018138389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018150431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:54.715" endtime="20201029 18:17:55.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018138389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018150431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.006" endtime="20201029 18:17:55.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.014" endtime="20201029 18:17:55.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.712" endtime="20201029 18:17:55.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.711" endtime="20201029 18:17:55.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:55.021" level="INFO">${PHILIP_RES} = [{'diff': 1.2042000000000302e-05}, {'diff': 1.1860999999998428e-05}, {'diff': 1.1860999999998428e-05}, {'diff': 1.1833000000002758e-05}, {'diff': 1.1846999999998858e-05}, {'diff': 1.1860999999998428e-...</msg>
<status status="PASS" starttime="20201029 18:17:55.018" endtime="20201029 18:17:55.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:55.025" level="INFO">${RESULT} = {'diff': [1.2042000000000302e-05, 1.1860999999998428e-05, 1.1860999999998428e-05, 1.1833000000002758e-05, 1.1846999999998858e-05, 1.1860999999998428e-05, 1.1862000000001371e-05, 1.1888000000001564e-05...</msg>
<status status="PASS" starttime="20201029 18:17:55.022" endtime="20201029 18:17:55.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.030" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:55.029" endtime="20201029 18:17:55.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.033" level="INFO">VALUE: [1.2042000000000302e-05, 1.1860999999998428e-05, 1.1860999999998428e-05, 1.1833000000002758e-05, 1.1846999999998858e-05, 1.1860999999998428e-05, 1.1862000000001371e-05, 1.1888000000001564e-05, 1.1847000000002328e-05, 1.1846999999998858e-05, 1.1861000000001898e-05, 1.1846999999998858e-05, 1.1846999999998858e-05, 1.1875000000001468e-05, 1.1764000000000913e-05, 1.1861000000001898e-05, 1.1847000000002328e-05, 1.1861999999997902e-05, 1.1875000000001468e-05, 1.1792000000000052e-05, 1.1846999999998858e-05, 1.1818999999999719e-05, 1.1847999999998332e-05, 1.1861000000001898e-05, 1.1930000000000274e-05, 1.1818999999999719e-05, 1.1875000000001468e-05, 1.1846999999998858e-05, 1.1889000000001038e-05, 1.1860999999998428e-05, 1.1860999999998428e-05, 1.1847000000002328e-05, 1.1846999999998858e-05, 1.1860999999998428e-05, 1.1848000000001802e-05, 1.1832999999999289e-05, 1.1847000000002328e-05, 1.1889000000001038e-05, 1.1846999999998858e-05, 1.1848000000001802e-05, 1.1819999999999192e-05, 1.1861000000001898e-05, 1.1792000000000052e-05, 1.1861000000001898e-05, 1.1846999999998858e-05, 1.1847999999998332e-05, 1.1861000000001898e-05, 1.1846999999998858e-05, 1.1861000000001898e-05, 1.1847000000002328e-05]</msg>
<status status="PASS" starttime="20201029 18:17:55.032" endtime="20201029 18:17:55.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.026" endtime="20201029 18:17:55.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.680" endtime="20201029 18:17:55.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:54.658" endtime="20201029 18:17:55.035"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:55.037" endtime="20201029 18:17:55.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.036" endtime="20201029 18:17:55.057"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.066" endtime="20201029 18:17:55.077"></status>
</kw>
<msg timestamp="20201029 18:17:55.077" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.064" endtime="20201029 18:17:55.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.080" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.079" endtime="20201029 18:17:55.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.081" endtime="20201029 18:17:55.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.061" endtime="20201029 18:17:55.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.059" endtime="20201029 18:17:55.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.091" endtime="20201029 18:17:55.379"></status>
</kw>
<msg timestamp="20201029 18:17:55.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016973444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016988736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.089" endtime="20201029 18:17:55.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016973444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016988736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.384" endtime="20201029 18:17:55.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.392" endtime="20201029 18:17:55.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.086" endtime="20201029 18:17:55.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.084" endtime="20201029 18:17:55.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:55.399" level="INFO">${PHILIP_RES} = [{'diff': 1.5292000000000083e-05}, {'diff': 1.5041999999999833e-05}, {'diff': 1.5014000000000693e-05}, {'diff': 1.5041999999999833e-05}, {'diff': 1.5014000000000693e-05}, {'diff': 1.5014000000000693e-...</msg>
<status status="PASS" starttime="20201029 18:17:55.396" endtime="20201029 18:17:55.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:55.404" level="INFO">${RESULT} = {'diff': [1.5292000000000083e-05, 1.5041999999999833e-05, 1.5014000000000693e-05, 1.5041999999999833e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.505499999999993e-05, 1.5028000000000263e-05,...</msg>
<status status="PASS" starttime="20201029 18:17:55.400" endtime="20201029 18:17:55.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.408" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:55.407" endtime="20201029 18:17:55.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.411" level="INFO">VALUE: [1.5292000000000083e-05, 1.5041999999999833e-05, 1.5014000000000693e-05, 1.5041999999999833e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.505499999999993e-05, 1.5028000000000263e-05, 1.5013999999997224e-05, 1.5013999999997224e-05, 1.5028000000000263e-05, 1.5097000000002109e-05, 1.5013999999997224e-05, 1.502700000000079e-05, 1.5014000000000693e-05, 1.5041999999999833e-05, 1.5028000000000263e-05, 1.5041999999999833e-05, 1.508299999999907e-05, 1.5028000000000263e-05, 1.501300000000122e-05, 1.502700000000079e-05, 1.502700000000079e-05, 1.4972000000001984e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.505499999999993e-05, 1.5028000000000263e-05, 1.502699999999732e-05, 1.50689999999995e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.4985999999998084e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.505499999999993e-05, 1.501300000000122e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.5000000000001124e-05, 1.5028000000000263e-05, 1.5014000000000693e-05, 1.502700000000079e-05, 1.502700000000079e-05, 1.5028000000000263e-05, 1.5083999999998543e-05, 1.5028000000000263e-05, 1.5027999999996794e-05]</msg>
<status status="PASS" starttime="20201029 18:17:55.410" endtime="20201029 18:17:55.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.405" endtime="20201029 18:17:55.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.058" endtime="20201029 18:17:55.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.035" endtime="20201029 18:17:55.413"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:55.415" endtime="20201029 18:17:55.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.413" endtime="20201029 18:17:55.435"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.443" endtime="20201029 18:17:55.457"></status>
</kw>
<msg timestamp="20201029 18:17:55.458" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.442" endtime="20201029 18:17:55.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.460" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.459" endtime="20201029 18:17:55.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.461" endtime="20201029 18:17:55.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.439" endtime="20201029 18:17:55.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.437" endtime="20201029 18:17:55.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.471" endtime="20201029 18:17:55.756"></status>
</kw>
<msg timestamp="20201029 18:17:55.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017206069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01722475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:55.469" endtime="20201029 18:17:55.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017206069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01722475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:55.761" endtime="20201029 18:17:55.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.769" endtime="20201029 18:17:55.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.466" endtime="20201029 18:17:55.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.465" endtime="20201029 18:17:55.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:55.777" level="INFO">${PHILIP_RES} = [{'diff': 1.868099999999956e-05}, {'diff': 1.843099999999931e-05}, {'diff': 1.844499999999888e-05}, {'diff': 1.8429999999999835e-05}, {'diff': 1.8416000000000265e-05}, {'diff': 1.843099999999931e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:55.774" endtime="20201029 18:17:55.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:55.781" level="INFO">${RESULT} = {'diff': [1.868099999999956e-05, 1.843099999999931e-05, 1.844499999999888e-05, 1.8429999999999835e-05, 1.8416000000000265e-05, 1.843099999999931e-05, 1.841699999999974e-05, 1.84029999999967e-05, 1.840...</msg>
<status status="PASS" starttime="20201029 18:17:55.778" endtime="20201029 18:17:55.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.786" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:55.785" endtime="20201029 18:17:55.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.789" level="INFO">VALUE: [1.868099999999956e-05, 1.843099999999931e-05, 1.844499999999888e-05, 1.8429999999999835e-05, 1.8416000000000265e-05, 1.843099999999931e-05, 1.841699999999974e-05, 1.84029999999967e-05, 1.8402000000000696e-05, 1.844499999999888e-05, 1.844499999999888e-05, 1.843100000000278e-05, 1.8429999999999835e-05, 1.8457999999998975e-05, 1.843099999999931e-05, 1.841699999999974e-05, 1.8416000000000265e-05, 1.8443999999999405e-05, 1.841699999999974e-05, 1.843099999999931e-05, 1.8416000000000265e-05, 1.8457999999998975e-05, 1.844499999999888e-05, 1.841700000000321e-05, 1.837500000000103e-05, 1.8443999999999405e-05, 1.840300000000017e-05, 1.844500000000235e-05, 1.841699999999974e-05, 1.8416000000000265e-05, 1.841699999999974e-05, 1.836099999999799e-05, 1.843099999999931e-05, 1.8429999999999835e-05, 1.8471999999998545e-05, 1.843099999999931e-05, 1.844500000000235e-05, 1.8429999999999835e-05, 1.8443999999999405e-05, 1.833299999999885e-05, 1.843100000000278e-05, 1.8416000000000265e-05, 1.8457999999998975e-05, 1.840300000000017e-05, 1.844500000000235e-05, 1.841699999999974e-05, 1.8457999999998975e-05, 1.841699999999974e-05, 1.843100000000278e-05, 1.841699999999974e-05]</msg>
<status status="PASS" starttime="20201029 18:17:55.787" endtime="20201029 18:17:55.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.782" endtime="20201029 18:17:55.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.436" endtime="20201029 18:17:55.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.413" endtime="20201029 18:17:55.790"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:55.792" endtime="20201029 18:17:55.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.791" endtime="20201029 18:17:55.812"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.821" endtime="20201029 18:17:55.835"></status>
</kw>
<msg timestamp="20201029 18:17:55.835" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.819" endtime="20201029 18:17:55.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:55.838" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:55.836" endtime="20201029 18:17:55.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.839" endtime="20201029 18:17:55.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.817" endtime="20201029 18:17:55.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.815" endtime="20201029 18:17:55.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:55.849" endtime="20201029 18:17:56.138"></status>
</kw>
<msg timestamp="20201029 18:17:56.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017590236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017612486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:55.848" endtime="20201029 18:17:56.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017590236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017612486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:56.147" endtime="20201029 18:17:56.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.166" endtime="20201029 18:17:56.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.845" endtime="20201029 18:17:56.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.843" endtime="20201029 18:17:56.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:56.183" level="INFO">${PHILIP_RES} = [{'diff': 2.2250000000001435e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.2056000000002934e-05}, {'diff': 2.2055999999999465e-05}, {'diff': 2.208299999999913e-05}, {'diff': 2.206899999999956e-05...</msg>
<status status="PASS" starttime="20201029 18:17:56.175" endtime="20201029 18:17:56.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:56.193" level="INFO">${RESULT} = {'diff': [2.2250000000001435e-05, 2.2041999999999895e-05, 2.2056000000002934e-05, 2.2055999999999465e-05, 2.208299999999913e-05, 2.206899999999956e-05, 2.205499999999999e-05, 2.2055999999999465e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:17:56.185" endtime="20201029 18:17:56.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.205" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:56.202" endtime="20201029 18:17:56.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.213" level="INFO">VALUE: [2.2250000000001435e-05, 2.2041999999999895e-05, 2.2056000000002934e-05, 2.2055999999999465e-05, 2.208299999999913e-05, 2.206899999999956e-05, 2.205499999999999e-05, 2.2055999999999465e-05, 2.2098000000001644e-05, 2.2041999999999895e-05, 2.2055999999999465e-05, 2.2055999999999465e-05, 2.204100000000042e-05, 2.204100000000042e-05, 2.2028000000000325e-05, 2.2112000000001214e-05, 2.2041999999999895e-05, 2.2055999999999465e-05, 2.206899999999956e-05, 2.206899999999956e-05, 2.205499999999999e-05, 2.2028000000000325e-05, 2.2041999999999895e-05, 2.2041999999999895e-05, 2.2028000000000325e-05, 2.211099999999827e-05, 2.202700000000085e-05, 2.205499999999999e-05, 2.2041999999999895e-05, 2.2055999999999465e-05, 2.2041999999999895e-05, 2.2070000000002504e-05, 2.2055999999999465e-05, 2.204100000000042e-05, 2.206899999999956e-05, 2.2028000000000325e-05, 2.2055999999999465e-05, 2.2041999999999895e-05, 2.2027999999996856e-05, 2.208299999999913e-05, 2.202700000000085e-05, 2.205499999999999e-05, 2.2042000000003364e-05, 2.2097999999998175e-05, 2.2069999999999035e-05, 2.2070000000002504e-05, 2.205499999999999e-05, 2.205499999999999e-05, 2.208299999999913e-05, 2.205499999999999e-05]</msg>
<status status="PASS" starttime="20201029 18:17:56.208" endtime="20201029 18:17:56.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.196" endtime="20201029 18:17:56.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.813" endtime="20201029 18:17:56.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:55.790" endtime="20201029 18:17:56.220"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:56.226" endtime="20201029 18:17:56.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.222" endtime="20201029 18:17:56.248"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.259" endtime="20201029 18:17:56.271"></status>
</kw>
<msg timestamp="20201029 18:17:56.272" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.256" endtime="20201029 18:17:56.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.274" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.273" endtime="20201029 18:17:56.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.276" endtime="20201029 18:17:56.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.253" endtime="20201029 18:17:56.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.250" endtime="20201029 18:17:56.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.286" endtime="20201029 18:17:56.572"></status>
</kw>
<msg timestamp="20201029 18:17:56.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019798417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:56.284" endtime="20201029 18:17:56.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019798417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:56.576" endtime="20201029 18:17:56.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.584" endtime="20201029 18:17:56.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.281" endtime="20201029 18:17:56.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.279" endtime="20201029 18:17:56.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:56.591" level="INFO">${PHILIP_RES} = [{'diff': 2.6166000000001077e-05}, {'diff': 2.5930000000000397e-05}, {'diff': 2.59170000000003e-05}, {'diff': 2.588899999999769e-05}, {'diff': 2.5860999999998552e-05}, {'diff': 2.590300000000073e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:56.588" endtime="20201029 18:17:56.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:56.596" level="INFO">${RESULT} = {'diff': [2.6166000000001077e-05, 2.5930000000000397e-05, 2.59170000000003e-05, 2.588899999999769e-05, 2.5860999999998552e-05, 2.590300000000073e-05, 2.588899999999769e-05, 2.5901999999997788e-05, 2.5...</msg>
<status status="PASS" starttime="20201029 18:17:56.592" endtime="20201029 18:17:56.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.601" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:56.600" endtime="20201029 18:17:56.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.603" level="INFO">VALUE: [2.6166000000001077e-05, 2.5930000000000397e-05, 2.59170000000003e-05, 2.588899999999769e-05, 2.5860999999998552e-05, 2.590300000000073e-05, 2.588899999999769e-05, 2.5901999999997788e-05, 2.588899999999769e-05, 2.590300000000073e-05, 2.588899999999769e-05, 2.59170000000003e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.5888000000001687e-05, 2.588900000000116e-05, 2.59170000000003e-05, 2.588900000000116e-05, 2.59170000000003e-05, 2.588900000000116e-05, 2.587500000000159e-05, 2.5902000000001257e-05, 2.590300000000073e-05, 2.5971999999999107e-05, 2.5860999999998552e-05, 2.5860999999998552e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.588899999999769e-05, 2.590300000000073e-05, 2.5874999999998122e-05, 2.590300000000073e-05, 2.588899999999769e-05, 2.588899999999769e-05, 2.5901999999997788e-05, 2.5943999999999967e-05, 2.588899999999769e-05, 2.5930000000000397e-05, 2.583300000000288e-05, 2.59170000000003e-05, 2.5985999999998677e-05, 2.5902000000001257e-05, 2.588900000000116e-05, 2.590300000000073e-05, 2.588900000000116e-05, 2.590300000000073e-05, 2.598700000000162e-05, 2.5916000000000827e-05, 2.590300000000073e-05, 2.588900000000116e-05]</msg>
<status status="PASS" starttime="20201029 18:17:56.602" endtime="20201029 18:17:56.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.597" endtime="20201029 18:17:56.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.249" endtime="20201029 18:17:56.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.221" endtime="20201029 18:17:56.605"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:56.607" endtime="20201029 18:17:56.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.606" endtime="20201029 18:17:56.627"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.636" endtime="20201029 18:17:56.649"></status>
</kw>
<msg timestamp="20201029 18:17:56.650" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.634" endtime="20201029 18:17:56.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.652" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:56.651" endtime="20201029 18:17:56.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.653" endtime="20201029 18:17:56.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.632" endtime="20201029 18:17:56.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.629" endtime="20201029 18:17:56.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.663" endtime="20201029 18:17:56.952"></status>
</kw>
<msg timestamp="20201029 18:17:56.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017550194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017580417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:56.661" endtime="20201029 18:17:56.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017550194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017580417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:56.956" endtime="20201029 18:17:56.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:56.964" endtime="20201029 18:17:56.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.658" endtime="20201029 18:17:56.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.657" endtime="20201029 18:17:56.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:56.971" level="INFO">${PHILIP_RES} = [{'diff': 3.022299999999936e-05}, {'diff': 2.9930000000000928e-05}, {'diff': 2.9971999999999638e-05}, {'diff': 2.9985999999999208e-05}, {'diff': 2.9971999999999638e-05}, {'diff': 2.9985999999999208e-0...</msg>
<status status="PASS" starttime="20201029 18:17:56.968" endtime="20201029 18:17:56.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:56.975" level="INFO">${RESULT} = {'diff': [3.022299999999936e-05, 2.9930000000000928e-05, 2.9971999999999638e-05, 2.9985999999999208e-05, 2.9971999999999638e-05, 2.9985999999999208e-05, 2.9999999999998778e-05, 2.9999999999998778e-05,...</msg>
<status status="PASS" starttime="20201029 18:17:56.972" endtime="20201029 18:17:56.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.980" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:56.979" endtime="20201029 18:17:56.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:56.982" level="INFO">VALUE: [3.022299999999936e-05, 2.9930000000000928e-05, 2.9971999999999638e-05, 2.9985999999999208e-05, 2.9971999999999638e-05, 2.9985999999999208e-05, 2.9999999999998778e-05, 2.9999999999998778e-05, 2.9971999999999638e-05, 2.997299999999911e-05, 2.9985999999999208e-05, 3.0027000000001913e-05, 2.9985999999999208e-05, 2.9971999999999638e-05, 2.9985999999999208e-05, 2.9972000000003107e-05, 3.0042000000000957e-05, 2.998699999999868e-05, 2.9971999999999638e-05, 2.9944000000000498e-05, 2.998699999999868e-05, 2.9971999999999638e-05, 2.9888999999998223e-05, 2.9971999999999638e-05, 2.9971999999999638e-05, 2.9999999999998778e-05, 3.0014000000001817e-05, 2.9971999999999638e-05, 2.9971999999999638e-05, 2.9985999999999208e-05, 3.0042000000000957e-05, 2.997299999999911e-05, 2.9971999999999638e-05, 2.9985999999999208e-05, 2.9999999999998778e-05, 3.0014000000001817e-05, 2.9971999999999638e-05, 2.9985999999999208e-05, 2.9985999999999208e-05, 2.9972000000003107e-05, 2.9971999999999638e-05, 3.0000000000002247e-05, 2.997299999999911e-05, 3.0000000000002247e-05, 2.9958000000000068e-05, 2.997299999999911e-05, 2.9971999999999638e-05, 2.9985999999999208e-05, 3.0014000000001817e-05, 2.9971999999999638e-05]</msg>
<status status="PASS" starttime="20201029 18:17:56.981" endtime="20201029 18:17:56.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.976" endtime="20201029 18:17:56.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.628" endtime="20201029 18:17:56.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.605" endtime="20201029 18:17:56.984"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:56.986" endtime="20201029 18:17:57.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.985" endtime="20201029 18:17:57.007"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.015" endtime="20201029 18:17:57.028"></status>
</kw>
<msg timestamp="20201029 18:17:57.029" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.013" endtime="20201029 18:17:57.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.031" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.030" endtime="20201029 18:17:57.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.032" endtime="20201029 18:17:57.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.011" endtime="20201029 18:17:57.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.009" endtime="20201029 18:17:57.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.043" endtime="20201029 18:17:57.328"></status>
</kw>
<msg timestamp="20201029 18:17:57.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017400417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017434944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.041" endtime="20201029 18:17:57.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017400417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017434944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.333" endtime="20201029 18:17:57.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.341" endtime="20201029 18:17:57.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.038" endtime="20201029 18:17:57.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.037" endtime="20201029 18:17:57.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:57.348" level="INFO">${PHILIP_RES} = [{'diff': 3.4526999999999475e-05}, {'diff': 3.427800000000217e-05}, {'diff': 3.426399999999913e-05}, {'diff': 3.4276999999999225e-05}, {'diff': 3.426399999999913e-05}, {'diff': 3.42640000000026e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:57.345" endtime="20201029 18:17:57.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:57.352" level="INFO">${RESULT} = {'diff': [3.4526999999999475e-05, 3.427800000000217e-05, 3.426399999999913e-05, 3.4276999999999225e-05, 3.426399999999913e-05, 3.42640000000026e-05, 3.4276999999999225e-05, 3.424999999999956e-05, 3.42...</msg>
<status status="PASS" starttime="20201029 18:17:57.349" endtime="20201029 18:17:57.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.356" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:57.355" endtime="20201029 18:17:57.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.359" level="INFO">VALUE: [3.4526999999999475e-05, 3.427800000000217e-05, 3.426399999999913e-05, 3.4276999999999225e-05, 3.426399999999913e-05, 3.42640000000026e-05, 3.4276999999999225e-05, 3.424999999999956e-05, 3.426399999999913e-05, 3.42640000000026e-05, 3.427800000000217e-05, 3.434800000000002e-05, 3.4290999999998795e-05, 3.424999999999956e-05, 3.424999999999956e-05, 3.426399999999913e-05, 3.42779999999987e-05, 3.424999999999956e-05, 3.4277000000002694e-05, 3.426399999999913e-05, 3.42779999999987e-05, 3.4318999999997934e-05, 3.429200000000174e-05, 3.429200000000174e-05, 3.4319000000001404e-05, 3.4332999999997504e-05, 3.427800000000217e-05, 3.427800000000217e-05, 3.42779999999987e-05, 3.42779999999987e-05, 3.4290999999998795e-05, 3.432000000000088e-05, 3.426399999999913e-05, 3.42779999999987e-05, 3.429199999999827e-05, 3.429200000000174e-05, 3.423700000000293e-05, 3.426399999999913e-05, 3.42779999999987e-05, 3.426399999999913e-05, 3.427800000000217e-05, 3.42779999999987e-05, 3.4290999999998795e-05, 3.429199999999827e-05, 3.434800000000002e-05, 3.427800000000217e-05, 3.42779999999987e-05, 3.429199999999827e-05, 3.427800000000217e-05, 3.429200000000174e-05]</msg>
<status status="PASS" starttime="20201029 18:17:57.358" endtime="20201029 18:17:57.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.353" endtime="20201029 18:17:57.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.007" endtime="20201029 18:17:57.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:56.984" endtime="20201029 18:17:57.361"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:57.364" endtime="20201029 18:17:57.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.363" endtime="20201029 18:17:57.384"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.392" endtime="20201029 18:17:57.406"></status>
</kw>
<msg timestamp="20201029 18:17:57.407" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.391" endtime="20201029 18:17:57.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.409" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.408" endtime="20201029 18:17:57.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.410" endtime="20201029 18:17:57.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.388" endtime="20201029 18:17:57.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.386" endtime="20201029 18:17:57.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.423" endtime="20201029 18:17:57.714"></status>
</kw>
<msg timestamp="20201029 18:17:57.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016994514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017033569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.420" endtime="20201029 18:17:57.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016994514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017033569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.718" endtime="20201029 18:17:57.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.727" endtime="20201029 18:17:57.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.416" endtime="20201029 18:17:57.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.414" endtime="20201029 18:17:57.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:57.733" level="INFO">${PHILIP_RES} = [{'diff': 3.9054999999999646e-05}, {'diff': 3.880599999999887e-05}, {'diff': 3.87919999999993e-05}, {'diff': 3.8804999999999396e-05}, {'diff': 3.873599999999755e-05}, {'diff': 3.8832999999998535e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:57.730" endtime="20201029 18:17:57.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:57.738" level="INFO">${RESULT} = {'diff': [3.9054999999999646e-05, 3.880599999999887e-05, 3.87919999999993e-05, 3.8804999999999396e-05, 3.873599999999755e-05, 3.8832999999998535e-05, 3.881999999999844e-05, 3.876400000000016e-05, 3.87...</msg>
<status status="PASS" starttime="20201029 18:17:57.734" endtime="20201029 18:17:57.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.743" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:57.742" endtime="20201029 18:17:57.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.745" level="INFO">VALUE: [3.9054999999999646e-05, 3.880599999999887e-05, 3.87919999999993e-05, 3.8804999999999396e-05, 3.873599999999755e-05, 3.8832999999998535e-05, 3.881999999999844e-05, 3.876400000000016e-05, 3.8790999999999826e-05, 3.8804999999999396e-05, 3.880599999999887e-05, 3.877799999999973e-05, 3.8804999999999396e-05, 3.8804999999999396e-05, 3.880599999999887e-05, 3.880600000000234e-05, 3.87919999999993e-05, 3.8790999999999826e-05, 3.8832999999998535e-05, 3.882000000000191e-05, 3.880599999999887e-05, 3.8804999999999396e-05, 3.8832999999998535e-05, 3.880600000000234e-05, 3.8833000000002005e-05, 3.881999999999844e-05, 3.8818999999998965e-05, 3.8805000000002865e-05, 3.876400000000016e-05, 3.87919999999993e-05, 3.8790999999999826e-05, 3.873599999999755e-05, 3.87919999999993e-05, 3.87919999999993e-05, 3.879200000000277e-05, 3.8805000000002865e-05, 3.8818999999998965e-05, 3.87919999999993e-05, 3.880600000000234e-05, 3.880600000000234e-05, 3.873600000000102e-05, 3.8846999999998105e-05, 3.882000000000191e-05, 3.8804999999999396e-05, 3.8818999999998965e-05, 3.87919999999993e-05, 3.883400000000148e-05, 3.882000000000191e-05, 3.8804999999999396e-05, 3.8846999999998105e-05]</msg>
<status status="PASS" starttime="20201029 18:17:57.744" endtime="20201029 18:17:57.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.739" endtime="20201029 18:17:57.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.385" endtime="20201029 18:17:57.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.362" endtime="20201029 18:17:57.747"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:57.750" endtime="20201029 18:17:57.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.748" endtime="20201029 18:17:57.770"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.778" endtime="20201029 18:17:57.793"></status>
</kw>
<msg timestamp="20201029 18:17:57.793" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.777" endtime="20201029 18:17:57.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:57.796" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:57.794" endtime="20201029 18:17:57.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.797" endtime="20201029 18:17:57.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.774" endtime="20201029 18:17:57.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.772" endtime="20201029 18:17:57.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:57.806" endtime="20201029 18:17:58.092"></status>
</kw>
<msg timestamp="20201029 18:17:58.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017080903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017124722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:57.805" endtime="20201029 18:17:58.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017080903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017124722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:58.097" endtime="20201029 18:17:58.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.105" endtime="20201029 18:17:58.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.802" endtime="20201029 18:17:58.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.800" endtime="20201029 18:17:58.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:58.113" level="INFO">${PHILIP_RES} = [{'diff': 4.381899999999703e-05}, {'diff': 4.354200000000058e-05}, {'diff': 4.348599999999883e-05}, {'diff': 4.3569000000000246e-05}, {'diff': 4.355600000000015e-05}, {'diff': 4.354200000000058e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:17:58.110" endtime="20201029 18:17:58.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:58.117" level="INFO">${RESULT} = {'diff': [4.381899999999703e-05, 4.354200000000058e-05, 4.348599999999883e-05, 4.3569000000000246e-05, 4.355600000000015e-05, 4.354200000000058e-05, 4.3541000000001107e-05, 4.352800000000101e-05, 4.35...</msg>
<status status="PASS" starttime="20201029 18:17:58.114" endtime="20201029 18:17:58.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.121" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:58.120" endtime="20201029 18:17:58.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.124" level="INFO">VALUE: [4.381899999999703e-05, 4.354200000000058e-05, 4.348599999999883e-05, 4.3569000000000246e-05, 4.355600000000015e-05, 4.354200000000058e-05, 4.3541000000001107e-05, 4.352800000000101e-05, 4.351400000000144e-05, 4.352799999999754e-05, 4.3569000000000246e-05, 4.355600000000015e-05, 4.3555000000000677e-05, 4.3555000000000677e-05, 4.355600000000015e-05, 4.358399999999929e-05, 4.3555000000000677e-05, 4.3582999999999816e-05, 4.354199999999711e-05, 4.3541000000001107e-05, 4.3596999999999386e-05, 4.354200000000058e-05, 4.354099999999764e-05, 4.352700000000154e-05, 4.355600000000015e-05, 4.3555000000000677e-05, 4.355600000000015e-05, 4.355600000000015e-05, 4.354200000000058e-05, 4.355499999999721e-05, 4.358399999999929e-05, 4.351399999999797e-05, 4.352700000000154e-05, 4.355600000000015e-05, 4.354200000000058e-05, 4.3555000000000677e-05, 4.355600000000015e-05, 4.355600000000015e-05, 4.3555000000000677e-05, 4.355600000000015e-05, 4.359800000000233e-05, 4.3569000000000246e-05, 4.352800000000101e-05, 4.355600000000015e-05, 4.3555000000000677e-05, 4.354200000000058e-05, 4.356999999999972e-05, 4.3555000000000677e-05, 4.3569000000000246e-05, 4.352800000000101e-05]</msg>
<status status="PASS" starttime="20201029 18:17:58.123" endtime="20201029 18:17:58.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.118" endtime="20201029 18:17:58.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.770" endtime="20201029 18:17:58.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:57.748" endtime="20201029 18:17:58.126"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:58.128" endtime="20201029 18:17:58.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.127" endtime="20201029 18:17:58.148"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.157" endtime="20201029 18:17:58.172"></status>
</kw>
<msg timestamp="20201029 18:17:58.172" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.155" endtime="20201029 18:17:58.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.175" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.173" endtime="20201029 18:17:58.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.176" endtime="20201029 18:17:58.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.152" endtime="20201029 18:17:58.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.150" endtime="20201029 18:17:58.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.186" endtime="20201029 18:17:58.472"></status>
</kw>
<msg timestamp="20201029 18:17:58.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017086236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017135042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:58.185" endtime="20201029 18:17:58.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017086236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017135042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:58.477" endtime="20201029 18:17:58.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.485" endtime="20201029 18:17:58.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.182" endtime="20201029 18:17:58.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.180" endtime="20201029 18:17:58.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:58.492" level="INFO">${PHILIP_RES} = [{'diff': 4.880599999999846e-05}, {'diff': 4.85269999999996e-05}, {'diff': 4.857000000000125e-05}, {'diff': 4.852800000000254e-05}, {'diff': 4.85269999999996e-05}, {'diff': 4.852799999999907e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:17:58.488" endtime="20201029 18:17:58.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:58.496" level="INFO">${RESULT} = {'diff': [4.880599999999846e-05, 4.85269999999996e-05, 4.857000000000125e-05, 4.852800000000254e-05, 4.85269999999996e-05, 4.852799999999907e-05, 4.852799999999907e-05, 4.852799999999907e-05, 4.851399...</msg>
<status status="PASS" starttime="20201029 18:17:58.493" endtime="20201029 18:17:58.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.500" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:58.499" endtime="20201029 18:17:58.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.503" level="INFO">VALUE: [4.880599999999846e-05, 4.85269999999996e-05, 4.857000000000125e-05, 4.852800000000254e-05, 4.85269999999996e-05, 4.852799999999907e-05, 4.852799999999907e-05, 4.852799999999907e-05, 4.85139999999995e-05, 4.85139999999995e-05, 4.852800000000254e-05, 4.85139999999995e-05, 4.85139999999995e-05, 4.852799999999907e-05, 4.85269999999996e-05, 4.852799999999907e-05, 4.85139999999995e-05, 4.852799999999907e-05, 4.848600000000036e-05, 4.852700000000307e-05, 4.858400000000082e-05, 4.852799999999907e-05, 4.848600000000036e-05, 4.852799999999907e-05, 4.852799999999907e-05, 4.852799999999907e-05, 4.856899999999831e-05, 4.85269999999996e-05, 4.852800000000254e-05, 4.851400000000297e-05, 4.852799999999907e-05, 4.85139999999995e-05, 4.856900000000178e-05, 4.852799999999907e-05, 4.852799999999907e-05, 4.85139999999995e-05, 4.854199999999864e-05, 4.854100000000264e-05, 4.852800000000254e-05, 4.852799999999907e-05, 4.849999999999993e-05, 4.847200000000079e-05, 4.85269999999996e-05, 4.852799999999907e-05, 4.859699999999745e-05, 4.852800000000254e-05, 4.851400000000297e-05, 4.854099999999917e-05, 4.852799999999907e-05, 4.852799999999907e-05]</msg>
<status status="PASS" starttime="20201029 18:17:58.501" endtime="20201029 18:17:58.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.497" endtime="20201029 18:17:58.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.149" endtime="20201029 18:17:58.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.126" endtime="20201029 18:17:58.506"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:58.508" endtime="20201029 18:17:58.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.507" endtime="20201029 18:17:58.528"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.536" endtime="20201029 18:17:58.552"></status>
</kw>
<msg timestamp="20201029 18:17:58.553" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.535" endtime="20201029 18:17:58.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.555" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.554" endtime="20201029 18:17:58.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.557" endtime="20201029 18:17:58.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.532" endtime="20201029 18:17:58.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.530" endtime="20201029 18:17:58.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.566" endtime="20201029 18:17:58.854"></status>
</kw>
<msg timestamp="20201029 18:17:58.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017001444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017055431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:58.565" endtime="20201029 18:17:58.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017001444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017055431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:58.859" endtime="20201029 18:17:58.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.867" endtime="20201029 18:17:58.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.562" endtime="20201029 18:17:58.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.560" endtime="20201029 18:17:58.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:58.873" level="INFO">${PHILIP_RES} = [{'diff': 5.39869999999984e-05}, {'diff': 5.370899999999901e-05}, {'diff': 5.3735999999998674e-05}, {'diff': 5.3735999999998674e-05}, {'diff': 5.3735999999998674e-05}, {'diff': 5.3735999999998674e-05}...</msg>
<status status="PASS" starttime="20201029 18:17:58.870" endtime="20201029 18:17:58.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:58.879" level="INFO">${RESULT} = {'diff': [5.39869999999984e-05, 5.370899999999901e-05, 5.3735999999998674e-05, 5.3735999999998674e-05, 5.3735999999998674e-05, 5.3735999999998674e-05, 5.375000000000171e-05, 5.372200000000257e-05, 5.3...</msg>
<status status="PASS" starttime="20201029 18:17:58.874" endtime="20201029 18:17:58.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.883" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:58.882" endtime="20201029 18:17:58.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.886" level="INFO">VALUE: [5.39869999999984e-05, 5.370899999999901e-05, 5.3735999999998674e-05, 5.3735999999998674e-05, 5.3735999999998674e-05, 5.3735999999998674e-05, 5.375000000000171e-05, 5.372200000000257e-05, 5.3708000000003e-05, 5.373600000000214e-05, 5.372300000000205e-05, 5.373600000000214e-05, 5.373600000000214e-05, 5.3763999999997814e-05, 5.368099999999987e-05, 5.3721999999999104e-05, 5.3735999999998674e-05, 5.3721999999999104e-05, 5.3721999999999104e-05, 5.370899999999901e-05, 5.372299999999858e-05, 5.372299999999858e-05, 5.3707999999999534e-05, 5.376400000000128e-05, 5.373600000000214e-05, 5.373600000000214e-05, 5.377800000000085e-05, 5.373600000000214e-05, 5.3693999999999964e-05, 5.3693999999999964e-05, 5.3735999999998674e-05, 5.365300000000073e-05, 5.3707999999999534e-05, 5.3763999999997814e-05, 5.3721999999999104e-05, 5.3735999999998674e-05, 5.380599999999999e-05, 5.3735999999998674e-05, 5.3735999999998674e-05, 5.372299999999858e-05, 5.370900000000248e-05, 5.370900000000248e-05, 5.370900000000248e-05, 5.372200000000257e-05, 5.368099999999987e-05, 5.375000000000171e-05, 5.375000000000171e-05, 5.373600000000214e-05, 5.3735999999998674e-05, 5.3735999999998674e-05]</msg>
<status status="PASS" starttime="20201029 18:17:58.884" endtime="20201029 18:17:58.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.880" endtime="20201029 18:17:58.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.529" endtime="20201029 18:17:58.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.506" endtime="20201029 18:17:58.888"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:58.890" endtime="20201029 18:17:58.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.889" endtime="20201029 18:17:58.910"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.918" endtime="20201029 18:17:58.934"></status>
</kw>
<msg timestamp="20201029 18:17:58.934" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.917" endtime="20201029 18:17:58.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:58.937" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:58.935" endtime="20201029 18:17:58.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.938" endtime="20201029 18:17:58.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.914" endtime="20201029 18:17:58.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.912" endtime="20201029 18:17:58.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:58.947" endtime="20201029 18:17:59.233"></status>
</kw>
<msg timestamp="20201029 18:17:59.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017045181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017104583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:58.946" endtime="20201029 18:17:59.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017045181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017104583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.238" endtime="20201029 18:17:59.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.246" endtime="20201029 18:17:59.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.943" endtime="20201029 18:17:59.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.941" endtime="20201029 18:17:59.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:59.254" level="INFO">${PHILIP_RES} = [{'diff': 5.9402000000000066e-05}, {'diff': 5.916699999999886e-05}, {'diff': 5.918099999999843e-05}, {'diff': 5.912500000000015e-05}, {'diff': 5.9151999999999816e-05}, {'diff': 5.916699999999886e-05},...</msg>
<status status="PASS" starttime="20201029 18:17:59.250" endtime="20201029 18:17:59.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:59.258" level="INFO">${RESULT} = {'diff': [5.9402000000000066e-05, 5.916699999999886e-05, 5.918099999999843e-05, 5.912500000000015e-05, 5.9151999999999816e-05, 5.916699999999886e-05, 5.915299999999929e-05, 5.9207999999998095e-05, 5.9...</msg>
<status status="PASS" starttime="20201029 18:17:59.255" endtime="20201029 18:17:59.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.262" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:59.261" endtime="20201029 18:17:59.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.265" level="INFO">VALUE: [5.9402000000000066e-05, 5.916699999999886e-05, 5.918099999999843e-05, 5.912500000000015e-05, 5.9151999999999816e-05, 5.916699999999886e-05, 5.915299999999929e-05, 5.9207999999998095e-05, 5.915299999999929e-05, 5.9151999999999816e-05, 5.915299999999929e-05, 5.913899999999972e-05, 5.915299999999929e-05, 5.916699999999886e-05, 5.9165999999999386e-05, 5.915300000000276e-05, 5.913899999999972e-05, 5.915299999999929e-05, 5.915299999999929e-05, 5.908300000000144e-05, 5.913899999999972e-05, 5.916700000000233e-05, 5.915300000000276e-05, 5.913900000000319e-05, 5.912500000000015e-05, 5.913899999999972e-05, 5.913899999999972e-05, 5.915299999999929e-05, 5.9151999999999816e-05, 5.9165999999999386e-05, 5.91810000000019e-05, 5.912500000000015e-05, 5.915299999999929e-05, 5.9138000000000246e-05, 5.91810000000019e-05, 5.911100000000058e-05, 5.916699999999886e-05, 5.912500000000015e-05, 5.9207999999998095e-05, 5.915299999999929e-05, 5.913899999999972e-05, 5.913899999999972e-05, 5.9112000000000053e-05, 5.915299999999929e-05, 5.915299999999929e-05, 5.913899999999972e-05, 5.915299999999929e-05, 5.9151999999999816e-05, 5.9151999999999816e-05, 5.915299999999929e-05]</msg>
<status status="PASS" starttime="20201029 18:17:59.263" endtime="20201029 18:17:59.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.259" endtime="20201029 18:17:59.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.911" endtime="20201029 18:17:59.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:58.888" endtime="20201029 18:17:59.267"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:59.269" endtime="20201029 18:17:59.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.268" endtime="20201029 18:17:59.289"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.298" endtime="20201029 18:17:59.314"></status>
</kw>
<msg timestamp="20201029 18:17:59.315" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.296" endtime="20201029 18:17:59.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.317" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.316" endtime="20201029 18:17:59.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.318" endtime="20201029 18:17:59.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.293" endtime="20201029 18:17:59.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.291" endtime="20201029 18:17:59.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.329" endtime="20201029 18:17:59.615"></status>
</kw>
<msg timestamp="20201029 18:17:59.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017158903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017223972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.327" endtime="20201029 18:17:59.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017158903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017223972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.619" endtime="20201029 18:17:59.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.627" endtime="20201029 18:17:59.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.324" endtime="20201029 18:17:59.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.323" endtime="20201029 18:17:59.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:17:59.634" level="INFO">${PHILIP_RES} = [{'diff': 6.506900000000093e-05}, {'diff': 6.484699999999982e-05}, {'diff': 6.473699999999874e-05}, {'diff': 6.479100000000154e-05}, {'diff': 6.480599999999712e-05}, {'diff': 6.477799999999798e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:17:59.631" endtime="20201029 18:17:59.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:59.638" level="INFO">${RESULT} = {'diff': [6.506900000000093e-05, 6.484699999999982e-05, 6.473699999999874e-05, 6.479100000000154e-05, 6.480599999999712e-05, 6.477799999999798e-05, 6.480500000000111e-05, 6.482000000000016e-05, 6.4749...</msg>
<status status="PASS" starttime="20201029 18:17:59.635" endtime="20201029 18:17:59.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.643" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 18:17:59.642" endtime="20201029 18:17:59.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.645" level="INFO">VALUE: [6.506900000000093e-05, 6.484699999999982e-05, 6.473699999999874e-05, 6.479100000000154e-05, 6.480599999999712e-05, 6.477799999999798e-05, 6.480500000000111e-05, 6.482000000000016e-05, 6.474999999999884e-05, 6.480499999999764e-05, 6.483399999999973e-05, 6.479200000000102e-05, 6.479099999999807e-05, 6.481900000000068e-05, 6.479200000000102e-05, 6.480500000000111e-05, 6.476400000000188e-05, 6.480599999999712e-05, 6.480500000000111e-05, 6.483300000000025e-05, 6.480600000000059e-05, 6.479100000000154e-05, 6.486099999999939e-05, 6.473599999999927e-05, 6.481900000000068e-05, 6.477799999999798e-05, 6.482000000000016e-05, 6.483300000000025e-05, 6.480500000000111e-05, 6.476400000000188e-05, 6.480599999999712e-05, 6.483300000000025e-05, 6.476400000000188e-05, 6.481999999999669e-05, 6.480500000000111e-05, 6.480499999999764e-05, 6.480600000000059e-05, 6.480500000000111e-05, 6.483399999999973e-05, 6.473599999999927e-05, 6.479100000000154e-05, 6.480500000000111e-05, 6.480600000000059e-05, 6.486099999999939e-05, 6.479100000000154e-05, 6.480600000000059e-05, 6.487499999999896e-05, 6.481900000000068e-05, 6.479199999999755e-05, 6.487500000000243e-05]</msg>
<status status="PASS" starttime="20201029 18:17:59.644" endtime="20201029 18:17:59.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.639" endtime="20201029 18:17:59.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.290" endtime="20201029 18:17:59.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.267" endtime="20201029 18:17:59.654"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:59.657" endtime="20201029 18:17:59.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.655" endtime="20201029 18:17:59.677"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.685" endtime="20201029 18:17:59.704"></status>
</kw>
<msg timestamp="20201029 18:17:59.704" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.684" endtime="20201029 18:17:59.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:59.707" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:59.706" endtime="20201029 18:17:59.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.708" endtime="20201029 18:17:59.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.681" endtime="20201029 18:17:59.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.679" endtime="20201029 18:17:59.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:59.718" endtime="20201029 18:18:00.003"></status>
</kw>
<msg timestamp="20201029 18:18:00.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017433361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017504306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:59.716" endtime="20201029 18:18:00.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017433361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017504306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.008" endtime="20201029 18:18:00.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.016" endtime="20201029 18:18:00.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.713" endtime="20201029 18:18:00.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.711" endtime="20201029 18:18:00.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:00.022" level="INFO">${PHILIP_RES} = [{'diff': 7.094499999999934e-05}, {'diff': 7.068000000000005e-05}, {'diff': 7.066699999999995e-05}, {'diff': 7.068099999999952e-05}, {'diff': 7.068099999999952e-05}, {'diff': 7.066600000000048e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:00.019" endtime="20201029 18:18:00.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:00.027" level="INFO">${RESULT} = {'diff': [7.094499999999934e-05, 7.068000000000005e-05, 7.066699999999995e-05, 7.068099999999952e-05, 7.068099999999952e-05, 7.066600000000048e-05, 7.069399999999962e-05, 7.068099999999952e-05, 7.0666...</msg>
<status status="PASS" starttime="20201029 18:18:00.023" endtime="20201029 18:18:00.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.032" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:00.031" endtime="20201029 18:18:00.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.034" level="INFO">VALUE: [7.094499999999934e-05, 7.068000000000005e-05, 7.066699999999995e-05, 7.068099999999952e-05, 7.068099999999952e-05, 7.066600000000048e-05, 7.069399999999962e-05, 7.068099999999952e-05, 7.066699999999995e-05, 7.068000000000005e-05, 7.066600000000048e-05, 7.069499999999909e-05, 7.065300000000038e-05, 7.072199999999876e-05, 7.068000000000005e-05, 7.061100000000167e-05, 7.066699999999995e-05, 7.068099999999952e-05, 7.065200000000091e-05, 7.069399999999962e-05, 7.068099999999952e-05, 7.066699999999995e-05, 7.068099999999952e-05, 7.068000000000005e-05, 7.069399999999962e-05, 7.070899999999866e-05, 7.063900000000081e-05, 7.066600000000048e-05, 7.069399999999962e-05, 7.069499999999909e-05, 7.061100000000167e-05, 7.068099999999952e-05, 7.069399999999962e-05, 7.068000000000005e-05, 7.063900000000081e-05, 7.068000000000005e-05, 7.066600000000048e-05, 7.062500000000124e-05, 7.063900000000081e-05, 7.068099999999952e-05, 7.068000000000005e-05, 7.066600000000048e-05, 7.070899999999866e-05, 7.068099999999952e-05, 7.069399999999962e-05, 7.068000000000005e-05, 7.068000000000005e-05, 7.068099999999952e-05, 7.068099999999952e-05, 7.066600000000048e-05]</msg>
<status status="PASS" starttime="20201029 18:18:00.033" endtime="20201029 18:18:00.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.028" endtime="20201029 18:18:00.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.677" endtime="20201029 18:18:00.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:59.655" endtime="20201029 18:18:00.036"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:00.039" endtime="20201029 18:18:00.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.037" endtime="20201029 18:18:00.059"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.067" endtime="20201029 18:18:00.085"></status>
</kw>
<msg timestamp="20201029 18:18:00.086" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.065" endtime="20201029 18:18:00.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.088" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.087" endtime="20201029 18:18:00.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.089" endtime="20201029 18:18:00.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.063" endtime="20201029 18:18:00.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.061" endtime="20201029 18:18:00.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.099" endtime="20201029 18:18:00.385"></status>
</kw>
<msg timestamp="20201029 18:18:00.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016985111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017062167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.097" endtime="20201029 18:18:00.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016985111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017062167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.389" endtime="20201029 18:18:00.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.397" endtime="20201029 18:18:00.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.094" endtime="20201029 18:18:00.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.092" endtime="20201029 18:18:00.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:00.404" level="INFO">${PHILIP_RES} = [{'diff': 7.705599999999896e-05}, {'diff': 7.677799999999957e-05}, {'diff': 7.677799999999957e-05}, {'diff': 7.677799999999957e-05}, {'diff': 7.677799999999957e-05}, {'diff': 7.677800000000304e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:00.401" endtime="20201029 18:18:00.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:00.408" level="INFO">${RESULT} = {'diff': [7.705599999999896e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.677800000000304e-05, 7.673600000000086e-05, 7.677799999999957e-05, 7.6804...</msg>
<status status="PASS" starttime="20201029 18:18:00.405" endtime="20201029 18:18:00.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.413" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:00.412" endtime="20201029 18:18:00.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.415" level="INFO">VALUE: [7.705599999999896e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.677800000000304e-05, 7.673600000000086e-05, 7.677799999999957e-05, 7.680499999999923e-05, 7.679099999999967e-05, 7.67770000000001e-05, 7.676300000000053e-05, 7.677799999999957e-05, 7.6764e-05, 7.677799999999957e-05, 7.680599999999871e-05, 7.679199999999914e-05, 7.677799999999957e-05, 7.679199999999914e-05, 7.670799999999825e-05, 7.680599999999871e-05, 7.677799999999957e-05, 7.679200000000261e-05, 7.670800000000172e-05, 7.67770000000001e-05, 7.679099999999967e-05, 7.68189999999988e-05, 7.6764e-05, 7.6764e-05, 7.673599999999739e-05, 7.681900000000227e-05, 7.677800000000304e-05, 7.679200000000261e-05, 7.679199999999914e-05, 7.677799999999957e-05, 7.679199999999914e-05, 7.677799999999957e-05, 7.683400000000132e-05, 7.683400000000132e-05, 7.679099999999967e-05, 7.67770000000001e-05, 7.68189999999988e-05, 7.680499999999923e-05, 7.679099999999967e-05, 7.68189999999988e-05, 7.6764e-05, 7.673600000000086e-05, 7.674999999999696e-05, 7.677799999999957e-05, 7.679200000000261e-05]</msg>
<status status="PASS" starttime="20201029 18:18:00.414" endtime="20201029 18:18:00.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.409" endtime="20201029 18:18:00.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.059" endtime="20201029 18:18:00.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.037" endtime="20201029 18:18:00.417"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:00.420" endtime="20201029 18:18:00.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.418" endtime="20201029 18:18:00.440"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.448" endtime="20201029 18:18:00.467"></status>
</kw>
<msg timestamp="20201029 18:18:00.467" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.446" endtime="20201029 18:18:00.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.470" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.468" endtime="20201029 18:18:00.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.471" endtime="20201029 18:18:00.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.444" endtime="20201029 18:18:00.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.442" endtime="20201029 18:18:00.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.481" endtime="20201029 18:18:00.767"></status>
</kw>
<msg timestamp="20201029 18:18:00.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017206111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017289472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.479" endtime="20201029 18:18:00.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017206111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017289472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:00.772" endtime="20201029 18:18:00.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.780" endtime="20201029 18:18:00.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.477" endtime="20201029 18:18:00.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.475" endtime="20201029 18:18:00.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:00.786" level="INFO">${PHILIP_RES} = [{'diff': 8.336100000000055e-05}, {'diff': 8.308400000000063e-05}, {'diff': 8.309700000000073e-05}, {'diff': 8.308300000000116e-05}, {'diff': 8.306900000000159e-05}, {'diff': 8.309700000000073e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:00.783" endtime="20201029 18:18:00.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:00.791" level="INFO">${RESULT} = {'diff': [8.336100000000055e-05, 8.308400000000063e-05, 8.309700000000073e-05, 8.308300000000116e-05, 8.306900000000159e-05, 8.309700000000073e-05, 8.304200000000192e-05, 8.309700000000073e-05, 8.3098...</msg>
<status status="PASS" starttime="20201029 18:18:00.787" endtime="20201029 18:18:00.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.795" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:00.794" endtime="20201029 18:18:00.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.798" level="INFO">VALUE: [8.336100000000055e-05, 8.308400000000063e-05, 8.309700000000073e-05, 8.308300000000116e-05, 8.306900000000159e-05, 8.309700000000073e-05, 8.304200000000192e-05, 8.309700000000073e-05, 8.30980000000002e-05, 8.31110000000003e-05, 8.305600000000149e-05, 8.31110000000003e-05, 8.31659999999991e-05, 8.31110000000003e-05, 8.309700000000073e-05, 8.31110000000003e-05, 8.309699999999726e-05, 8.311199999999977e-05, 8.311099999999683e-05, 8.308399999999716e-05, 8.31110000000003e-05, 8.308299999999769e-05, 8.304099999999898e-05, 8.315300000000247e-05, 8.308400000000063e-05, 8.31110000000003e-05, 8.302799999999888e-05, 8.309700000000073e-05, 8.31110000000003e-05, 8.3152999999999e-05, 8.309700000000073e-05, 8.308300000000116e-05, 8.309700000000073e-05, 8.304200000000192e-05, 8.31110000000003e-05, 8.308400000000063e-05, 8.309700000000073e-05, 8.309700000000073e-05, 8.309700000000073e-05, 8.31110000000003e-05, 8.309700000000073e-05, 8.309700000000073e-05, 8.313899999999944e-05, 8.31110000000003e-05, 8.307000000000106e-05, 8.309699999999726e-05, 8.302800000000235e-05, 8.311099999999683e-05, 8.309699999999726e-05, 8.309699999999726e-05]</msg>
<status status="PASS" starttime="20201029 18:18:00.796" endtime="20201029 18:18:00.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.791" endtime="20201029 18:18:00.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.440" endtime="20201029 18:18:00.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.418" endtime="20201029 18:18:00.800"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:00.803" endtime="20201029 18:18:00.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.801" endtime="20201029 18:18:00.823"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.831" endtime="20201029 18:18:00.851"></status>
</kw>
<msg timestamp="20201029 18:18:00.851" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.830" endtime="20201029 18:18:00.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:00.854" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:00.852" endtime="20201029 18:18:00.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.855" endtime="20201029 18:18:00.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.827" endtime="20201029 18:18:00.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.825" endtime="20201029 18:18:00.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:00.864" endtime="20201029 18:18:01.150"></status>
</kw>
<msg timestamp="20201029 18:18:01.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01711375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017203653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:00.862" endtime="20201029 18:18:01.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01711375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017203653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:01.155" endtime="20201029 18:18:01.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.163" endtime="20201029 18:18:01.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.860" endtime="20201029 18:18:01.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.858" endtime="20201029 18:18:01.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:01.169" level="INFO">${PHILIP_RES} = [{'diff': 8.990299999999882e-05}, {'diff': 8.96670000000016e-05}, {'diff': 8.966599999999866e-05}, {'diff': 8.9638999999999e-05}, {'diff': 8.96670000000016e-05}, {'diff': 8.970899999999685e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 18:18:01.166" endtime="20201029 18:18:01.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:01.174" level="INFO">${RESULT} = {'diff': [8.990299999999882e-05, 8.96670000000016e-05, 8.966599999999866e-05, 8.9638999999999e-05, 8.96670000000016e-05, 8.970899999999685e-05, 8.965299999999857e-05, 8.96519999999991e-05, 8.966700000...</msg>
<status status="PASS" starttime="20201029 18:18:01.170" endtime="20201029 18:18:01.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.179" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:01.178" endtime="20201029 18:18:01.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.181" level="INFO">VALUE: [8.990299999999882e-05, 8.96670000000016e-05, 8.966599999999866e-05, 8.9638999999999e-05, 8.96670000000016e-05, 8.970899999999685e-05, 8.965299999999857e-05, 8.96519999999991e-05, 8.96670000000016e-05, 8.965299999999857e-05, 8.9638999999999e-05, 8.966599999999866e-05, 8.965299999999857e-05, 8.966699999999814e-05, 8.965300000000204e-05, 8.963799999999952e-05, 8.966699999999814e-05, 8.96670000000016e-05, 8.9638999999999e-05, 8.963800000000299e-05, 8.966699999999814e-05, 8.968100000000118e-05, 8.970900000000032e-05, 8.96519999999991e-05, 8.965300000000204e-05, 8.968099999999771e-05, 8.974999999999955e-05, 8.963799999999952e-05, 8.958400000000019e-05, 8.965300000000204e-05, 8.96670000000016e-05, 8.966599999999866e-05, 8.965300000000204e-05, 8.965299999999857e-05, 8.966699999999814e-05, 8.966600000000213e-05, 8.966699999999814e-05, 8.965300000000204e-05, 8.9638999999999e-05, 8.963900000000247e-05, 8.96800000000017e-05, 8.965300000000204e-05, 8.965299999999857e-05, 8.966599999999866e-05, 8.965300000000204e-05, 8.958400000000019e-05, 8.965300000000204e-05, 8.96519999999991e-05, 8.96939999999978e-05, 8.969500000000075e-05]</msg>
<status status="PASS" starttime="20201029 18:18:01.180" endtime="20201029 18:18:01.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.175" endtime="20201029 18:18:01.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.823" endtime="20201029 18:18:01.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:00.801" endtime="20201029 18:18:01.183"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:01.186" endtime="20201029 18:18:01.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.184" endtime="20201029 18:18:01.206"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.218" endtime="20201029 18:18:01.239"></status>
</kw>
<msg timestamp="20201029 18:18:01.239" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.216" endtime="20201029 18:18:01.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.242" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.240" endtime="20201029 18:18:01.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.243" endtime="20201029 18:18:01.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.212" endtime="20201029 18:18:01.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.209" endtime="20201029 18:18:01.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.255" endtime="20201029 18:18:01.542"></status>
</kw>
<msg timestamp="20201029 18:18:01.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.253" endtime="20201029 18:18:01.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.546" endtime="20201029 18:18:01.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.555" endtime="20201029 18:18:01.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.250" endtime="20201029 18:18:01.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.247" endtime="20201029 18:18:01.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:01.562" level="INFO">${PHILIP_RES} = [{'diff': 9.66799999999983e-05}, {'diff': 9.641599999999848e-05}, {'diff': 9.644399999999761e-05}, {'diff': 9.637499999999924e-05}, {'diff': 9.643100000000099e-05}, {'diff': 9.641700000000142e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:01.559" endtime="20201029 18:18:01.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:01.567" level="INFO">${RESULT} = {'diff': [9.66799999999983e-05, 9.641599999999848e-05, 9.644399999999761e-05, 9.637499999999924e-05, 9.643100000000099e-05, 9.641700000000142e-05, 9.649999999999936e-05, 9.643000000000151e-05, 9.64439...</msg>
<status status="PASS" starttime="20201029 18:18:01.563" endtime="20201029 18:18:01.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.571" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:01.570" endtime="20201029 18:18:01.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.573" level="INFO">VALUE: [9.66799999999983e-05, 9.641599999999848e-05, 9.644399999999761e-05, 9.637499999999924e-05, 9.643100000000099e-05, 9.641700000000142e-05, 9.649999999999936e-05, 9.643000000000151e-05, 9.644399999999761e-05, 9.643099999999752e-05, 9.643100000000099e-05, 9.63470000000001e-05, 9.644500000000056e-05, 9.644400000000108e-05, 9.641600000000194e-05, 9.644400000000108e-05, 9.643000000000151e-05, 9.643099999999752e-05, 9.641699999999795e-05, 9.641700000000142e-05, 9.643100000000099e-05, 9.643000000000151e-05, 9.644400000000108e-05, 9.642999999999805e-05, 9.642999999999805e-05, 9.643100000000099e-05, 9.645900000000013e-05, 9.645900000000013e-05, 9.644500000000056e-05, 9.643000000000151e-05, 9.644400000000108e-05, 9.644400000000108e-05, 9.64859999999998e-05, 9.63470000000001e-05, 9.643099999999752e-05, 9.644400000000108e-05, 9.640300000000185e-05, 9.643000000000151e-05, 9.645800000000065e-05, 9.645800000000065e-05, 9.643099999999752e-05, 9.643099999999752e-05, 9.644500000000056e-05, 9.643000000000151e-05, 9.640300000000185e-05, 9.643000000000151e-05, 9.640200000000237e-05, 9.643100000000099e-05, 9.644500000000056e-05, 9.643100000000099e-05]</msg>
<status status="PASS" starttime="20201029 18:18:01.572" endtime="20201029 18:18:01.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.567" endtime="20201029 18:18:01.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.207" endtime="20201029 18:18:01.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.184" endtime="20201029 18:18:01.575"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:01.578" endtime="20201029 18:18:01.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.576" endtime="20201029 18:18:01.598"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.606" endtime="20201029 18:18:01.628"></status>
</kw>
<msg timestamp="20201029 18:18:01.628" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.605" endtime="20201029 18:18:01.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.631" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.629" endtime="20201029 18:18:01.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.632" endtime="20201029 18:18:01.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.602" endtime="20201029 18:18:01.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.600" endtime="20201029 18:18:01.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.642" endtime="20201029 18:18:01.928"></status>
</kw>
<msg timestamp="20201029 18:18:01.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017252583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017356292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.640" endtime="20201029 18:18:01.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017252583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017356292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:01.932" endtime="20201029 18:18:01.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.940" endtime="20201029 18:18:01.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.638" endtime="20201029 18:18:01.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.636" endtime="20201029 18:18:01.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:01.946" level="INFO">${PHILIP_RES} = [{'diff': 0.00010370900000000044}, {'diff': 0.00010343100000000105}, {'diff': 0.00010343000000000158}, {'diff': 0.00010345800000000072}, {'diff': 0.00010341699999999801}, {'diff': 0.000103431000000001...</msg>
<status status="PASS" starttime="20201029 18:18:01.943" endtime="20201029 18:18:01.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:01.950" level="INFO">${RESULT} = {'diff': [0.00010370900000000044, 0.00010343100000000105, 0.00010343000000000158, 0.00010345800000000072, 0.00010341699999999801, 0.00010343100000000105, 0.00010343000000000158, 0.00010343000000000158...</msg>
<status status="PASS" starttime="20201029 18:18:01.947" endtime="20201029 18:18:01.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.955" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:01.954" endtime="20201029 18:18:01.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:01.957" level="INFO">VALUE: [0.00010370900000000044, 0.00010343100000000105, 0.00010343000000000158, 0.00010345800000000072, 0.00010341699999999801, 0.00010343100000000105, 0.00010343000000000158, 0.00010343000000000158, 0.00010344400000000115, 0.00010343100000000105, 0.00010343100000000105, 0.00010343000000000158, 0.00010342999999999811, 0.00010337500000000277, 0.00010343099999999758, 0.00010342999999999811, 0.00010343100000000105, 0.00010341699999999801, 0.00010343100000000105, 0.00010345900000000019, 0.000103416000000002, 0.00010344400000000115, 0.00010343100000000105, 0.00010344500000000062, 0.00010347200000000029, 0.00010344400000000115, 0.00010343100000000105, 0.00010349999999999943, 0.00010341699999999801, 0.00010342999999999811, 0.00010341699999999801, 0.00010341699999999801, 0.00010343100000000105, 0.00010338899999999887, 0.00010343000000000158, 0.00010341700000000148, 0.00010344500000000062, 0.00010343100000000105, 0.00010344400000000115, 0.00010341700000000148, 0.00010343100000000105, 0.00010343100000000105, 0.00010342999999999811, 0.00010344399999999768, 0.00010341699999999801, 0.00010344499999999715, 0.00010342999999999811, 0.00010341599999999854, 0.0001033749999999993, 0.00010344500000000062]</msg>
<status status="PASS" starttime="20201029 18:18:01.956" endtime="20201029 18:18:01.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.951" endtime="20201029 18:18:01.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.598" endtime="20201029 18:18:01.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.576" endtime="20201029 18:18:01.960"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:01.963" endtime="20201029 18:18:01.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.961" endtime="20201029 18:18:01.982"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:01.991" endtime="20201029 18:18:02.011"></status>
</kw>
<msg timestamp="20201029 18:18:02.012" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:01.989" endtime="20201029 18:18:02.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.014" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.013" endtime="20201029 18:18:02.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.016" endtime="20201029 18:18:02.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.987" endtime="20201029 18:18:02.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.985" endtime="20201029 18:18:02.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.025" endtime="20201029 18:18:02.311"></status>
</kw>
<msg timestamp="20201029 18:18:02.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017038028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017148944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:02.023" endtime="20201029 18:18:02.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017038028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017148944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:02.315" endtime="20201029 18:18:02.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.323" endtime="20201029 18:18:02.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.021" endtime="20201029 18:18:02.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.019" endtime="20201029 18:18:02.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:02.330" level="INFO">${PHILIP_RES} = [{'diff': 0.0001109159999999991}, {'diff': 0.00011066699999999832}, {'diff': 0.00011063899999999918}, {'diff': 0.00011066699999999832}, {'diff': 0.00011066599999999885}, {'diff': 0.0001106670000000017...</msg>
<status status="PASS" starttime="20201029 18:18:02.327" endtime="20201029 18:18:02.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:02.335" level="INFO">${RESULT} = {'diff': [0.0001109159999999991, 0.00011066699999999832, 0.00011063899999999918, 0.00011066699999999832, 0.00011066599999999885, 0.00011066700000000179, 0.00011065300000000222, 0.00011065299999999875,...</msg>
<status status="PASS" starttime="20201029 18:18:02.331" endtime="20201029 18:18:02.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.339" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:02.338" endtime="20201029 18:18:02.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.342" level="INFO">VALUE: [0.0001109159999999991, 0.00011066699999999832, 0.00011063899999999918, 0.00011066699999999832, 0.00011066599999999885, 0.00011066700000000179, 0.00011065300000000222, 0.00011065299999999875, 0.00011065299999999875, 0.00011065300000000222, 0.00011065300000000222, 0.00011065299999999875, 0.00011065299999999875, 0.00011066700000000179, 0.00011065299999999875, 0.00011062499999999961, 0.00011066700000000179, 0.00011065300000000222, 0.00011065299999999875, 0.00011073600000000017, 0.00011062499999999961, 0.00011063899999999918, 0.00011066699999999832, 0.00011063899999999918, 0.00011065300000000222, 0.00011066599999999885, 0.00011063899999999918, 0.00011066599999999885, 0.00011066700000000179, 0.00011065199999999928, 0.00011065299999999875, 0.00011065199999999928, 0.00011059700000000047, 0.00011066599999999885, 0.00011068100000000136, 0.00011065300000000222, 0.00011065299999999875, 0.00011065299999999875, 0.00011066700000000179, 0.00011066700000000179, 0.00011063899999999918, 0.00011062499999999961, 0.00011065300000000222, 0.00011063900000000265, 0.00011063899999999918, 0.00011070799999999756, 0.00011065300000000222, 0.00011066700000000179, 0.00011067999999999842, 0.00011065299999999875]</msg>
<status status="PASS" starttime="20201029 18:18:02.340" endtime="20201029 18:18:02.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.336" endtime="20201029 18:18:02.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.983" endtime="20201029 18:18:02.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:01.960" endtime="20201029 18:18:02.344"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:02.346" endtime="20201029 18:18:02.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.345" endtime="20201029 18:18:02.366"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.374" endtime="20201029 18:18:02.397"></status>
</kw>
<msg timestamp="20201029 18:18:02.397" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.373" endtime="20201029 18:18:02.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.400" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.398" endtime="20201029 18:18:02.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.401" endtime="20201029 18:18:02.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.370" endtime="20201029 18:18:02.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.368" endtime="20201029 18:18:02.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.410" endtime="20201029 18:18:02.697"></status>
</kw>
<msg timestamp="20201029 18:18:02.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017070431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017188847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:02.409" endtime="20201029 18:18:02.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017070431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017188847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:02.701" endtime="20201029 18:18:02.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.709" endtime="20201029 18:18:02.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.406" endtime="20201029 18:18:02.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.404" endtime="20201029 18:18:02.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:02.716" level="INFO">${PHILIP_RES} = [{'diff': 0.00011841599999999966}, {'diff': 0.00011812500000000017}, {'diff': 0.00011812500000000017}, {'diff': 0.00011809800000000051}, {'diff': 0.00011802800000000266}, {'diff': 0.000118013999999999...</msg>
<status status="PASS" starttime="20201029 18:18:02.712" endtime="20201029 18:18:02.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:02.720" level="INFO">${RESULT} = {'diff': [0.00011841599999999966, 0.00011812500000000017, 0.00011812500000000017, 0.00011809800000000051, 0.00011802800000000266, 0.00011801399999999962, 0.00011809800000000051, 0.00011802799999999919...</msg>
<status status="PASS" starttime="20201029 18:18:02.717" endtime="20201029 18:18:02.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.724" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:02.723" endtime="20201029 18:18:02.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.727" level="INFO">VALUE: [0.00011841599999999966, 0.00011812500000000017, 0.00011812500000000017, 0.00011809800000000051, 0.00011802800000000266, 0.00011801399999999962, 0.00011809800000000051, 0.00011802799999999919, 0.00011811200000000008, 0.00011808400000000094, 0.00011811200000000008, 0.00011808399999999747, 0.0001181110000000006, 0.0001181110000000006, 0.00011812500000000017, 0.0001181110000000006, 0.00011809800000000051, 0.0001181110000000006, 0.0001181110000000006, 0.00011812500000000017, 0.0001181110000000006, 0.00011811200000000008, 0.00011809699999999757, 0.00011811099999999713, 0.0001181110000000006, 0.00011807000000000137, 0.00011812500000000017, 0.0001181110000000006, 0.0001181110000000006, 0.00011812500000000017, 0.00011808399999999747, 0.0001181110000000006, 0.00011812500000000017, 0.0001181110000000006, 0.00011809699999999757, 0.0001181110000000006, 0.0001181110000000006, 0.0001181110000000006, 0.00011811099999999713, 0.0001181110000000006, 0.0001181110000000006, 0.00011812500000000017, 0.00011809699999999757, 0.0001181110000000006, 0.0001181110000000006, 0.0001181110000000006, 0.00011809699999999757, 0.0001181110000000006, 0.00011812500000000017, 0.00011809699999999757]</msg>
<status status="PASS" starttime="20201029 18:18:02.725" endtime="20201029 18:18:02.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.721" endtime="20201029 18:18:02.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.367" endtime="20201029 18:18:02.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.344" endtime="20201029 18:18:02.729"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:02.731" endtime="20201029 18:18:02.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.730" endtime="20201029 18:18:02.751"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.759" endtime="20201029 18:18:02.782"></status>
</kw>
<msg timestamp="20201029 18:18:02.782" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.758" endtime="20201029 18:18:02.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:02.785" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:02.783" endtime="20201029 18:18:02.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.786" endtime="20201029 18:18:02.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.755" endtime="20201029 18:18:02.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.753" endtime="20201029 18:18:02.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:02.796" endtime="20201029 18:18:03.082"></status>
</kw>
<msg timestamp="20201029 18:18:03.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017160181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017286208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:02.795" endtime="20201029 18:18:03.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017160181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017286208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.086" endtime="20201029 18:18:03.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.094" endtime="20201029 18:18:03.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.792" endtime="20201029 18:18:03.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.790" endtime="20201029 18:18:03.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:03.100" level="INFO">${PHILIP_RES} = [{'diff': 0.00012602700000000078}, {'diff': 0.00012579199999999957}, {'diff': 0.0001257360000000013}, {'diff': 0.00012580500000000314}, {'diff': 0.0001257360000000013}, {'diff': 0.0001258060000000026}...</msg>
<status status="PASS" starttime="20201029 18:18:03.097" endtime="20201029 18:18:03.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:03.105" level="INFO">${RESULT} = {'diff': [0.00012602700000000078, 0.00012579199999999957, 0.0001257360000000013, 0.00012580500000000314, 0.0001257360000000013, 0.0001258060000000026, 0.000125778, 0.000125778, 0.00012580599999999914,...</msg>
<status status="PASS" starttime="20201029 18:18:03.101" endtime="20201029 18:18:03.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.109" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:03.108" endtime="20201029 18:18:03.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.111" level="INFO">VALUE: [0.00012602700000000078, 0.00012579199999999957, 0.0001257360000000013, 0.00012580500000000314, 0.0001257360000000013, 0.0001258060000000026, 0.000125778, 0.000125778, 0.00012580599999999914, 0.00012579200000000304, 0.00012577700000000053, 0.00012576400000000043, 0.000125778, 0.0001257910000000001, 0.0001258199999999987, 0.0001257910000000001, 0.0001257910000000001, 0.00012579199999999957, 0.00012576400000000043, 0.00012576400000000043, 0.00012579199999999957, 0.000125778, 0.000125778, 0.00012572200000000172, 0.0001257499999999974, 0.000125778, 0.00012577700000000053, 0.000125778, 0.0001258190000000027, 0.00012576400000000043, 0.00012576399999999696, 0.00012579199999999957, 0.00012579200000000304, 0.000125778, 0.000125778, 0.00012580599999999914, 0.00012584699999999838, 0.000125778, 0.00012579200000000304, 0.0001257360000000013, 0.0001258060000000026, 0.00012580599999999914, 0.0001258329999999988, 0.0001257910000000001, 0.00012579199999999957, 0.00012579199999999957, 0.00012584699999999838, 0.00012579199999999957, 0.00012579199999999957, 0.00012577700000000053]</msg>
<status status="PASS" starttime="20201029 18:18:03.110" endtime="20201029 18:18:03.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.105" endtime="20201029 18:18:03.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.752" endtime="20201029 18:18:03.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:02.729" endtime="20201029 18:18:03.114"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:03.117" endtime="20201029 18:18:03.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.115" endtime="20201029 18:18:03.137"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.145" endtime="20201029 18:18:03.168"></status>
</kw>
<msg timestamp="20201029 18:18:03.169" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.143" endtime="20201029 18:18:03.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.171" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.170" endtime="20201029 18:18:03.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.172" endtime="20201029 18:18:03.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.141" endtime="20201029 18:18:03.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.139" endtime="20201029 18:18:03.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.182" endtime="20201029 18:18:03.467"></status>
</kw>
<msg timestamp="20201029 18:18:03.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017083194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017217153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.180" endtime="20201029 18:18:03.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017083194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017217153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.471" endtime="20201029 18:18:03.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.479" endtime="20201029 18:18:03.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.178" endtime="20201029 18:18:03.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.176" endtime="20201029 18:18:03.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:03.486" level="INFO">${PHILIP_RES} = [{'diff': 0.00013395899999999947}, {'diff': 0.00013366600000000103}, {'diff': 0.00013369499999999965}, {'diff': 0.00013369499999999965}, {'diff': 0.00013372199999999931}, {'diff': 0.000133667000000000...</msg>
<status status="PASS" starttime="20201029 18:18:03.482" endtime="20201029 18:18:03.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:03.490" level="INFO">${RESULT} = {'diff': [0.00013395899999999947, 0.00013366600000000103, 0.00013369499999999965, 0.00013369499999999965, 0.00013372199999999931, 0.0001336670000000005, 0.0001336800000000006, 0.00013369499999999965, ...</msg>
<status status="PASS" starttime="20201029 18:18:03.487" endtime="20201029 18:18:03.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.495" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:03.494" endtime="20201029 18:18:03.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.497" level="INFO">VALUE: [0.00013395899999999947, 0.00013366600000000103, 0.00013369499999999965, 0.00013369499999999965, 0.00013372199999999931, 0.0001336670000000005, 0.0001336800000000006, 0.00013369499999999965, 0.00013369400000000017, 0.00013372199999999931, 0.0001337080000000032, 0.0001337640000000015, 0.00013368100000000008, 0.00013369400000000017, 0.0001336389999999979, 0.00013370799999999974, 0.00013366599999999756, 0.00013368100000000008, 0.00013369400000000017, 0.00013369499999999965, 0.00013372199999999931, 0.0001336800000000006, 0.00013370899999999922, 0.00013370799999999974, 0.00013369499999999965, 0.0001336800000000006, 0.00013372199999999931, 0.00013365299999999747, 0.00013366600000000103, 0.0001336670000000005, 0.00013370799999999974, 0.00013368100000000008, 0.0001336800000000006, 0.00013369400000000017, 0.00013368100000000008, 0.00013366599999999756, 0.00013369499999999965, 0.00013372200000000278, 0.0001336670000000005, 0.00013368100000000008, 0.00013361099999999876, 0.00013369499999999965, 0.0001336800000000006, 0.00013368100000000008, 0.00013368100000000008, 0.00013369400000000017, 0.0001336670000000005, 0.0001336800000000006, 0.0001337640000000015, 0.0001337080000000032]</msg>
<status status="PASS" starttime="20201029 18:18:03.496" endtime="20201029 18:18:03.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.491" endtime="20201029 18:18:03.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.137" endtime="20201029 18:18:03.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.115" endtime="20201029 18:18:03.499"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:03.502" endtime="20201029 18:18:03.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.500" endtime="20201029 18:18:03.522"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.530" endtime="20201029 18:18:03.554"></status>
</kw>
<msg timestamp="20201029 18:18:03.554" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.529" endtime="20201029 18:18:03.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.557" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.555" endtime="20201029 18:18:03.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.558" endtime="20201029 18:18:03.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.526" endtime="20201029 18:18:03.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.524" endtime="20201029 18:18:03.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.567" endtime="20201029 18:18:03.856"></status>
</kw>
<msg timestamp="20201029 18:18:03.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01709725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017239319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:03.566" endtime="20201029 18:18:03.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01709725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017239319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:03.860" endtime="20201029 18:18:03.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.868" endtime="20201029 18:18:03.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.563" endtime="20201029 18:18:03.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.561" endtime="20201029 18:18:03.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:03.874" level="INFO">${PHILIP_RES} = [{'diff': 0.00014206899999999814}, {'diff': 0.0001418189999999979}, {'diff': 0.0001418340000000004}, {'diff': 0.0001418470000000005}, {'diff': 0.00014174999999999952}, {'diff': 0.00014174999999999952}...</msg>
<status status="PASS" starttime="20201029 18:18:03.871" endtime="20201029 18:18:03.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:03.878" level="INFO">${RESULT} = {'diff': [0.00014206899999999814, 0.0001418189999999979, 0.0001418340000000004, 0.0001418470000000005, 0.00014174999999999952, 0.00014174999999999952, 0.0001417920000000017, 0.00014181900000000136, 0....</msg>
<status status="PASS" starttime="20201029 18:18:03.875" endtime="20201029 18:18:03.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.882" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:03.881" endtime="20201029 18:18:03.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.884" level="INFO">VALUE: [0.00014206899999999814, 0.0001418189999999979, 0.0001418340000000004, 0.0001418470000000005, 0.00014174999999999952, 0.00014174999999999952, 0.0001417920000000017, 0.00014181900000000136, 0.0001418059999999978, 0.00014180600000000126, 0.0001418050000000018, 0.00014182000000000083, 0.00014186100000000007, 0.00014181900000000136, 0.00014182000000000083, 0.00014182000000000083, 0.0001418189999999979, 0.00014175000000000298, 0.0001418889999999992, 0.0001418050000000018, 0.0001418059999999978, 0.00014179199999999823, 0.00014181900000000136, 0.00014180600000000126, 0.0001418059999999978, 0.00014190299999999878, 0.00014176400000000255, 0.00014182000000000083, 0.0001418189999999979, 0.0001417920000000017, 0.00014182000000000083, 0.00014181900000000136, 0.00014187499999999964, 0.00014179199999999823, 0.0001418050000000018, 0.00014181900000000136, 0.00014179199999999823, 0.00014177700000000265, 0.00014180600000000126, 0.00014179199999999823, 0.00014180499999999832, 0.00014183300000000093, 0.00014182000000000083, 0.00014183300000000093, 0.00014180499999999832, 0.00014182000000000083, 0.00014179099999999528, 0.00014180499999999485, 0.00014182000000000083, 0.00014181900000000136]</msg>
<status status="PASS" starttime="20201029 18:18:03.883" endtime="20201029 18:18:03.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.879" endtime="20201029 18:18:03.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.522" endtime="20201029 18:18:03.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.500" endtime="20201029 18:18:03.886"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:03.889" endtime="20201029 18:18:03.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.887" endtime="20201029 18:18:03.911"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.927" endtime="20201029 18:18:03.954"></status>
</kw>
<msg timestamp="20201029 18:18:03.955" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.924" endtime="20201029 18:18:03.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:03.960" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:03.958" endtime="20201029 18:18:03.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.963" endtime="20201029 18:18:03.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.919" endtime="20201029 18:18:03.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.915" endtime="20201029 18:18:03.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:03.983" endtime="20201029 18:18:04.272"></status>
</kw>
<msg timestamp="20201029 18:18:04.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028951361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029101792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:03.980" endtime="20201029 18:18:04.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028951361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029101792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.276" endtime="20201029 18:18:04.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.284" endtime="20201029 18:18:04.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.974" endtime="20201029 18:18:04.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.971" endtime="20201029 18:18:04.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:04.290" level="INFO">${PHILIP_RES} = [{'diff': 0.00015043100000000295}, {'diff': 0.00015016699999999966}, {'diff': 0.00015016699999999966}, {'diff': 0.00015016699999999966}, {'diff': 0.00015016699999999966}, {'diff': 0.000150166000000000...</msg>
<status status="PASS" starttime="20201029 18:18:04.287" endtime="20201029 18:18:04.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:04.294" level="INFO">${RESULT} = {'diff': [0.00015043100000000295, 0.00015016699999999966, 0.00015016699999999966, 0.00015016699999999966, 0.00015016699999999966, 0.0001501660000000002, 0.0001501660000000002, 0.0001501660000000002, 0...</msg>
<status status="PASS" starttime="20201029 18:18:04.291" endtime="20201029 18:18:04.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.298" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:04.297" endtime="20201029 18:18:04.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.300" level="INFO">VALUE: [0.00015043100000000295, 0.00015016699999999966, 0.00015016699999999966, 0.00015016699999999966, 0.00015016699999999966, 0.0001501660000000002, 0.0001501660000000002, 0.0001501660000000002, 0.00015015200000000062, 0.00015017999999999976, 0.0001501660000000002, 0.00015015200000000062, 0.00015017999999999976, 0.0001501660000000002, 0.0001501530000000001, 0.00015018099999999923, 0.0001501670000000066, 0.00015013900000000052, 0.00015009699999999487, 0.00015012500000000095, 0.0001501530000000001, 0.00015018099999999923, 0.00015018099999999923, 0.00015016699999999966, 0.00015013900000000052, 0.0001502079999999989, 0.0001501530000000001, 0.00015022199999999847, 0.00015016699999999966, 0.00015013900000000052, 0.0001502079999999989, 0.00015016699999999966, 0.00015015200000000062, 0.00015013800000000105, 0.0001502079999999989, 0.00015017999999999976, 0.0001501660000000002, 0.00015017999999999976, 0.00015013899999999358, 0.0001501660000000002, 0.00015017999999999976, 0.00015020899999999837, 0.0001501530000000001, 0.00015018099999999923, 0.00015016699999999966, 0.00015013900000000052, 0.0001501530000000001, 0.00015020899999999837, 0.0001500970000000018, 0.00015016699999999966]</msg>
<status status="PASS" starttime="20201029 18:18:04.299" endtime="20201029 18:18:04.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.295" endtime="20201029 18:18:04.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.912" endtime="20201029 18:18:04.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:03.887" endtime="20201029 18:18:04.303"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:04.306" endtime="20201029 18:18:04.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.304" endtime="20201029 18:18:04.326"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.333" endtime="20201029 18:18:04.359"></status>
</kw>
<msg timestamp="20201029 18:18:04.360" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.332" endtime="20201029 18:18:04.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.362" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.361" endtime="20201029 18:18:04.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.363" endtime="20201029 18:18:04.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.329" endtime="20201029 18:18:04.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.328" endtime="20201029 18:18:04.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.372" endtime="20201029 18:18:04.658"></status>
</kw>
<msg timestamp="20201029 18:18:04.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016558375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016717333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.371" endtime="20201029 18:18:04.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016558375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016717333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.662" endtime="20201029 18:18:04.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.670" endtime="20201029 18:18:04.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.368" endtime="20201029 18:18:04.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.366" endtime="20201029 18:18:04.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:04.677" level="INFO">${PHILIP_RES} = [{'diff': 0.0001589580000000007}, {'diff': 0.00015874999999999917}, {'diff': 0.0001587359999999996}, {'diff': 0.0001587359999999996}, {'diff': 0.00015873600000000307}, {'diff': 0.0001587359999999996},...</msg>
<status status="PASS" starttime="20201029 18:18:04.674" endtime="20201029 18:18:04.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:04.681" level="INFO">${RESULT} = {'diff': [0.0001589580000000007, 0.00015874999999999917, 0.0001587359999999996, 0.0001587359999999996, 0.00015873600000000307, 0.0001587359999999996, 0.00015880600000000092, 0.00015874999999999917, 0....</msg>
<status status="PASS" starttime="20201029 18:18:04.678" endtime="20201029 18:18:04.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.686" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:04.685" endtime="20201029 18:18:04.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.688" level="INFO">VALUE: [0.0001589580000000007, 0.00015874999999999917, 0.0001587359999999996, 0.0001587359999999996, 0.00015873600000000307, 0.0001587359999999996, 0.00015880600000000092, 0.00015874999999999917, 0.0001587359999999996, 0.00015879200000000135, 0.0001587359999999996, 0.0001587359999999996, 0.0001587359999999996, 0.00015875000000000264, 0.00015872200000000003, 0.00015877800000000178, 0.0001587359999999996, 0.0001587359999999996, 0.0001587229999999995, 0.00015872200000000003, 0.00015873699999999907, 0.0001587359999999996, 0.0001587359999999996, 0.0001587359999999996, 0.0001587359999999996, 0.00015872200000000003, 0.0001587640000000022, 0.00015881900000000101, 0.0001587640000000022, 0.0001587359999999996, 0.0001587359999999996, 0.00015873699999999907, 0.0001587359999999996, 0.00015874999999999917, 0.00015872200000000003, 0.0001587359999999996, 0.0001587359999999996, 0.0001587359999999996, 0.0001587229999999995, 0.0001587359999999996, 0.0001587359999999996, 0.00015875000000000264, 0.0001587640000000022, 0.00015872200000000003, 0.00015868000000000132, 0.0001587359999999996, 0.00015876399999999874, 0.0001586810000000008, 0.0001587359999999996, 0.00015872300000000644]</msg>
<status status="PASS" starttime="20201029 18:18:04.687" endtime="20201029 18:18:04.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.682" endtime="20201029 18:18:04.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.326" endtime="20201029 18:18:04.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.304" endtime="20201029 18:18:04.718"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:04.721" endtime="20201029 18:18:04.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.719" endtime="20201029 18:18:04.740"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.748" endtime="20201029 18:18:04.775"></status>
</kw>
<msg timestamp="20201029 18:18:04.775" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.747" endtime="20201029 18:18:04.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:04.778" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:04.776" endtime="20201029 18:18:04.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.779" endtime="20201029 18:18:04.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.744" endtime="20201029 18:18:04.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.742" endtime="20201029 18:18:04.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:04.788" endtime="20201029 18:18:05.074"></status>
</kw>
<msg timestamp="20201029 18:18:05.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016623139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016790958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:04.786" endtime="20201029 18:18:05.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016623139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016790958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.078" endtime="20201029 18:18:05.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.086" endtime="20201029 18:18:05.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.783" endtime="20201029 18:18:05.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.782" endtime="20201029 18:18:05.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:05.092" level="INFO">${PHILIP_RES} = [{'diff': 0.00016781900000000308}, {'diff': 0.0001675419999999997}, {'diff': 0.0001675830000000024}, {'diff': 0.00016751400000000055}, {'diff': 0.00016752800000000012}, {'diff': 0.0001675419999999997}...</msg>
<status status="PASS" starttime="20201029 18:18:05.089" endtime="20201029 18:18:05.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:05.096" level="INFO">${RESULT} = {'diff': [0.00016781900000000308, 0.0001675419999999997, 0.0001675830000000024, 0.00016751400000000055, 0.00016752800000000012, 0.0001675419999999997, 0.00016752800000000012, 0.00016754099999999675, 0...</msg>
<status status="PASS" starttime="20201029 18:18:05.093" endtime="20201029 18:18:05.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.100" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:05.099" endtime="20201029 18:18:05.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.103" level="INFO">VALUE: [0.00016781900000000308, 0.0001675419999999997, 0.0001675830000000024, 0.00016751400000000055, 0.00016752800000000012, 0.0001675419999999997, 0.00016752800000000012, 0.00016754099999999675, 0.0001675419999999997, 0.00016755599999999926, 0.00016752800000000012, 0.00016752800000000012, 0.0001674579999999988, 0.00016752800000000012, 0.00016752700000000065, 0.00016754200000000316, 0.00016755600000000273, 0.0001675419999999997, 0.0001674860000000014, 0.0001675419999999997, 0.00016761099999999807, 0.00016754100000000022, 0.00016752700000000065, 0.0001675419999999997, 0.00016751400000000055, 0.0001675419999999997, 0.00016752800000000012, 0.00016754100000000022, 0.0001675549999999998, 0.0001675419999999997, 0.0001674860000000014, 0.0001675419999999997, 0.0001675419999999997, 0.00016751400000000055, 0.0001675419999999997, 0.0001675549999999998, 0.00016754100000000022, 0.00016755600000000273, 0.00016752800000000012, 0.00016752800000000012, 0.0001675419999999997, 0.00016751400000000055, 0.00016754100000000022, 0.00016752800000000012, 0.0001675419999999997, 0.00016755599999999926, 0.00016752800000000012, 0.00016755599999999926, 0.0001675549999999998, 0.0001675269999999937]</msg>
<status status="PASS" starttime="20201029 18:18:05.101" endtime="20201029 18:18:05.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.097" endtime="20201029 18:18:05.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.741" endtime="20201029 18:18:05.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:04.719" endtime="20201029 18:18:05.105"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:05.107" endtime="20201029 18:18:05.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.106" endtime="20201029 18:18:05.127"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.135" endtime="20201029 18:18:05.161"></status>
</kw>
<msg timestamp="20201029 18:18:05.162" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.133" endtime="20201029 18:18:05.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.164" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.163" endtime="20201029 18:18:05.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.165" endtime="20201029 18:18:05.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.131" endtime="20201029 18:18:05.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.129" endtime="20201029 18:18:05.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.175" endtime="20201029 18:18:05.471"></status>
</kw>
<msg timestamp="20201029 18:18:05.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016638778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016815597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.174" endtime="20201029 18:18:05.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016638778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016815597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.479" endtime="20201029 18:18:05.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.497" endtime="20201029 18:18:05.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.171" endtime="20201029 18:18:05.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.169" endtime="20201029 18:18:05.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:05.510" level="INFO">${PHILIP_RES} = [{'diff': 0.00017681900000000167}, {'diff': 0.0001765969999999971}, {'diff': 0.00017656900000000142}, {'diff': 0.0001765409999999988}, {'diff': 0.00017656900000000142}, {'diff': 0.00017663899999999927...</msg>
<status status="PASS" starttime="20201029 18:18:05.503" endtime="20201029 18:18:05.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:05.519" level="INFO">${RESULT} = {'diff': [0.00017681900000000167, 0.0001765969999999971, 0.00017656900000000142, 0.0001765409999999988, 0.00017656900000000142, 0.00017663899999999927, 0.00017655500000000185, 0.00017649999999999957, ...</msg>
<status status="PASS" starttime="20201029 18:18:05.512" endtime="20201029 18:18:05.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.527" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:05.526" endtime="20201029 18:18:05.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.529" level="INFO">VALUE: [0.00017681900000000167, 0.0001765969999999971, 0.00017656900000000142, 0.0001765409999999988, 0.00017656900000000142, 0.00017663899999999927, 0.00017655500000000185, 0.00017649999999999957, 0.00017659700000000056, 0.00017656899999999795, 0.00017654199999999828, 0.0001765700000000009, 0.0001765700000000009, 0.00017659700000000056, 0.00017654199999999828, 0.00017655500000000185, 0.00017649999999999957, 0.00017654200000000175, 0.000176583999999997, 0.00017654200000000175, 0.00017661100000000013, 0.00017652799999999871, 0.00017655600000000132, 0.00017659800000000003, 0.0001765700000000009, 0.0001765700000000009, 0.00017656900000000142, 0.00017665199999999937, 0.00017654200000000175, 0.00017655499999999838, 0.00017659700000000056, 0.00017656899999999795, 0.00017655500000000185, 0.00017655499999999838, 0.00017655499999999838, 0.00017656900000000142, 0.00017655499999999838, 0.00017656900000000142, 0.00017652699999999924, 0.00017661100000000013, 0.00017656900000000142, 0.00017655500000000185, 0.00017656900000000142, 0.0001764999999999961, 0.0001766249999999997, 0.00017654200000000175, 0.000176583000000001, 0.00017654200000000175, 0.0001765700000000009, 0.00017655600000000132]</msg>
<status status="PASS" starttime="20201029 18:18:05.528" endtime="20201029 18:18:05.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.521" endtime="20201029 18:18:05.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.127" endtime="20201029 18:18:05.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.105" endtime="20201029 18:18:05.532"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:05.534" endtime="20201029 18:18:05.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.533" endtime="20201029 18:18:05.554"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.562" endtime="20201029 18:18:05.589"></status>
</kw>
<msg timestamp="20201029 18:18:05.590" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.561" endtime="20201029 18:18:05.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.592" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.591" endtime="20201029 18:18:05.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.593" endtime="20201029 18:18:05.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.558" endtime="20201029 18:18:05.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.556" endtime="20201029 18:18:05.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.602" endtime="20201029 18:18:05.888"></status>
</kw>
<msg timestamp="20201029 18:18:05.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016553958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016739986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.600" endtime="20201029 18:18:05.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016553958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016739986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.891" endtime="20201029 18:18:05.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.899" endtime="20201029 18:18:05.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.598" endtime="20201029 18:18:05.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.596" endtime="20201029 18:18:05.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:05.905" level="INFO">${PHILIP_RES} = [{'diff': 0.0001860279999999978}, {'diff': 0.00018581900000000026}, {'diff': 0.00018580499999999722}, {'diff': 0.000185875000000002}, {'diff': 0.00018580600000000017}, {'diff': 0.00018581999999999974}...</msg>
<status status="PASS" starttime="20201029 18:18:05.902" endtime="20201029 18:18:05.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:05.910" level="INFO">${RESULT} = {'diff': [0.0001860279999999978, 0.00018581900000000026, 0.00018580499999999722, 0.000185875000000002, 0.00018580600000000017, 0.00018581999999999974, 0.0001858339999999993, 0.00018583299999999983, 0....</msg>
<status status="PASS" starttime="20201029 18:18:05.906" endtime="20201029 18:18:05.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.915" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:05.914" endtime="20201029 18:18:05.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.917" level="INFO">VALUE: [0.0001860279999999978, 0.00018581900000000026, 0.00018580499999999722, 0.000185875000000002, 0.00018580600000000017, 0.00018581999999999974, 0.0001858339999999993, 0.00018583299999999983, 0.0001858050000000007, 0.00018583299999999983, 0.00018583299999999983, 0.0001858050000000007, 0.00018581999999999974, 0.00018586099999999897, 0.00018580600000000017, 0.0001858339999999993, 0.00018581900000000026, 0.0001857920000000006, 0.00018580499999999722, 0.00018579099999999765, 0.0001858200000000032, 0.0001858059999999967, 0.00018581999999999974, 0.00018580600000000017, 0.00018581900000000026, 0.00018583299999999983, 0.00018581900000000026, 0.00018581900000000026, 0.0001858050000000007, 0.00018583299999999983, 0.00018581999999999974, 0.0001858339999999993, 0.00018580600000000017, 0.00018576400000000146, 0.0001858050000000007, 0.0001858050000000007, 0.00018581900000000026, 0.00018581999999999974, 0.00018580600000000017, 0.00018580600000000363, 0.000185875000000002, 0.00018580600000000363, 0.00018583299999999636, 0.00018581900000000373, 0.0001858189999999968, 0.00018581900000000373, 0.00018581999999999627, 0.00018580600000000363, 0.0001858609999999955, 0.0001858200000000032]</msg>
<status status="PASS" starttime="20201029 18:18:05.916" endtime="20201029 18:18:05.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.911" endtime="20201029 18:18:05.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.555" endtime="20201029 18:18:05.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.532" endtime="20201029 18:18:05.919"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:05.921" endtime="20201029 18:18:05.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.920" endtime="20201029 18:18:05.941"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.949" endtime="20201029 18:18:05.977"></status>
</kw>
<msg timestamp="20201029 18:18:05.978" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.947" endtime="20201029 18:18:05.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:05.980" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:05.979" endtime="20201029 18:18:05.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.981" endtime="20201029 18:18:05.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.945" endtime="20201029 18:18:05.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.943" endtime="20201029 18:18:05.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:05.990" endtime="20201029 18:18:06.287"></status>
</kw>
<msg timestamp="20201029 18:18:06.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016750361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016945917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:05.988" endtime="20201029 18:18:06.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016750361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016945917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.296" endtime="20201029 18:18:06.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.313" endtime="20201029 18:18:06.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.986" endtime="20201029 18:18:06.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.984" endtime="20201029 18:18:06.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:06.326" level="INFO">${PHILIP_RES} = [{'diff': 0.00019555600000000298}, {'diff': 0.0001952919999999997}, {'diff': 0.00019529100000000021}, {'diff': 0.0001952360000000014}, {'diff': 0.00019527800000000012}, {'diff': 0.00019530599999999926...</msg>
<status status="PASS" starttime="20201029 18:18:06.320" endtime="20201029 18:18:06.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:06.335" level="INFO">${RESULT} = {'diff': [0.00019555600000000298, 0.0001952919999999997, 0.00019529100000000021, 0.0001952360000000014, 0.00019527800000000012, 0.00019530599999999926, 0.0001952919999999997, 0.00019529100000000021, 0...</msg>
<status status="PASS" starttime="20201029 18:18:06.328" endtime="20201029 18:18:06.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.340" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:06.339" endtime="20201029 18:18:06.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.342" level="INFO">VALUE: [0.00019555600000000298, 0.0001952919999999997, 0.00019529100000000021, 0.0001952360000000014, 0.00019527800000000012, 0.00019530599999999926, 0.0001952919999999997, 0.00019529100000000021, 0.00019527800000000012, 0.00019529100000000021, 0.00019530599999999926, 0.0001952919999999997, 0.0001952919999999997, 0.00019527800000000012, 0.00019527700000000064, 0.00019527800000000012, 0.0001952919999999997, 0.00019536100000000153, 0.0001952919999999997, 0.00019529099999999674, 0.00019527800000000012, 0.0001952919999999997, 0.0001952919999999997, 0.00019527800000000012, 0.00019529100000000021, 0.00019527800000000012, 0.0001952499999999975, 0.0001952919999999997, 0.0001952919999999997, 0.0001952499999999975, 0.00019529200000000316, 0.00019529100000000021, 0.00019527800000000012, 0.00019527800000000012, 0.00019527700000000064, 0.0001952360000000014, 0.00019531899999999935, 0.0001953469999999985, 0.00019522200000000184, 0.00019530499999999978, 0.0001953469999999985, 0.00019529100000000021, 0.00019527800000000012, 0.00019534799999999797, 0.00019529100000000021, 0.0001952360000000014, 0.00019529100000000021, 0.00019530599999999926, 0.0001952919999999997, 0.00019527800000000012]</msg>
<status status="PASS" starttime="20201029 18:18:06.341" endtime="20201029 18:18:06.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.337" endtime="20201029 18:18:06.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.941" endtime="20201029 18:18:06.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:05.919" endtime="20201029 18:18:06.344"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:06.347" endtime="20201029 18:18:06.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.345" endtime="20201029 18:18:06.366"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.374" endtime="20201029 18:18:06.404"></status>
</kw>
<msg timestamp="20201029 18:18:06.404" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.373" endtime="20201029 18:18:06.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.407" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.405" endtime="20201029 18:18:06.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.408" endtime="20201029 18:18:06.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.370" endtime="20201029 18:18:06.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.368" endtime="20201029 18:18:06.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.418" endtime="20201029 18:18:06.703"></status>
</kw>
<msg timestamp="20201029 18:18:06.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016567, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01677225, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:18:06.416" endtime="20201029 18:18:06.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016567, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01677225, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:18:06.707" endtime="20201029 18:18:06.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.715" endtime="20201029 18:18:06.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.414" endtime="20201029 18:18:06.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.412" endtime="20201029 18:18:06.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:06.721" level="INFO">${PHILIP_RES} = [{'diff': 0.00020525000000000057}, {'diff': 0.0002049169999999989}, {'diff': 0.00020498599999999728}, {'diff': 0.0002050139999999999}, {'diff': 0.00020500000000000032}, {'diff': 0.00020500000000000032...</msg>
<status status="PASS" starttime="20201029 18:18:06.718" endtime="20201029 18:18:06.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:06.726" level="INFO">${RESULT} = {'diff': [0.00020525000000000057, 0.0002049169999999989, 0.00020498599999999728, 0.0002050139999999999, 0.00020500000000000032, 0.00020500000000000032, 0.00020498600000000075, 0.00020498600000000075, ...</msg>
<status status="PASS" starttime="20201029 18:18:06.722" endtime="20201029 18:18:06.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.731" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:06.730" endtime="20201029 18:18:06.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.733" level="INFO">VALUE: [0.00020525000000000057, 0.0002049169999999989, 0.00020498599999999728, 0.0002050139999999999, 0.00020500000000000032, 0.00020500000000000032, 0.00020498600000000075, 0.00020498600000000075, 0.00020498600000000075, 0.00020498600000000075, 0.00020499999999999685, 0.00020499999999999685, 0.0002050139999999999, 0.0002050550000000026, 0.00020498700000000022, 0.00020498600000000075, 0.00020494400000000204, 0.00020498600000000075, 0.00020497200000000118, 0.00020500000000000032, 0.00020500000000000032, 0.00020497300000000065, 0.0002050139999999999, 0.00020498700000000022, 0.0002050139999999999, 0.00020500000000000032, 0.0002050139999999999, 0.00020500000000000032, 0.00020498600000000075, 0.00020500000000000032, 0.00020495900000000108, 0.00020497300000000065, 0.00020501300000000042, 0.00020500000000000032, 0.00020497200000000118, 0.00020497200000000118, 0.00020501399999999642, 0.00020495800000000508, 0.0002049719999999977, 0.00020498600000000422, 0.000205027999999996, 0.0002050000000000038, 0.00020499999999999685, 0.0002050000000000038, 0.00020498599999999728, 0.0002050000000000038, 0.00020499999999999685, 0.00020498600000000422, 0.00020499999999999685, 0.00020495900000000455]</msg>
<status status="PASS" starttime="20201029 18:18:06.732" endtime="20201029 18:18:06.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.727" endtime="20201029 18:18:06.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.367" endtime="20201029 18:18:06.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.345" endtime="20201029 18:18:06.736"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:06.739" endtime="20201029 18:18:06.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.737" endtime="20201029 18:18:06.758"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.766" endtime="20201029 18:18:06.797"></status>
</kw>
<msg timestamp="20201029 18:18:06.797" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.765" endtime="20201029 18:18:06.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:06.799" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:06.798" endtime="20201029 18:18:06.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.800" endtime="20201029 18:18:06.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.762" endtime="20201029 18:18:06.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.760" endtime="20201029 18:18:06.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:06.809" endtime="20201029 18:18:07.108"></status>
</kw>
<msg timestamp="20201029 18:18:07.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016678181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016893347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:06.808" endtime="20201029 18:18:07.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016678181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016893347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.116" endtime="20201029 18:18:07.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.133" endtime="20201029 18:18:07.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.805" endtime="20201029 18:18:07.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.803" endtime="20201029 18:18:07.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:07.147" level="INFO">${PHILIP_RES} = [{'diff': 0.00021516599999999927}, {'diff': 0.00021491700000000197}, {'diff': 0.0002149299999999986}, {'diff': 0.00021490299999999893}, {'diff': 0.00021494400000000163}, {'diff': 0.0002149299999999986...</msg>
<status status="PASS" starttime="20201029 18:18:07.140" endtime="20201029 18:18:07.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:07.151" level="INFO">${RESULT} = {'diff': [0.00021516599999999927, 0.00021491700000000197, 0.0002149299999999986, 0.00021490299999999893, 0.00021494400000000163, 0.0002149299999999986, 0.00021498600000000034, 0.00021491599999999902, ...</msg>
<status status="PASS" starttime="20201029 18:18:07.148" endtime="20201029 18:18:07.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.156" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:07.155" endtime="20201029 18:18:07.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.158" level="INFO">VALUE: [0.00021516599999999927, 0.00021491700000000197, 0.0002149299999999986, 0.00021490299999999893, 0.00021494400000000163, 0.0002149299999999986, 0.00021498600000000034, 0.00021491599999999902, 0.00021494499999999764, 0.00021491599999999902, 0.00021493099999999807, 0.00021491700000000197, 0.00021491599999999902, 0.00021491599999999902, 0.00021497200000000077, 0.0002149450000000011, 0.00021493000000000206, 0.0002149450000000011, 0.00021490199999999945, 0.00021493000000000206, 0.0002149169999999985, 0.0002149160000000025, 0.00021490299999999893, 0.00021491700000000197, 0.00021493100000000154, 0.0002149169999999985, 0.00021493000000000206, 0.0002148749999999998, 0.00021491599999999902, 0.0002149169999999985, 0.00021494499999999764, 0.00021490200000000292, 0.0002149169999999985, 0.00021491599999999902, 0.00021493100000000154, 0.00021493100000000154, 0.00021491599999999556, 0.0002149030000000024, 0.00021493000000000206, 0.00021491700000000197, 0.00021488900000000283, 0.00021493100000000154, 0.00021493100000000154, 0.00021490199999999599, 0.00021493100000000154, 0.00021494400000000163, 0.0002149309999999946, 0.00021493100000000154, 0.0002149030000000024, 0.00021493100000000154]</msg>
<status status="PASS" starttime="20201029 18:18:07.157" endtime="20201029 18:18:07.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.152" endtime="20201029 18:18:07.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.759" endtime="20201029 18:18:07.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:06.737" endtime="20201029 18:18:07.160"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:07.163" endtime="20201029 18:18:07.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.161" endtime="20201029 18:18:07.182"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.190" endtime="20201029 18:18:07.221"></status>
</kw>
<msg timestamp="20201029 18:18:07.221" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.189" endtime="20201029 18:18:07.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.224" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.222" endtime="20201029 18:18:07.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.225" endtime="20201029 18:18:07.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.186" endtime="20201029 18:18:07.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.184" endtime="20201029 18:18:07.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.233" endtime="20201029 18:18:07.524"></status>
</kw>
<msg timestamp="20201029 18:18:07.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016590514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016815833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.232" endtime="20201029 18:18:07.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016590514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016815833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.528" endtime="20201029 18:18:07.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.536" endtime="20201029 18:18:07.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.229" endtime="20201029 18:18:07.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.228" endtime="20201029 18:18:07.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:07.542" level="INFO">${PHILIP_RES} = [{'diff': 0.00022531899999999813}, {'diff': 0.00022506999999999736}, {'diff': 0.0002250549999999983}, {'diff': 0.00022515299999999877}, {'diff': 0.0002250549999999983}, {'diff': 0.0002250840000000004}...</msg>
<status status="PASS" starttime="20201029 18:18:07.539" endtime="20201029 18:18:07.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:07.546" level="INFO">${RESULT} = {'diff': [0.00022531899999999813, 0.00022506999999999736, 0.0002250549999999983, 0.00022515299999999877, 0.0002250549999999983, 0.0002250840000000004, 0.00022506899999999788, 0.00022511100000000006, 0...</msg>
<status status="PASS" starttime="20201029 18:18:07.543" endtime="20201029 18:18:07.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.550" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:07.549" endtime="20201029 18:18:07.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.553" level="INFO">VALUE: [0.00022531899999999813, 0.00022506999999999736, 0.0002250549999999983, 0.00022515299999999877, 0.0002250549999999983, 0.0002250840000000004, 0.00022506899999999788, 0.00022511100000000006, 0.00022511100000000006, 0.00022505600000000126, 0.00022509799999999996, 0.00022508300000000092, 0.00022507000000000082, 0.00022508300000000092, 0.00022507000000000082, 0.00022504200000000169, 0.00022505600000000126, 0.00022506899999999788, 0.00022507000000000082, 0.00022508300000000092, 0.00022508300000000092, 0.00022506899999999788, 0.00022506999999999736, 0.00022508299999999745, 0.0002249999999999995, 0.0002250549999999983, 0.00022508300000000092, 0.00022505600000000126, 0.00022505500000000178, 0.00022507000000000082, 0.00022506900000000135, 0.00022505600000000126, 0.00022508300000000092, 0.0002250840000000004, 0.00022508300000000092, 0.00022507000000000082, 0.00022508300000000092, 0.00022504200000000169, 0.00022511100000000006, 0.00022507000000000082, 0.00022506900000000135, 0.00022506900000000135, 0.00022506900000000135, 0.00022507000000000082, 0.00022507000000000082, 0.00022508300000000092, 0.00022507000000000082, 0.0002250689999999944, 0.00022511199999999953, 0.00022504099999999527]</msg>
<status status="PASS" starttime="20201029 18:18:07.551" endtime="20201029 18:18:07.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.547" endtime="20201029 18:18:07.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.183" endtime="20201029 18:18:07.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.161" endtime="20201029 18:18:07.555"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:07.557" endtime="20201029 18:18:07.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.556" endtime="20201029 18:18:07.577"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.585" endtime="20201029 18:18:07.616"></status>
</kw>
<msg timestamp="20201029 18:18:07.617" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.583" endtime="20201029 18:18:07.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.619" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.618" endtime="20201029 18:18:07.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.620" endtime="20201029 18:18:07.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.581" endtime="20201029 18:18:07.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.579" endtime="20201029 18:18:07.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.630" endtime="20201029 18:18:07.915"></status>
</kw>
<msg timestamp="20201029 18:18:07.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016519611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016755264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.628" endtime="20201029 18:18:07.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016519611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016755264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:07.919" endtime="20201029 18:18:07.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.927" endtime="20201029 18:18:07.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.626" endtime="20201029 18:18:07.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.624" endtime="20201029 18:18:07.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:07.933" level="INFO">${PHILIP_RES} = [{'diff': 0.00023565299999999886}, {'diff': 0.00023544399999999785}, {'diff': 0.00023544399999999785}, {'diff': 0.00023543099999999775}, {'diff': 0.00023544399999999785}, {'diff': 0.000235486000000000...</msg>
<status status="PASS" starttime="20201029 18:18:07.930" endtime="20201029 18:18:07.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:07.937" level="INFO">${RESULT} = {'diff': [0.00023565299999999886, 0.00023544399999999785, 0.00023544399999999785, 0.00023543099999999775, 0.00023544399999999785, 0.00023548600000000003, 0.00023544399999999785, 0.00023543100000000122...</msg>
<status status="PASS" starttime="20201029 18:18:07.934" endtime="20201029 18:18:07.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.941" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:07.940" endtime="20201029 18:18:07.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:07.943" level="INFO">VALUE: [0.00023565299999999886, 0.00023544399999999785, 0.00023544399999999785, 0.00023543099999999775, 0.00023544399999999785, 0.00023548600000000003, 0.00023544399999999785, 0.00023543100000000122, 0.00023547200000000046, 0.00023543100000000122, 0.00023543000000000175, 0.00023543100000000122, 0.00023544400000000132, 0.00023547200000000046, 0.00023547299999999993, 0.0002354580000000009, 0.0002354450000000008, 0.00023543000000000175, 0.00023544400000000132, 0.00023543100000000122, 0.00023544400000000132, 0.0002354450000000008, 0.0002354999999999996, 0.0002354999999999996, 0.00023542999999999828, 0.0002354450000000008, 0.00023544399999999785, 0.00023544399999999785, 0.00023544499999999732, 0.00023544399999999785, 0.00023544499999999732, 0.00023545799999999742, 0.0002354450000000008, 0.0002354999999999996, 0.0002354450000000008, 0.00023540199999999567, 0.00023543100000000122, 0.0002354450000000008, 0.00023543000000000175, 0.0002354450000000008, 0.00023548600000000003, 0.00023545899999999342, 0.0002354580000000009, 0.00023545899999999342, 0.0002354580000000009, 0.00023538899999999557, 0.00023543100000000122, 0.0002354580000000009, 0.00023545900000000036, 0.00023548600000000003]</msg>
<status status="PASS" starttime="20201029 18:18:07.942" endtime="20201029 18:18:07.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.938" endtime="20201029 18:18:07.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.577" endtime="20201029 18:18:07.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.555" endtime="20201029 18:18:07.946"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:07.948" endtime="20201029 18:18:07.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.947" endtime="20201029 18:18:07.968"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:07.976" endtime="20201029 18:18:08.009"></status>
</kw>
<msg timestamp="20201029 18:18:08.010" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:07.975" endtime="20201029 18:18:08.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.012" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.011" endtime="20201029 18:18:08.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.013" endtime="20201029 18:18:08.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.972" endtime="20201029 18:18:08.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.970" endtime="20201029 18:18:08.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.022" endtime="20201029 18:18:08.307"></status>
</kw>
<msg timestamp="20201029 18:18:08.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016681681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016927986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.020" endtime="20201029 18:18:08.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016681681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016927986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.311" endtime="20201029 18:18:08.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.319" endtime="20201029 18:18:08.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.018" endtime="20201029 18:18:08.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.016" endtime="20201029 18:18:08.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:08.325" level="INFO">${PHILIP_RES} = [{'diff': 0.00024630499999999875}, {'diff': 0.00024605599999999797}, {'diff': 0.00024604200000000187}, {'diff': 0.00024605600000000144}, {'diff': 0.00024604200000000187}, {'diff': 0.000246040999999998...</msg>
<status status="PASS" starttime="20201029 18:18:08.322" endtime="20201029 18:18:08.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:08.330" level="INFO">${RESULT} = {'diff': [0.00024630499999999875, 0.00024605599999999797, 0.00024604200000000187, 0.00024605600000000144, 0.00024604200000000187, 0.00024604099999999893, 0.00024606899999999807, 0.0002460419999999984,...</msg>
<status status="PASS" starttime="20201029 18:18:08.326" endtime="20201029 18:18:08.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.334" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:08.333" endtime="20201029 18:18:08.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.337" level="INFO">VALUE: [0.00024630499999999875, 0.00024605599999999797, 0.00024604200000000187, 0.00024605600000000144, 0.00024604200000000187, 0.00024604099999999893, 0.00024606899999999807, 0.0002460419999999984, 0.00024606999999999754, 0.0002459999999999997, 0.00024604200000000187, 0.00024605500000000197, 0.0002460410000000024, 0.000246070000000001, 0.00024602799999999883, 0.0002459999999999997, 0.0002459869999999996, 0.00024602699999999936, 0.00024605500000000197, 0.00024605500000000197, 0.00024605599999999797, 0.00024611100000000025, 0.0002460419999999984, 0.0002459999999999997, 0.0002461249999999998, 0.00024601399999999926, 0.00024604200000000187, 0.000246070000000001, 0.0002460419999999984, 0.00024605599999999797, 0.00024602699999999936, 0.0002460410000000024, 0.0002460410000000024, 0.00024604200000000187, 0.00024605600000000144, 0.0002460830000000011, 0.00024605500000000197, 0.0002460970000000007, 0.0002460269999999959, 0.00024605499999999503, 0.00024608399999999364, 0.00024602799999999536, 0.00024604200000000187, 0.00024604200000000187, 0.0002460410000000024, 0.00024606900000000154, 0.0002460280000000023, 0.0002460840000000006, 0.00024604200000000187, 0.00024605600000000144]</msg>
<status status="PASS" starttime="20201029 18:18:08.335" endtime="20201029 18:18:08.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.331" endtime="20201029 18:18:08.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.969" endtime="20201029 18:18:08.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:07.946" endtime="20201029 18:18:08.339"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:08.341" endtime="20201029 18:18:08.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.340" endtime="20201029 18:18:08.361"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.369" endtime="20201029 18:18:08.402"></status>
</kw>
<msg timestamp="20201029 18:18:08.402" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.367" endtime="20201029 18:18:08.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.405" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.403" endtime="20201029 18:18:08.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.406" endtime="20201029 18:18:08.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.365" endtime="20201029 18:18:08.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.363" endtime="20201029 18:18:08.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.415" endtime="20201029 18:18:08.701"></status>
</kw>
<msg timestamp="20201029 18:18:08.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016594333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016851472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.413" endtime="20201029 18:18:08.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016594333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016851472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.705" endtime="20201029 18:18:08.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.713" endtime="20201029 18:18:08.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.411" endtime="20201029 18:18:08.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.409" endtime="20201029 18:18:08.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:08.720" level="INFO">${PHILIP_RES} = [{'diff': 0.000257139}, {'diff': 0.00025686200000000006}, {'diff': 0.0002568610000000006}, {'diff': 0.0002568890000000032}, {'diff': 0.00025686200000000006}, {'diff': 0.0002568609999999971}, {'diff': ...</msg>
<status status="PASS" starttime="20201029 18:18:08.716" endtime="20201029 18:18:08.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:08.724" level="INFO">${RESULT} = {'diff': [0.000257139, 0.00025686200000000006, 0.0002568610000000006, 0.0002568890000000032, 0.00025686200000000006, 0.0002568609999999971, 0.0002568610000000006, 0.0002569159999999994, 0.000256875000...</msg>
<status status="PASS" starttime="20201029 18:18:08.721" endtime="20201029 18:18:08.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.728" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:08.727" endtime="20201029 18:18:08.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.731" level="INFO">VALUE: [0.000257139, 0.00025686200000000006, 0.0002568610000000006, 0.0002568890000000032, 0.00025686200000000006, 0.0002568609999999971, 0.0002568610000000006, 0.0002569159999999994, 0.00025687500000000016, 0.0002568610000000006, 0.0002568480000000005, 0.000256847000000001, 0.000256847000000001, 0.0002568610000000006, 0.00025679199999999874, 0.0002569029999999993, 0.0002568610000000006, 0.0002568610000000006, 0.00025691699999999887, 0.0002568610000000006, 0.00025684699999999755, 0.00025687500000000016, 0.00025686200000000006, 0.0002568610000000006, 0.00025687500000000016, 0.00025687500000000016, 0.00025687500000000016, 0.0002568610000000006, 0.0002568480000000005, 0.000256847000000001, 0.0002568749999999967, 0.0002567780000000061, 0.00025681900000000535, 0.00025684699999999755, 0.0002568609999999971, 0.0002568609999999971, 0.00025686100000000406, 0.0002568880000000037, 0.0002568609999999971, 0.0002568749999999967, 0.0002568749999999967, 0.00025686100000000406, 0.00025690300000000277, 0.0002568199999999979, 0.00025688899999999626, 0.0002568609999999971, 0.00025684800000000396, 0.0002568470000000045, 0.0002568609999999971, 0.0002568749999999967]</msg>
<status status="PASS" starttime="20201029 18:18:08.730" endtime="20201029 18:18:08.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.725" endtime="20201029 18:18:08.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.361" endtime="20201029 18:18:08.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.339" endtime="20201029 18:18:08.733"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:08.735" endtime="20201029 18:18:08.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.734" endtime="20201029 18:18:08.755"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.763" endtime="20201029 18:18:08.797"></status>
</kw>
<msg timestamp="20201029 18:18:08.798" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.762" endtime="20201029 18:18:08.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:08.800" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:08.799" endtime="20201029 18:18:08.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.801" endtime="20201029 18:18:08.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.759" endtime="20201029 18:18:08.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.757" endtime="20201029 18:18:08.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:08.811" endtime="20201029 18:18:09.097"></status>
</kw>
<msg timestamp="20201029 18:18:09.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016708319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016976556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:08.809" endtime="20201029 18:18:09.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016708319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016976556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.101" endtime="20201029 18:18:09.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.108" endtime="20201029 18:18:09.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.807" endtime="20201029 18:18:09.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.805" endtime="20201029 18:18:09.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:09.115" level="INFO">${PHILIP_RES} = [{'diff': 0.00026823700000000103}, {'diff': 0.00026791699999999946}, {'diff': 0.0002679029999999999}, {'diff': 0.00026791699999999946}, {'diff': 0.0002679730000000012}, {'diff': 0.00026792999999999956...</msg>
<status status="PASS" starttime="20201029 18:18:09.112" endtime="20201029 18:18:09.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:09.119" level="INFO">${RESULT} = {'diff': [0.00026823700000000103, 0.00026791699999999946, 0.0002679029999999999, 0.00026791699999999946, 0.0002679730000000012, 0.00026792999999999956, 0.000267916, 0.0002678609999999977, 0.0002679299...</msg>
<status status="PASS" starttime="20201029 18:18:09.116" endtime="20201029 18:18:09.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.123" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:09.122" endtime="20201029 18:18:09.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.125" level="INFO">VALUE: [0.00026823700000000103, 0.00026791699999999946, 0.0002679029999999999, 0.00026791699999999946, 0.0002679730000000012, 0.00026792999999999956, 0.000267916, 0.0002678609999999977, 0.00026792999999999956, 0.000267916, 0.00026792999999999956, 0.00026795800000000217, 0.00026792999999999956, 0.000267916, 0.00026797200000000174, 0.00026794399999999913, 0.00026792999999999956, 0.00026790199999999695, 0.0002679020000000004, 0.0002679020000000004, 0.00026792999999999956, 0.00026792999999999956, 0.000267916, 0.0002679029999999999, 0.0002679860000000013, 0.00026794399999999913, 0.00026793099999999903, 0.0002679440000000026, 0.00026792999999999956, 0.0002678749999999938, 0.00026791699999999946, 0.00026793099999999903, 0.0002679029999999999, 0.00026791699999999946, 0.00026793099999999903, 0.00026793099999999903, 0.00026793099999999903, 0.0002679860000000048, 0.00026793099999999903, 0.00026791699999999946, 0.0002678890000000003, 0.00026793099999999903, 0.00026795899999999817, 0.0002679029999999999, 0.0002679449999999986, 0.00026793099999999903, 0.00026793100000000597, 0.0002679449999999986, 0.00026793099999999903, 0.0002678890000000003]</msg>
<status status="PASS" starttime="20201029 18:18:09.124" endtime="20201029 18:18:09.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.119" endtime="20201029 18:18:09.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.756" endtime="20201029 18:18:09.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:08.733" endtime="20201029 18:18:09.128"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:09.130" endtime="20201029 18:18:09.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.129" endtime="20201029 18:18:09.150"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.158" endtime="20201029 18:18:09.194"></status>
</kw>
<msg timestamp="20201029 18:18:09.194" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.156" endtime="20201029 18:18:09.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.197" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.195" endtime="20201029 18:18:09.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.198" endtime="20201029 18:18:09.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.154" endtime="20201029 18:18:09.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.152" endtime="20201029 18:18:09.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.207" endtime="20201029 18:18:09.492"></status>
</kw>
<msg timestamp="20201029 18:18:09.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016524542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016804056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.205" endtime="20201029 18:18:09.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016524542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016804056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.496" endtime="20201029 18:18:09.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.504" endtime="20201029 18:18:09.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.203" endtime="20201029 18:18:09.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.201" endtime="20201029 18:18:09.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:09.510" level="INFO">${PHILIP_RES} = [{'diff': 0.00027951400000000154}, {'diff': 0.00027919499999999944}, {'diff': 0.00027924999999999825}, {'diff': 0.0002792090000000025}, {'diff': 0.00027919399999999997}, {'diff': 0.0002792079999999995...</msg>
<status status="PASS" starttime="20201029 18:18:09.507" endtime="20201029 18:18:09.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:09.515" level="INFO">${RESULT} = {'diff': [0.00027951400000000154, 0.00027919499999999944, 0.00027924999999999825, 0.0002792090000000025, 0.00027919399999999997, 0.00027920799999999954, 0.000279208000000003, 0.00027919399999999997, 0...</msg>
<status status="PASS" starttime="20201029 18:18:09.511" endtime="20201029 18:18:09.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.519" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:09.518" endtime="20201029 18:18:09.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.522" level="INFO">VALUE: [0.00027951400000000154, 0.00027919499999999944, 0.00027924999999999825, 0.0002792090000000025, 0.00027919399999999997, 0.00027920799999999954, 0.000279208000000003, 0.00027919399999999997, 0.00027919399999999997, 0.0002791670000000003, 0.0002791809999999999, 0.000279208999999999, 0.00027919499999999944, 0.0002792229999999986, 0.0002791809999999999, 0.00027920799999999954, 0.0002791800000000004, 0.00027920799999999954, 0.0002792220000000026, 0.0002791800000000004, 0.0002792359999999987, 0.00027924999999999825, 0.0002791809999999999, 0.000279208999999999, 0.0002792229999999986, 0.0002792090000000025, 0.00027919499999999944, 0.0002791800000000004, 0.0002791939999999965, 0.0002791660000000043, 0.00027920799999999607, 0.00027917999999999693, 0.00027919400000000344, 0.000279194999999996, 0.0002792090000000025, 0.0002791249999999981, 0.00027920899999999554, 0.000279208000000003, 0.00027920799999999607, 0.00027917999999999693, 0.0002791249999999981, 0.00027926399999999435, 0.000279208000000003, 0.000279208000000003, 0.000279194999999996, 0.0002791950000000029, 0.0002791389999999977, 0.000279194999999996, 0.000279208000000003, 0.0002791939999999965]</msg>
<status status="PASS" starttime="20201029 18:18:09.520" endtime="20201029 18:18:09.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.516" endtime="20201029 18:18:09.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.151" endtime="20201029 18:18:09.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.128" endtime="20201029 18:18:09.523"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:09.526" endtime="20201029 18:18:09.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.524" endtime="20201029 18:18:09.546"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.554" endtime="20201029 18:18:09.589"></status>
</kw>
<msg timestamp="20201029 18:18:09.590" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.552" endtime="20201029 18:18:09.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.592" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.591" endtime="20201029 18:18:09.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.593" endtime="20201029 18:18:09.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.550" endtime="20201029 18:18:09.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.548" endtime="20201029 18:18:09.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.602" endtime="20201029 18:18:09.889"></status>
</kw>
<msg timestamp="20201029 18:18:09.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016577458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016868472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.600" endtime="20201029 18:18:09.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016577458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016868472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:09.893" endtime="20201029 18:18:09.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.900" endtime="20201029 18:18:09.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.598" endtime="20201029 18:18:09.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.596" endtime="20201029 18:18:09.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:09.906" level="INFO">${PHILIP_RES} = [{'diff': 0.00029101399999999916}, {'diff': 0.00029069499999999707}, {'diff': 0.00029069500000000054}, {'diff': 0.00029069499999999707}, {'diff': 0.0002907090000000001}, {'diff': 0.0002906949999999970...</msg>
<status status="PASS" starttime="20201029 18:18:09.903" endtime="20201029 18:18:09.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:09.910" level="INFO">${RESULT} = {'diff': [0.00029101399999999916, 0.00029069499999999707, 0.00029069500000000054, 0.00029069499999999707, 0.0002907090000000001, 0.00029069499999999707, 0.0002907090000000001, 0.00029069499999999707, ...</msg>
<status status="PASS" starttime="20201029 18:18:09.907" endtime="20201029 18:18:09.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.915" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:09.914" endtime="20201029 18:18:09.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.917" level="INFO">VALUE: [0.00029101399999999916, 0.00029069499999999707, 0.00029069500000000054, 0.00029069499999999707, 0.0002907090000000001, 0.00029069499999999707, 0.0002907090000000001, 0.00029069499999999707, 0.0002906670000000014, 0.0002906809999999975, 0.0002906389999999988, 0.00029069499999999707, 0.00029070800000000063, 0.00029069500000000054, 0.0002906800000000015, 0.0002907090000000001, 0.0002907090000000001, 0.00029070799999999716, 0.0002907220000000002, 0.00029072199999999673, 0.00029068100000000097, 0.0002907220000000002, 0.00029070800000000063, 0.00029069499999999707, 0.00029069500000000054, 0.0002906249999999992, 0.00029069500000000054, 0.00029069500000000054, 0.00029068099999999403, 0.00029065200000000235, 0.00029070800000000063, 0.0002907220000000002, 0.0002906939999999941, 0.00029070800000000063, 0.0002907220000000002, 0.00029073599999999977, 0.0002907079999999937, 0.00029070800000000063, 0.0002907220000000002, 0.00029070800000000063, 0.0002907079999999937, 0.00029069400000000106, 0.00029069400000000106, 0.0002906800000000015, 0.0002906939999999941, 0.0002906800000000015, 0.00029070800000000063, 0.00029069400000000106, 0.00029070800000000063, 0.00029069400000000106]</msg>
<status status="PASS" starttime="20201029 18:18:09.916" endtime="20201029 18:18:09.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.911" endtime="20201029 18:18:09.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.546" endtime="20201029 18:18:09.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.524" endtime="20201029 18:18:09.919"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:09.921" endtime="20201029 18:18:09.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.920" endtime="20201029 18:18:09.941"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.949" endtime="20201029 18:18:09.986"></status>
</kw>
<msg timestamp="20201029 18:18:09.987" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.948" endtime="20201029 18:18:09.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:09.992" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:09.990" endtime="20201029 18:18:09.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:09.995" endtime="20201029 18:18:10.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.945" endtime="20201029 18:18:10.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.943" endtime="20201029 18:18:10.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.015" endtime="20201029 18:18:10.308"></status>
</kw>
<msg timestamp="20201029 18:18:10.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016682986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016985681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.012" endtime="20201029 18:18:10.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016682986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016985681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.311" endtime="20201029 18:18:10.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.319" endtime="20201029 18:18:10.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.007" endtime="20201029 18:18:10.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.003" endtime="20201029 18:18:10.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:10.326" level="INFO">${PHILIP_RES} = [{'diff': 0.00030269499999999866}, {'diff': 0.00030243099999999884}, {'diff': 0.00030242999999999937}, {'diff': 0.00030241699999999927}, {'diff': 0.00030243099999999884}, {'diff': 0.000302416999999999...</msg>
<status status="PASS" starttime="20201029 18:18:10.323" endtime="20201029 18:18:10.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:10.330" level="INFO">${RESULT} = {'diff': [0.00030269499999999866, 0.00030243099999999884, 0.00030242999999999937, 0.00030241699999999927, 0.00030243099999999884, 0.00030241699999999927, 0.00030244399999999894, 0.00030237500000000056...</msg>
<status status="PASS" starttime="20201029 18:18:10.327" endtime="20201029 18:18:10.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.334" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:10.333" endtime="20201029 18:18:10.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.336" level="INFO">VALUE: [0.00030269499999999866, 0.00030243099999999884, 0.00030242999999999937, 0.00030241699999999927, 0.00030243099999999884, 0.00030241699999999927, 0.00030244399999999894, 0.00030237500000000056, 0.00030243099999999884, 0.0003024029999999997, 0.0003024159999999998, 0.00030243099999999884, 0.0003024449999999984, 0.00030242999999999937, 0.00030244399999999894, 0.00030241699999999927, 0.00030243099999999884, 0.0003024020000000002, 0.0003024449999999984, 0.000302458999999998, 0.00030243099999999884, 0.00030243099999999884, 0.00030243099999999884, 0.00030238900000000013, 0.0003024159999999998, 0.00030243099999999884, 0.0003024170000000062, 0.0003024300000000063, 0.0003024170000000062, 0.00030244500000000535, 0.0003024440000000059, 0.0003024029999999997, 0.00030244500000000535, 0.0003024310000000058, 0.000302472000000005, 0.0003024300000000063, 0.000302472000000005, 0.00030237500000000056, 0.0003024440000000059, 0.0003024310000000058, 0.0003024310000000058, 0.0003024300000000063, 0.0003024300000000063, 0.0003024170000000062, 0.0003024310000000058, 0.00030250000000000415, 0.0003024310000000058, 0.00030238900000000013, 0.0003024440000000059, 0.0003024440000000059]</msg>
<status status="PASS" starttime="20201029 18:18:10.335" endtime="20201029 18:18:10.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.330" endtime="20201029 18:18:10.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.942" endtime="20201029 18:18:10.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:09.919" endtime="20201029 18:18:10.339"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:10.341" endtime="20201029 18:18:10.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.340" endtime="20201029 18:18:10.361"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.369" endtime="20201029 18:18:10.407"></status>
</kw>
<msg timestamp="20201029 18:18:10.408" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.368" endtime="20201029 18:18:10.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.410" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.409" endtime="20201029 18:18:10.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.411" endtime="20201029 18:18:10.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.365" endtime="20201029 18:18:10.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.363" endtime="20201029 18:18:10.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.420" endtime="20201029 18:18:10.705"></status>
</kw>
<msg timestamp="20201029 18:18:10.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016698486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017013139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.419" endtime="20201029 18:18:10.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016698486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017013139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.709" endtime="20201029 18:18:10.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.719" endtime="20201029 18:18:10.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.416" endtime="20201029 18:18:10.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.414" endtime="20201029 18:18:10.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:10.730" level="INFO">${PHILIP_RES} = [{'diff': 0.00031465300000000154}, {'diff': 0.000314347999999999}, {'diff': 0.00031438899999999825}, {'diff': 0.000314347000000003}, {'diff': 0.0003144030000000013}, {'diff': 0.0003144299999999975}, {...</msg>
<status status="PASS" starttime="20201029 18:18:10.725" endtime="20201029 18:18:10.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:10.737" level="INFO">${RESULT} = {'diff': [0.00031465300000000154, 0.000314347999999999, 0.00031438899999999825, 0.000314347000000003, 0.0003144030000000013, 0.0003144299999999975, 0.0003143749999999987, 0.0003143890000000017, 0.0003...</msg>
<status status="PASS" starttime="20201029 18:18:10.731" endtime="20201029 18:18:10.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.743" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:10.742" endtime="20201029 18:18:10.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.746" level="INFO">VALUE: [0.00031465300000000154, 0.000314347999999999, 0.00031438899999999825, 0.000314347000000003, 0.0003144030000000013, 0.0003144299999999975, 0.0003143749999999987, 0.0003143890000000017, 0.00031430500000000083, 0.0003143749999999987, 0.0003143879999999988, 0.00031438899999999825, 0.0003143610000000026, 0.0003143609999999991, 0.0003143749999999987, 0.0003143749999999987, 0.0003143890000000017, 0.000314333, 0.0003143609999999991, 0.0003143879999999988, 0.0003143890000000017, 0.000314333, 0.00031438899999999825, 0.0003143879999999988, 0.00031437500000000215, 0.0003143749999999987, 0.000314444000000004, 0.000314347999999999, 0.00031438899999999825, 0.0003143609999999991, 0.0003143609999999991, 0.0003143890000000052, 0.0003144029999999978, 0.00031430500000000083, 0.0003143749999999987, 0.0003144299999999975, 0.0003143619999999986, 0.0003143749999999987, 0.00031438899999999825, 0.0003143750000000056, 0.0003143749999999987, 0.000314333, 0.00031438899999999825, 0.00031438899999999825, 0.0003144020000000053, 0.0003143609999999991, 0.00031434699999999954, 0.0003143749999999987, 0.00031438899999999825, 0.0003143749999999987]</msg>
<status status="PASS" starttime="20201029 18:18:10.744" endtime="20201029 18:18:10.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.738" endtime="20201029 18:18:10.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.362" endtime="20201029 18:18:10.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.339" endtime="20201029 18:18:10.748"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:10.751" endtime="20201029 18:18:10.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.749" endtime="20201029 18:18:10.771"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.779" endtime="20201029 18:18:10.818"></status>
</kw>
<msg timestamp="20201029 18:18:10.818" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.777" endtime="20201029 18:18:10.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:10.820" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:10.819" endtime="20201029 18:18:10.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.821" endtime="20201029 18:18:10.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.775" endtime="20201029 18:18:10.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.773" endtime="20201029 18:18:10.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:10.830" endtime="20201029 18:18:11.120"></status>
</kw>
<msg timestamp="20201029 18:18:11.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016864222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017190986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:10.829" endtime="20201029 18:18:11.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016864222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017190986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.123" endtime="20201029 18:18:11.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.131" endtime="20201029 18:18:11.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.826" endtime="20201029 18:18:11.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.825" endtime="20201029 18:18:11.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:11.137" level="INFO">${PHILIP_RES} = [{'diff': 0.00032676399999999675}, {'diff': 0.0003265830000000018}, {'diff': 0.0003265559999999987}, {'diff': 0.0003265689999999988}, {'diff': 0.0003265559999999987}, {'diff': 0.0003265550000000027}, ...</msg>
<status status="PASS" starttime="20201029 18:18:11.134" endtime="20201029 18:18:11.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:11.141" level="INFO">${RESULT} = {'diff': [0.00032676399999999675, 0.0003265830000000018, 0.0003265559999999987, 0.0003265689999999988, 0.0003265559999999987, 0.0003265550000000027, 0.0003265000000000004, 0.0003265419999999991, 0.000...</msg>
<status status="PASS" starttime="20201029 18:18:11.138" endtime="20201029 18:18:11.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.146" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:11.145" endtime="20201029 18:18:11.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.148" level="INFO">VALUE: [0.00032676399999999675, 0.0003265830000000018, 0.0003265559999999987, 0.0003265689999999988, 0.0003265559999999987, 0.0003265550000000027, 0.0003265000000000004, 0.0003265419999999991, 0.00032661100000000096, 0.00032655600000000215, 0.00032656900000000225, 0.00032652799999999954, 0.0003265419999999991, 0.0003265419999999991, 0.0003265970000000014, 0.000326528000000003, 0.00032652799999999954, 0.0003266109999999975, 0.0003265000000000004, 0.0003265970000000014, 0.0003265550000000027, 0.0003265689999999988, 0.0003265559999999987, 0.00032658299999999835, 0.0003265559999999987, 0.0003265549999999992, 0.0003265419999999991, 0.0003265969999999979, 0.00032656999999999825, 0.00032654099999999964, 0.00032656999999999825, 0.0003265549999999992, 0.00032655500000000615, 0.0003265560000000056, 0.0003265969999999979, 0.0003265419999999991, 0.00032651399999999997, 0.00032656999999999825, 0.00032654099999999964, 0.0003265419999999991, 0.0003265549999999992, 0.0003265419999999991, 0.0003265690000000057, 0.00032663900000000357, 0.00032651399999999997, 0.00032654099999999964, 0.00032656999999999825, 0.00032647200000000126, 0.0003265559999999987, 0.0003265549999999992]</msg>
<status status="PASS" starttime="20201029 18:18:11.147" endtime="20201029 18:18:11.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.142" endtime="20201029 18:18:11.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.771" endtime="20201029 18:18:11.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:10.748" endtime="20201029 18:18:11.150"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:11.152" endtime="20201029 18:18:11.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.151" endtime="20201029 18:18:11.172"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.180" endtime="20201029 18:18:11.219"></status>
</kw>
<msg timestamp="20201029 18:18:11.219" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.178" endtime="20201029 18:18:11.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.222" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.221" endtime="20201029 18:18:11.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.223" endtime="20201029 18:18:11.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.176" endtime="20201029 18:18:11.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.174" endtime="20201029 18:18:11.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.233" endtime="20201029 18:18:11.522"></status>
</kw>
<msg timestamp="20201029 18:18:11.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016527458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016866653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.231" endtime="20201029 18:18:11.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016527458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016866653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.531" endtime="20201029 18:18:11.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.548" endtime="20201029 18:18:11.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.229" endtime="20201029 18:18:11.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.227" endtime="20201029 18:18:11.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:11.561" level="INFO">${PHILIP_RES} = [{'diff': 0.00033919500000000047}, {'diff': 0.00033894400000000074}, {'diff': 0.00033898599999999945}, {'diff': 0.00033890299999999804}, {'diff': 0.00033894400000000074}, {'diff': 0.000338958000000000...</msg>
<status status="PASS" starttime="20201029 18:18:11.555" endtime="20201029 18:18:11.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:11.570" level="INFO">${RESULT} = {'diff': [0.00033919500000000047, 0.00033894400000000074, 0.00033898599999999945, 0.00033890299999999804, 0.00033894400000000074, 0.0003389580000000003, 0.0003389589999999998, 0.00033894400000000074, ...</msg>
<status status="PASS" starttime="20201029 18:18:11.563" endtime="20201029 18:18:11.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.579" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:11.577" endtime="20201029 18:18:11.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.584" level="INFO">VALUE: [0.00033919500000000047, 0.00033894400000000074, 0.00033898599999999945, 0.00033890299999999804, 0.00033894400000000074, 0.0003389580000000003, 0.0003389589999999998, 0.00033894400000000074, 0.0003389450000000002, 0.00033895799999999685, 0.0003389299999999977, 0.0003389169999999976, 0.0003390130000000026, 0.0003389719999999999, 0.0003389450000000002, 0.0003389589999999998, 0.0003389580000000003, 0.0003389719999999999, 0.0003389580000000003, 0.0003389719999999999, 0.0003389580000000003, 0.0003389450000000002, 0.0003389299999999977, 0.0003389589999999998, 0.0003389580000000003, 0.00033890200000000203, 0.0003389720000000068, 0.00033893100000000065, 0.00033894400000000074, 0.00033894400000000074, 0.0003389030000000015, 0.0003389719999999999, 0.0003389589999999998, 0.00033894400000000074, 0.0003389719999999999, 0.0003389589999999998, 0.0003389450000000002, 0.0003389580000000003, 0.0003389450000000002, 0.0003389719999999999, 0.0003389580000000003, 0.0003389450000000002, 0.00033894400000000074, 0.0003390139999999986, 0.0003389450000000002, 0.0003389580000000003, 0.0003389300000000012, 0.0003389450000000002, 0.0003389580000000003, 0.0003389580000000003]</msg>
<status status="PASS" starttime="20201029 18:18:11.581" endtime="20201029 18:18:11.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.572" endtime="20201029 18:18:11.588"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.172" endtime="20201029 18:18:11.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.150" endtime="20201029 18:18:11.589"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:11.594" endtime="20201029 18:18:11.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.591" endtime="20201029 18:18:11.614"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.623" endtime="20201029 18:18:11.663"></status>
</kw>
<msg timestamp="20201029 18:18:11.663" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.621" endtime="20201029 18:18:11.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.666" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:11.665" endtime="20201029 18:18:11.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.667" endtime="20201029 18:18:11.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.619" endtime="20201029 18:18:11.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.616" endtime="20201029 18:18:11.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.676" endtime="20201029 18:18:11.962"></status>
</kw>
<msg timestamp="20201029 18:18:11.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016767333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017119181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.675" endtime="20201029 18:18:11.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016767333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017119181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:11.966" endtime="20201029 18:18:11.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:11.973" endtime="20201029 18:18:11.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.672" endtime="20201029 18:18:11.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.670" endtime="20201029 18:18:11.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:11.980" level="INFO">${PHILIP_RES} = [{'diff': 0.0003518480000000018}, {'diff': 0.0003515689999999995}, {'diff': 0.00035158299999999906}, {'diff': 0.00035158300000000253}, {'diff': 0.00035158299999999906}, {'diff': 0.00035156999999999897...</msg>
<status status="PASS" starttime="20201029 18:18:11.977" endtime="20201029 18:18:11.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:11.985" level="INFO">${RESULT} = {'diff': [0.0003518480000000018, 0.0003515689999999995, 0.00035158299999999906, 0.00035158300000000253, 0.00035158299999999906, 0.00035156999999999897, 0.0003515549999999999, 0.00035156999999999897, 0...</msg>
<status status="PASS" starttime="20201029 18:18:11.981" endtime="20201029 18:18:11.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.989" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:11.988" endtime="20201029 18:18:11.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:11.991" level="INFO">VALUE: [0.0003518480000000018, 0.0003515689999999995, 0.00035158299999999906, 0.00035158300000000253, 0.00035158299999999906, 0.00035156999999999897, 0.0003515549999999999, 0.00035156999999999897, 0.0003515970000000021, 0.0003515689999999995, 0.00035163800000000134, 0.0003515409999999969, 0.00035158399999999854, 0.0003515419999999998, 0.00035157000000000244, 0.00035158299999999906, 0.00035158299999999906, 0.00035157000000000244, 0.00035159699999999863, 0.0003515549999999999, 0.00035163899999999734, 0.00035159699999999863, 0.00035158299999999906, 0.00035152700000000425, 0.000351584000000002, 0.0003515829999999956, 0.0003515980000000016, 0.0003515970000000021, 0.0003515699999999955, 0.00035158300000000253, 0.0003515970000000021, 0.00035159799999999464, 0.00035161100000000167, 0.0003515980000000016, 0.00035155499999999645, 0.00035158300000000253, 0.00035157000000000244, 0.000351568999999996, 0.0003515980000000016, 0.00035158300000000253, 0.00035158399999999507, 0.00035158300000000253, 0.00035158300000000253, 0.00035159699999999516, 0.00035158300000000253, 0.0003515980000000016, 0.000351568999999996, 0.00035157000000000244, 0.0003515970000000021, 0.0003515829999999956]</msg>
<status status="PASS" starttime="20201029 18:18:11.990" endtime="20201029 18:18:11.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.986" endtime="20201029 18:18:11.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.615" endtime="20201029 18:18:11.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.590" endtime="20201029 18:18:11.993"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:11.995" endtime="20201029 18:18:12.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.994" endtime="20201029 18:18:12.015"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.023" endtime="20201029 18:18:12.065"></status>
</kw>
<msg timestamp="20201029 18:18:12.065" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.022" endtime="20201029 18:18:12.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.068" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.066" endtime="20201029 18:18:12.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.069" endtime="20201029 18:18:12.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.019" endtime="20201029 18:18:12.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.018" endtime="20201029 18:18:12.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.078" endtime="20201029 18:18:12.375"></status>
</kw>
<msg timestamp="20201029 18:18:12.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016717861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017082569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.076" endtime="20201029 18:18:12.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016717861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017082569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.384" endtime="20201029 18:18:12.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.401" endtime="20201029 18:18:12.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.073" endtime="20201029 18:18:12.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.072" endtime="20201029 18:18:12.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:12.414" level="INFO">${PHILIP_RES} = [{'diff': 0.0003647079999999983}, {'diff': 0.0003644299999999989}, {'diff': 0.0003644309999999984}, {'diff': 0.00036443100000000186}, {'diff': 0.00036444400000000196}, {'diff': 0.0003644439999999985},...</msg>
<status status="PASS" starttime="20201029 18:18:12.408" endtime="20201029 18:18:12.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:12.422" level="INFO">${RESULT} = {'diff': [0.0003647079999999983, 0.0003644299999999989, 0.0003644309999999984, 0.00036443100000000186, 0.00036444400000000196, 0.0003644439999999985, 0.0003644030000000027, 0.0003643889999999997, 0.00...</msg>
<status status="PASS" starttime="20201029 18:18:12.416" endtime="20201029 18:18:12.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.426" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:12.425" endtime="20201029 18:18:12.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.428" level="INFO">VALUE: [0.0003647079999999983, 0.0003644299999999989, 0.0003644309999999984, 0.00036443100000000186, 0.00036444400000000196, 0.0003644439999999985, 0.0003644030000000027, 0.0003643889999999997, 0.0003644720000000011, 0.0003644309999999984, 0.0003644170000000023, 0.0003644299999999989, 0.0003644170000000023, 0.0003644309999999984, 0.00036443100000000186, 0.0003644299999999989, 0.00036443100000000186, 0.0003644309999999984, 0.0003644300000000024, 0.0003644439999999985, 0.00036444500000000143, 0.0003644299999999989, 0.0003644299999999989, 0.0003644590000000045, 0.0003644169999999988, 0.0003644439999999985, 0.0003644299999999989, 0.0003644169999999988, 0.0003644439999999985, 0.0003644299999999989, 0.0003644309999999984, 0.00036445799999999806, 0.0003643750000000001, 0.0003644439999999985, 0.00036444499999999797, 0.0003644859999999972, 0.00036443000000000586, 0.00036444499999999797, 0.00036445799999999806, 0.0003644299999999989, 0.0003644590000000045, 0.0003643889999999997, 0.0003643880000000002, 0.0003644439999999985, 0.0003644450000000049, 0.0003644309999999984, 0.00036444499999999797, 0.0003644169999999988, 0.00036444499999999797, 0.00036441599999999935]</msg>
<status status="PASS" starttime="20201029 18:18:12.427" endtime="20201029 18:18:12.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.422" endtime="20201029 18:18:12.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.016" endtime="20201029 18:18:12.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:11.993" endtime="20201029 18:18:12.430"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:12.432" endtime="20201029 18:18:12.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.431" endtime="20201029 18:18:12.452"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.460" endtime="20201029 18:18:12.502"></status>
</kw>
<msg timestamp="20201029 18:18:12.503" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.459" endtime="20201029 18:18:12.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.505" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.504" endtime="20201029 18:18:12.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.506" endtime="20201029 18:18:12.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.456" endtime="20201029 18:18:12.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.454" endtime="20201029 18:18:12.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.516" endtime="20201029 18:18:12.802"></status>
</kw>
<msg timestamp="20201029 18:18:12.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016549389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016927167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.515" endtime="20201029 18:18:12.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016549389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016927167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.806" endtime="20201029 18:18:12.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.813" endtime="20201029 18:18:12.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.512" endtime="20201029 18:18:12.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.510" endtime="20201029 18:18:12.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:12.820" level="INFO">${PHILIP_RES} = [{'diff': 0.00037777799999999875}, {'diff': 0.00037751399999999893}, {'diff': 0.00037749999999999936}, {'diff': 0.0003775279999999985}, {'diff': 0.0003774729999999997}, {'diff': 0.00037749999999999936...</msg>
<status status="PASS" starttime="20201029 18:18:12.817" endtime="20201029 18:18:12.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:12.824" level="INFO">${RESULT} = {'diff': [0.00037777799999999875, 0.00037751399999999893, 0.00037749999999999936, 0.0003775279999999985, 0.0003774729999999997, 0.00037749999999999936, 0.0003775140000000024, 0.0003775419999999981, 0....</msg>
<status status="PASS" starttime="20201029 18:18:12.821" endtime="20201029 18:18:12.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.828" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:12.827" endtime="20201029 18:18:12.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.831" level="INFO">VALUE: [0.00037777799999999875, 0.00037751399999999893, 0.00037749999999999936, 0.0003775279999999985, 0.0003774729999999997, 0.00037749999999999936, 0.0003775140000000024, 0.0003775419999999981, 0.00037749999999999936, 0.00037748699999999927, 0.00037751399999999893, 0.0003775419999999981, 0.00037749999999999936, 0.0003774859999999998, 0.00037744500000000056, 0.0003775140000000024, 0.00037749999999999936, 0.00037751399999999893, 0.0003775140000000024, 0.00037751399999999893, 0.00037754100000000207, 0.00037751399999999893, 0.0003775140000000024, 0.00037751399999999546, 0.000377512999999996, 0.0003775140000000024, 0.0003775140000000024, 0.00037751399999999546, 0.0003774579999999972, 0.00037751300000000293, 0.0003775140000000024, 0.00037747199999999675, 0.00037750000000000283, 0.0003775140000000024, 0.0003774999999999959, 0.0003775140000000024, 0.00037754200000000154, 0.000377528000000002, 0.0003774999999999959, 0.0003775140000000024, 0.0003775270000000025, 0.0003774999999999959, 0.000377528000000002, 0.0003775140000000024, 0.0003775270000000025, 0.00037752699999999556, 0.0003775140000000024, 0.000377528000000002, 0.0003774439999999976, 0.0003774859999999963]</msg>
<status status="PASS" starttime="20201029 18:18:12.829" endtime="20201029 18:18:12.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.825" endtime="20201029 18:18:12.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.453" endtime="20201029 18:18:12.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.430" endtime="20201029 18:18:12.833"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:12.836" endtime="20201029 18:18:12.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.834" endtime="20201029 18:18:12.856"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.863" endtime="20201029 18:18:12.908"></status>
</kw>
<msg timestamp="20201029 18:18:12.908" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.862" endtime="20201029 18:18:12.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:12.911" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:12.909" endtime="20201029 18:18:12.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.912" endtime="20201029 18:18:12.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.859" endtime="20201029 18:18:12.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.858" endtime="20201029 18:18:12.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:12.921" endtime="20201029 18:18:13.226"></status>
</kw>
<msg timestamp="20201029 18:18:13.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016546583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016937653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:12.919" endtime="20201029 18:18:13.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016546583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016937653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:13.230" endtime="20201029 18:18:13.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.238" endtime="20201029 18:18:13.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.916" endtime="20201029 18:18:13.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.915" endtime="20201029 18:18:13.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:13.244" level="INFO">${PHILIP_RES} = [{'diff': 0.0003910700000000003}, {'diff': 0.00039074999999999874}, {'diff': 0.00039082000000000006}, {'diff': 0.00039079100000000144}, {'diff': 0.0003908469999999997}, {'diff': 0.0003908190000000006}...</msg>
<status status="PASS" starttime="20201029 18:18:13.241" endtime="20201029 18:18:13.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:13.249" level="INFO">${RESULT} = {'diff': [0.0003910700000000003, 0.00039074999999999874, 0.00039082000000000006, 0.00039079100000000144, 0.0003908469999999997, 0.0003908190000000006, 0.00039080499999999754, 0.00039079199999999745, 0...</msg>
<status status="PASS" starttime="20201029 18:18:13.245" endtime="20201029 18:18:13.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.253" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:13.252" endtime="20201029 18:18:13.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.255" level="INFO">VALUE: [0.0003910700000000003, 0.00039074999999999874, 0.00039082000000000006, 0.00039079100000000144, 0.0003908469999999997, 0.0003908190000000006, 0.00039080499999999754, 0.00039079199999999745, 0.000390805999999997, 0.00039077800000000135, 0.0003908060000000005, 0.0003907370000000021, 0.000390805000000001, 0.000390805000000001, 0.000390805000000001, 0.000390805000000001, 0.00039073599999999917, 0.0003908339999999996, 0.00039082000000000006, 0.000390805999999997, 0.00039080499999999754, 0.0003908190000000006, 0.000390805000000001, 0.0003908190000000006, 0.0003908060000000005, 0.0003908060000000005, 0.000390791999999994, 0.0003908060000000005, 0.0003908190000000006, 0.000390805000000001, 0.000390805000000001, 0.000390805000000001, 0.0003908060000000005, 0.00039082000000000006, 0.00039082000000000006, 0.00039082000000000006, 0.0003908060000000005, 0.00039086100000000623, 0.0003908190000000006, 0.00039081899999999364, 0.0003908469999999997, 0.0003907640000000018, 0.0003908339999999996, 0.0003908060000000005, 0.0003907920000000009, 0.00039083300000000015, 0.00039079100000000144, 0.000390805000000001, 0.0003907779999999944, 0.000390805000000001]</msg>
<status status="PASS" starttime="20201029 18:18:13.254" endtime="20201029 18:18:13.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.249" endtime="20201029 18:18:13.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.856" endtime="20201029 18:18:13.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:12.834" endtime="20201029 18:18:13.257"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:13.259" endtime="20201029 18:18:13.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.258" endtime="20201029 18:18:13.279"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.287" endtime="20201029 18:18:13.332"></status>
</kw>
<msg timestamp="20201029 18:18:13.332" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.286" endtime="20201029 18:18:13.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.335" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:13.333" endtime="20201029 18:18:13.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.336" endtime="20201029 18:18:13.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.283" endtime="20201029 18:18:13.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.281" endtime="20201029 18:18:13.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.345" endtime="20201029 18:18:13.631"></status>
</kw>
<msg timestamp="20201029 18:18:13.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016639736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017044333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:13.343" endtime="20201029 18:18:13.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016639736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017044333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:13.635" endtime="20201029 18:18:13.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:13.643" endtime="20201029 18:18:13.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.341" endtime="20201029 18:18:13.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.339" endtime="20201029 18:18:13.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:18:13.649" level="INFO">${PHILIP_RES} = [{'diff': 0.0004045969999999996}, {'diff': 0.0004043329999999998}, {'diff': 0.0004043060000000001}, {'diff': 0.00040430500000000064}, {'diff': 0.0004044030000000011}, {'diff': 0.0004043329999999998}, ...</msg>
<status status="PASS" starttime="20201029 18:18:13.646" endtime="20201029 18:18:13.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:13.653" level="INFO">${RESULT} = {'diff': [0.0004045969999999996, 0.0004043329999999998, 0.0004043060000000001, 0.00040430500000000064, 0.0004044030000000011, 0.0004043329999999998, 0.0004043329999999998, 0.00040433399999999925, 0.00...</msg>
<status status="PASS" starttime="20201029 18:18:13.650" endtime="20201029 18:18:13.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.658" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 18:18:13.657" endtime="20201029 18:18:13.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.660" level="INFO">VALUE: [0.0004045969999999996, 0.0004043329999999998, 0.0004043060000000001, 0.00040430500000000064, 0.0004044030000000011, 0.0004043329999999998, 0.0004043329999999998, 0.00040433399999999925, 0.0004043199999999997, 0.00040434699999999935, 0.00040434699999999935, 0.0004043470000000028, 0.0004043199999999997, 0.00040429100000000107, 0.0004043190000000002, 0.0004043329999999998, 0.00040433399999999925, 0.0004043190000000002, 0.00040434699999999935, 0.0004043329999999998, 0.00040434799999999535, 0.00040434699999999935, 0.00040427800000000097, 0.0004043199999999997, 0.0004043479999999988, 0.00040440300000000456, 0.0004043329999999998, 0.0004043329999999998, 0.0004043329999999998, 0.00040433399999999925, 0.0004043749999999985, 0.0004043749999999985, 0.00040434699999999935, 0.0004043479999999988, 0.0004043609999999989, 0.0004043190000000002, 0.00040427800000000097, 0.0004043199999999997, 0.0004043340000000062, 0.0004043329999999998, 0.0004043329999999998, 0.0004043199999999997, 0.00040433399999999925, 0.00040434699999999935, 0.00040434699999999935, 0.0004043479999999988, 0.00040433399999999925, 0.00040434699999999935, 0.00040434699999999935, 0.0004043329999999998]</msg>
<status status="PASS" starttime="20201029 18:18:13.659" endtime="20201029 18:18:13.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.654" endtime="20201029 18:18:13.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.280" endtime="20201029 18:18:13.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.257" endtime="20201029 18:18:13.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:53.852" endtime="20201029 18:18:13.662"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:51.579" endtime="20201029 18:18:13.662" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:17:28.730" endtime="20201029 18:18:13.672"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:18:13.743" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:18:13.751" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:18:14.837" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:18:13.742" endtime="20201029 18:18:14.839"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:18:15.844" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 18:18:14.841" endtime="20201029 18:18:15.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.740" endtime="20201029 18:18:15.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:15.851" endtime="20201029 18:18:16.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:15.848" endtime="20201029 18:18:16.122"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.138" endtime="20201029 18:18:16.159"></status>
</kw>
<msg timestamp="20201029 18:18:16.160" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.136" endtime="20201029 18:18:16.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.162" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.161" endtime="20201029 18:18:16.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.165" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:16.163" endtime="20201029 18:18:16.166"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:16.133" endtime="20201029 18:18:16.166"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:16.130" endtime="20201029 18:18:16.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.128" endtime="20201029 18:18:16.167"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:16.172" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:16.171" endtime="20201029 18:18:16.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.168" endtime="20201029 18:18:16.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.127" endtime="20201029 18:18:16.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.126" endtime="20201029 18:18:16.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.173" endtime="20201029 18:18:16.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.125" endtime="20201029 18:18:16.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.176" endtime="20201029 18:18:16.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.123" endtime="20201029 18:18:16.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:13.739" endtime="20201029 18:18:16.179"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:16.185" endtime="20201029 18:18:16.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.183" endtime="20201029 18:18:16.204"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.218" endtime="20201029 18:18:16.236"></status>
</kw>
<msg timestamp="20201029 18:18:16.236" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.216" endtime="20201029 18:18:16.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.239" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.237" endtime="20201029 18:18:16.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.242" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:16.240" endtime="20201029 18:18:16.242"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:16.214" endtime="20201029 18:18:16.243"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:16.211" endtime="20201029 18:18:16.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.210" endtime="20201029 18:18:16.244"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:16.247" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:16.247" endtime="20201029 18:18:16.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.244" endtime="20201029 18:18:16.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.209" endtime="20201029 18:18:16.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.209" endtime="20201029 18:18:16.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.249" endtime="20201029 18:18:16.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.207" endtime="20201029 18:18:16.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.205" endtime="20201029 18:18:16.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.182" endtime="20201029 18:18:16.252"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.262" endtime="20201029 18:18:16.279"></status>
</kw>
<msg timestamp="20201029 18:18:16.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.261" endtime="20201029 18:18:16.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.281" endtime="20201029 18:18:16.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.283" endtime="20201029 18:18:16.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.257" endtime="20201029 18:18:16.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.255" endtime="20201029 18:18:16.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.292" endtime="20201029 18:18:16.581"></status>
</kw>
<msg timestamp="20201029 18:18:16.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068138403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068160972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.291" endtime="20201029 18:18:16.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068138403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068160972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.586" endtime="20201029 18:18:16.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.594" endtime="20201029 18:18:16.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.288" endtime="20201029 18:18:16.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.286" endtime="20201029 18:18:16.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:16.601" level="INFO">${RESULT} = [{'diff': 2.256900000000006e-05}, {'diff': 1.4388000000004064e-05}, {'diff': 1.4181000000001998e-05}, {'diff': 1.412499999998984e-05}, {'diff': 1.3541999999991394e-05}, {'diff': 1.3902999999995669e-05...</msg>
<status status="PASS" starttime="20201029 18:18:16.597" endtime="20201029 18:18:16.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:16.605" level="INFO">${ACCURACY} = {'diff': [2.256900000000006e-05, 1.4388000000004064e-05, 1.4181000000001998e-05, 1.412499999998984e-05, 1.3541999999991394e-05, 1.3902999999995669e-05, 1.4098000000004052e-05, 1.3929999999995335e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:16.602" endtime="20201029 18:18:16.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.610" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 18:18:16.609" endtime="20201029 18:18:16.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.612" level="INFO">VALUE: [2.256900000000006e-05, 1.4388000000004064e-05, 1.4181000000001998e-05, 1.412499999998984e-05, 1.3541999999991394e-05, 1.3902999999995669e-05, 1.4098000000004052e-05, 1.3929999999995335e-05, 1.35969999999902e-05, 1.3929999999995335e-05, 1.4361000000004398e-05, 1.40969999999907e-05, 1.4250000000007312e-05, 1.3916000000002704e-05, 1.4250000000007312e-05, 1.4041000000006298e-05, 1.4416000000003204e-05, 1.4430000000009713e-05, 1.3889000000003038e-05, 1.4193999999995155e-05, 1.3986000000007492e-05, 1.4361000000004398e-05, 1.3708000000001164e-05, 1.4027999999999263e-05, 1.4361000000004398e-05, 1.434699999999789e-05, 1.3736000000000304e-05, 1.4110999999997209e-05, 1.383299999999088e-05, 1.3791999999998583e-05, 1.3930999999994809e-05, 1.4263999999999943e-05, 1.4236000000000804e-05, 1.3610999999996709e-05, 1.4208000000001664e-05, 1.3722000000007673e-05, 1.4042000000005772e-05, 1.3597000000004078e-05, 1.4291999999999083e-05, 1.4110999999997209e-05, 1.3735999999986426e-05, 1.4194999999994629e-05, 1.3666999999994989e-05, 1.4194999999994629e-05, 1.4013999999992754e-05, 1.4403000000010047e-05, 1.4347999999997363e-05, 1.4292000000012961e-05, 1.4110999999997209e-05, 1.3791999999998583e-05]</msg>
<status status="PASS" starttime="20201029 18:18:16.611" endtime="20201029 18:18:16.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.606" endtime="20201029 18:18:16.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:16.617" endtime="20201029 18:18:16.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.615" endtime="20201029 18:18:16.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.614" endtime="20201029 18:18:16.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.253" endtime="20201029 18:18:16.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.253" endtime="20201029 18:18:16.637"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.646" endtime="20201029 18:18:16.664"></status>
</kw>
<msg timestamp="20201029 18:18:16.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.645" endtime="20201029 18:18:16.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:16.666" endtime="20201029 18:18:16.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.669" endtime="20201029 18:18:16.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.642" endtime="20201029 18:18:16.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.640" endtime="20201029 18:18:16.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.682" endtime="20201029 18:18:16.969"></status>
</kw>
<msg timestamp="20201029 18:18:16.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019370708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019385042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.679" endtime="20201029 18:18:16.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:16.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019370708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019385042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:16.974" endtime="20201029 18:18:16.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:16.986" endtime="20201029 18:18:16.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.676" endtime="20201029 18:18:16.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.673" endtime="20201029 18:18:16.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:16.995" level="INFO">${RESULT} = [{'diff': 1.4334000000001262e-05}, {'diff': 1.3848000000000332e-05}, {'diff': 1.4306000000002123e-05}, {'diff': 1.3680999999998028e-05}, {'diff': 1.3736000000000304e-05}, {'diff': 1.3986000000000554e-...</msg>
<status status="PASS" starttime="20201029 18:18:16.991" endtime="20201029 18:18:16.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:17.000" level="INFO">${ACCURACY} = {'diff': [1.4334000000001262e-05, 1.3848000000000332e-05, 1.4306000000002123e-05, 1.3680999999998028e-05, 1.3736000000000304e-05, 1.3986000000000554e-05, 1.3791000000002579e-05, 1.4027999999999263e-05...</msg>
<status status="PASS" starttime="20201029 18:18:16.996" endtime="20201029 18:18:17.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.005" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 18:18:17.004" endtime="20201029 18:18:17.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.008" level="INFO">VALUE: [1.4334000000001262e-05, 1.3848000000000332e-05, 1.4306000000002123e-05, 1.3680999999998028e-05, 1.3736000000000304e-05, 1.3986000000000554e-05, 1.3791000000002579e-05, 1.4027999999999263e-05, 1.4402999999999638e-05, 1.4457999999998444e-05, 1.3902999999999138e-05, 1.4041999999998833e-05, 1.4472000000001484e-05, 1.3860999999996959e-05, 1.4263999999999943e-05, 1.3666000000002454e-05, 1.4097000000001109e-05, 1.3847000000000859e-05, 1.4402999999999638e-05, 1.3915999999999235e-05, 1.4457999999998444e-05, 1.3722000000000734e-05, 1.4430000000002774e-05, 1.4402999999999638e-05, 1.3666000000002454e-05, 1.383299999999782e-05, 1.3861000000000429e-05, 1.3624999999999748e-05, 1.431899999999875e-05, 1.3916000000002704e-05, 1.4486000000001054e-05, 1.3639000000002788e-05, 1.4415999999999735e-05, 1.3528000000002233e-05, 1.3708000000001164e-05, 1.3625000000003218e-05, 1.4277999999999513e-05, 1.4013999999999693e-05, 1.3902999999999138e-05, 1.4000000000000123e-05, 1.4167000000002428e-05, 1.4194000000002094e-05, 1.4416999999999208e-05, 1.4056000000001873e-05, 1.4222000000001234e-05, 1.3806000000001623e-05, 1.4416999999999208e-05, 1.4041999999998833e-05, 1.4334000000001262e-05, 1.4166999999998958e-05]</msg>
<status status="PASS" starttime="20201029 18:18:17.006" endtime="20201029 18:18:17.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.001" endtime="20201029 18:18:17.009"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:17.013" endtime="20201029 18:18:17.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.011" endtime="20201029 18:18:17.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.010" endtime="20201029 18:18:17.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.638" endtime="20201029 18:18:17.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.638" endtime="20201029 18:18:17.033"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.042" endtime="20201029 18:18:17.061"></status>
</kw>
<msg timestamp="20201029 18:18:17.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.040" endtime="20201029 18:18:17.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.064" endtime="20201029 18:18:17.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.070" endtime="20201029 18:18:17.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.038" endtime="20201029 18:18:17.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.036" endtime="20201029 18:18:17.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.089" endtime="20201029 18:18:17.381"></status>
</kw>
<msg timestamp="20201029 18:18:17.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019474222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019487806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.087" endtime="20201029 18:18:17.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019474222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019487806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.385" endtime="20201029 18:18:17.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.393" endtime="20201029 18:18:17.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.081" endtime="20201029 18:18:17.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.078" endtime="20201029 18:18:17.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:17.400" level="INFO">${RESULT} = [{'diff': 1.3584000000000512e-05}, {'diff': 1.4112000000000152e-05}, {'diff': 1.4111000000000679e-05}, {'diff': 1.383299999999782e-05}, {'diff': 1.4348000000000832e-05}, {'diff': 1.3612000000003122e-0...</msg>
<status status="PASS" starttime="20201029 18:18:17.397" endtime="20201029 18:18:17.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:17.404" level="INFO">${ACCURACY} = {'diff': [1.3584000000000512e-05, 1.4112000000000152e-05, 1.4111000000000679e-05, 1.383299999999782e-05, 1.4348000000000832e-05, 1.3612000000003122e-05, 1.3611000000000179e-05, 1.3736000000000304e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:17.401" endtime="20201029 18:18:17.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.408" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 18:18:17.407" endtime="20201029 18:18:17.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.411" level="INFO">VALUE: [1.3584000000000512e-05, 1.4112000000000152e-05, 1.4111000000000679e-05, 1.383299999999782e-05, 1.4348000000000832e-05, 1.3612000000003122e-05, 1.3611000000000179e-05, 1.3736000000000304e-05, 1.3736000000000304e-05, 1.3861000000000429e-05, 1.3971999999997514e-05, 1.4112000000000152e-05, 1.427700000000004e-05, 1.3944000000001844e-05, 1.3860999999996959e-05, 1.3651999999999415e-05, 1.3971999999997514e-05, 1.4111000000000679e-05, 1.429099999999961e-05, 1.4069000000001969e-05, 1.3902999999999138e-05, 1.4222000000001234e-05, 1.3777999999999013e-05, 1.3901999999999665e-05, 1.4430999999998778e-05, 1.404099999999936e-05, 1.3624999999999748e-05, 1.4097000000001109e-05, 1.4347000000001359e-05, 1.4417000000002678e-05, 1.4375000000000498e-05, 1.4221999999997764e-05, 1.4457999999998444e-05, 1.3611000000000179e-05, 1.3653000000002358e-05, 1.3695000000001067e-05, 1.4514000000000193e-05, 1.3930999999998278e-05, 1.3652999999998888e-05, 1.4000000000000123e-05, 1.452700000000029e-05, 1.4375000000000498e-05, 1.3945000000001317e-05, 1.4305999999998653e-05, 1.3874999999999998e-05, 1.3986000000000554e-05, 1.3680999999998028e-05, 1.4472000000001484e-05, 1.3986000000000554e-05, 1.4125000000000248e-05]</msg>
<status status="PASS" starttime="20201029 18:18:17.409" endtime="20201029 18:18:17.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.405" endtime="20201029 18:18:17.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:17.415" endtime="20201029 18:18:17.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.414" endtime="20201029 18:18:17.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.412" endtime="20201029 18:18:17.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.034" endtime="20201029 18:18:17.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.034" endtime="20201029 18:18:17.436"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.445" endtime="20201029 18:18:17.462"></status>
</kw>
<msg timestamp="20201029 18:18:17.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.443" endtime="20201029 18:18:17.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.464" endtime="20201029 18:18:17.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.467" endtime="20201029 18:18:17.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.440" endtime="20201029 18:18:17.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.438" endtime="20201029 18:18:17.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.476" endtime="20201029 18:18:17.761"></status>
</kw>
<msg timestamp="20201029 18:18:17.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020179361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020193167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.474" endtime="20201029 18:18:17.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020179361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020193167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.766" endtime="20201029 18:18:17.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.774" endtime="20201029 18:18:17.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.472" endtime="20201029 18:18:17.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.470" endtime="20201029 18:18:17.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:17.781" level="INFO">${RESULT} = [{'diff': 1.3806000000001623e-05}, {'diff': 1.3792000000002053e-05}, {'diff': 1.3985999999997084e-05}, {'diff': 1.3916999999998708e-05}, {'diff': 1.3598000000000082e-05}, {'diff': 1.3556000000001373e-...</msg>
<status status="PASS" starttime="20201029 18:18:17.777" endtime="20201029 18:18:17.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:17.785" level="INFO">${ACCURACY} = {'diff': [1.3806000000001623e-05, 1.3792000000002053e-05, 1.3985999999997084e-05, 1.3916999999998708e-05, 1.3598000000000082e-05, 1.3556000000001373e-05, 1.4098000000000582e-05, 1.3847000000000859e-05...</msg>
<status status="PASS" starttime="20201029 18:18:17.782" endtime="20201029 18:18:17.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.789" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 18:18:17.788" endtime="20201029 18:18:17.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.792" level="INFO">VALUE: [1.3806000000001623e-05, 1.3792000000002053e-05, 1.3985999999997084e-05, 1.3916999999998708e-05, 1.3598000000000082e-05, 1.3556000000001373e-05, 1.4098000000000582e-05, 1.3847000000000859e-05, 1.3834000000000762e-05, 1.3874999999999998e-05, 1.3680999999998028e-05, 1.4361000000000929e-05, 1.3888000000000095e-05, 1.4389000000000068e-05, 1.4237000000000277e-05, 1.4027999999999263e-05, 1.4180000000002524e-05, 1.377699999999954e-05, 1.3985999999997084e-05, 1.4222000000001234e-05, 1.404099999999936e-05, 1.4083000000001539e-05, 1.4165999999999485e-05, 1.4250000000000373e-05, 1.3722000000000734e-05, 1.3916000000002704e-05, 1.4360999999997459e-05, 1.3665999999998985e-05, 1.4193999999998624e-05, 1.4486000000001054e-05, 1.3611000000000179e-05, 1.3986000000000554e-05, 1.4208000000001664e-05, 1.3694000000001594e-05, 1.405499999999893e-05, 1.4000000000000123e-05, 1.4443999999998874e-05, 1.4305999999998653e-05, 1.3791999999998583e-05, 1.4333999999997793e-05, 1.4070000000001442e-05, 1.4472000000001484e-05, 1.3541999999998333e-05, 1.4097000000001109e-05, 1.4056000000001873e-05, 1.3542000000001803e-05, 1.4111000000000679e-05, 1.3638999999999318e-05, 1.3584000000000512e-05, 1.3624999999999748e-05]</msg>
<status status="PASS" starttime="20201029 18:18:17.790" endtime="20201029 18:18:17.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.786" endtime="20201029 18:18:17.793"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:17.797" endtime="20201029 18:18:17.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.796" endtime="20201029 18:18:17.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.794" endtime="20201029 18:18:17.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.437" endtime="20201029 18:18:17.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.436" endtime="20201029 18:18:17.818"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.827" endtime="20201029 18:18:17.844"></status>
</kw>
<msg timestamp="20201029 18:18:17.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.825" endtime="20201029 18:18:17.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:17.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:17.845" endtime="20201029 18:18:17.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.848" endtime="20201029 18:18:17.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.822" endtime="20201029 18:18:17.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.820" endtime="20201029 18:18:17.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:17.857" endtime="20201029 18:18:18.143"></status>
</kw>
<msg timestamp="20201029 18:18:18.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019689708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019703722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:17.855" endtime="20201029 18:18:18.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019689708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019703722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.147" endtime="20201029 18:18:18.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.155" endtime="20201029 18:18:18.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.853" endtime="20201029 18:18:18.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.851" endtime="20201029 18:18:18.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:18.161" level="INFO">${RESULT} = [{'diff': 1.4013999999999693e-05}, {'diff': 1.380499999999868e-05}, {'diff': 1.408299999999807e-05}, {'diff': 1.4165999999999485e-05}, {'diff': 1.4097000000001109e-05}, {'diff': 1.4165999999999485e-05...</msg>
<status status="PASS" starttime="20201029 18:18:18.158" endtime="20201029 18:18:18.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:18.166" level="INFO">${ACCURACY} = {'diff': [1.4013999999999693e-05, 1.380499999999868e-05, 1.408299999999807e-05, 1.4165999999999485e-05, 1.4097000000001109e-05, 1.4165999999999485e-05, 1.431899999999875e-05, 1.405499999999893e-05, 1....</msg>
<status status="PASS" starttime="20201029 18:18:18.162" endtime="20201029 18:18:18.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.171" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 18:18:18.170" endtime="20201029 18:18:18.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.173" level="INFO">VALUE: [1.4013999999999693e-05, 1.380499999999868e-05, 1.408299999999807e-05, 1.4165999999999485e-05, 1.4097000000001109e-05, 1.4165999999999485e-05, 1.431899999999875e-05, 1.405499999999893e-05, 1.3652000000002884e-05, 1.3679999999998554e-05, 1.4471999999998014e-05, 1.3653000000002358e-05, 1.4124999999996779e-05, 1.3722000000000734e-05, 1.4277999999999513e-05, 1.4444000000002344e-05, 1.3541999999998333e-05, 1.4333000000001789e-05, 1.3597000000000609e-05, 1.4374999999997029e-05, 1.4125000000000248e-05, 1.4000000000000123e-05, 1.3931000000001748e-05, 1.4361000000000929e-05, 1.3736000000000304e-05, 1.4430999999998778e-05, 1.3597000000000609e-05, 1.3806000000001623e-05, 1.3986000000000554e-05, 1.3681000000001498e-05, 1.3888999999999568e-05, 1.4375000000000498e-05, 1.3722000000000734e-05, 1.3736000000000304e-05, 1.4292000000002553e-05, 1.4430999999998778e-05, 1.3861999999999902e-05, 1.3555999999997903e-05, 1.4291999999999083e-05, 1.4500000000000624e-05, 1.4167000000002428e-05, 1.40689999999985e-05, 1.409699999999764e-05, 1.4415999999999735e-05, 1.4443999999998874e-05, 1.4429999999999304e-05, 1.4237000000000277e-05, 1.4402999999999638e-05, 1.3653000000002358e-05, 1.451300000000072e-05]</msg>
<status status="PASS" starttime="20201029 18:18:18.172" endtime="20201029 18:18:18.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.167" endtime="20201029 18:18:18.174"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:18.178" endtime="20201029 18:18:18.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.176" endtime="20201029 18:18:18.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.175" endtime="20201029 18:18:18.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.818" endtime="20201029 18:18:18.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:17.818" endtime="20201029 18:18:18.199"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.210" endtime="20201029 18:18:18.229"></status>
</kw>
<msg timestamp="20201029 18:18:18.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.208" endtime="20201029 18:18:18.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.231" endtime="20201029 18:18:18.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.234" endtime="20201029 18:18:18.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.205" endtime="20201029 18:18:18.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.203" endtime="20201029 18:18:18.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.243" endtime="20201029 18:18:18.528"></status>
</kw>
<msg timestamp="20201029 18:18:18.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022967556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022981625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.242" endtime="20201029 18:18:18.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022967556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022981625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.532" endtime="20201029 18:18:18.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.541" endtime="20201029 18:18:18.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.239" endtime="20201029 18:18:18.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.237" endtime="20201029 18:18:18.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:18.547" level="INFO">${RESULT} = [{'diff': 1.40689999999985e-05}, {'diff': 1.4291999999999083e-05}, {'diff': 1.3749999999999873e-05}, {'diff': 1.454099999999986e-05}, {'diff': 1.4360999999997459e-05}, {'diff': 1.4375000000000498e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:18.544" endtime="20201029 18:18:18.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:18.551" level="INFO">${ACCURACY} = {'diff': [1.40689999999985e-05, 1.4291999999999083e-05, 1.3749999999999873e-05, 1.454099999999986e-05, 1.4360999999997459e-05, 1.4375000000000498e-05, 1.4195000000001567e-05, 1.3569999999997473e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:18:18.548" endtime="20201029 18:18:18.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.556" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 18:18:18.555" endtime="20201029 18:18:18.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.558" level="INFO">VALUE: [1.40689999999985e-05, 1.4291999999999083e-05, 1.3749999999999873e-05, 1.454099999999986e-05, 1.4360999999997459e-05, 1.4375000000000498e-05, 1.4195000000001567e-05, 1.3569999999997473e-05, 1.4195000000001567e-05, 1.3833000000001289e-05, 1.4167000000002428e-05, 1.3499999999999623e-05, 1.3999999999996654e-05, 1.4041999999998833e-05, 1.3986000000000554e-05, 1.4445000000001817e-05, 1.4111000000000679e-05, 1.3722000000000734e-05, 1.4194999999998098e-05, 1.3624999999999748e-05, 1.3598000000000082e-05, 1.4417000000002678e-05, 1.4084000000001012e-05, 1.4194000000002094e-05, 1.3916999999998708e-05, 1.40689999999985e-05, 1.4223000000000707e-05, 1.3806000000001623e-05, 1.3722999999996738e-05, 1.3638999999999318e-05, 1.3763999999999443e-05, 1.405499999999893e-05, 1.377699999999954e-05, 1.3986000000000554e-05, 1.3805000000002149e-05, 1.3929999999998804e-05, 1.4165999999999485e-05, 1.4179999999999054e-05, 1.3597000000000609e-05, 1.3597000000000609e-05, 1.429099999999961e-05, 1.3708000000001164e-05, 1.3610999999996709e-05, 1.3805999999998153e-05, 1.3624999999999748e-05, 1.4291999999999083e-05, 1.3679999999998554e-05, 1.4443999999998874e-05, 1.434699999999789e-05, 1.3806000000001623e-05]</msg>
<status status="PASS" starttime="20201029 18:18:18.557" endtime="20201029 18:18:18.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.552" endtime="20201029 18:18:18.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:18.563" endtime="20201029 18:18:18.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.561" endtime="20201029 18:18:18.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.560" endtime="20201029 18:18:18.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.200" endtime="20201029 18:18:18.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.199" endtime="20201029 18:18:18.584"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.592" endtime="20201029 18:18:18.611"></status>
</kw>
<msg timestamp="20201029 18:18:18.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.591" endtime="20201029 18:18:18.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.612" endtime="20201029 18:18:18.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.615" endtime="20201029 18:18:18.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.588" endtime="20201029 18:18:18.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.586" endtime="20201029 18:18:18.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.623" endtime="20201029 18:18:18.909"></status>
</kw>
<msg timestamp="20201029 18:18:18.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020153639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020167347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.622" endtime="20201029 18:18:18.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020153639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020167347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:18.913" endtime="20201029 18:18:18.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.921" endtime="20201029 18:18:18.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.619" endtime="20201029 18:18:18.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.618" endtime="20201029 18:18:18.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:18.928" level="INFO">${RESULT} = [{'diff': 1.3707999999997694e-05}, {'diff': 1.3777999999999013e-05}, {'diff': 1.4111000000000679e-05}, {'diff': 1.355499999999843e-05}, {'diff': 1.3929999999998804e-05}, {'diff': 1.3611000000000179e-0...</msg>
<status status="PASS" starttime="20201029 18:18:18.925" endtime="20201029 18:18:18.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:18.932" level="INFO">${ACCURACY} = {'diff': [1.3707999999997694e-05, 1.3777999999999013e-05, 1.4111000000000679e-05, 1.355499999999843e-05, 1.3929999999998804e-05, 1.3611000000000179e-05, 1.3847000000000859e-05, 1.3542000000001803e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:18.929" endtime="20201029 18:18:18.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.937" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 18:18:18.936" endtime="20201029 18:18:18.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.939" level="INFO">VALUE: [1.3707999999997694e-05, 1.3777999999999013e-05, 1.4111000000000679e-05, 1.355499999999843e-05, 1.3929999999998804e-05, 1.3611000000000179e-05, 1.3847000000000859e-05, 1.3542000000001803e-05, 1.3986000000000554e-05, 1.3556000000001373e-05, 1.3583999999997043e-05, 1.3638999999999318e-05, 1.3916999999998708e-05, 1.4291999999999083e-05, 1.384699999999739e-05, 1.4486000000001054e-05, 1.4431000000002248e-05, 1.3806000000001623e-05, 1.3805999999998153e-05, 1.3888999999999568e-05, 1.3902999999999138e-05, 1.4195000000001567e-05, 1.4402999999999638e-05, 1.4389000000000068e-05, 1.4500000000000624e-05, 1.4250000000000373e-05, 1.4084000000001012e-05, 1.3944999999997848e-05, 1.3527999999998763e-05, 1.4152999999999388e-05, 1.3916999999998708e-05, 1.3652999999998888e-05, 1.3820000000001192e-05, 1.3749999999999873e-05, 1.3763999999999443e-05, 1.3598000000000082e-05, 1.4277999999999513e-05, 1.4152999999999388e-05, 1.4194999999998098e-05, 1.3986000000000554e-05, 1.3874999999999998e-05, 1.3987000000000027e-05, 1.379099999999911e-05, 1.379099999999911e-05, 1.3541000000002329e-05, 1.3597000000000609e-05, 1.3736000000000304e-05, 1.3958000000001414e-05, 1.3680000000002024e-05, 1.3708000000001164e-05]</msg>
<status status="PASS" starttime="20201029 18:18:18.938" endtime="20201029 18:18:18.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.933" endtime="20201029 18:18:18.941"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:18.945" endtime="20201029 18:18:18.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.943" endtime="20201029 18:18:18.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.942" endtime="20201029 18:18:18.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.585" endtime="20201029 18:18:18.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.584" endtime="20201029 18:18:18.965"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.974" endtime="20201029 18:18:18.991"></status>
</kw>
<msg timestamp="20201029 18:18:18.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.972" endtime="20201029 18:18:18.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:18.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:18.992" endtime="20201029 18:18:18.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:18.995" endtime="20201029 18:18:18.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.970" endtime="20201029 18:18:18.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.968" endtime="20201029 18:18:18.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.004" endtime="20201029 18:18:19.288"></status>
</kw>
<msg timestamp="20201029 18:18:19.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019408097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019422208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:19.002" endtime="20201029 18:18:19.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019408097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019422208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:19.292" endtime="20201029 18:18:19.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.300" endtime="20201029 18:18:19.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.000" endtime="20201029 18:18:19.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.998" endtime="20201029 18:18:19.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:19.307" level="INFO">${RESULT} = [{'diff': 1.4111000000000679e-05}, {'diff': 1.430499999999918e-05}, {'diff': 1.3874999999999998e-05}, {'diff': 1.3805000000002149e-05}, {'diff': 1.4347000000001359e-05}, {'diff': 1.429099999999961e-05...</msg>
<status status="PASS" starttime="20201029 18:18:19.304" endtime="20201029 18:18:19.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:19.312" level="INFO">${ACCURACY} = {'diff': [1.4111000000000679e-05, 1.430499999999918e-05, 1.3874999999999998e-05, 1.3805000000002149e-05, 1.4347000000001359e-05, 1.429099999999961e-05, 1.3624999999999748e-05, 1.4305000000002649e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:19.308" endtime="20201029 18:18:19.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.316" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 18:18:19.315" endtime="20201029 18:18:19.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.319" level="INFO">VALUE: [1.4111000000000679e-05, 1.430499999999918e-05, 1.3874999999999998e-05, 1.3805000000002149e-05, 1.4347000000001359e-05, 1.429099999999961e-05, 1.3624999999999748e-05, 1.4305000000002649e-05, 1.3943999999998374e-05, 1.4111000000000679e-05, 1.3929999999998804e-05, 1.3833000000001289e-05, 1.4486000000001054e-05, 1.3943999999998374e-05, 1.3986000000000554e-05, 1.4416999999999208e-05, 1.4221999999997764e-05, 1.4013999999999693e-05, 1.3777999999999013e-05, 1.3624999999999748e-05, 1.4041999999998833e-05, 1.4110999999997209e-05, 1.3665999999998985e-05, 1.4083000000001539e-05, 1.4292000000002553e-05, 1.4070000000001442e-05, 1.3791999999998583e-05, 1.3542000000001803e-05, 1.3541999999998333e-05, 1.3986000000000554e-05, 1.4152999999999388e-05, 1.4486000000001054e-05, 1.3749999999999873e-05, 1.4097000000001109e-05, 1.4250000000000373e-05, 1.4402999999999638e-05, 1.4277999999999513e-05, 1.4236000000000804e-05, 1.3667000000001928e-05, 1.4166999999998958e-05, 1.3569999999997473e-05, 1.4513999999996724e-05, 1.3986000000000554e-05, 1.3930999999998278e-05, 1.3749999999999873e-05, 1.4055999999998403e-05, 1.4223000000000707e-05, 1.4180000000002524e-05, 1.3527999999998763e-05, 1.4013999999999693e-05]</msg>
<status status="PASS" starttime="20201029 18:18:19.317" endtime="20201029 18:18:19.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.313" endtime="20201029 18:18:19.320"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:19.324" endtime="20201029 18:18:19.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.322" endtime="20201029 18:18:19.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.321" endtime="20201029 18:18:19.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.966" endtime="20201029 18:18:19.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:18.966" endtime="20201029 18:18:19.344"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.353" endtime="20201029 18:18:19.370"></status>
</kw>
<msg timestamp="20201029 18:18:19.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.351" endtime="20201029 18:18:19.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.371" endtime="20201029 18:18:19.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.374" endtime="20201029 18:18:19.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.349" endtime="20201029 18:18:19.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.347" endtime="20201029 18:18:19.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.383" endtime="20201029 18:18:19.670"></status>
</kw>
<msg timestamp="20201029 18:18:19.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019121514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019135417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:19.381" endtime="20201029 18:18:19.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019121514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019135417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:19.674" endtime="20201029 18:18:19.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.682" endtime="20201029 18:18:19.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.379" endtime="20201029 18:18:19.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.377" endtime="20201029 18:18:19.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:19.689" level="INFO">${RESULT} = [{'diff': 1.3902999999999138e-05}, {'diff': 1.3736999999999777e-05}, {'diff': 1.3778000000002483e-05}, {'diff': 1.3806000000001623e-05}, {'diff': 1.3958000000001414e-05}, {'diff': 1.3542000000001803e-...</msg>
<status status="PASS" starttime="20201029 18:18:19.686" endtime="20201029 18:18:19.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:19.693" level="INFO">${ACCURACY} = {'diff': [1.3902999999999138e-05, 1.3736999999999777e-05, 1.3778000000002483e-05, 1.3806000000001623e-05, 1.3958000000001414e-05, 1.3542000000001803e-05, 1.4013999999999693e-05, 1.4291000000003079e-05...</msg>
<status status="PASS" starttime="20201029 18:18:19.690" endtime="20201029 18:18:19.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.697" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 18:18:19.696" endtime="20201029 18:18:19.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.699" level="INFO">VALUE: [1.3902999999999138e-05, 1.3736999999999777e-05, 1.3778000000002483e-05, 1.3806000000001623e-05, 1.3958000000001414e-05, 1.3542000000001803e-05, 1.4013999999999693e-05, 1.4291000000003079e-05, 1.4084000000001012e-05, 1.4444000000002344e-05, 1.4223000000000707e-05, 1.4027999999999263e-05, 1.3736000000000304e-05, 1.4151999999999915e-05, 1.3848000000000332e-05, 1.3639000000002788e-05, 1.3791000000002579e-05, 1.3777000000003009e-05, 1.3722000000000734e-05, 1.4165999999999485e-05, 1.4110999999997209e-05, 1.4222000000001234e-05, 1.4222000000001234e-05, 1.4250000000000373e-05, 1.429099999999961e-05, 1.4263999999999943e-05, 1.3708000000001164e-05, 1.3707999999997694e-05, 1.3472000000000484e-05, 1.433299999999832e-05, 1.4179999999999054e-05, 1.3555000000001899e-05, 1.3806000000001623e-05, 1.4458000000001914e-05, 1.4098000000000582e-05, 1.4291999999999083e-05, 1.4429999999999304e-05, 1.4416999999999208e-05, 1.4443999999998874e-05, 1.4402999999999638e-05, 1.3986000000000554e-05, 1.3944000000001844e-05, 1.4429999999999304e-05, 1.4305999999998653e-05, 1.4250000000000373e-05, 1.3930999999998278e-05, 1.3556000000001373e-05, 1.4181000000001998e-05, 1.3722000000000734e-05, 1.3611000000000179e-05]</msg>
<status status="PASS" starttime="20201029 18:18:19.698" endtime="20201029 18:18:19.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.694" endtime="20201029 18:18:19.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:19.704" endtime="20201029 18:18:19.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.703" endtime="20201029 18:18:19.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.702" endtime="20201029 18:18:19.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.345" endtime="20201029 18:18:19.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.345" endtime="20201029 18:18:19.725"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.734" endtime="20201029 18:18:19.754"></status>
</kw>
<msg timestamp="20201029 18:18:19.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.732" endtime="20201029 18:18:19.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:19.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:19.756" endtime="20201029 18:18:19.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.758" endtime="20201029 18:18:19.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.730" endtime="20201029 18:18:19.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.728" endtime="20201029 18:18:19.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:19.767" endtime="20201029 18:18:20.052"></status>
</kw>
<msg timestamp="20201029 18:18:20.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02259025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:19.765" endtime="20201029 18:18:20.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02259025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:20.057" endtime="20201029 18:18:20.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.065" endtime="20201029 18:18:20.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.763" endtime="20201029 18:18:20.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.761" endtime="20201029 18:18:20.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:20.071" level="INFO">${RESULT} = [{'diff': 1.3666999999998458e-05}, {'diff': 1.4166999999998958e-05}, {'diff': 1.4209000000001137e-05}, {'diff': 1.4459000000001387e-05}, {'diff': 1.3972000000000984e-05}, {'diff': 1.4444000000002344e-...</msg>
<status status="PASS" starttime="20201029 18:18:20.068" endtime="20201029 18:18:20.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:20.075" level="INFO">${ACCURACY} = {'diff': [1.3666999999998458e-05, 1.4166999999998958e-05, 1.4209000000001137e-05, 1.4459000000001387e-05, 1.3972000000000984e-05, 1.4444000000002344e-05, 1.4083999999997543e-05, 1.3610999999996709e-05...</msg>
<status status="PASS" starttime="20201029 18:18:20.072" endtime="20201029 18:18:20.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.080" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 18:18:20.079" endtime="20201029 18:18:20.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.082" level="INFO">VALUE: [1.3666999999998458e-05, 1.4166999999998958e-05, 1.4209000000001137e-05, 1.4459000000001387e-05, 1.3972000000000984e-05, 1.4444000000002344e-05, 1.4083999999997543e-05, 1.3610999999996709e-05, 1.3667000000001928e-05, 1.3556000000001373e-05, 1.3874999999999998e-05, 1.4361000000000929e-05, 1.3570000000000942e-05, 1.4361000000000929e-05, 1.3680999999998028e-05, 1.3722000000000734e-05, 1.3527999999998763e-05, 1.3834000000000762e-05, 1.4181000000001998e-05, 1.3929999999998804e-05, 1.3806000000001623e-05, 1.4250000000000373e-05, 1.4473000000000957e-05, 1.358299999999757e-05, 1.4347999999997363e-05, 1.3721999999997264e-05, 1.4249999999996904e-05, 1.3792000000002053e-05, 1.4041999999998833e-05, 1.3528000000002233e-05, 1.4112000000000152e-05, 1.4112000000000152e-05, 1.3667000000001928e-05, 1.3902999999999138e-05, 1.404099999999936e-05, 1.3749999999999873e-05, 1.355499999999843e-05, 1.429099999999961e-05, 1.3541000000002329e-05, 1.3915999999999235e-05, 1.4458000000001914e-05, 1.4179999999999054e-05, 1.381899999999825e-05, 1.3805000000002149e-05, 1.4111000000000679e-05, 1.430499999999918e-05, 1.4486000000001054e-05, 1.4319000000002219e-05, 1.3972000000000984e-05, 1.3597000000000609e-05]</msg>
<status status="PASS" starttime="20201029 18:18:20.081" endtime="20201029 18:18:20.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.076" endtime="20201029 18:18:20.084"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:20.088" endtime="20201029 18:18:20.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.086" endtime="20201029 18:18:20.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.085" endtime="20201029 18:18:20.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.726" endtime="20201029 18:18:20.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:19.726" endtime="20201029 18:18:20.109"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.117" endtime="20201029 18:18:20.134"></status>
</kw>
<msg timestamp="20201029 18:18:20.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.116" endtime="20201029 18:18:20.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.136" endtime="20201029 18:18:20.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.138" endtime="20201029 18:18:20.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.113" endtime="20201029 18:18:20.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.111" endtime="20201029 18:18:20.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.147" endtime="20201029 18:18:20.433"></status>
</kw>
<msg timestamp="20201029 18:18:20.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019326111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019340931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.146" endtime="20201029 18:18:20.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019326111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019340931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.437" endtime="20201029 18:18:20.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.445" endtime="20201029 18:18:20.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.143" endtime="20201029 18:18:20.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.141" endtime="20201029 18:18:20.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:20.451" level="INFO">${RESULT} = [{'diff': 1.4819999999998723e-05}, {'diff': 1.536100000000193e-05}, {'diff': 1.5222999999998238e-05}, {'diff': 1.4972999999997988e-05}, {'diff': 1.5180000000000055e-05}, {'diff': 1.5347999999998363e-0...</msg>
<status status="PASS" starttime="20201029 18:18:20.448" endtime="20201029 18:18:20.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:20.456" level="INFO">${ACCURACY} = {'diff': [1.4819999999998723e-05, 1.536100000000193e-05, 1.5222999999998238e-05, 1.4972999999997988e-05, 1.5180000000000055e-05, 1.5347999999998363e-05, 1.5388000000001595e-05, 1.533299999999932e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:20.452" endtime="20201029 18:18:20.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.461" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 18:18:20.460" endtime="20201029 18:18:20.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.463" level="INFO">VALUE: [1.4819999999998723e-05, 1.536100000000193e-05, 1.5222999999998238e-05, 1.4972999999997988e-05, 1.5180000000000055e-05, 1.5347999999998363e-05, 1.5388000000001595e-05, 1.533299999999932e-05, 1.527699999999757e-05, 1.534699999999889e-05, 1.4555000000002899e-05, 1.452700000000029e-05, 1.4971999999998514e-05, 1.455499999999943e-05, 1.4583000000002039e-05, 1.5236000000001804e-05, 1.455499999999943e-05, 1.479100000000011e-05, 1.4639000000000318e-05, 1.4527999999999763e-05, 1.4957999999998944e-05, 1.4625000000000749e-05, 1.5055999999999403e-05, 1.5430000000000305e-05, 1.536099999999846e-05, 1.5319999999999223e-05, 1.534699999999889e-05, 1.5388000000001595e-05, 1.4791999999999583e-05, 1.531899999999975e-05, 1.5305999999999653e-05, 1.5221999999998764e-05, 1.4611000000001179e-05, 1.4764000000000443e-05, 1.5485999999998584e-05, 1.5305999999999653e-05, 1.4778000000000013e-05, 1.4666999999999458e-05, 1.5069999999998973e-05, 1.5278000000000513e-05, 1.4736000000001304e-05, 1.5444999999999348e-05, 1.5250000000001374e-05, 1.4541999999999333e-05, 1.5236000000001804e-05, 1.5083999999998543e-05, 1.5041999999999833e-05, 1.501299999999775e-05, 1.536099999999846e-05, 1.4957999999998944e-05]</msg>
<status status="PASS" starttime="20201029 18:18:20.462" endtime="20201029 18:18:20.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.457" endtime="20201029 18:18:20.465"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:20.468" endtime="20201029 18:18:20.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.467" endtime="20201029 18:18:20.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.466" endtime="20201029 18:18:20.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.109" endtime="20201029 18:18:20.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.109" endtime="20201029 18:18:20.489"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.497" endtime="20201029 18:18:20.514"></status>
</kw>
<msg timestamp="20201029 18:18:20.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.496" endtime="20201029 18:18:20.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.516" endtime="20201029 18:18:20.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.518" endtime="20201029 18:18:20.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.493" endtime="20201029 18:18:20.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.491" endtime="20201029 18:18:20.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.527" endtime="20201029 18:18:20.814"></status>
</kw>
<msg timestamp="20201029 18:18:20.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019268111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019284292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.526" endtime="20201029 18:18:20.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019268111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019284292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.818" endtime="20201029 18:18:20.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.826" endtime="20201029 18:18:20.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.523" endtime="20201029 18:18:20.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.521" endtime="20201029 18:18:20.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:20.833" level="INFO">${RESULT} = [{'diff': 1.6181000000000528e-05}, {'diff': 1.6181000000000528e-05}, {'diff': 1.6111999999998683e-05}, {'diff': 1.5749999999998404e-05}, {'diff': 1.6056000000000403e-05}, {'diff': 1.561099999999871e-0...</msg>
<status status="PASS" starttime="20201029 18:18:20.830" endtime="20201029 18:18:20.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:20.837" level="INFO">${ACCURACY} = {'diff': [1.6181000000000528e-05, 1.6181000000000528e-05, 1.6111999999998683e-05, 1.5749999999998404e-05, 1.6056000000000403e-05, 1.561099999999871e-05, 1.577699999999807e-05, 1.5902000000001665e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:20.834" endtime="20201029 18:18:20.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.842" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 18:18:20.841" endtime="20201029 18:18:20.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.844" level="INFO">VALUE: [1.6181000000000528e-05, 1.6181000000000528e-05, 1.6111999999998683e-05, 1.5749999999998404e-05, 1.6056000000000403e-05, 1.561099999999871e-05, 1.577699999999807e-05, 1.5902000000001665e-05, 1.563900000000132e-05, 1.565300000000089e-05, 1.577699999999807e-05, 1.562500000000175e-05, 1.5666000000000985e-05, 1.5986000000002554e-05, 1.611100000000268e-05, 1.6457999999996975e-05, 1.561099999999871e-05, 1.5999999999998654e-05, 1.6472000000000014e-05, 1.6277999999998044e-05, 1.6263999999998474e-05, 1.6028000000001263e-05, 1.609699999999964e-05, 1.6249999999998904e-05, 1.5611999999998183e-05, 1.566700000000046e-05, 1.6485999999999584e-05, 1.6249999999998904e-05, 1.584699999999939e-05, 1.591699999999724e-05, 1.587499999999853e-05, 1.6250000000002374e-05, 1.5681000000000028e-05, 1.6320000000000223e-05, 1.5681000000000028e-05, 1.6028000000001263e-05, 1.6041999999997364e-05, 1.561099999999871e-05, 1.631900000000075e-05, 1.616700000000096e-05, 1.591700000000071e-05, 1.6236000000002804e-05, 1.5792000000000583e-05, 1.5721999999999264e-05, 1.584699999999939e-05, 1.591700000000071e-05, 1.640299999999817e-05, 1.6028000000001263e-05, 1.5584000000002513e-05, 1.6237000000002277e-05]</msg>
<status status="PASS" starttime="20201029 18:18:20.843" endtime="20201029 18:18:20.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.838" endtime="20201029 18:18:20.845"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:20.849" endtime="20201029 18:18:20.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.847" endtime="20201029 18:18:20.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.846" endtime="20201029 18:18:20.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.490" endtime="20201029 18:18:20.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.489" endtime="20201029 18:18:20.870"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.878" endtime="20201029 18:18:20.897"></status>
</kw>
<msg timestamp="20201029 18:18:20.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.877" endtime="20201029 18:18:20.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:20.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:20.899" endtime="20201029 18:18:20.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.901" endtime="20201029 18:18:20.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.874" endtime="20201029 18:18:20.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.872" endtime="20201029 18:18:20.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:20.910" endtime="20201029 18:18:21.209"></status>
</kw>
<msg timestamp="20201029 18:18:21.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020498681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020516167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:20.909" endtime="20201029 18:18:21.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020498681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020516167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.213" endtime="20201029 18:18:21.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.222" endtime="20201029 18:18:21.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.906" endtime="20201029 18:18:21.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.904" endtime="20201029 18:18:21.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:21.228" level="INFO">${RESULT} = [{'diff': 1.7485999999997115e-05}, {'diff': 1.7334000000000793e-05}, {'diff': 1.6584000000000043e-05}, {'diff': 1.7236000000000334e-05}, {'diff': 1.6651999999998945e-05}, {'diff': 1.711100000000021e-0...</msg>
<status status="PASS" starttime="20201029 18:18:21.225" endtime="20201029 18:18:21.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:21.233" level="INFO">${ACCURACY} = {'diff': [1.7485999999997115e-05, 1.7334000000000793e-05, 1.6584000000000043e-05, 1.7236000000000334e-05, 1.6651999999998945e-05, 1.711100000000021e-05, 1.7306000000001653e-05, 1.7348000000000363e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:21.229" endtime="20201029 18:18:21.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.237" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 18:18:21.236" endtime="20201029 18:18:21.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.240" level="INFO">VALUE: [1.7485999999997115e-05, 1.7334000000000793e-05, 1.6584000000000043e-05, 1.7236000000000334e-05, 1.6651999999998945e-05, 1.711100000000021e-05, 1.7306000000001653e-05, 1.7348000000000363e-05, 1.718100000000153e-05, 1.7236000000000334e-05, 1.7473000000000488e-05, 1.6944000000001375e-05, 1.659700000000014e-05, 1.741699999999874e-05, 1.709699999999717e-05, 1.6792000000001583e-05, 1.686099999999996e-05, 1.7165999999999015e-05, 1.704099999999889e-05, 1.737500000000003e-05, 1.6666000000001985e-05, 1.687499999999953e-05, 1.7472000000001014e-05, 1.659700000000014e-05, 1.6916000000002235e-05, 1.658300000000057e-05, 1.654100000000186e-05, 1.712499999999978e-05, 1.7042000000001833e-05, 1.6958000000000945e-05, 1.715299999999892e-05, 1.7208000000001195e-05, 1.6986000000000084e-05, 1.6805999999997684e-05, 1.713899999999935e-05, 1.665299999999842e-05, 1.6958000000000945e-05, 1.7236000000000334e-05, 1.6527999999998294e-05, 1.6792000000001583e-05, 1.7249999999999904e-05, 1.731900000000175e-05, 1.7195000000001098e-05, 1.7263999999999474e-05, 1.7013999999999224e-05, 1.6749999999999404e-05, 1.719499999999763e-05, 1.68889999999991e-05, 1.7249999999999904e-05, 1.7249999999999904e-05]</msg>
<status status="PASS" starttime="20201029 18:18:21.238" endtime="20201029 18:18:21.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.233" endtime="20201029 18:18:21.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:21.250" endtime="20201029 18:18:21.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.248" endtime="20201029 18:18:21.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.247" endtime="20201029 18:18:21.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.870" endtime="20201029 18:18:21.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:20.870" endtime="20201029 18:18:21.271"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.280" endtime="20201029 18:18:21.298"></status>
</kw>
<msg timestamp="20201029 18:18:21.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.278" endtime="20201029 18:18:21.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.299" endtime="20201029 18:18:21.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.302" endtime="20201029 18:18:21.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.275" endtime="20201029 18:18:21.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.273" endtime="20201029 18:18:21.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.311" endtime="20201029 18:18:21.596"></status>
</kw>
<msg timestamp="20201029 18:18:21.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019927569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019945819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.309" endtime="20201029 18:18:21.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019927569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019945819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.601" endtime="20201029 18:18:21.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.609" endtime="20201029 18:18:21.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.307" endtime="20201029 18:18:21.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.305" endtime="20201029 18:18:21.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:21.616" level="INFO">${RESULT} = [{'diff': 1.8250000000000904e-05}, {'diff': 1.77089999999977e-05}, {'diff': 1.816699999999949e-05}, {'diff': 1.8499999999997685e-05}, {'diff': 1.777700000000007e-05}, {'diff': 1.7987000000000558e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:21.612" endtime="20201029 18:18:21.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:21.621" level="INFO">${ACCURACY} = {'diff': [1.8250000000000904e-05, 1.77089999999977e-05, 1.816699999999949e-05, 1.8499999999997685e-05, 1.777700000000007e-05, 1.7987000000000558e-05, 1.819499999999863e-05, 1.7929999999999335e-05, 1.8...</msg>
<status status="PASS" starttime="20201029 18:18:21.617" endtime="20201029 18:18:21.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.626" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 18:18:21.625" endtime="20201029 18:18:21.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.628" level="INFO">VALUE: [1.8250000000000904e-05, 1.77089999999977e-05, 1.816699999999949e-05, 1.8499999999997685e-05, 1.777700000000007e-05, 1.7987000000000558e-05, 1.819499999999863e-05, 1.7929999999999335e-05, 1.8098000000001113e-05, 1.7723000000000738e-05, 1.763899999999985e-05, 1.7737000000000308e-05, 1.762500000000028e-05, 1.8014000000000224e-05, 1.78890000000001e-05, 1.780499999999921e-05, 1.791700000000271e-05, 1.804099999999989e-05, 1.7986000000001084e-05, 1.7915999999999765e-05, 1.829100000000014e-05, 1.840300000000017e-05, 1.8179999999999585e-05, 1.7750000000000404e-05, 1.7736000000000834e-05, 1.8194000000002625e-05, 1.7693999999998655e-05, 1.830500000000318e-05, 1.8457999999998975e-05, 1.8166000000000015e-05, 1.8263999999997005e-05, 1.7735999999997365e-05, 1.7541999999998864e-05, 1.836099999999799e-05, 1.8263999999997005e-05, 1.843100000000278e-05, 1.783299999999835e-05, 1.837500000000103e-05, 1.761099999999724e-05, 1.813900000000035e-05, 1.8305999999999184e-05, 1.7598000000000613e-05, 1.791699999999924e-05, 1.818099999999906e-05, 1.8235999999997865e-05, 1.793099999999881e-05, 1.7541999999998864e-05, 1.77630000000005e-05, 1.791699999999924e-05, 1.8305999999999184e-05]</msg>
<status status="PASS" starttime="20201029 18:18:21.627" endtime="20201029 18:18:21.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.622" endtime="20201029 18:18:21.630"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:21.633" endtime="20201029 18:18:21.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.632" endtime="20201029 18:18:21.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.631" endtime="20201029 18:18:21.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.272" endtime="20201029 18:18:21.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.271" endtime="20201029 18:18:21.654"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.663" endtime="20201029 18:18:21.680"></status>
</kw>
<msg timestamp="20201029 18:18:21.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.661" endtime="20201029 18:18:21.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:21.682" endtime="20201029 18:18:21.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.684" endtime="20201029 18:18:21.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.659" endtime="20201029 18:18:21.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.657" endtime="20201029 18:18:21.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.694" endtime="20201029 18:18:21.986"></status>
</kw>
<msg timestamp="20201029 18:18:21.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019803042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.692" endtime="20201029 18:18:21.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:21.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019803042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019821819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:21.990" endtime="20201029 18:18:21.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:21.999" endtime="20201029 18:18:22.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.689" endtime="20201029 18:18:22.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.688" endtime="20201029 18:18:22.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:22.005" level="INFO">${RESULT} = [{'diff': 1.877700000000107e-05}, {'diff': 1.8764000000000974e-05}, {'diff': 1.931900000000028e-05}, {'diff': 1.9249999999998435e-05}, {'diff': 1.9278000000001044e-05}, {'diff': 1.9235999999998865e-05...</msg>
<status status="PASS" starttime="20201029 18:18:22.002" endtime="20201029 18:18:22.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:22.010" level="INFO">${ACCURACY} = {'diff': [1.877700000000107e-05, 1.8764000000000974e-05, 1.931900000000028e-05, 1.9249999999998435e-05, 1.9278000000001044e-05, 1.9235999999998865e-05, 1.9415999999997796e-05, 1.866699999999999e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:18:22.006" endtime="20201029 18:18:22.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.014" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 18:18:22.013" endtime="20201029 18:18:22.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.016" level="INFO">VALUE: [1.877700000000107e-05, 1.8764000000000974e-05, 1.931900000000028e-05, 1.9249999999998435e-05, 1.9278000000001044e-05, 1.9235999999998865e-05, 1.9415999999997796e-05, 1.866699999999999e-05, 1.8930000000000335e-05, 1.8985999999998615e-05, 1.8930000000000335e-05, 1.93890000000016e-05, 1.943100000000031e-05, 1.855499999999996e-05, 1.945899999999945e-05, 1.9042000000000364e-05, 1.866699999999999e-05, 1.937500000000203e-05, 1.894499999999938e-05, 1.9333999999999324e-05, 1.911099999999874e-05, 1.90829999999996e-05, 1.944499999999988e-05, 1.8764000000000974e-05, 1.943100000000031e-05, 1.9292000000000614e-05, 1.886100000000196e-05, 1.937500000000203e-05, 1.9278000000001044e-05, 1.8541999999999864e-05, 1.9457999999999975e-05, 1.9028000000000794e-05, 1.923699999999834e-05, 1.893099999999981e-05, 1.931900000000028e-05, 1.8750000000001404e-05, 1.9415999999997796e-05, 1.9264000000001474e-05, 1.937499999999856e-05, 1.855499999999996e-05, 1.854100000000039e-05, 1.915300000000092e-05, 1.905499999999699e-05, 1.883299999999935e-05, 1.883299999999935e-05, 1.936100000000246e-05, 1.9250000000001904e-05, 1.865300000000042e-05, 1.881899999999978e-05, 1.8693999999999655e-05]</msg>
<status status="PASS" starttime="20201029 18:18:22.015" endtime="20201029 18:18:22.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.010" endtime="20201029 18:18:22.018"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:22.021" endtime="20201029 18:18:22.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.020" endtime="20201029 18:18:22.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.019" endtime="20201029 18:18:22.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.655" endtime="20201029 18:18:22.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:21.654" endtime="20201029 18:18:22.042"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.051" endtime="20201029 18:18:22.069"></status>
</kw>
<msg timestamp="20201029 18:18:22.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.049" endtime="20201029 18:18:22.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.071" endtime="20201029 18:18:22.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.073" endtime="20201029 18:18:22.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.047" endtime="20201029 18:18:22.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.044" endtime="20201029 18:18:22.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.082" endtime="20201029 18:18:22.369"></status>
</kw>
<msg timestamp="20201029 18:18:22.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020483139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02050325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:22.081" endtime="20201029 18:18:22.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020483139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02050325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:22.374" endtime="20201029 18:18:22.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.382" endtime="20201029 18:18:22.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.078" endtime="20201029 18:18:22.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.076" endtime="20201029 18:18:22.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:22.389" level="INFO">${RESULT} = [{'diff': 2.011099999999974e-05}, {'diff': 2.0457999999997506e-05}, {'diff': 1.9763999999998505e-05}, {'diff': 2.0472000000000545e-05}, {'diff': 1.9735999999999365e-05}, {'diff': 2.0055999999997465e-0...</msg>
<status status="PASS" starttime="20201029 18:18:22.385" endtime="20201029 18:18:22.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:22.393" level="INFO">${ACCURACY} = {'diff': [2.011099999999974e-05, 2.0457999999997506e-05, 1.9763999999998505e-05, 2.0472000000000545e-05, 1.9735999999999365e-05, 2.0055999999997465e-05, 2.009700000000017e-05, 1.9750000000002405e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:22.390" endtime="20201029 18:18:22.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.398" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 18:18:22.397" endtime="20201029 18:18:22.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.400" level="INFO">VALUE: [2.011099999999974e-05, 2.0457999999997506e-05, 1.9763999999998505e-05, 2.0472000000000545e-05, 1.9735999999999365e-05, 2.0055999999997465e-05, 2.009700000000017e-05, 1.9750000000002405e-05, 2.0222000000000295e-05, 1.9999999999999185e-05, 1.986099999999949e-05, 1.965300000000142e-05, 2.0291999999998145e-05, 1.9792000000001114e-05, 1.993099999999734e-05, 2.0180000000001586e-05, 1.973699999999884e-05, 1.9750000000002405e-05, 2.047300000000002e-05, 2.0458000000000975e-05, 2.0249999999999435e-05, 1.9999999999999185e-05, 1.9750000000002405e-05, 1.986100000000296e-05, 1.9721999999999795e-05, 1.9542000000000864e-05, 2.009700000000017e-05, 2.030500000000171e-05, 1.9749999999998935e-05, 2.004099999999842e-05, 1.954100000000139e-05, 2.030500000000171e-05, 2.0165999999998546e-05, 1.9666000000001516e-05, 2.031900000000128e-05, 1.954099999999792e-05, 1.9792000000001114e-05, 2.016699999999802e-05, 1.997299999999952e-05, 2.0097999999999644e-05, 2.034700000000042e-05, 2.043100000000131e-05, 2.009700000000017e-05, 1.9985999999999615e-05, 2.009700000000017e-05, 2.02090000000002e-05, 2.036099999999999e-05, 2.018100000000106e-05, 2.0486000000000115e-05, 2.0070000000000504e-05]</msg>
<status status="PASS" starttime="20201029 18:18:22.399" endtime="20201029 18:18:22.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.394" endtime="20201029 18:18:22.402"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:22.406" endtime="20201029 18:18:22.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.405" endtime="20201029 18:18:22.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.403" endtime="20201029 18:18:22.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.043" endtime="20201029 18:18:22.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.042" endtime="20201029 18:18:22.427"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.436" endtime="20201029 18:18:22.453"></status>
</kw>
<msg timestamp="20201029 18:18:22.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.434" endtime="20201029 18:18:22.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.455" endtime="20201029 18:18:22.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.458" endtime="20201029 18:18:22.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.432" endtime="20201029 18:18:22.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.429" endtime="20201029 18:18:22.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.467" endtime="20201029 18:18:22.773"></status>
</kw>
<msg timestamp="20201029 18:18:22.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019854667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019875833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:22.465" endtime="20201029 18:18:22.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019854667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019875833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:22.778" endtime="20201029 18:18:22.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.786" endtime="20201029 18:18:22.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.463" endtime="20201029 18:18:22.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.461" endtime="20201029 18:18:22.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:22.793" level="INFO">${RESULT} = [{'diff': 2.1165999999999546e-05}, {'diff': 2.104099999999942e-05}, {'diff': 2.0915999999999296e-05}, {'diff': 2.079099999999917e-05}, {'diff': 2.0972000000001045e-05}, {'diff': 2.081900000000178e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:22.790" endtime="20201029 18:18:22.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:22.798" level="INFO">${ACCURACY} = {'diff': [2.1165999999999546e-05, 2.104099999999942e-05, 2.0915999999999296e-05, 2.079099999999917e-05, 2.0972000000001045e-05, 2.081900000000178e-05, 2.1027999999999325e-05, 2.1027999999999325e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:18:22.794" endtime="20201029 18:18:22.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.803" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 18:18:22.802" endtime="20201029 18:18:22.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.805" level="INFO">VALUE: [2.1165999999999546e-05, 2.104099999999942e-05, 2.0915999999999296e-05, 2.079099999999917e-05, 2.0972000000001045e-05, 2.081900000000178e-05, 2.1027999999999325e-05, 2.1027999999999325e-05, 2.136100000000099e-05, 2.133299999999838e-05, 2.118099999999859e-05, 2.143099999999884e-05, 2.1236000000000865e-05, 2.111100000000074e-05, 2.131899999999881e-05, 2.118099999999859e-05, 2.122300000000077e-05, 2.1042000000002364e-05, 2.093099999999834e-05, 2.0527999999998825e-05, 2.111100000000074e-05, 2.1264000000000005e-05, 2.1250000000000435e-05, 2.141699999999927e-05, 2.116700000000249e-05, 2.07090000000007e-05, 2.059700000000067e-05, 2.1249999999996966e-05, 2.118099999999859e-05, 2.0805999999998215e-05, 2.141699999999927e-05, 2.147299999999755e-05, 2.091699999999877e-05, 2.0513999999999255e-05, 2.056899999999806e-05, 2.1112000000000214e-05, 2.0834000000000824e-05, 2.116699999999902e-05, 2.147299999999755e-05, 2.12229999999973e-05, 2.106900000000203e-05, 2.0499999999999685e-05, 2.0693999999998186e-05, 2.1486000000001115e-05, 2.07769999999996e-05, 2.056900000000153e-05, 2.1193999999998686e-05, 2.105500000000246e-05, 2.0929999999998866e-05, 2.10830000000016e-05]</msg>
<status status="PASS" starttime="20201029 18:18:22.804" endtime="20201029 18:18:22.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.799" endtime="20201029 18:18:22.807"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:22.810" endtime="20201029 18:18:22.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.809" endtime="20201029 18:18:22.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.808" endtime="20201029 18:18:22.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.428" endtime="20201029 18:18:22.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.427" endtime="20201029 18:18:22.831"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.840" endtime="20201029 18:18:22.857"></status>
</kw>
<msg timestamp="20201029 18:18:22.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.838" endtime="20201029 18:18:22.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:22.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:22.859" endtime="20201029 18:18:22.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.861" endtime="20201029 18:18:22.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.836" endtime="20201029 18:18:22.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.834" endtime="20201029 18:18:22.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:22.871" endtime="20201029 18:18:23.156"></status>
</kw>
<msg timestamp="20201029 18:18:23.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019932569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019954319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:22.869" endtime="20201029 18:18:23.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019932569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019954319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.161" endtime="20201029 18:18:23.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.169" endtime="20201029 18:18:23.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.867" endtime="20201029 18:18:23.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.865" endtime="20201029 18:18:23.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:23.176" level="INFO">${RESULT} = [{'diff': 2.1750000000000935e-05}, {'diff': 2.233299999999938e-05}, {'diff': 2.1693999999999186e-05}, {'diff': 2.2485999999998646e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.2193999999999686e-05...</msg>
<status status="PASS" starttime="20201029 18:18:23.172" endtime="20201029 18:18:23.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:23.180" level="INFO">${ACCURACY} = {'diff': [2.1750000000000935e-05, 2.233299999999938e-05, 2.1693999999999186e-05, 2.2485999999998646e-05, 2.205499999999999e-05, 2.2193999999999686e-05, 2.186099999999802e-05, 2.1736000000001365e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:18:23.177" endtime="20201029 18:18:23.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.185" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 18:18:23.183" endtime="20201029 18:18:23.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.187" level="INFO">VALUE: [2.1750000000000935e-05, 2.233299999999938e-05, 2.1693999999999186e-05, 2.2485999999998646e-05, 2.205499999999999e-05, 2.2193999999999686e-05, 2.186099999999802e-05, 2.1736000000001365e-05, 2.204100000000042e-05, 2.1972000000002045e-05, 2.2361999999997995e-05, 2.1915999999996827e-05, 2.1820000000002254e-05, 2.1707999999998756e-05, 2.1805999999999215e-05, 2.24030000000007e-05, 2.243099999999984e-05, 2.191700000000324e-05, 2.2486000000002115e-05, 2.1778000000000075e-05, 2.191699999999977e-05, 2.181900000000278e-05, 2.233299999999938e-05, 2.188900000000063e-05, 2.1736000000001365e-05, 2.237500000000156e-05, 2.193099999999934e-05, 2.194499999999891e-05, 2.2235999999998396e-05, 2.2041999999999895e-05, 2.168100000000256e-05, 2.19030000000002e-05, 2.1722000000001795e-05, 2.2512999999998312e-05, 2.193099999999934e-05, 2.181899999999931e-05, 2.1612000000000714e-05, 2.211099999999827e-05, 2.1806000000002684e-05, 2.172300000000127e-05, 2.1541999999999395e-05, 2.170899999999823e-05, 2.20969999999987e-05, 2.2000000000001185e-05, 2.161099999999777e-05, 2.1666000000000046e-05, 2.161099999999777e-05, 2.2500000000001685e-05, 2.2250000000001435e-05, 2.1652000000000476e-05]</msg>
<status status="PASS" starttime="20201029 18:18:23.186" endtime="20201029 18:18:23.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.181" endtime="20201029 18:18:23.188"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:23.192" endtime="20201029 18:18:23.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.191" endtime="20201029 18:18:23.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.189" endtime="20201029 18:18:23.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.832" endtime="20201029 18:18:23.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:22.831" endtime="20201029 18:18:23.213"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.222" endtime="20201029 18:18:23.243"></status>
</kw>
<msg timestamp="20201029 18:18:23.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.220" endtime="20201029 18:18:23.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.244" endtime="20201029 18:18:23.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.247" endtime="20201029 18:18:23.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.218" endtime="20201029 18:18:23.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.215" endtime="20201029 18:18:23.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.256" endtime="20201029 18:18:23.542"></status>
</kw>
<msg timestamp="20201029 18:18:23.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023268333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023291431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.255" endtime="20201029 18:18:23.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023268333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023291431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.548" endtime="20201029 18:18:23.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.559" endtime="20201029 18:18:23.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.252" endtime="20201029 18:18:23.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.250" endtime="20201029 18:18:23.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:23.566" level="INFO">${RESULT} = [{'diff': 2.3098000000002644e-05}, {'diff': 2.2971999999999576e-05}, {'diff': 2.304100000000142e-05}, {'diff': 2.279100000000117e-05}, {'diff': 2.2694000000000186e-05}, {'diff': 2.2944000000000436e-05...</msg>
<status status="PASS" starttime="20201029 18:18:23.563" endtime="20201029 18:18:23.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:23.570" level="INFO">${ACCURACY} = {'diff': [2.3098000000002644e-05, 2.2971999999999576e-05, 2.304100000000142e-05, 2.279100000000117e-05, 2.2694000000000186e-05, 2.2944000000000436e-05, 2.283299999999988e-05, 2.255500000000049e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:18:23.567" endtime="20201029 18:18:23.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.575" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 18:18:23.574" endtime="20201029 18:18:23.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.578" level="INFO">VALUE: [2.3098000000002644e-05, 2.2971999999999576e-05, 2.304100000000142e-05, 2.279100000000117e-05, 2.2694000000000186e-05, 2.2944000000000436e-05, 2.283299999999988e-05, 2.255500000000049e-05, 2.279100000000117e-05, 2.2680000000000616e-05, 2.2944000000000436e-05, 2.2666000000001046e-05, 2.3042000000000895e-05, 2.30969999999997e-05, 2.255500000000049e-05, 2.344500000000041e-05, 2.3193999999997217e-05, 2.315300000000145e-05, 2.3306000000000715e-05, 2.294499999999991e-05, 2.2792000000000645e-05, 2.29030000000012e-05, 2.3499999999999216e-05, 2.3056000000000465e-05, 2.3000000000002185e-05, 2.3472000000000076e-05, 2.265300000000095e-05, 2.311099999999927e-05, 2.334699999999995e-05, 2.263899999999791e-05, 2.343100000000084e-05, 2.2569999999999535e-05, 2.3042000000000895e-05, 2.281900000000031e-05, 2.2749999999998466e-05, 2.27229999999988e-05, 2.2597999999998675e-05, 2.2499999999998216e-05, 2.3056000000000465e-05, 2.3111999999998745e-05, 2.337500000000256e-05, 2.2680000000000616e-05, 2.3429999999997897e-05, 2.3472000000000076e-05, 2.2792000000000645e-05, 2.2778000000001075e-05, 2.308300000000013e-05, 2.3472000000000076e-05, 2.2790999999997702e-05, 2.331900000000081e-05]</msg>
<status status="PASS" starttime="20201029 18:18:23.576" endtime="20201029 18:18:23.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.571" endtime="20201029 18:18:23.580"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:23.584" endtime="20201029 18:18:23.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.582" endtime="20201029 18:18:23.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.581" endtime="20201029 18:18:23.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.214" endtime="20201029 18:18:23.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.213" endtime="20201029 18:18:23.604"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.613" endtime="20201029 18:18:23.630"></status>
</kw>
<msg timestamp="20201029 18:18:23.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.611" endtime="20201029 18:18:23.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.632" endtime="20201029 18:18:23.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.634" endtime="20201029 18:18:23.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.609" endtime="20201029 18:18:23.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.607" endtime="20201029 18:18:23.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.644" endtime="20201029 18:18:23.930"></status>
</kw>
<msg timestamp="20201029 18:18:23.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019843222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019867653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.642" endtime="20201029 18:18:23.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019843222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019867653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:23.934" endtime="20201029 18:18:23.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.942" endtime="20201029 18:18:23.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.640" endtime="20201029 18:18:23.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.638" endtime="20201029 18:18:23.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:23.949" level="INFO">${RESULT} = [{'diff': 2.443099999999837e-05}, {'diff': 2.4276999999999632e-05}, {'diff': 2.42230000000003e-05}, {'diff': 2.398699999999962e-05}, {'diff': 2.3847999999999925e-05}, {'diff': 2.373700000000284e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:23.946" endtime="20201029 18:18:23.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:23.954" level="INFO">${ACCURACY} = {'diff': [2.443099999999837e-05, 2.4276999999999632e-05, 2.42230000000003e-05, 2.398699999999962e-05, 2.3847999999999925e-05, 2.373700000000284e-05, 2.40970000000007e-05, 2.3986000000000146e-05, 2.398...</msg>
<status status="PASS" starttime="20201029 18:18:23.950" endtime="20201029 18:18:23.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.959" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 18:18:23.958" endtime="20201029 18:18:23.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:23.961" level="INFO">VALUE: [2.443099999999837e-05, 2.4276999999999632e-05, 2.42230000000003e-05, 2.398699999999962e-05, 2.3847999999999925e-05, 2.373700000000284e-05, 2.40970000000007e-05, 2.3986000000000146e-05, 2.3986000000000146e-05, 2.3693999999997717e-05, 2.411100000000027e-05, 2.4179999999998647e-05, 2.3694000000001186e-05, 2.368099999999762e-05, 2.4040999999998952e-05, 2.386100000000002e-05, 2.411100000000027e-05, 2.3749999999999466e-05, 2.415299999999898e-05, 2.393100000000134e-05, 2.4471999999997607e-05, 2.390299999999873e-05, 2.3722000000000326e-05, 2.4318999999998342e-05, 2.366700000000152e-05, 2.4318999999998342e-05, 2.4500000000000216e-05, 2.393100000000134e-05, 2.3832999999997412e-05, 2.3570000000000535e-05, 2.418100000000159e-05, 2.4471999999997607e-05, 2.3986000000000146e-05, 2.416700000000202e-05, 2.44169999999988e-05, 2.4500000000000216e-05, 2.3570000000000535e-05, 2.3555999999997496e-05, 2.436100000000052e-05, 2.4222000000000826e-05, 2.365299999999848e-05, 2.369500000000066e-05, 2.394500000000091e-05, 2.445900000000098e-05, 2.443099999999837e-05, 2.3901999999999257e-05, 2.42230000000003e-05, 2.366700000000152e-05, 2.4277999999999106e-05, 2.37229999999998e-05]</msg>
<status status="PASS" starttime="20201029 18:18:23.960" endtime="20201029 18:18:23.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.955" endtime="20201029 18:18:23.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:23.967" endtime="20201029 18:18:23.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.965" endtime="20201029 18:18:23.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.964" endtime="20201029 18:18:23.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.605" endtime="20201029 18:18:23.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.605" endtime="20201029 18:18:23.988"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:23.997" endtime="20201029 18:18:24.016"></status>
</kw>
<msg timestamp="20201029 18:18:24.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:23.996" endtime="20201029 18:18:24.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.017" endtime="20201029 18:18:24.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.020" endtime="20201029 18:18:24.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.993" endtime="20201029 18:18:24.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.990" endtime="20201029 18:18:24.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.029" endtime="20201029 18:18:24.317"></status>
</kw>
<msg timestamp="20201029 18:18:24.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021101958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021127472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:24.028" endtime="20201029 18:18:24.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021101958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021127472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:24.321" endtime="20201029 18:18:24.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.330" endtime="20201029 18:18:24.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.025" endtime="20201029 18:18:24.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.023" endtime="20201029 18:18:24.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:24.336" level="INFO">${RESULT} = [{'diff': 2.5514000000000786e-05}, {'diff': 2.4540999999999452e-05}, {'diff': 2.5166000000000077e-05}, {'diff': 2.5236000000001396e-05}, {'diff': 2.5235999999997927e-05}, {'diff': 2.4582999999998162e-...</msg>
<status status="PASS" starttime="20201029 18:18:24.333" endtime="20201029 18:18:24.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:24.341" level="INFO">${ACCURACY} = {'diff': [2.5514000000000786e-05, 2.4540999999999452e-05, 2.5166000000000077e-05, 2.5236000000001396e-05, 2.5235999999997927e-05, 2.4582999999998162e-05, 2.454100000000292e-05, 2.5193999999999217e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:24.337" endtime="20201029 18:18:24.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.345" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 18:18:24.344" endtime="20201029 18:18:24.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.348" level="INFO">VALUE: [2.5514000000000786e-05, 2.4540999999999452e-05, 2.5166000000000077e-05, 2.5236000000001396e-05, 2.5235999999997927e-05, 2.4582999999998162e-05, 2.454100000000292e-05, 2.5193999999999217e-05, 2.5082999999998662e-05, 2.4943999999998967e-05, 2.534700000000195e-05, 2.5304999999999772e-05, 2.4554999999999022e-05, 2.462500000000034e-05, 2.4679999999999147e-05, 2.4707999999998287e-05, 2.545899999999851e-05, 2.4513999999999786e-05, 2.493099999999887e-05, 2.483300000000188e-05, 2.484700000000145e-05, 2.469500000000166e-05, 2.486100000000102e-05, 2.4750000000000466e-05, 2.468100000000209e-05, 2.45970000000012e-05, 2.513900000000041e-05, 2.4819999999998316e-05, 2.469499999999819e-05, 2.4985999999997677e-05, 2.5027999999999856e-05, 2.5429999999999897e-05, 2.5304999999999772e-05, 2.5499999999997747e-05, 2.466699999999905e-05, 2.473700000000037e-05, 2.486100000000102e-05, 2.516699999999955e-05, 2.5179999999999647e-05, 2.4513999999999786e-05, 2.5040999999999952e-05, 2.479100000000317e-05, 2.462500000000034e-05, 2.484700000000145e-05, 2.4666000000003047e-05, 2.511100000000127e-05, 2.5180000000003117e-05, 2.4971999999998107e-05, 2.5499999999997747e-05, 2.5278000000000106e-05]</msg>
<status status="PASS" starttime="20201029 18:18:24.347" endtime="20201029 18:18:24.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.342" endtime="20201029 18:18:24.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:24.353" endtime="20201029 18:18:24.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.352" endtime="20201029 18:18:24.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.350" endtime="20201029 18:18:24.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.989" endtime="20201029 18:18:24.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:23.988" endtime="20201029 18:18:24.374"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.383" endtime="20201029 18:18:24.401"></status>
</kw>
<msg timestamp="20201029 18:18:24.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.381" endtime="20201029 18:18:24.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.403" endtime="20201029 18:18:24.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.405" endtime="20201029 18:18:24.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.378" endtime="20201029 18:18:24.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.376" endtime="20201029 18:18:24.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.414" endtime="20201029 18:18:24.700"></status>
</kw>
<msg timestamp="20201029 18:18:24.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020884389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020910139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:24.413" endtime="20201029 18:18:24.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020884389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020910139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:24.704" endtime="20201029 18:18:24.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.713" endtime="20201029 18:18:24.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.410" endtime="20201029 18:18:24.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.408" endtime="20201029 18:18:24.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:24.720" level="INFO">${RESULT} = [{'diff': 2.5750000000001466e-05}, {'diff': 2.5707999999999287e-05}, {'diff': 2.6374999999998622e-05}, {'diff': 2.5735999999998427e-05}, {'diff': 2.5806000000003215e-05}, {'diff': 2.6082999999999662e-...</msg>
<status status="PASS" starttime="20201029 18:18:24.716" endtime="20201029 18:18:24.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:24.724" level="INFO">${ACCURACY} = {'diff': [2.5750000000001466e-05, 2.5707999999999287e-05, 2.6374999999998622e-05, 2.5735999999998427e-05, 2.5806000000003215e-05, 2.6082999999999662e-05, 2.5792000000000176e-05, 2.594499999999944e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:24.721" endtime="20201029 18:18:24.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.728" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 18:18:24.727" endtime="20201029 18:18:24.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.731" level="INFO">VALUE: [2.5750000000001466e-05, 2.5707999999999287e-05, 2.6374999999998622e-05, 2.5735999999998427e-05, 2.5806000000003215e-05, 2.6082999999999662e-05, 2.5792000000000176e-05, 2.594499999999944e-05, 2.561100000000177e-05, 2.565300000000048e-05, 2.5860999999998552e-05, 2.6042000000000426e-05, 2.6319000000000342e-05, 2.6347999999998956e-05, 2.6444000000000467e-05, 2.5985999999998677e-05, 2.6362000000001995e-05, 2.6458000000000037e-05, 2.5721999999998857e-05, 2.583300000000288e-05, 2.5735999999998427e-05, 2.6194000000000217e-05, 2.6291000000001202e-05, 2.6110999999998802e-05, 2.616700000000055e-05, 2.59170000000003e-05, 2.5860999999998552e-05, 2.6264000000001536e-05, 2.5736000000001896e-05, 2.6221999999999357e-05, 2.5985999999998677e-05, 2.565300000000048e-05, 2.6319999999999816e-05, 2.6292000000000676e-05, 2.5805000000000272e-05, 2.590300000000073e-05, 2.6277999999997637e-05, 2.6360999999999052e-05, 2.6319999999999816e-05, 2.5999999999998247e-05, 2.6486000000002646e-05, 2.6096999999999232e-05, 2.588899999999769e-05, 2.5610999999998302e-05, 2.595900000000248e-05, 2.5735999999998427e-05, 2.566700000000005e-05, 2.615300000000098e-05, 2.643100000000037e-05, 2.565300000000048e-05]</msg>
<status status="PASS" starttime="20201029 18:18:24.730" endtime="20201029 18:18:24.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.725" endtime="20201029 18:18:24.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:24.737" endtime="20201029 18:18:24.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.736" endtime="20201029 18:18:24.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.734" endtime="20201029 18:18:24.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.375" endtime="20201029 18:18:24.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.374" endtime="20201029 18:18:24.758"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.769" endtime="20201029 18:18:24.786"></status>
</kw>
<msg timestamp="20201029 18:18:24.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.766" endtime="20201029 18:18:24.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:24.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:24.788" endtime="20201029 18:18:24.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.790" endtime="20201029 18:18:24.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.762" endtime="20201029 18:18:24.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.760" endtime="20201029 18:18:24.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:24.800" endtime="20201029 18:18:25.086"></status>
</kw>
<msg timestamp="20201029 18:18:25.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:24.798" endtime="20201029 18:18:25.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021868875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.090" endtime="20201029 18:18:25.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.099" endtime="20201029 18:18:25.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.796" endtime="20201029 18:18:25.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.794" endtime="20201029 18:18:25.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:25.110" level="INFO">${RESULT} = [{'diff': 2.7208000000000787e-05}, {'diff': 2.6930000000001397e-05}, {'diff': 2.7055000000001522e-05}, {'diff': 2.7042000000001426e-05}, {'diff': 2.743100000000137e-05}, {'diff': 2.7110999999999802e-0...</msg>
<status status="PASS" starttime="20201029 18:18:25.104" endtime="20201029 18:18:25.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:25.119" level="INFO">${ACCURACY} = {'diff': [2.7208000000000787e-05, 2.6930000000001397e-05, 2.7055000000001522e-05, 2.7042000000001426e-05, 2.743100000000137e-05, 2.7110999999999802e-05, 2.6846999999999982e-05, 2.7291999999998207e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:25.112" endtime="20201029 18:18:25.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.127" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 18:18:25.125" endtime="20201029 18:18:25.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.131" level="INFO">VALUE: [2.7208000000000787e-05, 2.6930000000001397e-05, 2.7055000000001522e-05, 2.7042000000001426e-05, 2.743100000000137e-05, 2.7110999999999802e-05, 2.6846999999999982e-05, 2.7291999999998207e-05, 2.69309999999974e-05, 2.6541999999997457e-05, 2.668100000000062e-05, 2.7041999999997957e-05, 2.7361000000000052e-05, 2.715300000000198e-05, 2.694500000000044e-05, 2.718100000000112e-05, 2.6542000000000926e-05, 2.6499999999998747e-05, 2.6874999999999122e-05, 2.7054999999998053e-05, 2.6804999999997803e-05, 2.7097000000000232e-05, 2.7084000000000136e-05, 2.668099999999715e-05, 2.6902000000002257e-05, 2.7097000000000232e-05, 2.6554999999997553e-05, 2.6512999999998843e-05, 2.7486000000000177e-05, 2.7499999999999747e-05, 2.6805000000001272e-05, 2.7277999999998637e-05, 2.6570000000000066e-05, 2.6999999999999247e-05, 2.688900000000216e-05, 2.7235999999999927e-05, 2.7513999999999317e-05, 2.6735999999999427e-05, 2.7069000000001092e-05, 2.7124999999999372e-05, 2.6583000000000162e-05, 2.7374999999999622e-05, 2.6986000000003146e-05, 2.6806000000000746e-05, 2.6764000000002036e-05, 2.7014000000002286e-05, 2.666699999999758e-05, 2.6735999999999427e-05, 2.715299999999851e-05, 2.693100000000087e-05]</msg>
<status status="PASS" starttime="20201029 18:18:25.129" endtime="20201029 18:18:25.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.121" endtime="20201029 18:18:25.132"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:25.136" endtime="20201029 18:18:25.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.135" endtime="20201029 18:18:25.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.133" endtime="20201029 18:18:25.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.759" endtime="20201029 18:18:25.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:24.758" endtime="20201029 18:18:25.157"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.166" endtime="20201029 18:18:25.184"></status>
</kw>
<msg timestamp="20201029 18:18:25.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.164" endtime="20201029 18:18:25.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.186" endtime="20201029 18:18:25.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.188" endtime="20201029 18:18:25.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.162" endtime="20201029 18:18:25.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.159" endtime="20201029 18:18:25.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.198" endtime="20201029 18:18:25.484"></status>
</kw>
<msg timestamp="20201029 18:18:25.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020050333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020078083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.196" endtime="20201029 18:18:25.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020050333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020078083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.488" endtime="20201029 18:18:25.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.497" endtime="20201029 18:18:25.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.193" endtime="20201029 18:18:25.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.191" endtime="20201029 18:18:25.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:25.504" level="INFO">${RESULT} = [{'diff': 2.7749999999999997e-05}, {'diff': 2.7665999999999108e-05}, {'diff': 2.7665999999999108e-05}, {'diff': 2.8236000000000927e-05}, {'diff': 2.7986000000000677e-05}, {'diff': 2.8165999999999608e-...</msg>
<status status="PASS" starttime="20201029 18:18:25.500" endtime="20201029 18:18:25.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:25.508" level="INFO">${ACCURACY} = {'diff': [2.7749999999999997e-05, 2.7665999999999108e-05, 2.7665999999999108e-05, 2.8236000000000927e-05, 2.7986000000000677e-05, 2.8165999999999608e-05, 2.8290999999999733e-05, 2.8471999999998138e-05...</msg>
<status status="PASS" starttime="20201029 18:18:25.505" endtime="20201029 18:18:25.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.512" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 18:18:25.511" endtime="20201029 18:18:25.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.515" level="INFO">VALUE: [2.7749999999999997e-05, 2.7665999999999108e-05, 2.7665999999999108e-05, 2.8236000000000927e-05, 2.7986000000000677e-05, 2.8165999999999608e-05, 2.8290999999999733e-05, 2.8471999999998138e-05, 2.7972000000001107e-05, 2.8541999999999457e-05, 2.7790999999999233e-05, 2.7875000000000122e-05, 2.8361000000001052e-05, 2.8415999999999858e-05, 2.7986000000000677e-05, 2.7930000000002397e-05, 2.8097000000001232e-05, 2.8179999999999178e-05, 2.7749999999999997e-05, 2.7875000000000122e-05, 2.7777999999999137e-05, 2.8041999999998957e-05, 2.8097000000001232e-05, 2.8125000000000372e-05, 2.768099999999815e-05, 2.8320000000001816e-05, 2.816699999999908e-05, 2.8235999999997458e-05, 2.8375000000000622e-05, 2.8264000000000067e-05, 2.7888999999999692e-05, 2.7528000000002356e-05, 2.77369999999999e-05, 2.8041999999998957e-05, 2.822300000000083e-05, 2.7848000000000456e-05, 2.7888999999999692e-05, 2.8084000000001136e-05, 2.77369999999999e-05, 2.8374999999997152e-05, 2.8429999999999428e-05, 2.7930000000002397e-05, 2.7555000000002022e-05, 2.8290999999999733e-05, 2.7971999999997638e-05, 2.7722000000000857e-05, 2.8097000000001232e-05, 2.79309999999984e-05, 2.7611000000000302e-05, 2.8292000000002676e-05]</msg>
<status status="PASS" starttime="20201029 18:18:25.514" endtime="20201029 18:18:25.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.509" endtime="20201029 18:18:25.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:25.520" endtime="20201029 18:18:25.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.519" endtime="20201029 18:18:25.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.517" endtime="20201029 18:18:25.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.158" endtime="20201029 18:18:25.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.157" endtime="20201029 18:18:25.541"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.550" endtime="20201029 18:18:25.568"></status>
</kw>
<msg timestamp="20201029 18:18:25.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.548" endtime="20201029 18:18:25.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.570" endtime="20201029 18:18:25.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.572" endtime="20201029 18:18:25.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.545" endtime="20201029 18:18:25.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.543" endtime="20201029 18:18:25.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.581" endtime="20201029 18:18:25.867"></status>
</kw>
<msg timestamp="20201029 18:18:25.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020930722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020959347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.580" endtime="20201029 18:18:25.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020930722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020959347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:25.871" endtime="20201029 18:18:25.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.879" endtime="20201029 18:18:25.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.577" endtime="20201029 18:18:25.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.575" endtime="20201029 18:18:25.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:25.886" level="INFO">${RESULT} = [{'diff': 2.8625000000000872e-05}, {'diff': 2.9346999999999013e-05}, {'diff': 2.8985999999998208e-05}, {'diff': 2.8791999999999707e-05}, {'diff': 2.89309999999994e-05}, {'diff': 2.9014000000000817e-05...</msg>
<status status="PASS" starttime="20201029 18:18:25.883" endtime="20201029 18:18:25.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:25.890" level="INFO">${ACCURACY} = {'diff': [2.8625000000000872e-05, 2.9346999999999013e-05, 2.8985999999998208e-05, 2.8791999999999707e-05, 2.89309999999994e-05, 2.9014000000000817e-05, 2.9417000000000332e-05, 2.8653000000000012e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:25.887" endtime="20201029 18:18:25.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.895" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 18:18:25.894" endtime="20201029 18:18:25.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.898" level="INFO">VALUE: [2.8625000000000872e-05, 2.9346999999999013e-05, 2.8985999999998208e-05, 2.8791999999999707e-05, 2.89309999999994e-05, 2.9014000000000817e-05, 2.9417000000000332e-05, 2.8653000000000012e-05, 2.944500000000294e-05, 2.9500000000001747e-05, 2.9167000000000082e-05, 2.8860999999998083e-05, 2.918099999999965e-05, 2.9000000000001247e-05, 2.9014000000000817e-05, 2.868100000000262e-05, 2.8596999999998263e-05, 2.8862000000001026e-05, 2.8985999999998208e-05, 2.8666000000000108e-05, 2.9055000000000053e-05, 2.9305000000000303e-05, 2.8721999999998388e-05, 2.9083999999998666e-05, 2.9083000000002662e-05, 2.9014000000000817e-05, 2.8986000000001677e-05, 2.8597000000001732e-05, 2.8597000000001732e-05, 2.9250000000001497e-05, 2.8943999999999498e-05, 2.9346999999999013e-05, 2.8610999999997833e-05, 2.8971999999998638e-05, 2.9221999999998888e-05, 2.8861000000001552e-05, 2.9374999999998153e-05, 2.9167000000000082e-05, 2.9055999999999527e-05, 2.9153000000000512e-05, 2.9417000000000332e-05, 2.9028000000000387e-05, 2.8666999999999582e-05, 2.9499999999998278e-05, 2.9235999999998458e-05, 2.8514000000000317e-05, 2.9236000000001927e-05, 2.9292000000000207e-05, 2.8555999999999027e-05, 2.9388000000001718e-05]</msg>
<status status="PASS" starttime="20201029 18:18:25.896" endtime="20201029 18:18:25.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.891" endtime="20201029 18:18:25.900"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:25.904" endtime="20201029 18:18:25.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.902" endtime="20201029 18:18:25.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.901" endtime="20201029 18:18:25.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.542" endtime="20201029 18:18:25.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.541" endtime="20201029 18:18:25.924"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.933" endtime="20201029 18:18:25.951"></status>
</kw>
<msg timestamp="20201029 18:18:25.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.932" endtime="20201029 18:18:25.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:25.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:25.952" endtime="20201029 18:18:25.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.955" endtime="20201029 18:18:25.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.929" endtime="20201029 18:18:25.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.927" endtime="20201029 18:18:25.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:25.964" endtime="20201029 18:18:26.250"></status>
</kw>
<msg timestamp="20201029 18:18:26.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019929972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01996025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:25.963" endtime="20201029 18:18:26.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019929972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01996025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:26.254" endtime="20201029 18:18:26.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.262" endtime="20201029 18:18:26.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.960" endtime="20201029 18:18:26.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.958" endtime="20201029 18:18:26.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:26.269" level="INFO">${RESULT} = [{'diff': 3.0277999999998167e-05}, {'diff': 2.9625000000001872e-05}, {'diff': 3.0292000000001207e-05}, {'diff': 2.9721999999999388e-05}, {'diff': 2.9985999999999208e-05}, {'diff': 2.9721999999999388e-...</msg>
<status status="PASS" starttime="20201029 18:18:26.266" endtime="20201029 18:18:26.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:26.274" level="INFO">${ACCURACY} = {'diff': [3.0277999999998167e-05, 2.9625000000001872e-05, 3.0292000000001207e-05, 2.9721999999999388e-05, 2.9985999999999208e-05, 2.9721999999999388e-05, 3.0042000000000957e-05, 2.9916999999997362e-05...</msg>
<status status="PASS" starttime="20201029 18:18:26.270" endtime="20201029 18:18:26.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.279" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 18:18:26.278" endtime="20201029 18:18:26.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.281" level="INFO">VALUE: [3.0277999999998167e-05, 2.9625000000001872e-05, 3.0292000000001207e-05, 2.9721999999999388e-05, 2.9985999999999208e-05, 2.9721999999999388e-05, 3.0042000000000957e-05, 2.9916999999997362e-05, 2.9583999999999167e-05, 2.9652999999997542e-05, 3.047299999999961e-05, 3.0056000000000527e-05, 3.0375000000002622e-05, 3.0110999999999333e-05, 2.973699999999843e-05, 3.0221999999999888e-05, 3.0124999999998903e-05, 3.0221999999999888e-05, 2.9611000000002302e-05, 2.9764000000001567e-05, 3.0486000000003177e-05, 2.9735999999998958e-05, 3.042999999999796e-05, 2.9555000000000553e-05, 3.0124999999998903e-05, 3.0375000000002622e-05, 2.9792000000000707e-05, 2.9792000000000707e-05, 2.9666999999997112e-05, 3.0068999999997154e-05, 3.0417000000001332e-05, 3.0403000000001762e-05, 3.041599999999839e-05, 2.9722000000002857e-05, 2.9985999999999208e-05, 3.0235999999999458e-05, 2.969499999999972e-05, 2.9652999999997542e-05, 2.9874999999998653e-05, 3.0485999999999708e-05, 2.9653000000001012e-05, 2.9902000000001788e-05, 2.9931000000000402e-05, 3.0167000000001082e-05, 3.0083000000000193e-05, 2.9792000000000707e-05, 3.048699999999918e-05, 2.9694000000000248e-05, 2.9805000000000803e-05, 2.9902000000001788e-05]</msg>
<status status="PASS" starttime="20201029 18:18:26.280" endtime="20201029 18:18:26.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.275" endtime="20201029 18:18:26.287"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:26.290" endtime="20201029 18:18:26.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.289" endtime="20201029 18:18:26.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.288" endtime="20201029 18:18:26.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.925" endtime="20201029 18:18:26.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:25.925" endtime="20201029 18:18:26.311"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.320" endtime="20201029 18:18:26.337"></status>
</kw>
<msg timestamp="20201029 18:18:26.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.318" endtime="20201029 18:18:26.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.339" endtime="20201029 18:18:26.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.341" endtime="20201029 18:18:26.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.316" endtime="20201029 18:18:26.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.313" endtime="20201029 18:18:26.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.351" endtime="20201029 18:18:26.637"></status>
</kw>
<msg timestamp="20201029 18:18:26.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019978528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020009389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.349" endtime="20201029 18:18:26.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019978528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020009389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.641" endtime="20201029 18:18:26.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.649" endtime="20201029 18:18:26.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.347" endtime="20201029 18:18:26.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.345" endtime="20201029 18:18:26.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:26.656" level="INFO">${RESULT} = [{'diff': 3.086100000000008e-05}, {'diff': 3.066699999999811e-05}, {'diff': 3.094500000000097e-05}, {'diff': 3.127800000000264e-05}, {'diff': 3.141699999999886e-05}, {'diff': 3.141699999999886e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:26.653" endtime="20201029 18:18:26.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:26.661" level="INFO">${ACCURACY} = {'diff': [3.086100000000008e-05, 3.066699999999811e-05, 3.094500000000097e-05, 3.127800000000264e-05, 3.141699999999886e-05, 3.141699999999886e-05, 3.1362000000000056e-05, 3.095800000000107e-05, 3.127...</msg>
<status status="PASS" starttime="20201029 18:18:26.657" endtime="20201029 18:18:26.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.665" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 18:18:26.664" endtime="20201029 18:18:26.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.668" level="INFO">VALUE: [3.086100000000008e-05, 3.066699999999811e-05, 3.094500000000097e-05, 3.127800000000264e-05, 3.141699999999886e-05, 3.141699999999886e-05, 3.1362000000000056e-05, 3.095800000000107e-05, 3.127799999999917e-05, 3.118000000000218e-05, 3.095900000000054e-05, 3.0554999999998084e-05, 3.151400000000332e-05, 3.0554999999998084e-05, 3.069399999999778e-05, 3.072200000000039e-05, 3.074999999999953e-05, 3.0846999999997043e-05, 3.141599999999939e-05, 3.138899999999972e-05, 3.144399999999853e-05, 3.097200000000064e-05, 3.147200000000114e-05, 3.086100000000008e-05, 3.111100000000033e-05, 3.098600000000021e-05, 3.1346999999997543e-05, 3.136100000000058e-05, 3.059700000000026e-05, 3.082000000000085e-05, 3.066699999999811e-05, 3.074999999999953e-05, 3.104199999999849e-05, 3.070800000000082e-05, 3.055599999999756e-05, 3.151399999999985e-05, 3.131999999999788e-05, 3.141699999999886e-05, 3.130600000000178e-05, 3.108400000000067e-05, 3.0776999999999194e-05, 3.056900000000112e-05, 3.0611999999999306e-05, 3.068100000000115e-05, 3.123600000000046e-05, 3.137500000000015e-05, 3.134700000000101e-05, 3.055500000000155e-05, 3.116599999999914e-05, 3.1040999999999014e-05]</msg>
<status status="PASS" starttime="20201029 18:18:26.666" endtime="20201029 18:18:26.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.661" endtime="20201029 18:18:26.669"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:26.673" endtime="20201029 18:18:26.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.671" endtime="20201029 18:18:26.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.670" endtime="20201029 18:18:26.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.312" endtime="20201029 18:18:26.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.311" endtime="20201029 18:18:26.693"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.702" endtime="20201029 18:18:26.724"></status>
</kw>
<msg timestamp="20201029 18:18:26.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.701" endtime="20201029 18:18:26.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:26.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:26.725" endtime="20201029 18:18:26.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.728" endtime="20201029 18:18:26.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.698" endtime="20201029 18:18:26.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.696" endtime="20201029 18:18:26.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:26.737" endtime="20201029 18:18:27.026"></status>
</kw>
<msg timestamp="20201029 18:18:27.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023348861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023381194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:26.736" endtime="20201029 18:18:27.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023348861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023381194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.030" endtime="20201029 18:18:27.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.039" endtime="20201029 18:18:27.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.733" endtime="20201029 18:18:27.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.731" endtime="20201029 18:18:27.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:27.046" level="INFO">${RESULT} = [{'diff': 3.233300000000244e-05}, {'diff': 3.242999999999996e-05}, {'diff': 3.165200000000007e-05}, {'diff': 3.193000000000293e-05}, {'diff': 3.187500000000065e-05}, {'diff': 3.240300000000029e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:27.043" endtime="20201029 18:18:27.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:27.050" level="INFO">${ACCURACY} = {'diff': [3.233300000000244e-05, 3.242999999999996e-05, 3.165200000000007e-05, 3.193000000000293e-05, 3.187500000000065e-05, 3.240300000000029e-05, 3.159700000000126e-05, 3.197200000000164e-05, 3.1973...</msg>
<status status="PASS" starttime="20201029 18:18:27.047" endtime="20201029 18:18:27.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.055" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 18:18:27.054" endtime="20201029 18:18:27.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.057" level="INFO">VALUE: [3.233300000000244e-05, 3.242999999999996e-05, 3.165200000000007e-05, 3.193000000000293e-05, 3.187500000000065e-05, 3.240300000000029e-05, 3.159700000000126e-05, 3.197200000000164e-05, 3.197300000000111e-05, 3.200000000000078e-05, 3.17640000000001e-05, 3.1610999999997363e-05, 3.223600000000146e-05, 3.161100000000083e-05, 3.155600000000203e-05, 3.2082999999998724e-05, 3.191699999999936e-05, 3.180599999999881e-05, 3.152799999999942e-05, 3.223599999999799e-05, 3.227800000000017e-05, 3.231999999999888e-05, 3.191699999999936e-05, 3.190299999999979e-05, 3.184700000000151e-05, 3.220899999999832e-05, 3.202799999999992e-05, 3.236100000000158e-05, 3.166700000000258e-05, 3.236100000000158e-05, 3.233300000000244e-05, 3.200000000000078e-05, 3.166599999999964e-05, 3.166600000000311e-05, 3.225000000000103e-05, 3.222199999999842e-05, 3.2277000000000694e-05, 3.163899999999997e-05, 3.1860999999997613e-05, 3.173600000000096e-05, 3.241699999999986e-05, 3.183300000000194e-05, 3.175000000000053e-05, 3.229199999999974e-05, 3.188900000000022e-05, 3.218099999999918e-05, 3.236100000000158e-05, 3.227800000000017e-05, 3.198600000000121e-05, 3.2110999999997863e-05]</msg>
<status status="PASS" starttime="20201029 18:18:27.056" endtime="20201029 18:18:27.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.051" endtime="20201029 18:18:27.060"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:27.063" endtime="20201029 18:18:27.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.062" endtime="20201029 18:18:27.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.061" endtime="20201029 18:18:27.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.694" endtime="20201029 18:18:27.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:26.694" endtime="20201029 18:18:27.084"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.093" endtime="20201029 18:18:27.109"></status>
</kw>
<msg timestamp="20201029 18:18:27.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.091" endtime="20201029 18:18:27.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.111" endtime="20201029 18:18:27.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.113" endtime="20201029 18:18:27.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.089" endtime="20201029 18:18:27.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.087" endtime="20201029 18:18:27.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.123" endtime="20201029 18:18:27.409"></status>
</kw>
<msg timestamp="20201029 18:18:27.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019862222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.121" endtime="20201029 18:18:27.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019862222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.413" endtime="20201029 18:18:27.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.421" endtime="20201029 18:18:27.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.119" endtime="20201029 18:18:27.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.117" endtime="20201029 18:18:27.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:27.428" level="INFO">${RESULT} = [{'diff': 3.2624999999997933e-05}, {'diff': 3.268000000000021e-05}, {'diff': 3.3305000000000834e-05}, {'diff': 3.325000000000203e-05}, {'diff': 3.3346999999999544e-05}, {'diff': 3.318000000000071e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:27.425" endtime="20201029 18:18:27.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:27.433" level="INFO">${ACCURACY} = {'diff': [3.2624999999997933e-05, 3.268000000000021e-05, 3.3305000000000834e-05, 3.325000000000203e-05, 3.3346999999999544e-05, 3.318000000000071e-05, 3.277800000000067e-05, 3.27640000000011e-05, 3.27...</msg>
<status status="PASS" starttime="20201029 18:18:27.429" endtime="20201029 18:18:27.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.438" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 18:18:27.437" endtime="20201029 18:18:27.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.440" level="INFO">VALUE: [3.2624999999997933e-05, 3.268000000000021e-05, 3.3305000000000834e-05, 3.325000000000203e-05, 3.3346999999999544e-05, 3.318000000000071e-05, 3.277800000000067e-05, 3.27640000000011e-05, 3.272199999999892e-05, 3.295800000000307e-05, 3.3374999999998683e-05, 3.316700000000061e-05, 3.268099999999968e-05, 3.319500000000322e-05, 3.254199999999999e-05, 3.304199999999702e-05, 3.273599999999849e-05, 3.290300000000079e-05, 3.266700000000011e-05, 3.311100000000233e-05, 3.302800000000092e-05, 3.298699999999821e-05, 3.301399999999788e-05, 3.293099999999993e-05, 3.297299999999864e-05, 3.334799999999902e-05, 3.343100000000043e-05, 3.294400000000003e-05, 3.342999999999749e-05, 3.3332999999999974e-05, 3.275000000000153e-05, 3.3054999999997114e-05, 3.3096999999999294e-05, 3.316600000000114e-05, 3.3304999999997364e-05, 3.326399999999813e-05, 3.2555000000000084e-05, 3.287500000000165e-05, 3.299999999999831e-05, 3.254199999999999e-05, 3.325000000000203e-05, 3.273599999999849e-05, 3.341700000000086e-05, 3.254199999999999e-05, 3.330599999999684e-05, 3.298600000000221e-05, 3.281999999999938e-05, 3.341700000000086e-05, 3.266700000000011e-05, 3.293099999999993e-05]</msg>
<status status="PASS" starttime="20201029 18:18:27.439" endtime="20201029 18:18:27.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.434" endtime="20201029 18:18:27.442"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:27.446" endtime="20201029 18:18:27.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.444" endtime="20201029 18:18:27.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.443" endtime="20201029 18:18:27.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.085" endtime="20201029 18:18:27.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.084" endtime="20201029 18:18:27.466"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.475" endtime="20201029 18:18:27.493"></status>
</kw>
<msg timestamp="20201029 18:18:27.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.473" endtime="20201029 18:18:27.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.495" endtime="20201029 18:18:27.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.497" endtime="20201029 18:18:27.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.471" endtime="20201029 18:18:27.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.469" endtime="20201029 18:18:27.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.507" endtime="20201029 18:18:27.793"></status>
</kw>
<msg timestamp="20201029 18:18:27.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019847778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019882056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.505" endtime="20201029 18:18:27.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019847778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019882056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.798" endtime="20201029 18:18:27.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.806" endtime="20201029 18:18:27.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.503" endtime="20201029 18:18:27.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.501" endtime="20201029 18:18:27.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:27.813" level="INFO">${RESULT} = [{'diff': 3.42779999999987e-05}, {'diff': 3.4290999999998795e-05}, {'diff': 3.423599999999999e-05}, {'diff': 3.391700000000136e-05}, {'diff': 3.4110999999999864e-05}, {'diff': 3.443100000000143e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:27.810" endtime="20201029 18:18:27.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:27.817" level="INFO">${ACCURACY} = {'diff': [3.42779999999987e-05, 3.4290999999998795e-05, 3.423599999999999e-05, 3.391700000000136e-05, 3.4110999999999864e-05, 3.443100000000143e-05, 3.370899999999982e-05, 3.3888999999998753e-05, 3.43...</msg>
<status status="PASS" starttime="20201029 18:18:27.814" endtime="20201029 18:18:27.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.822" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 18:18:27.821" endtime="20201029 18:18:27.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.824" level="INFO">VALUE: [3.42779999999987e-05, 3.4290999999998795e-05, 3.423599999999999e-05, 3.391700000000136e-05, 3.4110999999999864e-05, 3.443100000000143e-05, 3.370899999999982e-05, 3.3888999999998753e-05, 3.434800000000002e-05, 3.443100000000143e-05, 3.42640000000026e-05, 3.430600000000131e-05, 3.387500000000265e-05, 3.393000000000146e-05, 3.441599999999892e-05, 3.441600000000239e-05, 3.4097000000000294e-05, 3.3860999999999614e-05, 3.418100000000118e-05, 3.401400000000235e-05, 3.397200000000017e-05, 3.418000000000171e-05, 3.4361000000000114e-05, 3.379200000000124e-05, 3.398599999999974e-05, 3.447200000000067e-05, 3.4069000000001154e-05, 3.372199999999992e-05, 3.423599999999999e-05, 3.405600000000106e-05, 3.3847000000000044e-05, 3.4096999999996824e-05, 3.361100000000283e-05, 3.355600000000056e-05, 3.4152999999998573e-05, 3.418099999999771e-05, 3.3833000000000474e-05, 3.373600000000296e-05, 3.3624999999998934e-05, 3.365299999999807e-05, 3.393100000000093e-05, 3.42779999999987e-05, 3.393100000000093e-05, 3.3805000000001334e-05, 3.4361000000000114e-05, 3.390200000000232e-05, 3.3790999999998295e-05, 3.3541000000001514e-05, 3.366700000000111e-05, 3.424999999999956e-05]</msg>
<status status="PASS" starttime="20201029 18:18:27.823" endtime="20201029 18:18:27.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.818" endtime="20201029 18:18:27.826"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:27.829" endtime="20201029 18:18:27.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.828" endtime="20201029 18:18:27.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.827" endtime="20201029 18:18:27.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.467" endtime="20201029 18:18:27.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.467" endtime="20201029 18:18:27.850"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.859" endtime="20201029 18:18:27.877"></status>
</kw>
<msg timestamp="20201029 18:18:27.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.857" endtime="20201029 18:18:27.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:27.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:27.879" endtime="20201029 18:18:27.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.881" endtime="20201029 18:18:27.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.855" endtime="20201029 18:18:27.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.853" endtime="20201029 18:18:27.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:27.891" endtime="20201029 18:18:28.175"></status>
</kw>
<msg timestamp="20201029 18:18:28.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020844583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020879819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:27.889" endtime="20201029 18:18:28.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020844583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020879819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.179" endtime="20201029 18:18:28.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.188" endtime="20201029 18:18:28.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.887" endtime="20201029 18:18:28.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.885" endtime="20201029 18:18:28.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:28.195" level="INFO">${RESULT} = [{'diff': 3.523600000000099e-05}, {'diff': 3.5361000000001114e-05}, {'diff': 3.519399999999881e-05}, {'diff': 3.5389000000000254e-05}, {'diff': 3.467999999999874e-05}, {'diff': 3.472200000000092e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:28.191" endtime="20201029 18:18:28.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:28.199" level="INFO">${ACCURACY} = {'diff': [3.523600000000099e-05, 3.5361000000001114e-05, 3.519399999999881e-05, 3.5389000000000254e-05, 3.467999999999874e-05, 3.472200000000092e-05, 3.505599999999859e-05, 3.5139000000000004e-05, 3.5...</msg>
<status status="PASS" starttime="20201029 18:18:28.196" endtime="20201029 18:18:28.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.203" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 18:18:28.202" endtime="20201029 18:18:28.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.206" level="INFO">VALUE: [3.523600000000099e-05, 3.5361000000001114e-05, 3.519399999999881e-05, 3.5389000000000254e-05, 3.467999999999874e-05, 3.472200000000092e-05, 3.505599999999859e-05, 3.5139000000000004e-05, 3.5068999999998685e-05, 3.4611000000000364e-05, 3.5332999999998504e-05, 3.47779999999992e-05, 3.49450000000015e-05, 3.502799999999945e-05, 3.4846999999997574e-05, 3.518099999999871e-05, 3.544499999999853e-05, 3.47779999999992e-05, 3.4624999999999934e-05, 3.47779999999992e-05, 3.5346999999998074e-05, 3.493100000000193e-05, 3.54589999999981e-05, 3.5416999999999393e-05, 3.49450000000015e-05, 3.5166999999999143e-05, 3.493099999999846e-05, 3.4776999999999725e-05, 3.497300000000064e-05, 3.534800000000102e-05, 3.500000000000031e-05, 3.5026999999999975e-05, 3.4875000000000184e-05, 3.4583000000001224e-05, 3.5346999999998074e-05, 3.5083000000001724e-05, 3.5125000000000434e-05, 3.523600000000099e-05, 3.518100000000218e-05, 3.4888999999999754e-05, 3.475000000000006e-05, 3.5346999999998074e-05, 3.555599999999909e-05, 3.5083000000001724e-05, 3.54719999999982e-05, 3.551400000000038e-05, 3.5346999999998074e-05, 3.479199999999877e-05, 3.5139000000000004e-05, 3.475000000000006e-05]</msg>
<status status="PASS" starttime="20201029 18:18:28.204" endtime="20201029 18:18:28.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.200" endtime="20201029 18:18:28.208"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:28.212" endtime="20201029 18:18:28.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.210" endtime="20201029 18:18:28.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.209" endtime="20201029 18:18:28.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.851" endtime="20201029 18:18:28.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:27.851" endtime="20201029 18:18:28.233"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.242" endtime="20201029 18:18:28.259"></status>
</kw>
<msg timestamp="20201029 18:18:28.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.240" endtime="20201029 18:18:28.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.260" endtime="20201029 18:18:28.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.263" endtime="20201029 18:18:28.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.237" endtime="20201029 18:18:28.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.235" endtime="20201029 18:18:28.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.272" endtime="20201029 18:18:28.557"></status>
</kw>
<msg timestamp="20201029 18:18:28.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019961653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019997361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.271" endtime="20201029 18:18:28.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019961653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019997361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.562" endtime="20201029 18:18:28.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.570" endtime="20201029 18:18:28.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.268" endtime="20201029 18:18:28.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.266" endtime="20201029 18:18:28.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:28.577" level="INFO">${RESULT} = [{'diff': 3.570800000000235e-05}, {'diff': 3.592999999999999e-05}, {'diff': 3.6096999999998824e-05}, {'diff': 3.618000000000024e-05}, {'diff': 3.569399999999931e-05}, {'diff': 3.625000000000156e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:28.573" endtime="20201029 18:18:28.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:28.582" level="INFO">${ACCURACY} = {'diff': [3.570800000000235e-05, 3.592999999999999e-05, 3.6096999999998824e-05, 3.618000000000024e-05, 3.569399999999931e-05, 3.625000000000156e-05, 3.631999999999941e-05, 3.606999999999916e-05, 3.572...</msg>
<status status="PASS" starttime="20201029 18:18:28.578" endtime="20201029 18:18:28.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.587" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 18:18:28.586" endtime="20201029 18:18:28.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.589" level="INFO">VALUE: [3.570800000000235e-05, 3.592999999999999e-05, 3.6096999999998824e-05, 3.618000000000024e-05, 3.569399999999931e-05, 3.625000000000156e-05, 3.631999999999941e-05, 3.606999999999916e-05, 3.572199999999845e-05, 3.5903000000000324e-05, 3.62919999999968e-05, 3.607000000000263e-05, 3.572200000000192e-05, 3.630599999999984e-05, 3.630599999999984e-05, 3.581999999999891e-05, 3.569399999999931e-05, 3.579199999999977e-05, 3.602800000000045e-05, 3.636199999999812e-05, 3.592999999999999e-05, 3.6055000000000115e-05, 3.575000000000106e-05, 3.573600000000149e-05, 3.598599999999827e-05, 3.569399999999931e-05, 3.6277000000001225e-05, 3.6110999999998394e-05, 3.5833000000002474e-05, 3.5541000000000045e-05, 3.602800000000045e-05, 3.573600000000149e-05, 3.623599999999852e-05, 3.652799999999748e-05, 3.5568999999999185e-05, 3.599999999999784e-05, 3.591700000000336e-05, 3.568100000000268e-05, 3.6346999999999074e-05, 3.6180999999999713e-05, 3.632000000000288e-05, 3.622199999999895e-05, 3.555599999999909e-05, 3.582000000000238e-05, 3.6180999999999713e-05, 3.629200000000027e-05, 3.606999999999916e-05, 3.62780000000007e-05, 3.57780000000002e-05, 3.559800000000127e-05]</msg>
<status status="PASS" starttime="20201029 18:18:28.588" endtime="20201029 18:18:28.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.583" endtime="20201029 18:18:28.590"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:28.594" endtime="20201029 18:18:28.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.593" endtime="20201029 18:18:28.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.591" endtime="20201029 18:18:28.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.233" endtime="20201029 18:18:28.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.233" endtime="20201029 18:18:28.615"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.624" endtime="20201029 18:18:28.642"></status>
</kw>
<msg timestamp="20201029 18:18:28.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.622" endtime="20201029 18:18:28.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:28.643" endtime="20201029 18:18:28.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.646" endtime="20201029 18:18:28.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.620" endtime="20201029 18:18:28.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.618" endtime="20201029 18:18:28.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.655" endtime="20201029 18:18:28.941"></status>
</kw>
<msg timestamp="20201029 18:18:28.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019910472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019947819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.653" endtime="20201029 18:18:28.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019910472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019947819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:28.945" endtime="20201029 18:18:28.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:28.954" endtime="20201029 18:18:28.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.651" endtime="20201029 18:18:28.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.649" endtime="20201029 18:18:28.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:28.960" level="INFO">${RESULT} = [{'diff': 3.7347000000000075e-05}, {'diff': 3.711199999999887e-05}, {'diff': 3.7110999999999394e-05}, {'diff': 3.674999999999859e-05}, {'diff': 3.734799999999955e-05}, {'diff': 3.6625000000001934e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:28.957" endtime="20201029 18:18:28.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:28.965" level="INFO">${ACCURACY} = {'diff': [3.7347000000000075e-05, 3.711199999999887e-05, 3.7110999999999394e-05, 3.674999999999859e-05, 3.734799999999955e-05, 3.6625000000001934e-05, 3.74720000000002e-05, 3.6625000000001934e-05, 3.7...</msg>
<status status="PASS" starttime="20201029 18:18:28.961" endtime="20201029 18:18:28.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.969" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 18:18:28.968" endtime="20201029 18:18:28.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:28.972" level="INFO">VALUE: [3.7347000000000075e-05, 3.711199999999887e-05, 3.7110999999999394e-05, 3.674999999999859e-05, 3.734799999999955e-05, 3.6625000000001934e-05, 3.74720000000002e-05, 3.6625000000001934e-05, 3.7068999999997215e-05, 3.7332999999997035e-05, 3.7276999999998756e-05, 3.7305000000001365e-05, 3.734799999999955e-05, 3.694400000000056e-05, 3.670799999999988e-05, 3.655600000000009e-05, 3.7430999999997494e-05, 3.7360999999999644e-05, 3.7347000000000075e-05, 3.674999999999859e-05, 3.7110999999999394e-05, 3.6582999999999755e-05, 3.722299999999942e-05, 3.6610999999998894e-05, 3.730600000000084e-05, 3.705600000000059e-05, 3.704199999999755e-05, 3.6624999999998464e-05, 3.6916999999997424e-05, 3.699999999999884e-05, 3.748699999999924e-05, 3.693000000000099e-05, 3.6903000000001324e-05, 3.7124999999998964e-05, 3.7153000000001574e-05, 3.722199999999995e-05, 3.7333000000000505e-05, 3.7152999999998104e-05, 3.6596999999999325e-05, 3.7055000000001115e-05, 3.749999999999934e-05, 3.6874999999998714e-05, 3.7360999999999644e-05, 3.723599999999952e-05, 3.6667000000000644e-05, 3.748599999999977e-05, 3.704200000000102e-05, 3.656999999999966e-05, 3.679200000000077e-05, 3.7111000000002864e-05]</msg>
<status status="PASS" starttime="20201029 18:18:28.970" endtime="20201029 18:18:28.973"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.966" endtime="20201029 18:18:28.973"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:28.977" endtime="20201029 18:18:28.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.976" endtime="20201029 18:18:28.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.974" endtime="20201029 18:18:28.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.616" endtime="20201029 18:18:28.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.615" endtime="20201029 18:18:28.998"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.007" endtime="20201029 18:18:29.026"></status>
</kw>
<msg timestamp="20201029 18:18:29.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.005" endtime="20201029 18:18:29.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.027" endtime="20201029 18:18:29.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.030" endtime="20201029 18:18:29.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.003" endtime="20201029 18:18:29.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.000" endtime="20201029 18:18:29.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.039" endtime="20201029 18:18:29.324"></status>
</kw>
<msg timestamp="20201029 18:18:29.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020992389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021030319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.037" endtime="20201029 18:18:29.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020992389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021030319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.328" endtime="20201029 18:18:29.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.336" endtime="20201029 18:18:29.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.035" endtime="20201029 18:18:29.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.033" endtime="20201029 18:18:29.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:29.343" level="INFO">${RESULT} = [{'diff': 3.792999999999852e-05}, {'diff': 3.76659999999987e-05}, {'diff': 3.7903000000002324e-05}, {'diff': 3.841599999999945e-05}, {'diff': 3.823600000000052e-05}, {'diff': 3.7902999999998854e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:29.340" endtime="20201029 18:18:29.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:29.347" level="INFO">${ACCURACY} = {'diff': [3.792999999999852e-05, 3.76659999999987e-05, 3.7903000000002324e-05, 3.841599999999945e-05, 3.823600000000052e-05, 3.7902999999998854e-05, 3.791599999999895e-05, 3.7554999999998145e-05, 3.82...</msg>
<status status="PASS" starttime="20201029 18:18:29.344" endtime="20201029 18:18:29.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.355" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 18:18:29.352" endtime="20201029 18:18:29.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.358" level="INFO">VALUE: [3.792999999999852e-05, 3.76659999999987e-05, 3.7903000000002324e-05, 3.841599999999945e-05, 3.823600000000052e-05, 3.7902999999998854e-05, 3.791599999999895e-05, 3.7554999999998145e-05, 3.820800000000138e-05, 3.8111000000000395e-05, 3.81659999999992e-05, 3.8124999999999964e-05, 3.7638999999999034e-05, 3.768000000000174e-05, 3.7610999999999895e-05, 3.822200000000095e-05, 3.780599999999787e-05, 3.7652999999998604e-05, 3.8444999999998064e-05, 3.7833000000001005e-05, 3.775000000000306e-05, 3.7917000000001894e-05, 3.7888999999999284e-05, 3.7861000000000145e-05, 3.809799999999683e-05, 3.792999999999852e-05, 3.80980000000003e-05, 3.838800000000031e-05, 3.822200000000095e-05, 3.79720000000007e-05, 3.8125000000003434e-05, 3.7874999999999714e-05, 3.84720000000012e-05, 3.774999999999959e-05, 3.7541000000002045e-05, 3.8361000000000645e-05, 3.841599999999945e-05, 3.8291000000002795e-05, 3.823599999999705e-05, 3.770800000000088e-05, 3.7833000000001005e-05, 3.8152999999999104e-05, 3.799999999999984e-05, 3.7610999999999895e-05, 3.84720000000012e-05, 3.820800000000138e-05, 3.757000000000066e-05, 3.780600000000134e-05, 3.8459000000001103e-05, 3.757000000000066e-05]</msg>
<status status="PASS" starttime="20201029 18:18:29.356" endtime="20201029 18:18:29.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.348" endtime="20201029 18:18:29.361"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:29.367" endtime="20201029 18:18:29.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.366" endtime="20201029 18:18:29.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.363" endtime="20201029 18:18:29.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.999" endtime="20201029 18:18:29.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:28.998" endtime="20201029 18:18:29.388"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.397" endtime="20201029 18:18:29.417"></status>
</kw>
<msg timestamp="20201029 18:18:29.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.396" endtime="20201029 18:18:29.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.419" endtime="20201029 18:18:29.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.421" endtime="20201029 18:18:29.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.393" endtime="20201029 18:18:29.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.391" endtime="20201029 18:18:29.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.431" endtime="20201029 18:18:29.716"></status>
</kw>
<msg timestamp="20201029 18:18:29.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020020819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020059597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.429" endtime="20201029 18:18:29.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020020819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020059597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.720" endtime="20201029 18:18:29.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.729" endtime="20201029 18:18:29.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.426" endtime="20201029 18:18:29.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.425" endtime="20201029 18:18:29.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:29.735" level="INFO">${RESULT} = [{'diff': 3.877799999999973e-05}, {'diff': 3.8832999999998535e-05}, {'diff': 3.8832999999998535e-05}, {'diff': 3.873600000000102e-05}, {'diff': 3.9445000000002534e-05}, {'diff': 3.8611000000000895e-05...</msg>
<status status="PASS" starttime="20201029 18:18:29.732" endtime="20201029 18:18:29.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:29.741" level="INFO">${ACCURACY} = {'diff': [3.877799999999973e-05, 3.8832999999998535e-05, 3.8832999999998535e-05, 3.873600000000102e-05, 3.9445000000002534e-05, 3.8611000000000895e-05, 3.8930999999998994e-05, 3.904199999999955e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:18:29.736" endtime="20201029 18:18:29.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.745" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 18:18:29.744" endtime="20201029 18:18:29.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.748" level="INFO">VALUE: [3.877799999999973e-05, 3.8832999999998535e-05, 3.8832999999998535e-05, 3.873600000000102e-05, 3.9445000000002534e-05, 3.8611000000000895e-05, 3.8930999999998994e-05, 3.904199999999955e-05, 3.8889000000000284e-05, 3.950000000000134e-05, 3.8931000000002464e-05, 3.8889000000000284e-05, 3.873599999999755e-05, 3.8666999999999174e-05, 3.8667000000002644e-05, 3.948600000000177e-05, 3.9346999999998605e-05, 3.901400000000041e-05, 3.85980000000008e-05, 3.901400000000041e-05, 3.86659999999997e-05, 3.8889000000000284e-05, 3.8652999999999604e-05, 3.917999999999977e-05, 3.925000000000109e-05, 3.9110999999997925e-05, 3.869399999999884e-05, 3.9290999999996856e-05, 3.9054999999999646e-05, 3.8625000000000465e-05, 3.851399999999991e-05, 3.925000000000109e-05, 3.880599999999887e-05, 3.9403000000000354e-05, 3.8680999999998744e-05, 3.922200000000195e-05, 3.872199999999798e-05, 3.9430999999999494e-05, 3.872199999999798e-05, 3.923599999999805e-05, 3.8680999999998744e-05, 3.8763000000000686e-05, 3.8596999999997855e-05, 3.9431000000002964e-05, 3.9346999999998605e-05, 3.940200000000088e-05, 3.9416999999999924e-05, 3.902799999999998e-05, 3.948600000000177e-05, 3.8666999999999174e-05]</msg>
<status status="PASS" starttime="20201029 18:18:29.746" endtime="20201029 18:18:29.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.741" endtime="20201029 18:18:29.749"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:29.753" endtime="20201029 18:18:29.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.751" endtime="20201029 18:18:29.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.750" endtime="20201029 18:18:29.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.389" endtime="20201029 18:18:29.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.389" endtime="20201029 18:18:29.774"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.783" endtime="20201029 18:18:29.800"></status>
</kw>
<msg timestamp="20201029 18:18:29.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.781" endtime="20201029 18:18:29.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:29.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:29.802" endtime="20201029 18:18:29.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.804" endtime="20201029 18:18:29.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.778" endtime="20201029 18:18:29.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.776" endtime="20201029 18:18:29.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:29.813" endtime="20201029 18:18:30.100"></status>
</kw>
<msg timestamp="20201029 18:18:30.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019851764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019891542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:29.812" endtime="20201029 18:18:30.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019851764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019891542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.104" endtime="20201029 18:18:30.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.113" endtime="20201029 18:18:30.114"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.809" endtime="20201029 18:18:30.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.808" endtime="20201029 18:18:30.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:30.119" level="INFO">${RESULT} = [{'diff': 3.977800000000073e-05}, {'diff': 4.0181000000000244e-05}, {'diff': 4.040200000000188e-05}, {'diff': 4.0417000000000924e-05}, {'diff': 3.956999999999919e-05}, {'diff': 3.993000000000052e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:30.116" endtime="20201029 18:18:30.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:30.124" level="INFO">${ACCURACY} = {'diff': [3.977800000000073e-05, 4.0181000000000244e-05, 4.040200000000188e-05, 4.0417000000000924e-05, 3.956999999999919e-05, 3.993000000000052e-05, 4.0153000000001104e-05, 4.0445000000000064e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:18:30.120" endtime="20201029 18:18:30.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.128" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 18:18:30.127" endtime="20201029 18:18:30.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.131" level="INFO">VALUE: [3.977800000000073e-05, 4.0181000000000244e-05, 4.040200000000188e-05, 4.0417000000000924e-05, 3.956999999999919e-05, 3.993000000000052e-05, 4.0153000000001104e-05, 4.0445000000000064e-05, 3.96660000000007e-05, 3.9611000000001895e-05, 3.9777000000001256e-05, 3.990200000000138e-05, 3.972199999999898e-05, 3.9874999999998245e-05, 4.0375000000002215e-05, 4.044400000000059e-05, 3.9832999999999535e-05, 3.99859999999988e-05, 3.9555000000000146e-05, 3.9541000000000576e-05, 3.952800000000048e-05, 4.047199999999973e-05, 3.9874999999998245e-05, 3.97920000000003e-05, 3.9610999999998425e-05, 3.9917000000000424e-05, 4.022200000000295e-05, 4.0181000000000244e-05, 3.977800000000073e-05, 4.0138999999998065e-05, 4.0361000000002645e-05, 3.972199999999898e-05, 4.0110999999998925e-05, 3.951399999999744e-05, 3.9986999999998274e-05, 4.0305000000000896e-05, 4.0487000000002243e-05, 3.9861000000002145e-05, 3.991600000000095e-05, 4.0055000000000646e-05, 4.045800000000016e-05, 4.025000000000209e-05, 4.04720000000032e-05, 3.990200000000138e-05, 4.001400000000141e-05, 4.01799999999973e-05, 4.0304999999997426e-05, 4.0124999999998495e-05, 3.9917000000000424e-05, 4.047199999999973e-05]</msg>
<status status="PASS" starttime="20201029 18:18:30.129" endtime="20201029 18:18:30.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.125" endtime="20201029 18:18:30.132"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:30.136" endtime="20201029 18:18:30.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.134" endtime="20201029 18:18:30.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.133" endtime="20201029 18:18:30.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.775" endtime="20201029 18:18:30.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:29.774" endtime="20201029 18:18:30.157"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.166" endtime="20201029 18:18:30.186"></status>
</kw>
<msg timestamp="20201029 18:18:30.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.164" endtime="20201029 18:18:30.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.188" endtime="20201029 18:18:30.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.191" endtime="20201029 18:18:30.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.161" endtime="20201029 18:18:30.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.159" endtime="20201029 18:18:30.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.200" endtime="20201029 18:18:30.486"></status>
</kw>
<msg timestamp="20201029 18:18:30.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023227403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023268556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.198" endtime="20201029 18:18:30.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023227403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023268556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.490" endtime="20201029 18:18:30.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.499" endtime="20201029 18:18:30.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.196" endtime="20201029 18:18:30.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.194" endtime="20201029 18:18:30.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:30.505" level="INFO">${RESULT} = [{'diff': 4.1152999999998635e-05}, {'diff': 4.1110999999999925e-05}, {'diff': 4.09859999999998e-05}, {'diff': 4.144399999999812e-05}, {'diff': 4.0708999999999884e-05}, {'diff': 4.0555000000001146e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:30.502" endtime="20201029 18:18:30.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:30.510" level="INFO">${ACCURACY} = {'diff': [4.1152999999998635e-05, 4.1110999999999925e-05, 4.09859999999998e-05, 4.144399999999812e-05, 4.0708999999999884e-05, 4.0555000000001146e-05, 4.1374999999999745e-05, 4.0512999999998967e-05, 4...</msg>
<status status="PASS" starttime="20201029 18:18:30.506" endtime="20201029 18:18:30.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.514" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 18:18:30.513" endtime="20201029 18:18:30.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.517" level="INFO">VALUE: [4.1152999999998635e-05, 4.1110999999999925e-05, 4.09859999999998e-05, 4.144399999999812e-05, 4.0708999999999884e-05, 4.0555000000001146e-05, 4.1374999999999745e-05, 4.0512999999998967e-05, 4.1055000000001646e-05, 4.107000000000069e-05, 4.070800000000041e-05, 4.072199999999998e-05, 4.127799999999876e-05, 4.1055000000001646e-05, 4.07920000000013e-05, 4.054200000000105e-05, 4.127799999999876e-05, 4.07920000000013e-05, 4.0888999999998815e-05, 4.1416999999998455e-05, 4.1430999999998025e-05, 4.0681000000000744e-05, 4.1096999999996886e-05, 4.1417000000001924e-05, 4.130600000000137e-05, 4.070800000000041e-05, 4.0930999999997525e-05, 4.077800000000173e-05, 4.0959000000000134e-05, 4.0541000000001576e-05, 4.1374999999999745e-05, 4.0527000000002006e-05, 4.0805000000001396e-05, 4.145800000000116e-05, 4.122200000000048e-05, 4.149999999999987e-05, 4.1124999999999495e-05, 4.0638999999998565e-05, 4.104199999999808e-05, 4.104200000000155e-05, 4.0902999999998385e-05, 4.0860999999999675e-05, 4.104199999999808e-05, 4.131999999999747e-05, 4.09859999999998e-05, 4.1416999999998455e-05, 4.101399999999894e-05, 4.07920000000013e-05, 4.1195000000000814e-05, 4.0875000000002715e-05]</msg>
<status status="PASS" starttime="20201029 18:18:30.515" endtime="20201029 18:18:30.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.511" endtime="20201029 18:18:30.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:30.523" endtime="20201029 18:18:30.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.521" endtime="20201029 18:18:30.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.520" endtime="20201029 18:18:30.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.158" endtime="20201029 18:18:30.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.157" endtime="20201029 18:18:30.544"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.552" endtime="20201029 18:18:30.570"></status>
</kw>
<msg timestamp="20201029 18:18:30.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.551" endtime="20201029 18:18:30.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.572" endtime="20201029 18:18:30.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.575" endtime="20201029 18:18:30.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.548" endtime="20201029 18:18:30.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.546" endtime="20201029 18:18:30.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.584" endtime="20201029 18:18:30.870"></status>
</kw>
<msg timestamp="20201029 18:18:30.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019982, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020023722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:30.582" endtime="20201029 18:18:30.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019982, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020023722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:30.874" endtime="20201029 18:18:30.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.882" endtime="20201029 18:18:30.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.580" endtime="20201029 18:18:30.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.578" endtime="20201029 18:18:30.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:30.889" level="INFO">${RESULT} = [{'diff': 4.172200000000098e-05}, {'diff': 4.223600000000105e-05}, {'diff': 4.225000000000062e-05}, {'diff': 4.2430999999999025e-05}, {'diff': 4.152800000000248e-05}, {'diff': 4.2082999999998316e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:30.886" endtime="20201029 18:18:30.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:30.894" level="INFO">${ACCURACY} = {'diff': [4.172200000000098e-05, 4.223600000000105e-05, 4.225000000000062e-05, 4.2430999999999025e-05, 4.152800000000248e-05, 4.2082999999998316e-05, 4.223600000000105e-05, 4.247199999999826e-05, 4.22...</msg>
<status status="PASS" starttime="20201029 18:18:30.890" endtime="20201029 18:18:30.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.899" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 18:18:30.898" endtime="20201029 18:18:30.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.902" level="INFO">VALUE: [4.172200000000098e-05, 4.223600000000105e-05, 4.225000000000062e-05, 4.2430999999999025e-05, 4.152800000000248e-05, 4.2082999999998316e-05, 4.223600000000105e-05, 4.247199999999826e-05, 4.225000000000062e-05, 4.179199999999883e-05, 4.2237000000000524e-05, 4.1723000000000454e-05, 4.227799999999976e-05, 4.21120000000004e-05, 4.2375000000000745e-05, 4.183400000000101e-05, 4.183400000000101e-05, 4.2125000000000495e-05, 4.223599999999758e-05, 4.1624999999999995e-05, 4.242999999999955e-05, 4.1652999999999135e-05, 4.240200000000041e-05, 4.16660000000027e-05, 4.219400000000234e-05, 4.1916999999998955e-05, 4.201399999999994e-05, 4.1652999999999135e-05, 4.177799999999926e-05, 4.1681000000001744e-05, 4.224999999999715e-05, 4.229199999999933e-05, 4.2125000000000495e-05, 4.175000000000012e-05, 4.175000000000012e-05, 4.247199999999826e-05, 4.180600000000187e-05, 4.1624999999999995e-05, 4.1987000000000274e-05, 4.205599999999865e-05, 4.1624999999999995e-05, 4.2430999999999025e-05, 4.169399999999837e-05, 4.21799999999993e-05, 4.166599999999923e-05, 4.1582999999997816e-05, 4.163800000000009e-05, 4.176399999999969e-05, 4.173600000000055e-05, 4.177800000000273e-05]</msg>
<status status="PASS" starttime="20201029 18:18:30.900" endtime="20201029 18:18:30.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.895" endtime="20201029 18:18:30.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:30.907" endtime="20201029 18:18:30.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.905" endtime="20201029 18:18:30.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.904" endtime="20201029 18:18:30.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.545" endtime="20201029 18:18:30.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.544" endtime="20201029 18:18:30.927"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.936" endtime="20201029 18:18:30.954"></status>
</kw>
<msg timestamp="20201029 18:18:30.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.935" endtime="20201029 18:18:30.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:30.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:30.956" endtime="20201029 18:18:30.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.959" endtime="20201029 18:18:30.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.932" endtime="20201029 18:18:30.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.930" endtime="20201029 18:18:30.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:30.968" endtime="20201029 18:18:31.255"></status>
</kw>
<msg timestamp="20201029 18:18:31.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019928792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019971486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:30.966" endtime="20201029 18:18:31.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019928792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019971486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.260" endtime="20201029 18:18:31.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.268" endtime="20201029 18:18:31.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.964" endtime="20201029 18:18:31.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.962" endtime="20201029 18:18:31.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:31.275" level="INFO">${RESULT} = [{'diff': 4.269399999999937e-05}, {'diff': 4.2916999999999955e-05}, {'diff': 4.3124999999998026e-05}, {'diff': 4.301400000000094e-05}, {'diff': 4.3194999999999345e-05}, {'diff': 4.33059999999999e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:31.272" endtime="20201029 18:18:31.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:31.279" level="INFO">${ACCURACY} = {'diff': [4.269399999999937e-05, 4.2916999999999955e-05, 4.3124999999998026e-05, 4.301400000000094e-05, 4.3194999999999345e-05, 4.33059999999999e-05, 4.2860999999998206e-05, 4.3153000000000635e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:18:31.276" endtime="20201029 18:18:31.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.284" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 18:18:31.283" endtime="20201029 18:18:31.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.286" level="INFO">VALUE: [4.269399999999937e-05, 4.2916999999999955e-05, 4.3124999999998026e-05, 4.301400000000094e-05, 4.3194999999999345e-05, 4.33059999999999e-05, 4.2860999999998206e-05, 4.3153000000000635e-05, 4.34860000000023e-05, 4.34860000000023e-05, 4.280600000000287e-05, 4.305599999999965e-05, 4.290200000000091e-05, 4.3139000000001065e-05, 4.290200000000091e-05, 4.2625000000000995e-05, 4.2596999999998386e-05, 4.348599999999883e-05, 4.2847000000002106e-05, 4.34999999999984e-05, 4.3125000000001495e-05, 4.322199999999901e-05, 4.305599999999965e-05, 4.322200000000248e-05, 4.2903000000000385e-05, 4.269399999999937e-05, 4.304200000000008e-05, 4.283400000000201e-05, 4.2610999999997956e-05, 4.3403000000000885e-05, 4.3125000000001495e-05, 4.344400000000012e-05, 4.2597000000001856e-05, 4.2625000000000995e-05, 4.251400000000044e-05, 4.255599999999915e-05, 4.269399999999937e-05, 4.323600000000205e-05, 4.2805000000003396e-05, 4.308400000000226e-05, 4.3374999999998276e-05, 4.2554999999999676e-05, 4.3055000000000176e-05, 4.3346999999999136e-05, 4.294399999999962e-05, 4.341600000000098e-05, 4.270799999999894e-05, 4.2610999999997956e-05, 4.2611000000001426e-05, 4.270800000000241e-05]</msg>
<status status="PASS" starttime="20201029 18:18:31.285" endtime="20201029 18:18:31.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.280" endtime="20201029 18:18:31.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:31.295" endtime="20201029 18:18:31.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.294" endtime="20201029 18:18:31.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.293" endtime="20201029 18:18:31.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.928" endtime="20201029 18:18:31.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:30.928" endtime="20201029 18:18:31.316"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.325" endtime="20201029 18:18:31.343"></status>
</kw>
<msg timestamp="20201029 18:18:31.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.323" endtime="20201029 18:18:31.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.345" endtime="20201029 18:18:31.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.348" endtime="20201029 18:18:31.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.321" endtime="20201029 18:18:31.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.319" endtime="20201029 18:18:31.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.357" endtime="20201029 18:18:31.643"></status>
</kw>
<msg timestamp="20201029 18:18:31.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020859694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020903458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.355" endtime="20201029 18:18:31.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020859694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020903458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.647" endtime="20201029 18:18:31.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.656" endtime="20201029 18:18:31.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.353" endtime="20201029 18:18:31.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.351" endtime="20201029 18:18:31.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:31.662" level="INFO">${RESULT} = [{'diff': 4.376399999999822e-05}, {'diff': 4.448599999999983e-05}, {'diff': 4.370799999999994e-05}, {'diff': 4.379100000000136e-05}, {'diff': 4.373599999999908e-05}, {'diff': 4.379199999999736e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:31.659" endtime="20201029 18:18:31.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:31.667" level="INFO">${ACCURACY} = {'diff': [4.376399999999822e-05, 4.448599999999983e-05, 4.370799999999994e-05, 4.379100000000136e-05, 4.373599999999908e-05, 4.379199999999736e-05, 4.423599999999958e-05, 4.4083000000000316e-05, 4.420...</msg>
<status status="PASS" starttime="20201029 18:18:31.663" endtime="20201029 18:18:31.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.671" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 18:18:31.670" endtime="20201029 18:18:31.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.674" level="INFO">VALUE: [4.376399999999822e-05, 4.448599999999983e-05, 4.370799999999994e-05, 4.379100000000136e-05, 4.373599999999908e-05, 4.379199999999736e-05, 4.423599999999958e-05, 4.4083000000000316e-05, 4.420800000000044e-05, 4.4472999999999735e-05, 4.3666999999997236e-05, 4.4360999999999706e-05, 4.3931000000000525e-05, 4.4333000000000566e-05, 4.391600000000148e-05, 4.429200000000133e-05, 4.373599999999908e-05, 4.4110999999999456e-05, 4.38060000000004e-05, 4.411199999999893e-05, 4.3917000000000955e-05, 4.379099999999789e-05, 4.431899999999753e-05, 4.4096999999999886e-05, 4.373599999999908e-05, 4.401300000000247e-05, 4.404199999999761e-05, 4.427799999999829e-05, 4.424999999999915e-05, 4.3667000000000705e-05, 4.4347000000000136e-05, 4.3569000000000246e-05, 4.405600000000065e-05, 4.384800000000258e-05, 4.402799999999804e-05, 4.398599999999933e-05, 4.39860000000028e-05, 4.44999999999994e-05, 4.429200000000133e-05, 4.372199999999951e-05, 4.4360999999999706e-05, 4.3931000000000525e-05, 4.404199999999761e-05, 4.379200000000083e-05, 4.386199999999868e-05, 4.426299999999925e-05, 4.443000000000155e-05, 4.354200000000058e-05, 4.366600000000123e-05, 4.366600000000123e-05]</msg>
<status status="PASS" starttime="20201029 18:18:31.672" endtime="20201029 18:18:31.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.668" endtime="20201029 18:18:31.676"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:31.680" endtime="20201029 18:18:31.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.678" endtime="20201029 18:18:31.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.677" endtime="20201029 18:18:31.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.317" endtime="20201029 18:18:31.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.317" endtime="20201029 18:18:31.700"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.710" endtime="20201029 18:18:31.727"></status>
</kw>
<msg timestamp="20201029 18:18:31.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.708" endtime="20201029 18:18:31.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:31.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:31.729" endtime="20201029 18:18:31.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.732" endtime="20201029 18:18:31.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.705" endtime="20201029 18:18:31.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.703" endtime="20201029 18:18:31.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:31.741" endtime="20201029 18:18:32.027"></status>
</kw>
<msg timestamp="20201029 18:18:32.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020049792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020094875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:31.739" endtime="20201029 18:18:32.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020049792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020094875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.031" endtime="20201029 18:18:32.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.039" endtime="20201029 18:18:32.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.737" endtime="20201029 18:18:32.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.735" endtime="20201029 18:18:32.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:32.046" level="INFO">${RESULT} = [{'diff': 4.5083000000001316e-05}, {'diff': 4.5430999999998556e-05}, {'diff': 4.484699999999717e-05}, {'diff': 4.5459000000001165e-05}, {'diff': 4.4847000000000636e-05}, {'diff': 4.5152999999999166e-0...</msg>
<status status="PASS" starttime="20201029 18:18:32.043" endtime="20201029 18:18:32.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:32.051" level="INFO">${ACCURACY} = {'diff': [4.5083000000001316e-05, 4.5430999999998556e-05, 4.484699999999717e-05, 4.5459000000001165e-05, 4.4847000000000636e-05, 4.5152999999999166e-05, 4.4638999999999096e-05, 4.5375000000000276e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:32.047" endtime="20201029 18:18:32.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.056" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 18:18:32.055" endtime="20201029 18:18:32.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.059" level="INFO">VALUE: [4.5083000000001316e-05, 4.5430999999998556e-05, 4.484699999999717e-05, 4.5459000000001165e-05, 4.4847000000000636e-05, 4.5152999999999166e-05, 4.4638999999999096e-05, 4.5375000000000276e-05, 4.5111000000000456e-05, 4.4874999999999776e-05, 4.46939999999979e-05, 4.511199999999993e-05, 4.4709000000000415e-05, 4.504199999999861e-05, 4.5319000000001997e-05, 4.540199999999994e-05, 4.502699999999957e-05, 4.5111000000000456e-05, 4.498600000000033e-05, 4.46800000000018e-05, 4.455499999999821e-05, 4.5166999999998736e-05, 4.479200000000183e-05, 4.4888999999999346e-05, 4.55000000000004e-05, 4.4931000000001525e-05, 4.5361000000000706e-05, 4.5375000000000276e-05, 4.49999999999999e-05, 4.5459000000001165e-05, 4.479199999999836e-05, 4.4638999999999096e-05, 4.527799999999929e-05, 4.55000000000004e-05, 4.5069000000001747e-05, 4.4722999999999985e-05, 4.5361000000000706e-05, 4.520800000000144e-05, 4.502799999999904e-05, 4.4638999999999096e-05, 4.504099999999914e-05, 4.497200000000076e-05, 4.4610999999999956e-05, 4.454099999999864e-05, 4.551399999999997e-05, 4.544400000000212e-05, 4.5431000000002025e-05, 4.5361000000000706e-05, 4.4917000000001955e-05, 4.5459000000001165e-05]</msg>
<status status="PASS" starttime="20201029 18:18:32.057" endtime="20201029 18:18:32.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.052" endtime="20201029 18:18:32.060"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:32.064" endtime="20201029 18:18:32.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.062" endtime="20201029 18:18:32.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.061" endtime="20201029 18:18:32.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.701" endtime="20201029 18:18:32.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:31.701" endtime="20201029 18:18:32.084"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.093" endtime="20201029 18:18:32.112"></status>
</kw>
<msg timestamp="20201029 18:18:32.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.092" endtime="20201029 18:18:32.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.113" endtime="20201029 18:18:32.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.116" endtime="20201029 18:18:32.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.089" endtime="20201029 18:18:32.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.087" endtime="20201029 18:18:32.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.125" endtime="20201029 18:18:32.415"></status>
</kw>
<msg timestamp="20201029 18:18:32.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019966778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020013264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.124" endtime="20201029 18:18:32.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019966778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020013264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.419" endtime="20201029 18:18:32.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.428" endtime="20201029 18:18:32.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.121" endtime="20201029 18:18:32.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.119" endtime="20201029 18:18:32.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:32.434" level="INFO">${RESULT} = [{'diff': 4.648599999999836e-05}, {'diff': 4.6444999999999126e-05}, {'diff': 4.559699999999792e-05}, {'diff': 4.5666999999999236e-05}, {'diff': 4.579199999999936e-05}, {'diff': 4.648599999999836e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:32.431" endtime="20201029 18:18:32.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:32.439" level="INFO">${ACCURACY} = {'diff': [4.648599999999836e-05, 4.6444999999999126e-05, 4.559699999999792e-05, 4.5666999999999236e-05, 4.579199999999936e-05, 4.648599999999836e-05, 4.627800000000029e-05, 4.5611000000000956e-05, 4.5...</msg>
<status status="PASS" starttime="20201029 18:18:32.435" endtime="20201029 18:18:32.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.443" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 18:18:32.442" endtime="20201029 18:18:32.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.446" level="INFO">VALUE: [4.648599999999836e-05, 4.6444999999999126e-05, 4.559699999999792e-05, 4.5666999999999236e-05, 4.579199999999936e-05, 4.648599999999836e-05, 4.627800000000029e-05, 4.5611000000000956e-05, 4.58329999999986e-05, 4.579199999999936e-05, 4.625000000000115e-05, 4.6166999999999736e-05, 4.629199999999986e-05, 4.588800000000087e-05, 4.6487000000001305e-05, 4.608299999999885e-05, 4.6209000000001915e-05, 4.629100000000039e-05, 4.569400000000237e-05, 4.587499999999731e-05, 4.569400000000237e-05, 4.5625000000000526e-05, 4.5861000000001206e-05, 4.554099999999964e-05, 4.555499999999921e-05, 4.573600000000108e-05, 4.6361000000001706e-05, 4.604100000000014e-05, 4.65000000000014e-05, 4.5875000000000776e-05, 4.6375000000001276e-05, 4.608400000000179e-05, 4.60000000000009e-05, 4.6111000000001456e-05, 4.625000000000115e-05, 4.6444999999999126e-05, 4.5723000000000985e-05, 4.6237000000001055e-05, 4.597199999999829e-05, 4.5709000000001415e-05, 4.620800000000244e-05, 4.620799999999897e-05, 4.643000000000008e-05, 4.591600000000001e-05, 4.5930999999999056e-05, 4.648600000000183e-05, 4.577799999999979e-05, 4.58329999999986e-05, 4.611099999999799e-05, 4.5666999999999236e-05]</msg>
<status status="PASS" starttime="20201029 18:18:32.444" endtime="20201029 18:18:32.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.439" endtime="20201029 18:18:32.447"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:32.451" endtime="20201029 18:18:32.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.449" endtime="20201029 18:18:32.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.448" endtime="20201029 18:18:32.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.085" endtime="20201029 18:18:32.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.085" endtime="20201029 18:18:32.472"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.481" endtime="20201029 18:18:32.502"></status>
</kw>
<msg timestamp="20201029 18:18:32.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.479" endtime="20201029 18:18:32.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.503" endtime="20201029 18:18:32.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.506" endtime="20201029 18:18:32.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.476" endtime="20201029 18:18:32.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.474" endtime="20201029 18:18:32.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.515" endtime="20201029 18:18:32.800"></status>
</kw>
<msg timestamp="20201029 18:18:32.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020907222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020954625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.514" endtime="20201029 18:18:32.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020907222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020954625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.805" endtime="20201029 18:18:32.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.813" endtime="20201029 18:18:32.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.511" endtime="20201029 18:18:32.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.509" endtime="20201029 18:18:32.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:32.820" level="INFO">${RESULT} = [{'diff': 4.7403000000001416e-05}, {'diff': 4.734699999999967e-05}, {'diff': 4.673600000000208e-05}, {'diff': 4.6861000000002206e-05}, {'diff': 4.7445000000000126e-05}, {'diff': 4.704199999999714e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:32.817" endtime="20201029 18:18:32.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:32.824" level="INFO">${ACCURACY} = {'diff': [4.7403000000001416e-05, 4.734699999999967e-05, 4.673600000000208e-05, 4.6861000000002206e-05, 4.7445000000000126e-05, 4.704199999999714e-05, 4.7431000000000556e-05, 4.6917000000000486e-05, 4...</msg>
<status status="PASS" starttime="20201029 18:18:32.821" endtime="20201029 18:18:32.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.829" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 18:18:32.828" endtime="20201029 18:18:32.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.831" level="INFO">VALUE: [4.7403000000001416e-05, 4.734699999999967e-05, 4.673600000000208e-05, 4.6861000000002206e-05, 4.7445000000000126e-05, 4.704199999999714e-05, 4.7431000000000556e-05, 4.6917000000000486e-05, 4.7389000000001846e-05, 4.744400000000065e-05, 4.688899999999788e-05, 4.744400000000065e-05, 4.656899999999978e-05, 4.709699999999942e-05, 4.745800000000022e-05, 4.743000000000108e-05, 4.673599999999861e-05, 4.694400000000015e-05, 4.734699999999967e-05, 4.7403000000001416e-05, 4.7111000000002456e-05, 4.742999999999761e-05, 4.674999999999818e-05, 4.7167000000000736e-05, 4.697199999999929e-05, 4.7445000000000126e-05, 4.720799999999997e-05, 4.6889000000001346e-05, 4.737499999999881e-05, 4.6903000000000916e-05, 4.702800000000104e-05, 4.687499999999831e-05, 4.75139999999985e-05, 4.698600000000233e-05, 4.7375000000002276e-05, 4.734699999999967e-05, 4.656899999999978e-05, 4.706899999999681e-05, 4.73879999999989e-05, 4.680500000000046e-05, 4.684699999999917e-05, 4.655500000000021e-05, 4.706900000000028e-05, 4.736099999999924e-05, 4.677799999999732e-05, 4.679200000000036e-05, 4.655599999999968e-05, 4.673599999999861e-05, 4.654200000000011e-05, 4.698599999999886e-05]</msg>
<status status="PASS" starttime="20201029 18:18:32.830" endtime="20201029 18:18:32.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.825" endtime="20201029 18:18:32.833"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:32.837" endtime="20201029 18:18:32.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.836" endtime="20201029 18:18:32.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.835" endtime="20201029 18:18:32.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.473" endtime="20201029 18:18:32.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.472" endtime="20201029 18:18:32.858"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.867" endtime="20201029 18:18:32.885"></status>
</kw>
<msg timestamp="20201029 18:18:32.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.865" endtime="20201029 18:18:32.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:32.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:32.886" endtime="20201029 18:18:32.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.889" endtime="20201029 18:18:32.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.863" endtime="20201029 18:18:32.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.860" endtime="20201029 18:18:32.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:32.898" endtime="20201029 18:18:33.184"></status>
</kw>
<msg timestamp="20201029 18:18:33.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019875653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019923361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:32.896" endtime="20201029 18:18:33.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019875653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019923361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.188" endtime="20201029 18:18:33.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.197" endtime="20201029 18:18:33.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.894" endtime="20201029 18:18:33.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.892" endtime="20201029 18:18:33.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:33.203" level="INFO">${RESULT} = [{'diff': 4.770800000000047e-05}, {'diff': 4.780500000000146e-05}, {'diff': 4.791699999999802e-05}, {'diff': 4.823600000000011e-05}, {'diff': 4.841599999999904e-05}, {'diff': 4.790199999999897e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:33.200" endtime="20201029 18:18:33.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:33.208" level="INFO">${ACCURACY} = {'diff': [4.770800000000047e-05, 4.780500000000146e-05, 4.791699999999802e-05, 4.823600000000011e-05, 4.841599999999904e-05, 4.790199999999897e-05, 4.773599999999961e-05, 4.76940000000009e-05, 4.81659...</msg>
<status status="PASS" starttime="20201029 18:18:33.204" endtime="20201029 18:18:33.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.213" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 18:18:33.212" endtime="20201029 18:18:33.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.216" level="INFO">VALUE: [4.770800000000047e-05, 4.780500000000146e-05, 4.791699999999802e-05, 4.823600000000011e-05, 4.841599999999904e-05, 4.790199999999897e-05, 4.773599999999961e-05, 4.76940000000009e-05, 4.816599999999879e-05, 4.817999999999836e-05, 4.780499999999799e-05, 4.813899999999913e-05, 4.773599999999961e-05, 4.8153000000002166e-05, 4.80000000000029e-05, 4.768099999999734e-05, 4.802800000000204e-05, 4.830500000000196e-05, 4.7667000000001236e-05, 4.812499999999956e-05, 4.804200000000161e-05, 4.8209000000000446e-05, 4.809799999999989e-05, 4.786199999999921e-05, 4.81940000000014e-05, 4.817999999999836e-05, 4.848599999999689e-05, 4.797200000000029e-05, 4.806900000000128e-05, 4.804099999999867e-05, 4.779100000000189e-05, 4.795800000000072e-05, 4.819399999999793e-05, 4.780600000000093e-05, 4.754199999999764e-05, 4.8181000000001306e-05, 4.8236999999999586e-05, 4.799999999999943e-05, 4.78200000000005e-05, 4.7667000000001236e-05, 4.809799999999989e-05, 4.777799999999832e-05, 4.757000000000025e-05, 4.7625000000002526e-05, 4.8167000000001736e-05, 4.807000000000075e-05, 4.797200000000029e-05, 4.758300000000035e-05, 4.829099999999892e-05, 4.8167000000001736e-05]</msg>
<status status="PASS" starttime="20201029 18:18:33.214" endtime="20201029 18:18:33.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.209" endtime="20201029 18:18:33.217"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:33.221" endtime="20201029 18:18:33.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.219" endtime="20201029 18:18:33.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.218" endtime="20201029 18:18:33.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.859" endtime="20201029 18:18:33.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:32.858" endtime="20201029 18:18:33.242"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.250" endtime="20201029 18:18:33.270"></status>
</kw>
<msg timestamp="20201029 18:18:33.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.249" endtime="20201029 18:18:33.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.271" endtime="20201029 18:18:33.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.274" endtime="20201029 18:18:33.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.246" endtime="20201029 18:18:33.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.244" endtime="20201029 18:18:33.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.283" endtime="20201029 18:18:33.571"></status>
</kw>
<msg timestamp="20201029 18:18:33.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019820528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019869125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.282" endtime="20201029 18:18:33.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019820528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019869125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.575" endtime="20201029 18:18:33.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.584" endtime="20201029 18:18:33.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.279" endtime="20201029 18:18:33.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.277" endtime="20201029 18:18:33.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:33.591" level="INFO">${RESULT} = [{'diff': 4.859700000000092e-05}, {'diff': 4.918099999999884e-05}, {'diff': 4.891699999999902e-05}, {'diff': 4.925000000000068e-05}, {'diff': 4.9181000000002306e-05}, {'diff': 4.859699999999745e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:33.587" endtime="20201029 18:18:33.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:33.595" level="INFO">${ACCURACY} = {'diff': [4.859700000000092e-05, 4.918099999999884e-05, 4.891699999999902e-05, 4.925000000000068e-05, 4.9181000000002306e-05, 4.859699999999745e-05, 4.905600000000218e-05, 4.929200000000286e-05, 4.922...</msg>
<status status="PASS" starttime="20201029 18:18:33.592" endtime="20201029 18:18:33.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.599" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 18:18:33.598" endtime="20201029 18:18:33.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.602" level="INFO">VALUE: [4.859700000000092e-05, 4.918099999999884e-05, 4.891699999999902e-05, 4.925000000000068e-05, 4.9181000000002306e-05, 4.859699999999745e-05, 4.905600000000218e-05, 4.929200000000286e-05, 4.9223000000001016e-05, 4.881899999999856e-05, 4.913900000000013e-05, 4.879199999999889e-05, 4.893000000000258e-05, 4.879099999999942e-05, 4.877699999999985e-05, 4.927799999999982e-05, 4.940200000000047e-05, 4.888899999999988e-05, 4.948600000000136e-05, 4.906899999999881e-05, 4.875000000000018e-05, 4.852799999999907e-05, 4.920800000000197e-05, 4.891699999999902e-05, 4.929099999999992e-05, 4.879199999999889e-05, 4.894399999999868e-05, 4.913900000000013e-05, 4.923600000000111e-05, 4.8708999999997477e-05, 4.8695000000001376e-05, 4.859699999999745e-05, 4.941699999999952e-05, 4.925000000000068e-05, 4.8958999999997727e-05, 4.924999999999721e-05, 4.866600000000276e-05, 4.948600000000136e-05, 4.886100000000074e-05, 4.912500000000056e-05, 4.859699999999745e-05, 4.923600000000111e-05, 4.863899999999963e-05, 4.938900000000038e-05, 4.873600000000061e-05, 4.859700000000092e-05, 4.881900000000203e-05, 4.904199999999914e-05, 4.898600000000086e-05, 4.897200000000129e-05]</msg>
<status status="PASS" starttime="20201029 18:18:33.601" endtime="20201029 18:18:33.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.596" endtime="20201029 18:18:33.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:33.607" endtime="20201029 18:18:33.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.606" endtime="20201029 18:18:33.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.604" endtime="20201029 18:18:33.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.242" endtime="20201029 18:18:33.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.242" endtime="20201029 18:18:33.628"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.637" endtime="20201029 18:18:33.660"></status>
</kw>
<msg timestamp="20201029 18:18:33.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.635" endtime="20201029 18:18:33.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:33.662" endtime="20201029 18:18:33.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.665" endtime="20201029 18:18:33.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.633" endtime="20201029 18:18:33.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.630" endtime="20201029 18:18:33.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.674" endtime="20201029 18:18:33.961"></status>
</kw>
<msg timestamp="20201029 18:18:33.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023192097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023242278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.672" endtime="20201029 18:18:33.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023192097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023242278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:33.965" endtime="20201029 18:18:33.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:33.974" endtime="20201029 18:18:33.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.670" endtime="20201029 18:18:33.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.668" endtime="20201029 18:18:33.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:33.980" level="INFO">${RESULT} = [{'diff': 5.0181000000003306e-05}, {'diff': 4.959800000000139e-05}, {'diff': 4.980599999999946e-05}, {'diff': 5.005500000000024e-05}, {'diff': 4.991700000000002e-05}, {'diff': 5.0223000000002016e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:33.977" endtime="20201029 18:18:33.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:33.985" level="INFO">${ACCURACY} = {'diff': [5.0181000000003306e-05, 4.959800000000139e-05, 4.980599999999946e-05, 5.005500000000024e-05, 4.991700000000002e-05, 5.0223000000002016e-05, 5.0402000000001473e-05, 5.011100000000199e-05, 4.9...</msg>
<status status="PASS" starttime="20201029 18:18:33.981" endtime="20201029 18:18:33.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.989" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 18:18:33.988" endtime="20201029 18:18:33.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:33.992" level="INFO">VALUE: [5.0181000000003306e-05, 4.959800000000139e-05, 4.980599999999946e-05, 5.005500000000024e-05, 4.991700000000002e-05, 5.0223000000002016e-05, 5.0402000000001473e-05, 5.011100000000199e-05, 4.993000000000011e-05, 5.018000000000036e-05, 4.973599999999814e-05, 4.991700000000002e-05, 5.03469999999992e-05, 5.038900000000138e-05, 5.002800000000057e-05, 4.972199999999857e-05, 5.027799999999735e-05, 4.959799999999792e-05, 5.030599999999996e-05, 4.956999999999878e-05, 5.030599999999996e-05, 4.998599999999839e-05, 5.03469999999992e-05, 5.006899999999981e-05, 5.037499999999834e-05, 5.018099999999984e-05, 4.990300000000045e-05, 4.998600000000186e-05, 4.972199999999857e-05, 4.961100000000149e-05, 4.993000000000011e-05, 5.011099999999852e-05, 5.047200000000279e-05, 5.016700000000027e-05, 5.029099999999745e-05, 5.029200000000039e-05, 5.045799999999975e-05, 5.018000000000036e-05, 5.016700000000027e-05, 4.955599999999921e-05, 5.013900000000113e-05, 5.018099999999984e-05, 5.037500000000181e-05, 4.954199999999964e-05, 5.045899999999923e-05, 4.998599999999839e-05, 4.974999999999771e-05, 4.991700000000002e-05, 4.962500000000106e-05, 5.029100000000092e-05]</msg>
<status status="PASS" starttime="20201029 18:18:33.990" endtime="20201029 18:18:33.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.986" endtime="20201029 18:18:33.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:33.998" endtime="20201029 18:18:34.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.997" endtime="20201029 18:18:34.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.995" endtime="20201029 18:18:34.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.629" endtime="20201029 18:18:34.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:33.628" endtime="20201029 18:18:34.019"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.028" endtime="20201029 18:18:34.047"></status>
</kw>
<msg timestamp="20201029 18:18:34.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.027" endtime="20201029 18:18:34.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.048" endtime="20201029 18:18:34.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.051" endtime="20201029 18:18:34.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.024" endtime="20201029 18:18:34.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.022" endtime="20201029 18:18:34.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.060" endtime="20201029 18:18:34.347"></status>
</kw>
<msg timestamp="20201029 18:18:34.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020311694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020363194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.059" endtime="20201029 18:18:34.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020311694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020363194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.351" endtime="20201029 18:18:34.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.360" endtime="20201029 18:18:34.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.056" endtime="20201029 18:18:34.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.054" endtime="20201029 18:18:34.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:34.366" level="INFO">${RESULT} = [{'diff': 5.149999999999946e-05}, {'diff': 5.072299999999905e-05}, {'diff': 5.083300000000013e-05}, {'diff': 5.068000000000086e-05}, {'diff': 5.086100000000274e-05}, {'diff': 5.054100000000117e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:34.363" endtime="20201029 18:18:34.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:34.371" level="INFO">${ACCURACY} = {'diff': [5.149999999999946e-05, 5.072299999999905e-05, 5.083300000000013e-05, 5.068000000000086e-05, 5.086100000000274e-05, 5.054100000000117e-05, 5.140300000000195e-05, 5.091700000000102e-05, 5.1193...</msg>
<status status="PASS" starttime="20201029 18:18:34.367" endtime="20201029 18:18:34.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.376" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 18:18:34.375" endtime="20201029 18:18:34.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.379" level="INFO">VALUE: [5.149999999999946e-05, 5.072299999999905e-05, 5.083300000000013e-05, 5.068000000000086e-05, 5.086100000000274e-05, 5.054100000000117e-05, 5.140300000000195e-05, 5.091700000000102e-05, 5.1193999999997464e-05, 5.130499999999802e-05, 5.151399999999903e-05, 5.107000000000028e-05, 5.149999999999946e-05, 5.086099999999927e-05, 5.066600000000129e-05, 5.066700000000077e-05, 5.141700000000152e-05, 5.056999999999978e-05, 5.055600000000021e-05, 5.138899999999891e-05, 5.072299999999905e-05, 5.105600000000071e-05, 5.069400000000043e-05, 5.073599999999914e-05, 5.066600000000129e-05, 5.062500000000206e-05, 5.077799999999785e-05, 5.093000000000111e-05, 5.141699999999805e-05, 5.06530000000012e-05, 5.056900000000031e-05, 5.094400000000068e-05, 5.104199999999767e-05, 5.137499999999934e-05, 5.124999999999921e-05, 5.069400000000043e-05, 5.095800000000025e-05, 5.143099999999762e-05, 5.072199999999957e-05, 5.098600000000286e-05, 5.124999999999921e-05, 5.088899999999841e-05, 5.077700000000185e-05, 5.122299999999955e-05, 5.105600000000071e-05, 5.0693999999996964e-05, 5.0887999999998934e-05, 5.054100000000117e-05, 5.093000000000111e-05, 5.083300000000013e-05]</msg>
<status status="PASS" starttime="20201029 18:18:34.377" endtime="20201029 18:18:34.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.372" endtime="20201029 18:18:34.380"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:34.384" endtime="20201029 18:18:34.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.382" endtime="20201029 18:18:34.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.381" endtime="20201029 18:18:34.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.020" endtime="20201029 18:18:34.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.020" endtime="20201029 18:18:34.404"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.413" endtime="20201029 18:18:34.432"></status>
</kw>
<msg timestamp="20201029 18:18:34.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.412" endtime="20201029 18:18:34.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.434" endtime="20201029 18:18:34.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.436" endtime="20201029 18:18:34.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.409" endtime="20201029 18:18:34.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.407" endtime="20201029 18:18:34.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.446" endtime="20201029 18:18:34.731"></status>
</kw>
<msg timestamp="20201029 18:18:34.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019990125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020041944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.444" endtime="20201029 18:18:34.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019990125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020041944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.736" endtime="20201029 18:18:34.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.744" endtime="20201029 18:18:34.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.441" endtime="20201029 18:18:34.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.440" endtime="20201029 18:18:34.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:34.751" level="INFO">${RESULT} = [{'diff': 5.181899999999809e-05}, {'diff': 5.162499999999959e-05}, {'diff': 5.15409999999987e-05}, {'diff': 5.1665999999998824e-05}, {'diff': 5.159700000000045e-05}, {'diff': 5.152699999999913e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:34.747" endtime="20201029 18:18:34.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:34.755" level="INFO">${ACCURACY} = {'diff': [5.181899999999809e-05, 5.162499999999959e-05, 5.15409999999987e-05, 5.1665999999998824e-05, 5.159700000000045e-05, 5.152699999999913e-05, 5.186100000000027e-05, 5.2179999999998894e-05, 5.208...</msg>
<status status="PASS" starttime="20201029 18:18:34.752" endtime="20201029 18:18:34.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.759" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 18:18:34.758" endtime="20201029 18:18:34.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.762" level="INFO">VALUE: [5.181899999999809e-05, 5.162499999999959e-05, 5.15409999999987e-05, 5.1665999999998824e-05, 5.159700000000045e-05, 5.152699999999913e-05, 5.186100000000027e-05, 5.2179999999998894e-05, 5.208299999999791e-05, 5.181900000000156e-05, 5.1929999999998644e-05, 5.237500000000034e-05, 5.161100000000002e-05, 5.229200000000239e-05, 5.161100000000002e-05, 5.183300000000113e-05, 5.197200000000082e-05, 5.190300000000245e-05, 5.204200000000214e-05, 5.23340000000011e-05, 5.183299999999766e-05, 5.218100000000184e-05, 5.240299999999948e-05, 5.248700000000037e-05, 5.244500000000166e-05, 5.230500000000249e-05, 5.2179999999998894e-05, 5.229099999999945e-05, 5.212500000000009e-05, 5.2471999999997854e-05, 5.188899999999941e-05, 5.193000000000211e-05, 5.2485999999997424e-05, 5.186100000000027e-05, 5.172200000000057e-05, 5.1721999999997104e-05, 5.180600000000146e-05, 5.147200000000032e-05, 5.162499999999959e-05, 5.155599999999774e-05, 5.227800000000282e-05, 5.229199999999892e-05, 5.179200000000189e-05, 5.230599999999849e-05, 5.234800000000067e-05, 5.219400000000193e-05, 5.1737000000003086e-05, 5.219400000000193e-05, 5.183299999999766e-05, 5.155500000000174e-05]</msg>
<status status="PASS" starttime="20201029 18:18:34.761" endtime="20201029 18:18:34.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.756" endtime="20201029 18:18:34.763"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:34.767" endtime="20201029 18:18:34.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.766" endtime="20201029 18:18:34.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.764" endtime="20201029 18:18:34.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.405" endtime="20201029 18:18:34.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.405" endtime="20201029 18:18:34.788"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.797" endtime="20201029 18:18:34.817"></status>
</kw>
<msg timestamp="20201029 18:18:34.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.795" endtime="20201029 18:18:34.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:34.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:34.819" endtime="20201029 18:18:34.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.822" endtime="20201029 18:18:34.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.792" endtime="20201029 18:18:34.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.790" endtime="20201029 18:18:34.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:34.831" endtime="20201029 18:18:35.117"></status>
</kw>
<msg timestamp="20201029 18:18:35.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020870917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020923444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:34.829" endtime="20201029 18:18:35.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020870917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020923444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.121" endtime="20201029 18:18:35.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.129" endtime="20201029 18:18:35.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.827" endtime="20201029 18:18:35.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.825" endtime="20201029 18:18:35.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:35.136" level="INFO">${RESULT} = [{'diff': 5.252700000000013e-05}, {'diff': 5.322200000000207e-05}, {'diff': 5.25409999999997e-05}, {'diff': 5.28609999999978e-05}, {'diff': 5.3166000000000324e-05}, {'diff': 5.283300000000213e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:35.133" endtime="20201029 18:18:35.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:35.141" level="INFO">${ACCURACY} = {'diff': [5.252700000000013e-05, 5.322200000000207e-05, 5.25409999999997e-05, 5.28609999999978e-05, 5.3166000000000324e-05, 5.283300000000213e-05, 5.340300000000048e-05, 5.28609999999978e-05, 5.293099...</msg>
<status status="PASS" starttime="20201029 18:18:35.137" endtime="20201029 18:18:35.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.146" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 18:18:35.144" endtime="20201029 18:18:35.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.149" level="INFO">VALUE: [5.252700000000013e-05, 5.322200000000207e-05, 5.25409999999997e-05, 5.28609999999978e-05, 5.3166000000000324e-05, 5.283300000000213e-05, 5.340300000000048e-05, 5.28609999999978e-05, 5.293099999999912e-05, 5.3471999999998854e-05, 5.3499999999997994e-05, 5.28609999999978e-05, 5.301400000000053e-05, 5.288900000000041e-05, 5.337500000000134e-05, 5.284800000000117e-05, 5.336100000000177e-05, 5.306999999999881e-05, 5.268099999999887e-05, 5.3457999999999284e-05, 5.286100000000127e-05, 5.28609999999978e-05, 5.323600000000164e-05, 5.323600000000164e-05, 5.308299999999891e-05, 5.301400000000053e-05, 5.3166000000000324e-05, 5.3485999999998424e-05, 5.259700000000145e-05, 5.3430000000000144e-05, 5.305600000000271e-05, 5.279199999999942e-05, 5.284800000000117e-05, 5.259699999999798e-05, 5.331999999999906e-05, 5.2749999999997244e-05, 5.279200000000289e-05, 5.319499999999894e-05, 5.276400000000028e-05, 5.315300000000023e-05, 5.298700000000087e-05, 5.281900000000256e-05, 5.2457999999998284e-05, 5.311099999999805e-05, 5.3471999999998854e-05, 5.32080000000025e-05, 5.322200000000207e-05, 5.334699999999873e-05, 5.304099999999673e-05, 5.318099999999937e-05]</msg>
<status status="PASS" starttime="20201029 18:18:35.147" endtime="20201029 18:18:35.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.142" endtime="20201029 18:18:35.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:35.155" endtime="20201029 18:18:35.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.153" endtime="20201029 18:18:35.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.152" endtime="20201029 18:18:35.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.789" endtime="20201029 18:18:35.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:34.788" endtime="20201029 18:18:35.176"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.185" endtime="20201029 18:18:35.204"></status>
</kw>
<msg timestamp="20201029 18:18:35.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.183" endtime="20201029 18:18:35.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.206" endtime="20201029 18:18:35.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.208" endtime="20201029 18:18:35.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.181" endtime="20201029 18:18:35.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.178" endtime="20201029 18:18:35.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.217" endtime="20201029 18:18:35.507"></status>
</kw>
<msg timestamp="20201029 18:18:35.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020028819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02008325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:35.216" endtime="20201029 18:18:35.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020028819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02008325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:35.511" endtime="20201029 18:18:35.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.525" endtime="20201029 18:18:35.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.213" endtime="20201029 18:18:35.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.211" endtime="20201029 18:18:35.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:35.532" level="INFO">${RESULT} = [{'diff': 5.443100000000062e-05}, {'diff': 5.426400000000178e-05}, {'diff': 5.354200000000017e-05}, {'diff': 5.4208000000000034e-05}, {'diff': 5.391700000000055e-05}, {'diff': 5.40419999999972e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:35.529" endtime="20201029 18:18:35.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:35.537" level="INFO">${ACCURACY} = {'diff': [5.443100000000062e-05, 5.426400000000178e-05, 5.354200000000017e-05, 5.4208000000000034e-05, 5.391700000000055e-05, 5.40419999999972e-05, 5.437499999999887e-05, 5.4263999999998314e-05, 5.375...</msg>
<status status="PASS" starttime="20201029 18:18:35.533" endtime="20201029 18:18:35.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.541" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 18:18:35.540" endtime="20201029 18:18:35.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.544" level="INFO">VALUE: [5.443100000000062e-05, 5.426400000000178e-05, 5.354200000000017e-05, 5.4208000000000034e-05, 5.391700000000055e-05, 5.40419999999972e-05, 5.437499999999887e-05, 5.4263999999998314e-05, 5.375000000000171e-05, 5.438899999999844e-05, 5.3985999999998924e-05, 5.411199999999852e-05, 5.41809999999969e-05, 5.4443999999997245e-05, 5.3638000000001684e-05, 5.381900000000009e-05, 5.423600000000264e-05, 5.4402000000002004e-05, 5.4499999999998994e-05, 5.361099999999855e-05, 5.35280000000006e-05, 5.365300000000073e-05, 5.437499999999887e-05, 5.390299999999751e-05, 5.398600000000239e-05, 5.38609999999988e-05, 5.382000000000303e-05, 5.406999999999981e-05, 5.4485999999999424e-05, 5.4471999999999854e-05, 5.368099999999987e-05, 5.404200000000067e-05, 5.391700000000055e-05, 5.429200000000092e-05, 5.363900000000116e-05, 5.3680000000000394e-05, 5.356899999999984e-05, 5.3915999999997605e-05, 5.430500000000102e-05, 5.3693999999999964e-05, 5.381900000000009e-05, 5.354200000000017e-05, 5.441700000000105e-05, 5.368099999999987e-05, 5.373600000000214e-05, 5.405600000000024e-05, 5.4180000000000894e-05, 5.395899999999926e-05, 5.437500000000234e-05, 5.3527999999997133e-05]</msg>
<status status="PASS" starttime="20201029 18:18:35.542" endtime="20201029 18:18:35.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.538" endtime="20201029 18:18:35.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:35.549" endtime="20201029 18:18:35.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.547" endtime="20201029 18:18:35.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.546" endtime="20201029 18:18:35.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.177" endtime="20201029 18:18:35.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.176" endtime="20201029 18:18:35.569"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.578" endtime="20201029 18:18:35.597"></status>
</kw>
<msg timestamp="20201029 18:18:35.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.576" endtime="20201029 18:18:35.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.598" endtime="20201029 18:18:35.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.601" endtime="20201029 18:18:35.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.574" endtime="20201029 18:18:35.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.572" endtime="20201029 18:18:35.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.609" endtime="20201029 18:18:35.896"></status>
</kw>
<msg timestamp="20201029 18:18:35.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019397667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019452458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.608" endtime="20201029 18:18:35.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019397667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019452458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.900" endtime="20201029 18:18:35.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.909" endtime="20201029 18:18:35.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.605" endtime="20201029 18:18:35.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.604" endtime="20201029 18:18:35.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:35.915" level="INFO">${RESULT} = [{'diff': 5.479099999999848e-05}, {'diff': 5.513899999999919e-05}, {'diff': 5.538899999999944e-05}, {'diff': 5.5221999999997134e-05}, {'diff': 5.537499999999987e-05}, {'diff': 5.534700000000073e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:35.912" endtime="20201029 18:18:35.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:35.919" level="INFO">${ACCURACY} = {'diff': [5.479099999999848e-05, 5.513899999999919e-05, 5.538899999999944e-05, 5.5221999999997134e-05, 5.537499999999987e-05, 5.534700000000073e-05, 5.513899999999919e-05, 5.45280000000016e-05, 5.4570...</msg>
<status status="PASS" starttime="20201029 18:18:35.916" endtime="20201029 18:18:35.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.924" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 18:18:35.923" endtime="20201029 18:18:35.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.926" level="INFO">VALUE: [5.479099999999848e-05, 5.513899999999919e-05, 5.538899999999944e-05, 5.5221999999997134e-05, 5.537499999999987e-05, 5.534700000000073e-05, 5.513899999999919e-05, 5.45280000000016e-05, 5.457000000000031e-05, 5.459699999999998e-05, 5.469499999999697e-05, 5.532000000000106e-05, 5.5291999999998453e-05, 5.5249999999999744e-05, 5.497299999999983e-05, 5.4541999999997703e-05, 5.490300000000198e-05, 5.5013999999999064e-05, 5.505500000000177e-05, 5.459699999999998e-05, 5.5513999999999564e-05, 5.4722000000000104e-05, 5.5236000000000174e-05, 5.506900000000134e-05, 5.476400000000228e-05, 5.4791999999997953e-05, 5.505599999999777e-05, 5.506999999999734e-05, 5.515300000000223e-05, 5.5291999999998453e-05, 5.462499999999912e-05, 5.48609999999998e-05, 5.4985999999999924e-05, 5.487499999999937e-05, 5.48609999999998e-05, 5.462499999999912e-05, 5.48609999999998e-05, 5.4985999999999924e-05, 5.4999999999999494e-05, 5.4972000000000354e-05, 5.4679999999997925e-05, 5.46670000000013e-05, 5.5041999999998203e-05, 5.459800000000292e-05, 5.4944000000001214e-05, 5.4735999999999674e-05, 5.4791999999997953e-05, 5.482000000000056e-05, 5.458300000000041e-05, 5.500000000000296e-05]</msg>
<status status="PASS" starttime="20201029 18:18:35.925" endtime="20201029 18:18:35.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.920" endtime="20201029 18:18:35.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:35.931" endtime="20201029 18:18:35.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.930" endtime="20201029 18:18:35.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.928" endtime="20201029 18:18:35.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.570" endtime="20201029 18:18:35.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.570" endtime="20201029 18:18:35.952"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.960" endtime="20201029 18:18:35.979"></status>
</kw>
<msg timestamp="20201029 18:18:35.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.959" endtime="20201029 18:18:35.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:35.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:35.981" endtime="20201029 18:18:35.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.983" endtime="20201029 18:18:35.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.956" endtime="20201029 18:18:35.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.954" endtime="20201029 18:18:35.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:35.992" endtime="20201029 18:18:36.293"></status>
</kw>
<msg timestamp="20201029 18:18:36.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020266792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020323069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:35.991" endtime="20201029 18:18:36.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020266792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020323069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.298" endtime="20201029 18:18:36.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.306" endtime="20201029 18:18:36.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.988" endtime="20201029 18:18:36.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.987" endtime="20201029 18:18:36.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:36.312" level="INFO">${RESULT} = [{'diff': 5.627700000000041e-05}, {'diff': 5.6000000000000494e-05}, {'diff': 5.6014000000000064e-05}, {'diff': 5.6264000000000314e-05}, {'diff': 5.63610000000013e-05}, {'diff': 5.6014000000000064e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:36.309" endtime="20201029 18:18:36.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:36.316" level="INFO">${ACCURACY} = {'diff': [5.627700000000041e-05, 5.6000000000000494e-05, 5.6014000000000064e-05, 5.6264000000000314e-05, 5.63610000000013e-05, 5.6014000000000064e-05, 5.611099999999758e-05, 5.5694000000001964e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:18:36.313" endtime="20201029 18:18:36.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.321" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 18:18:36.320" endtime="20201029 18:18:36.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.323" level="INFO">VALUE: [5.627700000000041e-05, 5.6000000000000494e-05, 5.6014000000000064e-05, 5.6264000000000314e-05, 5.63610000000013e-05, 5.6014000000000064e-05, 5.611099999999758e-05, 5.5694000000001964e-05, 5.634699999999826e-05, 5.58610000000008e-05, 5.5735999999997204e-05, 5.611099999999758e-05, 5.5972000000001354e-05, 5.5791999999998954e-05, 5.6486000000001424e-05, 5.558400000000088e-05, 5.562500000000012e-05, 5.591699999999908e-05, 5.630499999999955e-05, 5.5958000000001784e-05, 5.5929999999999175e-05, 5.580499999999905e-05, 5.559700000000098e-05, 5.6222000000001604e-05, 5.581900000000209e-05, 5.58610000000008e-05, 5.611100000000105e-05, 5.6222000000001604e-05, 5.5694000000001964e-05, 5.5555999999998273e-05, 5.5721999999997635e-05, 5.611100000000105e-05, 5.569500000000144e-05, 5.5708000000001534e-05, 5.6291999999999454e-05, 5.569500000000144e-05, 5.591699999999908e-05, 5.6041999999999204e-05, 5.561200000000002e-05, 5.563899999999969e-05, 5.6305999999999023e-05, 5.562500000000012e-05, 5.63610000000013e-05, 5.5750000000000244e-05, 5.5985999999997454e-05, 5.5915999999999605e-05, 5.566699999999883e-05, 5.584700000000123e-05, 5.561100000000055e-05, 5.6207999999998565e-05]</msg>
<status status="PASS" starttime="20201029 18:18:36.322" endtime="20201029 18:18:36.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.317" endtime="20201029 18:18:36.333"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:36.337" endtime="20201029 18:18:36.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.336" endtime="20201029 18:18:36.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.334" endtime="20201029 18:18:36.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.952" endtime="20201029 18:18:36.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:35.952" endtime="20201029 18:18:36.358"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.366" endtime="20201029 18:18:36.385"></status>
</kw>
<msg timestamp="20201029 18:18:36.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.365" endtime="20201029 18:18:36.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.386" endtime="20201029 18:18:36.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.389" endtime="20201029 18:18:36.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.362" endtime="20201029 18:18:36.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.360" endtime="20201029 18:18:36.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.398" endtime="20201029 18:18:36.684"></status>
</kw>
<msg timestamp="20201029 18:18:36.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019529653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01958625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:36.396" endtime="20201029 18:18:36.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019529653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01958625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:36.688" endtime="20201029 18:18:36.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.696" endtime="20201029 18:18:36.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.393" endtime="20201029 18:18:36.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.392" endtime="20201029 18:18:36.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:36.702" level="INFO">${RESULT} = [{'diff': 5.659699999999851e-05}, {'diff': 5.7292000000000454e-05}, {'diff': 5.712500000000162e-05}, {'diff': 5.7235999999998705e-05}, {'diff': 5.743100000000015e-05}, {'diff': 5.691700000000008e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:36.699" endtime="20201029 18:18:36.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:36.707" level="INFO">${ACCURACY} = {'diff': [5.659699999999851e-05, 5.7292000000000454e-05, 5.712500000000162e-05, 5.7235999999998705e-05, 5.743100000000015e-05, 5.691700000000008e-05, 5.655600000000274e-05, 5.716700000000033e-05, 5.68...</msg>
<status status="PASS" starttime="20201029 18:18:36.703" endtime="20201029 18:18:36.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.712" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 18:18:36.711" endtime="20201029 18:18:36.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.714" level="INFO">VALUE: [5.659699999999851e-05, 5.7292000000000454e-05, 5.712500000000162e-05, 5.7235999999998705e-05, 5.743100000000015e-05, 5.691700000000008e-05, 5.655600000000274e-05, 5.716700000000033e-05, 5.68610000000018e-05, 5.661099999999808e-05, 5.7292000000000454e-05, 5.6805999999999524e-05, 5.7235999999998705e-05, 5.73610000000023e-05, 5.7278000000000884e-05, 5.6722000000002104e-05, 5.734699999999926e-05, 5.7014000000001064e-05, 5.65549999999998e-05, 5.73749999999984e-05, 5.6971999999998885e-05, 5.6707999999999065e-05, 5.66809999999994e-05, 5.6791999999999954e-05, 5.71809999999999e-05, 5.669499999999897e-05, 5.73610000000023e-05, 5.7319999999999593e-05, 5.736099999999883e-05, 5.7333999999999163e-05, 5.6679999999999925e-05, 5.6555999999999274e-05, 5.711099999999858e-05, 5.734699999999926e-05, 5.6777999999996914e-05, 5.736099999999883e-05, 5.6957999999999315e-05, 5.704100000000073e-05, 5.70550000000003e-05, 5.6985999999998455e-05, 5.7221999999999135e-05, 5.7263999999997844e-05, 5.712499999999815e-05, 5.659699999999851e-05, 5.7499999999998525e-05, 5.659699999999851e-05, 5.7486000000002424e-05, 5.736099999999883e-05, 5.7527999999997664e-05, 5.7014000000001064e-05]</msg>
<status status="PASS" starttime="20201029 18:18:36.713" endtime="20201029 18:18:36.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.708" endtime="20201029 18:18:36.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:36.719" endtime="20201029 18:18:36.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.718" endtime="20201029 18:18:36.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.716" endtime="20201029 18:18:36.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.358" endtime="20201029 18:18:36.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.358" endtime="20201029 18:18:36.740"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.748" endtime="20201029 18:18:36.766"></status>
</kw>
<msg timestamp="20201029 18:18:36.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.747" endtime="20201029 18:18:36.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:36.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:36.768" endtime="20201029 18:18:36.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.770" endtime="20201029 18:18:36.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.744" endtime="20201029 18:18:36.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.742" endtime="20201029 18:18:36.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:36.779" endtime="20201029 18:18:37.065"></status>
</kw>
<msg timestamp="20201029 18:18:37.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019370792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019429153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:36.778" endtime="20201029 18:18:37.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019370792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019429153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.069" endtime="20201029 18:18:37.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.077" endtime="20201029 18:18:37.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.775" endtime="20201029 18:18:37.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.773" endtime="20201029 18:18:37.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:37.084" level="INFO">${RESULT} = [{'diff': 5.836099999999983e-05}, {'diff': 5.8222000000000135e-05}, {'diff': 5.784699999999976e-05}, {'diff': 5.818099999999743e-05}, {'diff': 5.762500000000212e-05}, {'diff': 5.765300000000126e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:18:37.081" endtime="20201029 18:18:37.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:37.088" level="INFO">${ACCURACY} = {'diff': [5.836099999999983e-05, 5.8222000000000135e-05, 5.784699999999976e-05, 5.818099999999743e-05, 5.762500000000212e-05, 5.765300000000126e-05, 5.813899999999872e-05, 5.811099999999958e-05, 5.818...</msg>
<status status="PASS" starttime="20201029 18:18:37.085" endtime="20201029 18:18:37.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.092" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 18:18:37.091" endtime="20201029 18:18:37.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.095" level="INFO">VALUE: [5.836099999999983e-05, 5.8222000000000135e-05, 5.784699999999976e-05, 5.818099999999743e-05, 5.762500000000212e-05, 5.765300000000126e-05, 5.813899999999872e-05, 5.811099999999958e-05, 5.81810000000009e-05, 5.8222000000000135e-05, 5.836099999999983e-05, 5.8430000000001675e-05, 5.811099999999958e-05, 5.7666000000001355e-05, 5.8222000000000135e-05, 5.759699999999951e-05, 5.811099999999958e-05, 5.7721999999999635e-05, 5.8471999999996915e-05, 5.7791999999997484e-05, 5.8499999999999525e-05, 5.7569999999999844e-05, 5.786099999999933e-05, 5.8306000000001024e-05, 5.8000000000002494e-05, 5.7680000000000925e-05, 5.8472000000000385e-05, 5.793100000000065e-05, 5.7999999999999025e-05, 5.8179999999997956e-05, 5.836099999999983e-05, 5.7680000000000925e-05, 5.7888000000002465e-05, 5.8180000000001425e-05, 5.75550000000008e-05, 5.783300000000019e-05, 5.804099999999826e-05, 5.8249999999999275e-05, 5.809700000000001e-05, 5.7929999999997706e-05, 5.8235999999999705e-05, 5.8334000000000163e-05, 5.8041999999997734e-05, 5.8292000000001454e-05, 5.8499999999999525e-05, 5.81810000000009e-05, 5.8472000000000385e-05, 5.8458000000000815e-05, 5.8334000000000163e-05, 5.780500000000105e-05]</msg>
<status status="PASS" starttime="20201029 18:18:37.093" endtime="20201029 18:18:37.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.089" endtime="20201029 18:18:37.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:37.100" endtime="20201029 18:18:37.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.098" endtime="20201029 18:18:37.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.097" endtime="20201029 18:18:37.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.741" endtime="20201029 18:18:37.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:36.740" endtime="20201029 18:18:37.120"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.129" endtime="20201029 18:18:37.150"></status>
</kw>
<msg timestamp="20201029 18:18:37.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.127" endtime="20201029 18:18:37.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.152" endtime="20201029 18:18:37.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.154" endtime="20201029 18:18:37.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.125" endtime="20201029 18:18:37.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.123" endtime="20201029 18:18:37.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.163" endtime="20201029 18:18:37.449"></status>
</kw>
<msg timestamp="20201029 18:18:37.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022543403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022602056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.162" endtime="20201029 18:18:37.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022543403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022602056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.453" endtime="20201029 18:18:37.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.461" endtime="20201029 18:18:37.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.159" endtime="20201029 18:18:37.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.158" endtime="20201029 18:18:37.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:37.467" level="INFO">${RESULT} = [{'diff': 5.865299999999879e-05}, {'diff': 5.891699999999861e-05}, {'diff': 5.938899999999997e-05}, {'diff': 5.876299999999987e-05}, {'diff': 5.9250000000000275e-05}, {'diff': 5.8972000000000885e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:37.464" endtime="20201029 18:18:37.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:37.471" level="INFO">${ACCURACY} = {'diff': [5.865299999999879e-05, 5.891699999999861e-05, 5.938899999999997e-05, 5.876299999999987e-05, 5.9250000000000275e-05, 5.8972000000000885e-05, 5.936100000000083e-05, 5.861100000000008e-05, 5.85...</msg>
<status status="PASS" starttime="20201029 18:18:37.468" endtime="20201029 18:18:37.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.476" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 18:18:37.475" endtime="20201029 18:18:37.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.478" level="INFO">VALUE: [5.865299999999879e-05, 5.891699999999861e-05, 5.938899999999997e-05, 5.876299999999987e-05, 5.9250000000000275e-05, 5.8972000000000885e-05, 5.936100000000083e-05, 5.861100000000008e-05, 5.854099999999876e-05, 5.8749999999999775e-05, 5.8792000000001954e-05, 5.9320000000001594e-05, 5.9070000000001344e-05, 5.8749999999999775e-05, 5.916700000000233e-05, 5.8665999999998886e-05, 5.919500000000147e-05, 5.9250000000000275e-05, 5.9278000000002884e-05, 5.938899999999997e-05, 5.905499999999883e-05, 5.862499999999965e-05, 5.877699999999944e-05, 5.862499999999965e-05, 5.931899999999865e-05, 5.884699999999729e-05, 5.930499999999908e-05, 5.8513999999999095e-05, 5.912500000000015e-05, 5.890299999999904e-05, 5.912499999999668e-05, 5.9027999999999164e-05, 5.890299999999904e-05, 5.8763999999999345e-05, 5.911100000000058e-05, 5.93750000000004e-05, 5.9221999999997665e-05, 5.918099999999843e-05, 5.9320000000001594e-05, 5.906900000000187e-05, 5.923700000000018e-05, 5.8986000000000455e-05, 5.868099999999793e-05, 5.931899999999865e-05, 5.909700000000101e-05, 5.865299999999879e-05, 5.933299999999822e-05, 5.9415999999999636e-05, 5.8679999999998456e-05, 5.8749999999999775e-05]</msg>
<status status="PASS" starttime="20201029 18:18:37.477" endtime="20201029 18:18:37.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.472" endtime="20201029 18:18:37.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:37.484" endtime="20201029 18:18:37.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.482" endtime="20201029 18:18:37.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.481" endtime="20201029 18:18:37.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.121" endtime="20201029 18:18:37.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.121" endtime="20201029 18:18:37.504"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.513" endtime="20201029 18:18:37.532"></status>
</kw>
<msg timestamp="20201029 18:18:37.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.511" endtime="20201029 18:18:37.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.533" endtime="20201029 18:18:37.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.536" endtime="20201029 18:18:37.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.509" endtime="20201029 18:18:37.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.507" endtime="20201029 18:18:37.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.545" endtime="20201029 18:18:37.847"></status>
</kw>
<msg timestamp="20201029 18:18:37.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019174833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019234347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.543" endtime="20201029 18:18:37.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019174833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019234347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.851" endtime="20201029 18:18:37.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.859" endtime="20201029 18:18:37.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.541" endtime="20201029 18:18:37.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.539" endtime="20201029 18:18:37.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:37.866" level="INFO">${RESULT} = [{'diff': 5.9514000000000095e-05}, {'diff': 6.0527999999997195e-05}, {'diff': 6.0056000000002774e-05}, {'diff': 5.993099999999918e-05}, {'diff': 6.0471999999998916e-05}, {'diff': 6.0291999999999984e-0...</msg>
<status status="PASS" starttime="20201029 18:18:37.863" endtime="20201029 18:18:37.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:37.871" level="INFO">${ACCURACY} = {'diff': [5.9514000000000095e-05, 6.0527999999997195e-05, 6.0056000000002774e-05, 5.993099999999918e-05, 6.0471999999998916e-05, 6.0291999999999984e-05, 5.9735999999997735e-05, 5.9833999999998194e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:37.867" endtime="20201029 18:18:37.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.875" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 18:18:37.874" endtime="20201029 18:18:37.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.877" level="INFO">VALUE: [5.9514000000000095e-05, 6.0527999999997195e-05, 6.0056000000002774e-05, 5.993099999999918e-05, 6.0471999999998916e-05, 6.0291999999999984e-05, 5.9735999999997735e-05, 5.9833999999998194e-05, 5.9721999999998165e-05, 5.963900000000022e-05, 6.036099999999836e-05, 5.998700000000093e-05, 5.9693999999999026e-05, 6.036099999999836e-05, 5.9722000000001635e-05, 5.980499999999958e-05, 6.0014000000000595e-05, 6.029100000000051e-05, 5.9972000000001885e-05, 5.95689999999989e-05, 6.0499999999998055e-05, 6.0485999999998485e-05, 5.9999999999997555e-05, 6.0250000000001275e-05, 6.011100000000158e-05, 5.961100000000108e-05, 5.9722000000001635e-05, 6.0235999999998235e-05, 5.96810000000024e-05, 6.0111999999997584e-05, 5.998700000000093e-05, 5.968099999999893e-05, 5.98750000000009e-05, 6.0485999999998485e-05, 5.9792000000002954e-05, 5.9944000000002745e-05, 5.983300000000219e-05, 5.95550000000028e-05, 6.0485999999998485e-05, 5.9679999999999456e-05, 5.997300000000136e-05, 6.0443999999999776e-05, 5.9805999999999054e-05, 5.958299999999847e-05, 5.966700000000283e-05, 5.9569999999998374e-05, 5.968099999999893e-05, 5.9986000000001455e-05, 6.008300000000244e-05, 6.020899999999857e-05]</msg>
<status status="PASS" starttime="20201029 18:18:37.876" endtime="20201029 18:18:37.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.871" endtime="20201029 18:18:37.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:37.882" endtime="20201029 18:18:37.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.881" endtime="20201029 18:18:37.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.880" endtime="20201029 18:18:37.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.505" endtime="20201029 18:18:37.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.505" endtime="20201029 18:18:37.903"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.911" endtime="20201029 18:18:37.931"></status>
</kw>
<msg timestamp="20201029 18:18:37.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.910" endtime="20201029 18:18:37.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:37.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:37.933" endtime="20201029 18:18:37.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.935" endtime="20201029 18:18:37.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.907" endtime="20201029 18:18:37.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.905" endtime="20201029 18:18:37.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:37.944" endtime="20201029 18:18:38.231"></status>
</kw>
<msg timestamp="20201029 18:18:38.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019248472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019309569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:37.942" endtime="20201029 18:18:38.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019248472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019309569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:38.235" endtime="20201029 18:18:38.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.243" endtime="20201029 18:18:38.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.940" endtime="20201029 18:18:38.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.938" endtime="20201029 18:18:38.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:38.250" level="INFO">${RESULT} = [{'diff': 6.109699999999954e-05}, {'diff': 6.090300000000104e-05}, {'diff': 6.059699999999904e-05}, {'diff': 6.084699999999929e-05}, {'diff': 6.0680000000000456e-05}, {'diff': 6.0986000000002455e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:38.247" endtime="20201029 18:18:38.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:38.254" level="INFO">${ACCURACY} = {'diff': [6.109699999999954e-05, 6.090300000000104e-05, 6.059699999999904e-05, 6.084699999999929e-05, 6.0680000000000456e-05, 6.0986000000002455e-05, 6.0930000000000706e-05, 6.0806000000000054e-05, 6....</msg>
<status status="PASS" starttime="20201029 18:18:38.251" endtime="20201029 18:18:38.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.258" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 18:18:38.257" endtime="20201029 18:18:38.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.261" level="INFO">VALUE: [6.109699999999954e-05, 6.090300000000104e-05, 6.059699999999904e-05, 6.084699999999929e-05, 6.0680000000000456e-05, 6.0986000000002455e-05, 6.0930000000000706e-05, 6.0806000000000054e-05, 6.091700000000061e-05, 6.144500000000025e-05, 6.084699999999929e-05, 6.112500000000215e-05, 6.1027999999997695e-05, 6.083300000000319e-05, 6.141699999999764e-05, 6.1028000000001165e-05, 6.149999999999906e-05, 6.136199999999883e-05, 6.068099999999993e-05, 6.150000000000252e-05, 6.0944000000000276e-05, 6.104100000000126e-05, 6.131899999999718e-05, 6.127699999999847e-05, 6.0680000000000456e-05, 6.112500000000215e-05, 6.119399999999706e-05, 6.058299999999947e-05, 6.0749999999998305e-05, 6.069500000000297e-05, 6.094499999999975e-05, 6.133300000000022e-05, 6.0999999999998555e-05, 6.1014000000001595e-05, 6.143100000000068e-05, 6.0791999999997015e-05, 6.130600000000055e-05, 6.08750000000019e-05, 6.0749999999998305e-05, 6.116700000000086e-05, 6.112499999999868e-05, 6.13750000000024e-05, 6.0750000000001775e-05, 6.0736000000002205e-05, 6.061099999999861e-05, 6.12080000000001e-05, 6.055500000000033e-05, 6.0555999999999804e-05, 6.1000000000002025e-05, 6.1195e-05]</msg>
<status status="PASS" starttime="20201029 18:18:38.259" endtime="20201029 18:18:38.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.255" endtime="20201029 18:18:38.262"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:38.266" endtime="20201029 18:18:38.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.264" endtime="20201029 18:18:38.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.263" endtime="20201029 18:18:38.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.904" endtime="20201029 18:18:38.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:37.903" endtime="20201029 18:18:38.286"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.295" endtime="20201029 18:18:38.314"></status>
</kw>
<msg timestamp="20201029 18:18:38.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.293" endtime="20201029 18:18:38.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.315" endtime="20201029 18:18:38.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.318" endtime="20201029 18:18:38.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.291" endtime="20201029 18:18:38.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.289" endtime="20201029 18:18:38.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.328" endtime="20201029 18:18:38.614"></status>
</kw>
<msg timestamp="20201029 18:18:38.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020280972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020342681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:38.326" endtime="20201029 18:18:38.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020280972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020342681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:38.618" endtime="20201029 18:18:38.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.626" endtime="20201029 18:18:38.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.324" endtime="20201029 18:18:38.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.321" endtime="20201029 18:18:38.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:38.633" level="INFO">${RESULT} = [{'diff': 6.170900000000007e-05}, {'diff': 6.176399999999888e-05}, {'diff': 6.251300000000015e-05}, {'diff': 6.1582999999997e-05}, {'diff': 6.201399999999913e-05}, {'diff': 6.241600000000264e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:38.629" endtime="20201029 18:18:38.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:38.637" level="INFO">${ACCURACY} = {'diff': [6.170900000000007e-05, 6.176399999999888e-05, 6.251300000000015e-05, 6.1582999999997e-05, 6.201399999999913e-05, 6.241600000000264e-05, 6.200000000000302e-05, 6.166599999999842e-05, 6.244399...</msg>
<status status="PASS" starttime="20201029 18:18:38.634" endtime="20201029 18:18:38.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.641" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 18:18:38.640" endtime="20201029 18:18:38.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.643" level="INFO">VALUE: [6.170900000000007e-05, 6.176399999999888e-05, 6.251300000000015e-05, 6.1582999999997e-05, 6.201399999999913e-05, 6.241600000000264e-05, 6.200000000000302e-05, 6.166599999999842e-05, 6.24439999999983e-05, 6.215300000000229e-05, 6.227799999999895e-05, 6.209700000000054e-05, 6.182000000000062e-05, 6.18750000000029e-05, 6.179099999999854e-05, 6.172200000000017e-05, 6.162500000000265e-05, 6.161099999999961e-05, 6.17499999999993e-05, 6.236199999999983e-05, 6.205599999999784e-05, 6.173699999999921e-05, 6.222300000000014e-05, 6.211100000000011e-05, 6.156899999999743e-05, 6.177799999999845e-05, 6.230499999999861e-05, 6.15690000000009e-05, 6.154100000000176e-05, 6.191699999999814e-05, 6.241699999999864e-05, 6.204200000000173e-05, 6.194500000000075e-05, 6.165300000000179e-05, 6.181999999999716e-05, 6.237499999999993e-05, 6.161100000000308e-05, 6.154200000000123e-05, 6.182000000000062e-05, 6.237499999999993e-05, 6.193100000000118e-05, 6.177699999999897e-05, 6.211100000000011e-05, 6.24300000000022e-05, 6.173599999999974e-05, 6.190300000000204e-05, 6.22219999999972e-05, 6.166599999999842e-05, 6.19300000000017e-05, 6.168099999999746e-05]</msg>
<status status="PASS" starttime="20201029 18:18:38.642" endtime="20201029 18:18:38.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.637" endtime="20201029 18:18:38.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:38.649" endtime="20201029 18:18:38.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.648" endtime="20201029 18:18:38.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.647" endtime="20201029 18:18:38.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.287" endtime="20201029 18:18:38.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.287" endtime="20201029 18:18:38.670"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.678" endtime="20201029 18:18:38.697"></status>
</kw>
<msg timestamp="20201029 18:18:38.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.677" endtime="20201029 18:18:38.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:38.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:38.698" endtime="20201029 18:18:38.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.701" endtime="20201029 18:18:38.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.674" endtime="20201029 18:18:38.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.672" endtime="20201029 18:18:38.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:38.709" endtime="20201029 18:18:38.995"></status>
</kw>
<msg timestamp="20201029 18:18:38.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0193955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019458681, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:38.708" endtime="20201029 18:18:38.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0193955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019458681, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:18:38.999" endtime="20201029 18:18:39.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.008" endtime="20201029 18:18:39.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.705" endtime="20201029 18:18:39.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.704" endtime="20201029 18:18:39.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:39.014" level="INFO">${RESULT} = [{'diff': 6.318099999999896e-05}, {'diff': 6.347200000000192e-05}, {'diff': 6.267999999999899e-05}, {'diff': 6.320799999999863e-05}, {'diff': 6.337500000000093e-05}, {'diff': 6.268100000000193e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:39.011" endtime="20201029 18:18:39.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:39.020" level="INFO">${ACCURACY} = {'diff': [6.318099999999896e-05, 6.347200000000192e-05, 6.267999999999899e-05, 6.320799999999863e-05, 6.337500000000093e-05, 6.268100000000193e-05, 6.277799999999945e-05, 6.257000000000137e-05, 6.2790...</msg>
<status status="PASS" starttime="20201029 18:18:39.015" endtime="20201029 18:18:39.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.024" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 18:18:39.023" endtime="20201029 18:18:39.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.027" level="INFO">VALUE: [6.318099999999896e-05, 6.347200000000192e-05, 6.267999999999899e-05, 6.320799999999863e-05, 6.337500000000093e-05, 6.268100000000193e-05, 6.277799999999945e-05, 6.257000000000137e-05, 6.279099999999954e-05, 6.336199999999736e-05, 6.319400000000253e-05, 6.267999999999899e-05, 6.30829999999985e-05, 6.284700000000129e-05, 6.287500000000043e-05, 6.336100000000136e-05, 6.266599999999942e-05, 6.255500000000233e-05, 6.269399999999856e-05, 6.268099999999846e-05, 6.276399999999988e-05, 6.279099999999954e-05, 6.341699999999964e-05, 6.341700000000311e-05, 6.322300000000114e-05, 6.345900000000182e-05, 6.315200000000035e-05, 6.266699999999889e-05, 6.25690000000019e-05, 6.330499999999961e-05, 6.261100000000061e-05, 6.263800000000028e-05, 6.316699999999939e-05, 6.35280000000002e-05, 6.286099999999739e-05, 6.27500000000003e-05, 6.337499999999746e-05, 6.280600000000205e-05, 6.350000000000106e-05, 6.261099999999714e-05, 6.266699999999889e-05, 6.262500000000018e-05, 6.27080000000016e-05, 6.306899999999893e-05, 6.27500000000003e-05, 6.309800000000101e-05, 6.282000000000162e-05, 6.259800000000051e-05, 6.32080000000021e-05, 6.255499999999886e-05]</msg>
<status status="PASS" starttime="20201029 18:18:39.025" endtime="20201029 18:18:39.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.020" endtime="20201029 18:18:39.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:39.032" endtime="20201029 18:18:39.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.030" endtime="20201029 18:18:39.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.029" endtime="20201029 18:18:39.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.671" endtime="20201029 18:18:39.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:38.670" endtime="20201029 18:18:39.053"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.062" endtime="20201029 18:18:39.085"></status>
</kw>
<msg timestamp="20201029 18:18:39.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.060" endtime="20201029 18:18:39.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.089" endtime="20201029 18:18:39.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.094" endtime="20201029 18:18:39.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.057" endtime="20201029 18:18:39.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.055" endtime="20201029 18:18:39.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.116" endtime="20201029 18:18:39.413"></status>
</kw>
<msg timestamp="20201029 18:18:39.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020009097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020073083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.112" endtime="20201029 18:18:39.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020009097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020073083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.417" endtime="20201029 18:18:39.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.431" endtime="20201029 18:18:39.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.106" endtime="20201029 18:18:39.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.102" endtime="20201029 18:18:39.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:39.437" level="INFO">${RESULT} = [{'diff': 6.398599999999852e-05}, {'diff': 6.390300000000057e-05}, {'diff': 6.405500000000036e-05}, {'diff': 6.380500000000011e-05}, {'diff': 6.447299999999892e-05}, {'diff': 6.413899999999778e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:39.434" endtime="20201029 18:18:39.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:39.441" level="INFO">${ACCURACY} = {'diff': [6.398599999999852e-05, 6.390300000000057e-05, 6.405500000000036e-05, 6.380500000000011e-05, 6.447299999999892e-05, 6.413899999999778e-05, 6.429099999999757e-05, 6.369399999999956e-05, 6.3791...</msg>
<status status="PASS" starttime="20201029 18:18:39.438" endtime="20201029 18:18:39.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.446" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 18:18:39.444" endtime="20201029 18:18:39.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.448" level="INFO">VALUE: [6.398599999999852e-05, 6.390300000000057e-05, 6.405500000000036e-05, 6.380500000000011e-05, 6.447299999999892e-05, 6.413899999999778e-05, 6.429099999999757e-05, 6.369399999999956e-05, 6.379100000000054e-05, 6.437499999999846e-05, 6.379200000000002e-05, 6.373599999999827e-05, 6.3889000000001e-05, 6.415300000000082e-05, 6.363900000000075e-05, 6.383299999999925e-05, 6.361099999999814e-05, 6.443100000000021e-05, 6.391700000000014e-05, 6.412499999999821e-05, 6.424999999999834e-05, 6.418099999999996e-05, 6.438799999999856e-05, 6.429200000000052e-05, 6.369399999999956e-05, 6.426400000000138e-05, 6.406899999999993e-05, 6.441600000000117e-05, 6.362500000000118e-05, 6.365300000000032e-05, 6.404200000000027e-05, 6.448599999999902e-05, 6.408399999999898e-05, 6.393099999999971e-05, 6.376400000000088e-05, 6.424999999999834e-05, 6.441700000000064e-05, 6.368099999999946e-05, 6.393099999999971e-05, 6.419400000000006e-05, 6.391700000000014e-05, 6.384800000000176e-05, 6.401400000000113e-05, 6.398600000000199e-05, 6.369399999999956e-05, 6.42080000000031e-05, 6.418000000000049e-05, 6.412499999999821e-05, 6.445799999999988e-05, 6.444399999999684e-05]</msg>
<status status="PASS" starttime="20201029 18:18:39.447" endtime="20201029 18:18:39.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.442" endtime="20201029 18:18:39.449"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:39.453" endtime="20201029 18:18:39.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.451" endtime="20201029 18:18:39.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.450" endtime="20201029 18:18:39.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.054" endtime="20201029 18:18:39.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.053" endtime="20201029 18:18:39.473"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.482" endtime="20201029 18:18:39.502"></status>
</kw>
<msg timestamp="20201029 18:18:39.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.481" endtime="20201029 18:18:39.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.504" endtime="20201029 18:18:39.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.506" endtime="20201029 18:18:39.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.478" endtime="20201029 18:18:39.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.476" endtime="20201029 18:18:39.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.515" endtime="20201029 18:18:39.803"></status>
</kw>
<msg timestamp="20201029 18:18:39.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020403486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020468236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.514" endtime="20201029 18:18:39.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020403486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020468236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.807" endtime="20201029 18:18:39.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.816" endtime="20201029 18:18:39.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.511" endtime="20201029 18:18:39.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.509" endtime="20201029 18:18:39.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:39.822" level="INFO">${RESULT} = [{'diff': 6.47500000000023e-05}, {'diff': 6.533400000000023e-05}, {'diff': 6.505600000000084e-05}, {'diff': 6.47219999999997e-05}, {'diff': 6.511099999999964e-05}, {'diff': 6.543099999999774e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:39.819" endtime="20201029 18:18:39.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:39.826" level="INFO">${ACCURACY} = {'diff': [6.47500000000023e-05, 6.533400000000023e-05, 6.505600000000084e-05, 6.47219999999997e-05, 6.511099999999964e-05, 6.543099999999774e-05, 6.504200000000127e-05, 6.511199999999912e-05, 6.486199...</msg>
<status status="PASS" starttime="20201029 18:18:39.823" endtime="20201029 18:18:39.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.830" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 18:18:39.830" endtime="20201029 18:18:39.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.833" level="INFO">VALUE: [6.47500000000023e-05, 6.533400000000023e-05, 6.505600000000084e-05, 6.47219999999997e-05, 6.511099999999964e-05, 6.543099999999774e-05, 6.504200000000127e-05, 6.511199999999912e-05, 6.486199999999887e-05, 6.493000000000124e-05, 6.45699999999999e-05, 6.551400000000263e-05, 6.504100000000179e-05, 6.529199999999805e-05, 6.484699999999982e-05, 6.498599999999952e-05, 6.523599999999977e-05, 6.486099999999939e-05, 6.505600000000084e-05, 6.551400000000263e-05, 6.519499999999706e-05, 6.504200000000127e-05, 6.479200000000102e-05, 6.548600000000002e-05, 6.494500000000028e-05, 6.486199999999887e-05, 6.499999999999909e-05, 6.533300000000075e-05, 6.536099999999989e-05, 6.480499999999764e-05, 6.486099999999939e-05, 6.54159999999987e-05, 6.506899999999746e-05, 6.536099999999989e-05, 6.462500000000218e-05, 6.468100000000046e-05, 6.549999999999959e-05, 6.523599999999977e-05, 6.527799999999848e-05, 6.459800000000251e-05, 6.484699999999982e-05, 6.518100000000096e-05, 6.455599999999687e-05, 6.465199999999838e-05, 6.523599999999977e-05, 6.491700000000114e-05, 6.466700000000089e-05, 6.473599999999927e-05, 6.476400000000188e-05, 6.499999999999909e-05]</msg>
<status status="PASS" starttime="20201029 18:18:39.832" endtime="20201029 18:18:39.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.827" endtime="20201029 18:18:39.835"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:39.839" endtime="20201029 18:18:39.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.837" endtime="20201029 18:18:39.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.836" endtime="20201029 18:18:39.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.474" endtime="20201029 18:18:39.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.474" endtime="20201029 18:18:39.859"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.868" endtime="20201029 18:18:39.890"></status>
</kw>
<msg timestamp="20201029 18:18:39.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.866" endtime="20201029 18:18:39.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:39.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:39.893" endtime="20201029 18:18:39.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.898" endtime="20201029 18:18:39.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.864" endtime="20201029 18:18:39.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.862" endtime="20201029 18:18:39.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:39.917" endtime="20201029 18:18:40.209"></status>
</kw>
<msg timestamp="20201029 18:18:40.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019320306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019386639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:39.914" endtime="20201029 18:18:40.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019320306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019386639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.214" endtime="20201029 18:18:40.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.222" endtime="20201029 18:18:40.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.908" endtime="20201029 18:18:40.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.905" endtime="20201029 18:18:40.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:40.229" level="INFO">${RESULT} = [{'diff': 6.633300000000175e-05}, {'diff': 6.629199999999905e-05}, {'diff': 6.591699999999867e-05}, {'diff': 6.644500000000178e-05}, {'diff': 6.608299999999803e-05}, {'diff': 6.59029999999991e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:40.226" endtime="20201029 18:18:40.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:40.234" level="INFO">${ACCURACY} = {'diff': [6.633300000000175e-05, 6.629199999999905e-05, 6.591699999999867e-05, 6.644500000000178e-05, 6.608299999999803e-05, 6.59029999999991e-05, 6.598600000000052e-05, 6.623600000000077e-05, 6.59299...</msg>
<status status="PASS" starttime="20201029 18:18:40.230" endtime="20201029 18:18:40.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.238" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 18:18:40.237" endtime="20201029 18:18:40.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.241" level="INFO">VALUE: [6.633300000000175e-05, 6.629199999999905e-05, 6.591699999999867e-05, 6.644500000000178e-05, 6.608299999999803e-05, 6.59029999999991e-05, 6.598600000000052e-05, 6.623600000000077e-05, 6.592999999999877e-05, 6.591699999999867e-05, 6.555600000000134e-05, 6.574999999999984e-05, 6.647199999999798e-05, 6.620800000000163e-05, 6.638900000000003e-05, 6.619400000000206e-05, 6.617999999999902e-05, 6.620799999999816e-05, 6.59029999999991e-05, 6.554200000000177e-05, 6.634699999999785e-05, 6.555599999999787e-05, 6.60419999999988e-05, 6.588899999999953e-05, 6.583300000000125e-05, 6.604100000000279e-05, 6.636099999999742e-05, 6.587499999999996e-05, 6.643100000000221e-05, 6.630599999999862e-05, 6.642999999999927e-05, 6.62220000000012e-05, 6.619399999999859e-05, 6.605500000000236e-05, 6.574999999999984e-05, 6.581900000000168e-05, 6.566699999999842e-05, 6.645800000000188e-05, 6.623600000000077e-05, 6.584700000000082e-05, 6.587499999999996e-05, 6.586100000000039e-05, 6.59159999999992e-05, 6.601399999999966e-05, 6.593100000000171e-05, 6.64029999999996e-05, 6.566699999999842e-05, 6.573699999999974e-05, 6.565299999999885e-05, 6.647199999999798e-05]</msg>
<status status="PASS" starttime="20201029 18:18:40.239" endtime="20201029 18:18:40.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.235" endtime="20201029 18:18:40.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:40.246" endtime="20201029 18:18:40.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.244" endtime="20201029 18:18:40.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.243" endtime="20201029 18:18:40.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.860" endtime="20201029 18:18:40.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:39.860" endtime="20201029 18:18:40.266"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.275" endtime="20201029 18:18:40.294"></status>
</kw>
<msg timestamp="20201029 18:18:40.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.273" endtime="20201029 18:18:40.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.296" endtime="20201029 18:18:40.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.298" endtime="20201029 18:18:40.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.271" endtime="20201029 18:18:40.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.269" endtime="20201029 18:18:40.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.307" endtime="20201029 18:18:40.595"></status>
</kw>
<msg timestamp="20201029 18:18:40.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019688806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019755917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.305" endtime="20201029 18:18:40.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019688806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019755917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.599" endtime="20201029 18:18:40.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.607" endtime="20201029 18:18:40.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.303" endtime="20201029 18:18:40.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.301" endtime="20201029 18:18:40.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:40.614" level="INFO">${RESULT} = [{'diff': 6.711100000000164e-05}, {'diff': 6.65419999999993e-05}, {'diff': 6.687500000000096e-05}, {'diff': 6.694399999999934e-05}, {'diff': 6.743000000000027e-05}, {'diff': 6.674999999999737e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:40.611" endtime="20201029 18:18:40.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:40.618" level="INFO">${ACCURACY} = {'diff': [6.711100000000164e-05, 6.65419999999993e-05, 6.687500000000096e-05, 6.694399999999934e-05, 6.743000000000027e-05, 6.674999999999737e-05, 6.725000000000134e-05, 6.677799999999998e-05, 6.73469...</msg>
<status status="PASS" starttime="20201029 18:18:40.615" endtime="20201029 18:18:40.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.623" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 18:18:40.622" endtime="20201029 18:18:40.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.625" level="INFO">VALUE: [6.711100000000164e-05, 6.65419999999993e-05, 6.687500000000096e-05, 6.694399999999934e-05, 6.743000000000027e-05, 6.674999999999737e-05, 6.725000000000134e-05, 6.677799999999998e-05, 6.734699999999885e-05, 6.694399999999934e-05, 6.697199999999848e-05, 6.698600000000152e-05, 6.686100000000139e-05, 6.661099999999767e-05, 6.668099999999899e-05, 6.697200000000195e-05, 6.743099999999974e-05, 6.725000000000134e-05, 6.751399999999769e-05, 6.65280000000032e-05, 6.727799999999701e-05, 6.737500000000146e-05, 6.668099999999899e-05, 6.724999999999787e-05, 6.656900000000243e-05, 6.698600000000152e-05, 6.697200000000195e-05, 6.750000000000159e-05, 6.712499999999774e-05, 6.72359999999983e-05, 6.680600000000259e-05, 6.655599999999887e-05, 6.700000000000109e-05, 6.747299999999845e-05, 6.677799999999998e-05, 6.662499999999724e-05, 6.723600000000177e-05, 6.656999999999844e-05, 6.655599999999887e-05, 6.748699999999802e-05, 6.712499999999774e-05, 6.729100000000057e-05, 6.697200000000195e-05, 6.743000000000027e-05, 6.652799999999973e-05, 6.730500000000014e-05, 6.751400000000116e-05, 6.674999999999737e-05, 6.661099999999767e-05, 6.683299999999878e-05]</msg>
<status status="PASS" starttime="20201029 18:18:40.624" endtime="20201029 18:18:40.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.619" endtime="20201029 18:18:40.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:40.630" endtime="20201029 18:18:40.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.629" endtime="20201029 18:18:40.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.628" endtime="20201029 18:18:40.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.267" endtime="20201029 18:18:40.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.267" endtime="20201029 18:18:40.651"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.660" endtime="20201029 18:18:40.682"></status>
</kw>
<msg timestamp="20201029 18:18:40.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.658" endtime="20201029 18:18:40.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:40.683" endtime="20201029 18:18:40.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.686" endtime="20201029 18:18:40.687"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.656" endtime="20201029 18:18:40.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.653" endtime="20201029 18:18:40.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.695" endtime="20201029 18:18:40.981"></status>
</kw>
<msg timestamp="20201029 18:18:40.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022673847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.693" endtime="20201029 18:18:40.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:40.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022673847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:40.985" endtime="20201029 18:18:40.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:40.994" endtime="20201029 18:18:40.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.691" endtime="20201029 18:18:40.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.689" endtime="20201029 18:18:40.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:41.000" level="INFO">${RESULT} = [{'diff': 6.811099999999917e-05}, {'diff': 6.802800000000123e-05}, {'diff': 6.804199999999733e-05}, {'diff': 6.84169999999977e-05}, {'diff': 6.795799999999991e-05}, {'diff': 6.791700000000067e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:40.997" endtime="20201029 18:18:41.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:41.005" level="INFO">${ACCURACY} = {'diff': [6.811099999999917e-05, 6.802800000000123e-05, 6.804199999999733e-05, 6.84169999999977e-05, 6.795799999999991e-05, 6.791700000000067e-05, 6.755599999999987e-05, 6.787500000000196e-05, 6.82499...</msg>
<status status="PASS" starttime="20201029 18:18:41.001" endtime="20201029 18:18:41.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.009" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 18:18:41.008" endtime="20201029 18:18:41.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.012" level="INFO">VALUE: [6.811099999999917e-05, 6.802800000000123e-05, 6.804199999999733e-05, 6.84169999999977e-05, 6.795799999999991e-05, 6.791700000000067e-05, 6.755599999999987e-05, 6.787500000000196e-05, 6.824999999999887e-05, 6.77220000000027e-05, 6.797300000000242e-05, 6.791700000000067e-05, 6.832000000000019e-05, 6.845899999999988e-05, 6.850000000000259e-05, 6.775000000000184e-05, 6.805499999999742e-05, 6.830500000000114e-05, 6.77640000000014e-05, 6.836099999999942e-05, 6.848599999999955e-05, 6.836099999999942e-05, 6.774999999999837e-05, 6.772199999999923e-05, 6.766700000000042e-05, 6.806999999999994e-05, 6.804199999999733e-05, 6.793099999999677e-05, 6.799999999999862e-05, 6.791700000000067e-05, 6.787500000000196e-05, 6.769400000000009e-05, 6.830500000000114e-05, 6.775000000000184e-05, 6.784699999999935e-05, 6.850000000000259e-05, 6.787499999999849e-05, 6.802799999999776e-05, 6.822199999999973e-05, 6.799999999999862e-05, 6.838899999999856e-05, 6.769500000000303e-05, 6.848599999999955e-05, 6.800000000000209e-05, 6.756999999999944e-05, 6.818100000000049e-05, 6.797299999999895e-05, 6.823700000000224e-05, 6.830499999999767e-05, 6.77640000000014e-05]</msg>
<status status="PASS" starttime="20201029 18:18:41.010" endtime="20201029 18:18:41.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.006" endtime="20201029 18:18:41.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:41.018" endtime="20201029 18:18:41.037"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.016" endtime="20201029 18:18:41.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.015" endtime="20201029 18:18:41.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.652" endtime="20201029 18:18:41.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:40.651" endtime="20201029 18:18:41.039"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.048" endtime="20201029 18:18:41.068"></status>
</kw>
<msg timestamp="20201029 18:18:41.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.047" endtime="20201029 18:18:41.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.070" endtime="20201029 18:18:41.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.073" endtime="20201029 18:18:41.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.044" endtime="20201029 18:18:41.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.041" endtime="20201029 18:18:41.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.082" endtime="20201029 18:18:41.367"></status>
</kw>
<msg timestamp="20201029 18:18:41.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021024528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021093333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.080" endtime="20201029 18:18:41.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021024528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021093333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.371" endtime="20201029 18:18:41.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.380" endtime="20201029 18:18:41.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.078" endtime="20201029 18:18:41.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.076" endtime="20201029 18:18:41.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:41.389" level="INFO">${RESULT} = [{'diff': 6.880499999999817e-05}, {'diff': 6.866600000000195e-05}, {'diff': 6.944399999999837e-05}, {'diff': 6.918000000000202e-05}, {'diff': 6.894400000000134e-05}, {'diff': 6.945800000000141e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:41.383" endtime="20201029 18:18:41.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:41.400" level="INFO">${ACCURACY} = {'diff': [6.880499999999817e-05, 6.866600000000195e-05, 6.944399999999837e-05, 6.918000000000202e-05, 6.894400000000134e-05, 6.945800000000141e-05, 6.954199999999883e-05, 6.916699999999845e-05, 6.8638...</msg>
<status status="PASS" starttime="20201029 18:18:41.391" endtime="20201029 18:18:41.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.410" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 18:18:41.408" endtime="20201029 18:18:41.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.415" level="INFO">VALUE: [6.880499999999817e-05, 6.866600000000195e-05, 6.944399999999837e-05, 6.918000000000202e-05, 6.894400000000134e-05, 6.945800000000141e-05, 6.954199999999883e-05, 6.916699999999845e-05, 6.863899999999881e-05, 6.927799999999901e-05, 6.886099999999992e-05, 6.918100000000149e-05, 6.856999999999697e-05, 6.924999999999987e-05, 6.880600000000112e-05, 6.911199999999965e-05, 6.930500000000214e-05, 6.90420000000018e-05, 6.852800000000173e-05, 6.950000000000012e-05, 6.852799999999826e-05, 6.911100000000017e-05, 6.925000000000334e-05, 6.862500000000271e-05, 6.868100000000099e-05, 6.920800000000116e-05, 6.879200000000155e-05, 6.855600000000087e-05, 6.92360000000003e-05, 6.897200000000048e-05, 6.877799999999851e-05, 6.899999999999962e-05, 6.936100000000042e-05, 6.898699999999952e-05, 6.908300000000103e-05, 6.945799999999794e-05, 6.887499999999949e-05, 6.862499999999924e-05, 6.866600000000195e-05, 6.87909999999986e-05, 6.872200000000023e-05, 6.893099999999777e-05, 6.85970000000001e-05, 6.951399999999969e-05, 6.90970000000006e-05, 6.887499999999949e-05, 6.956900000000196e-05, 6.866699999999795e-05, 6.89169999999982e-05, 6.934800000000033e-05]</msg>
<status status="PASS" starttime="20201029 18:18:41.412" endtime="20201029 18:18:41.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.402" endtime="20201029 18:18:41.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:41.432" endtime="20201029 18:18:41.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.429" endtime="20201029 18:18:41.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.426" endtime="20201029 18:18:41.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.040" endtime="20201029 18:18:41.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.039" endtime="20201029 18:18:41.457"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.476" endtime="20201029 18:18:41.496"></status>
</kw>
<msg timestamp="20201029 18:18:41.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.472" endtime="20201029 18:18:41.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.498" endtime="20201029 18:18:41.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.500" endtime="20201029 18:18:41.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.467" endtime="20201029 18:18:41.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.462" endtime="20201029 18:18:41.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.510" endtime="20201029 18:18:41.797"></status>
</kw>
<msg timestamp="20201029 18:18:41.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035045375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035115319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.508" endtime="20201029 18:18:41.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035045375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035115319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.802" endtime="20201029 18:18:41.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.810" endtime="20201029 18:18:41.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.505" endtime="20201029 18:18:41.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.503" endtime="20201029 18:18:41.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:41.817" level="INFO">${RESULT} = [{'diff': 6.994400000000234e-05}, {'diff': 7.000000000000062e-05}, {'diff': 7.004099999999985e-05}, {'diff': 7.025000000000087e-05}, {'diff': 6.983299999999831e-05}, {'diff': 7.00280000000067e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:41.813" endtime="20201029 18:18:41.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:41.821" level="INFO">${ACCURACY} = {'diff': [6.994400000000234e-05, 7.000000000000062e-05, 7.004099999999985e-05, 7.025000000000087e-05, 6.983299999999831e-05, 7.00280000000067e-05, 6.983300000000525e-05, 7.044499999999537e-05, 7.01109...</msg>
<status status="PASS" starttime="20201029 18:18:41.818" endtime="20201029 18:18:41.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.826" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 18:18:41.824" endtime="20201029 18:18:41.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.828" level="INFO">VALUE: [6.994400000000234e-05, 7.000000000000062e-05, 7.004099999999985e-05, 7.025000000000087e-05, 6.983299999999831e-05, 7.00280000000067e-05, 6.983300000000525e-05, 7.044499999999537e-05, 7.01109999999977e-05, 7.027700000000053e-05, 6.979199999999908e-05, 6.997200000000148e-05, 7.030599999999915e-05, 6.97230000000007e-05, 7.027800000000001e-05, 7.045799999999547e-05, 7.048600000000155e-05, 7.016599999999651e-05, 7.018000000000302e-05, 7.004099999999985e-05, 7.013900000000378e-05, 6.979199999999908e-05, 7.04030000000036e-05, 6.97360000000008e-05, 6.959800000000405e-05, 7.037499999999752e-05, 6.980599999999865e-05, 6.959699999999763e-05, 7.030599999999915e-05, 7.013900000000378e-05, 7.030599999999915e-05, 7.026300000000096e-05, 6.961100000000414e-05, 7.040199999999719e-05, 6.987499999999702e-05, 6.955499999999892e-05, 7.005500000000636e-05, 6.963900000000328e-05, 7.002799999999976e-05, 7.050000000000112e-05, 6.962499999999677e-05, 6.972200000000123e-05, 7.01109999999977e-05, 7.037500000000446e-05, 7.04309999999958e-05, 6.997200000000148e-05, 6.9583000000005e-05, 7.016700000000292e-05, 7.005499999999942e-05, 6.984799999999736e-05]</msg>
<status status="PASS" starttime="20201029 18:18:41.827" endtime="20201029 18:18:41.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.822" endtime="20201029 18:18:41.830"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:41.833" endtime="20201029 18:18:41.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.832" endtime="20201029 18:18:41.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.830" endtime="20201029 18:18:41.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.459" endtime="20201029 18:18:41.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.458" endtime="20201029 18:18:41.854"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.863" endtime="20201029 18:18:41.883"></status>
</kw>
<msg timestamp="20201029 18:18:41.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.861" endtime="20201029 18:18:41.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:41.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:41.884" endtime="20201029 18:18:41.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.887" endtime="20201029 18:18:41.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.859" endtime="20201029 18:18:41.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.856" endtime="20201029 18:18:41.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:41.896" endtime="20201029 18:18:42.182"></status>
</kw>
<msg timestamp="20201029 18:18:42.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020944694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021015639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:41.895" endtime="20201029 18:18:42.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020944694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021015639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.187" endtime="20201029 18:18:42.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.195" endtime="20201029 18:18:42.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.892" endtime="20201029 18:18:42.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.890" endtime="20201029 18:18:42.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:42.202" level="INFO">${RESULT} = [{'diff': 7.094499999999934e-05}, {'diff': 7.111100000000217e-05}, {'diff': 7.091600000000073e-05}, {'diff': 7.130500000000067e-05}, {'diff': 7.086099999999845e-05}, {'diff': 7.134699999999938e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:42.199" endtime="20201029 18:18:42.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:42.206" level="INFO">${ACCURACY} = {'diff': [7.094499999999934e-05, 7.111100000000217e-05, 7.091600000000073e-05, 7.130500000000067e-05, 7.086099999999845e-05, 7.134699999999938e-05, 7.062499999999777e-05, 7.111100000000217e-05, 7.1278...</msg>
<status status="PASS" starttime="20201029 18:18:42.203" endtime="20201029 18:18:42.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.211" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 18:18:42.210" endtime="20201029 18:18:42.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.213" level="INFO">VALUE: [7.094499999999934e-05, 7.111100000000217e-05, 7.091600000000073e-05, 7.130500000000067e-05, 7.086099999999845e-05, 7.134699999999938e-05, 7.062499999999777e-05, 7.111100000000217e-05, 7.127800000000101e-05, 7.083399999999879e-05, 7.066699999999995e-05, 7.07499999999979e-05, 7.07499999999979e-05, 7.151299999999874e-05, 7.149999999999865e-05, 7.112499999999827e-05, 7.072199999999876e-05, 7.05970000000021e-05, 7.102699999999781e-05, 7.066699999999995e-05, 7.105500000000042e-05, 7.111100000000217e-05, 7.07499999999979e-05, 7.097200000000248e-05, 7.140300000000113e-05, 7.129200000000058e-05, 7.133399999999929e-05, 7.059699999999863e-05, 7.076399999999747e-05, 7.069500000000256e-05, 7.093099999999977e-05, 7.130500000000067e-05, 7.149999999999865e-05, 7.116600000000098e-05, 7.12499999999984e-05, 7.13049999999972e-05, 7.104200000000033e-05, 7.142999999999733e-05, 7.145799999999994e-05, 7.05559999999994e-05, 7.1069e-05, 7.075000000000137e-05, 7.066699999999995e-05, 7.136099999999895e-05, 7.098600000000205e-05, 7.10979999999986e-05, 7.143100000000027e-05, 7.077800000000051e-05, 7.094399999999987e-05, 7.076400000000094e-05]</msg>
<status status="PASS" starttime="20201029 18:18:42.212" endtime="20201029 18:18:42.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.207" endtime="20201029 18:18:42.216"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:42.219" endtime="20201029 18:18:42.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.218" endtime="20201029 18:18:42.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.217" endtime="20201029 18:18:42.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.855" endtime="20201029 18:18:42.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:41.854" endtime="20201029 18:18:42.240"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.250" endtime="20201029 18:18:42.270"></status>
</kw>
<msg timestamp="20201029 18:18:42.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.249" endtime="20201029 18:18:42.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.272" endtime="20201029 18:18:42.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.275" endtime="20201029 18:18:42.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.246" endtime="20201029 18:18:42.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.243" endtime="20201029 18:18:42.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.284" endtime="20201029 18:18:42.570"></status>
</kw>
<msg timestamp="20201029 18:18:42.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021399361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021471111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.282" endtime="20201029 18:18:42.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021399361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021471111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.574" endtime="20201029 18:18:42.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.583" endtime="20201029 18:18:42.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.280" endtime="20201029 18:18:42.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.278" endtime="20201029 18:18:42.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:42.590" level="INFO">${RESULT} = [{'diff': 7.175000000000237e-05}, {'diff': 7.231900000000124e-05}, {'diff': 7.15560000000004e-05}, {'diff': 7.191699999999773e-05}, {'diff': 7.21109999999997e-05}, {'diff': 7.16109999999992e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:18:42.586" endtime="20201029 18:18:42.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:42.595" level="INFO">${ACCURACY} = {'diff': [7.175000000000237e-05, 7.231900000000124e-05, 7.15560000000004e-05, 7.191699999999773e-05, 7.21109999999997e-05, 7.16109999999992e-05, 7.198599999999958e-05, 7.166699999999748e-05, 7.1750000...</msg>
<status status="PASS" starttime="20201029 18:18:42.591" endtime="20201029 18:18:42.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.599" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 18:18:42.598" endtime="20201029 18:18:42.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.602" level="INFO">VALUE: [7.175000000000237e-05, 7.231900000000124e-05, 7.15560000000004e-05, 7.191699999999773e-05, 7.21109999999997e-05, 7.16109999999992e-05, 7.198599999999958e-05, 7.166699999999748e-05, 7.175000000000237e-05, 7.208400000000004e-05, 7.236099999999995e-05, 7.219500000000059e-05, 7.218100000000102e-05, 7.176400000000194e-05, 7.247200000000051e-05, 7.236099999999995e-05, 7.226399999999897e-05, 7.248600000000008e-05, 7.23049999999982e-05, 7.21109999999997e-05, 7.19170000000012e-05, 7.190300000000163e-05, 7.170800000000019e-05, 7.162499999999877e-05, 7.17360000000028e-05, 7.216699999999798e-05, 7.190199999999869e-05, 7.24439999999979e-05, 7.237499999999952e-05, 7.237499999999952e-05, 7.194400000000087e-05, 7.219400000000112e-05, 7.202700000000228e-05, 7.16109999999992e-05, 7.176399999999847e-05, 7.234700000000038e-05, 7.198599999999958e-05, 7.219500000000059e-05, 7.237499999999952e-05, 7.199999999999915e-05, 7.20560000000009e-05, 7.166700000000095e-05, 7.17360000000028e-05, 7.201400000000219e-05, 7.218100000000102e-05, 7.209700000000013e-05, 7.201400000000219e-05, 7.158300000000006e-05, 7.207000000000047e-05, 7.230500000000167e-05]</msg>
<status status="PASS" starttime="20201029 18:18:42.601" endtime="20201029 18:18:42.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.596" endtime="20201029 18:18:42.603"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:42.607" endtime="20201029 18:18:42.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.606" endtime="20201029 18:18:42.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.604" endtime="20201029 18:18:42.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.241" endtime="20201029 18:18:42.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.241" endtime="20201029 18:18:42.628"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.637" endtime="20201029 18:18:42.657"></status>
</kw>
<msg timestamp="20201029 18:18:42.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.635" endtime="20201029 18:18:42.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:42.658" endtime="20201029 18:18:42.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.661" endtime="20201029 18:18:42.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.632" endtime="20201029 18:18:42.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.630" endtime="20201029 18:18:42.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.670" endtime="20201029 18:18:42.957"></status>
</kw>
<msg timestamp="20201029 18:18:42.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019935694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020008944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.669" endtime="20201029 18:18:42.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019935694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020008944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:42.961" endtime="20201029 18:18:42.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:42.970" endtime="20201029 18:18:42.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.666" endtime="20201029 18:18:42.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.664" endtime="20201029 18:18:42.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:42.977" level="INFO">${RESULT} = [{'diff': 7.32500000000004e-05}, {'diff': 7.305499999999895e-05}, {'diff': 7.28049999999987e-05}, {'diff': 7.251399999999922e-05}, {'diff': 7.345799999999847e-05}, {'diff': 7.30560000000019e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:18:42.973" endtime="20201029 18:18:42.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:42.981" level="INFO">${ACCURACY} = {'diff': [7.32500000000004e-05, 7.305499999999895e-05, 7.28049999999987e-05, 7.251399999999922e-05, 7.345799999999847e-05, 7.30560000000019e-05, 7.330600000000215e-05, 7.334700000000138e-05, 7.3000000...</msg>
<status status="PASS" starttime="20201029 18:18:42.978" endtime="20201029 18:18:42.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.985" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 18:18:42.984" endtime="20201029 18:18:42.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:42.988" level="INFO">VALUE: [7.32500000000004e-05, 7.305499999999895e-05, 7.28049999999987e-05, 7.251399999999922e-05, 7.345799999999847e-05, 7.30560000000019e-05, 7.330600000000215e-05, 7.334700000000138e-05, 7.300000000000015e-05, 7.272200000000076e-05, 7.284700000000088e-05, 7.319499999999812e-05, 7.341599999999976e-05, 7.300000000000015e-05, 7.334800000000086e-05, 7.298599999999711e-05, 7.267999999999858e-05, 7.25829999999976e-05, 7.313899999999984e-05, 7.284700000000088e-05, 7.329199999999911e-05, 7.255500000000192e-05, 7.27499999999999e-05, 7.27499999999999e-05, 7.298600000000058e-05, 7.312500000000027e-05, 7.316699999999898e-05, 7.32500000000004e-05, 7.336200000000043e-05, 7.26110000000002e-05, 7.34309999999988e-05, 7.308300000000156e-05, 7.315199999999994e-05, 7.286100000000045e-05, 7.25829999999976e-05, 7.284700000000088e-05, 7.352799999999979e-05, 7.334699999999791e-05, 7.257000000000097e-05, 7.348600000000108e-05, 7.277799999999904e-05, 7.291699999999873e-05, 7.319500000000159e-05, 7.351400000000022e-05, 7.272300000000023e-05, 7.316699999999898e-05, 7.329199999999911e-05, 7.305499999999895e-05, 7.311099999999723e-05, 7.327799999999954e-05]</msg>
<status status="PASS" starttime="20201029 18:18:42.987" endtime="20201029 18:18:42.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.982" endtime="20201029 18:18:42.989"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:42.993" endtime="20201029 18:18:43.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.991" endtime="20201029 18:18:43.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.990" endtime="20201029 18:18:43.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.629" endtime="20201029 18:18:43.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:42.628" endtime="20201029 18:18:43.014"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.023" endtime="20201029 18:18:43.044"></status>
</kw>
<msg timestamp="20201029 18:18:43.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.021" endtime="20201029 18:18:43.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.045" endtime="20201029 18:18:43.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.048" endtime="20201029 18:18:43.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.019" endtime="20201029 18:18:43.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.016" endtime="20201029 18:18:43.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.057" endtime="20201029 18:18:43.342"></status>
</kw>
<msg timestamp="20201029 18:18:43.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021054431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021128556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.055" endtime="20201029 18:18:43.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021054431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021128556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.347" endtime="20201029 18:18:43.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.355" endtime="20201029 18:18:43.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.053" endtime="20201029 18:18:43.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.051" endtime="20201029 18:18:43.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:43.362" level="INFO">${RESULT} = [{'diff': 7.412500000000127e-05}, {'diff': 7.384699999999841e-05}, {'diff': 7.400000000000115e-05}, {'diff': 7.394499999999887e-05}, {'diff': 7.366699999999948e-05}, {'diff': 7.368100000000252e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:43.359" endtime="20201029 18:18:43.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:43.366" level="INFO">${ACCURACY} = {'diff': [7.412500000000127e-05, 7.384699999999841e-05, 7.400000000000115e-05, 7.394499999999887e-05, 7.366699999999948e-05, 7.368100000000252e-05, 7.372300000000123e-05, 7.379100000000013e-05, 7.4041...</msg>
<status status="PASS" starttime="20201029 18:18:43.363" endtime="20201029 18:18:43.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.371" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 18:18:43.370" endtime="20201029 18:18:43.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.373" level="INFO">VALUE: [7.412500000000127e-05, 7.384699999999841e-05, 7.400000000000115e-05, 7.394499999999887e-05, 7.366699999999948e-05, 7.368100000000252e-05, 7.372300000000123e-05, 7.379100000000013e-05, 7.404199999999986e-05, 7.399999999999768e-05, 7.44029999999972e-05, 7.394400000000287e-05, 7.423600000000183e-05, 7.384700000000188e-05, 7.35560000000024e-05, 7.436099999999848e-05, 7.437499999999805e-05, 7.354199999999936e-05, 7.380599999999918e-05, 7.382000000000222e-05, 7.401300000000124e-05, 7.424999999999793e-05, 7.441599999999729e-05, 7.35829999999986e-05, 7.409700000000213e-05, 7.372200000000176e-05, 7.418000000000008e-05, 7.368100000000252e-05, 7.354199999999936e-05, 7.447199999999904e-05, 7.366699999999948e-05, 7.399999999999768e-05, 7.369500000000209e-05, 7.409700000000213e-05, 7.408399999999857e-05, 7.35690000000025e-05, 7.411199999999771e-05, 7.369499999999862e-05, 7.401400000000072e-05, 7.436100000000195e-05, 7.419399999999965e-05, 7.365200000000044e-05, 7.404100000000038e-05, 7.447199999999904e-05, 7.44439999999999e-05, 7.452800000000079e-05, 7.394499999999887e-05, 7.450000000000165e-05, 7.388900000000059e-05, 7.404199999999986e-05]</msg>
<status status="PASS" starttime="20201029 18:18:43.372" endtime="20201029 18:18:43.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.367" endtime="20201029 18:18:43.376"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:43.379" endtime="20201029 18:18:43.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.378" endtime="20201029 18:18:43.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.377" endtime="20201029 18:18:43.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.015" endtime="20201029 18:18:43.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.014" endtime="20201029 18:18:43.400"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.409" endtime="20201029 18:18:43.429"></status>
</kw>
<msg timestamp="20201029 18:18:43.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.407" endtime="20201029 18:18:43.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.430" endtime="20201029 18:18:43.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.433" endtime="20201029 18:18:43.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.405" endtime="20201029 18:18:43.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.402" endtime="20201029 18:18:43.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.442" endtime="20201029 18:18:43.727"></status>
</kw>
<msg timestamp="20201029 18:18:43.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019907958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019982792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.441" endtime="20201029 18:18:43.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019907958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019982792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.731" endtime="20201029 18:18:43.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.739" endtime="20201029 18:18:43.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.438" endtime="20201029 18:18:43.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.436" endtime="20201029 18:18:43.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:43.746" level="INFO">${RESULT} = [{'diff': 7.483399999999932e-05}, {'diff': 7.54310000000008e-05}, {'diff': 7.533399999999982e-05}, {'diff': 7.473599999999886e-05}, {'diff': 7.538800000000262e-05}, {'diff': 7.459699999999916e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:43.743" endtime="20201029 18:18:43.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:43.751" level="INFO">${ACCURACY} = {'diff': [7.483399999999932e-05, 7.54310000000008e-05, 7.533399999999982e-05, 7.473599999999886e-05, 7.538800000000262e-05, 7.459699999999916e-05, 7.531900000000077e-05, 7.459699999999916e-05, 7.50140...</msg>
<status status="PASS" starttime="20201029 18:18:43.747" endtime="20201029 18:18:43.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.756" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 18:18:43.755" endtime="20201029 18:18:43.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.758" level="INFO">VALUE: [7.483399999999932e-05, 7.54310000000008e-05, 7.533399999999982e-05, 7.473599999999886e-05, 7.538800000000262e-05, 7.459699999999916e-05, 7.531900000000077e-05, 7.459699999999916e-05, 7.501400000000172e-05, 7.474999999999843e-05, 7.531900000000077e-05, 7.491699999999726e-05, 7.488900000000159e-05, 7.550000000000265e-05, 7.49310000000003e-05, 7.480600000000018e-05, 7.455599999999993e-05, 7.499999999999868e-05, 7.543099999999733e-05, 7.461199999999821e-05, 7.484799999999889e-05, 7.456900000000002e-05, 7.519400000000065e-05, 7.548599999999961e-05, 7.455500000000045e-05, 7.494499999999987e-05, 7.524999999999893e-05, 7.488899999999812e-05, 7.487499999999855e-05, 7.472199999999929e-05, 7.462500000000177e-05, 7.511099999999923e-05, 7.469400000000015e-05, 7.511199999999871e-05, 7.49029999999977e-05, 7.481900000000027e-05, 7.504100000000138e-05, 7.466600000000101e-05, 7.516599999999804e-05, 7.549999999999918e-05, 7.549999999999918e-05, 7.497199999999954e-05, 7.455500000000045e-05, 7.463900000000134e-05, 7.527800000000154e-05, 7.480600000000018e-05, 7.527800000000154e-05, 7.518100000000055e-05, 7.529200000000111e-05, 7.468000000000058e-05]</msg>
<status status="PASS" starttime="20201029 18:18:43.757" endtime="20201029 18:18:43.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.752" endtime="20201029 18:18:43.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:43.764" endtime="20201029 18:18:43.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.762" endtime="20201029 18:18:43.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.761" endtime="20201029 18:18:43.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.401" endtime="20201029 18:18:43.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.400" endtime="20201029 18:18:43.784"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.793" endtime="20201029 18:18:43.813"></status>
</kw>
<msg timestamp="20201029 18:18:43.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.792" endtime="20201029 18:18:43.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:43.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:43.815" endtime="20201029 18:18:43.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.817" endtime="20201029 18:18:43.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.789" endtime="20201029 18:18:43.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.787" endtime="20201029 18:18:43.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:43.826" endtime="20201029 18:18:44.118"></status>
</kw>
<msg timestamp="20201029 18:18:44.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020103292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020179389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:43.825" endtime="20201029 18:18:44.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020103292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020179389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.123" endtime="20201029 18:18:44.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.135" endtime="20201029 18:18:44.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.822" endtime="20201029 18:18:44.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.820" endtime="20201029 18:18:44.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:44.142" level="INFO">${RESULT} = [{'diff': 7.609700000000066e-05}, {'diff': 7.559700000000016e-05}, {'diff': 7.648600000000061e-05}, {'diff': 7.580599999999771e-05}, {'diff': 7.56110000000032e-05}, {'diff': 7.632000000000125e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:44.139" endtime="20201029 18:18:44.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:44.146" level="INFO">${ACCURACY} = {'diff': [7.609700000000066e-05, 7.559700000000016e-05, 7.648600000000061e-05, 7.580599999999771e-05, 7.56110000000032e-05, 7.632000000000125e-05, 7.64029999999992e-05, 7.584799999999989e-05, 7.574999...</msg>
<status status="PASS" starttime="20201029 18:18:44.143" endtime="20201029 18:18:44.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.151" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 18:18:44.150" endtime="20201029 18:18:44.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.153" level="INFO">VALUE: [7.609700000000066e-05, 7.559700000000016e-05, 7.648600000000061e-05, 7.580599999999771e-05, 7.56110000000032e-05, 7.632000000000125e-05, 7.64029999999992e-05, 7.584799999999989e-05, 7.574999999999943e-05, 7.631900000000177e-05, 7.55830000000006e-05, 7.599999999999968e-05, 7.554100000000188e-05, 7.598600000000011e-05, 7.583299999999737e-05, 7.563899999999887e-05, 7.637500000000005e-05, 7.602799999999882e-05, 7.616699999999851e-05, 7.565300000000191e-05, 7.637500000000005e-05, 7.59310000000013e-05, 7.617999999999861e-05, 7.623600000000036e-05, 7.586099999999998e-05, 7.642999999999886e-05, 7.579100000000213e-05, 7.556900000000102e-05, 7.648600000000061e-05, 7.622200000000079e-05, 7.64029999999992e-05, 7.64310000000018e-05, 7.566699999999801e-05, 7.619500000000112e-05, 7.631900000000177e-05, 7.590300000000216e-05, 7.599999999999968e-05, 7.59310000000013e-05, 7.647300000000051e-05, 7.613899999999937e-05, 7.620799999999775e-05, 7.6457999999998e-05, 7.629099999999917e-05, 7.601400000000272e-05, 7.555499999999798e-05, 7.579200000000161e-05, 7.584700000000041e-05, 7.573599999999986e-05, 7.618099999999808e-05, 7.59310000000013e-05]</msg>
<status status="PASS" starttime="20201029 18:18:44.152" endtime="20201029 18:18:44.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.147" endtime="20201029 18:18:44.155"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:44.159" endtime="20201029 18:18:44.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.157" endtime="20201029 18:18:44.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.156" endtime="20201029 18:18:44.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.785" endtime="20201029 18:18:44.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:43.785" endtime="20201029 18:18:44.179"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.188" endtime="20201029 18:18:44.212"></status>
</kw>
<msg timestamp="20201029 18:18:44.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.187" endtime="20201029 18:18:44.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.214" endtime="20201029 18:18:44.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.216" endtime="20201029 18:18:44.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.184" endtime="20201029 18:18:44.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.182" endtime="20201029 18:18:44.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.226" endtime="20201029 18:18:44.511"></status>
</kw>
<msg timestamp="20201029 18:18:44.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023341472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023418875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.224" endtime="20201029 18:18:44.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023341472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023418875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.515" endtime="20201029 18:18:44.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.524" endtime="20201029 18:18:44.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.221" endtime="20201029 18:18:44.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.220" endtime="20201029 18:18:44.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:44.531" level="INFO">${RESULT} = [{'diff': 7.74030000000002e-05}, {'diff': 7.655600000000193e-05}, {'diff': 7.661100000000073e-05}, {'diff': 7.700000000000068e-05}, {'diff': 7.730599999999921e-05}, {'diff': 7.719399999999918e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:44.527" endtime="20201029 18:18:44.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:44.535" level="INFO">${ACCURACY} = {'diff': [7.74030000000002e-05, 7.655600000000193e-05, 7.661100000000073e-05, 7.700000000000068e-05, 7.730599999999921e-05, 7.719399999999918e-05, 7.720799999999875e-05, 7.675000000000043e-05, 7.73049...</msg>
<status status="PASS" starttime="20201029 18:18:44.532" endtime="20201029 18:18:44.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.539" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 18:18:44.538" endtime="20201029 18:18:44.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.542" level="INFO">VALUE: [7.74030000000002e-05, 7.655600000000193e-05, 7.661100000000073e-05, 7.700000000000068e-05, 7.730599999999921e-05, 7.719399999999918e-05, 7.720799999999875e-05, 7.675000000000043e-05, 7.730499999999974e-05, 7.693000000000283e-05, 7.698600000000111e-05, 7.702799999999982e-05, 7.750000000000118e-05, 7.691699999999926e-05, 7.69029999999997e-05, 7.669400000000215e-05, 7.738900000000062e-05, 7.71250000000008e-05, 7.656999999999803e-05, 7.663899999999987e-05, 7.670899999999772e-05, 7.655600000000193e-05, 7.69310000000023e-05, 7.670899999999772e-05, 7.725000000000093e-05, 7.683299999999837e-05, 7.692999999999936e-05, 7.704099999999992e-05, 7.718099999999908e-05, 7.686099999999751e-05, 7.672199999999782e-05, 7.672199999999782e-05, 7.732000000000225e-05, 7.71250000000008e-05, 7.65969999999977e-05, 7.749999999999771e-05, 7.680599999999871e-05, 7.716700000000298e-05, 7.716700000000298e-05, 7.720899999999822e-05, 7.67770000000001e-05, 7.694399999999893e-05, 7.7457999999999e-05, 7.683299999999837e-05, 7.65830000000016e-05, 7.738900000000062e-05, 7.741699999999976e-05, 7.723599999999789e-05, 7.65830000000016e-05, 7.66250000000003e-05]</msg>
<status status="PASS" starttime="20201029 18:18:44.540" endtime="20201029 18:18:44.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.536" endtime="20201029 18:18:44.544"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:44.548" endtime="20201029 18:18:44.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.546" endtime="20201029 18:18:44.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.545" endtime="20201029 18:18:44.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.180" endtime="20201029 18:18:44.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.180" endtime="20201029 18:18:44.568"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.577" endtime="20201029 18:18:44.597"></status>
</kw>
<msg timestamp="20201029 18:18:44.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.576" endtime="20201029 18:18:44.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.599" endtime="20201029 18:18:44.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.602" endtime="20201029 18:18:44.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.573" endtime="20201029 18:18:44.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.571" endtime="20201029 18:18:44.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.611" endtime="20201029 18:18:44.896"></status>
</kw>
<msg timestamp="20201029 18:18:44.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019858639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019936236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.609" endtime="20201029 18:18:44.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019858639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019936236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.901" endtime="20201029 18:18:44.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.909" endtime="20201029 18:18:44.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.607" endtime="20201029 18:18:44.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.605" endtime="20201029 18:18:44.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:44.916" level="INFO">${RESULT} = [{'diff': 7.75969999999987e-05}, {'diff': 7.794399999999993e-05}, {'diff': 7.812499999999833e-05}, {'diff': 7.79030000000007e-05}, {'diff': 7.784700000000241e-05}, {'diff': 7.761100000000173e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:44.912" endtime="20201029 18:18:44.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:44.921" level="INFO">${ACCURACY} = {'diff': [7.75969999999987e-05, 7.794399999999993e-05, 7.812499999999833e-05, 7.79030000000007e-05, 7.784700000000241e-05, 7.761100000000173e-05, 7.791700000000026e-05, 7.837500000000205e-05, 7.830600...</msg>
<status status="PASS" starttime="20201029 18:18:44.917" endtime="20201029 18:18:44.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.926" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 18:18:44.925" endtime="20201029 18:18:44.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.928" level="INFO">VALUE: [7.75969999999987e-05, 7.794399999999993e-05, 7.812499999999833e-05, 7.79030000000007e-05, 7.784700000000241e-05, 7.761100000000173e-05, 7.791700000000026e-05, 7.837500000000205e-05, 7.830600000000021e-05, 7.779200000000014e-05, 7.833399999999935e-05, 7.830500000000074e-05, 7.811099999999876e-05, 7.830500000000074e-05, 7.851400000000175e-05, 7.756899999999955e-05, 7.761100000000173e-05, 7.76250000000013e-05, 7.836099999999901e-05, 7.805599999999996e-05, 7.819499999999965e-05, 7.759800000000164e-05, 7.798600000000211e-05, 7.7764000000001e-05, 7.800000000000168e-05, 7.761099999999826e-05, 7.823699999999836e-05, 7.836099999999901e-05, 7.847199999999957e-05, 7.805500000000049e-05, 7.841600000000129e-05, 7.829200000000064e-05, 7.812499999999833e-05, 7.843100000000033e-05, 7.840299999999772e-05, 7.773599999999839e-05, 7.776399999999753e-05, 7.755599999999946e-05, 7.800000000000168e-05, 7.811200000000171e-05, 7.797299999999854e-05, 7.815200000000147e-05, 7.818000000000061e-05, 7.837500000000205e-05, 7.784700000000241e-05, 7.75830000000026e-05, 7.836099999999901e-05, 7.772200000000229e-05, 7.784700000000241e-05, 7.806900000000006e-05]</msg>
<status status="PASS" starttime="20201029 18:18:44.927" endtime="20201029 18:18:44.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.922" endtime="20201029 18:18:44.930"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:44.933" endtime="20201029 18:18:44.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.932" endtime="20201029 18:18:44.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.930" endtime="20201029 18:18:44.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.569" endtime="20201029 18:18:44.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.569" endtime="20201029 18:18:44.954"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.963" endtime="20201029 18:18:44.983"></status>
</kw>
<msg timestamp="20201029 18:18:44.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.961" endtime="20201029 18:18:44.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:44.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:44.984" endtime="20201029 18:18:44.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.987" endtime="20201029 18:18:44.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.959" endtime="20201029 18:18:44.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.957" endtime="20201029 18:18:44.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:44.996" endtime="20201029 18:18:45.287"></status>
</kw>
<msg timestamp="20201029 18:18:45.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020118236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020197611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:44.995" endtime="20201029 18:18:45.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020118236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020197611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.291" endtime="20201029 18:18:45.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.300" endtime="20201029 18:18:45.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.992" endtime="20201029 18:18:45.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.990" endtime="20201029 18:18:45.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:45.307" level="INFO">${RESULT} = [{'diff': 7.937499999999958e-05}, {'diff': 7.875000000000243e-05}, {'diff': 7.874999999999896e-05}, {'diff': 7.868100000000058e-05}, {'diff': 7.911099999999976e-05}, {'diff': 7.948600000000014e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:45.303" endtime="20201029 18:18:45.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:45.311" level="INFO">${ACCURACY} = {'diff': [7.937499999999958e-05, 7.875000000000243e-05, 7.874999999999896e-05, 7.868100000000058e-05, 7.911099999999976e-05, 7.948600000000014e-05, 7.937499999999958e-05, 7.858300000000012e-05, 7.8598...</msg>
<status status="PASS" starttime="20201029 18:18:45.308" endtime="20201029 18:18:45.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.316" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 18:18:45.315" endtime="20201029 18:18:45.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.318" level="INFO">VALUE: [7.937499999999958e-05, 7.875000000000243e-05, 7.874999999999896e-05, 7.868100000000058e-05, 7.911099999999976e-05, 7.948600000000014e-05, 7.937499999999958e-05, 7.858300000000012e-05, 7.859800000000264e-05, 7.9458000000001e-05, 7.895899999999997e-05, 7.930499999999827e-05, 7.90970000000002e-05, 7.951400000000275e-05, 7.911099999999976e-05, 7.938899999999915e-05, 7.883300000000037e-05, 7.930599999999774e-05, 7.857000000000003e-05, 7.898599999999964e-05, 7.89030000000017e-05, 7.919500000000065e-05, 7.869500000000015e-05, 7.911199999999924e-05, 7.852800000000132e-05, 7.897299999999954e-05, 7.874999999999896e-05, 7.901399999999878e-05, 7.93190000000013e-05, 7.858300000000012e-05, 7.924999999999946e-05, 7.905599999999749e-05, 7.873599999999939e-05, 7.923599999999989e-05, 7.882000000000028e-05, 7.879199999999767e-05, 7.94450000000009e-05, 7.868100000000058e-05, 7.866700000000101e-05, 7.924999999999946e-05, 7.916599999999857e-05, 7.936100000000001e-05, 7.863900000000187e-05, 7.912499999999933e-05, 7.937499999999958e-05, 7.877800000000157e-05, 7.900000000000268e-05, 7.897200000000007e-05, 7.930599999999774e-05, 7.882000000000028e-05]</msg>
<status status="PASS" starttime="20201029 18:18:45.317" endtime="20201029 18:18:45.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.312" endtime="20201029 18:18:45.320"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:45.323" endtime="20201029 18:18:45.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.322" endtime="20201029 18:18:45.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.320" endtime="20201029 18:18:45.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.955" endtime="20201029 18:18:45.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:44.954" endtime="20201029 18:18:45.344"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.353" endtime="20201029 18:18:45.374"></status>
</kw>
<msg timestamp="20201029 18:18:45.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.351" endtime="20201029 18:18:45.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.376" endtime="20201029 18:18:45.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.378" endtime="20201029 18:18:45.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.349" endtime="20201029 18:18:45.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.347" endtime="20201029 18:18:45.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.388" endtime="20201029 18:18:45.674"></status>
</kw>
<msg timestamp="20201029 18:18:45.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021124556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021204375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.386" endtime="20201029 18:18:45.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021124556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021204375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.678" endtime="20201029 18:18:45.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.687" endtime="20201029 18:18:45.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.383" endtime="20201029 18:18:45.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.382" endtime="20201029 18:18:45.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:45.693" level="INFO">${RESULT} = [{'diff': 7.98190000000018e-05}, {'diff': 7.973600000000039e-05}, {'diff': 8.052700000000038e-05}, {'diff': 8.036100000000101e-05}, {'diff': 8.037500000000058e-05}, {'diff': 8.019499999999818e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:45.690" endtime="20201029 18:18:45.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:45.698" level="INFO">${ACCURACY} = {'diff': [7.98190000000018e-05, 7.973600000000039e-05, 8.052700000000038e-05, 8.036100000000101e-05, 8.037500000000058e-05, 8.019499999999818e-05, 8.004100000000292e-05, 8.02909999999997e-05, 8.036100...</msg>
<status status="PASS" starttime="20201029 18:18:45.694" endtime="20201029 18:18:45.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.702" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 18:18:45.701" endtime="20201029 18:18:45.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.705" level="INFO">VALUE: [7.98190000000018e-05, 7.973600000000039e-05, 8.052700000000038e-05, 8.036100000000101e-05, 8.037500000000058e-05, 8.019499999999818e-05, 8.004100000000292e-05, 8.02909999999997e-05, 8.036100000000101e-05, 8.008300000000163e-05, 7.980499999999877e-05, 8.000000000000021e-05, 7.955500000000199e-05, 8.022200000000132e-05, 7.984700000000094e-05, 8.019500000000165e-05, 8.030599999999874e-05, 7.979199999999867e-05, 8.005599999999849e-05, 8.018099999999861e-05, 7.952800000000232e-05, 7.993100000000183e-05, 7.962499999999983e-05, 7.998600000000064e-05, 8.023599999999742e-05, 8.051400000000028e-05, 8.005500000000249e-05, 8.023700000000036e-05, 7.952799999999885e-05, 8.015299999999947e-05, 7.995900000000097e-05, 8.048600000000114e-05, 8.012500000000033e-05, 8.027800000000307e-05, 7.979199999999867e-05, 8.050000000000071e-05, 8.030599999999874e-05, 7.956899999999809e-05, 8.00970000000012e-05, 8.045799999999853e-05, 8.004199999999892e-05, 7.99719999999976e-05, 7.969500000000115e-05, 8.01389999999999e-05, 7.993099999999836e-05, 8.043099999999886e-05, 8.002799999999935e-05, 8.037500000000058e-05, 8.018099999999861e-05, 8.037499999999712e-05]</msg>
<status status="PASS" starttime="20201029 18:18:45.703" endtime="20201029 18:18:45.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.698" endtime="20201029 18:18:45.707"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:45.711" endtime="20201029 18:18:45.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.709" endtime="20201029 18:18:45.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.708" endtime="20201029 18:18:45.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.345" endtime="20201029 18:18:45.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.344" endtime="20201029 18:18:45.732"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.740" endtime="20201029 18:18:45.761"></status>
</kw>
<msg timestamp="20201029 18:18:45.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.739" endtime="20201029 18:18:45.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:45.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:45.762" endtime="20201029 18:18:45.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.765" endtime="20201029 18:18:45.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.736" endtime="20201029 18:18:45.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.734" endtime="20201029 18:18:45.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:45.774" endtime="20201029 18:18:46.061"></status>
</kw>
<msg timestamp="20201029 18:18:46.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019879819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019960833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:45.773" endtime="20201029 18:18:46.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019879819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019960833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.065" endtime="20201029 18:18:46.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.073" endtime="20201029 18:18:46.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.770" endtime="20201029 18:18:46.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.768" endtime="20201029 18:18:46.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:46.080" level="INFO">${RESULT} = [{'diff': 8.101400000000078e-05}, {'diff': 8.08190000000028e-05}, {'diff': 8.073600000000139e-05}, {'diff': 8.080499999999977e-05}, {'diff': 8.122199999999885e-05}, {'diff': 8.098600000000164e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:46.077" endtime="20201029 18:18:46.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:46.085" level="INFO">${ACCURACY} = {'diff': [8.101400000000078e-05, 8.08190000000028e-05, 8.073600000000139e-05, 8.080499999999977e-05, 8.122199999999885e-05, 8.098600000000164e-05, 8.066699999999954e-05, 8.143099999999986e-05, 8.11670...</msg>
<status status="PASS" starttime="20201029 18:18:46.081" endtime="20201029 18:18:46.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.090" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 18:18:46.089" endtime="20201029 18:18:46.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.092" level="INFO">VALUE: [8.101400000000078e-05, 8.08190000000028e-05, 8.073600000000139e-05, 8.080499999999977e-05, 8.122199999999885e-05, 8.098600000000164e-05, 8.066699999999954e-05, 8.143099999999986e-05, 8.116700000000004e-05, 8.1152000000001e-05, 8.054199999999942e-05, 8.136099999999855e-05, 8.075000000000096e-05, 8.130500000000027e-05, 8.09719999999986e-05, 8.104100000000045e-05, 8.123600000000189e-05, 8.136099999999855e-05, 8.141599999999735e-05, 8.105599999999949e-05, 8.09169999999998e-05, 8.051400000000028e-05, 8.143099999999986e-05, 8.058299999999866e-05, 8.102800000000035e-05, 8.068099999999911e-05, 8.055600000000246e-05, 8.063800000000093e-05, 8.054099999999995e-05, 8.058300000000213e-05, 8.131899999999984e-05, 8.1458000000003e-05, 8.081899999999934e-05, 8.154200000000042e-05, 8.086100000000151e-05, 8.143000000000039e-05, 8.120899999999875e-05, 8.097200000000207e-05, 8.111100000000177e-05, 8.068100000000258e-05, 8.1458999999999e-05, 8.084800000000142e-05, 8.073700000000086e-05, 8.05269999999969e-05, 8.094399999999946e-05, 8.106899999999959e-05, 8.142999999999692e-05, 8.075000000000096e-05, 8.084699999999848e-05, 8.134699999999898e-05]</msg>
<status status="PASS" starttime="20201029 18:18:46.091" endtime="20201029 18:18:46.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.086" endtime="20201029 18:18:46.094"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:46.097" endtime="20201029 18:18:46.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.096" endtime="20201029 18:18:46.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.095" endtime="20201029 18:18:46.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.732" endtime="20201029 18:18:46.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:45.732" endtime="20201029 18:18:46.118"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.127" endtime="20201029 18:18:46.147"></status>
</kw>
<msg timestamp="20201029 18:18:46.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.125" endtime="20201029 18:18:46.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.149" endtime="20201029 18:18:46.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.151" endtime="20201029 18:18:46.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.123" endtime="20201029 18:18:46.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.121" endtime="20201029 18:18:46.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.161" endtime="20201029 18:18:46.448"></status>
</kw>
<msg timestamp="20201029 18:18:46.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019837833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019919861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.159" endtime="20201029 18:18:46.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019837833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019919861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.452" endtime="20201029 18:18:46.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.461" endtime="20201029 18:18:46.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.156" endtime="20201029 18:18:46.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.155" endtime="20201029 18:18:46.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:46.467" level="INFO">${RESULT} = [{'diff': 8.202800000000135e-05}, {'diff': 8.209699999999973e-05}, {'diff': 8.208399999999963e-05}, {'diff': 8.218100000000061e-05}, {'diff': 8.168100000000011e-05}, {'diff': 8.244500000000043e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:46.464" endtime="20201029 18:18:46.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:46.471" level="INFO">${ACCURACY} = {'diff': [8.202800000000135e-05, 8.209699999999973e-05, 8.208399999999963e-05, 8.218100000000061e-05, 8.168100000000011e-05, 8.244500000000043e-05, 8.175000000000196e-05, 8.170899999999925e-05, 8.2124...</msg>
<status status="PASS" starttime="20201029 18:18:46.468" endtime="20201029 18:18:46.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.476" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 18:18:46.475" endtime="20201029 18:18:46.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.479" level="INFO">VALUE: [8.202800000000135e-05, 8.209699999999973e-05, 8.208399999999963e-05, 8.218100000000061e-05, 8.168100000000011e-05, 8.244500000000043e-05, 8.175000000000196e-05, 8.170899999999925e-05, 8.212499999999887e-05, 8.173599999999892e-05, 8.244399999999749e-05, 8.230500000000127e-05, 8.162499999999837e-05, 8.162500000000183e-05, 8.183399999999938e-05, 8.180600000000024e-05, 8.187499999999862e-05, 8.166700000000054e-05, 8.198600000000264e-05, 8.20970000000032e-05, 8.225000000000246e-05, 8.19170000000008e-05, 8.222299999999932e-05, 8.156900000000009e-05, 8.162500000000183e-05, 8.201399999999831e-05, 8.21109999999993e-05, 8.194400000000046e-05, 8.201400000000178e-05, 8.173600000000239e-05, 8.175000000000196e-05, 8.240300000000172e-05, 8.179200000000067e-05, 8.19170000000008e-05, 8.161100000000227e-05, 8.241599999999835e-05, 8.219500000000018e-05, 8.155500000000052e-05, 8.186099999999905e-05, 8.179099999999773e-05, 8.174999999999849e-05, 8.219400000000071e-05, 8.209699999999973e-05, 8.156900000000009e-05, 8.200000000000221e-05, 8.24720000000001e-05, 8.157000000000303e-05, 8.174999999999849e-05, 8.180600000000024e-05, 8.154200000000042e-05]</msg>
<status status="PASS" starttime="20201029 18:18:46.477" endtime="20201029 18:18:46.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.472" endtime="20201029 18:18:46.486"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:46.490" endtime="20201029 18:18:46.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.489" endtime="20201029 18:18:46.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.487" endtime="20201029 18:18:46.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.119" endtime="20201029 18:18:46.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.118" endtime="20201029 18:18:46.511"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.520" endtime="20201029 18:18:46.541"></status>
</kw>
<msg timestamp="20201029 18:18:46.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.518" endtime="20201029 18:18:46.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.543" endtime="20201029 18:18:46.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.545" endtime="20201029 18:18:46.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.516" endtime="20201029 18:18:46.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.513" endtime="20201029 18:18:46.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.555" endtime="20201029 18:18:46.842"></status>
</kw>
<msg timestamp="20201029 18:18:46.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020850819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020934111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.553" endtime="20201029 18:18:46.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020850819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020934111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:46.846" endtime="20201029 18:18:46.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.855" endtime="20201029 18:18:46.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.550" endtime="20201029 18:18:46.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.549" endtime="20201029 18:18:46.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:46.861" level="INFO">${RESULT} = [{'diff': 8.32919999999987e-05}, {'diff': 8.268000000000164e-05}, {'diff': 8.351399999999981e-05}, {'diff': 8.254200000000142e-05}, {'diff': 8.312499999999987e-05}, {'diff': 8.32919999999987e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:18:46.858" endtime="20201029 18:18:46.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:46.866" level="INFO">${ACCURACY} = {'diff': [8.32919999999987e-05, 8.268000000000164e-05, 8.351399999999981e-05, 8.254200000000142e-05, 8.312499999999987e-05, 8.32919999999987e-05, 8.326400000000303e-05, 8.306900000000159e-05, 8.316700...</msg>
<status status="PASS" starttime="20201029 18:18:46.862" endtime="20201029 18:18:46.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.870" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 18:18:46.869" endtime="20201029 18:18:46.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.873" level="INFO">VALUE: [8.32919999999987e-05, 8.268000000000164e-05, 8.351399999999981e-05, 8.254200000000142e-05, 8.312499999999987e-05, 8.32919999999987e-05, 8.326400000000303e-05, 8.306900000000159e-05, 8.316700000000204e-05, 8.305599999999802e-05, 8.281899999999787e-05, 8.28049999999983e-05, 8.268000000000164e-05, 8.294399999999799e-05, 8.348600000000067e-05, 8.294500000000093e-05, 8.309700000000073e-05, 8.324999999999999e-05, 8.337500000000012e-05, 8.272299999999982e-05, 8.34309999999984e-05, 8.32369999999999e-05, 8.34170000000023e-05, 8.305499999999855e-05, 8.29720000000006e-05, 8.31659999999991e-05, 8.267999999999817e-05, 8.286100000000005e-05, 8.267999999999817e-05, 8.274999999999949e-05, 8.293000000000189e-05, 8.281999999999734e-05, 8.306900000000159e-05, 8.340299999999926e-05, 8.344500000000143e-05, 8.298600000000017e-05, 8.256900000000109e-05, 8.307000000000106e-05, 8.298600000000017e-05, 8.293000000000189e-05, 8.354200000000242e-05, 8.337500000000012e-05, 8.287499999999962e-05, 8.312500000000334e-05, 8.309700000000073e-05, 8.290299999999876e-05, 8.259700000000023e-05, 8.262499999999937e-05, 8.290299999999876e-05, 8.324999999999999e-05]</msg>
<status status="PASS" starttime="20201029 18:18:46.871" endtime="20201029 18:18:46.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.867" endtime="20201029 18:18:46.875"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:46.879" endtime="20201029 18:18:46.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.877" endtime="20201029 18:18:46.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.876" endtime="20201029 18:18:46.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.512" endtime="20201029 18:18:46.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.511" endtime="20201029 18:18:46.899"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.908" endtime="20201029 18:18:46.929"></status>
</kw>
<msg timestamp="20201029 18:18:46.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.907" endtime="20201029 18:18:46.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:46.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:46.930" endtime="20201029 18:18:46.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.933" endtime="20201029 18:18:46.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.904" endtime="20201029 18:18:46.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.902" endtime="20201029 18:18:46.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:46.942" endtime="20201029 18:18:47.228"></status>
</kw>
<msg timestamp="20201029 18:18:47.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019925208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020009, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:46.941" endtime="20201029 18:18:47.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019925208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020009, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:18:47.232" endtime="20201029 18:18:47.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.241" endtime="20201029 18:18:47.242"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.938" endtime="20201029 18:18:47.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.936" endtime="20201029 18:18:47.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:47.247" level="INFO">${RESULT} = [{'diff': 8.37919999999992e-05}, {'diff': 8.406999999999859e-05}, {'diff': 8.41249999999974e-05}, {'diff': 8.397199999999813e-05}, {'diff': 8.42919999999997e-05}, {'diff': 8.356999999999809e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:18:47.244" endtime="20201029 18:18:47.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:47.252" level="INFO">${ACCURACY} = {'diff': [8.37919999999992e-05, 8.406999999999859e-05, 8.41249999999974e-05, 8.397199999999813e-05, 8.42919999999997e-05, 8.356999999999809e-05, 8.37919999999992e-05, 8.440300000000026e-05, 8.36250000...</msg>
<status status="PASS" starttime="20201029 18:18:47.248" endtime="20201029 18:18:47.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.257" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 18:18:47.256" endtime="20201029 18:18:47.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.260" level="INFO">VALUE: [8.37919999999992e-05, 8.406999999999859e-05, 8.41249999999974e-05, 8.397199999999813e-05, 8.42919999999997e-05, 8.356999999999809e-05, 8.37919999999992e-05, 8.440300000000026e-05, 8.362500000000037e-05, 8.379099999999973e-05, 8.394399999999899e-05, 8.39720000000016e-05, 8.395799999999856e-05, 8.406899999999912e-05, 8.401400000000031e-05, 8.355600000000199e-05, 8.400000000000074e-05, 8.423600000000142e-05, 8.391699999999933e-05, 8.391699999999933e-05, 8.400000000000074e-05, 8.44720000000021e-05, 8.359699999999776e-05, 8.372200000000135e-05, 8.390200000000028e-05, 8.412500000000087e-05, 8.43469999999985e-05, 8.436099999999808e-05, 8.440300000000026e-05, 8.400000000000074e-05, 8.391699999999933e-05, 8.354199999999895e-05, 8.441699999999983e-05, 8.36659999999996e-05, 8.433400000000188e-05, 8.370899999999779e-05, 8.405500000000302e-05, 8.438900000000069e-05, 8.401400000000031e-05, 8.442999999999992e-05, 8.37919999999992e-05, 8.395800000000203e-05, 8.399999999999727e-05, 8.409699999999826e-05, 8.436200000000102e-05, 8.44309999999994e-05, 8.426400000000056e-05, 8.427800000000013e-05, 8.358400000000113e-05, 8.44859999999982e-05]</msg>
<status status="PASS" starttime="20201029 18:18:47.258" endtime="20201029 18:18:47.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.253" endtime="20201029 18:18:47.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:47.265" endtime="20201029 18:18:47.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.263" endtime="20201029 18:18:47.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.262" endtime="20201029 18:18:47.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.900" endtime="20201029 18:18:47.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:46.900" endtime="20201029 18:18:47.285"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.294" endtime="20201029 18:18:47.314"></status>
</kw>
<msg timestamp="20201029 18:18:47.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.293" endtime="20201029 18:18:47.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.316" endtime="20201029 18:18:47.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.319" endtime="20201029 18:18:47.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.290" endtime="20201029 18:18:47.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.288" endtime="20201029 18:18:47.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.329" endtime="20201029 18:18:47.616"></status>
</kw>
<msg timestamp="20201029 18:18:47.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019932694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.328" endtime="20201029 18:18:47.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019932694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020017972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.620" endtime="20201029 18:18:47.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.629" endtime="20201029 18:18:47.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.325" endtime="20201029 18:18:47.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.323" endtime="20201029 18:18:47.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:47.635" level="INFO">${RESULT} = [{'diff': 8.527799999999766e-05}, {'diff': 8.497199999999913e-05}, {'diff': 8.509699999999926e-05}, {'diff': 8.505600000000002e-05}, {'diff': 8.468000000000017e-05}, {'diff': 8.505600000000002e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:47.632" endtime="20201029 18:18:47.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:47.640" level="INFO">${ACCURACY} = {'diff': [8.527799999999766e-05, 8.497199999999913e-05, 8.509699999999926e-05, 8.505600000000002e-05, 8.468000000000017e-05, 8.505600000000002e-05, 8.458399999999866e-05, 8.466700000000008e-05, 8.5249...</msg>
<status status="PASS" starttime="20201029 18:18:47.636" endtime="20201029 18:18:47.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.644" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 18:18:47.643" endtime="20201029 18:18:47.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.647" level="INFO">VALUE: [8.527799999999766e-05, 8.497199999999913e-05, 8.509699999999926e-05, 8.505600000000002e-05, 8.468000000000017e-05, 8.505600000000002e-05, 8.458399999999866e-05, 8.466700000000008e-05, 8.524999999999852e-05, 8.523599999999895e-05, 8.527800000000113e-05, 8.519499999999972e-05, 8.47920000000002e-05, 8.495799999999956e-05, 8.459699999999876e-05, 8.465199999999756e-05, 8.520800000000328e-05, 8.497199999999913e-05, 8.53469999999995e-05, 8.480599999999977e-05, 8.525000000000199e-05, 8.53469999999995e-05, 8.486100000000205e-05, 8.486099999999858e-05, 8.455599999999952e-05, 8.461099999999833e-05, 8.472200000000235e-05, 8.502800000000088e-05, 8.545800000000006e-05, 8.472199999999888e-05, 8.494399999999999e-05, 8.455500000000005e-05, 8.479100000000073e-05, 8.540300000000126e-05, 8.486099999999858e-05, 8.49309999999999e-05, 8.548600000000267e-05, 8.476400000000106e-05, 8.537499999999865e-05, 8.540199999999831e-05, 8.523699999999843e-05, 8.45980000000017e-05, 8.519400000000024e-05, 8.513900000000144e-05, 8.519400000000024e-05, 8.54859999999992e-05, 8.541700000000083e-05, 8.472200000000235e-05, 8.468099999999965e-05, 8.530600000000027e-05]</msg>
<status status="PASS" starttime="20201029 18:18:47.645" endtime="20201029 18:18:47.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.640" endtime="20201029 18:18:47.648"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:47.652" endtime="20201029 18:18:47.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.650" endtime="20201029 18:18:47.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.649" endtime="20201029 18:18:47.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.286" endtime="20201029 18:18:47.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.286" endtime="20201029 18:18:47.673"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.682" endtime="20201029 18:18:47.705"></status>
</kw>
<msg timestamp="20201029 18:18:47.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.680" endtime="20201029 18:18:47.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:47.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:47.707" endtime="20201029 18:18:47.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.710" endtime="20201029 18:18:47.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.677" endtime="20201029 18:18:47.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.675" endtime="20201029 18:18:47.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:47.719" endtime="20201029 18:18:48.005"></status>
</kw>
<msg timestamp="20201029 18:18:48.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023293333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023379069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:47.717" endtime="20201029 18:18:48.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023293333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023379069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.010" endtime="20201029 18:18:48.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.018" endtime="20201029 18:18:48.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.715" endtime="20201029 18:18:48.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.713" endtime="20201029 18:18:48.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:48.025" level="INFO">${RESULT} = [{'diff': 8.573599999999945e-05}, {'diff': 8.580600000000077e-05}, {'diff': 8.609700000000026e-05}, {'diff': 8.568000000000117e-05}, {'diff': 8.63050000000018e-05}, {'diff': 8.629100000000223e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:48.021" endtime="20201029 18:18:48.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:48.029" level="INFO">${ACCURACY} = {'diff': [8.573599999999945e-05, 8.580600000000077e-05, 8.609700000000026e-05, 8.568000000000117e-05, 8.63050000000018e-05, 8.629100000000223e-05, 8.597200000000013e-05, 8.591700000000133e-05, 8.62359...</msg>
<status status="PASS" starttime="20201029 18:18:48.026" endtime="20201029 18:18:48.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.033" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 18:18:48.032" endtime="20201029 18:18:48.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.036" level="INFO">VALUE: [8.573599999999945e-05, 8.580600000000077e-05, 8.609700000000026e-05, 8.568000000000117e-05, 8.63050000000018e-05, 8.629100000000223e-05, 8.597200000000013e-05, 8.591700000000133e-05, 8.623599999999995e-05, 8.559699999999976e-05, 8.56530000000015e-05, 8.595900000000004e-05, 8.618100000000115e-05, 8.594500000000047e-05, 8.64310000000014e-05, 8.641700000000183e-05, 8.622299999999986e-05, 8.573599999999945e-05, 8.554099999999801e-05, 8.606899999999765e-05, 8.633300000000094e-05, 8.56249999999989e-05, 8.600000000000274e-05, 8.583300000000044e-05, 8.611099999999983e-05, 8.619499999999725e-05, 8.561099999999933e-05, 8.624999999999952e-05, 8.599999999999927e-05, 8.637499999999965e-05, 8.624999999999952e-05, 8.573599999999945e-05, 8.604099999999851e-05, 8.587499999999915e-05, 8.619399999999777e-05, 8.562500000000237e-05, 8.591699999999786e-05, 8.580600000000077e-05, 8.591700000000133e-05, 8.59310000000009e-05, 8.645800000000106e-05, 8.632000000000084e-05, 8.566700000000108e-05, 8.64860000000002e-05, 8.61249999999994e-05, 8.620800000000081e-05, 8.562500000000237e-05, 8.622200000000038e-05, 8.63050000000018e-05, 8.552799999999791e-05]</msg>
<status status="PASS" starttime="20201029 18:18:48.035" endtime="20201029 18:18:48.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.030" endtime="20201029 18:18:48.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:48.042" endtime="20201029 18:18:48.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.040" endtime="20201029 18:18:48.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.039" endtime="20201029 18:18:48.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.674" endtime="20201029 18:18:48.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:47.673" endtime="20201029 18:18:48.063"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.072" endtime="20201029 18:18:48.092"></status>
</kw>
<msg timestamp="20201029 18:18:48.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.070" endtime="20201029 18:18:48.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.094" endtime="20201029 18:18:48.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.096" endtime="20201029 18:18:48.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.067" endtime="20201029 18:18:48.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.065" endtime="20201029 18:18:48.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.106" endtime="20201029 18:18:48.392"></status>
</kw>
<msg timestamp="20201029 18:18:48.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019849014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019935944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.104" endtime="20201029 18:18:48.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019849014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019935944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.396" endtime="20201029 18:18:48.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.405" endtime="20201029 18:18:48.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.101" endtime="20201029 18:18:48.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.100" endtime="20201029 18:18:48.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:48.411" level="INFO">${RESULT} = [{'diff': 8.692999999999895e-05}, {'diff': 8.655500000000205e-05}, {'diff': 8.733299999999847e-05}, {'diff': 8.655499999999858e-05}, {'diff': 8.71250000000004e-05}, {'diff': 8.683299999999797e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:48.408" endtime="20201029 18:18:48.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:48.417" level="INFO">${ACCURACY} = {'diff': [8.692999999999895e-05, 8.655500000000205e-05, 8.733299999999847e-05, 8.655499999999858e-05, 8.71250000000004e-05, 8.683299999999797e-05, 8.71250000000004e-05, 8.655599999999805e-05, 8.668100...</msg>
<status status="PASS" starttime="20201029 18:18:48.412" endtime="20201029 18:18:48.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.421" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 18:18:48.420" endtime="20201029 18:18:48.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.424" level="INFO">VALUE: [8.692999999999895e-05, 8.655500000000205e-05, 8.733299999999847e-05, 8.655499999999858e-05, 8.71250000000004e-05, 8.683299999999797e-05, 8.71250000000004e-05, 8.655599999999805e-05, 8.668100000000165e-05, 8.713899999999997e-05, 8.744500000000197e-05, 8.723600000000095e-05, 8.704200000000245e-05, 8.66669999999986e-05, 8.71799999999992e-05, 8.725000000000052e-05, 8.652700000000291e-05, 8.725000000000052e-05, 8.716599999999963e-05, 8.720800000000181e-05, 8.693099999999843e-05, 8.675000000000002e-05, 8.691699999999886e-05, 8.6847000000001e-05, 8.715299999999954e-05, 8.750000000000077e-05, 8.711099999999736e-05, 8.666700000000208e-05, 8.713899999999997e-05, 8.670900000000079e-05, 8.654100000000248e-05, 8.66249999999999e-05, 8.654099999999901e-05, 8.691700000000233e-05, 8.741699999999936e-05, 8.738900000000022e-05, 8.655600000000152e-05, 8.6944999999998e-05, 8.659700000000076e-05, 8.687500000000015e-05, 8.663900000000294e-05, 8.736200000000055e-05, 8.687500000000015e-05, 8.744399999999902e-05, 8.700000000000027e-05, 8.673599999999698e-05, 8.670799999999784e-05, 8.712499999999693e-05, 8.691699999999886e-05, 8.686100000000058e-05]</msg>
<status status="PASS" starttime="20201029 18:18:48.422" endtime="20201029 18:18:48.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.418" endtime="20201029 18:18:48.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:48.429" endtime="20201029 18:18:48.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.427" endtime="20201029 18:18:48.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.426" endtime="20201029 18:18:48.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.063" endtime="20201029 18:18:48.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.063" endtime="20201029 18:18:48.450"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.459" endtime="20201029 18:18:48.479"></status>
</kw>
<msg timestamp="20201029 18:18:48.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.457" endtime="20201029 18:18:48.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.480" endtime="20201029 18:18:48.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.483" endtime="20201029 18:18:48.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.454" endtime="20201029 18:18:48.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.452" endtime="20201029 18:18:48.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.492" endtime="20201029 18:18:48.778"></status>
</kw>
<msg timestamp="20201029 18:18:48.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019901583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019989333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.491" endtime="20201029 18:18:48.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019901583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019989333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.783" endtime="20201029 18:18:48.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.791" endtime="20201029 18:18:48.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.488" endtime="20201029 18:18:48.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.486" endtime="20201029 18:18:48.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:48.798" level="INFO">${RESULT} = [{'diff': 8.775000000000102e-05}, {'diff': 8.819399999999977e-05}, {'diff': 8.791699999999986e-05}, {'diff': 8.784799999999801e-05}, {'diff': 8.761100000000133e-05}, {'diff': 8.847199999999916e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:48.795" endtime="20201029 18:18:48.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:48.802" level="INFO">${ACCURACY} = {'diff': [8.775000000000102e-05, 8.819399999999977e-05, 8.791699999999986e-05, 8.784799999999801e-05, 8.761100000000133e-05, 8.847199999999916e-05, 8.802800000000041e-05, 8.805500000000008e-05, 8.8056...</msg>
<status status="PASS" starttime="20201029 18:18:48.799" endtime="20201029 18:18:48.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.808" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 18:18:48.806" endtime="20201029 18:18:48.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.811" level="INFO">VALUE: [8.775000000000102e-05, 8.819399999999977e-05, 8.791699999999986e-05, 8.784799999999801e-05, 8.761100000000133e-05, 8.847199999999916e-05, 8.802800000000041e-05, 8.805500000000008e-05, 8.805600000000302e-05, 8.76669999999996e-05, 8.851300000000187e-05, 8.774999999999755e-05, 8.809699999999879e-05, 8.763900000000047e-05, 8.830500000000033e-05, 8.811100000000183e-05, 8.83059999999998e-05, 8.811099999999836e-05, 8.761100000000133e-05, 8.791699999999986e-05, 8.788899999999725e-05, 8.843099999999993e-05, 8.836200000000155e-05, 8.84869999999982e-05, 8.78189999999994e-05, 8.838899999999775e-05, 8.811100000000183e-05, 8.841600000000088e-05, 8.773600000000145e-05, 8.784700000000201e-05, 8.844400000000002e-05, 8.78059999999993e-05, 8.787500000000115e-05, 8.818099999999968e-05, 8.833399999999894e-05, 8.768099999999918e-05, 8.83059999999998e-05, 8.769399999999927e-05, 8.761100000000133e-05, 8.829200000000023e-05, 8.848599999999873e-05, 8.773600000000145e-05, 8.783299999999897e-05, 8.843000000000045e-05, 8.763900000000047e-05, 8.788899999999725e-05, 8.795799999999909e-05, 8.836100000000208e-05, 8.76250000000009e-05, 8.83059999999998e-05]</msg>
<status status="PASS" starttime="20201029 18:18:48.809" endtime="20201029 18:18:48.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.803" endtime="20201029 18:18:48.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:48.816" endtime="20201029 18:18:48.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.815" endtime="20201029 18:18:48.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.814" endtime="20201029 18:18:48.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.451" endtime="20201029 18:18:48.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.450" endtime="20201029 18:18:48.837"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.846" endtime="20201029 18:18:48.868"></status>
</kw>
<msg timestamp="20201029 18:18:48.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.844" endtime="20201029 18:18:48.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:48.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:48.869" endtime="20201029 18:18:48.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.872" endtime="20201029 18:18:48.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.842" endtime="20201029 18:18:48.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.840" endtime="20201029 18:18:48.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:48.881" endtime="20201029 18:18:49.168"></status>
</kw>
<msg timestamp="20201029 18:18:49.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020885875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020975042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:48.880" endtime="20201029 18:18:49.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020885875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020975042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.172" endtime="20201029 18:18:49.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.180" endtime="20201029 18:18:49.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.877" endtime="20201029 18:18:49.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.875" endtime="20201029 18:18:49.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:49.187" level="INFO">${RESULT} = [{'diff': 8.916699999999764e-05}, {'diff': 8.945900000000007e-05}, {'diff': 8.912499999999893e-05}, {'diff': 8.89999999999988e-05}, {'diff': 8.919400000000077e-05}, {'diff': 8.8638999999998e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:18:49.184" endtime="20201029 18:18:49.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:49.191" level="INFO">${ACCURACY} = {'diff': [8.916699999999764e-05, 8.945900000000007e-05, 8.912499999999893e-05, 8.89999999999988e-05, 8.919400000000077e-05, 8.8638999999998e-05, 8.852699999999797e-05, 8.906900000000065e-05, 8.9166000...</msg>
<status status="PASS" starttime="20201029 18:18:49.188" endtime="20201029 18:18:49.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.196" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 18:18:49.195" endtime="20201029 18:18:49.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.199" level="INFO">VALUE: [8.916699999999764e-05, 8.945900000000007e-05, 8.912499999999893e-05, 8.89999999999988e-05, 8.919400000000077e-05, 8.8638999999998e-05, 8.852699999999797e-05, 8.906900000000065e-05, 8.916600000000163e-05, 8.86800000000007e-05, 8.856900000000015e-05, 8.950000000000277e-05, 8.91670000000011e-05, 8.924999999999905e-05, 8.895800000000009e-05, 8.920899999999982e-05, 8.94999999999993e-05, 8.912499999999893e-05, 8.922199999999991e-05, 8.923599999999948e-05, 8.904099999999804e-05, 8.870799999999984e-05, 8.947200000000016e-05, 8.888899999999825e-05, 8.854200000000048e-05, 8.934700000000004e-05, 8.923599999999948e-05, 8.898599999999923e-05, 8.874999999999855e-05, 8.887500000000215e-05, 8.929200000000123e-05, 8.886200000000205e-05, 8.930499999999786e-05, 8.855499999999711e-05, 8.945800000000059e-05, 8.936099999999961e-05, 8.895800000000009e-05, 8.927800000000166e-05, 8.938899999999875e-05, 8.934700000000004e-05, 8.936199999999908e-05, 8.854200000000048e-05, 8.915299999999807e-05, 8.920899999999982e-05, 8.868100000000018e-05, 8.936200000000255e-05, 8.855600000000005e-05, 8.909699999999979e-05, 8.851400000000134e-05, 8.859700000000276e-05]</msg>
<status status="PASS" starttime="20201029 18:18:49.197" endtime="20201029 18:18:49.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.192" endtime="20201029 18:18:49.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:49.205" endtime="20201029 18:18:49.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.203" endtime="20201029 18:18:49.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.202" endtime="20201029 18:18:49.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.838" endtime="20201029 18:18:49.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:48.838" endtime="20201029 18:18:49.225"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.234" endtime="20201029 18:18:49.254"></status>
</kw>
<msg timestamp="20201029 18:18:49.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.233" endtime="20201029 18:18:49.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.256" endtime="20201029 18:18:49.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.258" endtime="20201029 18:18:49.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.230" endtime="20201029 18:18:49.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.228" endtime="20201029 18:18:49.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.268" endtime="20201029 18:18:49.553"></status>
</kw>
<msg timestamp="20201029 18:18:49.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019959667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020050139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.266" endtime="20201029 18:18:49.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019959667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020050139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.557" endtime="20201029 18:18:49.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.565" endtime="20201029 18:18:49.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.263" endtime="20201029 18:18:49.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.262" endtime="20201029 18:18:49.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:49.572" level="INFO">${RESULT} = [{'diff': 9.047200000000116e-05}, {'diff': 9.040299999999932e-05}, {'diff': 9.041700000000236e-05}, {'diff': 9.002799999999894e-05}, {'diff': 9.023600000000048e-05}, {'diff': 9.029200000000223e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:49.569" endtime="20201029 18:18:49.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:49.577" level="INFO">${ACCURACY} = {'diff': [9.047200000000116e-05, 9.040299999999932e-05, 9.041700000000236e-05, 9.002799999999894e-05, 9.023600000000048e-05, 9.029200000000223e-05, 9.018100000000168e-05, 8.974999999999955e-05, 8.9693...</msg>
<status status="PASS" starttime="20201029 18:18:49.573" endtime="20201029 18:18:49.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.582" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 18:18:49.581" endtime="20201029 18:18:49.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.584" level="INFO">VALUE: [9.047200000000116e-05, 9.040299999999932e-05, 9.041700000000236e-05, 9.002799999999894e-05, 9.023600000000048e-05, 9.029200000000223e-05, 9.018100000000168e-05, 8.974999999999955e-05, 8.96939999999978e-05, 9.022200000000091e-05, 9.022200000000091e-05, 8.958300000000072e-05, 9.029199999999876e-05, 8.973599999999998e-05, 9.018099999999821e-05, 9.037500000000018e-05, 8.961099999999986e-05, 9.015300000000254e-05, 9.01389999999995e-05, 8.96939999999978e-05, 9.006900000000165e-05, 9.054199999999901e-05, 8.952800000000191e-05, 9.045800000000159e-05, 8.955500000000158e-05, 8.98190000000014e-05, 9.029199999999876e-05, 8.994499999999753e-05, 9.037500000000018e-05, 9.036100000000061e-05, 8.98060000000013e-05, 9.005599999999808e-05, 8.980599999999783e-05, 9.004200000000198e-05, 9.025000000000005e-05, 9.009699999999732e-05, 9.037500000000018e-05, 9.012499999999993e-05, 8.99999999999998e-05, 8.993100000000143e-05, 9.023600000000048e-05, 8.986100000000011e-05, 9.051399999999987e-05, 9.037500000000018e-05, 9.048600000000073e-05, 8.969500000000075e-05, 9.05000000000003e-05, 9.009800000000026e-05, 9.008300000000122e-05, 8.983300000000097e-05]</msg>
<status status="PASS" starttime="20201029 18:18:49.583" endtime="20201029 18:18:49.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.578" endtime="20201029 18:18:49.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:49.589" endtime="20201029 18:18:49.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.588" endtime="20201029 18:18:49.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.587" endtime="20201029 18:18:49.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.226" endtime="20201029 18:18:49.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.226" endtime="20201029 18:18:49.610"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.619" endtime="20201029 18:18:49.639"></status>
</kw>
<msg timestamp="20201029 18:18:49.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.618" endtime="20201029 18:18:49.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:49.641" endtime="20201029 18:18:49.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.644" endtime="20201029 18:18:49.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.615" endtime="20201029 18:18:49.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.613" endtime="20201029 18:18:49.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.653" endtime="20201029 18:18:49.939"></status>
</kw>
<msg timestamp="20201029 18:18:49.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019960583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020051264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.651" endtime="20201029 18:18:49.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019960583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020051264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:49.943" endtime="20201029 18:18:49.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:49.951" endtime="20201029 18:18:49.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.649" endtime="20201029 18:18:49.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.647" endtime="20201029 18:18:49.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:49.958" level="INFO">${RESULT} = [{'diff': 9.068099999999871e-05}, {'diff': 9.090300000000329e-05}, {'diff': 9.147300000000164e-05}, {'diff': 9.092999999999948e-05}, {'diff': 9.111100000000136e-05}, {'diff': 9.11939999999993e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:49.955" endtime="20201029 18:18:49.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:49.962" level="INFO">${ACCURACY} = {'diff': [9.068099999999871e-05, 9.090300000000329e-05, 9.147300000000164e-05, 9.092999999999948e-05, 9.111100000000136e-05, 9.11939999999993e-05, 9.106899999999918e-05, 9.112500000000093e-05, 9.05409...</msg>
<status status="PASS" starttime="20201029 18:18:49.959" endtime="20201029 18:18:49.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.968" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 18:18:49.966" endtime="20201029 18:18:49.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:49.973" level="INFO">VALUE: [9.068099999999871e-05, 9.090300000000329e-05, 9.147300000000164e-05, 9.092999999999948e-05, 9.111100000000136e-05, 9.11939999999993e-05, 9.106899999999918e-05, 9.112500000000093e-05, 9.054099999999954e-05, 9.084699999999807e-05, 9.144499999999903e-05, 9.118100000000268e-05, 9.074999999999708e-05, 9.141699999999989e-05, 9.109700000000179e-05, 9.151400000000087e-05, 9.075000000000055e-05, 9.081899999999893e-05, 9.079199999999926e-05, 9.101400000000037e-05, 9.136100000000161e-05, 9.0639e-05, 9.145799999999912e-05, 9.094399999999905e-05, 9.109700000000179e-05, 9.055599999999858e-05, 9.106999999999865e-05, 9.105600000000255e-05, 9.15000000000013e-05, 9.123599999999801e-05, 9.086200000000058e-05, 9.141600000000041e-05, 9.081899999999893e-05, 9.130499999999986e-05, 9.091599999999991e-05, 9.131899999999943e-05, 9.065299999999957e-05, 9.14450000000025e-05, 9.058300000000172e-05, 9.129199999999976e-05, 9.054199999999901e-05, 9.061100000000086e-05, 9.105599999999908e-05, 9.0639e-05, 9.090299999999982e-05, 9.151400000000087e-05, 9.144399999999955e-05, 9.102700000000047e-05, 9.062500000000043e-05, 9.083400000000144e-05]</msg>
<status status="PASS" starttime="20201029 18:18:49.970" endtime="20201029 18:18:49.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.963" endtime="20201029 18:18:49.976"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:49.983" endtime="20201029 18:18:50.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.980" endtime="20201029 18:18:50.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.978" endtime="20201029 18:18:50.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.611" endtime="20201029 18:18:50.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:49.610" endtime="20201029 18:18:50.008"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.026" endtime="20201029 18:18:50.054"></status>
</kw>
<msg timestamp="20201029 18:18:50.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.023" endtime="20201029 18:18:50.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.057" endtime="20201029 18:18:50.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.062" endtime="20201029 18:18:50.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.017" endtime="20201029 18:18:50.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.013" endtime="20201029 18:18:50.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.073" endtime="20201029 18:18:50.358"></status>
</kw>
<msg timestamp="20201029 18:18:50.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035376597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035468292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.072" endtime="20201029 18:18:50.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035376597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035468292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.363" endtime="20201029 18:18:50.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.371" endtime="20201029 18:18:50.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.069" endtime="20201029 18:18:50.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.068" endtime="20201029 18:18:50.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:50.378" level="INFO">${RESULT} = [{'diff': 9.169499999999581e-05}, {'diff': 9.247200000000316e-05}, {'diff': 9.162499999999796e-05}, {'diff': 9.173699999999452e-05}, {'diff': 9.190300000000429e-05}, {'diff': 9.154100000000054e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:50.375" endtime="20201029 18:18:50.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:50.382" level="INFO">${ACCURACY} = {'diff': [9.169499999999581e-05, 9.247200000000316e-05, 9.162499999999796e-05, 9.173699999999452e-05, 9.190300000000429e-05, 9.154100000000054e-05, 9.169399999999633e-05, 9.242999999999751e-05, 9.2486...</msg>
<status status="PASS" starttime="20201029 18:18:50.379" endtime="20201029 18:18:50.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.386" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 18:18:50.385" endtime="20201029 18:18:50.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.389" level="INFO">VALUE: [9.169499999999581e-05, 9.247200000000316e-05, 9.162499999999796e-05, 9.173699999999452e-05, 9.190300000000429e-05, 9.154100000000054e-05, 9.169399999999633e-05, 9.242999999999751e-05, 9.248600000000273e-05, 9.24859999999958e-05, 9.234699999999957e-05, 9.226400000000162e-05, 9.247200000000316e-05, 9.156999999999915e-05, 9.163900000000447e-05, 9.21529999999976e-05, 9.156899999999968e-05, 9.204200000000051e-05, 9.204100000000104e-05, 9.167999999999676e-05, 9.219399999999683e-05, 9.236099999999914e-05, 9.156899999999968e-05, 9.219500000000325e-05, 9.202800000000094e-05, 9.237499999999871e-05, 9.161099999999839e-05, 9.25000000000023e-05, 9.223700000000196e-05, 9.154200000000001e-05, 9.248699999999527e-05, 9.180500000000036e-05, 9.175000000000155e-05, 9.223600000000248e-05, 9.21800000000042e-05, 9.201399999999443e-05, 9.245800000000359e-05, 9.193100000000343e-05, 9.170800000000284e-05, 9.16670000000036e-05, 9.20000000000018e-05, 9.186099999999864e-05, 9.156899999999968e-05, 9.18199999999994e-05, 9.186099999999864e-05, 9.211100000000583e-05, 9.25000000000023e-05, 9.155500000000011e-05, 9.173600000000198e-05, 9.159699999999882e-05]</msg>
<status status="PASS" starttime="20201029 18:18:50.387" endtime="20201029 18:18:50.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.383" endtime="20201029 18:18:50.391"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:50.395" endtime="20201029 18:18:50.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.394" endtime="20201029 18:18:50.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.392" endtime="20201029 18:18:50.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.010" endtime="20201029 18:18:50.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.009" endtime="20201029 18:18:50.416"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.425" endtime="20201029 18:18:50.445"></status>
</kw>
<msg timestamp="20201029 18:18:50.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.423" endtime="20201029 18:18:50.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.446" endtime="20201029 18:18:50.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.449" endtime="20201029 18:18:50.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.421" endtime="20201029 18:18:50.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.419" endtime="20201029 18:18:50.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.458" endtime="20201029 18:18:50.743"></status>
</kw>
<msg timestamp="20201029 18:18:50.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019553667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019646889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.456" endtime="20201029 18:18:50.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019553667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019646889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.747" endtime="20201029 18:18:50.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.755" endtime="20201029 18:18:50.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.454" endtime="20201029 18:18:50.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.452" endtime="20201029 18:18:50.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:50.762" level="INFO">${RESULT} = [{'diff': 9.322200000000044e-05}, {'diff': 9.337499999999971e-05}, {'diff': 9.291699999999792e-05}, {'diff': 9.261100000000286e-05}, {'diff': 9.311099999999989e-05}, {'diff': 9.340300000000232e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:50.758" endtime="20201029 18:18:50.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:50.767" level="INFO">${ACCURACY} = {'diff': [9.322200000000044e-05, 9.337499999999971e-05, 9.291699999999792e-05, 9.261100000000286e-05, 9.311099999999989e-05, 9.340300000000232e-05, 9.298699999999924e-05, 9.255500000000111e-05, 9.3486...</msg>
<status status="PASS" starttime="20201029 18:18:50.762" endtime="20201029 18:18:50.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.771" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 18:18:50.770" endtime="20201029 18:18:50.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.773" level="INFO">VALUE: [9.322200000000044e-05, 9.337499999999971e-05, 9.291699999999792e-05, 9.261100000000286e-05, 9.311099999999989e-05, 9.340300000000232e-05, 9.298699999999924e-05, 9.255500000000111e-05, 9.348600000000026e-05, 9.279100000000179e-05, 9.30139999999989e-05, 9.266700000000114e-05, 9.256899999999721e-05, 9.28200000000004e-05, 9.326399999999915e-05, 9.266700000000114e-05, 9.349999999999983e-05, 9.274999999999908e-05, 9.29590000000001e-05, 9.277800000000169e-05, 9.33879999999998e-05, 9.272199999999994e-05, 9.259699999999982e-05, 9.256900000000068e-05, 9.348600000000026e-05, 9.349999999999983e-05, 9.316699999999817e-05, 9.326399999999915e-05, 9.274999999999908e-05, 9.258399999999972e-05, 9.324999999999958e-05, 9.268100000000071e-05, 9.329200000000176e-05, 9.298699999999924e-05, 9.3333000000001e-05, 9.292999999999801e-05, 9.292999999999801e-05, 9.26529999999981e-05, 9.280500000000136e-05, 9.267999999999776e-05, 9.349999999999983e-05, 9.348600000000026e-05, 9.255600000000058e-05, 9.336100000000014e-05, 9.28330000000005e-05, 9.259800000000276e-05, 9.311199999999936e-05, 9.341600000000241e-05, 9.341599999999894e-05, 9.267999999999776e-05]</msg>
<status status="PASS" starttime="20201029 18:18:50.772" endtime="20201029 18:18:50.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.767" endtime="20201029 18:18:50.775"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:50.782" endtime="20201029 18:18:50.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.779" endtime="20201029 18:18:50.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.776" endtime="20201029 18:18:50.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.417" endtime="20201029 18:18:50.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.416" endtime="20201029 18:18:50.806"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.824" endtime="20201029 18:18:50.849"></status>
</kw>
<msg timestamp="20201029 18:18:50.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.821" endtime="20201029 18:18:50.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:50.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:50.852" endtime="20201029 18:18:50.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.857" endtime="20201029 18:18:50.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.815" endtime="20201029 18:18:50.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.811" endtime="20201029 18:18:50.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:50.876" endtime="20201029 18:18:51.163"></status>
</kw>
<msg timestamp="20201029 18:18:51.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033073236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033167681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:50.873" endtime="20201029 18:18:51.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033073236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033167681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.167" endtime="20201029 18:18:51.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.175" endtime="20201029 18:18:51.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.867" endtime="20201029 18:18:51.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.864" endtime="20201029 18:18:51.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:51.181" level="INFO">${RESULT} = [{'diff': 9.444499999999856e-05}, {'diff': 9.387500000000021e-05}, {'diff': 9.427700000000372e-05}, {'diff': 9.362499999999996e-05}, {'diff': 9.404100000000304e-05}, {'diff': 9.444399999999908e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:51.178" endtime="20201029 18:18:51.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:51.185" level="INFO">${ACCURACY} = {'diff': [9.444499999999856e-05, 9.387500000000021e-05, 9.427700000000372e-05, 9.362499999999996e-05, 9.404100000000304e-05, 9.444399999999908e-05, 9.429200000000276e-05, 9.424999999999711e-05, 9.4485...</msg>
<status status="PASS" starttime="20201029 18:18:51.182" endtime="20201029 18:18:51.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.190" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 18:18:51.189" endtime="20201029 18:18:51.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.192" level="INFO">VALUE: [9.444499999999856e-05, 9.387500000000021e-05, 9.427700000000372e-05, 9.362499999999996e-05, 9.404100000000304e-05, 9.444399999999908e-05, 9.429200000000276e-05, 9.424999999999711e-05, 9.44859999999978e-05, 9.407000000000165e-05, 9.386100000000064e-05, 9.425000000000405e-05, 9.423700000000396e-05, 9.38880000000003e-05, 9.43609999999942e-05, 9.440299999999985e-05, 9.438900000000028e-05, 9.430499999999592e-05, 9.440299999999985e-05, 9.355599999999464e-05, 9.380600000000183e-05, 9.357000000000115e-05, 9.354200000000201e-05, 9.44729999999977e-05, 9.425000000000405e-05, 9.402800000000294e-05, 9.444399999999908e-05, 9.406899999999524e-05, 9.430500000000286e-05, 9.393099999999849e-05, 9.352800000000244e-05, 9.409700000000132e-05, 9.352800000000244e-05, 9.404199999999557e-05, 9.438900000000028e-05, 9.447200000000516e-05, 9.376400000000312e-05, 9.38880000000003e-05, 9.444499999999856e-05, 9.44859999999978e-05, 9.434700000000157e-05, 9.417999999999926e-05, 9.354100000000254e-05, 9.409700000000132e-05, 9.392999999999901e-05, 9.40000000000038e-05, 9.437500000000071e-05, 9.373599999999704e-05, 9.374999999999661e-05, 9.44859999999978e-05]</msg>
<status status="PASS" starttime="20201029 18:18:51.191" endtime="20201029 18:18:51.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.186" endtime="20201029 18:18:51.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:51.198" endtime="20201029 18:18:51.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.197" endtime="20201029 18:18:51.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.196" endtime="20201029 18:18:51.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.808" endtime="20201029 18:18:51.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:50.807" endtime="20201029 18:18:51.219"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.227" endtime="20201029 18:18:51.252"></status>
</kw>
<msg timestamp="20201029 18:18:51.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.226" endtime="20201029 18:18:51.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.253" endtime="20201029 18:18:51.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.256" endtime="20201029 18:18:51.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.223" endtime="20201029 18:18:51.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.221" endtime="20201029 18:18:51.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.265" endtime="20201029 18:18:51.551"></status>
</kw>
<msg timestamp="20201029 18:18:51.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022769333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022864764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.263" endtime="20201029 18:18:51.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022769333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022864764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.555" endtime="20201029 18:18:51.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.563" endtime="20201029 18:18:51.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.261" endtime="20201029 18:18:51.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.259" endtime="20201029 18:18:51.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:51.569" level="INFO">${RESULT} = [{'diff': 9.543099999999999e-05}, {'diff': 9.508299999999928e-05}, {'diff': 9.468099999999924e-05}, {'diff': 9.487500000000121e-05}, {'diff': 9.468100000000271e-05}, {'diff': 9.480499999999989e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:51.566" endtime="20201029 18:18:51.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:51.573" level="INFO">${ACCURACY} = {'diff': [9.543099999999999e-05, 9.508299999999928e-05, 9.468099999999924e-05, 9.487500000000121e-05, 9.468100000000271e-05, 9.480499999999989e-05, 9.49859999999983e-05, 9.531899999999996e-05, 9.53469...</msg>
<status status="PASS" starttime="20201029 18:18:51.570" endtime="20201029 18:18:51.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.578" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 18:18:51.577" endtime="20201029 18:18:51.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.580" level="INFO">VALUE: [9.543099999999999e-05, 9.508299999999928e-05, 9.468099999999924e-05, 9.487500000000121e-05, 9.468100000000271e-05, 9.480499999999989e-05, 9.49859999999983e-05, 9.531899999999996e-05, 9.53469999999991e-05, 9.548600000000226e-05, 9.490300000000035e-05, 9.455499999999964e-05, 9.46530000000001e-05, 9.504200000000004e-05, 9.477800000000022e-05, 9.516700000000017e-05, 9.544500000000303e-05, 9.523699999999802e-05, 9.447300000000117e-05, 9.544400000000008e-05, 9.477699999999728e-05, 9.536099999999867e-05, 9.531899999999996e-05, 9.52079999999994e-05, 9.477800000000022e-05, 9.516700000000017e-05, 9.54720000000027e-05, 9.537499999999824e-05, 9.50140000000009e-05, 9.534799999999857e-05, 9.480600000000283e-05, 9.54590000000026e-05, 9.47079999999989e-05, 9.537499999999824e-05, 9.501399999999743e-05, 9.490300000000035e-05, 9.469399999999933e-05, 9.498600000000176e-05, 9.516700000000017e-05, 9.501399999999743e-05, 9.511100000000189e-05, 9.534799999999857e-05, 9.504200000000004e-05, 9.486099999999817e-05, 9.506899999999971e-05, 9.502800000000047e-05, 9.473599999999804e-05, 9.50409999999971e-05, 9.46530000000001e-05, 9.516700000000017e-05]</msg>
<status status="PASS" starttime="20201029 18:18:51.579" endtime="20201029 18:18:51.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.574" endtime="20201029 18:18:51.588"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:51.591" endtime="20201029 18:18:51.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.590" endtime="20201029 18:18:51.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.589" endtime="20201029 18:18:51.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.220" endtime="20201029 18:18:51.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.219" endtime="20201029 18:18:51.612"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.621" endtime="20201029 18:18:51.641"></status>
</kw>
<msg timestamp="20201029 18:18:51.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.619" endtime="20201029 18:18:51.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:51.642" endtime="20201029 18:18:51.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.645" endtime="20201029 18:18:51.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.617" endtime="20201029 18:18:51.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.614" endtime="20201029 18:18:51.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.653" endtime="20201029 18:18:51.939"></status>
</kw>
<msg timestamp="20201029 18:18:51.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019320681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019417208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.652" endtime="20201029 18:18:51.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019320681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019417208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:51.943" endtime="20201029 18:18:51.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:51.951" endtime="20201029 18:18:51.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.649" endtime="20201029 18:18:51.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.648" endtime="20201029 18:18:51.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:51.958" level="INFO">${RESULT} = [{'diff': 9.652699999999903e-05}, {'diff': 9.641699999999795e-05}, {'diff': 9.579200000000079e-05}, {'diff': 9.573599999999904e-05}, {'diff': 9.637499999999924e-05}, {'diff': 9.59859999999993e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:51.954" endtime="20201029 18:18:51.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:51.962" level="INFO">${ACCURACY} = {'diff': [9.652699999999903e-05, 9.641699999999795e-05, 9.579200000000079e-05, 9.573599999999904e-05, 9.637499999999924e-05, 9.59859999999993e-05, 9.579099999999785e-05, 9.581900000000046e-05, 9.61249...</msg>
<status status="PASS" starttime="20201029 18:18:51.959" endtime="20201029 18:18:51.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.967" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 18:18:51.966" endtime="20201029 18:18:51.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:51.969" level="INFO">VALUE: [9.652699999999903e-05, 9.641699999999795e-05, 9.579200000000079e-05, 9.573599999999904e-05, 9.637499999999924e-05, 9.59859999999993e-05, 9.579099999999785e-05, 9.581900000000046e-05, 9.612499999999899e-05, 9.562500000000196e-05, 9.580600000000036e-05, 9.636099999999967e-05, 9.637499999999924e-05, 9.569499999999981e-05, 9.590299999999788e-05, 9.554200000000054e-05, 9.580600000000036e-05, 9.549999999999836e-05, 9.569499999999981e-05, 9.622199999999997e-05, 9.572199999999947e-05, 9.641600000000194e-05, 9.581900000000046e-05, 9.618099999999727e-05, 9.623599999999954e-05, 9.58469999999996e-05, 9.629199999999782e-05, 9.558399999999925e-05, 9.609800000000279e-05, 9.645799999999718e-05, 9.63470000000001e-05, 9.64859999999998e-05, 9.60140000000019e-05, 9.57079999999999e-05, 9.587500000000221e-05, 9.618000000000126e-05, 9.591700000000092e-05, 9.563900000000153e-05, 9.594400000000058e-05, 9.566700000000067e-05, 9.607000000000018e-05, 9.611099999999942e-05, 9.629099999999835e-05, 9.586100000000264e-05, 9.608300000000028e-05, 9.591599999999798e-05, 9.593000000000101e-05, 9.641599999999848e-05, 9.623599999999954e-05, 9.574999999999861e-05]</msg>
<status status="PASS" starttime="20201029 18:18:51.968" endtime="20201029 18:18:51.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.963" endtime="20201029 18:18:51.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:51.974" endtime="20201029 18:18:51.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.973" endtime="20201029 18:18:51.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.972" endtime="20201029 18:18:51.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.613" endtime="20201029 18:18:51.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.612" endtime="20201029 18:18:51.996"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.004" endtime="20201029 18:18:52.025"></status>
</kw>
<msg timestamp="20201029 18:18:52.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.003" endtime="20201029 18:18:52.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.026" endtime="20201029 18:18:52.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.029" endtime="20201029 18:18:52.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.000" endtime="20201029 18:18:52.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.998" endtime="20201029 18:18:52.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.037" endtime="20201029 18:18:52.324"></status>
</kw>
<msg timestamp="20201029 18:18:52.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020104139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020201028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.036" endtime="20201029 18:18:52.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020104139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020201028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.328" endtime="20201029 18:18:52.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.336" endtime="20201029 18:18:52.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.033" endtime="20201029 18:18:52.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.032" endtime="20201029 18:18:52.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:52.342" level="INFO">${RESULT} = [{'diff': 9.688899999999931e-05}, {'diff': 9.744500000000156e-05}, {'diff': 9.701399999999943e-05}, {'diff': 9.743099999999852e-05}, {'diff': 9.716700000000217e-05}, {'diff': 9.738899999999981e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:18:52.339" endtime="20201029 18:18:52.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:52.346" level="INFO">${ACCURACY} = {'diff': [9.688899999999931e-05, 9.744500000000156e-05, 9.701399999999943e-05, 9.743099999999852e-05, 9.716700000000217e-05, 9.738899999999981e-05, 9.677699999999928e-05, 9.738899999999981e-05, 9.7430...</msg>
<status status="PASS" starttime="20201029 18:18:52.343" endtime="20201029 18:18:52.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.351" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 18:18:52.350" endtime="20201029 18:18:52.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.353" level="INFO">VALUE: [9.688899999999931e-05, 9.744500000000156e-05, 9.701399999999943e-05, 9.743099999999852e-05, 9.716700000000217e-05, 9.738899999999981e-05, 9.677699999999928e-05, 9.738899999999981e-05, 9.743000000000251e-05, 9.743100000000199e-05, 9.723600000000054e-05, 9.75409999999996e-05, 9.737499999999677e-05, 9.736100000000067e-05, 9.720900000000088e-05, 9.693100000000149e-05, 9.679199999999832e-05, 9.736200000000014e-05, 9.743100000000199e-05, 9.705500000000214e-05, 9.715199999999966e-05, 9.708400000000075e-05, 9.715299999999913e-05, 9.668000000000176e-05, 9.668100000000124e-05, 9.705599999999814e-05, 9.7334000000001e-05, 9.723600000000054e-05, 9.722300000000045e-05, 9.715299999999913e-05, 9.669400000000133e-05, 9.740300000000285e-05, 9.730499999999892e-05, 9.705499999999867e-05, 9.715299999999913e-05, 9.71530000000026e-05, 9.711100000000042e-05, 9.715299999999913e-05, 9.709699999999738e-05, 9.743100000000199e-05, 9.694500000000106e-05, 9.665299999999863e-05, 9.67920000000018e-05, 9.743099999999852e-05, 9.737500000000024e-05, 9.655499999999817e-05, 9.72219999999975e-05, 9.66669999999982e-05, 9.750000000000036e-05, 9.661099999999992e-05]</msg>
<status status="PASS" starttime="20201029 18:18:52.352" endtime="20201029 18:18:52.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.347" endtime="20201029 18:18:52.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:52.358" endtime="20201029 18:18:52.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.357" endtime="20201029 18:18:52.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.355" endtime="20201029 18:18:52.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.996" endtime="20201029 18:18:52.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:51.996" endtime="20201029 18:18:52.379"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.388" endtime="20201029 18:18:52.409"></status>
</kw>
<msg timestamp="20201029 18:18:52.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.386" endtime="20201029 18:18:52.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.410" endtime="20201029 18:18:52.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.413" endtime="20201029 18:18:52.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.383" endtime="20201029 18:18:52.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.381" endtime="20201029 18:18:52.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.422" endtime="20201029 18:18:52.707"></status>
</kw>
<msg timestamp="20201029 18:18:52.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021127056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021225514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.420" endtime="20201029 18:18:52.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021127056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021225514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.711" endtime="20201029 18:18:52.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.719" endtime="20201029 18:18:52.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.418" endtime="20201029 18:18:52.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.416" endtime="20201029 18:18:52.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:52.726" level="INFO">${RESULT} = [{'diff': 9.845799999999919e-05}, {'diff': 9.82080000000024e-05}, {'diff': 9.791700000000292e-05}, {'diff': 9.791700000000292e-05}, {'diff': 9.823599999999807e-05}, {'diff': 9.800000000000086e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:18:52.723" endtime="20201029 18:18:52.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:52.730" level="INFO">${ACCURACY} = {'diff': [9.845799999999919e-05, 9.82080000000024e-05, 9.791700000000292e-05, 9.791700000000292e-05, 9.823599999999807e-05, 9.800000000000086e-05, 9.765299999999963e-05, 9.840300000000038e-05, 9.85000...</msg>
<status status="PASS" starttime="20201029 18:18:52.727" endtime="20201029 18:18:52.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.734" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 18:18:52.733" endtime="20201029 18:18:52.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.737" level="INFO">VALUE: [9.845799999999919e-05, 9.82080000000024e-05, 9.791700000000292e-05, 9.791700000000292e-05, 9.823599999999807e-05, 9.800000000000086e-05, 9.765299999999963e-05, 9.840300000000038e-05, 9.850000000000136e-05, 9.772200000000147e-05, 9.755500000000264e-05, 9.831899999999949e-05, 9.819399999999937e-05, 9.83609999999982e-05, 9.804199999999957e-05, 9.768099999999877e-05, 9.818099999999927e-05, 9.766599999999973e-05, 9.812500000000099e-05, 9.822299999999798e-05, 9.779199999999932e-05, 9.811199999999742e-05, 9.841600000000048e-05, 9.795799999999869e-05, 9.811100000000142e-05, 9.783299999999856e-05, 9.769399999999887e-05, 9.755600000000211e-05, 9.829199999999982e-05, 9.773600000000104e-05, 9.844499999999909e-05, 9.823599999999807e-05, 9.758300000000178e-05, 9.786200000000064e-05, 9.787500000000074e-05, 9.829199999999982e-05, 9.854200000000007e-05, 9.812500000000099e-05, 9.76799999999993e-05, 9.769400000000233e-05, 9.755599999999864e-05, 9.773599999999757e-05, 9.84999999999979e-05, 9.758400000000125e-05, 9.84730000000017e-05, 9.787500000000074e-05, 9.816599999999676e-05, 9.78609999999977e-05, 9.761100000000092e-05, 9.841600000000048e-05]</msg>
<status status="PASS" starttime="20201029 18:18:52.735" endtime="20201029 18:18:52.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.731" endtime="20201029 18:18:52.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:52.742" endtime="20201029 18:18:52.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.741" endtime="20201029 18:18:52.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.740" endtime="20201029 18:18:52.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.379" endtime="20201029 18:18:52.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.379" endtime="20201029 18:18:52.763"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.771" endtime="20201029 18:18:52.792"></status>
</kw>
<msg timestamp="20201029 18:18:52.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.770" endtime="20201029 18:18:52.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:52.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:52.794" endtime="20201029 18:18:52.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.797" endtime="20201029 18:18:52.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.767" endtime="20201029 18:18:52.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.765" endtime="20201029 18:18:52.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:52.806" endtime="20201029 18:18:53.091"></status>
</kw>
<msg timestamp="20201029 18:18:53.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019322319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019420944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:52.804" endtime="20201029 18:18:53.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019322319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019420944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.095" endtime="20201029 18:18:53.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.103" endtime="20201029 18:18:53.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.801" endtime="20201029 18:18:53.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.800" endtime="20201029 18:18:53.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:53.110" level="INFO">${RESULT} = [{'diff': 9.862499999999802e-05}, {'diff': 9.89020000000014e-05}, {'diff': 9.926399999999821e-05}, {'diff': 9.8721999999999e-05}, {'diff': 9.88609999999987e-05}, {'diff': 9.922299999999898e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 18:18:53.106" endtime="20201029 18:18:53.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:53.114" level="INFO">${ACCURACY} = {'diff': [9.862499999999802e-05, 9.89020000000014e-05, 9.926399999999821e-05, 9.8721999999999e-05, 9.88609999999987e-05, 9.922299999999898e-05, 9.906900000000024e-05, 9.92219999999995e-05, 9.894499999...</msg>
<status status="PASS" starttime="20201029 18:18:53.110" endtime="20201029 18:18:53.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.119" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 18:18:53.118" endtime="20201029 18:18:53.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.121" level="INFO">VALUE: [9.862499999999802e-05, 9.89020000000014e-05, 9.926399999999821e-05, 9.8721999999999e-05, 9.88609999999987e-05, 9.922299999999898e-05, 9.906900000000024e-05, 9.92219999999995e-05, 9.894499999999959e-05, 9.922300000000245e-05, 9.861200000000139e-05, 9.868099999999977e-05, 9.94999999999989e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.863899999999759e-05, 9.90410000000011e-05, 9.913900000000156e-05, 9.851400000000093e-05, 9.88059999999999e-05, 9.887499999999827e-05, 9.93609999999992e-05, 9.894499999999959e-05, 9.924999999999864e-05, 9.919400000000037e-05, 9.863900000000106e-05, 9.852699999999756e-05, 9.874999999999814e-05, 9.92219999999995e-05, 9.909699999999938e-05, 9.90549999999972e-05, 9.95280000000015e-05, 9.893100000000002e-05, 9.916699999999723e-05, 9.923600000000254e-05, 9.861200000000139e-05, 9.89869999999983e-05, 9.924999999999864e-05, 9.947199999999976e-05, 9.86800000000003e-05, 9.895799999999969e-05, 9.911099999999895e-05, 9.906900000000024e-05, 9.869499999999934e-05, 9.919400000000037e-05, 9.854200000000007e-05, 9.868099999999977e-05, 9.875000000000161e-05, 9.861200000000139e-05, 9.887499999999827e-05]</msg>
<status status="PASS" starttime="20201029 18:18:53.120" endtime="20201029 18:18:53.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.115" endtime="20201029 18:18:53.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:53.126" endtime="20201029 18:18:53.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.125" endtime="20201029 18:18:53.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.124" endtime="20201029 18:18:53.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.764" endtime="20201029 18:18:53.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:52.763" endtime="20201029 18:18:53.147"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.155" endtime="20201029 18:18:53.176"></status>
</kw>
<msg timestamp="20201029 18:18:53.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.154" endtime="20201029 18:18:53.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.177" endtime="20201029 18:18:53.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.180" endtime="20201029 18:18:53.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.151" endtime="20201029 18:18:53.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.149" endtime="20201029 18:18:53.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.188" endtime="20201029 18:18:53.475"></status>
</kw>
<msg timestamp="20201029 18:18:53.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019308958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019408653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.187" endtime="20201029 18:18:53.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019308958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019408653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.479" endtime="20201029 18:18:53.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.487" endtime="20201029 18:18:53.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.184" endtime="20201029 18:18:53.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.183" endtime="20201029 18:18:53.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:53.494" level="INFO">${RESULT} = [{'diff': 9.969500000000034e-05}, {'diff': 9.981900000000099e-05}, {'diff': 9.977800000000175e-05}, {'diff': 0.00010020800000000094}, {'diff': 0.00010033300000000106}, {'diff': 9.994400000000112e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:53.491" endtime="20201029 18:18:53.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:53.498" level="INFO">${ACCURACY} = {'diff': [9.969500000000034e-05, 9.981900000000099e-05, 9.977800000000175e-05, 0.00010020800000000094, 0.00010033300000000106, 9.994400000000112e-05, 9.992999999999808e-05, 9.965199999999869e-05, 0.00...</msg>
<status status="PASS" starttime="20201029 18:18:53.495" endtime="20201029 18:18:53.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.502" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 18:18:53.501" endtime="20201029 18:18:53.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.505" level="INFO">VALUE: [9.969500000000034e-05, 9.981900000000099e-05, 9.977800000000175e-05, 0.00010020800000000094, 0.00010033300000000106, 9.994400000000112e-05, 9.992999999999808e-05, 9.965199999999869e-05, 0.00010008300000000081, 9.965299999999816e-05, 0.00010024999999999964, 0.00010041700000000195, 9.99999999999994e-05, 9.976399999999871e-05, 0.00010013799999999962, 0.00010001299999999949, 0.00010009799999999985, 0.0001004869999999998, 9.99999999999994e-05, 0.00010048600000000033, 9.969400000000087e-05, 0.00010011099999999995, 0.00010030599999999792, 9.98609999999997e-05, 9.9722e-05, 0.0001000419999999981, 9.963900000000206e-05, 0.00010023699999999955, 9.966699999999773e-05, 9.962499999999902e-05, 0.0001000549999999982, 9.98609999999997e-05, 9.98609999999997e-05, 0.00010006999999999724, 9.987499999999927e-05, 9.984700000000013e-05, 0.00010024999999999964, 0.00010037499999999977, 0.00010026399999999921, 0.00010004200000000157, 0.00010026399999999921, 0.00010038799999999987, 0.000100415999999999, 9.987499999999927e-05, 9.991699999999798e-05, 9.987499999999927e-05, 9.963900000000206e-05, 0.00010012499999999952, 9.98609999999997e-05, 9.969500000000034e-05]</msg>
<status status="PASS" starttime="20201029 18:18:53.503" endtime="20201029 18:18:53.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.499" endtime="20201029 18:18:53.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:53.509" endtime="20201029 18:18:53.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.508" endtime="20201029 18:18:53.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.507" endtime="20201029 18:18:53.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.148" endtime="20201029 18:18:53.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.147" endtime="20201029 18:18:53.530"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.539" endtime="20201029 18:18:53.560"></status>
</kw>
<msg timestamp="20201029 18:18:53.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.537" endtime="20201029 18:18:53.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.561" endtime="20201029 18:18:53.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.564" endtime="20201029 18:18:53.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.534" endtime="20201029 18:18:53.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.532" endtime="20201029 18:18:53.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.572" endtime="20201029 18:18:53.858"></status>
</kw>
<msg timestamp="20201029 18:18:53.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020308667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02040975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:53.571" endtime="20201029 18:18:53.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020308667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02040975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:53.862" endtime="20201029 18:18:53.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.870" endtime="20201029 18:18:53.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.568" endtime="20201029 18:18:53.873"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.567" endtime="20201029 18:18:53.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:53.877" level="INFO">${RESULT} = [{'diff': 0.00010108300000000181}, {'diff': 0.00010076399999999971}, {'diff': 0.00010115299999999966}, {'diff': 0.00010148600000000133}, {'diff': 0.00010075000000000014}, {'diff': 0.000100598000000000...</msg>
<status status="PASS" starttime="20201029 18:18:53.874" endtime="20201029 18:18:53.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:53.881" level="INFO">${ACCURACY} = {'diff': [0.00010108300000000181, 0.00010076399999999971, 0.00010115299999999966, 0.00010148600000000133, 0.00010075000000000014, 0.00010059800000000035, 0.00010056900000000174, 0.00010133299999999859...</msg>
<status status="PASS" starttime="20201029 18:18:53.878" endtime="20201029 18:18:53.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.885" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 18:18:53.884" endtime="20201029 18:18:53.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.887" level="INFO">VALUE: [0.00010108300000000181, 0.00010076399999999971, 0.00010115299999999966, 0.00010148600000000133, 0.00010075000000000014, 0.00010059800000000035, 0.00010056900000000174, 0.00010133299999999859, 0.00010144399999999915, 0.00010151400000000046, 0.00010141699999999948, 0.00010116699999999923, 0.00010090299999999941, 0.00010127799999999978, 0.00010116699999999923, 0.00010068100000000177, 0.00010079199999999885, 0.00010138899999999687, 0.00010075000000000014, 0.00010090299999999941, 0.0001010000000000004, 0.00010126400000000021, 0.00010123600000000108, 0.00010058300000000131, 0.0001013610000000012, 0.00010079199999999885, 0.00010125000000000065, 0.00010144499999999862, 0.00010079199999999885, 0.00010068100000000177, 0.00010075000000000014, 0.00010137500000000077, 0.00010055500000000217, 0.00010061100000000045, 0.00010069400000000187, 0.00010075000000000014, 0.00010088800000000037, 0.00010094499999999812, 0.00010111100000000095, 0.00010095899999999769, 0.00010079200000000232, 0.00010113800000000062, 0.00010067999999999883, 0.00010088899999999984, 0.00010113900000000009, 0.00010061100000000045, 0.00010066599999999926, 0.00010144399999999915, 0.00010076399999999971, 0.00010105599999999867]</msg>
<status status="PASS" starttime="20201029 18:18:53.886" endtime="20201029 18:18:53.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.882" endtime="20201029 18:18:53.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:53.893" endtime="20201029 18:18:53.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.892" endtime="20201029 18:18:53.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.891" endtime="20201029 18:18:53.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.531" endtime="20201029 18:18:53.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.530" endtime="20201029 18:18:53.914"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.922" endtime="20201029 18:18:53.942"></status>
</kw>
<msg timestamp="20201029 18:18:53.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.921" endtime="20201029 18:18:53.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:53.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:53.944" endtime="20201029 18:18:53.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.946" endtime="20201029 18:18:53.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.918" endtime="20201029 18:18:53.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.916" endtime="20201029 18:18:53.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:53.955" endtime="20201029 18:18:54.239"></status>
</kw>
<msg timestamp="20201029 18:18:54.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019307694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019409708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:53.954" endtime="20201029 18:18:54.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019307694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019409708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.243" endtime="20201029 18:18:54.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.251" endtime="20201029 18:18:54.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.951" endtime="20201029 18:18:54.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.949" endtime="20201029 18:18:54.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:54.257" level="INFO">${RESULT} = [{'diff': 0.00010201400000000097}, {'diff': 0.00010229199999999689}, {'diff': 0.0001021809999999998}, {'diff': 0.00010211199999999795}, {'diff': 0.0001015419999999996}, {'diff': 0.0001020000000000014}...</msg>
<status status="PASS" starttime="20201029 18:18:54.254" endtime="20201029 18:18:54.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:54.262" level="INFO">${ACCURACY} = {'diff': [0.00010201400000000097, 0.00010229199999999689, 0.0001021809999999998, 0.00010211199999999795, 0.0001015419999999996, 0.0001020000000000014, 0.00010180499999999995, 0.00010186099999999823, 0...</msg>
<status status="PASS" starttime="20201029 18:18:54.258" endtime="20201029 18:18:54.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.267" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 18:18:54.266" endtime="20201029 18:18:54.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.269" level="INFO">VALUE: [0.00010201400000000097, 0.00010229199999999689, 0.0001021809999999998, 0.00010211199999999795, 0.0001015419999999996, 0.0001020000000000014, 0.00010180499999999995, 0.00010186099999999823, 0.00010209700000000238, 0.00010218000000000033, 0.00010165300000000016, 0.00010184699999999866, 0.00010244500000000309, 0.0001022359999999986, 0.00010183399999999856, 0.0001021809999999998, 0.00010216700000000023, 0.0001023879999999984, 0.00010212500000000152, 0.00010181899999999952, 0.00010230599999999992, 0.00010187500000000127, 0.00010238900000000134, 0.00010237500000000177, 0.00010187500000000127, 0.0001016809999999993, 0.00010191699999999998, 0.0001016809999999993, 0.00010205599999999967, 0.00010162499999999755, 0.0001019160000000005, 0.0001017359999999981, 0.0001020420000000001, 0.00010161099999999798, 0.00010166699999999973, 0.00010240300000000091, 0.00010197199999999879, 0.00010177800000000028, 0.0001023199999999995, 0.00010233399999999906, 0.00010248599999999886, 0.00010209799999999838, 0.00010211099999999848, 0.0001023610000000022, 0.00010218000000000033, 0.0001015549999999997, 0.00010223699999999808, 0.0001023610000000022, 0.00010174999999999768, 0.00010180599999999942]</msg>
<status status="PASS" starttime="20201029 18:18:54.268" endtime="20201029 18:18:54.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.263" endtime="20201029 18:18:54.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:54.274" endtime="20201029 18:18:54.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.272" endtime="20201029 18:18:54.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.271" endtime="20201029 18:18:54.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.915" endtime="20201029 18:18:54.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:53.914" endtime="20201029 18:18:54.294"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.303" endtime="20201029 18:18:54.324"></status>
</kw>
<msg timestamp="20201029 18:18:54.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.301" endtime="20201029 18:18:54.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.326" endtime="20201029 18:18:54.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.328" endtime="20201029 18:18:54.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.299" endtime="20201029 18:18:54.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.297" endtime="20201029 18:18:54.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.337" endtime="20201029 18:18:54.624"></status>
</kw>
<msg timestamp="20201029 18:18:54.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019194708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019297278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.335" endtime="20201029 18:18:54.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019194708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019297278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.628" endtime="20201029 18:18:54.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.636" endtime="20201029 18:18:54.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.333" endtime="20201029 18:18:54.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.331" endtime="20201029 18:18:54.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:54.642" level="INFO">${RESULT} = [{'diff': 0.00010256999999999974}, {'diff': 0.00010274999999999868}, {'diff': 0.00010262500000000202}, {'diff': 0.00010331900000000102}, {'diff': 0.00010336099999999973}, {'diff': 0.000103096999999999...</msg>
<status status="PASS" starttime="20201029 18:18:54.639" endtime="20201029 18:18:54.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:54.646" level="INFO">${ACCURACY} = {'diff': [0.00010256999999999974, 0.00010274999999999868, 0.00010262500000000202, 0.00010331900000000102, 0.00010336099999999973, 0.00010309699999999991, 0.00010272199999999954, 0.00010280600000000042...</msg>
<status status="PASS" starttime="20201029 18:18:54.643" endtime="20201029 18:18:54.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.650" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 18:18:54.649" endtime="20201029 18:18:54.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.653" level="INFO">VALUE: [0.00010256999999999974, 0.00010274999999999868, 0.00010262500000000202, 0.00010331900000000102, 0.00010336099999999973, 0.00010309699999999991, 0.00010272199999999954, 0.00010280600000000042, 0.0001030559999999972, 0.00010295800000000022, 0.0001028749999999988, 0.00010276399999999825, 0.00010347299999999976, 0.00010349999999999943, 0.00010258299999999984, 0.00010259799999999888, 0.00010326400000000222, 0.0001026940000000004, 0.0001026940000000004, 0.00010274999999999868, 0.00010282, 0.00010330600000000092, 0.00010333300000000059, 0.00010349999999999943, 0.00010293100000000055, 0.00010329200000000135, 0.00010305600000000067, 0.00010316600000000176, 0.00010312499999999905, 0.00010347200000000029, 0.0001026940000000004, 0.00010290300000000141, 0.00010340300000000191, 0.00010322200000000004, 0.00010340299999999844, 0.00010284699999999966, 0.00010279200000000085, 0.00010277699999999834, 0.00010324999999999918, 0.00010272299999999901, 0.00010280499999999748, 0.00010287500000000227, 0.00010252700000000156, 0.00010249999999999843, 0.00010256999999999974, 0.00010348699999999933, 0.0001030000000000024, 0.00010344500000000062, 0.00010305600000000067, 0.0001033619999999992]</msg>
<status status="PASS" starttime="20201029 18:18:54.651" endtime="20201029 18:18:54.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.647" endtime="20201029 18:18:54.654"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:54.657" endtime="20201029 18:18:54.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.656" endtime="20201029 18:18:54.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.655" endtime="20201029 18:18:54.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.295" endtime="20201029 18:18:54.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.295" endtime="20201029 18:18:54.678"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.687" endtime="20201029 18:18:54.709"></status>
</kw>
<msg timestamp="20201029 18:18:54.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.685" endtime="20201029 18:18:54.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:54.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:54.711" endtime="20201029 18:18:54.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.713" endtime="20201029 18:18:54.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.682" endtime="20201029 18:18:54.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.680" endtime="20201029 18:18:54.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:54.722" endtime="20201029 18:18:55.009"></status>
</kw>
<msg timestamp="20201029 18:18:55.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022794444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:54.721" endtime="20201029 18:18:55.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022794444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.013" endtime="20201029 18:18:55.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.021" endtime="20201029 18:18:55.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.718" endtime="20201029 18:18:55.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.717" endtime="20201029 18:18:55.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:55.027" level="INFO">${RESULT} = [{'diff': 0.00010377699999999934}, {'diff': 0.00010392999999999861}, {'diff': 0.00010366600000000226}, {'diff': 0.00010390299999999894}, {'diff': 0.00010413899999999962}, {'diff': 0.000104443999999998...</msg>
<status status="PASS" starttime="20201029 18:18:55.024" endtime="20201029 18:18:55.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:55.031" level="INFO">${ACCURACY} = {'diff': [0.00010377699999999934, 0.00010392999999999861, 0.00010366600000000226, 0.00010390299999999894, 0.00010413899999999962, 0.00010444399999999868, 0.00010402800000000254, 0.00010425000000000018...</msg>
<status status="PASS" starttime="20201029 18:18:55.028" endtime="20201029 18:18:55.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.035" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 18:18:55.034" endtime="20201029 18:18:55.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.037" level="INFO">VALUE: [0.00010377699999999934, 0.00010392999999999861, 0.00010366600000000226, 0.00010390299999999894, 0.00010413899999999962, 0.00010444399999999868, 0.00010402800000000254, 0.00010425000000000018, 0.00010399999999999993, 0.00010436100000000073, 0.00010379200000000185, 0.00010379099999999891, 0.00010369500000000087, 0.00010405499999999873, 0.00010365199999999922, 0.00010380499999999848, 0.00010376399999999925, 0.0001035420000000016, 0.00010430600000000192, 0.00010399999999999993, 0.00010419500000000137, 0.00010448599999999739, 0.00010355600000000117, 0.00010393100000000155, 0.00010423700000000008, 0.0001043750000000003, 0.000104514, 0.00010362499999999955, 0.00010365299999999869, 0.00010411100000000048, 0.0001043200000000015, 0.00010362499999999955, 0.000103820000000001, 0.00010363899999999912, 0.00010436100000000073, 0.00010404199999999864, 0.00010352799999999857, 0.00010444499999999815, 0.00010386100000000023, 0.00010375000000000315, 0.0001043750000000003, 0.00010381899999999805, 0.00010440299999999944, 0.00010368099999999783, 0.00010409800000000038, 0.00010381999999999753, 0.0001037360000000001, 0.00010384800000000013, 0.00010374999999999968, 0.00010442999999999911]</msg>
<status status="PASS" starttime="20201029 18:18:55.036" endtime="20201029 18:18:55.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.032" endtime="20201029 18:18:55.040"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:55.043" endtime="20201029 18:18:55.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.042" endtime="20201029 18:18:55.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.041" endtime="20201029 18:18:55.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.679" endtime="20201029 18:18:55.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:54.678" endtime="20201029 18:18:55.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:16.252" endtime="20201029 18:18:55.064"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:16.179" endtime="20201029 18:18:55.064" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:55.071" endtime="20201029 18:18:55.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.069" endtime="20201029 18:18:55.091"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.103" endtime="20201029 18:18:55.121"></status>
</kw>
<msg timestamp="20201029 18:18:55.122" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.102" endtime="20201029 18:18:55.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.124" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.123" endtime="20201029 18:18:55.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.127" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:18:55.125" endtime="20201029 18:18:55.127"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:55.099" endtime="20201029 18:18:55.128"></status>
</kw>
<status status="FAIL" starttime="20201029 18:18:55.097" endtime="20201029 18:18:55.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.096" endtime="20201029 18:18:55.129"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:18:55.132" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:18:55.132" endtime="20201029 18:18:55.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.129" endtime="20201029 18:18:55.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.095" endtime="20201029 18:18:55.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.094" endtime="20201029 18:18:55.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.134" endtime="20201029 18:18:55.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.093" endtime="20201029 18:18:55.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.091" endtime="20201029 18:18:55.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.068" endtime="20201029 18:18:55.137"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.147" endtime="20201029 18:18:55.165"></status>
</kw>
<msg timestamp="20201029 18:18:55.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.145" endtime="20201029 18:18:55.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.167" endtime="20201029 18:18:55.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.170" endtime="20201029 18:18:55.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.142" endtime="20201029 18:18:55.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.140" endtime="20201029 18:18:55.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.178" endtime="20201029 18:18:55.466"></status>
</kw>
<msg timestamp="20201029 18:18:55.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066521292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066551819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.177" endtime="20201029 18:18:55.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066521292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066551819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.470" endtime="20201029 18:18:55.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.479" endtime="20201029 18:18:55.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.174" endtime="20201029 18:18:55.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.173" endtime="20201029 18:18:55.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:55.485" level="INFO">${RESULT} = [{'diff': 3.052700000000241e-05}, {'diff': 3.04579999999971e-05}, {'diff': 3.0472000000003607e-05}, {'diff': 3.036100000000652e-05}, {'diff': 3.0416999999990924e-05}, {'diff': 3.0430999999997432e-05},...</msg>
<status status="PASS" starttime="20201029 18:18:55.482" endtime="20201029 18:18:55.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:55.490" level="INFO">${ACCURACY} = {'diff': [3.052700000000241e-05, 3.04579999999971e-05, 3.0472000000003607e-05, 3.036100000000652e-05, 3.0416999999990924e-05, 3.0430999999997432e-05, 3.04170000000048e-05, 3.0514000000009256e-05, 3.03...</msg>
<status status="PASS" starttime="20201029 18:18:55.486" endtime="20201029 18:18:55.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.495" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 18:18:55.494" endtime="20201029 18:18:55.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.498" level="INFO">VALUE: [3.052700000000241e-05, 3.04579999999971e-05, 3.0472000000003607e-05, 3.036100000000652e-05, 3.0416999999990924e-05, 3.0430999999997432e-05, 3.04170000000048e-05, 3.0514000000009256e-05, 3.0374999999999153e-05, 3.04170000000048e-05, 3.041599999999145e-05, 3.0388000000006188e-05, 3.044500000000394e-05, 3.036100000000652e-05, 3.04170000000048e-05, 3.0416000000005328e-05, 3.0416000000005328e-05, 3.0402999999998293e-05, 3.042999999999796e-05, 3.042999999999796e-05, 3.0416000000005328e-05, 3.0430999999997432e-05, 3.04170000000048e-05, 3.0416999999990924e-05, 3.0430999999997432e-05, 3.0430999999997432e-05, 3.042999999999796e-05, 3.042999999999796e-05, 3.0458999999996572e-05, 3.042999999999796e-05, 3.04170000000048e-05, 3.0430999999997432e-05, 3.0402999999998293e-05, 3.04170000000048e-05, 3.04170000000048e-05, 3.038900000000566e-05, 3.042999999999796e-05, 3.041599999999145e-05, 3.0430999999997432e-05, 3.048599999999624e-05, 3.0416999999990924e-05, 3.0402999999998293e-05, 3.0402999999998293e-05, 3.0416000000005328e-05, 3.0416999999990924e-05, 3.0500000000002747e-05, 3.04170000000048e-05, 3.0360999999992644e-05, 3.04579999999971e-05, 3.041599999999145e-05]</msg>
<status status="PASS" starttime="20201029 18:18:55.496" endtime="20201029 18:18:55.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.490" endtime="20201029 18:18:55.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:55.502" endtime="20201029 18:18:55.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.501" endtime="20201029 18:18:55.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.500" endtime="20201029 18:18:55.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.138" endtime="20201029 18:18:55.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.138" endtime="20201029 18:18:55.523"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.532" endtime="20201029 18:18:55.550"></status>
</kw>
<msg timestamp="20201029 18:18:55.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.530" endtime="20201029 18:18:55.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.552" endtime="20201029 18:18:55.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.555" endtime="20201029 18:18:55.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.528" endtime="20201029 18:18:55.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.526" endtime="20201029 18:18:55.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.564" endtime="20201029 18:18:55.862"></status>
</kw>
<msg timestamp="20201029 18:18:55.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02044525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020475764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:55.562" endtime="20201029 18:18:55.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02044525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020475764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:55.872" endtime="20201029 18:18:55.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.891" endtime="20201029 18:18:55.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.560" endtime="20201029 18:18:55.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.558" endtime="20201029 18:18:55.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:55.906" level="INFO">${RESULT} = [{'diff': 3.0513999999998848e-05}, {'diff': 3.0416999999997862e-05}, {'diff': 3.0416999999997862e-05}, {'diff': 3.0347000000000013e-05}, {'diff': 3.042999999999796e-05}, {'diff': 3.0417000000001332e-0...</msg>
<status status="PASS" starttime="20201029 18:18:55.899" endtime="20201029 18:18:55.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:55.917" level="INFO">${ACCURACY} = {'diff': [3.0513999999998848e-05, 3.0416999999997862e-05, 3.0416999999997862e-05, 3.0347000000000013e-05, 3.042999999999796e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0430000000001428e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:55.908" endtime="20201029 18:18:55.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.924" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 18:18:55.923" endtime="20201029 18:18:55.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.927" level="INFO">VALUE: [3.0513999999998848e-05, 3.0416999999997862e-05, 3.0416999999997862e-05, 3.0347000000000013e-05, 3.042999999999796e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0347000000000013e-05, 3.0431000000000902e-05, 3.0485999999999708e-05, 3.0486000000003177e-05, 3.045900000000004e-05, 3.0430999999997432e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.044500000000047e-05, 3.044399999999753e-05, 3.0417000000001332e-05, 3.0458000000000568e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0472000000000138e-05, 3.0444000000000998e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0403000000001762e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.042999999999796e-05, 3.0403000000001762e-05, 3.0417000000001332e-05, 3.0388999999998723e-05, 3.0430999999997432e-05, 3.0417000000001332e-05, 3.0514000000002317e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.04579999999971e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0416000000001858e-05, 3.044500000000047e-05, 3.0416000000001858e-05, 3.047299999999961e-05]</msg>
<status status="PASS" starttime="20201029 18:18:55.925" endtime="20201029 18:18:55.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.919" endtime="20201029 18:18:55.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:55.932" endtime="20201029 18:18:55.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.930" endtime="20201029 18:18:55.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.929" endtime="20201029 18:18:55.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.524" endtime="20201029 18:18:55.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.523" endtime="20201029 18:18:55.952"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.962" endtime="20201029 18:18:55.979"></status>
</kw>
<msg timestamp="20201029 18:18:55.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.960" endtime="20201029 18:18:55.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:55.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:55.981" endtime="20201029 18:18:55.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.984" endtime="20201029 18:18:55.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.957" endtime="20201029 18:18:55.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.955" endtime="20201029 18:18:55.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:55.993" endtime="20201029 18:18:56.281"></status>
</kw>
<msg timestamp="20201029 18:18:56.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020515417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020545917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:55.991" endtime="20201029 18:18:56.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020515417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020545917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.285" endtime="20201029 18:18:56.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.293" endtime="20201029 18:18:56.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.989" endtime="20201029 18:18:56.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.987" endtime="20201029 18:18:56.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:56.300" level="INFO">${RESULT} = [{'diff': 3.0499999999999278e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0417000000001332e-05}, {'diff': 3.042999999999796e-05}, {'diff': 3.0416999999997862e-05}, {'diff': 3.0416999999997862e-0...</msg>
<status status="PASS" starttime="20201029 18:18:56.297" endtime="20201029 18:18:56.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:56.304" level="INFO">${ACCURACY} = {'diff': [3.0499999999999278e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.042999999999796e-05, 3.0416999999997862e-05, 3.0416999999997862e-05, 3.044500000000047e-05, 3.042999999999796e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:18:56.301" endtime="20201029 18:18:56.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.309" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 18:18:56.308" endtime="20201029 18:18:56.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.312" level="INFO">VALUE: [3.0499999999999278e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.042999999999796e-05, 3.0416999999997862e-05, 3.0416999999997862e-05, 3.044500000000047e-05, 3.042999999999796e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0388999999998723e-05, 3.0444000000000998e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.0430999999997432e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.0430999999997432e-05, 3.0388999999998723e-05, 3.044500000000047e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0472000000000138e-05, 3.0403000000001762e-05, 3.0416999999997862e-05, 3.0417000000001332e-05, 3.0430999999997432e-05, 3.0430000000001428e-05, 3.0444000000000998e-05, 3.042999999999796e-05, 3.0416999999997862e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.0444000000000998e-05, 3.042999999999796e-05, 3.040199999999882e-05, 3.0431000000000902e-05, 3.045900000000004e-05, 3.0417000000001332e-05, 3.042999999999796e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.042999999999796e-05, 3.0430999999997432e-05]</msg>
<status status="PASS" starttime="20201029 18:18:56.310" endtime="20201029 18:18:56.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.305" endtime="20201029 18:18:56.312"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:56.316" endtime="20201029 18:18:56.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.315" endtime="20201029 18:18:56.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.313" endtime="20201029 18:18:56.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.953" endtime="20201029 18:18:56.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.953" endtime="20201029 18:18:56.337"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.347" endtime="20201029 18:18:56.365"></status>
</kw>
<msg timestamp="20201029 18:18:56.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.345" endtime="20201029 18:18:56.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.366" endtime="20201029 18:18:56.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.369" endtime="20201029 18:18:56.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.342" endtime="20201029 18:18:56.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.340" endtime="20201029 18:18:56.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.378" endtime="20201029 18:18:56.666"></status>
</kw>
<msg timestamp="20201029 18:18:56.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021459681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021490194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.377" endtime="20201029 18:18:56.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021459681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021490194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.670" endtime="20201029 18:18:56.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.678" endtime="20201029 18:18:56.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.374" endtime="20201029 18:18:56.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.372" endtime="20201029 18:18:56.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:56.685" level="INFO">${RESULT} = [{'diff': 3.0512999999999374e-05}, {'diff': 3.0499999999999278e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0430000000001428e-05}, {'diff': 3.0417000000001332e-05}, {'diff': 3.0472000000000138e-...</msg>
<status status="PASS" starttime="20201029 18:18:56.681" endtime="20201029 18:18:56.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:56.689" level="INFO">${ACCURACY} = {'diff': [3.0512999999999374e-05, 3.0499999999999278e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0472000000000138e-05, 3.0431000000000902e-05, 3.0431000000000902e-05...</msg>
<status status="PASS" starttime="20201029 18:18:56.686" endtime="20201029 18:18:56.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.693" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 18:18:56.692" endtime="20201029 18:18:56.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.696" level="INFO">VALUE: [3.0512999999999374e-05, 3.0499999999999278e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0472000000000138e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0416000000001858e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0403000000001762e-05, 3.044500000000047e-05, 3.0430000000001428e-05, 3.0416999999997862e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0416999999997862e-05, 3.0416000000001858e-05, 3.0431000000000902e-05, 3.0430999999997432e-05, 3.0430000000001428e-05, 3.0444000000000998e-05, 3.0444000000000998e-05, 3.0430999999997432e-05, 3.041599999999839e-05, 3.0431000000000902e-05, 3.044500000000047e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0403000000001762e-05, 3.0430999999997432e-05, 3.0430999999997432e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.047199999999667e-05, 3.0402999999998293e-05, 3.0388999999998723e-05, 3.044399999999753e-05, 3.0430000000001428e-05]</msg>
<status status="PASS" starttime="20201029 18:18:56.694" endtime="20201029 18:18:56.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.690" endtime="20201029 18:18:56.698"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:56.702" endtime="20201029 18:18:56.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.700" endtime="20201029 18:18:56.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.699" endtime="20201029 18:18:56.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.338" endtime="20201029 18:18:56.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.338" endtime="20201029 18:18:56.722"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.731" endtime="20201029 18:18:56.747"></status>
</kw>
<msg timestamp="20201029 18:18:56.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.730" endtime="20201029 18:18:56.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:56.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:56.748" endtime="20201029 18:18:56.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.751" endtime="20201029 18:18:56.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.727" endtime="20201029 18:18:56.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.725" endtime="20201029 18:18:56.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:56.760" endtime="20201029 18:18:57.046"></status>
</kw>
<msg timestamp="20201029 18:18:57.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019793764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:56.758" endtime="20201029 18:18:57.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019793764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019824292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.050" endtime="20201029 18:18:57.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.059" endtime="20201029 18:18:57.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.755" endtime="20201029 18:18:57.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.754" endtime="20201029 18:18:57.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:57.065" level="INFO">${RESULT} = [{'diff': 3.052800000000189e-05}, {'diff': 3.0444000000000998e-05}, {'diff': 3.0485999999999708e-05}, {'diff': 3.0374999999999153e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0430000000001428e-0...</msg>
<status status="PASS" starttime="20201029 18:18:57.062" endtime="20201029 18:18:57.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:57.070" level="INFO">${ACCURACY} = {'diff': [3.052800000000189e-05, 3.0444000000000998e-05, 3.0485999999999708e-05, 3.0374999999999153e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.0472000000000138e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:57.066" endtime="20201029 18:18:57.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.075" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 18:18:57.074" endtime="20201029 18:18:57.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.077" level="INFO">VALUE: [3.052800000000189e-05, 3.0444000000000998e-05, 3.0485999999999708e-05, 3.0374999999999153e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.0472000000000138e-05, 3.0430000000001428e-05, 3.041599999999839e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.0402999999998293e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.0417000000001332e-05, 3.042999999999796e-05, 3.0458000000000568e-05, 3.0402999999998293e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0416999999997862e-05, 3.0430999999997432e-05, 3.044399999999753e-05, 3.0430000000001428e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.040199999999882e-05, 3.0402999999998293e-05, 3.0444000000000998e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.041599999999839e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0485999999999708e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0374999999999153e-05, 3.0416999999997862e-05, 3.0444000000000998e-05, 3.0374999999999153e-05, 3.0430000000001428e-05, 3.042999999999796e-05]</msg>
<status status="PASS" starttime="20201029 18:18:57.076" endtime="20201029 18:18:57.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.071" endtime="20201029 18:18:57.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:57.082" endtime="20201029 18:18:57.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.080" endtime="20201029 18:18:57.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.079" endtime="20201029 18:18:57.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.723" endtime="20201029 18:18:57.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:56.723" endtime="20201029 18:18:57.103"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.111" endtime="20201029 18:18:57.129"></status>
</kw>
<msg timestamp="20201029 18:18:57.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.110" endtime="20201029 18:18:57.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.131" endtime="20201029 18:18:57.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.133" endtime="20201029 18:18:57.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.107" endtime="20201029 18:18:57.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.105" endtime="20201029 18:18:57.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.142" endtime="20201029 18:18:57.450"></status>
</kw>
<msg timestamp="20201029 18:18:57.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019678167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.140" endtime="20201029 18:18:57.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019678167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.455" endtime="20201029 18:18:57.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.464" endtime="20201029 18:18:57.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.138" endtime="20201029 18:18:57.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.136" endtime="20201029 18:18:57.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:57.471" level="INFO">${RESULT} = [{'diff': 3.0458000000000568e-05}, {'diff': 3.0416000000001858e-05}, {'diff': 3.0430000000001428e-05}, {'diff': 3.0430999999997432e-05}, {'diff': 3.0403000000001762e-05}, {'diff': 3.0417000000001332e-...</msg>
<status status="PASS" starttime="20201029 18:18:57.468" endtime="20201029 18:18:57.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:57.475" level="INFO">${ACCURACY} = {'diff': [3.0458000000000568e-05, 3.0416000000001858e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.0403000000001762e-05, 3.0417000000001332e-05, 3.041599999999839e-05, 3.0403000000001762e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:57.472" endtime="20201029 18:18:57.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.480" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 18:18:57.479" endtime="20201029 18:18:57.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.482" level="INFO">VALUE: [3.0458000000000568e-05, 3.0416000000001858e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.0403000000001762e-05, 3.0417000000001332e-05, 3.041599999999839e-05, 3.0403000000001762e-05, 3.0485999999999708e-05, 3.0458000000000568e-05, 3.0430999999997432e-05, 3.042999999999796e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.044500000000047e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0416000000001858e-05, 3.0416999999997862e-05, 3.0416000000001858e-05, 3.0444000000000998e-05, 3.044500000000047e-05, 3.0416999999997862e-05, 3.042999999999796e-05, 3.045900000000004e-05, 3.0430000000001428e-05, 3.041599999999839e-05, 3.0402999999998293e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0417000000001332e-05, 3.0416999999997862e-05, 3.0417000000001332e-05, 3.0416999999997862e-05, 3.0402000000002288e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0388999999998723e-05, 3.0402999999998293e-05, 3.0416999999997862e-05, 3.0499999999999278e-05, 3.0430000000001428e-05, 3.0430999999997432e-05, 3.0416999999997862e-05, 3.0472000000000138e-05, 3.0417000000001332e-05]</msg>
<status status="PASS" starttime="20201029 18:18:57.481" endtime="20201029 18:18:57.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.476" endtime="20201029 18:18:57.484"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:57.488" endtime="20201029 18:18:57.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.486" endtime="20201029 18:18:57.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.485" endtime="20201029 18:18:57.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.104" endtime="20201029 18:18:57.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.103" endtime="20201029 18:18:57.508"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.517" endtime="20201029 18:18:57.536"></status>
</kw>
<msg timestamp="20201029 18:18:57.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.516" endtime="20201029 18:18:57.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.537" endtime="20201029 18:18:57.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.540" endtime="20201029 18:18:57.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.513" endtime="20201029 18:18:57.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.511" endtime="20201029 18:18:57.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.549" endtime="20201029 18:18:57.835"></status>
</kw>
<msg timestamp="20201029 18:18:57.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02102875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021059222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:57.548" endtime="20201029 18:18:57.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02102875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021059222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:18:57.839" endtime="20201029 18:18:57.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.848" endtime="20201029 18:18:57.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.545" endtime="20201029 18:18:57.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.543" endtime="20201029 18:18:57.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:57.855" level="INFO">${RESULT} = [{'diff': 3.0472000000000138e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0430000000001428e-05}, {'diff': 3.0417000000001332e-05}, {'diff': 3.042999999999796e-0...</msg>
<status status="PASS" starttime="20201029 18:18:57.851" endtime="20201029 18:18:57.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:57.859" level="INFO">${ACCURACY} = {'diff': [3.0472000000000138e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.042999999999796e-05, 3.0416999999997862e-05, 3.0431000000000902e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:57.856" endtime="20201029 18:18:57.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.863" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 18:18:57.862" endtime="20201029 18:18:57.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.866" level="INFO">VALUE: [3.0472000000000138e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.042999999999796e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0402999999998293e-05, 3.041599999999839e-05, 3.0347000000000013e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0403000000001762e-05, 3.0472000000000138e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0472000000000138e-05, 3.0375000000002622e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0444999999997002e-05, 3.042999999999796e-05, 3.0430999999997432e-05, 3.0374999999999153e-05, 3.0417000000001332e-05, 3.0402000000002288e-05, 3.044399999999753e-05, 3.0458000000000568e-05, 3.0430000000001428e-05, 3.042999999999796e-05, 3.0444999999997002e-05, 3.0403000000001762e-05, 3.0472000000000138e-05, 3.0388999999998723e-05, 3.0444000000000998e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0458000000000568e-05, 3.0430999999997432e-05, 3.0347000000000013e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0485999999999708e-05, 3.0417000000001332e-05, 3.044500000000047e-05, 3.0374999999999153e-05, 3.042999999999796e-05]</msg>
<status status="PASS" starttime="20201029 18:18:57.865" endtime="20201029 18:18:57.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.860" endtime="20201029 18:18:57.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:57.872" endtime="20201029 18:18:57.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.870" endtime="20201029 18:18:57.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.869" endtime="20201029 18:18:57.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.509" endtime="20201029 18:18:57.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.509" endtime="20201029 18:18:57.893"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.902" endtime="20201029 18:18:57.920"></status>
</kw>
<msg timestamp="20201029 18:18:57.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.900" endtime="20201029 18:18:57.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:57.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:57.921" endtime="20201029 18:18:57.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.924" endtime="20201029 18:18:57.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.897" endtime="20201029 18:18:57.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.895" endtime="20201029 18:18:57.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:57.933" endtime="20201029 18:18:58.220"></status>
</kw>
<msg timestamp="20201029 18:18:58.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020037514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020068028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:57.932" endtime="20201029 18:18:58.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020037514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020068028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.224" endtime="20201029 18:18:58.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.233" endtime="20201029 18:18:58.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.929" endtime="20201029 18:18:58.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.927" endtime="20201029 18:18:58.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:58.239" level="INFO">${RESULT} = [{'diff': 3.0514000000002317e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.042999999999796e-05}, {'diff': 3.044500000000047e-05}, {'diff': 3.0444000000000998e-05}, {'diff': 3.042999999999796e-05}...</msg>
<status status="PASS" starttime="20201029 18:18:58.236" endtime="20201029 18:18:58.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:58.247" level="INFO">${ACCURACY} = {'diff': [3.0514000000002317e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.044500000000047e-05, 3.0444000000000998e-05, 3.042999999999796e-05, 3.0430999999997432e-05, 3.0430000000001428e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:18:58.240" endtime="20201029 18:18:58.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.251" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 18:18:58.250" endtime="20201029 18:18:58.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.254" level="INFO">VALUE: [3.0514000000002317e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.044500000000047e-05, 3.0444000000000998e-05, 3.042999999999796e-05, 3.0430999999997432e-05, 3.0430000000001428e-05, 3.0444999999997002e-05, 3.048699999999918e-05, 3.0431000000000902e-05, 3.0430999999997432e-05, 3.0388999999998723e-05, 3.04579999999971e-05, 3.0430000000001428e-05, 3.0403000000001762e-05, 3.0444000000000998e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.045900000000004e-05, 3.044500000000047e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0402999999998293e-05, 3.0430000000001428e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.0472000000000138e-05, 3.0389000000002192e-05, 3.0431000000000902e-05, 3.0402000000002288e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.0374999999999153e-05, 3.045900000000004e-05, 3.0431000000000902e-05, 3.044399999999753e-05, 3.044500000000047e-05, 3.0347000000000013e-05, 3.0389000000002192e-05, 3.0430000000001428e-05, 3.042999999999796e-05]</msg>
<status status="PASS" starttime="20201029 18:18:58.253" endtime="20201029 18:18:58.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.248" endtime="20201029 18:18:58.255"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:58.259" endtime="20201029 18:18:58.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.258" endtime="20201029 18:18:58.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.256" endtime="20201029 18:18:58.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.894" endtime="20201029 18:18:58.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:57.893" endtime="20201029 18:18:58.280"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.289" endtime="20201029 18:18:58.306"></status>
</kw>
<msg timestamp="20201029 18:18:58.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.287" endtime="20201029 18:18:58.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.308" endtime="20201029 18:18:58.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.310" endtime="20201029 18:18:58.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.285" endtime="20201029 18:18:58.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.282" endtime="20201029 18:18:58.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.319" endtime="20201029 18:18:58.605"></status>
</kw>
<msg timestamp="20201029 18:18:58.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019929417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019959931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.318" endtime="20201029 18:18:58.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019929417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019959931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.609" endtime="20201029 18:18:58.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.618" endtime="20201029 18:18:58.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.315" endtime="20201029 18:18:58.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.313" endtime="20201029 18:18:58.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:58.627" level="INFO">${RESULT} = [{'diff': 3.0513999999998848e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0430999999997432e-05}, {'diff': 3.0458000000000568e-05}, {'diff': 3.042999999999796e-05}, {'diff': 3.0416000000001858e-0...</msg>
<status status="PASS" starttime="20201029 18:18:58.621" endtime="20201029 18:18:58.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:58.633" level="INFO">${ACCURACY} = {'diff': [3.0513999999998848e-05, 3.0431000000000902e-05, 3.0430999999997432e-05, 3.0458000000000568e-05, 3.042999999999796e-05, 3.0416000000001858e-05, 3.0444000000000998e-05, 3.0416999999997862e-05,...</msg>
<status status="PASS" starttime="20201029 18:18:58.628" endtime="20201029 18:18:58.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.639" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 18:18:58.638" endtime="20201029 18:18:58.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.643" level="INFO">VALUE: [3.0513999999998848e-05, 3.0431000000000902e-05, 3.0430999999997432e-05, 3.0458000000000568e-05, 3.042999999999796e-05, 3.0416000000001858e-05, 3.0444000000000998e-05, 3.0416999999997862e-05, 3.0458000000000568e-05, 3.0430999999997432e-05, 3.0430999999997432e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0374999999999153e-05, 3.042999999999796e-05, 3.044500000000047e-05, 3.0416000000001858e-05, 3.0347999999999486e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.0430999999997432e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.041599999999839e-05, 3.0430999999997432e-05, 3.0403000000001762e-05, 3.0472000000000138e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.042999999999796e-05, 3.0444000000000998e-05, 3.044500000000047e-05, 3.0416000000001858e-05, 3.0458000000000568e-05, 3.044500000000047e-05, 3.0416999999997862e-05, 3.0417000000001332e-05, 3.0402999999998293e-05, 3.0374999999999153e-05, 3.0444000000000998e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0360999999999583e-05, 3.0360999999999583e-05, 3.042999999999796e-05, 3.0416999999997862e-05, 3.0430000000001428e-05, 3.041599999999839e-05]</msg>
<status status="PASS" starttime="20201029 18:18:58.640" endtime="20201029 18:18:58.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.635" endtime="20201029 18:18:58.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:58.651" endtime="20201029 18:18:58.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.648" endtime="20201029 18:18:58.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.647" endtime="20201029 18:18:58.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.281" endtime="20201029 18:18:58.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.280" endtime="20201029 18:18:58.672"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.681" endtime="20201029 18:18:58.700"></status>
</kw>
<msg timestamp="20201029 18:18:58.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.680" endtime="20201029 18:18:58.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:58.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:58.702" endtime="20201029 18:18:58.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.704" endtime="20201029 18:18:58.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.677" endtime="20201029 18:18:58.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.675" endtime="20201029 18:18:58.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:58.714" endtime="20201029 18:18:59.000"></status>
</kw>
<msg timestamp="20201029 18:18:59.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021280625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021311153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:58.712" endtime="20201029 18:18:59.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021280625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021311153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.004" endtime="20201029 18:18:59.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.013" endtime="20201029 18:18:59.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.709" endtime="20201029 18:18:59.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.708" endtime="20201029 18:18:59.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:59.019" level="INFO">${RESULT} = [{'diff': 3.052799999999842e-05}, {'diff': 3.0513999999998848e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0416999999997862e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0431000000000902e-0...</msg>
<status status="PASS" starttime="20201029 18:18:59.016" endtime="20201029 18:18:59.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:59.024" level="INFO">${ACCURACY} = {'diff': [3.052799999999842e-05, 3.0513999999998848e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0360999999999583e-05, 3.041599999999839e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:59.020" endtime="20201029 18:18:59.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.028" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 18:18:59.027" endtime="20201029 18:18:59.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.031" level="INFO">VALUE: [3.052799999999842e-05, 3.0513999999998848e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0360999999999583e-05, 3.041599999999839e-05, 3.0416000000001858e-05, 3.0416999999997862e-05, 3.0417000000001332e-05, 3.0444000000000998e-05, 3.0402000000002288e-05, 3.0417000000001332e-05, 3.041599999999839e-05, 3.0403000000001762e-05, 3.0417000000001332e-05, 3.044500000000047e-05, 3.042999999999796e-05, 3.0485999999999708e-05, 3.0416999999997862e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0444000000000998e-05, 3.044500000000047e-05, 3.0430000000001428e-05, 3.0403000000001762e-05, 3.0416999999997862e-05, 3.0430000000001428e-05, 3.0402999999998293e-05, 3.0444000000000998e-05, 3.044500000000047e-05, 3.041599999999839e-05, 3.0402999999998293e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.0416999999997862e-05, 3.0472000000000138e-05, 3.0416000000001858e-05, 3.0416000000001858e-05, 3.0430000000001428e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0430999999997432e-05, 3.041599999999839e-05, 3.0416000000001858e-05, 3.0444000000000998e-05]</msg>
<status status="PASS" starttime="20201029 18:18:59.029" endtime="20201029 18:18:59.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.024" endtime="20201029 18:18:59.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:59.037" endtime="20201029 18:18:59.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.035" endtime="20201029 18:18:59.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.034" endtime="20201029 18:18:59.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.673" endtime="20201029 18:18:59.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:58.673" endtime="20201029 18:18:59.057"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.066" endtime="20201029 18:18:59.083"></status>
</kw>
<msg timestamp="20201029 18:18:59.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.065" endtime="20201029 18:18:59.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.085" endtime="20201029 18:18:59.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.087" endtime="20201029 18:18:59.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.062" endtime="20201029 18:18:59.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.060" endtime="20201029 18:18:59.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.097" endtime="20201029 18:18:59.384"></status>
</kw>
<msg timestamp="20201029 18:18:59.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020090875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020121403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.095" endtime="20201029 18:18:59.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020090875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020121403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.388" endtime="20201029 18:18:59.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.397" endtime="20201029 18:18:59.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.092" endtime="20201029 18:18:59.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.091" endtime="20201029 18:18:59.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:59.403" level="INFO">${RESULT} = [{'diff': 3.052799999999842e-05}, {'diff': 3.0430999999997432e-05}, {'diff': 3.0402999999998293e-05}, {'diff': 3.0417000000001332e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0417000000001332e-0...</msg>
<status status="PASS" starttime="20201029 18:18:59.400" endtime="20201029 18:18:59.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:59.409" level="INFO">${ACCURACY} = {'diff': [3.052799999999842e-05, 3.0430999999997432e-05, 3.0402999999998293e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.045900000000004e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:59.404" endtime="20201029 18:18:59.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.413" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 18:18:59.412" endtime="20201029 18:18:59.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.416" level="INFO">VALUE: [3.052799999999842e-05, 3.0430999999997432e-05, 3.0402999999998293e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.045900000000004e-05, 3.0430000000001428e-05, 3.0388999999998723e-05, 3.0431000000000902e-05, 3.0403000000001762e-05, 3.0431000000000902e-05, 3.0389000000002192e-05, 3.0430000000001428e-05, 3.0402999999998293e-05, 3.0417000000001332e-05, 3.041599999999839e-05, 3.0388999999998723e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.0360999999999583e-05, 3.04579999999971e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0388999999998723e-05, 3.0417000000001332e-05, 3.041599999999839e-05, 3.0430000000001428e-05, 3.0403000000001762e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.0430999999997432e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0403000000001762e-05, 3.0431000000000902e-05, 3.0416999999997862e-05, 3.041599999999839e-05, 3.0416000000001858e-05, 3.0430000000001428e-05, 3.041599999999839e-05, 3.0431000000000902e-05, 3.0444000000000998e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0472000000000138e-05, 3.0444999999997002e-05, 3.0417000000001332e-05]</msg>
<status status="PASS" starttime="20201029 18:18:59.414" endtime="20201029 18:18:59.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.410" endtime="20201029 18:18:59.417"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:59.421" endtime="20201029 18:18:59.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.419" endtime="20201029 18:18:59.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.418" endtime="20201029 18:18:59.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.058" endtime="20201029 18:18:59.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.058" endtime="20201029 18:18:59.442"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.451" endtime="20201029 18:18:59.468"></status>
</kw>
<msg timestamp="20201029 18:18:59.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.449" endtime="20201029 18:18:59.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.469" endtime="20201029 18:18:59.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.472" endtime="20201029 18:18:59.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.446" endtime="20201029 18:18:59.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.444" endtime="20201029 18:18:59.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.481" endtime="20201029 18:18:59.774"></status>
</kw>
<msg timestamp="20201029 18:18:59.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020134431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020164958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.479" endtime="20201029 18:18:59.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020134431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020164958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.779" endtime="20201029 18:18:59.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.787" endtime="20201029 18:18:59.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.477" endtime="20201029 18:18:59.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.475" endtime="20201029 18:18:59.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:18:59.794" level="INFO">${RESULT} = [{'diff': 3.0526999999998944e-05}, {'diff': 3.0444000000000998e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.042999999999796e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0417000000001332e-0...</msg>
<status status="PASS" starttime="20201029 18:18:59.790" endtime="20201029 18:18:59.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:18:59.798" level="INFO">${ACCURACY} = {'diff': [3.0526999999998944e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0430999999997432e-05, 3.045900000000004e-05, ...</msg>
<status status="PASS" starttime="20201029 18:18:59.795" endtime="20201029 18:18:59.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.803" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 18:18:59.802" endtime="20201029 18:18:59.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.805" level="INFO">VALUE: [3.0526999999998944e-05, 3.0444000000000998e-05, 3.0431000000000902e-05, 3.042999999999796e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0430999999997432e-05, 3.045900000000004e-05, 3.0388999999998723e-05, 3.0417000000001332e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.0431000000000902e-05, 3.045900000000004e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.041599999999839e-05, 3.0403000000001762e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0416999999997862e-05, 3.0416999999997862e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0416000000001858e-05, 3.044500000000047e-05, 3.0430000000001428e-05, 3.041599999999839e-05, 3.040199999999882e-05, 3.0430000000001428e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0417000000001332e-05, 3.0374999999999153e-05, 3.0416999999997862e-05, 3.0416999999997862e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0417000000001332e-05, 3.0431000000000902e-05, 3.0403000000001762e-05, 3.0417000000001332e-05, 3.0430999999997432e-05, 3.040199999999882e-05, 3.044399999999753e-05, 3.048700000000265e-05]</msg>
<status status="PASS" starttime="20201029 18:18:59.804" endtime="20201029 18:18:59.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.799" endtime="20201029 18:18:59.807"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:18:59.810" endtime="20201029 18:18:59.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.809" endtime="20201029 18:18:59.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.808" endtime="20201029 18:18:59.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.443" endtime="20201029 18:18:59.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.442" endtime="20201029 18:18:59.831"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.840" endtime="20201029 18:18:59.859"></status>
</kw>
<msg timestamp="20201029 18:18:59.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.839" endtime="20201029 18:18:59.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:18:59.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:18:59.860" endtime="20201029 18:18:59.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.863" endtime="20201029 18:18:59.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.836" endtime="20201029 18:18:59.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.834" endtime="20201029 18:18:59.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:18:59.872" endtime="20201029 18:19:00.160"></status>
</kw>
<msg timestamp="20201029 18:19:00.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021154389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021184931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:18:59.871" endtime="20201029 18:19:00.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021154389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021184931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.164" endtime="20201029 18:19:00.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.173" endtime="20201029 18:19:00.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.868" endtime="20201029 18:19:00.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.866" endtime="20201029 18:19:00.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:00.179" level="INFO">${RESULT} = [{'diff': 3.054200000000146e-05}, {'diff': 3.082000000000085e-05}, {'diff': 3.0458000000000568e-05}, {'diff': 3.0472000000000138e-05}, {'diff': 3.0458000000000568e-05}, {'diff': 3.086100000000008e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:00.176" endtime="20201029 18:19:00.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:00.184" level="INFO">${ACCURACY} = {'diff': [3.054200000000146e-05, 3.082000000000085e-05, 3.0458000000000568e-05, 3.0472000000000138e-05, 3.0458000000000568e-05, 3.086100000000008e-05, 3.044399999999753e-05, 3.0417000000001332e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:19:00.180" endtime="20201029 18:19:00.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.188" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 18:19:00.187" endtime="20201029 18:19:00.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.191" level="INFO">VALUE: [3.054200000000146e-05, 3.082000000000085e-05, 3.0458000000000568e-05, 3.0472000000000138e-05, 3.0458000000000568e-05, 3.086100000000008e-05, 3.044399999999753e-05, 3.0417000000001332e-05, 3.0458000000000568e-05, 3.145800000000157e-05, 3.0526999999998944e-05, 3.079199999999824e-05, 3.0472000000000138e-05, 3.147200000000114e-05, 3.0430000000001428e-05, 3.0444000000000998e-05, 3.0472000000000138e-05, 3.0416999999997862e-05, 3.0444000000000998e-05, 3.147200000000114e-05, 3.0485999999999708e-05, 3.0485999999999708e-05, 3.0804999999998334e-05, 3.0431000000000902e-05, 3.0499999999999278e-05, 3.145899999999757e-05, 3.044500000000047e-05, 3.044399999999753e-05, 3.083300000000094e-05, 3.044399999999753e-05, 3.087499999999965e-05, 3.047299999999961e-05, 3.0430000000001428e-05, 3.082000000000085e-05, 3.047299999999961e-05, 3.0458000000000568e-05, 3.083300000000094e-05, 3.081999999999738e-05, 3.0444000000000998e-05, 3.0402999999998293e-05, 3.044500000000047e-05, 3.0417000000001332e-05, 3.044500000000047e-05, 3.079200000000171e-05, 3.0458000000000568e-05, 3.041599999999839e-05, 3.0847999999999987e-05, 3.0402999999998293e-05, 3.042999999999796e-05, 3.0458000000000568e-05]</msg>
<status status="PASS" starttime="20201029 18:19:00.189" endtime="20201029 18:19:00.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.184" endtime="20201029 18:19:00.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:00.197" endtime="20201029 18:19:00.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.195" endtime="20201029 18:19:00.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.194" endtime="20201029 18:19:00.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.832" endtime="20201029 18:19:00.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:59.831" endtime="20201029 18:19:00.217"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.226" endtime="20201029 18:19:00.244"></status>
</kw>
<msg timestamp="20201029 18:19:00.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.225" endtime="20201029 18:19:00.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.246" endtime="20201029 18:19:00.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.248" endtime="20201029 18:19:00.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.222" endtime="20201029 18:19:00.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.220" endtime="20201029 18:19:00.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.258" endtime="20201029 18:19:00.544"></status>
</kw>
<msg timestamp="20201029 18:19:00.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020077097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020110833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.256" endtime="20201029 18:19:00.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020077097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020110833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.548" endtime="20201029 18:19:00.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.557" endtime="20201029 18:19:00.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.253" endtime="20201029 18:19:00.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.252" endtime="20201029 18:19:00.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:00.563" level="INFO">${RESULT} = [{'diff': 3.373600000000296e-05}, {'diff': 3.3624999999998934e-05}, {'diff': 3.3596999999999794e-05}, {'diff': 3.3610999999999364e-05}, {'diff': 3.3569000000000654e-05}, {'diff': 3.361199999999884e-05...</msg>
<status status="PASS" starttime="20201029 18:19:00.560" endtime="20201029 18:19:00.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:00.569" level="INFO">${ACCURACY} = {'diff': [3.373600000000296e-05, 3.3624999999998934e-05, 3.3596999999999794e-05, 3.3610999999999364e-05, 3.3569000000000654e-05, 3.361199999999884e-05, 3.3583000000000224e-05, 3.0431000000000902e-05, ...</msg>
<status status="PASS" starttime="20201029 18:19:00.564" endtime="20201029 18:19:00.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.573" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 18:19:00.572" endtime="20201029 18:19:00.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.576" level="INFO">VALUE: [3.373600000000296e-05, 3.3624999999998934e-05, 3.3596999999999794e-05, 3.3610999999999364e-05, 3.3569000000000654e-05, 3.361199999999884e-05, 3.3583000000000224e-05, 3.0431000000000902e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.0431000000000902e-05, 3.359799999999927e-05, 3.0458000000000568e-05, 3.3583000000000224e-05, 3.0540999999998514e-05, 3.3610999999999364e-05, 3.3583000000000224e-05, 3.0458000000000568e-05, 3.3596999999999794e-05, 3.359799999999927e-05, 3.3569000000000654e-05, 3.045900000000004e-05, 3.0403000000001762e-05, 3.35839999999997e-05, 3.359799999999927e-05, 3.3596999999999794e-05, 3.045900000000004e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.359800000000274e-05, 3.3596999999999794e-05, 3.3638999999998503e-05, 3.3583000000000224e-05, 3.0444000000000998e-05, 3.355600000000056e-05, 3.0431000000000902e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.0458000000000568e-05, 3.3583000000000224e-05, 3.35839999999997e-05, 3.359799999999927e-05, 3.3596999999999794e-05, 3.35839999999997e-05, 3.359800000000274e-05, 3.363799999999903e-05, 3.35839999999997e-05, 3.0472000000000138e-05, 3.3583000000000224e-05]</msg>
<status status="PASS" starttime="20201029 18:19:00.574" endtime="20201029 18:19:00.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.569" endtime="20201029 18:19:00.577"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:00.581" endtime="20201029 18:19:00.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.579" endtime="20201029 18:19:00.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.578" endtime="20201029 18:19:00.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.218" endtime="20201029 18:19:00.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.218" endtime="20201029 18:19:00.602"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.611" endtime="20201029 18:19:00.628"></status>
</kw>
<msg timestamp="20201029 18:19:00.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.609" endtime="20201029 18:19:00.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.630" endtime="20201029 18:19:00.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.632" endtime="20201029 18:19:00.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.606" endtime="20201029 18:19:00.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.604" endtime="20201029 18:19:00.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.642" endtime="20201029 18:19:00.929"></status>
</kw>
<msg timestamp="20201029 18:19:00.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020107861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020141542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.640" endtime="20201029 18:19:00.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020107861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020141542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:00.934" endtime="20201029 18:19:00.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.942" endtime="20201029 18:19:00.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.637" endtime="20201029 18:19:00.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.636" endtime="20201029 18:19:00.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:00.949" level="INFO">${RESULT} = [{'diff': 3.368099999999721e-05}, {'diff': 3.3596999999999794e-05}, {'diff': 3.361100000000283e-05}, {'diff': 3.3610999999999364e-05}, {'diff': 3.359700000000326e-05}, {'diff': 3.3583000000000224e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:00.946" endtime="20201029 18:19:00.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:00.953" level="INFO">${ACCURACY} = {'diff': [3.368099999999721e-05, 3.3596999999999794e-05, 3.361100000000283e-05, 3.3610999999999364e-05, 3.359700000000326e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.357000000000013e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:19:00.950" endtime="20201029 18:19:00.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.958" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 18:19:00.957" endtime="20201029 18:19:00.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:00.960" level="INFO">VALUE: [3.368099999999721e-05, 3.3596999999999794e-05, 3.361100000000283e-05, 3.3610999999999364e-05, 3.359700000000326e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.357000000000013e-05, 3.3596999999999794e-05, 3.361199999999884e-05, 3.3583000000000224e-05, 3.361199999999884e-05, 3.3596999999999794e-05, 3.35839999999997e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.359799999999927e-05, 3.363900000000197e-05, 3.35839999999997e-05, 3.3569000000000654e-05, 3.357000000000013e-05, 3.3583000000000224e-05, 3.3624999999998934e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.3610999999999364e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.357000000000013e-05, 3.3610999999999364e-05, 3.3582999999996754e-05, 3.363900000000197e-05, 3.35839999999997e-05, 3.365299999999807e-05, 3.35839999999997e-05, 3.35839999999997e-05, 3.3610999999999364e-05, 3.354200000000099e-05, 3.349999999999881e-05, 3.3596999999999794e-05, 3.3638999999998503e-05, 3.3582999999996754e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.354200000000099e-05, 3.3569000000000654e-05, 3.361100000000283e-05]</msg>
<status status="PASS" starttime="20201029 18:19:00.959" endtime="20201029 18:19:00.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.954" endtime="20201029 18:19:00.962"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:00.966" endtime="20201029 18:19:00.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.964" endtime="20201029 18:19:00.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.963" endtime="20201029 18:19:00.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.603" endtime="20201029 18:19:00.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.602" endtime="20201029 18:19:00.986"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:00.996" endtime="20201029 18:19:01.017"></status>
</kw>
<msg timestamp="20201029 18:19:01.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:00.994" endtime="20201029 18:19:01.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.020" endtime="20201029 18:19:01.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.024" endtime="20201029 18:19:01.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.991" endtime="20201029 18:19:01.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.989" endtime="20201029 18:19:01.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.036" endtime="20201029 18:19:01.323"></status>
</kw>
<msg timestamp="20201029 18:19:01.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021345625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021379375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.034" endtime="20201029 18:19:01.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021345625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021379375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.328" endtime="20201029 18:19:01.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.336" endtime="20201029 18:19:01.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.031" endtime="20201029 18:19:01.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.029" endtime="20201029 18:19:01.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:01.343" level="INFO">${RESULT} = [{'diff': 3.374999999999906e-05}, {'diff': 3.3610999999999364e-05}, {'diff': 3.361100000000283e-05}, {'diff': 3.366600000000164e-05}, {'diff': 3.35839999999997e-05}, {'diff': 3.3541000000001514e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:01.339" endtime="20201029 18:19:01.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:01.347" level="INFO">${ACCURACY} = {'diff': [3.374999999999906e-05, 3.3610999999999364e-05, 3.361100000000283e-05, 3.366600000000164e-05, 3.35839999999997e-05, 3.3541000000001514e-05, 3.35839999999997e-05, 3.3583000000000224e-05, 3.359...</msg>
<status status="PASS" starttime="20201029 18:19:01.344" endtime="20201029 18:19:01.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.351" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 18:19:01.350" endtime="20201029 18:19:01.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.355" level="INFO">VALUE: [3.374999999999906e-05, 3.3610999999999364e-05, 3.361100000000283e-05, 3.366600000000164e-05, 3.35839999999997e-05, 3.3541000000001514e-05, 3.35839999999997e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.3610999999999364e-05, 3.359799999999927e-05, 3.3596999999999794e-05, 3.3610999999999364e-05, 3.35839999999997e-05, 3.357000000000013e-05, 3.3610999999999364e-05, 3.357000000000013e-05, 3.359799999999927e-05, 3.3596999999999794e-05, 3.361199999999884e-05, 3.3638999999998503e-05, 3.361199999999884e-05, 3.35839999999997e-05, 3.3610999999999364e-05, 3.357000000000013e-05, 3.359700000000326e-05, 3.36250000000024e-05, 3.3583000000000224e-05, 3.35839999999997e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.35839999999997e-05, 3.3624999999998934e-05, 3.3583000000000224e-05, 3.359800000000274e-05, 3.3555000000001084e-05, 3.35839999999997e-05, 3.3583000000000224e-05, 3.357000000000013e-05, 3.3596999999999794e-05, 3.359700000000326e-05, 3.3583000000000224e-05, 3.35839999999997e-05, 3.3596999999999794e-05, 3.35839999999997e-05]</msg>
<status status="PASS" starttime="20201029 18:19:01.352" endtime="20201029 18:19:01.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.348" endtime="20201029 18:19:01.356"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:01.360" endtime="20201029 18:19:01.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.358" endtime="20201029 18:19:01.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.357" endtime="20201029 18:19:01.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.987" endtime="20201029 18:19:01.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:00.987" endtime="20201029 18:19:01.380"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.389" endtime="20201029 18:19:01.405"></status>
</kw>
<msg timestamp="20201029 18:19:01.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.387" endtime="20201029 18:19:01.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.407" endtime="20201029 18:19:01.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.410" endtime="20201029 18:19:01.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.385" endtime="20201029 18:19:01.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.383" endtime="20201029 18:19:01.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.419" endtime="20201029 18:19:01.712"></status>
</kw>
<msg timestamp="20201029 18:19:01.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019578611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.417" endtime="20201029 18:19:01.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019578611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.721" endtime="20201029 18:19:01.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.739" endtime="20201029 18:19:01.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.414" endtime="20201029 18:19:01.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.413" endtime="20201029 18:19:01.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:01.753" level="INFO">${RESULT} = [{'diff': 3.374999999999906e-05}, {'diff': 3.3596999999999794e-05}, {'diff': 3.3569000000000654e-05}, {'diff': 3.357000000000013e-05}, {'diff': 3.3596999999999794e-05}, {'diff': 3.3583000000000224e-05...</msg>
<status status="PASS" starttime="20201029 18:19:01.746" endtime="20201029 18:19:01.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:01.769" level="INFO">${ACCURACY} = {'diff': [3.374999999999906e-05, 3.3596999999999794e-05, 3.3569000000000654e-05, 3.357000000000013e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.359799999999927e-05, 3.3583000000000224e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:19:01.755" endtime="20201029 18:19:01.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.777" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 18:19:01.776" endtime="20201029 18:19:01.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.780" level="INFO">VALUE: [3.374999999999906e-05, 3.3596999999999794e-05, 3.3569000000000654e-05, 3.357000000000013e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.359799999999927e-05, 3.3583000000000224e-05, 3.365300000000154e-05, 3.35839999999997e-05, 3.35839999999997e-05, 3.3583000000000224e-05, 3.357000000000013e-05, 3.365300000000154e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.3541000000001514e-05, 3.359800000000274e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.35839999999997e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.3638999999998503e-05, 3.359799999999927e-05, 3.3596999999999794e-05, 3.361100000000283e-05, 3.3569000000000654e-05, 3.361199999999884e-05, 3.3555000000001084e-05, 3.363900000000197e-05, 3.356999999999666e-05, 3.359799999999927e-05, 3.36250000000024e-05, 3.3583000000000224e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.35839999999997e-05, 3.3610999999999364e-05, 3.359799999999927e-05, 3.3583000000000224e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.351400000000185e-05, 3.3596999999999794e-05, 3.3624999999998934e-05, 3.359700000000326e-05, 3.354200000000099e-05, 3.3610999999999364e-05]</msg>
<status status="PASS" starttime="20201029 18:19:01.778" endtime="20201029 18:19:01.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.770" endtime="20201029 18:19:01.781"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:01.784" endtime="20201029 18:19:01.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.783" endtime="20201029 18:19:01.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.782" endtime="20201029 18:19:01.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.381" endtime="20201029 18:19:01.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.381" endtime="20201029 18:19:01.805"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.814" endtime="20201029 18:19:01.832"></status>
</kw>
<msg timestamp="20201029 18:19:01.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.812" endtime="20201029 18:19:01.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:01.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:01.833" endtime="20201029 18:19:01.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.836" endtime="20201029 18:19:01.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.810" endtime="20201029 18:19:01.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.808" endtime="20201029 18:19:01.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:01.844" endtime="20201029 18:19:02.180"></status>
</kw>
<msg timestamp="20201029 18:19:02.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019643014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019676722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:01.843" endtime="20201029 18:19:02.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019643014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019676722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.184" endtime="20201029 18:19:02.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.193" endtime="20201029 18:19:02.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.840" endtime="20201029 18:19:02.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.839" endtime="20201029 18:19:02.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:02.199" level="INFO">${RESULT} = [{'diff': 3.370800000000035e-05}, {'diff': 3.4541000000002514e-05}, {'diff': 3.363900000000197e-05}, {'diff': 3.3596999999999794e-05}, {'diff': 3.3596999999999794e-05}, {'diff': 3.4833000000001474e-05...</msg>
<status status="PASS" starttime="20201029 18:19:02.196" endtime="20201029 18:19:02.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:02.203" level="INFO">${ACCURACY} = {'diff': [3.370800000000035e-05, 3.4541000000002514e-05, 3.363900000000197e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.4833000000001474e-05, 3.405600000000106e-05, 3.5139000000000004e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:19:02.200" endtime="20201029 18:19:02.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.208" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 18:19:02.207" endtime="20201029 18:19:02.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.210" level="INFO">VALUE: [3.370800000000035e-05, 3.4541000000002514e-05, 3.363900000000197e-05, 3.3596999999999794e-05, 3.3596999999999794e-05, 3.4833000000001474e-05, 3.405600000000106e-05, 3.5139000000000004e-05, 3.4554999999998615e-05, 3.3624999999998934e-05, 3.44589999999971e-05, 3.402800000000192e-05, 3.391699999999789e-05, 3.35839999999997e-05, 3.526400000000013e-05, 3.3596999999999794e-05, 3.3583000000000224e-05, 3.4554999999998615e-05, 3.445900000000057e-05, 3.3596999999999794e-05, 3.4611000000000364e-05, 3.449999999999981e-05, 3.373599999999949e-05, 3.4583000000001224e-05, 3.454200000000199e-05, 3.401399999999888e-05, 3.46519999999996e-05, 3.366700000000111e-05, 3.3541000000001514e-05, 3.477800000000267e-05, 3.457000000000113e-05, 3.420800000000085e-05, 3.423599999999999e-05, 3.4540999999999045e-05, 3.4555000000002084e-05, 3.422200000000042e-05, 3.498600000000074e-05, 3.4847000000001044e-05, 3.4097000000000294e-05, 3.430599999999784e-05, 3.420800000000085e-05, 3.4597000000000794e-05, 3.422200000000042e-05, 3.420900000000032e-05, 3.361199999999884e-05, 3.4832999999998004e-05, 3.359799999999927e-05, 3.452799999999895e-05, 3.3624999999998934e-05, 3.4638999999999504e-05]</msg>
<status status="PASS" starttime="20201029 18:19:02.209" endtime="20201029 18:19:02.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.204" endtime="20201029 18:19:02.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:02.216" endtime="20201029 18:19:02.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.213" endtime="20201029 18:19:02.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.212" endtime="20201029 18:19:02.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.806" endtime="20201029 18:19:02.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:01.806" endtime="20201029 18:19:02.236"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.245" endtime="20201029 18:19:02.262"></status>
</kw>
<msg timestamp="20201029 18:19:02.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.243" endtime="20201029 18:19:02.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.263" endtime="20201029 18:19:02.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.266" endtime="20201029 18:19:02.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.241" endtime="20201029 18:19:02.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.239" endtime="20201029 18:19:02.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.274" endtime="20201029 18:19:02.560"></status>
</kw>
<msg timestamp="20201029 18:19:02.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019403903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019439208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.273" endtime="20201029 18:19:02.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019403903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019439208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.564" endtime="20201029 18:19:02.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.572" endtime="20201029 18:19:02.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.270" endtime="20201029 18:19:02.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.269" endtime="20201029 18:19:02.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:02.578" level="INFO">${RESULT} = [{'diff': 3.5304999999999365e-05}, {'diff': 3.5653000000000074e-05}, {'diff': 3.498600000000074e-05}, {'diff': 3.6055000000000115e-05}, {'diff': 3.600000000000131e-05}, {'diff': 3.5653000000000074e-05...</msg>
<status status="PASS" starttime="20201029 18:19:02.575" endtime="20201029 18:19:02.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:02.583" level="INFO">${ACCURACY} = {'diff': [3.5304999999999365e-05, 3.5653000000000074e-05, 3.498600000000074e-05, 3.6055000000000115e-05, 3.600000000000131e-05, 3.5653000000000074e-05, 3.4583000000001224e-05, 3.580599999999934e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:19:02.579" endtime="20201029 18:19:02.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.588" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 18:19:02.587" endtime="20201029 18:19:02.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.590" level="INFO">VALUE: [3.5304999999999365e-05, 3.5653000000000074e-05, 3.498600000000074e-05, 3.6055000000000115e-05, 3.600000000000131e-05, 3.5653000000000074e-05, 3.4583000000001224e-05, 3.580599999999934e-05, 3.516700000000261e-05, 3.570799999999888e-05, 3.479199999999877e-05, 3.498600000000074e-05, 3.568099999999921e-05, 3.49580000000016e-05, 3.5639000000000504e-05, 3.5152999999999573e-05, 3.557000000000213e-05, 3.549999999999734e-05, 3.4805000000002334e-05, 3.498600000000074e-05, 3.54580000000021e-05, 3.6610999999998894e-05, 3.5152999999999573e-05, 3.573699999999749e-05, 3.516599999999967e-05, 3.558399999999823e-05, 3.517999999999924e-05, 3.601400000000088e-05, 3.552799999999995e-05, 3.520800000000185e-05, 3.473600000000049e-05, 3.6027000000000975e-05, 3.652799999999748e-05, 3.5166999999999143e-05, 3.5597000000001794e-05, 3.5166999999999143e-05, 3.570799999999888e-05, 3.592999999999999e-05, 3.518099999999871e-05, 3.495900000000107e-05, 3.5346999999998074e-05, 3.492999999999899e-05, 3.5860999999998144e-05, 3.548600000000124e-05, 3.5527000000000475e-05, 3.5416999999999393e-05, 3.548700000000071e-05, 3.515300000000304e-05, 3.573600000000149e-05, 3.516700000000261e-05]</msg>
<status status="PASS" starttime="20201029 18:19:02.589" endtime="20201029 18:19:02.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.584" endtime="20201029 18:19:02.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:02.595" endtime="20201029 18:19:02.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.593" endtime="20201029 18:19:02.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.592" endtime="20201029 18:19:02.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.237" endtime="20201029 18:19:02.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.236" endtime="20201029 18:19:02.616"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.624" endtime="20201029 18:19:02.642"></status>
</kw>
<msg timestamp="20201029 18:19:02.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.623" endtime="20201029 18:19:02.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:02.644" endtime="20201029 18:19:02.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.646" endtime="20201029 18:19:02.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.620" endtime="20201029 18:19:02.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.618" endtime="20201029 18:19:02.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.655" endtime="20201029 18:19:02.941"></status>
</kw>
<msg timestamp="20201029 18:19:02.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019516444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019553153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.653" endtime="20201029 18:19:02.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019516444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019553153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:02.945" endtime="20201029 18:19:02.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:02.954" endtime="20201029 18:19:02.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.651" endtime="20201029 18:19:02.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.649" endtime="20201029 18:19:02.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:02.960" level="INFO">${RESULT} = [{'diff': 3.670899999999935e-05}, {'diff': 3.6596999999999325e-05}, {'diff': 3.650000000000181e-05}, {'diff': 3.6526999999998006e-05}, {'diff': 3.651400000000138e-05}, {'diff': 3.670799999999988e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:02.957" endtime="20201029 18:19:02.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:02.964" level="INFO">${ACCURACY} = {'diff': [3.670899999999935e-05, 3.6596999999999325e-05, 3.650000000000181e-05, 3.6526999999998006e-05, 3.651400000000138e-05, 3.670799999999988e-05, 3.672199999999945e-05, 3.6861000000002614e-05, 3.7...</msg>
<status status="PASS" starttime="20201029 18:19:02.961" endtime="20201029 18:19:02.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.969" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 18:19:02.968" endtime="20201029 18:19:02.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:02.971" level="INFO">VALUE: [3.670899999999935e-05, 3.6596999999999325e-05, 3.650000000000181e-05, 3.6526999999998006e-05, 3.651400000000138e-05, 3.670799999999988e-05, 3.672199999999945e-05, 3.6861000000002614e-05, 3.7055000000001115e-05, 3.6569000000000185e-05, 3.6833000000000005e-05, 3.658399999999923e-05, 3.654200000000052e-05, 3.652799999999748e-05, 3.6790999999997825e-05, 3.6791000000001295e-05, 3.6527000000001475e-05, 3.65979999999988e-05, 3.6667000000000644e-05, 3.655600000000009e-05, 3.656999999999966e-05, 3.6833000000000005e-05, 3.680600000000034e-05, 3.6583000000003224e-05, 3.698600000000274e-05, 3.6833000000000005e-05, 3.655600000000009e-05, 3.676400000000163e-05, 3.651399999999791e-05, 3.6540999999997575e-05, 3.6903000000001324e-05, 3.658399999999923e-05, 3.654200000000052e-05, 3.654199999999705e-05, 3.6541000000001045e-05, 3.654200000000052e-05, 3.6540999999997575e-05, 3.654200000000052e-05, 3.6819000000000435e-05, 3.6874999999998714e-05, 3.673600000000249e-05, 3.6874999999998714e-05, 3.674999999999859e-05, 3.658399999999923e-05, 3.6554999999997145e-05, 3.654200000000052e-05, 3.654200000000052e-05, 3.6610999999998894e-05, 3.7069000000000685e-05, 3.6555000000000615e-05]</msg>
<status status="PASS" starttime="20201029 18:19:02.970" endtime="20201029 18:19:02.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.965" endtime="20201029 18:19:02.972"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:02.976" endtime="20201029 18:19:02.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.974" endtime="20201029 18:19:02.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.973" endtime="20201029 18:19:02.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.617" endtime="20201029 18:19:02.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.616" endtime="20201029 18:19:02.997"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.005" endtime="20201029 18:19:03.024"></status>
</kw>
<msg timestamp="20201029 18:19:03.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.004" endtime="20201029 18:19:03.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.025" endtime="20201029 18:19:03.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.028" endtime="20201029 18:19:03.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.001" endtime="20201029 18:19:03.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.999" endtime="20201029 18:19:03.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.036" endtime="20201029 18:19:03.322"></status>
</kw>
<msg timestamp="20201029 18:19:03.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020772, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020809486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:03.035" endtime="20201029 18:19:03.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020772, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020809486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:03.326" endtime="20201029 18:19:03.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.334" endtime="20201029 18:19:03.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.032" endtime="20201029 18:19:03.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.031" endtime="20201029 18:19:03.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:03.341" level="INFO">${RESULT} = [{'diff': 3.748599999999977e-05}, {'diff': 3.799999999999984e-05}, {'diff': 3.7333000000000505e-05}, {'diff': 3.750000000000281e-05}, {'diff': 3.805599999999812e-05}, {'diff': 3.777799999999873e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:03.337" endtime="20201029 18:19:03.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:03.345" level="INFO">${ACCURACY} = {'diff': [3.748599999999977e-05, 3.799999999999984e-05, 3.7333000000000505e-05, 3.750000000000281e-05, 3.805599999999812e-05, 3.777799999999873e-05, 3.748599999999977e-05, 3.7180999999997244e-05, 3.74...</msg>
<status status="PASS" starttime="20201029 18:19:03.342" endtime="20201029 18:19:03.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.349" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 18:19:03.348" endtime="20201029 18:19:03.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.352" level="INFO">VALUE: [3.748599999999977e-05, 3.799999999999984e-05, 3.7333000000000505e-05, 3.750000000000281e-05, 3.805599999999812e-05, 3.777799999999873e-05, 3.748599999999977e-05, 3.7180999999997244e-05, 3.7445000000000533e-05, 3.774999999999959e-05, 3.7667000000001644e-05, 3.782000000000091e-05, 3.7624999999999464e-05, 3.7875000000003184e-05, 3.770900000000035e-05, 3.751399999999891e-05, 3.7597000000000325e-05, 3.7347000000000075e-05, 3.769400000000131e-05, 3.720800000000038e-05, 3.8041000000002545e-05, 3.747300000000314e-05, 3.8026999999999506e-05, 3.7874999999999714e-05, 3.7403000000001824e-05, 3.744400000000106e-05, 3.7624999999999464e-05, 3.732000000000041e-05, 3.742999999999802e-05, 3.8068999999998215e-05, 3.8055000000002115e-05, 3.7568999999997715e-05, 3.7583000000000755e-05, 3.770800000000088e-05, 3.7124999999998964e-05, 3.7638999999999034e-05, 3.801399999999941e-05, 3.7417000000001394e-05, 3.7125000000002434e-05, 3.751399999999891e-05, 3.782000000000091e-05, 3.7388999999998784e-05, 3.7181000000000713e-05, 3.7944999999997564e-05, 3.756999999999719e-05, 3.711199999999887e-05, 3.7625000000002934e-05, 3.7931000000001464e-05, 3.7375000000002684e-05, 3.7166999999997674e-05]</msg>
<status status="PASS" starttime="20201029 18:19:03.350" endtime="20201029 18:19:03.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.345" endtime="20201029 18:19:03.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:03.357" endtime="20201029 18:19:03.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.356" endtime="20201029 18:19:03.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.354" endtime="20201029 18:19:03.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.997" endtime="20201029 18:19:03.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:02.997" endtime="20201029 18:19:03.378"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.387" endtime="20201029 18:19:03.404"></status>
</kw>
<msg timestamp="20201029 18:19:03.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.385" endtime="20201029 18:19:03.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.405" endtime="20201029 18:19:03.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.408" endtime="20201029 18:19:03.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.382" endtime="20201029 18:19:03.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.380" endtime="20201029 18:19:03.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.417" endtime="20201029 18:19:03.706"></status>
</kw>
<msg timestamp="20201029 18:19:03.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0195795, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0196185, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:19:03.415" endtime="20201029 18:19:03.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0195795, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0196185, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 18:19:03.710" endtime="20201029 18:19:03.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.719" endtime="20201029 18:19:03.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.413" endtime="20201029 18:19:03.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.411" endtime="20201029 18:19:03.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:03.725" level="INFO">${RESULT} = [{'diff': 3.900000000000084e-05}, {'diff': 3.8790999999999826e-05}, {'diff': 3.8097000000000825e-05}, {'diff': 3.8347000000001075e-05}, {'diff': 3.8431000000001964e-05}, {'diff': 3.825000000000009e-05...</msg>
<status status="PASS" starttime="20201029 18:19:03.722" endtime="20201029 18:19:03.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:03.731" level="INFO">${ACCURACY} = {'diff': [3.900000000000084e-05, 3.8790999999999826e-05, 3.8097000000000825e-05, 3.8347000000001075e-05, 3.8431000000001964e-05, 3.825000000000009e-05, 3.825000000000009e-05, 3.857000000000166e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:19:03.726" endtime="20201029 18:19:03.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.735" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 18:19:03.734" endtime="20201029 18:19:03.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.738" level="INFO">VALUE: [3.900000000000084e-05, 3.8790999999999826e-05, 3.8097000000000825e-05, 3.8347000000001075e-05, 3.8431000000001964e-05, 3.825000000000009e-05, 3.825000000000009e-05, 3.857000000000166e-05, 3.8332999999998035e-05, 3.823599999999705e-05, 3.884799999999758e-05, 3.8763000000000686e-05, 3.8625000000000465e-05, 3.892999999999952e-05, 3.823699999999999e-05, 3.8333000000001505e-05, 3.8318999999998465e-05, 3.8347000000001075e-05, 3.899999999999737e-05, 3.8332999999998035e-05, 3.9068999999999215e-05, 3.899999999999737e-05, 3.9083000000002255e-05, 3.8902999999999854e-05, 3.867999999999927e-05, 3.8582999999998285e-05, 3.850000000000034e-05, 3.819399999999834e-05, 3.8902999999999854e-05, 3.8889000000000284e-05, 3.8875000000000715e-05, 3.8374999999996745e-05, 3.854199999999905e-05, 3.900000000000084e-05, 3.8625000000000465e-05, 3.82919999999988e-05, 3.8709000000001353e-05, 3.901400000000041e-05, 3.851399999999991e-05, 3.8166999999998674e-05, 3.8375000000000214e-05, 3.8124999999999964e-05, 3.8194999999997814e-05, 3.8818999999998965e-05, 3.820800000000138e-05, 3.8861000000001145e-05, 3.876400000000016e-05, 3.9110999999997925e-05, 3.8318999999998465e-05, 3.876400000000016e-05]</msg>
<status status="PASS" starttime="20201029 18:19:03.736" endtime="20201029 18:19:03.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.731" endtime="20201029 18:19:03.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:03.743" endtime="20201029 18:19:03.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.741" endtime="20201029 18:19:03.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.740" endtime="20201029 18:19:03.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.379" endtime="20201029 18:19:03.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.378" endtime="20201029 18:19:03.764"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.773" endtime="20201029 18:19:03.790"></status>
</kw>
<msg timestamp="20201029 18:19:03.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.771" endtime="20201029 18:19:03.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:03.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:03.792" endtime="20201029 18:19:03.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.795" endtime="20201029 18:19:03.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.768" endtime="20201029 18:19:03.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.766" endtime="20201029 18:19:03.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:03.804" endtime="20201029 18:19:04.106"></status>
</kw>
<msg timestamp="20201029 18:19:04.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020069153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020108708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:03.802" endtime="20201029 18:19:04.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020069153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020108708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.110" endtime="20201029 18:19:04.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.118" endtime="20201029 18:19:04.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.800" endtime="20201029 18:19:04.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.798" endtime="20201029 18:19:04.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:04.125" level="INFO">${RESULT} = [{'diff': 3.9555000000000146e-05}, {'diff': 3.9445000000002534e-05}, {'diff': 3.924999999999762e-05}, {'diff': 3.917999999999977e-05}, {'diff': 3.943000000000002e-05}, {'diff': 3.9805000000000396e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:04.122" endtime="20201029 18:19:04.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:04.129" level="INFO">${ACCURACY} = {'diff': [3.9555000000000146e-05, 3.9445000000002534e-05, 3.924999999999762e-05, 3.917999999999977e-05, 3.943000000000002e-05, 3.9805000000000396e-05, 3.9805000000000396e-05, 3.944399999999959e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:19:04.126" endtime="20201029 18:19:04.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.134" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 18:19:04.133" endtime="20201029 18:19:04.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.137" level="INFO">VALUE: [3.9555000000000146e-05, 3.9445000000002534e-05, 3.924999999999762e-05, 3.917999999999977e-05, 3.943000000000002e-05, 3.9805000000000396e-05, 3.9805000000000396e-05, 3.944399999999959e-05, 3.9652999999997135e-05, 3.947199999999873e-05, 3.9180999999999244e-05, 3.999999999999837e-05, 3.930599999999937e-05, 3.9153000000000104e-05, 3.9166999999999674e-05, 3.9709000000002354e-05, 3.976400000000116e-05, 3.997199999999923e-05, 3.983400000000248e-05, 3.9930999999999994e-05, 4.008399999999926e-05, 3.927800000000023e-05, 3.933399999999851e-05, 3.9625000000001465e-05, 4.005600000000012e-05, 3.9277000000000756e-05, 3.9638999999997565e-05, 3.9818999999999966e-05, 3.9818999999999966e-05, 4.0069000000000216e-05, 4.0082999999999785e-05, 3.948600000000177e-05, 3.969399999999984e-05, 3.944399999999959e-05, 3.950000000000134e-05, 3.923600000000152e-05, 3.9832999999999535e-05, 3.9111000000001395e-05, 3.969399999999984e-05, 3.917999999999977e-05, 3.9818999999999966e-05, 3.973599999999855e-05, 3.931999999999894e-05, 3.9347000000002075e-05, 3.973599999999855e-05, 3.9653000000000604e-05, 3.981999999999944e-05, 3.951399999999744e-05, 3.924999999999762e-05, 3.9639000000001035e-05]</msg>
<status status="PASS" starttime="20201029 18:19:04.135" endtime="20201029 18:19:04.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.130" endtime="20201029 18:19:04.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:04.142" endtime="20201029 18:19:04.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.140" endtime="20201029 18:19:04.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.139" endtime="20201029 18:19:04.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.765" endtime="20201029 18:19:04.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:03.764" endtime="20201029 18:19:04.162"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.171" endtime="20201029 18:19:04.191"></status>
</kw>
<msg timestamp="20201029 18:19:04.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.170" endtime="20201029 18:19:04.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.192" endtime="20201029 18:19:04.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.195" endtime="20201029 18:19:04.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.167" endtime="20201029 18:19:04.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.165" endtime="20201029 18:19:04.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.204" endtime="20201029 18:19:04.490"></status>
</kw>
<msg timestamp="20201029 18:19:04.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021106486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021147333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.203" endtime="20201029 18:19:04.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021106486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021147333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.494" endtime="20201029 18:19:04.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.502" endtime="20201029 18:19:04.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.200" endtime="20201029 18:19:04.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.198" endtime="20201029 18:19:04.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:04.509" level="INFO">${RESULT} = [{'diff': 4.0847000000000105e-05}, {'diff': 4.042999999999755e-05}, {'diff': 4.1054999999998176e-05}, {'diff': 4.069400000000084e-05}, {'diff': 4.026400000000166e-05}, {'diff': 4.043000000000102e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:04.506" endtime="20201029 18:19:04.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:04.513" level="INFO">${ACCURACY} = {'diff': [4.0847000000000105e-05, 4.042999999999755e-05, 4.1054999999998176e-05, 4.069400000000084e-05, 4.026400000000166e-05, 4.043000000000102e-05, 4.0875000000002715e-05, 4.0875000000002715e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:19:04.510" endtime="20201029 18:19:04.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.518" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 18:19:04.517" endtime="20201029 18:19:04.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.521" level="INFO">VALUE: [4.0847000000000105e-05, 4.042999999999755e-05, 4.1054999999998176e-05, 4.069400000000084e-05, 4.026400000000166e-05, 4.043000000000102e-05, 4.0875000000002715e-05, 4.0875000000002715e-05, 4.019400000000034e-05, 4.0375000000002215e-05, 4.0276999999998286e-05, 4.073599999999955e-05, 4.0639000000002035e-05, 4.080600000000087e-05, 4.0153000000001104e-05, 4.0681000000000744e-05, 4.0638999999998565e-05, 4.0138999999998065e-05, 4.104199999999808e-05, 4.108400000000026e-05, 4.058399999999976e-05, 4.0708999999999884e-05, 4.0194999999999814e-05, 4.0167000000000674e-05, 4.0916999999997955e-05, 4.0819000000000966e-05, 4.023599999999905e-05, 4.101399999999894e-05, 4.040199999999841e-05, 4.082000000000044e-05, 4.0874999999999245e-05, 4.048600000000277e-05, 4.0124999999998495e-05, 4.019400000000034e-05, 4.0291000000001326e-05, 4.068000000000127e-05, 4.023599999999905e-05, 4.097200000000023e-05, 4.100000000000284e-05, 4.1055000000001646e-05, 4.0805000000001396e-05, 4.0319000000000466e-05, 4.0569000000000716e-05, 4.0208999999999384e-05, 4.0624999999998995e-05, 4.076399999999869e-05, 4.0194999999999814e-05, 4.0625000000002465e-05, 4.0139000000001535e-05, 4.0375000000002215e-05]</msg>
<status status="PASS" starttime="20201029 18:19:04.519" endtime="20201029 18:19:04.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.514" endtime="20201029 18:19:04.523"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:04.527" endtime="20201029 18:19:04.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.525" endtime="20201029 18:19:04.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.524" endtime="20201029 18:19:04.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.163" endtime="20201029 18:19:04.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.163" endtime="20201029 18:19:04.547"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.557" endtime="20201029 18:19:04.575"></status>
</kw>
<msg timestamp="20201029 18:19:04.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.555" endtime="20201029 18:19:04.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.576" endtime="20201029 18:19:04.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.579" endtime="20201029 18:19:04.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.552" endtime="20201029 18:19:04.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.550" endtime="20201029 18:19:04.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.588" endtime="20201029 18:19:04.874"></status>
</kw>
<msg timestamp="20201029 18:19:04.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020726403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020768458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.587" endtime="20201029 18:19:04.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020726403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020768458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.879" endtime="20201029 18:19:04.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.887" endtime="20201029 18:19:04.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.584" endtime="20201029 18:19:04.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.582" endtime="20201029 18:19:04.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:04.894" level="INFO">${RESULT} = [{'diff': 4.2054999999999176e-05}, {'diff': 4.202799999999951e-05}, {'diff': 4.1624999999999995e-05}, {'diff': 4.1110999999999925e-05}, {'diff': 4.201399999999994e-05}, {'diff': 4.194400000000209e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:04.891" endtime="20201029 18:19:04.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:04.899" level="INFO">${ACCURACY} = {'diff': [4.2054999999999176e-05, 4.202799999999951e-05, 4.1624999999999995e-05, 4.1110999999999925e-05, 4.201399999999994e-05, 4.194400000000209e-05, 4.1319000000001466e-05, 4.192999999999905e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:19:04.895" endtime="20201029 18:19:04.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.904" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 18:19:04.903" endtime="20201029 18:19:04.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.906" level="INFO">VALUE: [4.2054999999999176e-05, 4.202799999999951e-05, 4.1624999999999995e-05, 4.1110999999999925e-05, 4.201399999999994e-05, 4.194400000000209e-05, 4.1319000000001466e-05, 4.192999999999905e-05, 4.123600000000005e-05, 4.1805000000002396e-05, 4.194399999999862e-05, 4.2055000000002646e-05, 4.2083000000001786e-05, 4.1930999999998525e-05, 4.1110999999999925e-05, 4.1737000000000024e-05, 4.176399999999969e-05, 4.1945000000001564e-05, 4.1861000000000675e-05, 4.197200000000123e-05, 4.140199999999941e-05, 4.1610999999996956e-05, 4.157000000000119e-05, 4.204199999999908e-05, 4.1347000000000605e-05, 4.1681000000001744e-05, 4.176399999999969e-05, 4.120800000000091e-05, 4.1916999999998955e-05, 4.1473000000000204e-05, 4.190199999999991e-05, 4.1569000000001716e-05, 4.1624999999999995e-05, 4.14860000000003e-05, 4.201399999999994e-05, 4.1305000000001896e-05, 4.1638999999999565e-05, 4.14860000000003e-05, 4.2096999999997886e-05, 4.194400000000209e-05, 4.1568999999998246e-05, 4.1846999999997636e-05, 4.192999999999905e-05, 4.1568999999998246e-05, 4.1708999999997415e-05, 4.19860000000008e-05, 4.1888999999999815e-05, 4.1459000000000634e-05, 4.154200000000205e-05, 4.18059999999984e-05]</msg>
<status status="PASS" starttime="20201029 18:19:04.905" endtime="20201029 18:19:04.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.900" endtime="20201029 18:19:04.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:04.911" endtime="20201029 18:19:04.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.910" endtime="20201029 18:19:04.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.908" endtime="20201029 18:19:04.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.548" endtime="20201029 18:19:04.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.548" endtime="20201029 18:19:04.932"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.941" endtime="20201029 18:19:04.959"></status>
</kw>
<msg timestamp="20201029 18:19:04.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.940" endtime="20201029 18:19:04.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:04.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:04.960" endtime="20201029 18:19:04.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.963" endtime="20201029 18:19:04.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.937" endtime="20201029 18:19:04.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.935" endtime="20201029 18:19:04.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:04.972" endtime="20201029 18:19:05.258"></status>
</kw>
<msg timestamp="20201029 18:19:05.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020126361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020168625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:04.971" endtime="20201029 18:19:05.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020126361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020168625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.263" endtime="20201029 18:19:05.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.271" endtime="20201029 18:19:05.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.968" endtime="20201029 18:19:05.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.966" endtime="20201029 18:19:05.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:05.278" level="INFO">${RESULT} = [{'diff': 4.226400000000019e-05}, {'diff': 4.227800000000323e-05}, {'diff': 4.224999999999715e-05}, {'diff': 4.226400000000019e-05}, {'diff': 4.244399999999912e-05}, {'diff': 4.2847000000002106e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:05.274" endtime="20201029 18:19:05.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:05.282" level="INFO">${ACCURACY} = {'diff': [4.226400000000019e-05, 4.227800000000323e-05, 4.224999999999715e-05, 4.226400000000019e-05, 4.244399999999912e-05, 4.2847000000002106e-05, 4.272200000000198e-05, 4.276400000000069e-05, 4.275...</msg>
<status status="PASS" starttime="20201029 18:19:05.279" endtime="20201029 18:19:05.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.287" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 18:19:05.286" endtime="20201029 18:19:05.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.289" level="INFO">VALUE: [4.226400000000019e-05, 4.227800000000323e-05, 4.224999999999715e-05, 4.226400000000019e-05, 4.244399999999912e-05, 4.2847000000002106e-05, 4.272200000000198e-05, 4.276400000000069e-05, 4.275000000000112e-05, 4.2972999999998235e-05, 4.2694999999998845e-05, 4.28059999999994e-05, 4.255599999999915e-05, 4.29860000000018e-05, 4.2945000000002564e-05, 4.230600000000237e-05, 4.2930999999999525e-05, 4.258399999999829e-05, 4.2611000000001426e-05, 4.2875000000001245e-05, 4.276400000000069e-05, 4.2875000000001245e-05, 4.2375000000000745e-05, 4.274999999999765e-05, 4.2125000000000495e-05, 4.2375000000000745e-05, 4.2568999999999246e-05, 4.242999999999955e-05, 4.2139000000000065e-05, 4.295799999999919e-05, 4.293000000000005e-05, 4.250000000000087e-05, 4.223600000000105e-05, 4.302799999999704e-05, 4.279099999999689e-05, 4.226400000000019e-05, 4.302800000000051e-05, 4.300000000000137e-05, 4.2431000000002494e-05, 4.28059999999994e-05, 4.2195000000001814e-05, 4.232000000000194e-05, 4.2375000000000745e-05, 4.2125000000000495e-05, 4.2681000000002745e-05, 4.241599999999998e-05, 4.2389000000000315e-05, 4.2195000000001814e-05, 4.302700000000104e-05, 4.2430999999999025e-05]</msg>
<status status="PASS" starttime="20201029 18:19:05.288" endtime="20201029 18:19:05.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.283" endtime="20201029 18:19:05.291"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:05.294" endtime="20201029 18:19:05.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.293" endtime="20201029 18:19:05.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.291" endtime="20201029 18:19:05.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.933" endtime="20201029 18:19:05.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:04.932" endtime="20201029 18:19:05.315"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.324" endtime="20201029 18:19:05.347"></status>
</kw>
<msg timestamp="20201029 18:19:05.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.322" endtime="20201029 18:19:05.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.348" endtime="20201029 18:19:05.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.351" endtime="20201029 18:19:05.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.320" endtime="20201029 18:19:05.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.318" endtime="20201029 18:19:05.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.360" endtime="20201029 18:19:05.647"></status>
</kw>
<msg timestamp="20201029 18:19:05.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023028403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023072542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.358" endtime="20201029 18:19:05.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023028403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023072542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.651" endtime="20201029 18:19:05.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.659" endtime="20201029 18:19:05.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.356" endtime="20201029 18:19:05.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.354" endtime="20201029 18:19:05.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:05.666" level="INFO">${RESULT} = [{'diff': 4.4139000000002065e-05}, {'diff': 4.327700000000129e-05}, {'diff': 4.3444999999999595e-05}, {'diff': 4.324999999999815e-05}, {'diff': 4.33059999999999e-05}, {'diff': 4.376300000000222e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:05.663" endtime="20201029 18:19:05.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:05.671" level="INFO">${ACCURACY} = {'diff': [4.4139000000002065e-05, 4.327700000000129e-05, 4.3444999999999595e-05, 4.324999999999815e-05, 4.33059999999999e-05, 4.376300000000222e-05, 4.3555000000000677e-05, 4.404100000000161e-05, 4.35...</msg>
<status status="PASS" starttime="20201029 18:19:05.667" endtime="20201029 18:19:05.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.675" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 18:19:05.674" endtime="20201029 18:19:05.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.678" level="INFO">VALUE: [4.4139000000002065e-05, 4.327700000000129e-05, 4.3444999999999595e-05, 4.324999999999815e-05, 4.33059999999999e-05, 4.376300000000222e-05, 4.3555000000000677e-05, 4.404100000000161e-05, 4.351399999999797e-05, 4.3097000000002356e-05, 4.3569000000000246e-05, 4.4096999999999886e-05, 4.3360999999998706e-05, 4.320799999999944e-05, 4.3153000000000635e-05, 4.3111000000001926e-05, 4.4083000000000316e-05, 4.3639000000001565e-05, 4.405600000000065e-05, 4.3318999999999996e-05, 4.3458999999999165e-05, 4.324999999999815e-05, 4.3375000000001745e-05, 4.3403000000000885e-05, 4.316600000000073e-05, 4.3639000000001565e-05, 4.3180999999999775e-05, 4.3972999999999235e-05, 4.331999999999947e-05, 4.3639000000001565e-05, 4.397199999999976e-05, 4.3431000000000025e-05, 4.38060000000004e-05, 4.323599999999858e-05, 4.3555000000000677e-05, 4.4083000000000316e-05, 4.407000000000022e-05, 4.3291000000000857e-05, 4.393000000000105e-05, 4.3819000000000496e-05, 4.3833000000000066e-05, 4.344400000000012e-05, 4.3389000000001315e-05, 4.3569000000000246e-05, 4.375000000000212e-05, 4.3125000000001495e-05, 4.3318999999999996e-05, 4.3125000000001495e-05, 4.3332999999999566e-05, 4.3389000000001315e-05]</msg>
<status status="PASS" starttime="20201029 18:19:05.676" endtime="20201029 18:19:05.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.671" endtime="20201029 18:19:05.680"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:05.684" endtime="20201029 18:19:05.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.682" endtime="20201029 18:19:05.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.681" endtime="20201029 18:19:05.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.316" endtime="20201029 18:19:05.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.315" endtime="20201029 18:19:05.704"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.713" endtime="20201029 18:19:05.733"></status>
</kw>
<msg timestamp="20201029 18:19:05.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.712" endtime="20201029 18:19:05.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:05.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:05.735" endtime="20201029 18:19:05.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.737" endtime="20201029 18:19:05.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.709" endtime="20201029 18:19:05.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.707" endtime="20201029 18:19:05.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:05.747" endtime="20201029 18:19:06.033"></status>
</kw>
<msg timestamp="20201029 18:19:06.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020317292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:05.745" endtime="20201029 18:19:06.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020272431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020317292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.037" endtime="20201029 18:19:06.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.046" endtime="20201029 18:19:06.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.742" endtime="20201029 18:19:06.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.741" endtime="20201029 18:19:06.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:06.052" level="INFO">${RESULT} = [{'diff': 4.4861000000000206e-05}, {'diff': 4.4695000000000845e-05}, {'diff': 4.463799999999962e-05}, {'diff': 4.4694999999997376e-05}, {'diff': 4.427700000000229e-05}, {'diff': 4.4445000000000595e-05...</msg>
<status status="PASS" starttime="20201029 18:19:06.049" endtime="20201029 18:19:06.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:06.057" level="INFO">${ACCURACY} = {'diff': [4.4861000000000206e-05, 4.4695000000000845e-05, 4.463799999999962e-05, 4.4694999999997376e-05, 4.427700000000229e-05, 4.4445000000000595e-05, 4.4583000000000816e-05, 4.473600000000008e-05, 4...</msg>
<status status="PASS" starttime="20201029 18:19:06.053" endtime="20201029 18:19:06.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.062" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 18:19:06.061" endtime="20201029 18:19:06.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.065" level="INFO">VALUE: [4.4861000000000206e-05, 4.4695000000000845e-05, 4.463799999999962e-05, 4.4694999999997376e-05, 4.427700000000229e-05, 4.4445000000000595e-05, 4.4583000000000816e-05, 4.473600000000008e-05, 4.4124999999999026e-05, 4.4874999999999776e-05, 4.4888999999999346e-05, 4.450000000000287e-05, 4.4124999999999026e-05, 4.4888999999999346e-05, 4.4917000000001955e-05, 4.4375000000002746e-05, 4.4181000000000775e-05, 4.4416999999997986e-05, 4.4847000000000636e-05, 4.456999999999725e-05, 4.501399999999947e-05, 4.4319000000000996e-05, 4.4431000000001025e-05, 4.4874999999999776e-05, 4.433400000000004e-05, 4.4445000000000595e-05, 4.506999999999775e-05, 4.4319999999997e-05, 4.4944999999997626e-05, 4.4695000000000845e-05, 4.413799999999912e-05, 4.459799999999986e-05, 4.4430999999997556e-05, 4.463799999999962e-05, 4.419400000000087e-05, 4.4902999999998916e-05, 4.419400000000087e-05, 4.426400000000219e-05, 4.474999999999965e-05, 4.477699999999932e-05, 4.494400000000162e-05, 4.4096999999999886e-05, 4.442999999999808e-05, 4.495800000000119e-05, 4.4430999999997556e-05, 4.457000000000072e-05, 4.5083000000001316e-05, 4.4667000000001705e-05, 4.4874999999999776e-05, 4.452799999999854e-05]</msg>
<status status="PASS" starttime="20201029 18:19:06.063" endtime="20201029 18:19:06.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.058" endtime="20201029 18:19:06.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:06.070" endtime="20201029 18:19:06.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.068" endtime="20201029 18:19:06.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.067" endtime="20201029 18:19:06.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.705" endtime="20201029 18:19:06.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:05.705" endtime="20201029 18:19:06.091"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.099" endtime="20201029 18:19:06.117"></status>
</kw>
<msg timestamp="20201029 18:19:06.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.098" endtime="20201029 18:19:06.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.119" endtime="20201029 18:19:06.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.121" endtime="20201029 18:19:06.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.095" endtime="20201029 18:19:06.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.093" endtime="20201029 18:19:06.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.131" endtime="20201029 18:19:06.418"></status>
</kw>
<msg timestamp="20201029 18:19:06.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020023583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020069653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.129" endtime="20201029 18:19:06.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020023583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020069653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.423" endtime="20201029 18:19:06.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.431" endtime="20201029 18:19:06.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.126" endtime="20201029 18:19:06.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.125" endtime="20201029 18:19:06.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:06.438" level="INFO">${RESULT} = [{'diff': 4.606999999999875e-05}, {'diff': 4.525000000000015e-05}, {'diff': 4.5125000000000026e-05}, {'diff': 4.5639000000000096e-05}, {'diff': 4.5445000000001595e-05}, {'diff': 4.5138999999999596e-05...</msg>
<status status="PASS" starttime="20201029 18:19:06.435" endtime="20201029 18:19:06.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:06.442" level="INFO">${ACCURACY} = {'diff': [4.606999999999875e-05, 4.525000000000015e-05, 4.5125000000000026e-05, 4.5639000000000096e-05, 4.5445000000001595e-05, 4.5138999999999596e-05, 4.547200000000126e-05, 4.549999999999693e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:19:06.439" endtime="20201029 18:19:06.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.447" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 18:19:06.446" endtime="20201029 18:19:06.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.449" level="INFO">VALUE: [4.606999999999875e-05, 4.525000000000015e-05, 4.5125000000000026e-05, 4.5639000000000096e-05, 4.5445000000001595e-05, 4.5138999999999596e-05, 4.547200000000126e-05, 4.549999999999693e-05, 4.5944999999998626e-05, 4.538800000000037e-05, 4.573599999999761e-05, 4.51800000000023e-05, 4.575000000000065e-05, 4.556899999999878e-05, 4.5597000000001386e-05, 4.545799999999822e-05, 4.525000000000015e-05, 4.55000000000004e-05, 4.575000000000065e-05, 4.573600000000108e-05, 4.598599999999786e-05, 4.5195000000001345e-05, 4.5652999999999666e-05, 4.548600000000083e-05, 4.520799999999797e-05, 4.548600000000083e-05, 4.5625000000000526e-05, 4.534699999999767e-05, 4.5097000000000886e-05, 4.548600000000083e-05, 4.522199999999754e-05, 4.576400000000022e-05, 4.5916999999999486e-05, 4.5597000000001386e-05, 4.55000000000004e-05, 4.5652999999999666e-05, 4.555500000000268e-05, 4.5652999999999666e-05, 4.516599999999926e-05, 4.577799999999979e-05, 4.595799999999872e-05, 4.5069000000001747e-05, 4.530499999999896e-05, 4.529199999999886e-05, 4.547199999999779e-05, 4.608299999999885e-05, 4.606899999999928e-05, 4.556899999999878e-05, 4.556899999999878e-05, 4.570800000000194e-05]</msg>
<status status="PASS" starttime="20201029 18:19:06.448" endtime="20201029 18:19:06.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.443" endtime="20201029 18:19:06.451"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:06.454" endtime="20201029 18:19:06.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.453" endtime="20201029 18:19:06.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.452" endtime="20201029 18:19:06.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.091" endtime="20201029 18:19:06.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.091" endtime="20201029 18:19:06.475"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.484" endtime="20201029 18:19:06.502"></status>
</kw>
<msg timestamp="20201029 18:19:06.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.482" endtime="20201029 18:19:06.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.504" endtime="20201029 18:19:06.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.507" endtime="20201029 18:19:06.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.480" endtime="20201029 18:19:06.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.478" endtime="20201029 18:19:06.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.516" endtime="20201029 18:19:06.802"></status>
</kw>
<msg timestamp="20201029 18:19:06.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021022181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021068611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.514" endtime="20201029 18:19:06.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021022181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021068611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.806" endtime="20201029 18:19:06.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.815" endtime="20201029 18:19:06.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.512" endtime="20201029 18:19:06.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.510" endtime="20201029 18:19:06.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:06.821" level="INFO">${RESULT} = [{'diff': 4.643000000000008e-05}, {'diff': 4.6139000000000596e-05}, {'diff': 4.620800000000244e-05}, {'diff': 4.706900000000028e-05}, {'diff': 4.651299999999803e-05}, {'diff': 4.630599999999943e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:06.818" endtime="20201029 18:19:06.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:06.826" level="INFO">${ACCURACY} = {'diff': [4.643000000000008e-05, 4.6139000000000596e-05, 4.620800000000244e-05, 4.706900000000028e-05, 4.651299999999803e-05, 4.630599999999943e-05, 4.6139000000000596e-05, 4.6903000000000916e-05, 4.6...</msg>
<status status="PASS" starttime="20201029 18:19:06.822" endtime="20201029 18:19:06.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.830" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 18:19:06.829" endtime="20201029 18:19:06.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.833" level="INFO">VALUE: [4.643000000000008e-05, 4.6139000000000596e-05, 4.620800000000244e-05, 4.706900000000028e-05, 4.651299999999803e-05, 4.630599999999943e-05, 4.6139000000000596e-05, 4.6903000000000916e-05, 4.6319999999999e-05, 4.627799999999682e-05, 4.68199999999995e-05, 4.613899999999713e-05, 4.676399999999775e-05, 4.623599999999811e-05, 4.706999999999975e-05, 4.6889000000001346e-05, 4.680500000000046e-05, 4.694400000000015e-05, 4.66939999999999e-05, 4.6125000000001026e-05, 4.61939999999994e-05, 4.6139000000000596e-05, 4.6875000000001776e-05, 4.670799999999947e-05, 4.676400000000122e-05, 4.622199999999854e-05, 4.6416999999999986e-05, 4.6181000000002775e-05, 4.655499999999674e-05, 4.694400000000015e-05, 4.6361000000001706e-05, 4.6223000000001485e-05, 4.625000000000115e-05, 4.6236999999997586e-05, 4.630599999999943e-05, 4.652700000000107e-05, 4.679100000000089e-05, 4.675000000000165e-05, 4.6319999999999e-05, 4.655500000000021e-05, 4.626399999999725e-05, 4.620800000000244e-05, 4.66939999999999e-05, 4.617999999999983e-05, 4.643000000000008e-05, 4.624999999999768e-05, 4.6653000000000666e-05, 4.6416999999999986e-05, 4.625000000000115e-05, 4.6583000000002817e-05]</msg>
<status status="PASS" starttime="20201029 18:19:06.831" endtime="20201029 18:19:06.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.827" endtime="20201029 18:19:06.840"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:06.844" endtime="20201029 18:19:06.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.843" endtime="20201029 18:19:06.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.841" endtime="20201029 18:19:06.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.476" endtime="20201029 18:19:06.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.475" endtime="20201029 18:19:06.865"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.874" endtime="20201029 18:19:06.895"></status>
</kw>
<msg timestamp="20201029 18:19:06.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.873" endtime="20201029 18:19:06.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:06.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:06.898" endtime="20201029 18:19:06.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.903" endtime="20201029 18:19:06.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.870" endtime="20201029 18:19:06.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.868" endtime="20201029 18:19:06.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:06.918" endtime="20201029 18:19:07.208"></status>
</kw>
<msg timestamp="20201029 18:19:07.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020333458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020380667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:06.913" endtime="20201029 18:19:07.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020333458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020380667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.212" endtime="20201029 18:19:07.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.221" endtime="20201029 18:19:07.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.909" endtime="20201029 18:19:07.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.906" endtime="20201029 18:19:07.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:07.227" level="INFO">${RESULT} = [{'diff': 4.7209000000002915e-05}, {'diff': 4.726400000000172e-05}, {'diff': 4.7458999999999696e-05}, {'diff': 4.749999999999893e-05}, {'diff': 4.743000000000108e-05}, {'diff': 4.737499999999881e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:07.224" endtime="20201029 18:19:07.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:07.232" level="INFO">${ACCURACY} = {'diff': [4.7209000000002915e-05, 4.726400000000172e-05, 4.7458999999999696e-05, 4.749999999999893e-05, 4.743000000000108e-05, 4.737499999999881e-05, 4.798599999999986e-05, 4.777699999999885e-05, 4.72...</msg>
<status status="PASS" starttime="20201029 18:19:07.228" endtime="20201029 18:19:07.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.237" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 18:19:07.235" endtime="20201029 18:19:07.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.239" level="INFO">VALUE: [4.7209000000002915e-05, 4.726400000000172e-05, 4.7458999999999696e-05, 4.749999999999893e-05, 4.743000000000108e-05, 4.737499999999881e-05, 4.798599999999986e-05, 4.777699999999885e-05, 4.729099999999792e-05, 4.763899999999863e-05, 4.718000000000083e-05, 4.784700000000017e-05, 4.767999999999786e-05, 4.766699999999777e-05, 4.805499999999824e-05, 4.754200000000111e-05, 4.744400000000065e-05, 4.7181000000000306e-05, 4.804199999999814e-05, 4.7181000000000306e-05, 4.755600000000068e-05, 4.76529999999982e-05, 4.754200000000111e-05, 4.799999999999943e-05, 4.757000000000025e-05, 4.711099999999899e-05, 4.716599999999779e-05, 4.7681000000000806e-05, 4.754200000000111e-05, 4.715200000000169e-05, 4.755499999999774e-05, 4.737499999999881e-05, 4.71940000000004e-05, 4.7389000000001846e-05, 4.722199999999954e-05, 4.776400000000222e-05, 4.740299999999795e-05, 4.725000000000215e-05, 4.7431000000000556e-05, 4.723599999999911e-05, 4.780500000000146e-05, 4.784700000000017e-05, 4.730499999999749e-05, 4.745800000000022e-05, 4.737499999999881e-05, 4.768099999999734e-05, 4.776400000000222e-05, 4.7944999999997157e-05, 4.7181000000000306e-05, 4.783400000000007e-05]</msg>
<status status="PASS" starttime="20201029 18:19:07.238" endtime="20201029 18:19:07.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.233" endtime="20201029 18:19:07.240"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:07.244" endtime="20201029 18:19:07.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.242" endtime="20201029 18:19:07.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.241" endtime="20201029 18:19:07.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.866" endtime="20201029 18:19:07.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:06.866" endtime="20201029 18:19:07.265"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.273" endtime="20201029 18:19:07.293"></status>
</kw>
<msg timestamp="20201029 18:19:07.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.272" endtime="20201029 18:19:07.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.295" endtime="20201029 18:19:07.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.297" endtime="20201029 18:19:07.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.269" endtime="20201029 18:19:07.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.267" endtime="20201029 18:19:07.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.306" endtime="20201029 18:19:07.608"></status>
</kw>
<msg timestamp="20201029 18:19:07.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019724347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.305" endtime="20201029 18:19:07.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019724347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.618" endtime="20201029 18:19:07.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.634" endtime="20201029 18:19:07.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.302" endtime="20201029 18:19:07.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.300" endtime="20201029 18:19:07.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:07.641" level="INFO">${RESULT} = [{'diff': 4.831899999999806e-05}, {'diff': 4.863899999999963e-05}, {'diff': 4.851400000000297e-05}, {'diff': 4.869399999999843e-05}, {'diff': 4.873600000000061e-05}, {'diff': 4.906899999999881e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:07.637" endtime="20201029 18:19:07.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:07.645" level="INFO">${ACCURACY} = {'diff': [4.831899999999806e-05, 4.863899999999963e-05, 4.851400000000297e-05, 4.869399999999843e-05, 4.873600000000061e-05, 4.906899999999881e-05, 4.848600000000036e-05, 4.867999999999886e-05, 4.8194...</msg>
<status status="PASS" starttime="20201029 18:19:07.642" endtime="20201029 18:19:07.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.650" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 18:19:07.649" endtime="20201029 18:19:07.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.652" level="INFO">VALUE: [4.831899999999806e-05, 4.863899999999963e-05, 4.851400000000297e-05, 4.869399999999843e-05, 4.873600000000061e-05, 4.906899999999881e-05, 4.848600000000036e-05, 4.867999999999886e-05, 4.8194999999997407e-05, 4.898599999999739e-05, 4.820800000000097e-05, 4.8681000000001806e-05, 4.834700000000067e-05, 4.824999999999968e-05, 4.888899999999988e-05, 4.830600000000143e-05, 4.8709000000000946e-05, 4.877800000000279e-05, 4.831900000000153e-05, 4.8195000000000876e-05, 4.862500000000006e-05, 4.876399999999975e-05, 4.873600000000061e-05, 4.834700000000067e-05, 4.858300000000135e-05, 4.906900000000228e-05, 4.831900000000153e-05, 4.868000000000233e-05, 4.870800000000147e-05, 4.865199999999972e-05, 4.86940000000019e-05, 4.897200000000129e-05, 4.811099999999999e-05, 4.900000000000043e-05, 4.867999999999886e-05, 4.905499999999924e-05, 4.881900000000203e-05, 4.876399999999975e-05, 4.886099999999727e-05, 4.8458999999997227e-05, 4.907000000000175e-05, 4.8473000000000266e-05, 4.876399999999975e-05, 4.906899999999881e-05, 4.890299999999945e-05, 4.837499999999981e-05, 4.8431000000001556e-05, 4.827699999999935e-05, 4.827700000000282e-05, 4.812499999999956e-05]</msg>
<status status="PASS" starttime="20201029 18:19:07.651" endtime="20201029 18:19:07.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.646" endtime="20201029 18:19:07.653"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:07.657" endtime="20201029 18:19:07.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.656" endtime="20201029 18:19:07.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.655" endtime="20201029 18:19:07.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.265" endtime="20201029 18:19:07.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.265" endtime="20201029 18:19:07.678"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.687" endtime="20201029 18:19:07.706"></status>
</kw>
<msg timestamp="20201029 18:19:07.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.685" endtime="20201029 18:19:07.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:07.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:07.708" endtime="20201029 18:19:07.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.710" endtime="20201029 18:19:07.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.683" endtime="20201029 18:19:07.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.681" endtime="20201029 18:19:07.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:07.720" endtime="20201029 18:19:08.007"></status>
</kw>
<msg timestamp="20201029 18:19:08.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021082083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021131292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:07.718" endtime="20201029 18:19:08.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021082083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021131292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.011" endtime="20201029 18:19:08.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.019" endtime="20201029 18:19:08.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.715" endtime="20201029 18:19:08.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.713" endtime="20201029 18:19:08.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:08.026" level="INFO">${RESULT} = [{'diff': 4.9208999999997977e-05}, {'diff': 4.990300000000045e-05}, {'diff': 4.922199999999807e-05}, {'diff': 4.994499999999916e-05}, {'diff': 4.936100000000124e-05}, {'diff': 4.965200000000072e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:08.023" endtime="20201029 18:19:08.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:08.030" level="INFO">${ACCURACY} = {'diff': [4.9208999999997977e-05, 4.990300000000045e-05, 4.922199999999807e-05, 4.994499999999916e-05, 4.936100000000124e-05, 4.965200000000072e-05, 4.929199999999939e-05, 4.994499999999916e-05, 4.976...</msg>
<status status="PASS" starttime="20201029 18:19:08.027" endtime="20201029 18:19:08.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.035" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 18:19:08.034" endtime="20201029 18:19:08.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.038" level="INFO">VALUE: [4.9208999999997977e-05, 4.990300000000045e-05, 4.922199999999807e-05, 4.994499999999916e-05, 4.936100000000124e-05, 4.965200000000072e-05, 4.929199999999939e-05, 4.994499999999916e-05, 4.976400000000075e-05, 4.999999999999796e-05, 4.962500000000106e-05, 4.925000000000068e-05, 4.981899999999956e-05, 4.909699999999795e-05, 4.919399999999893e-05, 4.947200000000179e-05, 4.980499999999999e-05, 4.987500000000131e-05, 4.983299999999913e-05, 4.923600000000111e-05, 5.006999999999928e-05, 5.0014000000001e-05, 4.994499999999916e-05, 4.976400000000075e-05, 4.966699999999977e-05, 4.93339999999981e-05, 4.954199999999964e-05, 4.924999999999721e-05, 4.987500000000131e-05, 4.926400000000025e-05, 4.981899999999956e-05, 4.915200000000022e-05, 4.987500000000131e-05, 4.983299999999913e-05, 4.969399999999943e-05, 4.981899999999956e-05, 4.944400000000265e-05, 4.994399999999968e-05, 4.974999999999771e-05, 4.976400000000075e-05, 4.948600000000136e-05, 5.000000000000143e-05, 4.976400000000075e-05, 5.001299999999806e-05, 4.968099999999934e-05, 4.925000000000068e-05, 4.9153000000003166e-05, 4.950000000000093e-05, 5.000000000000143e-05, 4.986100000000174e-05]</msg>
<status status="PASS" starttime="20201029 18:19:08.036" endtime="20201029 18:19:08.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.031" endtime="20201029 18:19:08.040"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:08.044" endtime="20201029 18:19:08.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.042" endtime="20201029 18:19:08.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.041" endtime="20201029 18:19:08.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.679" endtime="20201029 18:19:08.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:07.678" endtime="20201029 18:19:08.064"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.073" endtime="20201029 18:19:08.091"></status>
</kw>
<msg timestamp="20201029 18:19:08.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.072" endtime="20201029 18:19:08.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.093" endtime="20201029 18:19:08.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.095" endtime="20201029 18:19:08.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.069" endtime="20201029 18:19:08.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.067" endtime="20201029 18:19:08.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.105" endtime="20201029 18:19:08.390"></status>
</kw>
<msg timestamp="20201029 18:19:08.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020103486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020154583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.103" endtime="20201029 18:19:08.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020103486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020154583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.395" endtime="20201029 18:19:08.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.403" endtime="20201029 18:19:08.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.100" endtime="20201029 18:19:08.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.099" endtime="20201029 18:19:08.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:08.410" level="INFO">${RESULT} = [{'diff': 5.109699999999995e-05}, {'diff': 5.099999999999896e-05}, {'diff': 5.094400000000068e-05}, {'diff': 5.02079999999995e-05}, {'diff': 5.016700000000027e-05}, {'diff': 5.036099999999877e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:08.406" endtime="20201029 18:19:08.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:08.415" level="INFO">${ACCURACY} = {'diff': [5.109699999999995e-05, 5.099999999999896e-05, 5.094400000000068e-05, 5.02079999999995e-05, 5.016700000000027e-05, 5.036099999999877e-05, 5.076399999999828e-05, 5.079200000000089e-05, 5.05690...</msg>
<status status="PASS" starttime="20201029 18:19:08.411" endtime="20201029 18:19:08.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.420" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 18:19:08.418" endtime="20201029 18:19:08.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.422" level="INFO">VALUE: [5.109699999999995e-05, 5.099999999999896e-05, 5.094400000000068e-05, 5.02079999999995e-05, 5.016700000000027e-05, 5.036099999999877e-05, 5.076399999999828e-05, 5.079200000000089e-05, 5.056900000000031e-05, 5.076399999999828e-05, 5.011100000000199e-05, 5.08339999999996e-05, 5.105600000000071e-05, 5.090300000000145e-05, 5.108300000000038e-05, 5.107000000000028e-05, 5.093100000000059e-05, 5.03469999999992e-05, 5.020899999999898e-05, 5.079200000000089e-05, 5.083300000000013e-05, 5.031999999999953e-05, 5.030599999999996e-05, 5.095800000000025e-05, 5.061099999999902e-05, 5.05140000000015e-05, 5.113900000000213e-05, 5.038900000000138e-05, 5.106899999999734e-05, 5.098599999999939e-05, 5.056900000000031e-05, 5.051399999999803e-05, 5.079199999999742e-05, 5.095800000000025e-05, 5.070899999999948e-05, 5.080599999999699e-05, 5.06530000000012e-05, 5.107000000000028e-05, 5.05140000000015e-05, 5.079199999999742e-05, 5.030599999999996e-05, 5.105500000000124e-05, 5.079100000000142e-05, 5.087499999999884e-05, 5.080599999999699e-05, 5.0320000000003e-05, 5.018000000000036e-05, 5.068000000000086e-05, 5.076399999999828e-05, 5.055500000000074e-05]</msg>
<status status="PASS" starttime="20201029 18:19:08.421" endtime="20201029 18:19:08.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.416" endtime="20201029 18:19:08.423"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:08.427" endtime="20201029 18:19:08.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.426" endtime="20201029 18:19:08.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.424" endtime="20201029 18:19:08.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.065" endtime="20201029 18:19:08.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.065" endtime="20201029 18:19:08.448"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.457" endtime="20201029 18:19:08.475"></status>
</kw>
<msg timestamp="20201029 18:19:08.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.455" endtime="20201029 18:19:08.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.477" endtime="20201029 18:19:08.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.479" endtime="20201029 18:19:08.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.453" endtime="20201029 18:19:08.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.450" endtime="20201029 18:19:08.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.489" endtime="20201029 18:19:08.776"></status>
</kw>
<msg timestamp="20201029 18:19:08.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020253597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020305028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.487" endtime="20201029 18:19:08.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020253597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020305028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.780" endtime="20201029 18:19:08.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.788" endtime="20201029 18:19:08.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.484" endtime="20201029 18:19:08.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.483" endtime="20201029 18:19:08.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:08.795" level="INFO">${RESULT} = [{'diff': 5.143099999999762e-05}, {'diff': 5.132000000000053e-05}, {'diff': 5.180599999999799e-05}, {'diff': 5.144500000000066e-05}, {'diff': 5.201399999999953e-05}, {'diff': 5.137500000000281e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:08.792" endtime="20201029 18:19:08.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:08.799" level="INFO">${ACCURACY} = {'diff': [5.143099999999762e-05, 5.132000000000053e-05, 5.180599999999799e-05, 5.144500000000066e-05, 5.201399999999953e-05, 5.137500000000281e-05, 5.191700000000202e-05, 5.205599999999824e-05, 5.1374...</msg>
<status status="PASS" starttime="20201029 18:19:08.796" endtime="20201029 18:19:08.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.804" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 18:19:08.803" endtime="20201029 18:19:08.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.806" level="INFO">VALUE: [5.143099999999762e-05, 5.132000000000053e-05, 5.180599999999799e-05, 5.144500000000066e-05, 5.201399999999953e-05, 5.137500000000281e-05, 5.191700000000202e-05, 5.205599999999824e-05, 5.137499999999934e-05, 5.198600000000039e-05, 5.162499999999959e-05, 5.188899999999941e-05, 5.176399999999928e-05, 5.1666000000002293e-05, 5.126399999999878e-05, 5.155500000000174e-05, 5.138900000000238e-05, 5.201399999999953e-05, 5.188899999999941e-05, 5.127799999999835e-05, 5.11669999999978e-05, 5.181900000000156e-05, 5.130600000000096e-05, 5.188899999999941e-05, 5.177799999999885e-05, 5.111099999999952e-05, 5.145800000000075e-05, 5.158400000000035e-05, 5.113899999999866e-05, 5.168100000000134e-05, 5.179100000000242e-05, 5.147200000000032e-05, 5.174999999999971e-05, 5.195800000000125e-05, 5.174999999999971e-05, 5.133300000000063e-05, 5.194400000000168e-05, 5.124999999999921e-05, 5.148599999999989e-05, 5.1708000000001e-05, 5.155499999999827e-05, 5.1971999999997354e-05, 5.174999999999971e-05, 5.149999999999946e-05, 5.163900000000263e-05, 5.124999999999921e-05, 5.1443999999997714e-05, 5.194400000000168e-05, 5.149999999999946e-05, 5.127800000000182e-05]</msg>
<status status="PASS" starttime="20201029 18:19:08.805" endtime="20201029 18:19:08.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.800" endtime="20201029 18:19:08.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:08.811" endtime="20201029 18:19:08.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.810" endtime="20201029 18:19:08.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.809" endtime="20201029 18:19:08.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.449" endtime="20201029 18:19:08.832"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.448" endtime="20201029 18:19:08.832"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.841" endtime="20201029 18:19:08.864"></status>
</kw>
<msg timestamp="20201029 18:19:08.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.839" endtime="20201029 18:19:08.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:08.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:08.866" endtime="20201029 18:19:08.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.869" endtime="20201029 18:19:08.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.837" endtime="20201029 18:19:08.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.835" endtime="20201029 18:19:08.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:08.878" endtime="20201029 18:19:09.165"></status>
</kw>
<msg timestamp="20201029 18:19:09.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023192694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023244861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:08.877" endtime="20201029 18:19:09.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023192694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023244861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.171" endtime="20201029 18:19:09.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.182" endtime="20201029 18:19:09.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.874" endtime="20201029 18:19:09.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.872" endtime="20201029 18:19:09.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:09.191" level="INFO">${RESULT} = [{'diff': 5.21669999999988e-05}, {'diff': 5.237499999999687e-05}, {'diff': 5.261100000000102e-05}, {'diff': 5.287500000000084e-05}, {'diff': 5.308299999999891e-05}, {'diff': 5.262500000000059e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:09.186" endtime="20201029 18:19:09.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:09.195" level="INFO">${ACCURACY} = {'diff': [5.21669999999988e-05, 5.237499999999687e-05, 5.261100000000102e-05, 5.287500000000084e-05, 5.308299999999891e-05, 5.262500000000059e-05, 5.305499999999977e-05, 5.2443999999998714e-05, 5.2125...</msg>
<status status="PASS" starttime="20201029 18:19:09.192" endtime="20201029 18:19:09.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.200" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 18:19:09.199" endtime="20201029 18:19:09.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.202" level="INFO">VALUE: [5.21669999999988e-05, 5.237499999999687e-05, 5.261100000000102e-05, 5.287500000000084e-05, 5.308299999999891e-05, 5.262500000000059e-05, 5.305499999999977e-05, 5.2443999999998714e-05, 5.212500000000009e-05, 5.233299999999816e-05, 5.212500000000009e-05, 5.254200000000264e-05, 5.255599999999874e-05, 5.276400000000028e-05, 5.301400000000053e-05, 5.230600000000196e-05, 5.305599999999924e-05, 5.26669999999993e-05, 5.211099999999705e-05, 5.218099999999837e-05, 5.2665999999999824e-05, 5.300000000000096e-05, 5.2221999999997604e-05, 5.255499999999927e-05, 5.233299999999816e-05, 5.277799999999985e-05, 5.306899999999934e-05, 5.273600000000114e-05, 5.238899999999991e-05, 5.212500000000009e-05, 5.225000000000021e-05, 5.283300000000213e-05, 5.2485999999997424e-05, 5.2499999999996994e-05, 5.268099999999887e-05, 5.265299999999973e-05, 5.251400000000003e-05, 5.219500000000141e-05, 5.275000000000071e-05, 5.248600000000089e-05, 5.276400000000028e-05, 5.213899999999966e-05, 5.229199999999892e-05, 5.287500000000084e-05, 5.227799999999935e-05, 5.212500000000009e-05, 5.22080000000015e-05, 5.2929999999999644e-05, 5.275000000000071e-05, 5.288900000000041e-05]</msg>
<status status="PASS" starttime="20201029 18:19:09.201" endtime="20201029 18:19:09.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.196" endtime="20201029 18:19:09.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:09.208" endtime="20201029 18:19:09.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.207" endtime="20201029 18:19:09.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.205" endtime="20201029 18:19:09.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.833" endtime="20201029 18:19:09.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:08.832" endtime="20201029 18:19:09.229"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.237" endtime="20201029 18:19:09.256"></status>
</kw>
<msg timestamp="20201029 18:19:09.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.236" endtime="20201029 18:19:09.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.257" endtime="20201029 18:19:09.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.260" endtime="20201029 18:19:09.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.233" endtime="20201029 18:19:09.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.231" endtime="20201029 18:19:09.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.269" endtime="20201029 18:19:09.553"></status>
</kw>
<msg timestamp="20201029 18:19:09.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019633236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019687222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.267" endtime="20201029 18:19:09.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019633236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019687222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.558" endtime="20201029 18:19:09.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.566" endtime="20201029 18:19:09.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.265" endtime="20201029 18:19:09.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.263" endtime="20201029 18:19:09.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:09.573" level="INFO">${RESULT} = [{'diff': 5.398600000000239e-05}, {'diff': 5.383299999999966e-05}, {'diff': 5.3944000000000214e-05}, {'diff': 5.404200000000067e-05}, {'diff': 5.3999999999998494e-05}, {'diff': 5.3179999999999894e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:09.569" endtime="20201029 18:19:09.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:09.578" level="INFO">${ACCURACY} = {'diff': [5.398600000000239e-05, 5.383299999999966e-05, 5.3944000000000214e-05, 5.404200000000067e-05, 5.3999999999998494e-05, 5.3179999999999894e-05, 5.313899999999719e-05, 5.3235999999998174e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:19:09.574" endtime="20201029 18:19:09.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.582" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 18:19:09.581" endtime="20201029 18:19:09.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.584" level="INFO">VALUE: [5.398600000000239e-05, 5.383299999999966e-05, 5.3944000000000214e-05, 5.404200000000067e-05, 5.3999999999998494e-05, 5.3179999999999894e-05, 5.313899999999719e-05, 5.3235999999998174e-05, 5.361199999999802e-05, 5.350000000000146e-05, 5.404200000000067e-05, 5.369499999999944e-05, 5.344499999999919e-05, 5.368099999999987e-05, 5.319499999999894e-05, 5.3513999999997564e-05, 5.343099999999962e-05, 5.382000000000303e-05, 5.36670000000003e-05, 5.355500000000027e-05, 5.358300000000288e-05, 5.3485999999998424e-05, 5.391700000000055e-05, 5.376400000000128e-05, 5.333299999999916e-05, 5.3652000000001254e-05, 5.4013999999998064e-05, 5.326400000000078e-05, 5.3944000000000214e-05, 5.3693999999999964e-05, 5.401400000000153e-05, 5.404200000000067e-05, 5.312500000000109e-05, 5.344499999999919e-05, 5.376400000000128e-05, 5.365300000000073e-05, 5.33340000000021e-05, 5.309699999999848e-05, 5.384699999999923e-05, 5.4013999999998064e-05, 5.31669999999998e-05, 5.408299999999991e-05, 5.404200000000067e-05, 5.337500000000134e-05, 5.402700000000163e-05, 5.356899999999984e-05, 5.390300000000098e-05, 5.383300000000313e-05, 5.3485999999998424e-05, 5.3777999999997383e-05]</msg>
<status status="PASS" starttime="20201029 18:19:09.583" endtime="20201029 18:19:09.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.578" endtime="20201029 18:19:09.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:09.589" endtime="20201029 18:19:09.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.588" endtime="20201029 18:19:09.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.587" endtime="20201029 18:19:09.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.230" endtime="20201029 18:19:09.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.229" endtime="20201029 18:19:09.610"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.619" endtime="20201029 18:19:09.637"></status>
</kw>
<msg timestamp="20201029 18:19:09.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.617" endtime="20201029 18:19:09.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:09.639" endtime="20201029 18:19:09.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.641" endtime="20201029 18:19:09.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.614" endtime="20201029 18:19:09.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.612" endtime="20201029 18:19:09.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.653" endtime="20201029 18:19:09.950"></status>
</kw>
<msg timestamp="20201029 18:19:09.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019784125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.651" endtime="20201029 18:19:09.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019729306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019784125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:09.954" endtime="20201029 18:19:09.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:09.962" endtime="20201029 18:19:09.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.648" endtime="20201029 18:19:09.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.646" endtime="20201029 18:19:09.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:09.969" level="INFO">${RESULT} = [{'diff': 5.481900000000109e-05}, {'diff': 5.491700000000155e-05}, {'diff': 5.480500000000152e-05}, {'diff': 5.4693999999997495e-05}, {'diff': 5.4749999999999244e-05}, {'diff': 5.4221999999999604e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:09.966" endtime="20201029 18:19:09.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:09.973" level="INFO">${ACCURACY} = {'diff': [5.481900000000109e-05, 5.491700000000155e-05, 5.480500000000152e-05, 5.4693999999997495e-05, 5.4749999999999244e-05, 5.4221999999999604e-05, 5.4680000000001394e-05, 5.4208000000000034e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:19:09.970" endtime="20201029 18:19:09.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.977" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 18:19:09.976" endtime="20201029 18:19:09.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:09.980" level="INFO">VALUE: [5.481900000000109e-05, 5.491700000000155e-05, 5.480500000000152e-05, 5.4693999999997495e-05, 5.4749999999999244e-05, 5.4221999999999604e-05, 5.4680000000001394e-05, 5.4208000000000034e-05, 5.4958000000000784e-05, 5.490299999999851e-05, 5.4249999999998744e-05, 5.438900000000191e-05, 5.465300000000173e-05, 5.451400000000203e-05, 5.5013999999999064e-05, 5.4208000000000034e-05, 5.4249999999998744e-05, 5.506999999999734e-05, 5.501299999999959e-05, 5.431900000000059e-05, 5.4208000000000034e-05, 5.45549999999978e-05, 5.463899999999869e-05, 5.4235999999999174e-05, 5.4499999999998994e-05, 5.4444000000000714e-05, 5.430499999999755e-05, 5.434699999999973e-05, 5.450000000000246e-05, 5.479200000000142e-05, 5.4763999999998814e-05, 5.494500000000069e-05, 5.412500000000209e-05, 5.488899999999894e-05, 5.469500000000044e-05, 5.4249999999998744e-05, 5.4763999999998814e-05, 5.44730000000028e-05, 5.46809999999974e-05, 5.472299999999958e-05, 5.4651999999998785e-05, 5.411199999999852e-05, 5.507000000000081e-05, 5.4887999999999465e-05, 5.4458000000000284e-05, 5.477800000000185e-05, 5.4221999999999604e-05, 5.487500000000284e-05, 5.4221999999999604e-05, 5.4457999999996815e-05]</msg>
<status status="PASS" starttime="20201029 18:19:09.978" endtime="20201029 18:19:09.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.974" endtime="20201029 18:19:09.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:09.984" endtime="20201029 18:19:10.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.983" endtime="20201029 18:19:10.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.982" endtime="20201029 18:19:10.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.611" endtime="20201029 18:19:10.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:09.610" endtime="20201029 18:19:10.005"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.014" endtime="20201029 18:19:10.032"></status>
</kw>
<msg timestamp="20201029 18:19:10.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.012" endtime="20201029 18:19:10.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.034" endtime="20201029 18:19:10.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.036" endtime="20201029 18:19:10.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.010" endtime="20201029 18:19:10.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.008" endtime="20201029 18:19:10.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.045" endtime="20201029 18:19:10.331"></status>
</kw>
<msg timestamp="20201029 18:19:10.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020465125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020520819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.044" endtime="20201029 18:19:10.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020465125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020520819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.335" endtime="20201029 18:19:10.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.343" endtime="20201029 18:19:10.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.041" endtime="20201029 18:19:10.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.040" endtime="20201029 18:19:10.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:10.350" level="INFO">${RESULT} = [{'diff': 5.5693999999998495e-05}, {'diff': 5.5486000000000424e-05}, {'diff': 5.566699999999883e-05}, {'diff': 5.5721999999997635e-05}, {'diff': 5.5458000000001284e-05}, {'diff': 5.583299999999819e-05...</msg>
<status status="PASS" starttime="20201029 18:19:10.347" endtime="20201029 18:19:10.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:10.354" level="INFO">${ACCURACY} = {'diff': [5.5693999999998495e-05, 5.5486000000000424e-05, 5.566699999999883e-05, 5.5721999999997635e-05, 5.5458000000001284e-05, 5.583299999999819e-05, 5.530499999999855e-05, 5.588899999999994e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:19:10.351" endtime="20201029 18:19:10.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.358" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 18:19:10.357" endtime="20201029 18:19:10.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.361" level="INFO">VALUE: [5.5693999999998495e-05, 5.5486000000000424e-05, 5.566699999999883e-05, 5.5721999999997635e-05, 5.5458000000001284e-05, 5.583299999999819e-05, 5.530499999999855e-05, 5.588899999999994e-05, 5.565300000000273e-05, 5.551400000000303e-05, 5.5694000000001964e-05, 5.5472000000000854e-05, 5.530500000000202e-05, 5.563899999999969e-05, 5.593099999999865e-05, 5.5805999999998523e-05, 5.580600000000199e-05, 5.58610000000008e-05, 5.51670000000018e-05, 5.547300000000033e-05, 5.5305999999998023e-05, 5.530600000000149e-05, 5.581999999999809e-05, 5.5513999999999564e-05, 5.537499999999987e-05, 5.5513999999999564e-05, 5.512499999999962e-05, 5.593099999999865e-05, 5.590299999999951e-05, 5.533299999999769e-05, 5.5930000000002644e-05, 5.5179999999998425e-05, 5.5194000000001464e-05, 5.5208000000001034e-05, 5.537499999999987e-05, 5.5486000000000424e-05, 5.5458000000001284e-05, 5.51670000000018e-05, 5.583300000000166e-05, 5.607000000000181e-05, 5.5750000000000244e-05, 5.533400000000063e-05, 5.5415999999999105e-05, 5.555600000000174e-05, 5.588899999999994e-05, 5.5486000000000424e-05, 5.6000000000000494e-05, 5.581999999999809e-05, 5.531899999999812e-05, 5.594500000000169e-05]</msg>
<status status="PASS" starttime="20201029 18:19:10.360" endtime="20201029 18:19:10.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.355" endtime="20201029 18:19:10.363"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:10.367" endtime="20201029 18:19:10.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.365" endtime="20201029 18:19:10.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.364" endtime="20201029 18:19:10.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.006" endtime="20201029 18:19:10.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.006" endtime="20201029 18:19:10.387"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.396" endtime="20201029 18:19:10.414"></status>
</kw>
<msg timestamp="20201029 18:19:10.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.394" endtime="20201029 18:19:10.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.416" endtime="20201029 18:19:10.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.418" endtime="20201029 18:19:10.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.392" endtime="20201029 18:19:10.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.390" endtime="20201029 18:19:10.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.427" endtime="20201029 18:19:10.728"></status>
</kw>
<msg timestamp="20201029 18:19:10.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01947825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019534833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:10.425" endtime="20201029 18:19:10.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01947825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019534833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:10.732" endtime="20201029 18:19:10.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.740" endtime="20201029 18:19:10.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.423" endtime="20201029 18:19:10.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.421" endtime="20201029 18:19:10.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:10.747" level="INFO">${RESULT} = [{'diff': 5.658300000000241e-05}, {'diff': 5.6236000000001174e-05}, {'diff': 5.637500000000087e-05}, {'diff': 5.7042000000000204e-05}, {'diff': 5.7055999999999774e-05}, {'diff': 5.687500000000137e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:10.743" endtime="20201029 18:19:10.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:10.751" level="INFO">${ACCURACY} = {'diff': [5.658300000000241e-05, 5.6236000000001174e-05, 5.637500000000087e-05, 5.7042000000000204e-05, 5.7055999999999774e-05, 5.687500000000137e-05, 5.669499999999897e-05, 5.613900000000019e-05, 5.6...</msg>
<status status="PASS" starttime="20201029 18:19:10.747" endtime="20201029 18:19:10.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.756" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 18:19:10.755" endtime="20201029 18:19:10.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.758" level="INFO">VALUE: [5.658300000000241e-05, 5.6236000000001174e-05, 5.637500000000087e-05, 5.7042000000000204e-05, 5.7055999999999774e-05, 5.687500000000137e-05, 5.669499999999897e-05, 5.613900000000019e-05, 5.662499999999765e-05, 5.683399999999866e-05, 5.6569999999998843e-05, 5.693099999999965e-05, 5.6236000000001174e-05, 5.6500000000000994e-05, 5.613900000000019e-05, 5.612500000000062e-05, 5.6693999999999495e-05, 5.6958000000002784e-05, 5.6791999999999954e-05, 5.638900000000044e-05, 5.65549999999998e-05, 5.641699999999958e-05, 5.63610000000013e-05, 5.688899999999747e-05, 5.6750000000001244e-05, 5.6541999999999704e-05, 5.6193999999998995e-05, 5.641699999999958e-05, 5.6736000000001674e-05, 5.669499999999897e-05, 5.6750000000001244e-05, 5.706899999999987e-05, 5.638900000000044e-05, 5.619500000000194e-05, 5.666699999999983e-05, 5.612500000000062e-05, 5.66809999999994e-05, 5.658299999999894e-05, 5.632000000000206e-05, 5.677700000000091e-05, 5.672300000000158e-05, 5.609700000000148e-05, 5.706899999999987e-05, 5.6693999999999495e-05, 5.7000000000001494e-05, 5.6305999999999023e-05, 5.6763999999997344e-05, 5.615299999999976e-05, 5.6957999999999315e-05, 5.661099999999808e-05]</msg>
<status status="PASS" starttime="20201029 18:19:10.757" endtime="20201029 18:19:10.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.752" endtime="20201029 18:19:10.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:10.763" endtime="20201029 18:19:10.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.762" endtime="20201029 18:19:10.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.761" endtime="20201029 18:19:10.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.388" endtime="20201029 18:19:10.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.388" endtime="20201029 18:19:10.784"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.792" endtime="20201029 18:19:10.812"></status>
</kw>
<msg timestamp="20201029 18:19:10.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.791" endtime="20201029 18:19:10.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:10.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:10.813" endtime="20201029 18:19:10.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.816" endtime="20201029 18:19:10.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.788" endtime="20201029 18:19:10.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.786" endtime="20201029 18:19:10.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:10.825" endtime="20201029 18:19:11.112"></status>
</kw>
<msg timestamp="20201029 18:19:11.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019532375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:10.823" endtime="20201029 18:19:11.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019532375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.116" endtime="20201029 18:19:11.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.125" endtime="20201029 18:19:11.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.821" endtime="20201029 18:19:11.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.819" endtime="20201029 18:19:11.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:11.131" level="INFO">${RESULT} = [{'diff': 5.7306000000000024e-05}, {'diff': 5.7402000000001535e-05}, {'diff': 5.7444000000000245e-05}, {'diff': 5.80550000000013e-05}, {'diff': 5.7763999999998344e-05}, {'diff': 5.7943999999997275e-05...</msg>
<status status="PASS" starttime="20201029 18:19:11.128" endtime="20201029 18:19:11.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:11.135" level="INFO">${ACCURACY} = {'diff': [5.7306000000000024e-05, 5.7402000000001535e-05, 5.7444000000000245e-05, 5.80550000000013e-05, 5.7763999999998344e-05, 5.7943999999997275e-05, 5.806900000000087e-05, 5.763899999999822e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:19:11.132" endtime="20201029 18:19:11.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.139" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 18:19:11.138" endtime="20201029 18:19:11.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.142" level="INFO">VALUE: [5.7306000000000024e-05, 5.7402000000001535e-05, 5.7444000000000245e-05, 5.80550000000013e-05, 5.7763999999998344e-05, 5.7943999999997275e-05, 5.806900000000087e-05, 5.763899999999822e-05, 5.8027999999998164e-05, 5.7429999999997206e-05, 5.736099999999883e-05, 5.78749999999989e-05, 5.7457999999999815e-05, 5.7514000000001564e-05, 5.761099999999908e-05, 5.797300000000283e-05, 5.761099999999908e-05, 5.794500000000022e-05, 5.738900000000144e-05, 5.7721999999999635e-05, 5.786099999999933e-05, 5.802699999999869e-05, 5.7055999999999774e-05, 5.809700000000001e-05, 5.779100000000148e-05, 5.80550000000013e-05, 5.7694000000000495e-05, 5.7180000000000425e-05, 5.731900000000012e-05, 5.7249999999998274e-05, 5.765300000000126e-05, 5.73749999999984e-05, 5.7485999999998955e-05, 5.7180000000000425e-05, 5.788899999999847e-05, 5.711099999999858e-05, 5.716700000000033e-05, 5.784699999999976e-05, 5.8028000000001634e-05, 5.715300000000076e-05, 5.790300000000151e-05, 5.8000000000002494e-05, 5.779099999999801e-05, 5.7820000000000094e-05, 5.762500000000212e-05, 5.7665999999997886e-05, 5.7930000000001175e-05, 5.737500000000187e-05, 5.706899999999987e-05, 5.731900000000012e-05]</msg>
<status status="PASS" starttime="20201029 18:19:11.140" endtime="20201029 18:19:11.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.136" endtime="20201029 18:19:11.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:11.147" endtime="20201029 18:19:11.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.145" endtime="20201029 18:19:11.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.144" endtime="20201029 18:19:11.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.785" endtime="20201029 18:19:11.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:10.784" endtime="20201029 18:19:11.167"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.176" endtime="20201029 18:19:11.196"></status>
</kw>
<msg timestamp="20201029 18:19:11.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.175" endtime="20201029 18:19:11.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.197" endtime="20201029 18:19:11.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.200" endtime="20201029 18:19:11.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.172" endtime="20201029 18:19:11.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.170" endtime="20201029 18:19:11.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.209" endtime="20201029 18:19:11.494"></status>
</kw>
<msg timestamp="20201029 18:19:11.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020644292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020702625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.207" endtime="20201029 18:19:11.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020644292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020702625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.498" endtime="20201029 18:19:11.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.507" endtime="20201029 18:19:11.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.205" endtime="20201029 18:19:11.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.203" endtime="20201029 18:19:11.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:11.513" level="INFO">${RESULT} = [{'diff': 5.833299999999722e-05}, {'diff': 5.88749999999999e-05}, {'diff': 5.9084000000000914e-05}, {'diff': 5.838899999999897e-05}, {'diff': 5.8292000000001454e-05}, {'diff': 5.869500000000097e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:19:11.510" endtime="20201029 18:19:11.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:11.517" level="INFO">${ACCURACY} = {'diff': [5.833299999999722e-05, 5.88749999999999e-05, 5.9084000000000914e-05, 5.838899999999897e-05, 5.8292000000001454e-05, 5.869500000000097e-05, 5.8208000000000565e-05, 5.854099999999876e-05, 5.84...</msg>
<status status="PASS" starttime="20201029 18:19:11.514" endtime="20201029 18:19:11.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.521" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 18:19:11.521" endtime="20201029 18:19:11.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.524" level="INFO">VALUE: [5.833299999999722e-05, 5.88749999999999e-05, 5.9084000000000914e-05, 5.838899999999897e-05, 5.8292000000001454e-05, 5.869500000000097e-05, 5.8208000000000565e-05, 5.854099999999876e-05, 5.8499999999999525e-05, 5.8972000000000885e-05, 5.8430000000001675e-05, 5.8208000000000565e-05, 5.890299999999904e-05, 5.8249999999999275e-05, 5.8693999999998026e-05, 5.8193999999997525e-05, 5.8513999999999095e-05, 5.8930000000002175e-05, 5.8194000000000995e-05, 5.8541999999998234e-05, 5.840299999999854e-05, 5.8806000000001524e-05, 5.838900000000244e-05, 5.8736000000000205e-05, 5.8249999999999275e-05, 5.820900000000004e-05, 5.8347999999999733e-05, 5.895900000000079e-05, 5.8915999999999136e-05, 5.831899999999765e-05, 5.901300000000012e-05, 5.8637999999999746e-05, 5.905499999999883e-05, 5.8791999999998484e-05, 5.80689999999974e-05, 5.862499999999965e-05, 5.833300000000069e-05, 5.8444000000001245e-05, 5.88749999999999e-05, 5.85550000000018e-05, 5.9027999999999164e-05, 5.88749999999999e-05, 5.840299999999854e-05, 5.8749999999999775e-05, 5.861100000000008e-05, 5.8250000000002744e-05, 5.893100000000165e-05, 5.869500000000097e-05, 5.8235999999999705e-05, 5.86949999999975e-05]</msg>
<status status="PASS" starttime="20201029 18:19:11.523" endtime="20201029 18:19:11.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.518" endtime="20201029 18:19:11.526"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:11.530" endtime="20201029 18:19:11.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.529" endtime="20201029 18:19:11.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.527" endtime="20201029 18:19:11.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.168" endtime="20201029 18:19:11.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.168" endtime="20201029 18:19:11.551"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.559" endtime="20201029 18:19:11.577"></status>
</kw>
<msg timestamp="20201029 18:19:11.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.558" endtime="20201029 18:19:11.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.579" endtime="20201029 18:19:11.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.581" endtime="20201029 18:19:11.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.555" endtime="20201029 18:19:11.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.553" endtime="20201029 18:19:11.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.590" endtime="20201029 18:19:11.877"></status>
</kw>
<msg timestamp="20201029 18:19:11.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019506139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019565764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.589" endtime="20201029 18:19:11.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019506139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019565764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.881" endtime="20201029 18:19:11.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.889" endtime="20201029 18:19:11.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.586" endtime="20201029 18:19:11.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.585" endtime="20201029 18:19:11.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:11.896" level="INFO">${RESULT} = [{'diff': 5.962500000000065e-05}, {'diff': 5.9862000000000803e-05}, {'diff': 5.9499999999997055e-05}, {'diff': 5.9749999999997305e-05}, {'diff': 6.005499999999983e-05}, {'diff': 5.962500000000065e-05}...</msg>
<status status="PASS" starttime="20201029 18:19:11.893" endtime="20201029 18:19:11.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:11.901" level="INFO">${ACCURACY} = {'diff': [5.962500000000065e-05, 5.9862000000000803e-05, 5.9499999999997055e-05, 5.9749999999997305e-05, 6.005499999999983e-05, 5.962500000000065e-05, 5.983299999999872e-05, 6.0000000000001025e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:19:11.897" endtime="20201029 18:19:11.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.905" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 18:19:11.904" endtime="20201029 18:19:11.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.908" level="INFO">VALUE: [5.962500000000065e-05, 5.9862000000000803e-05, 5.9499999999997055e-05, 5.9749999999997305e-05, 6.005499999999983e-05, 5.962500000000065e-05, 5.983299999999872e-05, 6.0000000000001025e-05, 5.912500000000015e-05, 5.934700000000126e-05, 5.980499999999958e-05, 5.9707999999998596e-05, 5.983300000000219e-05, 5.947299999999739e-05, 5.911100000000058e-05, 5.9693999999999026e-05, 5.9569999999998374e-05, 5.9486000000000955e-05, 5.9750000000000775e-05, 5.9277999999999414e-05, 5.9334000000001164e-05, 5.916700000000233e-05, 5.9263999999999845e-05, 6.005499999999983e-05, 5.929099999999951e-05, 5.9415999999999636e-05, 5.9499999999997055e-05, 5.9749999999997305e-05, 5.965299999999979e-05, 5.9777999999999915e-05, 5.9250000000000275e-05, 5.952700000000019e-05, 5.9457999999998346e-05, 6.0055999999999304e-05, 5.915300000000276e-05, 5.9820000000002094e-05, 5.962499999999718e-05, 5.9999999999997555e-05, 5.962500000000065e-05, 5.9500000000000525e-05, 5.936100000000083e-05, 5.9472000000001385e-05, 5.9848000000001234e-05, 5.968099999999893e-05, 5.9443999999998776e-05, 5.9499999999997055e-05, 6.00689999999994e-05, 5.98750000000009e-05, 5.930499999999908e-05, 5.9514000000000095e-05]</msg>
<status status="PASS" starttime="20201029 18:19:11.906" endtime="20201029 18:19:11.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.902" endtime="20201029 18:19:11.913"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:11.917" endtime="20201029 18:19:11.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.915" endtime="20201029 18:19:11.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.914" endtime="20201029 18:19:11.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.551" endtime="20201029 18:19:11.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.551" endtime="20201029 18:19:11.937"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.946" endtime="20201029 18:19:11.965"></status>
</kw>
<msg timestamp="20201029 18:19:11.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.944" endtime="20201029 18:19:11.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:11.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:11.968" endtime="20201029 18:19:11.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.972" endtime="20201029 18:19:11.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.942" endtime="20201029 18:19:11.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.940" endtime="20201029 18:19:11.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:11.985" endtime="20201029 18:19:12.288"></status>
</kw>
<msg timestamp="20201029 18:19:12.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019518181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019579139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:11.983" endtime="20201029 18:19:12.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019518181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019579139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.292" endtime="20201029 18:19:12.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.301" endtime="20201029 18:19:12.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.980" endtime="20201029 18:19:12.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.978" endtime="20201029 18:19:12.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:12.308" level="INFO">${RESULT} = [{'diff': 6.0957999999999846e-05}, {'diff': 6.06949999999995e-05}, {'diff': 6.0985999999998985e-05}, {'diff': 6.0430000000000206e-05}, {'diff': 6.043099999999968e-05}, {'diff': 6.018099999999943e-05},...</msg>
<status status="PASS" starttime="20201029 18:19:12.304" endtime="20201029 18:19:12.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:12.312" level="INFO">${ACCURACY} = {'diff': [6.0957999999999846e-05, 6.06949999999995e-05, 6.0985999999998985e-05, 6.0430000000000206e-05, 6.043099999999968e-05, 6.018099999999943e-05, 6.0694000000000026e-05, 6.0806000000000054e-05, 6....</msg>
<status status="PASS" starttime="20201029 18:19:12.309" endtime="20201029 18:19:12.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.316" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 18:19:12.315" endtime="20201029 18:19:12.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.319" level="INFO">VALUE: [6.0957999999999846e-05, 6.06949999999995e-05, 6.0985999999998985e-05, 6.0430000000000206e-05, 6.043099999999968e-05, 6.018099999999943e-05, 6.0694000000000026e-05, 6.0806000000000054e-05, 6.080499999999711e-05, 6.0806000000000054e-05, 6.0763999999997875e-05, 6.0930000000000706e-05, 6.0764000000001345e-05, 6.0999999999998555e-05, 6.065300000000079e-05, 6.1027999999997695e-05, 6.0236000000001705e-05, 6.0514000000001095e-05, 6.0694000000000026e-05, 6.095899999999932e-05, 6.0500000000001525e-05, 6.0528000000000665e-05, 6.094499999999975e-05, 6.0500000000001525e-05, 6.0500000000001525e-05, 6.0166000000000386e-05, 6.0750000000001775e-05, 6.0999999999998555e-05, 6.0236000000001705e-05, 6.03889999999975e-05, 6.0221999999998665e-05, 6.081900000000015e-05, 6.106899999999693e-05, 6.0194999999999e-05, 6.0250000000001275e-05, 6.0333999999998694e-05, 6.0778000000000915e-05, 6.094499999999975e-05, 6.0957999999999846e-05, 6.06949999999995e-05, 6.0999999999998555e-05, 6.044499999999925e-05, 6.018099999999943e-05, 6.0569999999999374e-05, 6.0806000000000054e-05, 6.055500000000033e-05, 6.0806000000000054e-05, 6.097299999999889e-05, 6.0457999999999346e-05, 6.026300000000137e-05]</msg>
<status status="PASS" starttime="20201029 18:19:12.318" endtime="20201029 18:19:12.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.313" endtime="20201029 18:19:12.320"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:12.324" endtime="20201029 18:19:12.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.322" endtime="20201029 18:19:12.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.321" endtime="20201029 18:19:12.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.938" endtime="20201029 18:19:12.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:11.938" endtime="20201029 18:19:12.345"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.354" endtime="20201029 18:19:12.376"></status>
</kw>
<msg timestamp="20201029 18:19:12.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.352" endtime="20201029 18:19:12.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.377" endtime="20201029 18:19:12.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.380" endtime="20201029 18:19:12.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.349" endtime="20201029 18:19:12.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.347" endtime="20201029 18:19:12.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.389" endtime="20201029 18:19:12.676"></status>
</kw>
<msg timestamp="20201029 18:19:12.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023219, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023280444, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:12.388" endtime="20201029 18:19:12.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023219, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023280444, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:19:12.680" endtime="20201029 18:19:12.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.688" endtime="20201029 18:19:12.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.385" endtime="20201029 18:19:12.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.383" endtime="20201029 18:19:12.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:12.696" level="INFO">${RESULT} = [{'diff': 6.144400000000078e-05}, {'diff': 6.172200000000017e-05}, {'diff': 6.166699999999789e-05}, {'diff': 6.187499999999943e-05}, {'diff': 6.183300000000072e-05}, {'diff': 6.130499999999761e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:12.692" endtime="20201029 18:19:12.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:12.701" level="INFO">${ACCURACY} = {'diff': [6.144400000000078e-05, 6.172200000000017e-05, 6.166699999999789e-05, 6.187499999999943e-05, 6.183300000000072e-05, 6.130499999999761e-05, 6.202800000000216e-05, 6.19300000000017e-05, 6.12920...</msg>
<status status="PASS" starttime="20201029 18:19:12.697" endtime="20201029 18:19:12.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.705" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 18:19:12.704" endtime="20201029 18:19:12.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.708" level="INFO">VALUE: [6.144400000000078e-05, 6.172200000000017e-05, 6.166699999999789e-05, 6.187499999999943e-05, 6.183300000000072e-05, 6.130499999999761e-05, 6.202800000000216e-05, 6.19300000000017e-05, 6.129200000000098e-05, 6.147199999999992e-05, 6.141700000000111e-05, 6.187499999999943e-05, 6.180600000000105e-05, 6.180600000000105e-05, 6.13339999999997e-05, 6.151399999999863e-05, 6.144500000000025e-05, 6.187499999999943e-05, 6.17080000000006e-05, 6.209700000000054e-05, 6.177699999999897e-05, 6.191700000000161e-05, 6.202699999999922e-05, 6.199999999999956e-05, 6.201399999999913e-05, 6.144400000000078e-05, 6.127799999999795e-05, 6.181900000000115e-05, 6.123599999999924e-05, 6.130499999999761e-05, 6.145800000000035e-05, 6.129200000000098e-05, 6.20560000000013e-05, 6.175000000000277e-05, 6.111099999999911e-05, 6.163900000000222e-05, 6.1195e-05, 6.176399999999888e-05, 6.113899999999825e-05, 6.15560000000008e-05, 6.137499999999893e-05, 6.116699999999739e-05, 6.148599999999949e-05, 6.17499999999993e-05, 6.190299999999857e-05, 6.190299999999857e-05, 6.119400000000053e-05, 6.17499999999993e-05, 6.113900000000172e-05, 6.194400000000128e-05]</msg>
<status status="PASS" starttime="20201029 18:19:12.706" endtime="20201029 18:19:12.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.702" endtime="20201029 18:19:12.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:12.714" endtime="20201029 18:19:12.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.712" endtime="20201029 18:19:12.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.711" endtime="20201029 18:19:12.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.346" endtime="20201029 18:19:12.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.345" endtime="20201029 18:19:12.735"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.744" endtime="20201029 18:19:12.763"></status>
</kw>
<msg timestamp="20201029 18:19:12.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.742" endtime="20201029 18:19:12.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:12.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:12.765" endtime="20201029 18:19:12.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.768" endtime="20201029 18:19:12.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.739" endtime="20201029 18:19:12.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.737" endtime="20201029 18:19:12.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:12.777" endtime="20201029 18:19:13.063"></status>
</kw>
<msg timestamp="20201029 18:19:13.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020140181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020202903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:12.775" endtime="20201029 18:19:13.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020140181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020202903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.067" endtime="20201029 18:19:13.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.076" endtime="20201029 18:19:13.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.773" endtime="20201029 18:19:13.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.771" endtime="20201029 18:19:13.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:13.082" level="INFO">${RESULT} = [{'diff': 6.272200000000117e-05}, {'diff': 6.231999999999766e-05}, {'diff': 6.261100000000061e-05}, {'diff': 6.277699999999997e-05}, {'diff': 6.286200000000033e-05}, {'diff': 6.238800000000003e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:13.079" endtime="20201029 18:19:13.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:13.087" level="INFO">${ACCURACY} = {'diff': [6.272200000000117e-05, 6.231999999999766e-05, 6.261100000000061e-05, 6.277699999999997e-05, 6.286200000000033e-05, 6.238800000000003e-05, 6.24019999999996e-05, 6.2889e-05, 6.242999999999874e...</msg>
<status status="PASS" starttime="20201029 18:19:13.083" endtime="20201029 18:19:13.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.092" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 18:19:13.091" endtime="20201029 18:19:13.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.095" level="INFO">VALUE: [6.272200000000117e-05, 6.231999999999766e-05, 6.261100000000061e-05, 6.277699999999997e-05, 6.286200000000033e-05, 6.238800000000003e-05, 6.24019999999996e-05, 6.2889e-05, 6.242999999999874e-05, 6.22499999999998e-05, 6.276399999999988e-05, 6.281899999999868e-05, 6.259700000000104e-05, 6.231899999999818e-05, 6.2889e-05, 6.226399999999938e-05, 6.263899999999975e-05, 6.299999999999709e-05, 6.262500000000018e-05, 6.263899999999975e-05, 6.287500000000043e-05, 6.293099999999871e-05, 6.25560000000018e-05, 6.295899999999785e-05, 6.300000000000056e-05, 6.241700000000211e-05, 6.24300000000022e-05, 6.20829999999975e-05, 6.24300000000022e-05, 6.240300000000254e-05, 6.292999999999924e-05, 6.241700000000211e-05, 6.245799999999788e-05, 6.297199999999795e-05, 6.280500000000258e-05, 6.299999999999709e-05, 6.276400000000334e-05, 6.227799999999895e-05, 6.261099999999714e-05, 6.284699999999782e-05, 6.22089999999971e-05, 6.218100000000143e-05, 6.241700000000211e-05, 6.295899999999785e-05, 6.269499999999803e-05, 6.283399999999773e-05, 6.213799999999978e-05, 6.250000000000006e-05, 6.290299999999957e-05, 6.273600000000074e-05]</msg>
<status status="PASS" starttime="20201029 18:19:13.093" endtime="20201029 18:19:13.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.088" endtime="20201029 18:19:13.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:13.100" endtime="20201029 18:19:13.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.098" endtime="20201029 18:19:13.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.097" endtime="20201029 18:19:13.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.736" endtime="20201029 18:19:13.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:12.735" endtime="20201029 18:19:13.120"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.129" endtime="20201029 18:19:13.149"></status>
</kw>
<msg timestamp="20201029 18:19:13.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.128" endtime="20201029 18:19:13.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.150" endtime="20201029 18:19:13.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.153" endtime="20201029 18:19:13.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.125" endtime="20201029 18:19:13.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.123" endtime="20201029 18:19:13.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.162" endtime="20201029 18:19:13.450"></status>
</kw>
<msg timestamp="20201029 18:19:13.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020168931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.160" endtime="20201029 18:19:13.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020168931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.454" endtime="20201029 18:19:13.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.463" endtime="20201029 18:19:13.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.158" endtime="20201029 18:19:13.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.156" endtime="20201029 18:19:13.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:13.469" level="INFO">${RESULT} = [{'diff': 6.409699999999907e-05}, {'diff': 6.404200000000027e-05}, {'diff': 6.369499999999903e-05}, {'diff': 6.318099999999896e-05}, {'diff': 6.405599999999984e-05}, {'diff': 6.319499999999853e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:13.466" endtime="20201029 18:19:13.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:13.474" level="INFO">${ACCURACY} = {'diff': [6.409699999999907e-05, 6.404200000000027e-05, 6.369499999999903e-05, 6.318099999999896e-05, 6.405599999999984e-05, 6.319499999999853e-05, 6.401300000000165e-05, 6.388799999999806e-05, 6.3264...</msg>
<status status="PASS" starttime="20201029 18:19:13.470" endtime="20201029 18:19:13.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.478" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 18:19:13.477" endtime="20201029 18:19:13.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.481" level="INFO">VALUE: [6.409699999999907e-05, 6.404200000000027e-05, 6.369499999999903e-05, 6.318099999999896e-05, 6.405599999999984e-05, 6.319499999999853e-05, 6.401300000000165e-05, 6.388799999999806e-05, 6.326400000000038e-05, 6.379200000000002e-05, 6.318000000000296e-05, 6.333300000000222e-05, 6.337500000000093e-05, 6.356899999999943e-05, 6.406899999999993e-05, 6.318099999999896e-05, 6.33890000000005e-05, 6.3889000000001e-05, 6.384700000000229e-05, 6.33890000000005e-05, 6.329199999999952e-05, 6.405599999999984e-05, 6.333399999999823e-05, 6.387500000000143e-05, 6.315299999999982e-05, 6.311100000000111e-05, 6.363900000000075e-05, 6.368099999999946e-05, 6.369399999999956e-05, 6.317999999999949e-05, 6.337500000000093e-05, 6.336100000000136e-05, 6.370799999999913e-05, 6.372200000000217e-05, 6.336099999999789e-05, 6.363800000000128e-05, 6.327799999999995e-05, 6.401400000000113e-05, 6.32500000000008e-05, 6.358400000000194e-05, 6.394499999999928e-05, 6.355599999999934e-05, 6.409699999999907e-05, 6.333399999999823e-05, 6.344500000000225e-05, 6.386200000000133e-05, 6.370799999999913e-05, 6.392999999999677e-05, 6.365300000000032e-05, 6.383300000000272e-05]</msg>
<status status="PASS" starttime="20201029 18:19:13.480" endtime="20201029 18:19:13.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.475" endtime="20201029 18:19:13.482"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:13.486" endtime="20201029 18:19:13.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.484" endtime="20201029 18:19:13.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.483" endtime="20201029 18:19:13.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.121" endtime="20201029 18:19:13.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.121" endtime="20201029 18:19:13.507"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.516" endtime="20201029 18:19:13.535"></status>
</kw>
<msg timestamp="20201029 18:19:13.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.514" endtime="20201029 18:19:13.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.537" endtime="20201029 18:19:13.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.539" endtime="20201029 18:19:13.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.511" endtime="20201029 18:19:13.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.509" endtime="20201029 18:19:13.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.549" endtime="20201029 18:19:13.835"></status>
</kw>
<msg timestamp="20201029 18:19:13.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020932722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020997792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.547" endtime="20201029 18:19:13.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020932722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020997792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.839" endtime="20201029 18:19:13.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.848" endtime="20201029 18:19:13.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.544" endtime="20201029 18:19:13.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.543" endtime="20201029 18:19:13.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:13.854" level="INFO">${RESULT} = [{'diff': 6.50700000000004e-05}, {'diff': 6.412499999999821e-05}, {'diff': 6.420900000000257e-05}, {'diff': 6.440300000000107e-05}, {'diff': 6.483300000000025e-05}, {'diff': 6.463800000000228e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:13.851" endtime="20201029 18:19:13.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:13.859" level="INFO">${ACCURACY} = {'diff': [6.50700000000004e-05, 6.412499999999821e-05, 6.420900000000257e-05, 6.440300000000107e-05, 6.483300000000025e-05, 6.463800000000228e-05, 6.412500000000168e-05, 6.412500000000168e-05, 6.42079...</msg>
<status status="PASS" starttime="20201029 18:19:13.855" endtime="20201029 18:19:13.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.863" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 18:19:13.862" endtime="20201029 18:19:13.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.866" level="INFO">VALUE: [6.50700000000004e-05, 6.412499999999821e-05, 6.420900000000257e-05, 6.440300000000107e-05, 6.483300000000025e-05, 6.463800000000228e-05, 6.412500000000168e-05, 6.412500000000168e-05, 6.420799999999963e-05, 6.4889000000002e-05, 6.426400000000138e-05, 6.420799999999963e-05, 6.413900000000125e-05, 6.474999999999884e-05, 6.483300000000025e-05, 6.436099999999889e-05, 6.443100000000021e-05, 6.433399999999923e-05, 6.447300000000239e-05, 6.487500000000243e-05, 6.42219999999992e-05, 6.480599999999712e-05, 6.492999999999777e-05, 6.505500000000136e-05, 6.49440000000008e-05, 6.451300000000215e-05, 6.42500000000018e-05, 6.427800000000095e-05, 6.500000000000256e-05, 6.42219999999992e-05, 6.44440000000003e-05, 6.419400000000006e-05, 6.498599999999952e-05, 6.4583e-05, 6.476400000000188e-05, 6.494499999999681e-05, 6.462499999999871e-05, 6.450000000000206e-05, 6.458399999999948e-05, 6.451399999999816e-05, 6.434699999999932e-05, 6.494500000000028e-05, 6.480499999999764e-05, 6.462499999999871e-05, 6.454100000000129e-05, 6.437499999999846e-05, 6.430500000000061e-05, 6.483300000000025e-05, 6.470800000000013e-05, 6.413900000000125e-05]</msg>
<status status="PASS" starttime="20201029 18:19:13.864" endtime="20201029 18:19:13.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.859" endtime="20201029 18:19:13.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:13.872" endtime="20201029 18:19:13.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.870" endtime="20201029 18:19:13.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.869" endtime="20201029 18:19:13.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.508" endtime="20201029 18:19:13.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.507" endtime="20201029 18:19:13.892"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.901" endtime="20201029 18:19:13.920"></status>
</kw>
<msg timestamp="20201029 18:19:13.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.900" endtime="20201029 18:19:13.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:13.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:13.922" endtime="20201029 18:19:13.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.925" endtime="20201029 18:19:13.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.897" endtime="20201029 18:19:13.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.895" endtime="20201029 18:19:13.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:13.934" endtime="20201029 18:19:14.219"></status>
</kw>
<msg timestamp="20201029 18:19:14.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020006625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020071972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:13.932" endtime="20201029 18:19:14.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020006625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020071972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.223" endtime="20201029 18:19:14.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.232" endtime="20201029 18:19:14.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.930" endtime="20201029 18:19:14.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.928" endtime="20201029 18:19:14.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:14.239" level="INFO">${RESULT} = [{'diff': 6.534700000000032e-05}, {'diff': 6.52639999999989e-05}, {'diff': 6.562499999999971e-05}, {'diff': 6.548600000000002e-05}, {'diff': 6.536099999999989e-05}, {'diff': 6.59029999999991e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:14.235" endtime="20201029 18:19:14.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:14.244" level="INFO">${ACCURACY} = {'diff': [6.534700000000032e-05, 6.52639999999989e-05, 6.562499999999971e-05, 6.548600000000002e-05, 6.536099999999989e-05, 6.59029999999991e-05, 6.55700000000009e-05, 6.59029999999991e-05, 6.57780000...</msg>
<status status="PASS" starttime="20201029 18:19:14.240" endtime="20201029 18:19:14.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.248" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 18:19:14.247" endtime="20201029 18:19:14.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.251" level="INFO">VALUE: [6.534700000000032e-05, 6.52639999999989e-05, 6.562499999999971e-05, 6.548600000000002e-05, 6.536099999999989e-05, 6.59029999999991e-05, 6.55700000000009e-05, 6.59029999999991e-05, 6.577800000000245e-05, 6.574999999999984e-05, 6.53890000000025e-05, 6.573600000000027e-05, 6.583299999999778e-05, 6.537499999999946e-05, 6.541699999999817e-05, 6.597200000000095e-05, 6.605499999999889e-05, 6.551400000000263e-05, 6.538899999999903e-05, 6.53890000000025e-05, 6.597200000000095e-05, 6.516600000000192e-05, 6.545799999999741e-05, 6.538899999999903e-05, 6.511099999999964e-05, 6.555600000000134e-05, 6.548600000000002e-05, 6.518099999999749e-05, 6.573600000000027e-05, 6.563899999999928e-05, 6.55700000000009e-05, 6.544500000000078e-05, 6.545799999999741e-05, 6.586199999999987e-05, 6.583300000000125e-05, 6.548699999999949e-05, 6.52220000000002e-05, 6.595799999999791e-05, 6.538899999999903e-05, 6.543000000000174e-05, 6.526400000000238e-05, 6.562499999999971e-05, 6.529200000000152e-05, 6.52639999999989e-05, 6.567999999999852e-05, 6.587499999999996e-05, 6.577800000000245e-05, 6.601399999999966e-05, 6.582000000000116e-05, 6.513899999999878e-05]</msg>
<status status="PASS" starttime="20201029 18:19:14.249" endtime="20201029 18:19:14.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.245" endtime="20201029 18:19:14.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:14.256" endtime="20201029 18:19:14.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.254" endtime="20201029 18:19:14.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.253" endtime="20201029 18:19:14.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.893" endtime="20201029 18:19:14.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:13.893" endtime="20201029 18:19:14.277"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.286" endtime="20201029 18:19:14.304"></status>
</kw>
<msg timestamp="20201029 18:19:14.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.284" endtime="20201029 18:19:14.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.306" endtime="20201029 18:19:14.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.309" endtime="20201029 18:19:14.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.281" endtime="20201029 18:19:14.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.279" endtime="20201029 18:19:14.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.318" endtime="20201029 18:19:14.604"></status>
</kw>
<msg timestamp="20201029 18:19:14.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020157236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020223472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.316" endtime="20201029 18:19:14.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020157236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020223472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.608" endtime="20201029 18:19:14.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.617" endtime="20201029 18:19:14.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.314" endtime="20201029 18:19:14.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.312" endtime="20201029 18:19:14.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:14.623" level="INFO">${RESULT} = [{'diff': 6.623600000000077e-05}, {'diff': 6.69030000000001e-05}, {'diff': 6.634699999999785e-05}, {'diff': 6.661100000000114e-05}, {'diff': 6.651400000000016e-05}, {'diff': 6.702800000000023e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:14.620" endtime="20201029 18:19:14.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:14.628" level="INFO">${ACCURACY} = {'diff': [6.623600000000077e-05, 6.69030000000001e-05, 6.634699999999785e-05, 6.661100000000114e-05, 6.651400000000016e-05, 6.702800000000023e-05, 6.693100000000271e-05, 6.655600000000234e-05, 6.69589...</msg>
<status status="PASS" starttime="20201029 18:19:14.624" endtime="20201029 18:19:14.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.632" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 18:19:14.631" endtime="20201029 18:19:14.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.635" level="INFO">VALUE: [6.623600000000077e-05, 6.69030000000001e-05, 6.634699999999785e-05, 6.661100000000114e-05, 6.651400000000016e-05, 6.702800000000023e-05, 6.693100000000271e-05, 6.655600000000234e-05, 6.695899999999838e-05, 6.70700000000024e-05, 6.679199999999955e-05, 6.644499999999831e-05, 6.625000000000034e-05, 6.669399999999909e-05, 6.637500000000046e-05, 6.694399999999934e-05, 6.612500000000021e-05, 6.688900000000053e-05, 6.681899999999921e-05, 6.698600000000152e-05, 6.651400000000016e-05, 6.638900000000003e-05, 6.641699999999917e-05, 6.638900000000003e-05, 6.62229999999972e-05, 6.655599999999887e-05, 6.701400000000066e-05, 6.680600000000259e-05, 6.694499999999881e-05, 6.694499999999881e-05, 6.67220000000017e-05, 6.669499999999856e-05, 6.625000000000034e-05, 6.647200000000145e-05, 6.67640000000004e-05, 6.67640000000004e-05, 6.692999999999977e-05, 6.665299999999985e-05, 6.677799999999998e-05, 6.630599999999862e-05, 6.656899999999896e-05, 6.69030000000001e-05, 6.619399999999859e-05, 6.69030000000001e-05, 6.675000000000084e-05, 6.650000000000059e-05, 6.633399999999776e-05, 6.698600000000152e-05, 6.684700000000182e-05, 6.613899999999978e-05]</msg>
<status status="PASS" starttime="20201029 18:19:14.633" endtime="20201029 18:19:14.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.628" endtime="20201029 18:19:14.636"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:14.640" endtime="20201029 18:19:14.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.638" endtime="20201029 18:19:14.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.637" endtime="20201029 18:19:14.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.278" endtime="20201029 18:19:14.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.277" endtime="20201029 18:19:14.661"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.670" endtime="20201029 18:19:14.691"></status>
</kw>
<msg timestamp="20201029 18:19:14.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.668" endtime="20201029 18:19:14.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:14.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:14.693" endtime="20201029 18:19:14.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.695" endtime="20201029 18:19:14.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.665" endtime="20201029 18:19:14.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.663" endtime="20201029 18:19:14.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:14.705" endtime="20201029 18:19:14.991"></status>
</kw>
<msg timestamp="20201029 18:19:14.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021013819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021081222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.703" endtime="20201029 18:19:14.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021013819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021081222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:14.996" endtime="20201029 18:19:15.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.004" endtime="20201029 18:19:15.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.700" endtime="20201029 18:19:15.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.698" endtime="20201029 18:19:15.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:15.011" level="INFO">${RESULT} = [{'diff': 6.74030000000006e-05}, {'diff': 6.713899999999731e-05}, {'diff': 6.802800000000123e-05}, {'diff': 6.711099999999817e-05}, {'diff': 6.781900000000021e-05}, {'diff': 6.800000000000209e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:15.007" endtime="20201029 18:19:15.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:15.015" level="INFO">${ACCURACY} = {'diff': [6.74030000000006e-05, 6.713899999999731e-05, 6.802800000000123e-05, 6.711099999999817e-05, 6.781900000000021e-05, 6.800000000000209e-05, 6.733300000000275e-05, 6.787499999999849e-05, 6.75280...</msg>
<status status="PASS" starttime="20201029 18:19:15.012" endtime="20201029 18:19:15.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.020" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 18:19:15.019" endtime="20201029 18:19:15.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.022" level="INFO">VALUE: [6.74030000000006e-05, 6.713899999999731e-05, 6.802800000000123e-05, 6.711099999999817e-05, 6.781900000000021e-05, 6.800000000000209e-05, 6.733300000000275e-05, 6.787499999999849e-05, 6.752800000000073e-05, 6.727799999999701e-05, 6.769499999999956e-05, 6.806999999999994e-05, 6.737499999999799e-05, 6.715300000000035e-05, 6.783299999999978e-05, 6.712500000000121e-05, 6.790200000000163e-05, 6.725000000000134e-05, 6.781900000000021e-05, 6.725000000000134e-05, 6.788900000000153e-05, 6.786099999999892e-05, 6.719399999999959e-05, 6.719399999999959e-05, 6.77640000000014e-05, 6.734699999999885e-05, 6.783299999999978e-05, 6.751400000000116e-05, 6.768099999999999e-05, 6.805500000000089e-05, 6.712500000000121e-05, 6.802799999999776e-05, 6.738899999999756e-05, 6.723699999999777e-05, 6.801399999999819e-05, 6.775000000000184e-05, 6.738900000000103e-05, 6.744399999999984e-05, 6.801399999999819e-05, 6.730500000000014e-05, 6.713900000000078e-05, 6.743099999999974e-05, 6.730500000000014e-05, 6.725000000000134e-05, 6.766700000000042e-05, 6.758299999999953e-05, 6.745899999999888e-05, 6.795900000000285e-05, 6.806999999999994e-05, 6.727800000000048e-05]</msg>
<status status="PASS" starttime="20201029 18:19:15.021" endtime="20201029 18:19:15.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.016" endtime="20201029 18:19:15.024"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:15.028" endtime="20201029 18:19:15.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.027" endtime="20201029 18:19:15.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.025" endtime="20201029 18:19:15.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.662" endtime="20201029 18:19:15.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:14.661" endtime="20201029 18:19:15.049"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.058" endtime="20201029 18:19:15.076"></status>
</kw>
<msg timestamp="20201029 18:19:15.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.056" endtime="20201029 18:19:15.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.078" endtime="20201029 18:19:15.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.081" endtime="20201029 18:19:15.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.053" endtime="20201029 18:19:15.083"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.051" endtime="20201029 18:19:15.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.090" endtime="20201029 18:19:15.376"></status>
</kw>
<msg timestamp="20201029 18:19:15.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020089347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020158319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.088" endtime="20201029 18:19:15.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020089347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020158319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.381" endtime="20201029 18:19:15.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.389" endtime="20201029 18:19:15.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.086" endtime="20201029 18:19:15.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.084" endtime="20201029 18:19:15.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:15.396" level="INFO">${RESULT} = [{'diff': 6.897200000000048e-05}, {'diff': 6.851400000000216e-05}, {'diff': 6.820800000000016e-05}, {'diff': 6.901399999999919e-05}, {'diff': 6.908299999999756e-05}, {'diff': 6.824999999999887e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:15.393" endtime="20201029 18:19:15.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:15.401" level="INFO">${ACCURACY} = {'diff': [6.897200000000048e-05, 6.851400000000216e-05, 6.820800000000016e-05, 6.901399999999919e-05, 6.908299999999756e-05, 6.824999999999887e-05, 6.824999999999887e-05, 6.849999999999912e-05, 6.8638...</msg>
<status status="PASS" starttime="20201029 18:19:15.397" endtime="20201029 18:19:15.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.406" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 18:19:15.405" endtime="20201029 18:19:15.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.408" level="INFO">VALUE: [6.897200000000048e-05, 6.851400000000216e-05, 6.820800000000016e-05, 6.901399999999919e-05, 6.908299999999756e-05, 6.824999999999887e-05, 6.824999999999887e-05, 6.849999999999912e-05, 6.863899999999881e-05, 6.830600000000062e-05, 6.84169999999977e-05, 6.893100000000124e-05, 6.827799999999801e-05, 6.882000000000069e-05, 6.857000000000044e-05, 6.898600000000005e-05, 6.841599999999823e-05, 6.905500000000189e-05, 6.89299999999983e-05, 6.862499999999924e-05, 6.82220000000032e-05, 6.840200000000213e-05, 6.85970000000001e-05, 6.811100000000264e-05, 6.879199999999808e-05, 6.824999999999887e-05, 6.818100000000049e-05, 6.841700000000117e-05, 6.901399999999919e-05, 6.882000000000069e-05, 6.872200000000023e-05, 6.868099999999752e-05, 6.904199999999833e-05, 6.879199999999808e-05, 6.876399999999894e-05, 6.879200000000155e-05, 6.89160000000022e-05, 6.880500000000164e-05, 6.894400000000134e-05, 6.89030000000021e-05, 6.880500000000164e-05, 6.820800000000016e-05, 6.870800000000066e-05, 6.837499999999899e-05, 6.849999999999912e-05, 6.833300000000028e-05, 6.820800000000016e-05, 6.883400000000026e-05, 6.849999999999912e-05, 6.843100000000074e-05]</msg>
<status status="PASS" starttime="20201029 18:19:15.407" endtime="20201029 18:19:15.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.402" endtime="20201029 18:19:15.410"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:15.413" endtime="20201029 18:19:15.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.412" endtime="20201029 18:19:15.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.411" endtime="20201029 18:19:15.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.050" endtime="20201029 18:19:15.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.049" endtime="20201029 18:19:15.434"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.443" endtime="20201029 18:19:15.462"></status>
</kw>
<msg timestamp="20201029 18:19:15.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.441" endtime="20201029 18:19:15.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.463" endtime="20201029 18:19:15.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.466" endtime="20201029 18:19:15.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.439" endtime="20201029 18:19:15.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.437" endtime="20201029 18:19:15.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.475" endtime="20201029 18:19:15.762"></status>
</kw>
<msg timestamp="20201029 18:19:15.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020046639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020116278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.474" endtime="20201029 18:19:15.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020046639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020116278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.767" endtime="20201029 18:19:15.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.775" endtime="20201029 18:19:15.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.471" endtime="20201029 18:19:15.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.469" endtime="20201029 18:19:15.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:15.782" level="INFO">${RESULT} = [{'diff': 6.963899999999981e-05}, {'diff': 6.969500000000156e-05}, {'diff': 6.938899999999956e-05}, {'diff': 6.965299999999938e-05}, {'diff': 6.904199999999833e-05}, {'diff': 6.952699999999978e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:15.779" endtime="20201029 18:19:15.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:15.786" level="INFO">${ACCURACY} = {'diff': [6.963899999999981e-05, 6.969500000000156e-05, 6.938899999999956e-05, 6.965299999999938e-05, 6.904199999999833e-05, 6.952699999999978e-05, 6.923599999999683e-05, 6.930499999999867e-05, 6.9124...</msg>
<status status="PASS" starttime="20201029 18:19:15.783" endtime="20201029 18:19:15.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.791" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 18:19:15.790" endtime="20201029 18:19:15.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.793" level="INFO">VALUE: [6.963899999999981e-05, 6.969500000000156e-05, 6.938899999999956e-05, 6.965299999999938e-05, 6.904199999999833e-05, 6.952699999999978e-05, 6.923599999999683e-05, 6.930499999999867e-05, 6.912499999999974e-05, 6.965299999999938e-05, 7.005499999999942e-05, 6.977799999999951e-05, 6.930499999999867e-05, 6.90970000000006e-05, 6.988900000000006e-05, 6.957000000000144e-05, 6.97360000000008e-05, 6.981999999999822e-05, 6.933400000000076e-05, 6.963899999999981e-05, 6.944499999999784e-05, 6.97640000000034e-05, 6.998700000000052e-05, 6.912499999999974e-05, 6.916599999999898e-05, 6.981899999999874e-05, 6.917999999999855e-05, 6.944400000000184e-05, 7.002799999999976e-05, 6.941700000000217e-05, 6.912499999999974e-05, 6.970800000000166e-05, 6.987500000000049e-05, 6.970799999999819e-05, 6.969400000000209e-05, 6.986099999999745e-05, 6.961100000000067e-05, 6.976399999999994e-05, 6.938899999999956e-05, 6.948599999999708e-05, 6.933400000000076e-05, 6.983400000000126e-05, 7.006900000000246e-05, 6.938899999999956e-05, 6.969500000000156e-05, 6.999999999999715e-05, 7.005499999999942e-05, 6.956899999999849e-05, 6.965300000000285e-05, 6.938899999999956e-05]</msg>
<status status="PASS" starttime="20201029 18:19:15.792" endtime="20201029 18:19:15.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.787" endtime="20201029 18:19:15.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:15.799" endtime="20201029 18:19:15.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.797" endtime="20201029 18:19:15.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.796" endtime="20201029 18:19:15.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.435" endtime="20201029 18:19:15.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.434" endtime="20201029 18:19:15.819"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.828" endtime="20201029 18:19:15.851"></status>
</kw>
<msg timestamp="20201029 18:19:15.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.827" endtime="20201029 18:19:15.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:15.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:15.852" endtime="20201029 18:19:15.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.855" endtime="20201029 18:19:15.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.824" endtime="20201029 18:19:15.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.822" endtime="20201029 18:19:15.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:15.867" endtime="20201029 18:19:16.153"></status>
</kw>
<msg timestamp="20201029 18:19:16.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023389694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023460139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:15.865" endtime="20201029 18:19:16.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023389694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023460139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.157" endtime="20201029 18:19:16.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.166" endtime="20201029 18:19:16.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.862" endtime="20201029 18:19:16.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.859" endtime="20201029 18:19:16.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:16.172" level="INFO">${RESULT} = [{'diff': 7.044500000000231e-05}, {'diff': 7.013900000000031e-05}, {'diff': 7.081999999999922e-05}, {'diff': 7.033300000000228e-05}, {'diff': 7.081999999999922e-05}, {'diff': 7.047199999999851e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:16.169" endtime="20201029 18:19:16.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:16.177" level="INFO">${ACCURACY} = {'diff': [7.044500000000231e-05, 7.013900000000031e-05, 7.081999999999922e-05, 7.033300000000228e-05, 7.081999999999922e-05, 7.047199999999851e-05, 7.063799999999787e-05, 7.015200000000041e-05, 7.0429...</msg>
<status status="PASS" starttime="20201029 18:19:16.173" endtime="20201029 18:19:16.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.181" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 18:19:16.180" endtime="20201029 18:19:16.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.184" level="INFO">VALUE: [7.044500000000231e-05, 7.013900000000031e-05, 7.081999999999922e-05, 7.033300000000228e-05, 7.081999999999922e-05, 7.047199999999851e-05, 7.063799999999787e-05, 7.015200000000041e-05, 7.04299999999998e-05, 7.031899999999924e-05, 7.031899999999924e-05, 7.051400000000069e-05, 7.034699999999838e-05, 7.098599999999858e-05, 7.061100000000167e-05, 7.066599999999701e-05, 7.032000000000219e-05, 7.084699999999888e-05, 7.012499999999727e-05, 7.025000000000087e-05, 7.038900000000056e-05, 7.099999999999815e-05, 7.10559999999999e-05, 7.02499999999974e-05, 7.062499999999777e-05, 7.088899999999759e-05, 7.050000000000112e-05, 7.069399999999962e-05, 7.080500000000017e-05, 7.07360000000018e-05, 7.095799999999944e-05, 7.018099999999902e-05, 7.049999999999765e-05, 7.095899999999891e-05, 7.080599999999965e-05, 7.087499999999802e-05, 7.054199999999983e-05, 7.094499999999934e-05, 7.081999999999922e-05, 7.054199999999983e-05, 7.033299999999881e-05, 7.011200000000065e-05, 7.05689999999995e-05, 7.063800000000134e-05, 7.1069e-05, 7.054100000000035e-05, 7.081899999999974e-05, 7.094399999999987e-05, 7.013900000000031e-05, 7.036100000000142e-05]</msg>
<status status="PASS" starttime="20201029 18:19:16.182" endtime="20201029 18:19:16.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.178" endtime="20201029 18:19:16.186"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:16.190" endtime="20201029 18:19:16.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.188" endtime="20201029 18:19:16.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.187" endtime="20201029 18:19:16.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.820" endtime="20201029 18:19:16.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:15.820" endtime="20201029 18:19:16.211"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.219" endtime="20201029 18:19:16.238"></status>
</kw>
<msg timestamp="20201029 18:19:16.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.218" endtime="20201029 18:19:16.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.240" endtime="20201029 18:19:16.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.243" endtime="20201029 18:19:16.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.215" endtime="20201029 18:19:16.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.213" endtime="20201029 18:19:16.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.252" endtime="20201029 18:19:16.538"></status>
</kw>
<msg timestamp="20201029 18:19:16.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020049667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020121764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.250" endtime="20201029 18:19:16.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020049667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020121764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.542" endtime="20201029 18:19:16.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.550" endtime="20201029 18:19:16.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.248" endtime="20201029 18:19:16.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.246" endtime="20201029 18:19:16.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:16.557" level="INFO">${RESULT} = [{'diff': 7.209700000000013e-05}, {'diff': 7.125000000000187e-05}, {'diff': 7.176400000000194e-05}, {'diff': 7.144499999999984e-05}, {'diff': 7.118100000000002e-05}, {'diff': 7.194500000000034e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:16.554" endtime="20201029 18:19:16.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:16.562" level="INFO">${ACCURACY} = {'diff': [7.209700000000013e-05, 7.125000000000187e-05, 7.176400000000194e-05, 7.144499999999984e-05, 7.118100000000002e-05, 7.194500000000034e-05, 7.206899999999752e-05, 7.195800000000044e-05, 7.1526...</msg>
<status status="PASS" starttime="20201029 18:19:16.558" endtime="20201029 18:19:16.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.567" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 18:19:16.566" endtime="20201029 18:19:16.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.569" level="INFO">VALUE: [7.209700000000013e-05, 7.125000000000187e-05, 7.176400000000194e-05, 7.144499999999984e-05, 7.118100000000002e-05, 7.194500000000034e-05, 7.206899999999752e-05, 7.195800000000044e-05, 7.152699999999831e-05, 7.163900000000181e-05, 7.150000000000212e-05, 7.144499999999984e-05, 7.151399999999822e-05, 7.144400000000037e-05, 7.150000000000212e-05, 7.180600000000065e-05, 7.14170000000007e-05, 7.187500000000249e-05, 7.131999999999972e-05, 7.119499999999959e-05, 7.120899999999916e-05, 7.137499999999852e-05, 7.194500000000034e-05, 7.133299999999981e-05, 7.118100000000002e-05, 7.208300000000056e-05, 7.120799999999969e-05, 7.126399999999797e-05, 7.112499999999827e-05, 7.122199999999926e-05, 7.188899999999859e-05, 7.155500000000092e-05, 7.126400000000144e-05, 7.14170000000007e-05, 7.137500000000199e-05, 7.122199999999926e-05, 7.194499999999687e-05, 7.118100000000002e-05, 7.144400000000037e-05, 7.134699999999938e-05, 7.201399999999872e-05, 7.158300000000006e-05, 7.165199999999844e-05, 7.144400000000037e-05, 7.144400000000037e-05, 7.183300000000031e-05, 7.15690000000005e-05, 7.147199999999951e-05, 7.115300000000088e-05, 7.166600000000148e-05]</msg>
<status status="PASS" starttime="20201029 18:19:16.568" endtime="20201029 18:19:16.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.563" endtime="20201029 18:19:16.571"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:16.575" endtime="20201029 18:19:16.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.573" endtime="20201029 18:19:16.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.572" endtime="20201029 18:19:16.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.211" endtime="20201029 18:19:16.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.211" endtime="20201029 18:19:16.595"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.604" endtime="20201029 18:19:16.624"></status>
</kw>
<msg timestamp="20201029 18:19:16.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.603" endtime="20201029 18:19:16.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.625" endtime="20201029 18:19:16.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.628" endtime="20201029 18:19:16.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.600" endtime="20201029 18:19:16.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.598" endtime="20201029 18:19:16.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.637" endtime="20201029 18:19:16.924"></status>
</kw>
<msg timestamp="20201029 18:19:16.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020117611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020189903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.636" endtime="20201029 18:19:16.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020117611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020189903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:16.929" endtime="20201029 18:19:16.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.937" endtime="20201029 18:19:16.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.633" endtime="20201029 18:19:16.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.631" endtime="20201029 18:19:16.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:16.944" level="INFO">${RESULT} = [{'diff': 7.229199999999811e-05}, {'diff': 7.302799999999929e-05}, {'diff': 7.295900000000091e-05}, {'diff': 7.300000000000015e-05}, {'diff': 7.254100000000235e-05}, {'diff': 7.266700000000195e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:16.941" endtime="20201029 18:19:16.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:16.948" level="INFO">${ACCURACY} = {'diff': [7.229199999999811e-05, 7.302799999999929e-05, 7.295900000000091e-05, 7.300000000000015e-05, 7.254100000000235e-05, 7.266700000000195e-05, 7.213899999999884e-05, 7.287500000000002e-05, 7.2583...</msg>
<status status="PASS" starttime="20201029 18:19:16.945" endtime="20201029 18:19:16.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.953" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 18:19:16.952" endtime="20201029 18:19:16.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:16.955" level="INFO">VALUE: [7.229199999999811e-05, 7.302799999999929e-05, 7.295900000000091e-05, 7.300000000000015e-05, 7.254100000000235e-05, 7.266700000000195e-05, 7.213899999999884e-05, 7.287500000000002e-05, 7.258300000000106e-05, 7.241599999999876e-05, 7.287500000000002e-05, 7.281900000000174e-05, 7.302699999999981e-05, 7.280600000000165e-05, 7.304200000000233e-05, 7.237499999999952e-05, 7.306899999999852e-05, 7.265300000000238e-05, 7.22499999999994e-05, 7.258400000000054e-05, 7.255599999999793e-05, 7.265299999999891e-05, 7.212499999999927e-05, 7.288899999999959e-05, 7.245900000000041e-05, 7.216600000000198e-05, 7.213799999999937e-05, 7.212499999999927e-05, 7.244400000000137e-05, 7.3069000000002e-05, 7.295799999999797e-05, 7.251399999999922e-05, 7.222200000000026e-05, 7.249999999999965e-05, 7.244400000000137e-05, 7.273600000000033e-05, 7.276399999999947e-05, 7.238899999999909e-05, 7.302799999999929e-05, 7.281999999999775e-05, 7.222199999999679e-05, 7.300000000000015e-05, 7.277699999999956e-05, 7.22499999999994e-05, 7.208300000000056e-05, 7.213899999999884e-05, 7.222200000000026e-05, 7.30829999999981e-05, 7.242999999999833e-05, 7.233300000000081e-05]</msg>
<status status="PASS" starttime="20201029 18:19:16.954" endtime="20201029 18:19:16.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.949" endtime="20201029 18:19:16.960"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:16.964" endtime="20201029 18:19:16.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.962" endtime="20201029 18:19:16.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.961" endtime="20201029 18:19:16.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.596" endtime="20201029 18:19:16.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.596" endtime="20201029 18:19:16.985"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:16.994" endtime="20201029 18:19:17.014"></status>
</kw>
<msg timestamp="20201029 18:19:17.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:16.992" endtime="20201029 18:19:17.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.016" endtime="20201029 18:19:17.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.018" endtime="20201029 18:19:17.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.990" endtime="20201029 18:19:17.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.987" endtime="20201029 18:19:17.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.028" endtime="20201029 18:19:17.313"></status>
</kw>
<msg timestamp="20201029 18:19:17.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021054375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021128042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.026" endtime="20201029 18:19:17.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021054375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021128042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.317" endtime="20201029 18:19:17.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.326" endtime="20201029 18:19:17.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.023" endtime="20201029 18:19:17.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.021" endtime="20201029 18:19:17.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:17.332" level="INFO">${RESULT} = [{'diff': 7.366699999999948e-05}, {'diff': 7.311099999999723e-05}, {'diff': 7.345900000000141e-05}, {'diff': 7.34309999999988e-05}, {'diff': 7.381899999999927e-05}, {'diff': 7.32500000000004e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:17.329" endtime="20201029 18:19:17.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:17.337" level="INFO">${ACCURACY} = {'diff': [7.366699999999948e-05, 7.311099999999723e-05, 7.345900000000141e-05, 7.34309999999988e-05, 7.381899999999927e-05, 7.32500000000004e-05, 7.381899999999927e-05, 7.376400000000047e-05, 7.347199...</msg>
<status status="PASS" starttime="20201029 18:19:17.333" endtime="20201029 18:19:17.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.341" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 18:19:17.340" endtime="20201029 18:19:17.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.344" level="INFO">VALUE: [7.366699999999948e-05, 7.311099999999723e-05, 7.345900000000141e-05, 7.34309999999988e-05, 7.381899999999927e-05, 7.32500000000004e-05, 7.381899999999927e-05, 7.376400000000047e-05, 7.347199999999804e-05, 7.398600000000158e-05, 7.315300000000288e-05, 7.404199999999986e-05, 7.36249999999973e-05, 7.404199999999986e-05, 7.320799999999822e-05, 7.313899999999984e-05, 7.382000000000222e-05, 7.4069999999999e-05, 7.383399999999832e-05, 7.401400000000072e-05, 7.380599999999918e-05, 7.363800000000087e-05, 7.337500000000052e-05, 7.312500000000027e-05, 7.381899999999927e-05, 7.355499999999945e-05, 7.405499999999995e-05, 7.330599999999868e-05, 7.356899999999902e-05, 7.376400000000047e-05, 7.39439999999994e-05, 7.377800000000004e-05, 7.348600000000108e-05, 7.369499999999862e-05, 7.348599999999761e-05, 7.345899999999794e-05, 7.35699999999985e-05, 7.399999999999768e-05, 7.373600000000133e-05, 7.34439999999989e-05, 7.405499999999995e-05, 7.401400000000072e-05, 7.358300000000206e-05, 7.338900000000009e-05, 7.388900000000059e-05, 7.338900000000009e-05, 7.397200000000201e-05, 7.350000000000065e-05, 7.40829999999991e-05, 7.368099999999905e-05]</msg>
<status status="PASS" starttime="20201029 18:19:17.342" endtime="20201029 18:19:17.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.338" endtime="20201029 18:19:17.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:17.350" endtime="20201029 18:19:17.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.348" endtime="20201029 18:19:17.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.347" endtime="20201029 18:19:17.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.986" endtime="20201029 18:19:17.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:16.985" endtime="20201029 18:19:17.371"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.380" endtime="20201029 18:19:17.399"></status>
</kw>
<msg timestamp="20201029 18:19:17.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.378" endtime="20201029 18:19:17.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.401" endtime="20201029 18:19:17.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.403" endtime="20201029 18:19:17.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.375" endtime="20201029 18:19:17.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.373" endtime="20201029 18:19:17.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.413" endtime="20201029 18:19:17.698"></status>
</kw>
<msg timestamp="20201029 18:19:17.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020209417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020284125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.411" endtime="20201029 18:19:17.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020209417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020284125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.702" endtime="20201029 18:19:17.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.711" endtime="20201029 18:19:17.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.409" endtime="20201029 18:19:17.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.407" endtime="20201029 18:19:17.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:17.718" level="INFO">${RESULT} = [{'diff': 7.470799999999972e-05}, {'diff': 7.469400000000015e-05}, {'diff': 7.477799999999757e-05}, {'diff': 7.433400000000229e-05}, {'diff': 7.493099999999683e-05}, {'diff': 7.44029999999972e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:17.714" endtime="20201029 18:19:17.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:17.723" level="INFO">${ACCURACY} = {'diff': [7.470799999999972e-05, 7.469400000000015e-05, 7.477799999999757e-05, 7.433400000000229e-05, 7.493099999999683e-05, 7.44029999999972e-05, 7.44309999999998e-05, 7.463900000000134e-05, 7.455500...</msg>
<status status="PASS" starttime="20201029 18:19:17.719" endtime="20201029 18:19:17.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.728" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 18:19:17.726" endtime="20201029 18:19:17.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.730" level="INFO">VALUE: [7.470799999999972e-05, 7.469400000000015e-05, 7.477799999999757e-05, 7.433400000000229e-05, 7.493099999999683e-05, 7.44029999999972e-05, 7.44309999999998e-05, 7.463900000000134e-05, 7.455500000000045e-05, 7.413899999999737e-05, 7.42500000000014e-05, 7.513899999999837e-05, 7.505500000000095e-05, 7.463900000000134e-05, 7.500000000000215e-05, 7.445799999999947e-05, 7.472199999999929e-05, 7.420899999999869e-05, 7.488900000000159e-05, 7.481999999999975e-05, 7.433399999999882e-05, 7.491700000000073e-05, 7.447300000000198e-05, 7.508399999999957e-05, 7.504200000000086e-05, 7.486199999999846e-05, 7.44439999999999e-05, 7.438899999999762e-05, 7.479099999999766e-05, 7.481900000000027e-05, 7.502799999999782e-05, 7.462500000000177e-05, 7.492999999999736e-05, 7.497199999999954e-05, 7.415300000000041e-05, 7.468100000000005e-05, 7.436099999999848e-05, 7.507e-05, 7.440300000000066e-05, 7.424999999999793e-05, 7.495899999999944e-05, 7.441700000000023e-05, 7.444499999999937e-05, 7.483299999999984e-05, 7.481900000000027e-05, 7.472199999999929e-05, 7.50830000000001e-05, 7.488900000000159e-05, 7.469400000000015e-05, 7.441700000000023e-05]</msg>
<status status="PASS" starttime="20201029 18:19:17.729" endtime="20201029 18:19:17.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.724" endtime="20201029 18:19:17.731"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:17.735" endtime="20201029 18:19:17.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.734" endtime="20201029 18:19:17.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.732" endtime="20201029 18:19:17.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.371" endtime="20201029 18:19:17.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.371" endtime="20201029 18:19:17.756"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.766" endtime="20201029 18:19:17.786"></status>
</kw>
<msg timestamp="20201029 18:19:17.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.764" endtime="20201029 18:19:17.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:17.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:17.787" endtime="20201029 18:19:17.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.790" endtime="20201029 18:19:17.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.761" endtime="20201029 18:19:17.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.759" endtime="20201029 18:19:17.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:17.799" endtime="20201029 18:19:18.087"></status>
</kw>
<msg timestamp="20201029 18:19:18.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021502069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021577625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:17.798" endtime="20201029 18:19:18.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021502069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021577625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.091" endtime="20201029 18:19:18.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.100" endtime="20201029 18:19:18.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.795" endtime="20201029 18:19:18.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.793" endtime="20201029 18:19:18.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:18.106" level="INFO">${RESULT} = [{'diff': 7.555600000000093e-05}, {'diff': 7.58189999999978e-05}, {'diff': 7.573599999999986e-05}, {'diff': 7.527799999999807e-05}, {'diff': 7.558400000000007e-05}, {'diff': 7.563900000000234e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:18.103" endtime="20201029 18:19:18.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:18.111" level="INFO">${ACCURACY} = {'diff': [7.555600000000093e-05, 7.58189999999978e-05, 7.573599999999986e-05, 7.527799999999807e-05, 7.558400000000007e-05, 7.563900000000234e-05, 7.565300000000191e-05, 7.519500000000012e-05, 7.58749...</msg>
<status status="PASS" starttime="20201029 18:19:18.107" endtime="20201029 18:19:18.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.115" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 18:19:18.114" endtime="20201029 18:19:18.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.118" level="INFO">VALUE: [7.555600000000093e-05, 7.58189999999978e-05, 7.573599999999986e-05, 7.527799999999807e-05, 7.558400000000007e-05, 7.563900000000234e-05, 7.565300000000191e-05, 7.519500000000012e-05, 7.587499999999955e-05, 7.604199999999839e-05, 7.6070000000001e-05, 7.59440000000014e-05, 7.533300000000034e-05, 7.609700000000066e-05, 7.556900000000102e-05, 7.57500000000029e-05, 7.599999999999968e-05, 7.605499999999848e-05, 7.520800000000022e-05, 7.554200000000136e-05, 7.533299999999687e-05, 7.566700000000148e-05, 7.59440000000014e-05, 7.584699999999694e-05, 7.574999999999943e-05, 7.608400000000057e-05, 7.566700000000148e-05, 7.6070000000001e-05, 7.561099999999973e-05, 7.56249999999993e-05, 7.595800000000097e-05, 7.529099999999816e-05, 7.574999999999943e-05, 7.517999999999761e-05, 7.562500000000277e-05, 7.548600000000308e-05, 7.538899999999862e-05, 7.513900000000184e-05, 7.605600000000143e-05, 7.590300000000216e-05, 7.566699999999801e-05, 7.563899999999887e-05, 7.606999999999753e-05, 7.573599999999986e-05, 7.608299999999762e-05, 7.59310000000013e-05, 7.538799999999915e-05, 7.511099999999923e-05, 7.581900000000127e-05, 7.601399999999925e-05]</msg>
<status status="PASS" starttime="20201029 18:19:18.116" endtime="20201029 18:19:18.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.112" endtime="20201029 18:19:18.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:18.123" endtime="20201029 18:19:18.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.121" endtime="20201029 18:19:18.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.120" endtime="20201029 18:19:18.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.757" endtime="20201029 18:19:18.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:17.756" endtime="20201029 18:19:18.144"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.153" endtime="20201029 18:19:18.174"></status>
</kw>
<msg timestamp="20201029 18:19:18.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.151" endtime="20201029 18:19:18.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.175" endtime="20201029 18:19:18.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.178" endtime="20201029 18:19:18.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.148" endtime="20201029 18:19:18.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.146" endtime="20201029 18:19:18.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.187" endtime="20201029 18:19:18.473"></status>
</kw>
<msg timestamp="20201029 18:19:18.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021056819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021133042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.185" endtime="20201029 18:19:18.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021056819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021133042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.477" endtime="20201029 18:19:18.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.485" endtime="20201029 18:19:18.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.183" endtime="20201029 18:19:18.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.181" endtime="20201029 18:19:18.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:18.492" level="INFO">${RESULT} = [{'diff': 7.622300000000026e-05}, {'diff': 7.61249999999998e-05}, {'diff': 7.645800000000147e-05}, {'diff': 7.61379999999999e-05}, {'diff': 7.708299999999862e-05}, {'diff': 7.701400000000025e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:18.489" endtime="20201029 18:19:18.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:18.496" level="INFO">${ACCURACY} = {'diff': [7.622300000000026e-05, 7.61249999999998e-05, 7.645800000000147e-05, 7.61379999999999e-05, 7.708299999999862e-05, 7.701400000000025e-05, 7.686100000000098e-05, 7.613899999999937e-05, 7.622200...</msg>
<status status="PASS" starttime="20201029 18:19:18.493" endtime="20201029 18:19:18.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.501" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 18:19:18.500" endtime="20201029 18:19:18.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.503" level="INFO">VALUE: [7.622300000000026e-05, 7.61249999999998e-05, 7.645800000000147e-05, 7.61379999999999e-05, 7.708299999999862e-05, 7.701400000000025e-05, 7.686100000000098e-05, 7.613899999999937e-05, 7.622200000000079e-05, 7.633300000000134e-05, 7.62639999999995e-05, 7.708299999999862e-05, 7.658299999999812e-05, 7.633300000000134e-05, 7.701400000000025e-05, 7.631999999999778e-05, 7.624999999999993e-05, 7.687500000000055e-05, 7.68189999999988e-05, 7.617999999999861e-05, 7.69449999999984e-05, 7.687500000000055e-05, 7.642999999999886e-05, 7.613899999999937e-05, 7.691699999999926e-05, 7.637500000000005e-05, 7.651399999999975e-05, 7.623599999999689e-05, 7.637500000000005e-05, 7.673600000000086e-05, 7.613900000000284e-05, 7.683300000000184e-05, 7.638899999999962e-05, 7.672200000000129e-05, 7.638899999999962e-05, 7.64310000000018e-05, 7.638800000000015e-05, 7.613900000000284e-05, 7.623600000000036e-05, 7.684700000000141e-05, 7.69579999999985e-05, 7.619399999999818e-05, 7.626400000000297e-05, 7.686100000000098e-05, 7.63189999999983e-05, 7.624999999999993e-05, 7.656999999999803e-05, 7.637500000000005e-05, 7.677799999999957e-05, 7.650000000000018e-05]</msg>
<status status="PASS" starttime="20201029 18:19:18.502" endtime="20201029 18:19:18.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.497" endtime="20201029 18:19:18.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:18.509" endtime="20201029 18:19:18.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.508" endtime="20201029 18:19:18.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.507" endtime="20201029 18:19:18.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.145" endtime="20201029 18:19:18.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.144" endtime="20201029 18:19:18.530"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.539" endtime="20201029 18:19:18.559"></status>
</kw>
<msg timestamp="20201029 18:19:18.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.538" endtime="20201029 18:19:18.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.560" endtime="20201029 18:19:18.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.563" endtime="20201029 18:19:18.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.535" endtime="20201029 18:19:18.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.533" endtime="20201029 18:19:18.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.572" endtime="20201029 18:19:18.859"></status>
</kw>
<msg timestamp="20201029 18:19:18.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020228417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020305653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.571" endtime="20201029 18:19:18.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020228417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020305653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.863" endtime="20201029 18:19:18.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.873" endtime="20201029 18:19:18.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.568" endtime="20201029 18:19:18.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.566" endtime="20201029 18:19:18.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:18.880" level="INFO">${RESULT} = [{'diff': 7.723600000000136e-05}, {'diff': 7.806999999999953e-05}, {'diff': 7.783399999999885e-05}, {'diff': 7.7764000000001e-05}, {'diff': 7.747300000000151e-05}, {'diff': 7.798599999999864e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:18.876" endtime="20201029 18:19:18.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:18.885" level="INFO">${ACCURACY} = {'diff': [7.723600000000136e-05, 7.806999999999953e-05, 7.783399999999885e-05, 7.7764000000001e-05, 7.747300000000151e-05, 7.798599999999864e-05, 7.736099999999801e-05, 7.762499999999783e-05, 7.742999...</msg>
<status status="PASS" starttime="20201029 18:19:18.881" endtime="20201029 18:19:18.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.889" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 18:19:18.888" endtime="20201029 18:19:18.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.892" level="INFO">VALUE: [7.723600000000136e-05, 7.806999999999953e-05, 7.783399999999885e-05, 7.7764000000001e-05, 7.747300000000151e-05, 7.798599999999864e-05, 7.736099999999801e-05, 7.762499999999783e-05, 7.742999999999986e-05, 7.777800000000057e-05, 7.798600000000211e-05, 7.719399999999918e-05, 7.7764000000001e-05, 7.769399999999968e-05, 7.715299999999994e-05, 7.783300000000284e-05, 7.732000000000225e-05, 7.755599999999946e-05, 7.784800000000189e-05, 7.737500000000105e-05, 7.71250000000008e-05, 7.774999999999796e-05, 7.71380000000009e-05, 7.711100000000123e-05, 7.79030000000007e-05, 7.712499999999733e-05, 7.759700000000216e-05, 7.765300000000044e-05, 7.774999999999796e-05, 7.738900000000062e-05, 7.730499999999974e-05, 7.758299999999912e-05, 7.713900000000037e-05, 7.750000000000118e-05, 7.774999999999796e-05, 7.808400000000257e-05, 7.744500000000237e-05, 7.711100000000123e-05, 7.772199999999882e-05, 7.775000000000143e-05, 7.744399999999943e-05, 7.736100000000148e-05, 7.793000000000036e-05, 7.794399999999993e-05, 7.727800000000007e-05, 7.78189999999998e-05, 7.718099999999908e-05, 7.737500000000105e-05, 7.731999999999878e-05, 7.805599999999996e-05]</msg>
<status status="PASS" starttime="20201029 18:19:18.890" endtime="20201029 18:19:18.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.886" endtime="20201029 18:19:18.893"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:18.897" endtime="20201029 18:19:18.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.895" endtime="20201029 18:19:18.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.894" endtime="20201029 18:19:18.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.531" endtime="20201029 18:19:18.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.531" endtime="20201029 18:19:18.918"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.927" endtime="20201029 18:19:18.947"></status>
</kw>
<msg timestamp="20201029 18:19:18.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.925" endtime="20201029 18:19:18.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:18.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:18.948" endtime="20201029 18:19:18.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.951" endtime="20201029 18:19:18.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.922" endtime="20201029 18:19:18.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.920" endtime="20201029 18:19:18.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:18.960" endtime="20201029 18:19:19.246"></status>
</kw>
<msg timestamp="20201029 18:19:19.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020150708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020229319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:18.959" endtime="20201029 18:19:19.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020150708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020229319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.250" endtime="20201029 18:19:19.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.259" endtime="20201029 18:19:19.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.956" endtime="20201029 18:19:19.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.954" endtime="20201029 18:19:19.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:19.266" level="INFO">${RESULT} = [{'diff': 7.861099999999926e-05}, {'diff': 7.876299999999906e-05}, {'diff': 7.893000000000136e-05}, {'diff': 7.856900000000056e-05}, {'diff': 7.83190000000003e-05}, {'diff': 7.851399999999828e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:19.262" endtime="20201029 18:19:19.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:19.270" level="INFO">${ACCURACY} = {'diff': [7.861099999999926e-05, 7.876299999999906e-05, 7.893000000000136e-05, 7.856900000000056e-05, 7.83190000000003e-05, 7.851399999999828e-05, 7.908300000000063e-05, 7.812499999999833e-05, 7.86810...</msg>
<status status="PASS" starttime="20201029 18:19:19.267" endtime="20201029 18:19:19.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.274" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 18:19:19.273" endtime="20201029 18:19:19.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.277" level="INFO">VALUE: [7.861099999999926e-05, 7.876299999999906e-05, 7.893000000000136e-05, 7.856900000000056e-05, 7.83190000000003e-05, 7.851399999999828e-05, 7.908300000000063e-05, 7.812499999999833e-05, 7.868100000000058e-05, 7.819499999999965e-05, 7.89450000000004e-05, 7.857000000000003e-05, 7.898599999999964e-05, 7.887500000000255e-05, 7.899999999999921e-05, 7.830600000000021e-05, 7.833299999999987e-05, 7.848699999999861e-05, 7.851399999999828e-05, 7.824999999999846e-05, 7.888899999999865e-05, 7.900000000000268e-05, 7.84030000000012e-05, 7.829199999999717e-05, 7.855500000000099e-05, 7.81389999999979e-05, 7.897200000000007e-05, 7.827800000000107e-05, 7.833399999999935e-05, 7.840299999999772e-05, 7.867999999999764e-05, 7.869500000000015e-05, 7.859800000000264e-05, 7.893100000000083e-05, 7.83190000000003e-05, 7.8458e-05, 7.834699999999944e-05, 7.838900000000162e-05, 7.837499999999858e-05, 7.824999999999846e-05, 7.888899999999865e-05, 7.838900000000162e-05, 7.86250000000023e-05, 7.899999999999921e-05, 7.855600000000046e-05, 7.879199999999767e-05, 7.827800000000107e-05, 7.843099999999686e-05, 7.865299999999797e-05, 7.824999999999846e-05]</msg>
<status status="PASS" starttime="20201029 18:19:19.276" endtime="20201029 18:19:19.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.271" endtime="20201029 18:19:19.278"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:19.282" endtime="20201029 18:19:19.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.280" endtime="20201029 18:19:19.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.279" endtime="20201029 18:19:19.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.919" endtime="20201029 18:19:19.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:18.918" endtime="20201029 18:19:19.303"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.312" endtime="20201029 18:19:19.334"></status>
</kw>
<msg timestamp="20201029 18:19:19.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.310" endtime="20201029 18:19:19.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.336" endtime="20201029 18:19:19.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.339" endtime="20201029 18:19:19.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.307" endtime="20201029 18:19:19.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.305" endtime="20201029 18:19:19.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.348" endtime="20201029 18:19:19.633"></status>
</kw>
<msg timestamp="20201029 18:19:19.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023434694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023514125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.346" endtime="20201029 18:19:19.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023434694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023514125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.638" endtime="20201029 18:19:19.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.646" endtime="20201029 18:19:19.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.344" endtime="20201029 18:19:19.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.342" endtime="20201029 18:19:19.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:19.653" level="INFO">${RESULT} = [{'diff': 7.943100000000133e-05}, {'diff': 7.930599999999774e-05}, {'diff': 7.932000000000078e-05}, {'diff': 7.995900000000097e-05}, {'diff': 7.980600000000171e-05}, {'diff': 7.956999999999756e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:19.650" endtime="20201029 18:19:19.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:19.657" level="INFO">${ACCURACY} = {'diff': [7.943100000000133e-05, 7.930599999999774e-05, 7.932000000000078e-05, 7.995900000000097e-05, 7.980600000000171e-05, 7.956999999999756e-05, 7.99450000000014e-05, 7.99450000000014e-05, 7.924999...</msg>
<status status="PASS" starttime="20201029 18:19:19.654" endtime="20201029 18:19:19.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.662" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 18:19:19.661" endtime="20201029 18:19:19.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.664" level="INFO">VALUE: [7.943100000000133e-05, 7.930599999999774e-05, 7.932000000000078e-05, 7.995900000000097e-05, 7.980600000000171e-05, 7.956999999999756e-05, 7.99450000000014e-05, 7.99450000000014e-05, 7.924999999999946e-05, 7.930600000000121e-05, 7.992999999999889e-05, 7.972200000000082e-05, 7.916700000000151e-05, 7.968000000000211e-05, 7.982000000000128e-05, 7.920800000000075e-05, 7.919400000000118e-05, 7.993099999999836e-05, 7.913900000000237e-05, 8.001399999999978e-05, 7.99450000000014e-05, 7.916699999999804e-05, 7.932000000000078e-05, 7.924999999999946e-05, 8.000000000000021e-05, 7.938799999999968e-05, 7.940200000000272e-05, 7.93190000000013e-05, 7.938899999999915e-05, 7.954199999999842e-05, 7.962499999999983e-05, 7.96389999999994e-05, 7.951399999999928e-05, 7.944499999999743e-05, 7.927800000000207e-05, 7.938899999999915e-05, 7.911099999999976e-05, 7.966699999999854e-05, 8.000000000000021e-05, 8.005599999999849e-05, 8.008300000000163e-05, 7.938799999999968e-05, 7.956900000000156e-05, 7.98190000000018e-05, 8.006899999999859e-05, 7.958300000000113e-05, 8.00970000000012e-05, 7.986100000000051e-05, 7.983300000000138e-05, 8.002799999999935e-05]</msg>
<status status="PASS" starttime="20201029 18:19:19.663" endtime="20201029 18:19:19.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.658" endtime="20201029 18:19:19.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:19.670" endtime="20201029 18:19:19.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.669" endtime="20201029 18:19:19.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.667" endtime="20201029 18:19:19.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.304" endtime="20201029 18:19:19.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.303" endtime="20201029 18:19:19.691"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.700" endtime="20201029 18:19:19.720"></status>
</kw>
<msg timestamp="20201029 18:19:19.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.698" endtime="20201029 18:19:19.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:19.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:19.721" endtime="20201029 18:19:19.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.724" endtime="20201029 18:19:19.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.696" endtime="20201029 18:19:19.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.693" endtime="20201029 18:19:19.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:19.733" endtime="20201029 18:19:20.019"></status>
</kw>
<msg timestamp="20201029 18:19:20.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020114472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020195542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:19.731" endtime="20201029 18:19:20.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020114472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020195542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.023" endtime="20201029 18:19:20.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.031" endtime="20201029 18:19:20.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.729" endtime="20201029 18:19:20.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.727" endtime="20201029 18:19:20.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:20.038" level="INFO">${RESULT} = [{'diff': 8.106999999999906e-05}, {'diff': 8.043100000000233e-05}, {'diff': 8.070900000000172e-05}, {'diff': 8.037500000000058e-05}, {'diff': 8.069399999999921e-05}, {'diff': 8.063800000000093e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:20.035" endtime="20201029 18:19:20.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:20.043" level="INFO">${ACCURACY} = {'diff': [8.106999999999906e-05, 8.043100000000233e-05, 8.070900000000172e-05, 8.037500000000058e-05, 8.069399999999921e-05, 8.063800000000093e-05, 8.101299999999784e-05, 8.037499999999712e-05, 8.0805...</msg>
<status status="PASS" starttime="20201029 18:19:20.039" endtime="20201029 18:19:20.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.047" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 18:19:20.046" endtime="20201029 18:19:20.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.050" level="INFO">VALUE: [8.106999999999906e-05, 8.043100000000233e-05, 8.070900000000172e-05, 8.037500000000058e-05, 8.069399999999921e-05, 8.063800000000093e-05, 8.101299999999784e-05, 8.037499999999712e-05, 8.080500000000324e-05, 8.020799999999828e-05, 8.080499999999977e-05, 8.026400000000003e-05, 8.07780000000001e-05, 8.04719999999981e-05, 8.038900000000015e-05, 8.055599999999899e-05, 8.02230000000008e-05, 8.050000000000071e-05, 8.081999999999881e-05, 8.069499999999868e-05, 8.026400000000003e-05, 8.106999999999906e-05, 8.067999999999964e-05, 8.030499999999927e-05, 8.038900000000015e-05, 8.094400000000293e-05, 8.050000000000071e-05, 8.011100000000076e-05, 8.105599999999949e-05, 8.076400000000053e-05, 8.070800000000225e-05, 8.04450000000019e-05, 8.038900000000015e-05, 8.061100000000126e-05, 8.098600000000164e-05, 8.10840000000021e-05, 8.026400000000003e-05, 8.03329999999984e-05, 8.030599999999874e-05, 8.022200000000132e-05, 8.068000000000311e-05, 8.098600000000164e-05, 8.054199999999942e-05, 8.011100000000076e-05, 8.05840000000016e-05, 8.023599999999742e-05, 8.038900000000015e-05, 8.070900000000172e-05, 8.08190000000028e-05, 8.065299999999997e-05]</msg>
<status status="PASS" starttime="20201029 18:19:20.048" endtime="20201029 18:19:20.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.044" endtime="20201029 18:19:20.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:20.055" endtime="20201029 18:19:20.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.053" endtime="20201029 18:19:20.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.052" endtime="20201029 18:19:20.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.692" endtime="20201029 18:19:20.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:19.691" endtime="20201029 18:19:20.075"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.084" endtime="20201029 18:19:20.104"></status>
</kw>
<msg timestamp="20201029 18:19:20.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.082" endtime="20201029 18:19:20.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.105" endtime="20201029 18:19:20.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.108" endtime="20201029 18:19:20.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.080" endtime="20201029 18:19:20.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.078" endtime="20201029 18:19:20.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.116" endtime="20201029 18:19:20.403"></status>
</kw>
<msg timestamp="20201029 18:19:20.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019629514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.115" endtime="20201029 18:19:20.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019629514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.407" endtime="20201029 18:19:20.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.415" endtime="20201029 18:19:20.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.112" endtime="20201029 18:19:20.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.111" endtime="20201029 18:19:20.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:20.422" level="INFO">${RESULT} = [{'diff': 8.188899999999819e-05}, {'diff': 8.119499999999918e-05}, {'diff': 8.19170000000008e-05}, {'diff': 8.127700000000113e-05}, {'diff': 8.143000000000039e-05}, {'diff': 8.108299999999916e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:20.418" endtime="20201029 18:19:20.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:20.426" level="INFO">${ACCURACY} = {'diff': [8.188899999999819e-05, 8.119499999999918e-05, 8.19170000000008e-05, 8.127700000000113e-05, 8.143000000000039e-05, 8.108299999999916e-05, 8.172199999999935e-05, 8.109699999999873e-05, 8.15140...</msg>
<status status="PASS" starttime="20201029 18:19:20.422" endtime="20201029 18:19:20.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.430" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 18:19:20.429" endtime="20201029 18:19:20.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.432" level="INFO">VALUE: [8.188899999999819e-05, 8.119499999999918e-05, 8.19170000000008e-05, 8.127700000000113e-05, 8.143000000000039e-05, 8.108299999999916e-05, 8.172199999999935e-05, 8.109699999999873e-05, 8.151400000000128e-05, 8.187499999999862e-05, 8.144399999999996e-05, 8.130500000000027e-05, 8.198599999999917e-05, 8.201399999999831e-05, 8.18329999999999e-05, 8.134699999999898e-05, 8.134799999999845e-05, 8.176400000000153e-05, 8.19589999999995e-05, 8.181999999999981e-05, 8.11109999999983e-05, 8.165199999999803e-05, 8.201399999999831e-05, 8.130600000000321e-05, 8.194400000000046e-05, 8.118000000000014e-05, 8.172199999999935e-05, 8.130500000000027e-05, 8.166700000000054e-05, 8.175000000000196e-05, 8.127799999999713e-05, 8.161100000000227e-05, 8.187500000000208e-05, 8.130599999999974e-05, 8.145900000000247e-05, 8.168100000000011e-05, 8.138900000000115e-05, 8.126300000000156e-05, 8.138899999999769e-05, 8.205500000000102e-05, 8.131899999999984e-05, 8.131899999999984e-05, 8.169400000000021e-05, 8.130500000000027e-05, 8.130599999999974e-05, 8.144399999999996e-05, 8.140300000000072e-05, 8.124999999999799e-05, 8.14450000000029e-05, 8.144499999999943e-05]</msg>
<status status="PASS" starttime="20201029 18:19:20.431" endtime="20201029 18:19:20.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.426" endtime="20201029 18:19:20.434"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:20.437" endtime="20201029 18:19:20.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.436" endtime="20201029 18:19:20.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.435" endtime="20201029 18:19:20.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.076" endtime="20201029 18:19:20.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.076" endtime="20201029 18:19:20.458"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.467" endtime="20201029 18:19:20.488"></status>
</kw>
<msg timestamp="20201029 18:19:20.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.465" endtime="20201029 18:19:20.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.489" endtime="20201029 18:19:20.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.492" endtime="20201029 18:19:20.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.463" endtime="20201029 18:19:20.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.460" endtime="20201029 18:19:20.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.500" endtime="20201029 18:19:20.803"></status>
</kw>
<msg timestamp="20201029 18:19:20.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020501167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020583389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.499" endtime="20201029 18:19:20.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020501167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020583389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.808" endtime="20201029 18:19:20.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.816" endtime="20201029 18:19:20.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.496" endtime="20201029 18:19:20.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.495" endtime="20201029 18:19:20.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:20.823" level="INFO">${RESULT} = [{'diff': 8.222199999999985e-05}, {'diff': 8.219499999999672e-05}, {'diff': 8.226399999999856e-05}, {'diff': 8.262499999999937e-05}, {'diff': 8.243100000000086e-05}, {'diff': 8.216600000000157e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:20.820" endtime="20201029 18:19:20.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:20.827" level="INFO">${ACCURACY} = {'diff': [8.222199999999985e-05, 8.219499999999672e-05, 8.226399999999856e-05, 8.262499999999937e-05, 8.243100000000086e-05, 8.216600000000157e-05, 8.298600000000017e-05, 8.232000000000031e-05, 8.2986...</msg>
<status status="PASS" starttime="20201029 18:19:20.824" endtime="20201029 18:19:20.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.832" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 18:19:20.831" endtime="20201029 18:19:20.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.834" level="INFO">VALUE: [8.222199999999985e-05, 8.219499999999672e-05, 8.226399999999856e-05, 8.262499999999937e-05, 8.243100000000086e-05, 8.216600000000157e-05, 8.298600000000017e-05, 8.232000000000031e-05, 8.298600000000017e-05, 8.269399999999774e-05, 8.213899999999844e-05, 8.281899999999787e-05, 8.222199999999985e-05, 8.236100000000302e-05, 8.269500000000068e-05, 8.219500000000018e-05, 8.222199999999985e-05, 8.220899999999975e-05, 8.259700000000023e-05, 8.290299999999876e-05, 8.220899999999975e-05, 8.212499999999887e-05, 8.293100000000136e-05, 8.224999999999899e-05, 8.213799999999896e-05, 8.226399999999856e-05, 8.281900000000134e-05, 8.223599999999942e-05, 8.249999999999924e-05, 8.273599999999992e-05, 8.283400000000038e-05, 8.27780000000021e-05, 8.249999999999924e-05, 8.268099999999765e-05, 8.226399999999856e-05, 8.294500000000093e-05, 8.295899999999704e-05, 8.213899999999844e-05, 8.274999999999949e-05, 8.295800000000103e-05, 8.299999999999974e-05, 8.302799999999888e-05, 8.219400000000071e-05, 8.236100000000302e-05, 8.256899999999762e-05, 8.308299999999769e-05, 8.211100000000277e-05, 8.288899999999919e-05, 8.215300000000147e-05, 8.287499999999962e-05]</msg>
<status status="PASS" starttime="20201029 18:19:20.833" endtime="20201029 18:19:20.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.828" endtime="20201029 18:19:20.836"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:20.840" endtime="20201029 18:19:20.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.839" endtime="20201029 18:19:20.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.837" endtime="20201029 18:19:20.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.459" endtime="20201029 18:19:20.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.458" endtime="20201029 18:19:20.861"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.869" endtime="20201029 18:19:20.889"></status>
</kw>
<msg timestamp="20201029 18:19:20.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.868" endtime="20201029 18:19:20.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:20.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:20.891" endtime="20201029 18:19:20.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.893" endtime="20201029 18:19:20.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.865" endtime="20201029 18:19:20.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.863" endtime="20201029 18:19:20.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:20.902" endtime="20201029 18:19:21.188"></status>
</kw>
<msg timestamp="20201029 18:19:21.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019571153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019654569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:20.901" endtime="20201029 18:19:21.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019571153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019654569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.192" endtime="20201029 18:19:21.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.200" endtime="20201029 18:19:21.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.898" endtime="20201029 18:19:21.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.896" endtime="20201029 18:19:21.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:21.207" level="INFO">${RESULT} = [{'diff': 8.341599999999935e-05}, {'diff': 8.332000000000131e-05}, {'diff': 8.405600000000249e-05}, {'diff': 8.394399999999899e-05}, {'diff': 8.352799999999938e-05}, {'diff': 8.374999999999702e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:21.203" endtime="20201029 18:19:21.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:21.212" level="INFO">${ACCURACY} = {'diff': [8.341599999999935e-05, 8.332000000000131e-05, 8.405600000000249e-05, 8.394399999999899e-05, 8.352799999999938e-05, 8.374999999999702e-05, 8.352800000000285e-05, 8.38049999999993e-05, 8.31249...</msg>
<status status="PASS" starttime="20201029 18:19:21.208" endtime="20201029 18:19:21.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.216" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 18:19:21.215" endtime="20201029 18:19:21.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.219" level="INFO">VALUE: [8.341599999999935e-05, 8.332000000000131e-05, 8.405600000000249e-05, 8.394399999999899e-05, 8.352799999999938e-05, 8.374999999999702e-05, 8.352800000000285e-05, 8.38049999999993e-05, 8.312499999999987e-05, 8.376400000000006e-05, 8.37919999999992e-05, 8.372199999999788e-05, 8.319500000000118e-05, 8.408399999999816e-05, 8.404199999999945e-05, 8.326399999999956e-05, 8.358400000000113e-05, 8.31659999999991e-05, 8.32910000000027e-05, 8.362500000000037e-05, 8.401399999999684e-05, 8.345800000000153e-05, 8.401400000000031e-05, 8.316600000000257e-05, 8.375000000000049e-05, 8.338899999999969e-05, 8.319399999999824e-05, 8.32919999999987e-05, 8.320900000000075e-05, 8.36110000000008e-05, 8.394499999999847e-05, 8.344499999999797e-05, 8.401400000000031e-05, 8.380599999999877e-05, 8.404099999999998e-05, 8.406899999999912e-05, 8.344399999999849e-05, 8.388900000000019e-05, 8.409700000000173e-05, 8.395800000000203e-05, 8.394399999999899e-05, 8.406899999999912e-05, 8.332000000000131e-05, 8.362500000000037e-05, 8.377799999999963e-05, 8.319499999999772e-05, 8.313899999999944e-05, 8.377700000000016e-05, 8.33330000000014e-05, 8.365200000000003e-05]</msg>
<status status="PASS" starttime="20201029 18:19:21.217" endtime="20201029 18:19:21.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.212" endtime="20201029 18:19:21.220"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:21.223" endtime="20201029 18:19:21.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.222" endtime="20201029 18:19:21.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.221" endtime="20201029 18:19:21.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.862" endtime="20201029 18:19:21.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:20.861" endtime="20201029 18:19:21.244"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.253" endtime="20201029 18:19:21.272"></status>
</kw>
<msg timestamp="20201029 18:19:21.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.251" endtime="20201029 18:19:21.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.273" endtime="20201029 18:19:21.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.276" endtime="20201029 18:19:21.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.248" endtime="20201029 18:19:21.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.246" endtime="20201029 18:19:21.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.285" endtime="20201029 18:19:21.588"></status>
</kw>
<msg timestamp="20201029 18:19:21.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019618125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019703097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.283" endtime="20201029 18:19:21.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019618125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019703097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.592" endtime="20201029 18:19:21.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.600" endtime="20201029 18:19:21.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.281" endtime="20201029 18:19:21.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.279" endtime="20201029 18:19:21.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:21.607" level="INFO">${RESULT} = [{'diff': 8.497199999999913e-05}, {'diff': 8.501399999999784e-05}, {'diff': 8.469400000000321e-05}, {'diff': 8.43469999999985e-05}, {'diff': 8.480599999999977e-05}, {'diff': 8.495799999999956e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:21.604" endtime="20201029 18:19:21.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:21.611" level="INFO">${ACCURACY} = {'diff': [8.497199999999913e-05, 8.501399999999784e-05, 8.469400000000321e-05, 8.43469999999985e-05, 8.480599999999977e-05, 8.495799999999956e-05, 8.463899999999747e-05, 8.456999999999909e-05, 8.49309...</msg>
<status status="PASS" starttime="20201029 18:19:21.608" endtime="20201029 18:19:21.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.615" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 18:19:21.614" endtime="20201029 18:19:21.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.618" level="INFO">VALUE: [8.497199999999913e-05, 8.501399999999784e-05, 8.469400000000321e-05, 8.43469999999985e-05, 8.480599999999977e-05, 8.495799999999956e-05, 8.463899999999747e-05, 8.456999999999909e-05, 8.49309999999999e-05, 8.501399999999784e-05, 8.431999999999884e-05, 8.48050000000003e-05, 8.508299999999969e-05, 8.440300000000026e-05, 8.425000000000099e-05, 8.48050000000003e-05, 8.501400000000131e-05, 8.450000000000124e-05, 8.506999999999959e-05, 8.430599999999927e-05, 8.458399999999866e-05, 8.440300000000026e-05, 8.472200000000235e-05, 8.469499999999922e-05, 8.40980000000012e-05, 8.440300000000026e-05, 8.490300000000076e-05, 8.499999999999827e-05, 8.46249999999979e-05, 8.463899999999747e-05, 8.430599999999927e-05, 8.508299999999969e-05, 8.477800000000063e-05, 8.475000000000149e-05, 8.480599999999977e-05, 8.413900000000044e-05, 8.45980000000017e-05, 8.425000000000099e-05, 8.424999999999752e-05, 8.438900000000069e-05, 8.433299999999894e-05, 8.469399999999974e-05, 8.48050000000003e-05, 8.458300000000266e-05, 8.436099999999808e-05, 8.449999999999777e-05, 8.423600000000142e-05, 8.495799999999956e-05, 8.41110000000013e-05, 8.433399999999841e-05]</msg>
<status status="PASS" starttime="20201029 18:19:21.617" endtime="20201029 18:19:21.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.612" endtime="20201029 18:19:21.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:21.623" endtime="20201029 18:19:21.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.621" endtime="20201029 18:19:21.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.620" endtime="20201029 18:19:21.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.245" endtime="20201029 18:19:21.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.244" endtime="20201029 18:19:21.643"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.652" endtime="20201029 18:19:21.673"></status>
</kw>
<msg timestamp="20201029 18:19:21.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.651" endtime="20201029 18:19:21.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:21.675" endtime="20201029 18:19:21.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.677" endtime="20201029 18:19:21.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.648" endtime="20201029 18:19:21.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.646" endtime="20201029 18:19:21.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.686" endtime="20201029 18:19:21.972"></status>
</kw>
<msg timestamp="20201029 18:19:21.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020560611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020645861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.685" endtime="20201029 18:19:21.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020560611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020645861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:21.976" endtime="20201029 18:19:21.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:21.984" endtime="20201029 18:19:21.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.682" endtime="20201029 18:19:21.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.681" endtime="20201029 18:19:21.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:21.991" level="INFO">${RESULT} = [{'diff': 8.525000000000199e-05}, {'diff': 8.541700000000083e-05}, {'diff': 8.533299999999994e-05}, {'diff': 8.576400000000206e-05}, {'diff': 8.5944999999997e-05}, {'diff': 8.58059999999973e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:19:21.988" endtime="20201029 18:19:21.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:21.995" level="INFO">${ACCURACY} = {'diff': [8.525000000000199e-05, 8.541700000000083e-05, 8.533299999999994e-05, 8.576400000000206e-05, 8.5944999999997e-05, 8.58059999999973e-05, 8.595900000000004e-05, 8.545899999999954e-05, 8.5444999...</msg>
<status status="PASS" starttime="20201029 18:19:21.992" endtime="20201029 18:19:21.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:21.999" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 18:19:21.998" endtime="20201029 18:19:22.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.002" level="INFO">VALUE: [8.525000000000199e-05, 8.541700000000083e-05, 8.533299999999994e-05, 8.576400000000206e-05, 8.5944999999997e-05, 8.58059999999973e-05, 8.595900000000004e-05, 8.545899999999954e-05, 8.544499999999997e-05, 8.555500000000105e-05, 8.595800000000056e-05, 8.538799999999874e-05, 8.56660000000016e-05, 8.583299999999697e-05, 8.551400000000181e-05, 8.544400000000049e-05, 8.573599999999945e-05, 8.520799999999981e-05, 8.520799999999981e-05, 8.608400000000016e-05, 8.544499999999997e-05, 8.549999999999877e-05, 8.538900000000169e-05, 8.608400000000016e-05, 8.549999999999877e-05, 8.527700000000166e-05, 8.54859999999992e-05, 8.593000000000142e-05, 8.509699999999926e-05, 8.563899999999847e-05, 8.58189999999974e-05, 8.558300000000019e-05, 8.555599999999705e-05, 8.54720000000031e-05, 8.587499999999915e-05, 8.51249999999984e-05, 8.601400000000231e-05, 8.516700000000058e-05, 8.537499999999865e-05, 8.5459000000003e-05, 8.527800000000113e-05, 8.590200000000228e-05, 8.608299999999722e-05, 8.591699999999786e-05, 8.587499999999915e-05, 8.536100000000255e-05, 8.526399999999809e-05, 8.549999999999877e-05, 8.594400000000099e-05, 8.61119999999993e-05]</msg>
<status status="PASS" starttime="20201029 18:19:22.000" endtime="20201029 18:19:22.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.996" endtime="20201029 18:19:22.009"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:22.012" endtime="20201029 18:19:22.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.011" endtime="20201029 18:19:22.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.010" endtime="20201029 18:19:22.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.644" endtime="20201029 18:19:22.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:21.644" endtime="20201029 18:19:22.033"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.042" endtime="20201029 18:19:22.062"></status>
</kw>
<msg timestamp="20201029 18:19:22.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.041" endtime="20201029 18:19:22.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.064" endtime="20201029 18:19:22.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.067" endtime="20201029 18:19:22.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.038" endtime="20201029 18:19:22.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.036" endtime="20201029 18:19:22.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.076" endtime="20201029 18:19:22.379"></status>
</kw>
<msg timestamp="20201029 18:19:22.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020257889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020344597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.074" endtime="20201029 18:19:22.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020257889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020344597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.384" endtime="20201029 18:19:22.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.392" endtime="20201029 18:19:22.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.072" endtime="20201029 18:19:22.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.070" endtime="20201029 18:19:22.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:22.399" level="INFO">${RESULT} = [{'diff': 8.670799999999784e-05}, {'diff': 8.702799999999941e-05}, {'diff': 8.661100000000033e-05}, {'diff': 8.645800000000106e-05}, {'diff': 8.676399999999959e-05}, {'diff': 8.698599999999723e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:22.396" endtime="20201029 18:19:22.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:22.404" level="INFO">${ACCURACY} = {'diff': [8.670799999999784e-05, 8.702799999999941e-05, 8.661100000000033e-05, 8.645800000000106e-05, 8.676399999999959e-05, 8.698599999999723e-05, 8.69730000000006e-05, 8.64860000000002e-05, 8.615199...</msg>
<status status="PASS" starttime="20201029 18:19:22.400" endtime="20201029 18:19:22.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.409" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 18:19:22.408" endtime="20201029 18:19:22.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.411" level="INFO">VALUE: [8.670799999999784e-05, 8.702799999999941e-05, 8.661100000000033e-05, 8.645800000000106e-05, 8.676399999999959e-05, 8.698599999999723e-05, 8.69730000000006e-05, 8.64860000000002e-05, 8.615199999999906e-05, 8.663799999999999e-05, 8.633300000000094e-05, 8.690199999999981e-05, 8.706900000000212e-05, 8.658299999999772e-05, 8.633300000000094e-05, 8.68189999999984e-05, 8.640299999999879e-05, 8.670800000000131e-05, 8.706899999999865e-05, 8.613899999999897e-05, 8.680600000000177e-05, 8.638899999999922e-05, 8.687500000000015e-05, 8.609700000000026e-05, 8.620800000000081e-05, 8.68059999999983e-05, 8.677699999999969e-05, 8.631900000000137e-05, 8.651399999999934e-05, 8.700000000000027e-05, 8.695800000000156e-05, 8.706899999999865e-05, 8.61669999999981e-05, 8.619499999999725e-05, 8.687500000000015e-05, 8.669499999999775e-05, 8.625000000000299e-05, 8.683399999999744e-05, 8.649999999999977e-05, 8.701399999999984e-05, 8.636100000000008e-05, 8.663899999999947e-05, 8.645800000000106e-05, 8.63470000000005e-05, 8.629100000000223e-05, 8.637499999999965e-05, 8.687500000000015e-05, 8.655600000000152e-05, 8.654200000000195e-05, 8.615299999999854e-05]</msg>
<status status="PASS" starttime="20201029 18:19:22.410" endtime="20201029 18:19:22.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.405" endtime="20201029 18:19:22.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:22.416" endtime="20201029 18:19:22.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.415" endtime="20201029 18:19:22.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.413" endtime="20201029 18:19:22.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.034" endtime="20201029 18:19:22.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.033" endtime="20201029 18:19:22.437"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.446" endtime="20201029 18:19:22.466"></status>
</kw>
<msg timestamp="20201029 18:19:22.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.444" endtime="20201029 18:19:22.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.468" endtime="20201029 18:19:22.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.471" endtime="20201029 18:19:22.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.442" endtime="20201029 18:19:22.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.439" endtime="20201029 18:19:22.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.480" endtime="20201029 18:19:22.766"></status>
</kw>
<msg timestamp="20201029 18:19:22.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020124139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020211611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.478" endtime="20201029 18:19:22.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020124139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020211611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.771" endtime="20201029 18:19:22.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.779" endtime="20201029 18:19:22.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.476" endtime="20201029 18:19:22.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.474" endtime="20201029 18:19:22.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:22.786" level="INFO">${RESULT} = [{'diff': 8.747200000000163e-05}, {'diff': 8.747200000000163e-05}, {'diff': 8.741699999999936e-05}, {'diff': 8.800000000000127e-05}, {'diff': 8.781999999999887e-05}, {'diff': 8.797199999999866e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:22.783" endtime="20201029 18:19:22.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:22.790" level="INFO">${ACCURACY} = {'diff': [8.747200000000163e-05, 8.747200000000163e-05, 8.741699999999936e-05, 8.800000000000127e-05, 8.781999999999887e-05, 8.797199999999866e-05, 8.737500000000065e-05, 8.797299999999814e-05, 8.7278...</msg>
<status status="PASS" starttime="20201029 18:19:22.787" endtime="20201029 18:19:22.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.795" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 18:19:22.794" endtime="20201029 18:19:22.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.797" level="INFO">VALUE: [8.747200000000163e-05, 8.747200000000163e-05, 8.741699999999936e-05, 8.800000000000127e-05, 8.781999999999887e-05, 8.797199999999866e-05, 8.737500000000065e-05, 8.797299999999814e-05, 8.727800000000313e-05, 8.777700000000069e-05, 8.769399999999927e-05, 8.797199999999866e-05, 8.748599999999773e-05, 8.805500000000008e-05, 8.786100000000158e-05, 8.74860000000012e-05, 8.76669999999996e-05, 8.71669999999991e-05, 8.715299999999954e-05, 8.806999999999912e-05, 8.776400000000059e-05, 8.761099999999786e-05, 8.768099999999918e-05, 8.733400000000141e-05, 8.719399999999877e-05, 8.783299999999897e-05, 8.76250000000009e-05, 8.784700000000201e-05, 8.755500000000305e-05, 8.794400000000299e-05, 8.726400000000009e-05, 8.744399999999902e-05, 8.733400000000141e-05, 8.751400000000034e-05, 8.715299999999954e-05, 8.76669999999996e-05, 8.775000000000102e-05, 8.78059999999993e-05, 8.807000000000259e-05, 8.79999999999978e-05, 8.758300000000219e-05, 8.761100000000133e-05, 8.759699999999829e-05, 8.719399999999877e-05, 8.78059999999993e-05, 8.774999999999755e-05, 8.725000000000052e-05, 8.74449999999985e-05, 8.738900000000022e-05, 8.804199999999998e-05]</msg>
<status status="PASS" starttime="20201029 18:19:22.796" endtime="20201029 18:19:22.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.791" endtime="20201029 18:19:22.799"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:22.802" endtime="20201029 18:19:22.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.801" endtime="20201029 18:19:22.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.800" endtime="20201029 18:19:22.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.438" endtime="20201029 18:19:22.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.437" endtime="20201029 18:19:22.823"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.833" endtime="20201029 18:19:22.857"></status>
</kw>
<msg timestamp="20201029 18:19:22.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.831" endtime="20201029 18:19:22.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:22.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:22.858" endtime="20201029 18:19:22.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.861" endtime="20201029 18:19:22.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.828" endtime="20201029 18:19:22.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.826" endtime="20201029 18:19:22.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:22.870" endtime="20201029 18:19:23.157"></status>
</kw>
<msg timestamp="20201029 18:19:23.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024475056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024563931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:22.869" endtime="20201029 18:19:23.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024475056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024563931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.161" endtime="20201029 18:19:23.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.169" endtime="20201029 18:19:23.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.866" endtime="20201029 18:19:23.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.864" endtime="20201029 18:19:23.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:23.176" level="INFO">${RESULT} = [{'diff': 8.887500000000215e-05}, {'diff': 8.902700000000194e-05}, {'diff': 8.858299999999972e-05}, {'diff': 8.83189999999999e-05}, {'diff': 8.858299999999972e-05}, {'diff': 8.901399999999837e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:23.173" endtime="20201029 18:19:23.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:23.180" level="INFO">${ACCURACY} = {'diff': [8.887500000000215e-05, 8.902700000000194e-05, 8.858299999999972e-05, 8.83189999999999e-05, 8.858299999999972e-05, 8.901399999999837e-05, 8.840300000000079e-05, 8.837500000000165e-05, 8.81809...</msg>
<status status="PASS" starttime="20201029 18:19:23.177" endtime="20201029 18:19:23.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.185" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 18:19:23.184" endtime="20201029 18:19:23.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.188" level="INFO">VALUE: [8.887500000000215e-05, 8.902700000000194e-05, 8.858299999999972e-05, 8.83189999999999e-05, 8.858299999999972e-05, 8.901399999999837e-05, 8.840300000000079e-05, 8.837500000000165e-05, 8.818099999999968e-05, 8.858399999999919e-05, 8.833399999999894e-05, 8.883399999999944e-05, 8.883399999999944e-05, 8.851399999999787e-05, 8.877799999999769e-05, 8.84449999999995e-05, 8.859699999999929e-05, 8.886100000000258e-05, 8.876400000000159e-05, 8.843000000000045e-05, 8.812499999999793e-05, 8.877799999999769e-05, 8.869400000000027e-05, 8.875000000000202e-05, 8.882000000000334e-05, 8.861199999999833e-05, 8.851400000000134e-05, 8.819499999999925e-05, 8.86250000000019e-05, 8.841600000000088e-05, 8.844400000000002e-05, 8.84860000000022e-05, 8.905600000000055e-05, 8.86250000000019e-05, 8.901400000000184e-05, 8.888900000000172e-05, 8.830500000000033e-05, 8.827800000000066e-05, 8.86250000000019e-05, 8.81250000000014e-05, 8.845899999999907e-05, 8.81250000000014e-05, 8.838899999999775e-05, 8.826399999999762e-05, 8.902699999999847e-05, 8.906899999999718e-05, 8.824999999999805e-05, 8.856900000000015e-05, 8.830500000000033e-05, 8.865300000000104e-05]</msg>
<status status="PASS" starttime="20201029 18:19:23.186" endtime="20201029 18:19:23.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.181" endtime="20201029 18:19:23.190"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:23.193" endtime="20201029 18:19:23.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.192" endtime="20201029 18:19:23.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.191" endtime="20201029 18:19:23.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.824" endtime="20201029 18:19:23.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:22.823" endtime="20201029 18:19:23.214"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.223" endtime="20201029 18:19:23.243"></status>
</kw>
<msg timestamp="20201029 18:19:23.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.221" endtime="20201029 18:19:23.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.245" endtime="20201029 18:19:23.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.247" endtime="20201029 18:19:23.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.219" endtime="20201029 18:19:23.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.217" endtime="20201029 18:19:23.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.257" endtime="20201029 18:19:23.542"></status>
</kw>
<msg timestamp="20201029 18:19:23.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020061583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020151431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.255" endtime="20201029 18:19:23.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020061583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020151431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.546" endtime="20201029 18:19:23.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.554" endtime="20201029 18:19:23.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.252" endtime="20201029 18:19:23.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.251" endtime="20201029 18:19:23.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:23.561" level="INFO">${RESULT} = [{'diff': 8.984800000000001e-05}, {'diff': 8.987499999999968e-05}, {'diff': 8.970800000000084e-05}, {'diff': 8.979099999999879e-05}, {'diff': 8.987499999999968e-05}, {'diff': 8.9638999999999e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:23.558" endtime="20201029 18:19:23.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:23.566" level="INFO">${ACCURACY} = {'diff': [8.984800000000001e-05, 8.987499999999968e-05, 8.970800000000084e-05, 8.979099999999879e-05, 8.987499999999968e-05, 8.9638999999999e-05, 8.926399999999862e-05, 8.998600000000023e-05, 9.005500...</msg>
<status status="PASS" starttime="20201029 18:19:23.562" endtime="20201029 18:19:23.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.571" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 18:19:23.570" endtime="20201029 18:19:23.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.573" level="INFO">VALUE: [8.984800000000001e-05, 8.987499999999968e-05, 8.970800000000084e-05, 8.979099999999879e-05, 8.987499999999968e-05, 8.9638999999999e-05, 8.926399999999862e-05, 8.998600000000023e-05, 9.005500000000208e-05, 8.958300000000072e-05, 8.99999999999998e-05, 8.91250000000024e-05, 8.987499999999968e-05, 8.919499999999678e-05, 8.990300000000229e-05, 8.968099999999771e-05, 8.9332999999997e-05, 8.995800000000109e-05, 9.001400000000284e-05, 8.919400000000077e-05, 8.965300000000204e-05, 8.96250000000029e-05, 8.944400000000102e-05, 8.909700000000326e-05, 8.970800000000084e-05, 8.987499999999968e-05, 8.96670000000016e-05, 8.9638999999999e-05, 8.961099999999986e-05, 8.924999999999905e-05, 8.94999999999993e-05, 8.972200000000041e-05, 8.951399999999887e-05, 8.987499999999968e-05, 8.920800000000034e-05, 8.920800000000034e-05, 8.983300000000097e-05, 8.987499999999968e-05, 8.947200000000016e-05, 8.948599999999973e-05, 8.970900000000032e-05, 8.98060000000013e-05, 8.923599999999948e-05, 8.9945000000001e-05, 8.968099999999771e-05, 8.990199999999934e-05, 8.912499999999893e-05, 8.937499999999918e-05, 8.915300000000154e-05, 8.934700000000004e-05]</msg>
<status status="PASS" starttime="20201029 18:19:23.572" endtime="20201029 18:19:23.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.567" endtime="20201029 18:19:23.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:23.578" endtime="20201029 18:19:23.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.577" endtime="20201029 18:19:23.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.576" endtime="20201029 18:19:23.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.215" endtime="20201029 18:19:23.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.215" endtime="20201029 18:19:23.599"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.608" endtime="20201029 18:19:23.628"></status>
</kw>
<msg timestamp="20201029 18:19:23.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.607" endtime="20201029 18:19:23.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.630" endtime="20201029 18:19:23.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.632" endtime="20201029 18:19:23.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.604" endtime="20201029 18:19:23.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.602" endtime="20201029 18:19:23.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.642" endtime="20201029 18:19:23.930"></status>
</kw>
<msg timestamp="20201029 18:19:23.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020114083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020204583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.640" endtime="20201029 18:19:23.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020114083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020204583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:23.934" endtime="20201029 18:19:23.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.942" endtime="20201029 18:19:23.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.638" endtime="20201029 18:19:23.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.636" endtime="20201029 18:19:23.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:23.949" level="INFO">${RESULT} = [{'diff': 9.05000000000003e-05}, {'diff': 9.097200000000166e-05}, {'diff': 9.087500000000068e-05}, {'diff': 9.011100000000036e-05}, {'diff': 9.093099999999896e-05}, {'diff': 9.019400000000177e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:23.946" endtime="20201029 18:19:23.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:23.954" level="INFO">${ACCURACY} = {'diff': [9.05000000000003e-05, 9.097200000000166e-05, 9.087500000000068e-05, 9.011100000000036e-05, 9.093099999999896e-05, 9.019400000000177e-05, 9.08199999999984e-05, 9.104199999999951e-05, 9.104199...</msg>
<status status="PASS" starttime="20201029 18:19:23.950" endtime="20201029 18:19:23.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.958" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 18:19:23.957" endtime="20201029 18:19:23.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:23.961" level="INFO">VALUE: [9.05000000000003e-05, 9.097200000000166e-05, 9.087500000000068e-05, 9.011100000000036e-05, 9.093099999999896e-05, 9.019400000000177e-05, 9.08199999999984e-05, 9.104199999999951e-05, 9.104199999999951e-05, 9.10139999999969e-05, 9.095799999999862e-05, 9.055499999999911e-05, 9.106899999999918e-05, 9.073600000000098e-05, 9.108299999999875e-05, 9.084699999999807e-05, 9.077799999999969e-05, 9.026400000000309e-05, 9.069500000000175e-05, 9.058400000000119e-05, 9.098600000000123e-05, 9.051399999999987e-05, 9.107000000000212e-05, 9.026399999999962e-05, 9.023600000000048e-05, 9.020800000000134e-05, 9.036100000000061e-05, 9.023600000000048e-05, 9.10000000000008e-05, 9.072200000000141e-05, 9.072200000000141e-05, 9.026399999999962e-05, 9.037500000000018e-05, 9.058299999999825e-05, 9.044499999999803e-05, 9.045900000000107e-05, 9.101400000000037e-05, 9.066599999999966e-05, 9.058400000000119e-05, 9.094399999999905e-05, 9.09870000000007e-05, 9.101400000000037e-05, 9.06939999999988e-05, 9.080499999999936e-05, 9.069400000000227e-05, 9.031899999999843e-05, 9.062500000000043e-05, 9.040299999999932e-05, 9.016599999999916e-05, 9.044499999999803e-05]</msg>
<status status="PASS" starttime="20201029 18:19:23.959" endtime="20201029 18:19:23.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.954" endtime="20201029 18:19:23.962"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:23.966" endtime="20201029 18:19:23.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.964" endtime="20201029 18:19:23.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.963" endtime="20201029 18:19:23.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.600" endtime="20201029 18:19:23.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.600" endtime="20201029 18:19:23.987"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:23.996" endtime="20201029 18:19:24.017"></status>
</kw>
<msg timestamp="20201029 18:19:24.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:23.994" endtime="20201029 18:19:24.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.019" endtime="20201029 18:19:24.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.022" endtime="20201029 18:19:24.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.991" endtime="20201029 18:19:24.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.989" endtime="20201029 18:19:24.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.031" endtime="20201029 18:19:24.317"></status>
</kw>
<msg timestamp="20201029 18:19:24.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02114825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021240333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:24.029" endtime="20201029 18:19:24.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02114825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021240333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:24.321" endtime="20201029 18:19:24.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.329" endtime="20201029 18:19:24.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.027" endtime="20201029 18:19:24.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.025" endtime="20201029 18:19:24.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:24.336" level="INFO">${RESULT} = [{'diff': 9.208299999999975e-05}, {'diff': 9.138900000000075e-05}, {'diff': 9.176400000000112e-05}, {'diff': 9.16529999999971e-05}, {'diff': 9.11390000000005e-05}, {'diff': 9.175000000000155e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:24.333" endtime="20201029 18:19:24.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:24.340" level="INFO">${ACCURACY} = {'diff': [9.208299999999975e-05, 9.138900000000075e-05, 9.176400000000112e-05, 9.16529999999971e-05, 9.11390000000005e-05, 9.175000000000155e-05, 9.115300000000007e-05, 9.111100000000136e-05, 9.208299...</msg>
<status status="PASS" starttime="20201029 18:19:24.337" endtime="20201029 18:19:24.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.345" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 18:19:24.344" endtime="20201029 18:19:24.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.347" level="INFO">VALUE: [9.208299999999975e-05, 9.138900000000075e-05, 9.176400000000112e-05, 9.16529999999971e-05, 9.11390000000005e-05, 9.175000000000155e-05, 9.115300000000007e-05, 9.111100000000136e-05, 9.208299999999975e-05, 9.18199999999994e-05, 9.205600000000008e-05, 9.194499999999953e-05, 9.145799999999912e-05, 9.111100000000136e-05, 9.120799999999887e-05, 9.134700000000204e-05, 9.155500000000011e-05, 9.175000000000155e-05, 9.199999999999833e-05, 9.201400000000137e-05, 9.126400000000062e-05, 9.126400000000062e-05, 9.124999999999758e-05, 9.182000000000287e-05, 9.162499999999796e-05, 9.11390000000005e-05, 9.159699999999882e-05, 9.177700000000122e-05, 9.193099999999996e-05, 9.144399999999955e-05, 9.199999999999833e-05, 9.168000000000023e-05, 9.1332999999999e-05, 9.190299999999735e-05, 9.191700000000039e-05, 9.193099999999996e-05, 9.204200000000051e-05, 9.126400000000062e-05, 9.141600000000041e-05, 9.187500000000168e-05, 9.172300000000189e-05, 9.172199999999894e-05, 9.112500000000093e-05, 9.194400000000005e-05, 9.18329999999995e-05, 9.195799999999962e-05, 9.122200000000191e-05, 9.144400000000302e-05, 9.190300000000082e-05, 9.176400000000112e-05]</msg>
<status status="PASS" starttime="20201029 18:19:24.346" endtime="20201029 18:19:24.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.341" endtime="20201029 18:19:24.350"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:24.354" endtime="20201029 18:19:24.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.352" endtime="20201029 18:19:24.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.351" endtime="20201029 18:19:24.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.987" endtime="20201029 18:19:24.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:23.987" endtime="20201029 18:19:24.374"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.383" endtime="20201029 18:19:24.404"></status>
</kw>
<msg timestamp="20201029 18:19:24.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.381" endtime="20201029 18:19:24.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.405" endtime="20201029 18:19:24.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.408" endtime="20201029 18:19:24.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.379" endtime="20201029 18:19:24.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.377" endtime="20201029 18:19:24.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.417" endtime="20201029 18:19:24.704"></status>
</kw>
<msg timestamp="20201029 18:19:24.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019998639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020091222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.416" endtime="20201029 18:19:24.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019998639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020091222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.708" endtime="20201029 18:19:24.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.716" endtime="20201029 18:19:24.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.413" endtime="20201029 18:19:24.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.411" endtime="20201029 18:19:24.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:24.723" level="INFO">${RESULT} = [{'diff': 9.258300000000025e-05}, {'diff': 9.293100000000096e-05}, {'diff': 9.262500000000243e-05}, {'diff': 9.21529999999976e-05}, {'diff': 9.275000000000255e-05}, {'diff': 9.28200000000004e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:19:24.720" endtime="20201029 18:19:24.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:24.728" level="INFO">${ACCURACY} = {'diff': [9.258300000000025e-05, 9.293100000000096e-05, 9.262500000000243e-05, 9.21529999999976e-05, 9.275000000000255e-05, 9.28200000000004e-05, 9.276400000000212e-05, 9.230600000000033e-05, 9.244500...</msg>
<status status="PASS" starttime="20201029 18:19:24.724" endtime="20201029 18:19:24.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.733" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 18:19:24.732" endtime="20201029 18:19:24.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.735" level="INFO">VALUE: [9.258300000000025e-05, 9.293100000000096e-05, 9.262500000000243e-05, 9.21529999999976e-05, 9.275000000000255e-05, 9.28200000000004e-05, 9.276400000000212e-05, 9.230600000000033e-05, 9.244500000000003e-05, 9.244500000000003e-05, 9.230500000000086e-05, 9.277800000000169e-05, 9.212500000000193e-05, 9.224999999999858e-05, 9.21940000000003e-05, 9.306900000000118e-05, 9.299999999999933e-05, 9.30139999999989e-05, 9.28200000000004e-05, 9.262499999999896e-05, 9.305599999999761e-05, 9.215199999999812e-05, 9.220799999999987e-05, 9.299999999999933e-05, 9.240300000000132e-05, 9.2333e-05, 9.275000000000255e-05, 9.251400000000187e-05, 9.265300000000157e-05, 9.248600000000273e-05, 9.240299999999785e-05, 9.24719999999997e-05, 9.291700000000139e-05, 9.255600000000058e-05, 9.220799999999987e-05, 9.25139999999984e-05, 9.224999999999858e-05, 9.305600000000108e-05, 9.263799999999905e-05, 9.236099999999914e-05, 9.305499999999814e-05, 9.30000000000028e-05, 9.24719999999997e-05, 9.269399999999733e-05, 9.299999999999933e-05, 9.244500000000003e-05, 9.280600000000083e-05, 9.283399999999997e-05, 9.276399999999865e-05, 9.231900000000043e-05]</msg>
<status status="PASS" starttime="20201029 18:19:24.734" endtime="20201029 18:19:24.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.729" endtime="20201029 18:19:24.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:24.741" endtime="20201029 18:19:24.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.739" endtime="20201029 18:19:24.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.738" endtime="20201029 18:19:24.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.375" endtime="20201029 18:19:24.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.375" endtime="20201029 18:19:24.761"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.770" endtime="20201029 18:19:24.790"></status>
</kw>
<msg timestamp="20201029 18:19:24.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.769" endtime="20201029 18:19:24.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:24.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:24.792" endtime="20201029 18:19:24.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.794" endtime="20201029 18:19:24.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.766" endtime="20201029 18:19:24.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.764" endtime="20201029 18:19:24.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:24.804" endtime="20201029 18:19:25.091"></status>
</kw>
<msg timestamp="20201029 18:19:25.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020118611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020212542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:24.802" endtime="20201029 18:19:25.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020118611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020212542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:25.095" endtime="20201029 18:19:25.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.103" endtime="20201029 18:19:25.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.800" endtime="20201029 18:19:25.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.798" endtime="20201029 18:19:25.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:25.110" level="INFO">${RESULT} = [{'diff': 9.393099999999849e-05}, {'diff': 9.38200000000014e-05}, {'diff': 9.39590000000011e-05}, {'diff': 9.369500000000128e-05}, {'diff': 9.4027e-05}, {'diff': 9.324999999999958e-05}, {'diff': 9.400...</msg>
<status status="PASS" starttime="20201029 18:19:25.107" endtime="20201029 18:19:25.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:25.114" level="INFO">${ACCURACY} = {'diff': [9.393099999999849e-05, 9.38200000000014e-05, 9.39590000000011e-05, 9.369500000000128e-05, 9.4027e-05, 9.324999999999958e-05, 9.400000000000033e-05, 9.349999999999983e-05, 9.37079999999979e-0...</msg>
<status status="PASS" starttime="20201029 18:19:25.111" endtime="20201029 18:19:25.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.119" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 18:19:25.118" endtime="20201029 18:19:25.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.122" level="INFO">VALUE: [9.393099999999849e-05, 9.38200000000014e-05, 9.39590000000011e-05, 9.369500000000128e-05, 9.4027e-05, 9.324999999999958e-05, 9.400000000000033e-05, 9.349999999999983e-05, 9.37079999999979e-05, 9.359700000000082e-05, 9.391699999999892e-05, 9.375000000000008e-05, 9.354199999999854e-05, 9.362499999999996e-05, 9.357000000000115e-05, 9.383400000000097e-05, 9.318100000000121e-05, 9.386200000000011e-05, 9.404199999999904e-05, 9.4027e-05, 9.362499999999996e-05, 9.337499999999971e-05, 9.34720000000007e-05, 9.395800000000162e-05, 9.395800000000162e-05, 9.316700000000164e-05, 9.388899999999978e-05, 9.400000000000033e-05, 9.393100000000196e-05, 9.394500000000153e-05, 9.331999999999743e-05, 9.319499999999731e-05, 9.379199999999879e-05, 9.377699999999975e-05, 9.326399999999915e-05, 9.40139999999999e-05, 9.363899999999953e-05, 9.31940000000013e-05, 9.40139999999999e-05, 9.35139999999994e-05, 9.343100000000146e-05, 9.345800000000112e-05, 9.402800000000294e-05, 9.368100000000171e-05, 9.334700000000057e-05, 9.327799999999872e-05, 9.315199999999912e-05, 9.318100000000121e-05, 9.388899999999978e-05, 9.330500000000186e-05]</msg>
<status status="PASS" starttime="20201029 18:19:25.120" endtime="20201029 18:19:25.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.115" endtime="20201029 18:19:25.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:25.127" endtime="20201029 18:19:25.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.125" endtime="20201029 18:19:25.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.124" endtime="20201029 18:19:25.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.762" endtime="20201029 18:19:25.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:24.762" endtime="20201029 18:19:25.147"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.156" endtime="20201029 18:19:25.178"></status>
</kw>
<msg timestamp="20201029 18:19:25.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.155" endtime="20201029 18:19:25.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.180" endtime="20201029 18:19:25.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.182" endtime="20201029 18:19:25.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.152" endtime="20201029 18:19:25.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.150" endtime="20201029 18:19:25.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.192" endtime="20201029 18:19:25.477"></status>
</kw>
<msg timestamp="20201029 18:19:25.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021108375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021202972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:25.190" endtime="20201029 18:19:25.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021108375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021202972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:25.481" endtime="20201029 18:19:25.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.490" endtime="20201029 18:19:25.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.187" endtime="20201029 18:19:25.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.186" endtime="20201029 18:19:25.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:25.497" level="INFO">${RESULT} = [{'diff': 9.459700000000182e-05}, {'diff': 9.413900000000003e-05}, {'diff': 9.412499999999699e-05}, {'diff': 9.409699999999785e-05}, {'diff': 9.434800000000104e-05}, {'diff': 9.437500000000071e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:25.493" endtime="20201029 18:19:25.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:25.501" level="INFO">${ACCURACY} = {'diff': [9.459700000000182e-05, 9.413900000000003e-05, 9.412499999999699e-05, 9.409699999999785e-05, 9.434800000000104e-05, 9.437500000000071e-05, 9.500000000000133e-05, 9.426400000000015e-05, 9.5069...</msg>
<status status="PASS" starttime="20201029 18:19:25.498" endtime="20201029 18:19:25.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.505" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 18:19:25.504" endtime="20201029 18:19:25.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.508" level="INFO">VALUE: [9.459700000000182e-05, 9.413900000000003e-05, 9.412499999999699e-05, 9.409699999999785e-05, 9.434800000000104e-05, 9.437500000000071e-05, 9.500000000000133e-05, 9.426400000000015e-05, 9.506999999999918e-05, 9.447300000000117e-05, 9.420800000000187e-05, 9.467999999999976e-05, 9.480499999999989e-05, 9.469399999999933e-05, 9.459699999999835e-05, 9.476400000000065e-05, 9.440299999999985e-05, 9.469399999999933e-05, 9.488900000000078e-05, 9.486199999999764e-05, 9.470900000000185e-05, 9.477800000000022e-05, 9.455599999999911e-05, 9.462500000000096e-05, 9.455599999999911e-05, 9.508299999999928e-05, 9.425000000000058e-05, 9.427700000000025e-05, 9.48330000000025e-05, 9.431900000000243e-05, 9.480499999999989e-05, 9.495799999999915e-05, 9.488900000000078e-05, 9.437500000000071e-05, 9.45140000000004e-05, 9.430599999999886e-05, 9.469499999999881e-05, 9.440299999999985e-05, 9.477700000000075e-05, 9.480499999999989e-05, 9.494399999999958e-05, 9.445799999999865e-05, 9.46940000000028e-05, 9.495799999999915e-05, 9.508299999999928e-05, 9.493099999999949e-05, 9.468100000000271e-05, 9.497300000000167e-05, 9.424999999999711e-05, 9.470900000000185e-05]</msg>
<status status="PASS" starttime="20201029 18:19:25.507" endtime="20201029 18:19:25.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.502" endtime="20201029 18:19:25.510"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:25.514" endtime="20201029 18:19:25.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.512" endtime="20201029 18:19:25.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.511" endtime="20201029 18:19:25.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.148" endtime="20201029 18:19:25.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.148" endtime="20201029 18:19:25.535"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.544" endtime="20201029 18:19:25.565"></status>
</kw>
<msg timestamp="20201029 18:19:25.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.542" endtime="20201029 18:19:25.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.566" endtime="20201029 18:19:25.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.569" endtime="20201029 18:19:25.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.539" endtime="20201029 18:19:25.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.537" endtime="20201029 18:19:25.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.578" endtime="20201029 18:19:25.863"></status>
</kw>
<msg timestamp="20201029 18:19:25.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020098236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0201935, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:25.576" endtime="20201029 18:19:25.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020098236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0201935, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:19:25.867" endtime="20201029 18:19:25.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.876" endtime="20201029 18:19:25.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.574" endtime="20201029 18:19:25.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.572" endtime="20201029 18:19:25.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:25.883" level="INFO">${RESULT} = [{'diff': 9.526400000000115e-05}, {'diff': 9.506999999999918e-05}, {'diff': 9.556999999999968e-05}, {'diff': 9.559699999999935e-05}, {'diff': 9.508399999999875e-05}, {'diff': 9.538900000000128e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:25.880" endtime="20201029 18:19:25.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:25.889" level="INFO">${ACCURACY} = {'diff': [9.526400000000115e-05, 9.506999999999918e-05, 9.556999999999968e-05, 9.559699999999935e-05, 9.508399999999875e-05, 9.538900000000128e-05, 9.543000000000051e-05, 9.518000000000026e-05, 9.5292...</msg>
<status status="PASS" starttime="20201029 18:19:25.885" endtime="20201029 18:19:25.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.894" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 18:19:25.893" endtime="20201029 18:19:25.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.896" level="INFO">VALUE: [9.526400000000115e-05, 9.506999999999918e-05, 9.556999999999968e-05, 9.559699999999935e-05, 9.508399999999875e-05, 9.538900000000128e-05, 9.543000000000051e-05, 9.518000000000026e-05, 9.529200000000029e-05, 9.530500000000039e-05, 9.605500000000114e-05, 9.550000000000183e-05, 9.605500000000114e-05, 9.607000000000018e-05, 9.520899999999888e-05, 9.608399999999975e-05, 9.562499999999849e-05, 9.576400000000165e-05, 9.576300000000218e-05, 9.561100000000239e-05, 9.586100000000264e-05, 9.569400000000033e-05, 9.540300000000085e-05, 9.51530000000006e-05, 9.575000000000208e-05, 9.556900000000021e-05, 9.537500000000171e-05, 9.605600000000061e-05, 9.6027999999998e-05, 9.556999999999968e-05, 9.555600000000011e-05, 9.600000000000233e-05, 9.549999999999836e-05, 9.552699999999803e-05, 9.511100000000189e-05, 9.606900000000071e-05, 9.587499999999874e-05, 9.588899999999831e-05, 9.520800000000287e-05, 9.593100000000049e-05, 9.559699999999935e-05, 9.563900000000153e-05, 9.544499999999956e-05, 9.602800000000147e-05, 9.537499999999824e-05, 9.594500000000006e-05, 9.537499999999824e-05, 9.574999999999861e-05, 9.537500000000171e-05, 9.605499999999767e-05]</msg>
<status status="PASS" starttime="20201029 18:19:25.895" endtime="20201029 18:19:25.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.890" endtime="20201029 18:19:25.898"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:25.902" endtime="20201029 18:19:25.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.900" endtime="20201029 18:19:25.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.899" endtime="20201029 18:19:25.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.536" endtime="20201029 18:19:25.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.535" endtime="20201029 18:19:25.922"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.931" endtime="20201029 18:19:25.952"></status>
</kw>
<msg timestamp="20201029 18:19:25.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.930" endtime="20201029 18:19:25.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:25.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:25.954" endtime="20201029 18:19:25.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.957" endtime="20201029 18:19:25.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.927" endtime="20201029 18:19:25.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.925" endtime="20201029 18:19:25.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:25.966" endtime="20201029 18:19:26.251"></status>
</kw>
<msg timestamp="20201029 18:19:26.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020179069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020275653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:25.964" endtime="20201029 18:19:26.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020179069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020275653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.256" endtime="20201029 18:19:26.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.264" endtime="20201029 18:19:26.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.962" endtime="20201029 18:19:26.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.960" endtime="20201029 18:19:26.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:26.271" level="INFO">${RESULT} = [{'diff': 9.658400000000025e-05}, {'diff': 9.706900000000171e-05}, {'diff': 9.690299999999888e-05}, {'diff': 9.61669999999977e-05}, {'diff': 9.619500000000031e-05}, {'diff': 9.658400000000025e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:26.268" endtime="20201029 18:19:26.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:26.275" level="INFO">${ACCURACY} = {'diff': [9.658400000000025e-05, 9.706900000000171e-05, 9.690299999999888e-05, 9.61669999999977e-05, 9.619500000000031e-05, 9.658400000000025e-05, 9.641600000000194e-05, 9.612499999999899e-05, 9.61379...</msg>
<status status="PASS" starttime="20201029 18:19:26.272" endtime="20201029 18:19:26.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.280" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 18:19:26.279" endtime="20201029 18:19:26.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.283" level="INFO">VALUE: [9.658400000000025e-05, 9.706900000000171e-05, 9.690299999999888e-05, 9.61669999999977e-05, 9.619500000000031e-05, 9.658400000000025e-05, 9.641600000000194e-05, 9.612499999999899e-05, 9.613799999999909e-05, 9.712499999999999e-05, 9.649999999999936e-05, 9.706899999999824e-05, 9.644400000000108e-05, 9.647300000000317e-05, 9.640299999999838e-05, 9.645900000000013e-05, 9.612500000000246e-05, 9.630600000000086e-05, 9.688900000000278e-05, 9.643099999999752e-05, 9.699999999999986e-05, 9.695799999999768e-05, 9.662499999999949e-05, 9.629099999999835e-05, 9.688899999999931e-05, 9.683300000000103e-05, 9.676399999999918e-05, 9.694399999999812e-05, 9.697200000000072e-05, 9.631900000000096e-05, 9.65140000000024e-05, 9.619500000000031e-05, 9.701399999999943e-05, 9.644500000000056e-05, 9.620899999999988e-05, 9.68059999999979e-05, 9.691600000000244e-05, 9.66799999999983e-05, 9.679099999999885e-05, 9.613899999999856e-05, 9.623599999999954e-05, 9.649999999999936e-05, 9.669400000000133e-05, 9.658299999999731e-05, 9.61669999999977e-05, 9.680600000000136e-05, 9.616700000000117e-05, 9.668100000000124e-05, 9.626399999999868e-05, 9.612499999999899e-05]</msg>
<status status="PASS" starttime="20201029 18:19:26.281" endtime="20201029 18:19:26.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.276" endtime="20201029 18:19:26.284"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:26.288" endtime="20201029 18:19:26.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.286" endtime="20201029 18:19:26.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.285" endtime="20201029 18:19:26.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.923" endtime="20201029 18:19:26.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:25.923" endtime="20201029 18:19:26.308"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.317" endtime="20201029 18:19:26.341"></status>
</kw>
<msg timestamp="20201029 18:19:26.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.316" endtime="20201029 18:19:26.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.343" endtime="20201029 18:19:26.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.346" endtime="20201029 18:19:26.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.313" endtime="20201029 18:19:26.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.311" endtime="20201029 18:19:26.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.355" endtime="20201029 18:19:26.640"></status>
</kw>
<msg timestamp="20201029 18:19:26.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023358389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023456389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.353" endtime="20201029 18:19:26.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023358389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023456389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.644" endtime="20201029 18:19:26.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.652" endtime="20201029 18:19:26.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.351" endtime="20201029 18:19:26.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.349" endtime="20201029 18:19:26.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:26.659" level="INFO">${RESULT} = [{'diff': 9.800000000000086e-05}, {'diff': 9.723600000000054e-05}, {'diff': 9.743100000000199e-05}, {'diff': 9.720900000000088e-05}, {'diff': 9.738899999999981e-05}, {'diff': 9.752700000000003e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:26.656" endtime="20201029 18:19:26.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:26.663" level="INFO">${ACCURACY} = {'diff': [9.800000000000086e-05, 9.723600000000054e-05, 9.743100000000199e-05, 9.720900000000088e-05, 9.738899999999981e-05, 9.752700000000003e-05, 9.773600000000104e-05, 9.738899999999981e-05, 9.7222...</msg>
<status status="PASS" starttime="20201029 18:19:26.660" endtime="20201029 18:19:26.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.668" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 18:19:26.667" endtime="20201029 18:19:26.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.671" level="INFO">VALUE: [9.800000000000086e-05, 9.723600000000054e-05, 9.743100000000199e-05, 9.720900000000088e-05, 9.738899999999981e-05, 9.752700000000003e-05, 9.773600000000104e-05, 9.738899999999981e-05, 9.722200000000097e-05, 9.731899999999849e-05, 9.794399999999912e-05, 9.756899999999874e-05, 9.808299999999881e-05, 9.773700000000052e-05, 9.715299999999913e-05, 9.725000000000011e-05, 9.78059999999989e-05, 9.738800000000034e-05, 9.730600000000186e-05, 9.715199999999966e-05, 9.772300000000095e-05, 9.800000000000086e-05, 9.75279999999995e-05, 9.769399999999887e-05, 9.769399999999887e-05, 9.730499999999892e-05, 9.745799999999818e-05, 9.794499999999859e-05, 9.737500000000024e-05, 9.782000000000193e-05, 9.794500000000206e-05, 9.775000000000061e-05, 9.769399999999887e-05, 9.763799999999712e-05, 9.730499999999892e-05, 9.763900000000006e-05, 9.805499999999967e-05, 9.726399999999968e-05, 9.712499999999999e-05, 9.758300000000178e-05, 9.72080000000014e-05, 9.75279999999995e-05, 9.737500000000024e-05, 9.79860000000013e-05, 9.784699999999813e-05, 9.78609999999977e-05, 9.808299999999881e-05, 9.763900000000006e-05, 9.712499999999999e-05, 9.762500000000049e-05]</msg>
<status status="PASS" starttime="20201029 18:19:26.669" endtime="20201029 18:19:26.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.664" endtime="20201029 18:19:26.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:26.677" endtime="20201029 18:19:26.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.675" endtime="20201029 18:19:26.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.674" endtime="20201029 18:19:26.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.309" endtime="20201029 18:19:26.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.309" endtime="20201029 18:19:26.697"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.706" endtime="20201029 18:19:26.727"></status>
</kw>
<msg timestamp="20201029 18:19:26.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.705" endtime="20201029 18:19:26.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:26.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:26.728" endtime="20201029 18:19:26.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.731" endtime="20201029 18:19:26.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.702" endtime="20201029 18:19:26.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.700" endtime="20201029 18:19:26.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:26.740" endtime="20201029 18:19:27.025"></status>
</kw>
<msg timestamp="20201029 18:19:27.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020229958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:26.738" endtime="20201029 18:19:27.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020229958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.029" endtime="20201029 18:19:27.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.038" endtime="20201029 18:19:27.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.736" endtime="20201029 18:19:27.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.734" endtime="20201029 18:19:27.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:27.044" level="INFO">${RESULT} = [{'diff': 9.841699999999995e-05}, {'diff': 9.851400000000093e-05}, {'diff': 9.819499999999884e-05}, {'diff': 9.841699999999995e-05}, {'diff': 9.844499999999909e-05}, {'diff': 9.89999999999984e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:19:27.041" endtime="20201029 18:19:27.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:27.050" level="INFO">${ACCURACY} = {'diff': [9.841699999999995e-05, 9.851400000000093e-05, 9.819499999999884e-05, 9.841699999999995e-05, 9.844499999999909e-05, 9.89999999999984e-05, 9.906999999999971e-05, 9.84020000000009e-05, 9.880500...</msg>
<status status="PASS" starttime="20201029 18:19:27.045" endtime="20201029 18:19:27.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.054" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 18:19:27.053" endtime="20201029 18:19:27.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.057" level="INFO">VALUE: [9.841699999999995e-05, 9.851400000000093e-05, 9.819499999999884e-05, 9.841699999999995e-05, 9.844499999999909e-05, 9.89999999999984e-05, 9.906999999999971e-05, 9.84020000000009e-05, 9.880500000000042e-05, 9.850000000000136e-05, 9.845800000000265e-05, 9.855500000000017e-05, 9.906900000000024e-05, 9.84999999999979e-05, 9.862500000000149e-05, 9.88059999999999e-05, 9.908399999999928e-05, 9.822200000000197e-05, 9.879099999999738e-05, 9.908299999999981e-05, 9.902700000000153e-05, 9.82080000000024e-05, 9.834699999999863e-05, 9.869399999999987e-05, 9.901400000000143e-05, 9.82080000000024e-05, 9.869399999999987e-05, 9.881899999999999e-05, 9.858299999999931e-05, 9.837500000000124e-05, 9.826400000000068e-05, 9.905600000000014e-05, 9.844499999999909e-05, 9.895799999999969e-05, 9.826400000000068e-05, 9.862500000000149e-05, 9.863900000000106e-05, 9.829100000000035e-05, 9.904200000000057e-05, 9.870799999999944e-05, 9.850000000000136e-05, 9.859699999999888e-05, 9.843099999999952e-05, 9.812499999999752e-05, 9.826400000000068e-05, 9.827800000000025e-05, 9.906999999999971e-05, 9.830499999999992e-05, 9.829100000000035e-05, 9.873600000000204e-05]</msg>
<status status="PASS" starttime="20201029 18:19:27.055" endtime="20201029 18:19:27.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.051" endtime="20201029 18:19:27.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:27.066" endtime="20201029 18:19:27.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.064" endtime="20201029 18:19:27.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.063" endtime="20201029 18:19:27.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.698" endtime="20201029 18:19:27.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:26.698" endtime="20201029 18:19:27.086"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.095" endtime="20201029 18:19:27.116"></status>
</kw>
<msg timestamp="20201029 18:19:27.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.094" endtime="20201029 18:19:27.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.117" endtime="20201029 18:19:27.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.120" endtime="20201029 18:19:27.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.091" endtime="20201029 18:19:27.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.089" endtime="20201029 18:19:27.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.129" endtime="20201029 18:19:27.416"></status>
</kw>
<msg timestamp="20201029 18:19:27.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020038111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020138069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.128" endtime="20201029 18:19:27.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020038111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020138069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.420" endtime="20201029 18:19:27.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.429" endtime="20201029 18:19:27.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.125" endtime="20201029 18:19:27.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.123" endtime="20201029 18:19:27.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:27.435" level="INFO">${RESULT} = [{'diff': 9.995800000000069e-05}, {'diff': 9.998599999999983e-05}, {'diff': 9.911099999999895e-05}, {'diff': 9.944400000000062e-05}, {'diff': 9.948599999999932e-05}, {'diff': 9.913900000000156e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:19:27.432" endtime="20201029 18:19:27.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:27.440" level="INFO">${ACCURACY} = {'diff': [9.995800000000069e-05, 9.998599999999983e-05, 9.911099999999895e-05, 9.944400000000062e-05, 9.948599999999932e-05, 9.913900000000156e-05, 9.956900000000074e-05, 9.918100000000027e-05, 9.9181...</msg>
<status status="PASS" starttime="20201029 18:19:27.436" endtime="20201029 18:19:27.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.444" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 18:19:27.443" endtime="20201029 18:19:27.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.447" level="INFO">VALUE: [9.995800000000069e-05, 9.998599999999983e-05, 9.911099999999895e-05, 9.944400000000062e-05, 9.948599999999932e-05, 9.913900000000156e-05, 9.956900000000074e-05, 9.918100000000027e-05, 9.918100000000027e-05, 9.920899999999941e-05, 0.00010001399999999896, 9.91670000000007e-05, 9.993100000000102e-05, 9.940299999999791e-05, 9.992999999999808e-05, 9.945800000000019e-05, 9.930499999999745e-05, 0.00010002799999999853, 9.945800000000019e-05, 9.99999999999994e-05, 9.945899999999966e-05, 9.983400000000003e-05, 9.955600000000064e-05, 9.927800000000125e-05, 9.926400000000168e-05, 9.938799999999887e-05, 9.979099999999838e-05, 9.995800000000069e-05, 9.919400000000037e-05, 9.951399999999846e-05, 9.986100000000317e-05, 9.965300000000163e-05, 9.981900000000099e-05, 9.976400000000218e-05, 9.969400000000087e-05, 9.944500000000009e-05, 9.959799999999935e-05, 9.957000000000021e-05, 9.918100000000027e-05, 0.00010008300000000081, 0.000100028000000002, 0.00010012499999999952, 9.934699999999963e-05, 0.00010004200000000157, 0.0001000549999999982, 9.962499999999902e-05, 9.919499999999984e-05, 9.991699999999798e-05, 9.959799999999935e-05, 9.975000000000261e-05]</msg>
<status status="PASS" starttime="20201029 18:19:27.445" endtime="20201029 18:19:27.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.441" endtime="20201029 18:19:27.448"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:27.452" endtime="20201029 18:19:27.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.450" endtime="20201029 18:19:27.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.449" endtime="20201029 18:19:27.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.087" endtime="20201029 18:19:27.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.087" endtime="20201029 18:19:27.473"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.482" endtime="20201029 18:19:27.503"></status>
</kw>
<msg timestamp="20201029 18:19:27.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.480" endtime="20201029 18:19:27.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.505" endtime="20201029 18:19:27.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.508" endtime="20201029 18:19:27.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.477" endtime="20201029 18:19:27.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.475" endtime="20201029 18:19:27.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.517" endtime="20201029 18:19:27.802"></status>
</kw>
<msg timestamp="20201029 18:19:27.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021054458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021155389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.515" endtime="20201029 18:19:27.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021054458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021155389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.807" endtime="20201029 18:19:27.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.815" endtime="20201029 18:19:27.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.513" endtime="20201029 18:19:27.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.511" endtime="20201029 18:19:27.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:27.821" level="INFO">${RESULT} = [{'diff': 0.00010093099999999855}, {'diff': 0.00010108300000000181}, {'diff': 0.00010076399999999971}, {'diff': 0.00010109800000000085}, {'diff': 0.00010075000000000014}, {'diff': 0.000100249999999999...</msg>
<status status="PASS" starttime="20201029 18:19:27.818" endtime="20201029 18:19:27.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:27.826" level="INFO">${ACCURACY} = {'diff': [0.00010093099999999855, 0.00010108300000000181, 0.00010076399999999971, 0.00010109800000000085, 0.00010075000000000014, 0.00010024999999999964, 0.000100819999999998, 0.00010020800000000094, ...</msg>
<status status="PASS" starttime="20201029 18:19:27.822" endtime="20201029 18:19:27.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.830" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 18:19:27.829" endtime="20201029 18:19:27.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.833" level="INFO">VALUE: [0.00010093099999999855, 0.00010108300000000181, 0.00010076399999999971, 0.00010109800000000085, 0.00010075000000000014, 0.00010024999999999964, 0.000100819999999998, 0.00010020800000000094, 0.00010040300000000238, 0.00010070800000000144, 0.00010058300000000131, 0.00010079100000000285, 0.00010070799999999797, 0.00010044400000000162, 0.00010087500000000027, 0.00010051399999999946, 0.00010026399999999921, 0.00010051399999999946, 0.0001010000000000004, 0.00010011099999999995, 0.00010095799999999822, 0.00010069400000000187, 0.00010084699999999766, 0.0001004999999999999, 0.00010063899999999959, 0.00010076399999999971, 0.00010093099999999855, 0.00010058300000000131, 0.00010055599999999817, 0.00010066599999999926, 0.00010077800000000275, 0.0001008749999999968, 0.00010102700000000006, 0.00010076300000000024, 0.00010102700000000006, 0.0001010000000000004, 0.00010076399999999971, 0.00010091600000000298, 0.00010091699999999898, 0.00010098600000000083, 0.00010026399999999921, 0.0001008480000000006, 0.00010083300000000156, 0.000100819999999998, 0.00010058300000000131, 0.00010011200000000289, 0.00010036199999999967, 0.00010024999999999964, 0.00010106900000000224, 0.00010108299999999834]</msg>
<status status="PASS" starttime="20201029 18:19:27.831" endtime="20201029 18:19:27.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.826" endtime="20201029 18:19:27.835"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:27.839" endtime="20201029 18:19:27.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.837" endtime="20201029 18:19:27.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.836" endtime="20201029 18:19:27.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.474" endtime="20201029 18:19:27.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.473" endtime="20201029 18:19:27.859"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.868" endtime="20201029 18:19:27.889"></status>
</kw>
<msg timestamp="20201029 18:19:27.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.867" endtime="20201029 18:19:27.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:27.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:27.890" endtime="20201029 18:19:27.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.893" endtime="20201029 18:19:27.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.864" endtime="20201029 18:19:27.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.862" endtime="20201029 18:19:27.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:27.902" endtime="20201029 18:19:28.189"></status>
</kw>
<msg timestamp="20201029 18:19:28.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020136181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020237347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:27.901" endtime="20201029 18:19:28.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020136181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020237347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.193" endtime="20201029 18:19:28.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.201" endtime="20201029 18:19:28.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.898" endtime="20201029 18:19:28.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.896" endtime="20201029 18:19:28.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:28.208" level="INFO">${RESULT} = [{'diff': 0.00010116599999999976}, {'diff': 0.00010137500000000077}, {'diff': 0.00010208300000000281}, {'diff': 0.00010197199999999879}, {'diff': 0.00010137500000000077}, {'diff': 0.000102056000000003...</msg>
<status status="PASS" starttime="20201029 18:19:28.205" endtime="20201029 18:19:28.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:28.213" level="INFO">${ACCURACY} = {'diff': [0.00010116599999999976, 0.00010137500000000077, 0.00010208300000000281, 0.00010197199999999879, 0.00010137500000000077, 0.00010205600000000314, 0.00010155600000000264, 0.00010202800000000053...</msg>
<status status="PASS" starttime="20201029 18:19:28.209" endtime="20201029 18:19:28.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.218" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 18:19:28.217" endtime="20201029 18:19:28.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.220" level="INFO">VALUE: [0.00010116599999999976, 0.00010137500000000077, 0.00010208300000000281, 0.00010197199999999879, 0.00010137500000000077, 0.00010205600000000314, 0.00010155600000000264, 0.00010202800000000053, 0.00010159800000000135, 0.00010127700000000031, 0.00010183299999999909, 0.00010179100000000038, 0.00010202800000000053, 0.00010156899999999927, 0.0001012359999999976, 0.00010143000000000305, 0.00010207000000000271, 0.00010112500000000052, 0.00010209800000000185, 0.00010202800000000053, 0.00010176399999999725, 0.0001020000000000014, 0.00010125000000000065, 0.00010175000000000115, 0.00010195799999999922, 0.00010138900000000034, 0.00010116599999999976, 0.00010129199999999935, 0.0001011939999999989, 0.00010194399999999965, 0.00010118100000000227, 0.000101819999999999, 0.0001013749999999973, 0.00010111100000000095, 0.00010170799999999897, 0.00010179099999999691, 0.0001020139999999975, 0.00010183299999999909, 0.00010130499999999945, 0.00010129199999999935, 0.00010130499999999945, 0.0001017359999999981, 0.00010201400000000097, 0.00010166699999999973, 0.00010165300000000016, 0.00010194499999999912, 0.00010193099999999955, 0.00010186200000000117, 0.0001018879999999979, 0.0001020000000000014]</msg>
<status status="PASS" starttime="20201029 18:19:28.219" endtime="20201029 18:19:28.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.214" endtime="20201029 18:19:28.221"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:28.225" endtime="20201029 18:19:28.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.224" endtime="20201029 18:19:28.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.222" endtime="20201029 18:19:28.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.860" endtime="20201029 18:19:28.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:27.860" endtime="20201029 18:19:28.246"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.255" endtime="20201029 18:19:28.276"></status>
</kw>
<msg timestamp="20201029 18:19:28.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.253" endtime="20201029 18:19:28.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.278" endtime="20201029 18:19:28.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.280" endtime="20201029 18:19:28.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.251" endtime="20201029 18:19:28.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.248" endtime="20201029 18:19:28.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.290" endtime="20201029 18:19:28.577"></status>
</kw>
<msg timestamp="20201029 18:19:28.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020195028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020298056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.288" endtime="20201029 18:19:28.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020195028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020298056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.581" endtime="20201029 18:19:28.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.589" endtime="20201029 18:19:28.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.286" endtime="20201029 18:19:28.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.284" endtime="20201029 18:19:28.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:28.596" level="INFO">${RESULT} = [{'diff': 0.00010302799999999807}, {'diff': 0.00010276299999999877}, {'diff': 0.00010212499999999805}, {'diff': 0.00010294400000000065}, {'diff': 0.00010288899999999837}, {'diff': 0.000102693999999996...</msg>
<status status="PASS" starttime="20201029 18:19:28.593" endtime="20201029 18:19:28.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:28.600" level="INFO">${ACCURACY} = {'diff': [0.00010302799999999807, 0.00010276299999999877, 0.00010212499999999805, 0.00010294400000000065, 0.00010288899999999837, 0.00010269399999999693, 0.00010306900000000077, 0.00010245799999999972...</msg>
<status status="PASS" starttime="20201029 18:19:28.597" endtime="20201029 18:19:28.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.605" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 18:19:28.604" endtime="20201029 18:19:28.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.607" level="INFO">VALUE: [0.00010302799999999807, 0.00010276299999999877, 0.00010212499999999805, 0.00010294400000000065, 0.00010288899999999837, 0.00010269399999999693, 0.00010306900000000077, 0.00010245799999999972, 0.00010262499999999855, 0.0001025000000000019, 0.00010266700000000073, 0.00010238900000000134, 0.00010286099999999923, 0.00010243000000000058, 0.00010270799999999997, 0.0001023749999999983, 0.00010306900000000077, 0.00010265300000000116, 0.00010226400000000122, 0.00010244400000000015, 0.00010240300000000091, 0.00010219499999999937, 0.00010295899999999969, 0.00010220899999999894, 0.000102416000000001, 0.00010288899999999837, 0.00010226299999999827, 0.00010293000000000108, 0.00010294400000000065, 0.00010238899999999787, 0.00010212500000000152, 0.00010215300000000066, 0.0001030559999999972, 0.00010297199999999979, 0.00010265300000000116, 0.00010295899999999969, 0.00010236099999999873, 0.00010282, 0.00010294399999999718, 0.00010281900000000052, 0.00010269399999999693, 0.00010283300000000009, 0.00010247199999999929, 0.00010295800000000022, 0.00010230599999999992, 0.00010251400000000147, 0.00010288899999999837, 0.00010282, 0.0001028610000000027, 0.00010263899999999812]</msg>
<status status="PASS" starttime="20201029 18:19:28.606" endtime="20201029 18:19:28.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.601" endtime="20201029 18:19:28.608"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:28.612" endtime="20201029 18:19:28.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.611" endtime="20201029 18:19:28.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.609" endtime="20201029 18:19:28.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.247" endtime="20201029 18:19:28.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.246" endtime="20201029 18:19:28.633"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.642" endtime="20201029 18:19:28.664"></status>
</kw>
<msg timestamp="20201029 18:19:28.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.640" endtime="20201029 18:19:28.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:28.666" endtime="20201029 18:19:28.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.668" endtime="20201029 18:19:28.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.638" endtime="20201029 18:19:28.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.636" endtime="20201029 18:19:28.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.678" endtime="20201029 18:19:28.963"></status>
</kw>
<msg timestamp="20201029 18:19:28.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021179708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021282944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.676" endtime="20201029 18:19:28.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021179708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021282944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:28.968" endtime="20201029 18:19:28.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:28.976" endtime="20201029 18:19:28.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.673" endtime="20201029 18:19:28.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.672" endtime="20201029 18:19:28.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:28.983" level="INFO">${RESULT} = [{'diff': 0.00010323600000000308}, {'diff': 0.00010324999999999918}, {'diff': 0.00010395900000000069}, {'diff': 0.00010337500000000277}, {'diff': 0.00010402799999999907}, {'diff': 0.000104042000000002...</msg>
<status status="PASS" starttime="20201029 18:19:28.979" endtime="20201029 18:19:28.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:28.987" level="INFO">${ACCURACY} = {'diff': [0.00010323600000000308, 0.00010324999999999918, 0.00010395900000000069, 0.00010337500000000277, 0.00010402799999999907, 0.0001040420000000021, 0.00010413800000000015, 0.00010363899999999912,...</msg>
<status status="PASS" starttime="20201029 18:19:28.984" endtime="20201029 18:19:28.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.991" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 18:19:28.990" endtime="20201029 18:19:28.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:28.994" level="INFO">VALUE: [0.00010323600000000308, 0.00010324999999999918, 0.00010395900000000069, 0.00010337500000000277, 0.00010402799999999907, 0.0001040420000000021, 0.00010413800000000015, 0.00010363899999999912, 0.00010376399999999925, 0.00010383400000000056, 0.00010326299999999927, 0.0001033879999999994, 0.00010388899999999937, 0.00010337500000000277, 0.00010320800000000047, 0.00010409699999999744, 0.00010383300000000109, 0.00010381999999999753, 0.00010369500000000087, 0.00010315299999999819, 0.00010374999999999968, 0.00010338899999999887, 0.00010356999999999728, 0.00010376299999999977, 0.00010311199999999895, 0.00010352699999999909, 0.00010377799999999882, 0.0001032359999999996, 0.0001040139999999995, 0.00010326399999999875, 0.00010338899999999887, 0.00010401400000000297, 0.00010380600000000142, 0.0001040139999999995, 0.00010356999999999728, 0.00010311199999999895, 0.00010377699999999934, 0.00010358300000000084, 0.00010319399999999743, 0.00010393000000000208, 0.00010340299999999844, 0.00010359700000000041, 0.00010333300000000059, 0.00010394499999999765, 0.00010334700000000016, 0.0001033749999999993, 0.00010356999999999728, 0.00010327799999999832, 0.00010311200000000242, 0.00010393100000000155]</msg>
<status status="PASS" starttime="20201029 18:19:28.992" endtime="20201029 18:19:28.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.988" endtime="20201029 18:19:28.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:29.000" endtime="20201029 18:19:29.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.998" endtime="20201029 18:19:29.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.997" endtime="20201029 18:19:29.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.634" endtime="20201029 18:19:29.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:28.633" endtime="20201029 18:19:29.021"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.030" endtime="20201029 18:19:29.051"></status>
</kw>
<msg timestamp="20201029 18:19:29.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.028" endtime="20201029 18:19:29.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.052" endtime="20201029 18:19:29.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.055" endtime="20201029 18:19:29.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.025" endtime="20201029 18:19:29.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.023" endtime="20201029 18:19:29.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.064" endtime="20201029 18:19:29.351"></status>
</kw>
<msg timestamp="20201029 18:19:29.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020060625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020164889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.063" endtime="20201029 18:19:29.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020060625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020164889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.355" endtime="20201029 18:19:29.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.363" endtime="20201029 18:19:29.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.060" endtime="20201029 18:19:29.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.058" endtime="20201029 18:19:29.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:29.370" level="INFO">${RESULT} = [{'diff': 0.00010426399999999975}, {'diff': 0.00010450000000000043}, {'diff': 0.00010480600000000242}, {'diff': 0.00010470899999999797}, {'diff': 0.00010412500000000005}, {'diff': 0.000104124999999996...</msg>
<status status="PASS" starttime="20201029 18:19:29.367" endtime="20201029 18:19:29.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:29.375" level="INFO">${ACCURACY} = {'diff': [0.00010426399999999975, 0.00010450000000000043, 0.00010480600000000242, 0.00010470899999999797, 0.00010412500000000005, 0.00010412499999999658, 0.00010494399999999918, 0.00010480499999999948...</msg>
<status status="PASS" starttime="20201029 18:19:29.371" endtime="20201029 18:19:29.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.380" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 18:19:29.378" endtime="20201029 18:19:29.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.382" level="INFO">VALUE: [0.00010426399999999975, 0.00010450000000000043, 0.00010480600000000242, 0.00010470899999999797, 0.00010412500000000005, 0.00010412499999999658, 0.00010494399999999918, 0.00010480499999999948, 0.00010445799999999825, 0.00010412500000000005, 0.00010497200000000179, 0.00010500000000000093, 0.00010441699999999901, 0.00010425000000000018, 0.0001045559999999987, 0.0001043750000000003, 0.000104820000000002, 0.00010476400000000025, 0.00010479199999999939, 0.0001043880000000004, 0.0001045689999999988, 0.00010444400000000215, 0.00010458299999999837, 0.00010500000000000093, 0.00010442999999999911, 0.00010436100000000073, 0.00010412499999999658, 0.00010491699999999951, 0.00010469500000000187, 0.00010420900000000094, 0.00010436100000000073, 0.00010469399999999893, 0.00010477700000000034, 0.00010486099999999776, 0.00010498599999999789, 0.000104514, 0.00010413899999999962, 0.000104514, 0.00010425000000000018, 0.00010457000000000174, 0.0001045559999999987, 0.00010431999999999803, 0.0001043200000000015, 0.00010494399999999918, 0.000104820000000002, 0.00010466599999999979, 0.00010477700000000034, 0.00010463900000000012, 0.00010433300000000159, 0.00010429199999999889]</msg>
<status status="PASS" starttime="20201029 18:19:29.381" endtime="20201029 18:19:29.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.376" endtime="20201029 18:19:29.383"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:29.387" endtime="20201029 18:19:29.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.386" endtime="20201029 18:19:29.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.384" endtime="20201029 18:19:29.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.022" endtime="20201029 18:19:29.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.021" endtime="20201029 18:19:29.408"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.417" endtime="20201029 18:19:29.438"></status>
</kw>
<msg timestamp="20201029 18:19:29.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.415" endtime="20201029 18:19:29.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.440" endtime="20201029 18:19:29.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.443" endtime="20201029 18:19:29.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.413" endtime="20201029 18:19:29.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.410" endtime="20201029 18:19:29.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.452" endtime="20201029 18:19:29.741"></status>
</kw>
<msg timestamp="20201029 18:19:29.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020087319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020193097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.450" endtime="20201029 18:19:29.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020087319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020193097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.746" endtime="20201029 18:19:29.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.754" endtime="20201029 18:19:29.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.448" endtime="20201029 18:19:29.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.446" endtime="20201029 18:19:29.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:29.761" level="INFO">${RESULT} = [{'diff': 0.00010577800000000082}, {'diff': 0.00010576399999999778}, {'diff': 0.00010526399999999728}, {'diff': 0.00010529199999999989}, {'diff': 0.00010515300000000019}, {'diff': 0.000105250000000001...</msg>
<status status="PASS" starttime="20201029 18:19:29.757" endtime="20201029 18:19:29.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:29.765" level="INFO">${ACCURACY} = {'diff': [0.00010577800000000082, 0.00010576399999999778, 0.00010526399999999728, 0.00010529199999999989, 0.00010515300000000019, 0.00010525000000000118, 0.0001060560000000002, 0.00010548599999999839,...</msg>
<status status="PASS" starttime="20201029 18:19:29.762" endtime="20201029 18:19:29.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.769" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 18:19:29.768" endtime="20201029 18:19:29.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.772" level="INFO">VALUE: [0.00010577800000000082, 0.00010576399999999778, 0.00010526399999999728, 0.00010529199999999989, 0.00010515300000000019, 0.00010525000000000118, 0.0001060560000000002, 0.00010548599999999839, 0.00010602700000000159, 0.00010529199999999989, 0.00010544400000000315, 0.00010584700000000266, 0.0001055689999999998, 0.00010561099999999851, 0.00010544500000000262, 0.00010563899999999765, 0.00010584700000000266, 0.00010519500000000237, 0.00010515300000000019, 0.00010573599999999864, 0.00010562500000000155, 0.0001058880000000019, 0.00010556900000000327, 0.00010547200000000229, 0.00010512500000000105, 0.00010511100000000148, 0.00010604200000000064, 0.00010516700000000323, 0.00010558399999999885, 0.00010529199999999989, 0.0001058750000000018, 0.0001053750000000013, 0.00010552800000000057, 0.00010608299999999987, 0.00010583299999999962, 0.00010602800000000107, 0.00010568000000000036, 0.00010548599999999839, 0.00010583299999999962, 0.00010557000000000274, 0.00010563900000000112, 0.0001060140000000015, 0.00010601399999999803, 0.00010595899999999922, 0.00010538900000000087, 0.00010605500000000073, 0.00010531899999999955, 0.00010544399999999968, 0.00010519399999999943, 0.00010576400000000125]</msg>
<status status="PASS" starttime="20201029 18:19:29.770" endtime="20201029 18:19:29.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.766" endtime="20201029 18:19:29.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:29.777" endtime="20201029 18:19:29.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.775" endtime="20201029 18:19:29.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.774" endtime="20201029 18:19:29.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.409" endtime="20201029 18:19:29.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.408" endtime="20201029 18:19:29.798"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.807" endtime="20201029 18:19:29.831"></status>
</kw>
<msg timestamp="20201029 18:19:29.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.805" endtime="20201029 18:19:29.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:29.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:29.833" endtime="20201029 18:19:29.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.836" endtime="20201029 18:19:29.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.802" endtime="20201029 18:19:29.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.800" endtime="20201029 18:19:29.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:29.845" endtime="20201029 18:19:30.133"></status>
</kw>
<msg timestamp="20201029 18:19:30.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023380306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023487292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:29.843" endtime="20201029 18:19:30.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023380306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023487292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.137" endtime="20201029 18:19:30.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.145" endtime="20201029 18:19:30.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.841" endtime="20201029 18:19:30.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.839" endtime="20201029 18:19:30.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:30.152" level="INFO">${RESULT} = [{'diff': 0.00010698599999999989}, {'diff': 0.00010651399999999853}, {'diff': 0.0001070560000000012}, {'diff': 0.00010626300000000227}, {'diff': 0.00010686199999999924}, {'diff': 0.0001068330000000006...</msg>
<status status="PASS" starttime="20201029 18:19:30.148" endtime="20201029 18:19:30.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:30.156" level="INFO">${ACCURACY} = {'diff': [0.00010698599999999989, 0.00010651399999999853, 0.0001070560000000012, 0.00010626300000000227, 0.00010686199999999924, 0.00010683300000000062, 0.000106208, 0.00010680600000000096, 0.00010623...</msg>
<status status="PASS" starttime="20201029 18:19:30.153" endtime="20201029 18:19:30.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.160" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 18:19:30.159" endtime="20201029 18:19:30.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.163" level="INFO">VALUE: [0.00010698599999999989, 0.00010651399999999853, 0.0001070560000000012, 0.00010626300000000227, 0.00010686199999999924, 0.00010683300000000062, 0.000106208, 0.00010680600000000096, 0.00010623599999999914, 0.0001065690000000008, 0.00010699999999999946, 0.00010658300000000037, 0.00010655599999999724, 0.00010688900000000237, 0.00010680500000000148, 0.00010644500000000015, 0.0001067499999999992, 0.00010619400000000043, 0.00010633300000000012, 0.0001062360000000026, 0.00010708300000000087, 0.00010643000000000111, 0.00010697200000000032, 0.00010668100000000083, 0.0001070279999999986, 0.00010657000000000028, 0.0001061949999999999, 0.00010672299999999954, 0.00010679100000000191, 0.0001067499999999992, 0.00010708300000000087, 0.00010701399999999903, 0.00010690299999999847, 0.00010613900000000162, 0.00010707000000000078, 0.00010613899999999815, 0.00010643100000000058, 0.00010662500000000255, 0.0001068340000000001, 0.00010658399999999985, 0.00010680600000000096, 0.00010688799999999943, 0.00010611099999999901, 0.00010697199999999685, 0.00010655599999999724, 0.00010630499999999751, 0.00010699999999999946, 0.00010683299999999715, 0.00010645899999999972, 0.00010707000000000078]</msg>
<status status="PASS" starttime="20201029 18:19:30.161" endtime="20201029 18:19:30.164"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.157" endtime="20201029 18:19:30.165"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:30.169" endtime="20201029 18:19:30.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.167" endtime="20201029 18:19:30.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.166" endtime="20201029 18:19:30.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.799" endtime="20201029 18:19:30.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:29.798" endtime="20201029 18:19:30.189"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.198" endtime="20201029 18:19:30.219"></status>
</kw>
<msg timestamp="20201029 18:19:30.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.197" endtime="20201029 18:19:30.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.221" endtime="20201029 18:19:30.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.223" endtime="20201029 18:19:30.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.194" endtime="20201029 18:19:30.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.192" endtime="20201029 18:19:30.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.233" endtime="20201029 18:19:30.519"></status>
</kw>
<msg timestamp="20201029 18:19:30.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020028528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020135875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.231" endtime="20201029 18:19:30.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020028528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020135875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.523" endtime="20201029 18:19:30.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.531" endtime="20201029 18:19:30.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.228" endtime="20201029 18:19:30.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.227" endtime="20201029 18:19:30.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:30.538" level="INFO">${RESULT} = [{'diff': 0.00010734700000000069}, {'diff': 0.00010749999999999996}, {'diff': 0.00010734700000000069}, {'diff': 0.0001080560000000022}, {'diff': 0.00010716700000000176}, {'diff': 0.0001077360000000006...</msg>
<status status="PASS" starttime="20201029 18:19:30.535" endtime="20201029 18:19:30.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:30.543" level="INFO">${ACCURACY} = {'diff': [0.00010734700000000069, 0.00010749999999999996, 0.00010734700000000069, 0.0001080560000000022, 0.00010716700000000176, 0.00010773600000000064, 0.0001077080000000015, 0.0001077630000000003, 0...</msg>
<status status="PASS" starttime="20201029 18:19:30.539" endtime="20201029 18:19:30.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.548" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 18:19:30.546" endtime="20201029 18:19:30.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.550" level="INFO">VALUE: [0.00010734700000000069, 0.00010749999999999996, 0.00010734700000000069, 0.0001080560000000022, 0.00010716700000000176, 0.00010773600000000064, 0.0001077080000000015, 0.0001077630000000003, 0.0001073889999999994, 0.00010722200000000057, 0.00010763899999999965, 0.00010730500000000198, 0.00010732000000000103, 0.00010748600000000039, 0.0001072499999999997, 0.0001076950000000014, 0.00010769399999999846, 0.00010800000000000046, 0.00010726399999999928, 0.0001077630000000003, 0.00010751399999999953, 0.00010726399999999928, 0.00010761100000000051, 0.0001073889999999994, 0.0001072499999999997, 0.00010768000000000236, 0.00010726399999999928, 0.00010731999999999756, 0.00010737499999999983, 0.00010763899999999965, 0.00010718100000000133, 0.00010776399999999978, 0.00010747200000000082, 0.00010756899999999833, 0.00010776399999999978, 0.0001080279999999996, 0.00010729099999999894, 0.0001075279999999991, 0.00010790299999999947, 0.00010715299999999872, 0.00010787500000000033, 0.00010745899999999725, 0.00010726399999999928, 0.00010783299999999815, 0.0001075690000000018, 0.00010802700000000012, 0.00010779199999999892, 0.00010737499999999983, 0.0001075690000000018, 0.00010777799999999935]</msg>
<status status="PASS" starttime="20201029 18:19:30.549" endtime="20201029 18:19:30.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.544" endtime="20201029 18:19:30.551"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:30.555" endtime="20201029 18:19:30.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.553" endtime="20201029 18:19:30.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.552" endtime="20201029 18:19:30.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.190" endtime="20201029 18:19:30.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.190" endtime="20201029 18:19:30.576"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.585" endtime="20201029 18:19:30.606"></status>
</kw>
<msg timestamp="20201029 18:19:30.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.583" endtime="20201029 18:19:30.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.607" endtime="20201029 18:19:30.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.610" endtime="20201029 18:19:30.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.581" endtime="20201029 18:19:30.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.578" endtime="20201029 18:19:30.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.619" endtime="20201029 18:19:30.907"></status>
</kw>
<msg timestamp="20201029 18:19:30.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020071069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020179722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.618" endtime="20201029 18:19:30.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020071069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020179722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:30.911" endtime="20201029 18:19:30.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.919" endtime="20201029 18:19:30.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.615" endtime="20201029 18:19:30.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.613" endtime="20201029 18:19:30.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:30.926" level="INFO">${RESULT} = [{'diff': 0.00010865300000000022}, {'diff': 0.00010875000000000121}, {'diff': 0.00010847200000000182}, {'diff': 0.00010862500000000108}, {'diff': 0.0001090699999999993}, {'diff': 0.0001083889999999969...</msg>
<status status="PASS" starttime="20201029 18:19:30.923" endtime="20201029 18:19:30.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:30.930" level="INFO">${ACCURACY} = {'diff': [0.00010865300000000022, 0.00010875000000000121, 0.00010847200000000182, 0.00010862500000000108, 0.0001090699999999993, 0.00010838899999999693, 0.00010862500000000108, 0.00010854100000000019,...</msg>
<status status="PASS" starttime="20201029 18:19:30.927" endtime="20201029 18:19:30.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.935" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 18:19:30.934" endtime="20201029 18:19:30.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.937" level="INFO">VALUE: [0.00010865300000000022, 0.00010875000000000121, 0.00010847200000000182, 0.00010862500000000108, 0.0001090699999999993, 0.00010838899999999693, 0.00010862500000000108, 0.00010854100000000019, 0.00010837500000000083, 0.00010862500000000108, 0.00010840299999999997, 0.0001083890000000004, 0.00010901399999999756, 0.00010824999999999724, 0.00010831899999999908, 0.00010851400000000053, 0.00010895900000000222, 0.00010815299999999972, 0.00010813900000000015, 0.00010850000000000096, 0.00010829199999999942, 0.0001084020000000005, 0.00010842999999999964, 0.00010826400000000028, 0.00010899999999999799, 0.00010901400000000103, 0.00010815299999999972, 0.00010811099999999754, 0.00010823599999999767, 0.00010891700000000004, 0.00010840299999999997, 0.00010872300000000154, 0.00010862500000000108, 0.00010886099999999829, 0.00010833300000000212, 0.00010909699999999897, 0.00010880500000000001, 0.00010812499999999711, 0.00010827799999999985, 0.00010908300000000287, 0.00010843100000000258, 0.0001083890000000004, 0.00010815299999999972, 0.00010841600000000007, 0.00010856899999999933, 0.00010840199999999703, 0.00010887499999999786, 0.00010809700000000144, 0.00010886099999999829, 0.00010818099999999886]</msg>
<status status="PASS" starttime="20201029 18:19:30.936" endtime="20201029 18:19:30.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.931" endtime="20201029 18:19:30.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:30.942" endtime="20201029 18:19:30.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.941" endtime="20201029 18:19:30.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.940" endtime="20201029 18:19:30.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.577" endtime="20201029 18:19:30.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.576" endtime="20201029 18:19:30.963"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.972" endtime="20201029 18:19:30.995"></status>
</kw>
<msg timestamp="20201029 18:19:30.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.971" endtime="20201029 18:19:30.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:30.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:30.996" endtime="20201029 18:19:30.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:30.999" endtime="20201029 18:19:31.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.968" endtime="20201029 18:19:31.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.966" endtime="20201029 18:19:31.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.008" endtime="20201029 18:19:31.296"></status>
</kw>
<msg timestamp="20201029 18:19:31.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021327417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021436694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.007" endtime="20201029 18:19:31.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021327417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021436694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.300" endtime="20201029 18:19:31.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.308" endtime="20201029 18:19:31.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.004" endtime="20201029 18:19:31.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.002" endtime="20201029 18:19:31.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:31.315" level="INFO">${RESULT} = [{'diff': 0.0001092769999999979}, {'diff': 0.00011009699999999997}, {'diff': 0.00010981900000000058}, {'diff': 0.00010923599999999867}, {'diff': 0.00010963899999999818}, {'diff': 0.0001095560000000002...</msg>
<status status="PASS" starttime="20201029 18:19:31.312" endtime="20201029 18:19:31.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:31.319" level="INFO">${ACCURACY} = {'diff': [0.0001092769999999979, 0.00011009699999999997, 0.00010981900000000058, 0.00010923599999999867, 0.00010963899999999818, 0.00010955600000000024, 0.0001095699999999998, 0.00010982000000000006, ...</msg>
<status status="PASS" starttime="20201029 18:19:31.316" endtime="20201029 18:19:31.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.324" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 18:19:31.323" endtime="20201029 18:19:31.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.326" level="INFO">VALUE: [0.0001092769999999979, 0.00011009699999999997, 0.00010981900000000058, 0.00010923599999999867, 0.00010963899999999818, 0.00010955600000000024, 0.0001095699999999998, 0.00010982000000000006, 0.00010963900000000165, 0.00010929200000000042, 0.00011008399999999988, 0.00010987499999999886, 0.00010919499999999943, 0.00010936099999999879, 0.00010956900000000033, 0.00010981900000000058, 0.0001092219999999991, 0.00010991700000000104, 0.00011006900000000083, 0.00010951400000000153, 0.00010983399999999963, 0.00010949999999999849, 0.0001098479999999992, 0.00010950000000000196, 0.00010944400000000021, 0.00011004099999999822, 0.0001095549999999973, 0.0001095280000000011, 0.00010979200000000092, 0.00010990300000000147, 0.0001095829999999999, 0.00010915300000000072, 0.00010931999999999956, 0.00010913899999999768, 0.00010945899999999925, 0.00010945799999999978, 0.00010926399999999781, 0.00010997199999999985, 0.00010912500000000158, 0.00010920799999999953, 0.00010956900000000033, 0.00011009699999999997, 0.00010948699999999839, 0.000109208999999999, 0.00011000000000000246, 0.0001093340000000026, 0.00010945900000000272, 0.00010951299999999858, 0.00010915200000000125, 0.0001095829999999999]</msg>
<status status="PASS" starttime="20201029 18:19:31.325" endtime="20201029 18:19:31.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.320" endtime="20201029 18:19:31.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:31.332" endtime="20201029 18:19:31.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.331" endtime="20201029 18:19:31.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.330" endtime="20201029 18:19:31.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.964" endtime="20201029 18:19:31.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:30.964" endtime="20201029 18:19:31.353"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.362" endtime="20201029 18:19:31.384"></status>
</kw>
<msg timestamp="20201029 18:19:31.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.360" endtime="20201029 18:19:31.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.385" endtime="20201029 18:19:31.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.388" endtime="20201029 18:19:31.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.358" endtime="20201029 18:19:31.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.356" endtime="20201029 18:19:31.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.397" endtime="20201029 18:19:31.683"></status>
</kw>
<msg timestamp="20201029 18:19:31.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020175083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020286167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.396" endtime="20201029 18:19:31.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020175083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020286167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.687" endtime="20201029 18:19:31.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.695" endtime="20201029 18:19:31.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.393" endtime="20201029 18:19:31.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.391" endtime="20201029 18:19:31.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:31.702" level="INFO">${RESULT} = [{'diff': 0.00011108400000000088}, {'diff': 0.00011082000000000106}, {'diff': 0.00011015199999999878}, {'diff': 0.00011038899999999893}, {'diff': 0.00011017999999999792}, {'diff': 0.000110444000000001...</msg>
<status status="PASS" starttime="20201029 18:19:31.699" endtime="20201029 18:19:31.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:31.707" level="INFO">${ACCURACY} = {'diff': [0.00011108400000000088, 0.00011082000000000106, 0.00011015199999999878, 0.00011038899999999893, 0.00011017999999999792, 0.00011044400000000121, 0.00011095800000000128, 0.00011033300000000065...</msg>
<status status="PASS" starttime="20201029 18:19:31.703" endtime="20201029 18:19:31.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.712" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 18:19:31.711" endtime="20201029 18:19:31.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.714" level="INFO">VALUE: [0.00011108400000000088, 0.00011082000000000106, 0.00011015199999999878, 0.00011038899999999893, 0.00011017999999999792, 0.00011044400000000121, 0.00011095800000000128, 0.00011033300000000065, 0.00011019500000000043, 0.00011018100000000086, 0.00011113899999999968, 0.00011062499999999961, 0.00011076400000000278, 0.00011013799999999921, 0.00011101399999999956, 0.00011018000000000139, 0.00011061100000000004, 0.00011052799999999863, 0.00011101399999999956, 0.00011013899999999868, 0.0001108480000000002, 0.00011108400000000088, 0.00011077800000000235, 0.00011072300000000007, 0.0001107769999999994, 0.00011074999999999974, 0.00011076399999999931, 0.0001105830000000009, 0.00011056900000000133, 0.00011069399999999799, 0.00011013900000000215, 0.00011081999999999759, 0.00011105599999999827, 0.00011050000000000296, 0.00011058399999999691, 0.00011076400000000278, 0.00011063799999999971, 0.00011065200000000275, 0.00011049999999999949, 0.00011031900000000108, 0.00011023599999999967, 0.00011023599999999967, 0.00011080499999999854, 0.00011026400000000228, 0.00011033400000000013, 0.0001105280000000021, 0.00011036099999999979, 0.00011027799999999838, 0.00011097199999999738, 0.00011097200000000085]</msg>
<status status="PASS" starttime="20201029 18:19:31.713" endtime="20201029 18:19:31.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.708" endtime="20201029 18:19:31.716"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:31.719" endtime="20201029 18:19:31.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.718" endtime="20201029 18:19:31.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.717" endtime="20201029 18:19:31.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.354" endtime="20201029 18:19:31.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.353" endtime="20201029 18:19:31.740"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.749" endtime="20201029 18:19:31.770"></status>
</kw>
<msg timestamp="20201029 18:19:31.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.747" endtime="20201029 18:19:31.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:31.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:31.772" endtime="20201029 18:19:31.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.774" endtime="20201029 18:19:31.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.745" endtime="20201029 18:19:31.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.743" endtime="20201029 18:19:31.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:31.784" endtime="20201029 18:19:32.070"></status>
</kw>
<msg timestamp="20201029 18:19:32.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020224667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:31.782" endtime="20201029 18:19:32.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020224667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.075" endtime="20201029 18:19:32.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.083" endtime="20201029 18:19:32.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.780" endtime="20201029 18:19:32.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.778" endtime="20201029 18:19:32.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:32.090" level="INFO">${RESULT} = [{'diff': 0.00011175000000000074}, {'diff': 0.00011206999999999884}, {'diff': 0.00011145900000000125}, {'diff': 0.00011150000000000049}, {'diff': 0.0001115830000000019}, {'diff': 0.0001119299999999996...</msg>
<status status="PASS" starttime="20201029 18:19:32.086" endtime="20201029 18:19:32.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:32.094" level="INFO">${ACCURACY} = {'diff': [0.00011175000000000074, 0.00011206999999999884, 0.00011145900000000125, 0.00011150000000000049, 0.0001115830000000019, 0.00011192999999999967, 0.000111903, 0.00011126399999999981, 0.00011140...</msg>
<status status="PASS" starttime="20201029 18:19:32.091" endtime="20201029 18:19:32.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.098" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 18:19:32.097" endtime="20201029 18:19:32.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.101" level="INFO">VALUE: [0.00011175000000000074, 0.00011206999999999884, 0.00011145900000000125, 0.00011150000000000049, 0.0001115830000000019, 0.00011192999999999967, 0.000111903, 0.00011126399999999981, 0.0001114029999999995, 0.00011126399999999981, 0.00011176400000000031, 0.00011126399999999981, 0.00011200000000000099, 0.00011138899999999993, 0.00011147200000000135, 0.00011169399999999899, 0.00011198600000000142, 0.00011120799999999806, 0.00011127799999999938, 0.00011120799999999806, 0.00011145800000000178, 0.00011120800000000153, 0.00011106999999999784, 0.00011176400000000031, 0.00011118099999999839, 0.000111903, 0.00011163800000000071, 0.00011195799999999881, 0.00011145799999999831, 0.00011119400000000196, 0.00011109700000000097, 0.00011126399999999981, 0.00011186100000000129, 0.00011145799999999831, 0.00011123600000000067, 0.00011200000000000099, 0.00011156999999999834, 0.00011194500000000218, 0.00011152700000000015, 0.00011119499999999796, 0.00011201400000000056, 0.00011195799999999881, 0.00011187500000000086, 0.00011145799999999831, 0.00011186100000000129, 0.00011194399999999924, 0.00011175000000000074, 0.00011206999999999884, 0.00011138899999999993, 0.00011201300000000108]</msg>
<status status="PASS" starttime="20201029 18:19:32.099" endtime="20201029 18:19:32.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.095" endtime="20201029 18:19:32.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:32.117" endtime="20201029 18:19:32.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.115" endtime="20201029 18:19:32.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.114" endtime="20201029 18:19:32.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.741" endtime="20201029 18:19:32.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:31.740" endtime="20201029 18:19:32.138"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.146" endtime="20201029 18:19:32.169"></status>
</kw>
<msg timestamp="20201029 18:19:32.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.145" endtime="20201029 18:19:32.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.171" endtime="20201029 18:19:32.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.173" endtime="20201029 18:19:32.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.142" endtime="20201029 18:19:32.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.140" endtime="20201029 18:19:32.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.183" endtime="20201029 18:19:32.469"></status>
</kw>
<msg timestamp="20201029 18:19:32.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021026111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021138931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.181" endtime="20201029 18:19:32.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021026111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021138931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.473" endtime="20201029 18:19:32.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.481" endtime="20201029 18:19:32.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.179" endtime="20201029 18:19:32.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.177" endtime="20201029 18:19:32.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:32.488" level="INFO">${RESULT} = [{'diff': 0.00011281999999999959}, {'diff': 0.00011269499999999946}, {'diff': 0.00011258399999999891}, {'diff': 0.00011299999999999852}, {'diff': 0.0001122770000000009}, {'diff': 0.0001123329999999991...</msg>
<status status="PASS" starttime="20201029 18:19:32.485" endtime="20201029 18:19:32.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:32.492" level="INFO">${ACCURACY} = {'diff': [0.00011281999999999959, 0.00011269499999999946, 0.00011258399999999891, 0.00011299999999999852, 0.0001122770000000009, 0.00011233299999999918, 0.00011288900000000143, 0.00011276399999999784,...</msg>
<status status="PASS" starttime="20201029 18:19:32.489" endtime="20201029 18:19:32.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.497" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 18:19:32.496" endtime="20201029 18:19:32.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.499" level="INFO">VALUE: [0.00011281999999999959, 0.00011269499999999946, 0.00011258399999999891, 0.00011299999999999852, 0.0001122770000000009, 0.00011233299999999918, 0.00011288900000000143, 0.00011276399999999784, 0.00011270799999999956, 0.00011213900000000068, 0.0001127359999999987, 0.00011293100000000014, 0.00011236100000000179, 0.00011213900000000068, 0.00011219499999999896, 0.00011223699999999767, 0.00011300000000000199, 0.00011227699999999743, 0.00011222199999999863, 0.00011301399999999809, 0.00011277800000000088, 0.00011280500000000054, 0.00011281900000000011, 0.0001124030000000005, 0.00011226400000000081, 0.0001122359999999982, 0.00011300000000000199, 0.00011216600000000035, 0.0001123749999999979, 0.00011251399999999759, 0.00011238899999999746, 0.00011274999999999827, 0.00011230500000000004, 0.00011251399999999759, 0.00011294499999999971, 0.00011294499999999971, 0.00011251400000000106, 0.00011258399999999891, 0.0001127359999999987, 0.00011233299999999918, 0.00011300000000000199, 0.00011262500000000161, 0.00011215300000000025, 0.00011249999999999802, 0.00011218100000000286, 0.00011249999999999802, 0.00011213900000000068, 0.00011234799999999823, 0.00011259799999999848, 0.00011231999999999909]</msg>
<status status="PASS" starttime="20201029 18:19:32.498" endtime="20201029 18:19:32.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.493" endtime="20201029 18:19:32.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:32.505" endtime="20201029 18:19:32.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.504" endtime="20201029 18:19:32.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.502" endtime="20201029 18:19:32.525"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.138" endtime="20201029 18:19:32.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.138" endtime="20201029 18:19:32.526"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.535" endtime="20201029 18:19:32.556"></status>
</kw>
<msg timestamp="20201029 18:19:32.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.533" endtime="20201029 18:19:32.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.558" endtime="20201029 18:19:32.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.560" endtime="20201029 18:19:32.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.531" endtime="20201029 18:19:32.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.528" endtime="20201029 18:19:32.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.570" endtime="20201029 18:19:32.855"></status>
</kw>
<msg timestamp="20201029 18:19:32.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020121958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020235431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.568" endtime="20201029 18:19:32.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020121958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020235431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:32.859" endtime="20201029 18:19:32.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.867" endtime="20201029 18:19:32.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.565" endtime="20201029 18:19:32.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.563" endtime="20201029 18:19:32.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:32.874" level="INFO">${RESULT} = [{'diff': 0.00011347300000000282}, {'diff': 0.00011315199999999831}, {'diff': 0.00011331900000000061}, {'diff': 0.0001133749999999989}, {'diff': 0.00011381900000000111}, {'diff': 0.0001137779999999984...</msg>
<status status="PASS" starttime="20201029 18:19:32.871" endtime="20201029 18:19:32.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:32.879" level="INFO">${ACCURACY} = {'diff': [0.00011347300000000282, 0.00011315199999999831, 0.00011331900000000061, 0.0001133749999999989, 0.00011381900000000111, 0.00011377799999999841, 0.00011386099999999982, 0.00011394399999999777,...</msg>
<status status="PASS" starttime="20201029 18:19:32.875" endtime="20201029 18:19:32.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.884" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 18:19:32.883" endtime="20201029 18:19:32.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.886" level="INFO">VALUE: [0.00011347300000000282, 0.00011315199999999831, 0.00011331900000000061, 0.0001133749999999989, 0.00011381900000000111, 0.00011377799999999841, 0.00011386099999999982, 0.00011394399999999777, 0.00011399999999999952, 0.00011363900000000218, 0.00011394500000000071, 0.00011316700000000082, 0.00011325000000000224, 0.00011376299999999936, 0.00011350000000000249, 0.00011394400000000124, 0.00011345800000000031, 0.00011397200000000038, 0.00011374999999999927, 0.00011316700000000082, 0.00011350000000000249, 0.00011329200000000095, 0.00011390299999999853, 0.00011369500000000046, 0.00011408300000000093, 0.00011399999999999952, 0.00011334699999999975, 0.0001138749999999994, 0.0001140970000000005, 0.0001132229999999991, 0.00011313899999999821, 0.00011405600000000127, 0.00011338900000000193, 0.00011344500000000021, 0.0001133749999999989, 0.00011312500000000211, 0.00011333300000000018, 0.00011397200000000038, 0.00011402799999999866, 0.00011374999999999927, 0.00011337500000000236, 0.00011358300000000043, 0.0001134030000000015, 0.00011370900000000003, 0.00011333399999999966, 0.00011312499999999864, 0.00011372200000000013, 0.00011395800000000081, 0.00011405600000000127, 0.00011351400000000206]</msg>
<status status="PASS" starttime="20201029 18:19:32.885" endtime="20201029 18:19:32.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.880" endtime="20201029 18:19:32.888"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:32.891" endtime="20201029 18:19:32.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.890" endtime="20201029 18:19:32.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.889" endtime="20201029 18:19:32.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.527" endtime="20201029 18:19:32.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.526" endtime="20201029 18:19:32.912"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.921" endtime="20201029 18:19:32.943"></status>
</kw>
<msg timestamp="20201029 18:19:32.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.919" endtime="20201029 18:19:32.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:32.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:32.944" endtime="20201029 18:19:32.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.947" endtime="20201029 18:19:32.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.917" endtime="20201029 18:19:32.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.915" endtime="20201029 18:19:32.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:32.956" endtime="20201029 18:19:33.243"></status>
</kw>
<msg timestamp="20201029 18:19:33.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02010625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020220917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:32.954" endtime="20201029 18:19:33.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02010625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020220917, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:33.247" endtime="20201029 18:19:33.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.255" endtime="20201029 18:19:33.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.952" endtime="20201029 18:19:33.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.950" endtime="20201029 18:19:33.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:33.262" level="INFO">${RESULT} = [{'diff': 0.00011466700000000232}, {'diff': 0.00011482000000000159}, {'diff': 0.00011451399999999959}, {'diff': 0.0001150970000000015}, {'diff': 0.00011438899999999946}, {'diff': 0.0001144300000000021...</msg>
<status status="PASS" starttime="20201029 18:19:33.259" endtime="20201029 18:19:33.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:33.266" level="INFO">${ACCURACY} = {'diff': [0.00011466700000000232, 0.00011482000000000159, 0.00011451399999999959, 0.0001150970000000015, 0.00011438899999999946, 0.00011443000000000217, 0.00011481899999999864, 0.00011465299999999928,...</msg>
<status status="PASS" starttime="20201029 18:19:33.263" endtime="20201029 18:19:33.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.271" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 18:19:33.270" endtime="20201029 18:19:33.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.273" level="INFO">VALUE: [0.00011466700000000232, 0.00011482000000000159, 0.00011451399999999959, 0.0001150970000000015, 0.00011438899999999946, 0.00011443000000000217, 0.00011481899999999864, 0.00011465299999999928, 0.00011497199999999791, 0.0001145559999999983, 0.00011420900000000053, 0.00011461100000000057, 0.00011470900000000103, 0.00011412499999999964, 0.00011411199999999955, 0.00011481899999999864, 0.00011483299999999821, 0.00011500000000000052, 0.00011412499999999964, 0.00011462500000000014, 0.00011481900000000211, 0.00011458400000000091, 0.00011508400000000141, 0.00011470899999999756, 0.00011425000000000324, 0.00011432000000000109, 0.00011441599999999913, 0.00011451400000000306, 0.0001148750000000004, 0.00011463899999999971, 0.00011451399999999959, 0.00011463899999999971, 0.00011494500000000171, 0.00011468099999999842, 0.00011482000000000159, 0.00011502799999999966, 0.00011432000000000109, 0.00011469500000000146, 0.00011481899999999864, 0.00011450000000000002, 0.00011463899999999971, 0.0001144030000000025, 0.00011431900000000161, 0.00011420899999999706, 0.00011490299999999953, 0.00011481999999999812, 0.00011501400000000009, 0.00011477699999999993, 0.0001145559999999983, 0.00011498600000000095]</msg>
<status status="PASS" starttime="20201029 18:19:33.272" endtime="20201029 18:19:33.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.267" endtime="20201029 18:19:33.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:33.279" endtime="20201029 18:19:33.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.277" endtime="20201029 18:19:33.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.276" endtime="20201029 18:19:33.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.913" endtime="20201029 18:19:33.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:32.912" endtime="20201029 18:19:33.299"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.308" endtime="20201029 18:19:33.333"></status>
</kw>
<msg timestamp="20201029 18:19:33.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.307" endtime="20201029 18:19:33.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.335" endtime="20201029 18:19:33.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.337" endtime="20201029 18:19:33.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.304" endtime="20201029 18:19:33.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.302" endtime="20201029 18:19:33.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.346" endtime="20201029 18:19:33.632"></status>
</kw>
<msg timestamp="20201029 18:19:33.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023487514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023603444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:33.345" endtime="20201029 18:19:33.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023487514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023603444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:33.637" endtime="20201029 18:19:33.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.645" endtime="20201029 18:19:33.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.342" endtime="20201029 18:19:33.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.340" endtime="20201029 18:19:33.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:33.651" level="INFO">${RESULT} = [{'diff': 0.0001159300000000002}, {'diff': 0.00011601299999999815}, {'diff': 0.00011576400000000084}, {'diff': 0.0001159170000000001}, {'diff': 0.00011554199999999973}, {'diff': 0.00011598600000000195...</msg>
<status status="PASS" starttime="20201029 18:19:33.648" endtime="20201029 18:19:33.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:33.656" level="INFO">${ACCURACY} = {'diff': [0.0001159300000000002, 0.00011601299999999815, 0.00011576400000000084, 0.0001159170000000001, 0.00011554199999999973, 0.00011598600000000195, 0.00011597199999999891, 0.00011577800000000041, ...</msg>
<status status="PASS" starttime="20201029 18:19:33.652" endtime="20201029 18:19:33.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.660" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 18:19:33.659" endtime="20201029 18:19:33.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.663" level="INFO">VALUE: [0.0001159300000000002, 0.00011601299999999815, 0.00011576400000000084, 0.0001159170000000001, 0.00011554199999999973, 0.00011598600000000195, 0.00011597199999999891, 0.00011577800000000041, 0.00011567999999999995, 0.00011556999999999887, 0.0001152360000000012, 0.00011616700000000035, 0.00011588800000000149, 0.00011513900000000021, 0.00011530499999999957, 0.00011515299999999978, 0.00011586100000000182, 0.00011600000000000152, 0.00011518099999999892, 0.00011601400000000109, 0.00011545899999999831, 0.00011569399999999952, 0.0001157499999999978, 0.00011547200000000188, 0.0001153750000000009, 0.0001155689999999994, 0.00011519400000000249, 0.00011602800000000066, 0.00011562499999999767, 0.0001153750000000009, 0.00011583299999999921, 0.00011563900000000071, 0.00011606999999999937, 0.00011602800000000066, 0.00011570800000000256, 0.00011581999999999912, 0.00011511100000000107, 0.00011555499999999982, 0.00011544399999999927, 0.00011584699999999878, 0.00011552800000000016, 0.00011579199999999998, 0.00011568100000000289, 0.00011570900000000203, 0.00011545899999999831, 0.00011559699999999853, 0.00011567999999999995, 0.00011519399999999902, 0.00011519399999999902, 0.00011584700000000225]</msg>
<status status="PASS" starttime="20201029 18:19:33.662" endtime="20201029 18:19:33.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.657" endtime="20201029 18:19:33.665"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:33.669" endtime="20201029 18:19:33.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.667" endtime="20201029 18:19:33.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.666" endtime="20201029 18:19:33.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.300" endtime="20201029 18:19:33.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.300" endtime="20201029 18:19:33.690"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.698" endtime="20201029 18:19:33.719"></status>
</kw>
<msg timestamp="20201029 18:19:33.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.697" endtime="20201029 18:19:33.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:33.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:33.720" endtime="20201029 18:19:33.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.723" endtime="20201029 18:19:33.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.694" endtime="20201029 18:19:33.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.692" endtime="20201029 18:19:33.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:33.732" endtime="20201029 18:19:34.019"></status>
</kw>
<msg timestamp="20201029 18:19:34.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020121514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020238611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:33.730" endtime="20201029 18:19:34.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020121514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020238611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:34.023" endtime="20201029 18:19:34.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:34.031" endtime="20201029 18:19:34.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.728" endtime="20201029 18:19:34.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.726" endtime="20201029 18:19:34.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:34.038" level="INFO">${RESULT} = [{'diff': 0.00011709700000000003}, {'diff': 0.00011644400000000027}, {'diff': 0.00011708300000000046}, {'diff': 0.0001167499999999988}, {'diff': 0.00011612500000000164}, {'diff': 0.0001167640000000018...</msg>
<status status="PASS" starttime="20201029 18:19:34.035" endtime="20201029 18:19:34.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:19:34.043" level="INFO">${ACCURACY} = {'diff': [0.00011709700000000003, 0.00011644400000000027, 0.00011708300000000046, 0.0001167499999999988, 0.00011612500000000164, 0.00011676400000000184, 0.00011627700000000143, 0.00011613799999999827,...</msg>
<status status="PASS" starttime="20201029 18:19:34.039" endtime="20201029 18:19:34.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.048" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 18:19:34.047" endtime="20201029 18:19:34.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.050" level="INFO">VALUE: [0.00011709700000000003, 0.00011644400000000027, 0.00011708300000000046, 0.0001167499999999988, 0.00011612500000000164, 0.00011676400000000184, 0.00011627700000000143, 0.00011613799999999827, 0.0001170690000000009, 0.00011620799999999959, 0.0001170690000000009, 0.00011691699999999763, 0.0001161109999999986, 0.00011676399999999837, 0.00011698599999999948, 0.00011658399999999944, 0.00011656999999999987, 0.00011701400000000209, 0.00011654099999999779, 0.00011692999999999773, 0.00011701399999999862, 0.0001168049999999976, 0.00011615299999999731, 0.00011640299999999756, 0.00011698599999999948, 0.00011662499999999867, 0.0001164170000000006, 0.00011677699999999847, 0.00011701399999999862, 0.00011669400000000052, 0.00011659699999999953, 0.00011616700000000035, 0.0001168889999999985, 0.00011622199999999916, 0.0001169439999999973, 0.00011620799999999959, 0.0001168889999999985, 0.00011698599999999948, 0.00011613899999999774, 0.00011682000000000012, 0.00011645799999999984, 0.00011640300000000103, 0.00011626400000000134, 0.0001169309999999972, 0.00011704100000000175, 0.00011613899999999774, 0.0001171109999999996, 0.00011652800000000116, 0.00011687499999999892, 0.00011630600000000005]</msg>
<status status="PASS" starttime="20201029 18:19:34.049" endtime="20201029 18:19:34.051"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.044" endtime="20201029 18:19:34.052"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:34.055" endtime="20201029 18:19:34.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.054" endtime="20201029 18:19:34.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.053" endtime="20201029 18:19:34.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.690" endtime="20201029 18:19:34.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:33.690" endtime="20201029 18:19:34.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:18:55.137" endtime="20201029 18:19:34.076"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 18:18:55.066" endtime="20201029 18:19:34.077" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:18:13.697" endtime="20201029 18:19:34.080"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:19:34.135" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:19:34.143" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:19:35.200" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:19:34.134" endtime="20201029 18:19:35.201"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.207" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20201029 18:19:35.204" endtime="20201029 18:19:36.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.132" endtime="20201029 18:19:36.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:36.214" endtime="20201029 18:19:36.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.211" endtime="20201029 18:19:36.485"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.498" endtime="20201029 18:19:36.519"></status>
</kw>
<msg timestamp="20201029 18:19:36.519" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.496" endtime="20201029 18:19:36.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.522" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.520" endtime="20201029 18:19:36.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.525" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:36.523" endtime="20201029 18:19:36.526"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:36.493" endtime="20201029 18:19:36.526"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:36.491" endtime="20201029 18:19:36.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.490" endtime="20201029 18:19:36.527"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:36.531" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:36.530" endtime="20201029 18:19:36.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.528" endtime="20201029 18:19:36.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.489" endtime="20201029 18:19:36.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.489" endtime="20201029 18:19:36.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.533" endtime="20201029 18:19:36.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.487" endtime="20201029 18:19:36.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.536" endtime="20201029 18:19:36.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.486" endtime="20201029 18:19:36.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:34.131" endtime="20201029 18:19:36.538"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:36.544" endtime="20201029 18:19:36.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.543" endtime="20201029 18:19:36.564"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.578" endtime="20201029 18:19:36.596"></status>
</kw>
<msg timestamp="20201029 18:19:36.596" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.576" endtime="20201029 18:19:36.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.599" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.597" endtime="20201029 18:19:36.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:36.603" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:36.600" endtime="20201029 18:19:36.603"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:36.573" endtime="20201029 18:19:36.604"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:36.571" endtime="20201029 18:19:36.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.570" endtime="20201029 18:19:36.605"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:36.609" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:36.608" endtime="20201029 18:19:36.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.606" endtime="20201029 18:19:36.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.569" endtime="20201029 18:19:36.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.568" endtime="20201029 18:19:36.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.610" endtime="20201029 18:19:36.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.567" endtime="20201029 18:19:36.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.565" endtime="20201029 18:19:36.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.541" endtime="20201029 18:19:36.613"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:36.625" endtime="20201029 18:19:42.751"></status>
</kw>
<msg timestamp="20201029 18:19:42.752" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:36.623" endtime="20201029 18:19:42.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.758" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:42.755" endtime="20201029 18:19:42.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.760" endtime="20201029 18:19:42.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.619" endtime="20201029 18:19:42.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.615" endtime="20201029 18:19:42.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:42.771" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201029 18:19:42.768" endtime="20201029 18:19:42.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.781" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:42.779" endtime="20201029 18:19:42.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.786" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:19:42.784" endtime="20201029 18:19:42.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.773" endtime="20201029 18:19:42.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.796" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:42.794" endtime="20201029 18:19:42.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.801" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:19:42.799" endtime="20201029 18:19:42.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.789" endtime="20201029 18:19:42.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.811" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:19:42.809" endtime="20201029 18:19:42.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:42.816" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 18:19:42.813" endtime="20201029 18:19:42.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.804" endtime="20201029 18:19:42.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:42.831" endtime="20201029 18:19:43.118"></status>
</kw>
<msg timestamp="20201029 18:19:43.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07028825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.170315972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:42.828" endtime="20201029 18:19:43.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07028825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.170315972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:19:43.122" endtime="20201029 18:19:43.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.128" endtime="20201029 18:19:43.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.822" endtime="20201029 18:19:43.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:42.819" endtime="20201029 18:19:43.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:19:43.134" level="INFO">${FILTERED} = [{'diff': 0.10002772200000001}, {'diff': 0.10000334699999999}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 0.10000922300000004}, {'diff': 5.410000000205528e-07}, {'diff'...</msg>
<status status="PASS" starttime="20201029 18:19:43.131" endtime="20201029 18:19:43.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:43.138" level="INFO">${RESULT} = {'diff': [0.10002772200000001, 0.10000334699999999, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000922300000004, 5.410000000205528e-07, 0.10000920800000002, 0.10000870800000006, 0.100009236, 5.4...</msg>
<status status="PASS" starttime="20201029 18:19:43.135" endtime="20201029 18:19:43.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.142" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:19:43.141" endtime="20201029 18:19:43.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.145" level="INFO">VALUE: [0.10002772200000001, 0.10000334699999999, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000922300000004, 5.410000000205528e-07, 0.10000920800000002, 0.10000870800000006, 0.100009236, 5.419999999922709e-07, 0.10000922299999981, 0.10000870899999992, 0.10000869499999987, 0.10000870899999992, 0.100009236, 5.419999999922709e-07, 0.100009236, 0.100009236, 0.10000922299999981, 0.10000926399999965, 0.100009236, 5.419999999922709e-07, 5.419999999922709e-07, 0.100009236, 0.10000874999999976, 5.409999999095305e-07, 5.409999999095305e-07, 0.100009236, 0.100009236, 5.420000004363601e-07, 0.100009236, 0.1000087220000001, 5.420000004363601e-07, 5.420000004363601e-07, 0.10000922299999981]</msg>
<status status="PASS" starttime="20201029 18:19:43.143" endtime="20201029 18:19:43.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.139" endtime="20201029 18:19:43.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:36.614" endtime="20201029 18:19:43.146"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:36.539" endtime="20201029 18:19:43.146" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:43.153" endtime="20201029 18:19:43.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.152" endtime="20201029 18:19:43.173"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.188" endtime="20201029 18:19:43.206"></status>
</kw>
<msg timestamp="20201029 18:19:43.206" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.186" endtime="20201029 18:19:43.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.209" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.207" endtime="20201029 18:19:43.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:43.212" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:43.210" endtime="20201029 18:19:43.212"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:43.183" endtime="20201029 18:19:43.213"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:43.180" endtime="20201029 18:19:43.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.179" endtime="20201029 18:19:43.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:43.218" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:43.217" endtime="20201029 18:19:43.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.215" endtime="20201029 18:19:43.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.178" endtime="20201029 18:19:43.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.177" endtime="20201029 18:19:43.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.219" endtime="20201029 18:19:43.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.176" endtime="20201029 18:19:43.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.174" endtime="20201029 18:19:43.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.151" endtime="20201029 18:19:43.222"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:43.231" endtime="20201029 18:19:49.358"></status>
</kw>
<msg timestamp="20201029 18:19:49.359" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:43.230" endtime="20201029 18:19:49.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.364" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:49.361" endtime="20201029 18:19:49.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.367" endtime="20201029 18:19:49.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.227" endtime="20201029 18:19:49.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.224" endtime="20201029 18:19:49.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:49.377" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201029 18:19:49.374" endtime="20201029 18:19:49.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.387" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:49.385" endtime="20201029 18:19:49.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.392" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:19:49.390" endtime="20201029 18:19:49.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.379" endtime="20201029 18:19:49.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.398" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:49.397" endtime="20201029 18:19:49.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.400" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:19:49.399" endtime="20201029 18:19:49.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.394" endtime="20201029 18:19:49.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.406" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:19:49.404" endtime="20201029 18:19:49.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.408" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 18:19:49.407" endtime="20201029 18:19:49.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.402" endtime="20201029 18:19:49.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.418" endtime="20201029 18:19:49.696"></status>
</kw>
<msg timestamp="20201029 18:19:49.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067746569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167773347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:49.416" endtime="20201029 18:19:49.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067746569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167773347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:49.700" endtime="20201029 18:19:49.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.706" endtime="20201029 18:19:49.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.413" endtime="20201029 18:19:49.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.410" endtime="20201029 18:19:49.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:19:49.712" level="INFO">${FILTERED} = [{'diff': 0.10002677799999998}, {'diff': 0.10000923699999997}, {'diff': 5.410000000205528e-07}, {'diff': 0.10000922300000004}, {'diff': 0.100009236}, {'diff': 0.10000874999999998}, {'diff': 5.41999999...</msg>
<status status="PASS" starttime="20201029 18:19:49.709" endtime="20201029 18:19:49.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:49.715" level="INFO">${RESULT} = {'diff': [0.10002677799999998, 0.10000923699999997, 5.410000000205528e-07, 0.10000922300000004, 0.100009236, 0.10000874999999998, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000925000000005, 5.4...</msg>
<status status="PASS" starttime="20201029 18:19:49.713" endtime="20201029 18:19:49.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.720" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:19:49.719" endtime="20201029 18:19:49.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.722" level="INFO">VALUE: [0.10002677799999998, 0.10000923699999997, 5.410000000205528e-07, 0.10000922300000004, 0.100009236, 0.10000874999999998, 5.419999999922709e-07, 5.419999999922709e-07, 0.10000925000000005, 5.410000001315751e-07, 0.10000925000000005, 0.100009236, 0.10000919399999986, 0.10000924999999983, 5.419999999922709e-07, 5.409999999095305e-07, 0.10000920899999999, 0.10000869500000009, 0.10000869500000009, 0.10000924999999983, 0.10000922200000018, 0.10000919400000008, 5.409999999095305e-07, 0.100009236, 5.419999999922709e-07, 0.10000923599999956, 0.10000870799999984, 5.420000004363601e-07, 0.10000922199999973, 0.10000870799999984, 0.10000925000000027, 0.10000925000000027, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201029 18:19:49.721" endtime="20201029 18:19:49.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.716" endtime="20201029 18:19:49.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:43.223" endtime="20201029 18:19:49.723"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:43.148" endtime="20201029 18:19:49.724" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:49.731" endtime="20201029 18:19:49.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.729" endtime="20201029 18:19:49.751"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.765" endtime="20201029 18:19:49.783"></status>
</kw>
<msg timestamp="20201029 18:19:49.784" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:49.764" endtime="20201029 18:19:49.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.786" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:49.785" endtime="20201029 18:19:49.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:49.789" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:49.787" endtime="20201029 18:19:49.790"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:49.761" endtime="20201029 18:19:49.790"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:49.758" endtime="20201029 18:19:49.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.756" endtime="20201029 18:19:49.791"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:49.795" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:49.794" endtime="20201029 18:19:49.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.792" endtime="20201029 18:19:49.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.755" endtime="20201029 18:19:49.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.755" endtime="20201029 18:19:49.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.797" endtime="20201029 18:19:49.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.753" endtime="20201029 18:19:49.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.752" endtime="20201029 18:19:49.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.728" endtime="20201029 18:19:49.800"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:49.808" endtime="20201029 18:19:55.935"></status>
</kw>
<msg timestamp="20201029 18:19:55.936" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:49.806" endtime="20201029 18:19:55.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.942" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:55.938" endtime="20201029 18:19:55.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:55.944" endtime="20201029 18:19:55.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.804" endtime="20201029 18:19:55.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.802" endtime="20201029 18:19:55.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:55.955" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201029 18:19:55.951" endtime="20201029 18:19:55.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.965" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:55.962" endtime="20201029 18:19:55.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.969" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:19:55.967" endtime="20201029 18:19:55.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.957" endtime="20201029 18:19:55.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.982" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:19:55.977" endtime="20201029 18:19:55.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.986" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:19:55.984" endtime="20201029 18:19:55.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.972" endtime="20201029 18:19:55.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:55.997" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:19:55.995" endtime="20201029 18:19:55.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.001" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 18:19:55.999" endtime="20201029 18:19:56.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:55.990" endtime="20201029 18:19:56.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.018" endtime="20201029 18:19:56.303"></status>
</kw>
<msg timestamp="20201029 18:19:56.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066748667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166774792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:56.014" endtime="20201029 18:19:56.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066748667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.166774792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:19:56.306" endtime="20201029 18:19:56.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.312" endtime="20201029 18:19:56.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.008" endtime="20201029 18:19:56.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.005" endtime="20201029 18:19:56.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:19:56.318" level="INFO">${FILTERED} = [{'diff': 0.10002612500000001}, {'diff': 0.10000919400000002}, {'diff': 0.100008708}, {'diff': 0.100009236}, {'diff': 0.10000922200000006}, {'diff': 0.10000922199999995}, {'diff': 0.10000870800000006}...</msg>
<status status="PASS" starttime="20201029 18:19:56.316" endtime="20201029 18:19:56.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:19:56.322" level="INFO">${RESULT} = {'diff': [0.10002612500000001, 0.10000919400000002, 0.100008708, 0.100009236, 0.10000922200000006, 0.10000922199999995, 0.10000870800000006, 0.100009236, 5.410000001315751e-07, 0.10000929100000011, 5....</msg>
<status status="PASS" starttime="20201029 18:19:56.319" endtime="20201029 18:19:56.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.326" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:19:56.325" endtime="20201029 18:19:56.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.328" level="INFO">VALUE: [0.10002612500000001, 0.10000919400000002, 0.100008708, 0.100009236, 0.10000922200000006, 0.10000922199999995, 0.10000870800000006, 0.100009236, 5.410000001315751e-07, 0.10000929100000011, 5.410000001315751e-07, 0.10000925000000005, 0.100009236, 5.419999999922709e-07, 0.10000924999999983, 5.419999999922709e-07, 0.10000927799999992, 5.409999999095305e-07, 0.1000092640000001, 0.10000920800000035, 0.10000869400000001, 0.10000870799999984, 0.10000927799999992, 0.10000923700000008, 0.100009236, 0.10000922199999973, 0.100009236, 0.1000087220000001, 0.10000919500000016, 0.100009236, 5.419999995481817e-07]</msg>
<status status="PASS" starttime="20201029 18:19:56.327" endtime="20201029 18:19:56.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.323" endtime="20201029 18:19:56.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:49.800" endtime="20201029 18:19:56.330"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:49.725" endtime="20201029 18:19:56.330" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:19:56.338" endtime="20201029 18:19:56.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.336" endtime="20201029 18:19:56.358"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.374" endtime="20201029 18:19:56.391"></status>
</kw>
<msg timestamp="20201029 18:19:56.391" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.373" endtime="20201029 18:19:56.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.394" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.392" endtime="20201029 18:19:56.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:19:56.397" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:19:56.395" endtime="20201029 18:19:56.398"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:56.370" endtime="20201029 18:19:56.398"></status>
</kw>
<status status="FAIL" starttime="20201029 18:19:56.368" endtime="20201029 18:19:56.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.366" endtime="20201029 18:19:56.399"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:19:56.403" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:19:56.402" endtime="20201029 18:19:56.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.400" endtime="20201029 18:19:56.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.365" endtime="20201029 18:19:56.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.365" endtime="20201029 18:19:56.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.405" endtime="20201029 18:19:56.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.363" endtime="20201029 18:19:56.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.358" endtime="20201029 18:19:56.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.334" endtime="20201029 18:19:56.407"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:19:56.416" endtime="20201029 18:20:02.542"></status>
</kw>
<msg timestamp="20201029 18:20:02.543" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:19:56.414" endtime="20201029 18:20:02.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.549" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:02.546" endtime="20201029 18:20:02.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.551" endtime="20201029 18:20:02.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.412" endtime="20201029 18:20:02.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.410" endtime="20201029 18:20:02.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:02.562" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201029 18:20:02.558" endtime="20201029 18:20:02.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.572" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:02.569" endtime="20201029 18:20:02.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.577" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:20:02.575" endtime="20201029 18:20:02.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.564" endtime="20201029 18:20:02.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.587" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:02.585" endtime="20201029 18:20:02.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.594" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:20:02.592" endtime="20201029 18:20:02.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.580" endtime="20201029 18:20:02.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.604" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:20:02.602" endtime="20201029 18:20:02.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.609" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 18:20:02.607" endtime="20201029 18:20:02.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.597" endtime="20201029 18:20:02.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.623" endtime="20201029 18:20:02.901"></status>
</kw>
<msg timestamp="20201029 18:20:02.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067819236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167845694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:02.621" endtime="20201029 18:20:02.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067819236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167845694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:02.904" endtime="20201029 18:20:02.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.910" endtime="20201029 18:20:02.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.616" endtime="20201029 18:20:02.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.612" endtime="20201029 18:20:02.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:20:02.916" level="INFO">${FILTERED} = [{'diff': 0.10002645799999998}, {'diff': 5.409999999650417e-07}, {'diff': 5.409999999650417e-07}, {'diff': 5.42000000047782e-07}, {'diff': 5.419999999922709e-07}, {'diff': 0.100009236}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201029 18:20:02.913" endtime="20201029 18:20:02.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:02.919" level="INFO">${RESULT} = {'diff': [0.10002645799999998, 5.409999999650417e-07, 5.409999999650417e-07, 5.42000000047782e-07, 5.419999999922709e-07, 0.100009236, 0.10000869400000001, 0.10000870799999995, 5.419999999922709e-07, ...</msg>
<status status="PASS" starttime="20201029 18:20:02.917" endtime="20201029 18:20:02.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.923" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:20:02.922" endtime="20201029 18:20:02.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.926" level="INFO">VALUE: [0.10002645799999998, 5.409999999650417e-07, 5.409999999650417e-07, 5.42000000047782e-07, 5.419999999922709e-07, 0.100009236, 0.10000869400000001, 0.10000870799999995, 5.419999999922709e-07, 0.10000925000000005, 0.10000920899999999, 0.10000870899999992, 0.10000869500000009, 5.419999999922709e-07, 0.10000925000000005, 0.10000924999999983, 0.100009236, 0.100009236, 0.100009236, 0.10000870799999984, 0.10000923700000008, 0.10000924999999983, 0.10000919500000016, 0.10000922200000018, 0.10000924999999983, 0.100009236, 5.410000003536197e-07, 0.10000922199999973, 5.419999995481817e-07, 0.10000922199999973, 0.100009236, 0.10000918099999989]</msg>
<status status="PASS" starttime="20201029 18:20:02.924" endtime="20201029 18:20:02.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.920" endtime="20201029 18:20:02.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:19:56.408" endtime="20201029 18:20:02.927"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 18:19:56.332" endtime="20201029 18:20:02.927" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:02.934" endtime="20201029 18:20:02.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.933" endtime="20201029 18:20:02.954"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.968" endtime="20201029 18:20:02.985"></status>
</kw>
<msg timestamp="20201029 18:20:02.986" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:02.966" endtime="20201029 18:20:02.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.988" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:02.987" endtime="20201029 18:20:02.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:02.991" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:02.989" endtime="20201029 18:20:02.991"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:02.964" endtime="20201029 18:20:02.992"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:02.961" endtime="20201029 18:20:02.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.960" endtime="20201029 18:20:02.993"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:02.997" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:02.996" endtime="20201029 18:20:02.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.994" endtime="20201029 18:20:02.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.959" endtime="20201029 18:20:02.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.959" endtime="20201029 18:20:02.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:02.998" endtime="20201029 18:20:03.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.957" endtime="20201029 18:20:03.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.955" endtime="20201029 18:20:03.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:02.931" endtime="20201029 18:20:03.001"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:03.009" endtime="20201029 18:20:09.135"></status>
</kw>
<msg timestamp="20201029 18:20:09.136" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:03.007" endtime="20201029 18:20:09.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.141" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:09.138" endtime="20201029 18:20:09.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.143" endtime="20201029 18:20:09.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.005" endtime="20201029 18:20:09.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.003" endtime="20201029 18:20:09.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:09.153" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201029 18:20:09.150" endtime="20201029 18:20:09.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.162" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:09.160" endtime="20201029 18:20:09.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.169" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:20:09.167" endtime="20201029 18:20:09.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.155" endtime="20201029 18:20:09.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.179" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:09.177" endtime="20201029 18:20:09.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.183" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:20:09.181" endtime="20201029 18:20:09.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.172" endtime="20201029 18:20:09.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.193" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:20:09.191" endtime="20201029 18:20:09.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.197" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 18:20:09.195" endtime="20201029 18:20:09.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.186" endtime="20201029 18:20:09.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.212" endtime="20201029 18:20:09.492"></status>
</kw>
<msg timestamp="20201029 18:20:09.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064427444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164453778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:09.209" endtime="20201029 18:20:09.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064427444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164453778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:09.495" endtime="20201029 18:20:09.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.500" endtime="20201029 18:20:09.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.203" endtime="20201029 18:20:09.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.200" endtime="20201029 18:20:09.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:20:09.506" level="INFO">${FILTERED} = [{'diff': 0.100026334}, {'diff': 0.10000869500000001}, {'diff': 0.100008708}, {'diff': 5.419999999922709e-07}, {'diff': 0.10000927800000003}, {'diff': 0.100009236}, {'diff': 5.410000000205528e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:20:09.504" endtime="20201029 18:20:09.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:09.509" level="INFO">${RESULT} = {'diff': [0.100026334, 0.10000869500000001, 0.100008708, 5.419999999922709e-07, 0.10000927800000003, 0.100009236, 5.410000000205528e-07, 0.10000924999999983, 0.10000922300000004, 5.409999999095305e-07...</msg>
<status status="PASS" starttime="20201029 18:20:09.507" endtime="20201029 18:20:09.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.513" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:20:09.512" endtime="20201029 18:20:09.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.516" level="INFO">VALUE: [0.100026334, 0.10000869500000001, 0.100008708, 5.419999999922709e-07, 0.10000927800000003, 0.100009236, 5.410000000205528e-07, 0.10000924999999983, 0.10000922300000004, 5.409999999095305e-07, 0.10000926399999988, 0.10000930600000002, 0.100009236, 5.409999999095305e-07, 0.10000922300000026, 0.10000922200000018, 0.10000869400000001, 0.10000922200000018, 0.10000870799999984, 0.10000925000000027, 0.10000923700000008, 0.10000922199999973, 0.10000922199999973, 0.100009236, 0.10000869400000001, 0.10000869400000045, 0.10000919500000016, 0.10000924999999938, 0.10000930500000038, 0.100009236, 0.10000925000000027]</msg>
<status status="PASS" starttime="20201029 18:20:09.515" endtime="20201029 18:20:09.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.510" endtime="20201029 18:20:09.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:03.002" endtime="20201029 18:20:09.517"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:02.929" endtime="20201029 18:20:09.517" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:20:09.525" endtime="20201029 18:20:09.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.522" endtime="20201029 18:20:09.545"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.558" endtime="20201029 18:20:09.574"></status>
</kw>
<msg timestamp="20201029 18:20:09.575" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:09.556" endtime="20201029 18:20:09.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.577" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['esp32-wroom-32', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:09.576" endtime="20201029 18:20:09.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:20:09.580" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:20:09.578" endtime="20201029 18:20:09.581"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:09.554" endtime="20201029 18:20:09.581"></status>
</kw>
<status status="FAIL" starttime="20201029 18:20:09.552" endtime="20201029 18:20:09.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.550" endtime="20201029 18:20:09.582"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:20:09.586" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:20:09.585" endtime="20201029 18:20:09.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.583" endtime="20201029 18:20:09.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.550" endtime="20201029 18:20:09.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.549" endtime="20201029 18:20:09.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.587" endtime="20201029 18:20:09.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.548" endtime="20201029 18:20:09.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.546" endtime="20201029 18:20:09.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.521" endtime="20201029 18:20:09.590"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:09.598" endtime="20201029 18:20:15.725"></status>
</kw>
<msg timestamp="20201029 18:20:15.726" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:09.597" endtime="20201029 18:20:15.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.733" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:20:15.728" endtime="20201029 18:20:15.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.736" endtime="20201029 18:20:15.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.594" endtime="20201029 18:20:15.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.592" endtime="20201029 18:20:15.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:15.749" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201029 18:20:15.744" endtime="20201029 18:20:15.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.762" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:15.759" endtime="20201029 18:20:15.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.768" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:20:15.766" endtime="20201029 18:20:15.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.751" endtime="20201029 18:20:15.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.777" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:20:15.775" endtime="20201029 18:20:15.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.782" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:20:15.779" endtime="20201029 18:20:15.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.771" endtime="20201029 18:20:15.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.791" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:20:15.789" endtime="20201029 18:20:15.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:15.796" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 18:20:15.793" endtime="20201029 18:20:15.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.785" endtime="20201029 18:20:15.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:15.811" endtime="20201029 18:20:16.098"></status>
</kw>
<msg timestamp="20201029 18:20:16.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062357097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162383153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:15.808" endtime="20201029 18:20:16.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062357097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162383153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:20:16.101" endtime="20201029 18:20:16.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:20:16.107" endtime="20201029 18:20:16.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.802" endtime="20201029 18:20:16.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:15.799" endtime="20201029 18:20:16.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:20:16.113" level="INFO">${FILTERED} = [{'diff': 0.100026056}, {'diff': 0.100009236}, {'diff': 0.10000922299999998}, {'diff': 0.10000872299999997}, {'diff': 0.10000922199999995}, {'diff': 0.10000870800000006}, {'diff': 5.419999999922709e-0...</msg>
<status status="PASS" starttime="20201029 18:20:16.111" endtime="20201029 18:20:16.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:20:16.117" level="INFO">${RESULT} = {'diff': [0.100026056, 0.100009236, 0.10000922299999998, 0.10000872299999997, 0.10000922199999995, 0.10000870800000006, 5.419999999922709e-07, 0.10000922199999995, 0.10000870799999984, 0.100009236, 0....</msg>
<status status="PASS" starttime="20201029 18:20:16.114" endtime="20201029 18:20:16.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.122" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:20:16.121" endtime="20201029 18:20:16.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:20:16.124" level="INFO">VALUE: [0.100026056, 0.100009236, 0.10000922299999998, 0.10000872299999997, 0.10000922199999995, 0.10000870800000006, 5.419999999922709e-07, 0.10000922199999995, 0.10000870799999984, 0.100009236, 0.10000925000000005, 0.10000930499999994, 5.419999999922709e-07, 0.1000092640000001, 5.419999999922709e-07, 0.10000924999999983, 5.409999999095305e-07, 0.10000913899999997, 0.10000869400000001, 0.10000869400000001, 0.10000876400000003, 0.100009236, 0.10000872199999966, 0.10000922299999981, 0.10000869499999965, 0.10000869499999965, 0.10000873600000038, 0.100009236, 0.100009236, 5.419999995481817e-07, 0.1000092369999992, 0.1000087220000001, 5.410000003536197e-07, 0.10000925000000027]</msg>
<status status="PASS" starttime="20201029 18:20:16.123" endtime="20201029 18:20:16.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:16.118" endtime="20201029 18:20:16.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:20:09.591" endtime="20201029 18:20:16.125"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_esp32-wroom-32</tag>
</tags>
<status status="PASS" starttime="20201029 18:20:09.519" endtime="20201029 18:20:16.126" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:19:34.090" endtime="20201029 18:20:16.133"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">esp32-wroom-32</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 18:17:25.689" endtime="20201029 18:20:16.167"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_esp32-wroom-32</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
